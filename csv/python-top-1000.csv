title,viewcount,title,body,body,acceptedanswerid
"Parse String to Float or Int","2631612","","<p>In Python, how can I parse a numeric string like <code>""545.2222""</code> to its corresponding float value, <code>542.2222</code>? Or parse the string <code>""31""</code> to an integer, <code>31</code>?</p>

<p>I just want to know how to parse a <em>float</em> <code>string</code> to a <code>float</code>, and (separately) an <em>int</em> <code>string</code> to an <code>int</code>.</p>
","<pre><code>&gt;&gt;&gt; a = ""545.2222""
&gt;&gt;&gt; float(a)
545.22220000000004
&gt;&gt;&gt; int(float(a))
545
</code></pre>
","379910"
"Iterating over dictionaries using 'for' loops","2378112","","<p>I am a bit puzzled by the following code:</p>

<pre><code>d = {'x': 1, 'y': 2, 'z': 3} 
for key in d:
    print key, 'corresponds to', d[key]
</code></pre>

<p>What I don't understand is the <code>key</code> portion. How does Python recognize that it needs only to read the key from the dictionary? Is <code>key</code> a special word in Python? Or is it simply a variable?</p>
","<p><code>key</code> is just a variable name.  </p>

<pre><code>for key in d:
</code></pre>

<p>will simply loop over the keys in the dictionary, rather than the keys and values.  To loop over both key and value you can use the following:</p>

<p>For Python 2.x:</p>

<pre><code>for key, value in d.iteritems():
</code></pre>

<p>For Python 3.x:</p>

<pre><code>for key, value in d.items():
</code></pre>

<p>To test for yourself, change the word <code>key</code> to <code>poop</code>.</p>

<p>For Python 3.x, <code>iteritems()</code> has been replaced with simply <code>items()</code>, which returns a set-like view backed by the dict, like <code>iteritems()</code> but even better. 
This is also available in 2.7 as <code>viewitems()</code>. </p>

<p>The operation <code>items()</code> will work for both 2 and 3, but in 2 it will return a list of the dictionary's <code>(key, value)</code> pairs, which will not reflect changes to the dict that happen after the <code>items()</code> call. If you want the 2.x behavior in 3.x, you can call <code>list(d.items())</code>.</p>
","3294899"
"Using global variables in a function other than the one that created them","2375049","","<p>If I create a global variable in one function, how can I use that variable in another function?<br>
Do I need to store the global variable in a local variable of the function which needs its access?</p>
","<p>You can use a global variable in other functions by declaring it as <code>global</code> in each function that assigns to it:</p>

<pre><code>globvar = 0

def set_globvar_to_one():
    global globvar    # Needed to modify global copy of globvar
    globvar = 1

def print_globvar():
    print(globvar)     # No need for global declaration to read value of globvar

set_globvar_to_one()
print_globvar()       # Prints 1
</code></pre>

<p>I imagine the reason for it is that, since global variables are so dangerous, Python wants to make sure that you really know that's what you're playing with by explicitly requiring the <code>global</code> keyword.</p>

<p>See other answers if you want to share a global variable across modules.</p>
","423596"
"Calling an external command in Python","2264040","","<p>How can I call an external command (as if I'd typed it at the Unix shell or Windows command prompt) from within a Python script?</p>
","<p>Look at the <a href=""https://docs.python.org/2/library/subprocess.html"" rel=""noreferrer"">subprocess module</a> in the standard library:</p>

<pre><code>from subprocess import call
call([""ls"", ""-l""])
</code></pre>

<p>The advantage of <strong>subprocess</strong> vs <strong>system</strong> is that it is more flexible (you can get the stdout, stderr, the ""real"" status code, better error handling, etc...). </p>

<p>The <a href=""https://docs.python.org/library/os.html#os.system"" rel=""noreferrer"">official docs</a> recommend the <strong>subprocess</strong> module over the alternative os.system():</p>

<blockquote>
  <p>The <strong>subprocess</strong> module provides more powerful facilities for spawning new processes and retrieving their results; using that module is preferable to using this function [<a href=""https://docs.python.org/library/os.html#os.system"" rel=""noreferrer""><code>os.system()</code></a>].</p>
</blockquote>

<p>The ""<a href=""https://docs.python.org/2/library/subprocess.html#replacing-older-functions-with-the-subprocess-module"" rel=""noreferrer"">Replacing Older Functions with the subprocess Module</a>"" section in the <strong>subprocess</strong> documentation may have some helpful recipes.</p>

<p>Official documentation on the <strong>subprocess</strong> module:</p>

<ul>
<li><a href=""https://docs.python.org/2/library/subprocess.html#module-subprocess"" rel=""noreferrer"">Python 2 - subprocess</a></li>
<li><a href=""https://docs.python.org/3/library/subprocess.html#module-subprocess"" rel=""noreferrer"">Python 3 - subprocess</a></li>
</ul>
","89243"
"Converting integer to string in Python?","2136865","","<p>I want to convert an integer to a string in Python. I am typecasting it in vain:</p>

<pre><code>t=raw_input()
c=[]
for j in range(0,int(t)):
    n=raw_input()
    a=[]
    a,b= (int(i) for i in n.split(' '))
    d=pow(a,b)
    d.str()
    c.append(d[0])
for j in c:
    print j
</code></pre>

<p>When I try to convert it to string, it's showing an error like <code>int</code> doesn't have any attribute called <code>str</code>.</p>
","<pre><code>&gt;&gt;&gt; str(10)
'10'
&gt;&gt;&gt; int('10')
10
</code></pre>

<p>Links to the documentation:</p>

<ul>
<li><a href=""https://docs.python.org/2/library/functions.html#int"" rel=""noreferrer""><code>int()</code></a>  </li>
<li><a href=""https://docs.python.org/2/library/functions.html#str"" rel=""noreferrer""><code>str()</code></a></li>
</ul>

<p>The problem seems to come from this line: <code>d.str()</code>. </p>

<p>Conversion to a string is done with the builtin <code>str()</code> function, which basically calls the <code>__str__()</code> method of its parameter.</p>

<p>Also, it shouldn't be necessary to call <code>pow()</code>. Try using the <code>**</code> operator.</p>
","961638"
"Does Python have a string 'contains' substring method?","2121835","","<p>I'm looking for a <code>string.contains</code> or <code>string.indexof</code> method in Python.</p>

<p>I want to do:</p>

<pre><code>if not somestring.contains(""blah""):
   continue
</code></pre>
","<p>You can use the <a href=""https://docs.python.org/reference/expressions.html#membership-test-details"" rel=""noreferrer""><code>in</code> operator</a>:</p>

<pre><code>if ""blah"" not in somestring: 
    continue
</code></pre>
","3437070"
"Finding the index of an item given a list containing it in Python","2108507","","<p>For a list <code>[""foo"", ""bar"", ""baz""]</code> and an item in the list <code>""bar""</code>, what's the cleanest way to get its index (1) in Python?</p>
","<pre><code>&gt;&gt;&gt; [""foo"", ""bar"", ""baz""].index(""bar"")
1
</code></pre>

<p>Reference: <a href=""http://docs.python.org/2/tutorial/datastructures.html#more-on-lists"" rel=""noreferrer"">Data Structures > More on Lists</a></p>
","176921"
"How do I install pip on Windows?","2072857","","<p><a href=""https://pip.pypa.io/en/stable/"" rel=""noreferrer""><code>pip</code></a> is a replacement for <a href=""http://setuptools.readthedocs.io/en/latest/easy_install.html"" rel=""noreferrer""><code>easy_install</code></a>. But should I install <code>pip</code> using <code>easy_install</code> on Windows?  Is there a better way?</p>
","<h2>Python 2.7.9+ and 3.4+</h2>

<p>Good news! <a href=""https://docs.python.org/3/whatsnew/3.4.html"" rel=""noreferrer"">Python 3.4</a> (released March 2014) and <a href=""https://docs.python.org/2/whatsnew/2.7.html#pep-477-backport-ensurepip-pep-453-to-python-2-7"" rel=""noreferrer"">Python 2.7.9</a> (released December 2014) ship with Pip. This is the best feature of any Python release. It makes the community's wealth of libraries accessible to everyone. Newbies are no longer excluded from using community libraries by the prohibitive difficulty of setup. In shipping with a package manager, Python joins <a href=""http://en.wikipedia.org/wiki/Ruby_%28programming_language%29"" rel=""noreferrer"">Ruby</a>, <a href=""http://en.wikipedia.org/wiki/Node.js"" rel=""noreferrer"">Node.js</a>, <a href=""http://en.wikipedia.org/wiki/Haskell_%28programming_language%29"" rel=""noreferrer"">Haskell</a>, <a href=""http://en.wikipedia.org/wiki/Perl"" rel=""noreferrer"">Perl</a>, <a href=""http://en.wikipedia.org/wiki/Go_%28programming_language%29"" rel=""noreferrer"">Go</a>--almost every other contemporary language with a majority open-source community. Thank you Python.</p>

<p>Of course, that doesn't mean Python packaging is problem solved. The experience remains frustrating. I discuss this <a href=""https://stackoverflow.com/questions/2436731/does-python-have-a-package-module-management-system/13445719#13445719"">in Stack Overflow question <em>Does Python have a package/module management system?</em></a>.</p>

<p>And, alas for everyone using Python 2.7.8 or earlier (a sizable portion of the community). There's no plan to ship Pip to you. Manual instructions follow.</p>

<h2>Python 2 ≤ 2.7.8 and Python 3 ≤ 3.3</h2>

<p>Flying in the face of its <a href=""http://www.python.org/about/"" rel=""noreferrer"">'batteries included'</a> motto, Python ships without a package manager. To make matters worse, Pip was--until recently--ironically difficult to install.</p>

<h3>Official instructions</h3>

<p>Per <a href=""https://pip.pypa.io/en/stable/installing/#do-i-need-to-install-pip"" rel=""noreferrer"">https://pip.pypa.io/en/stable/installing/#do-i-need-to-install-pip</a>:</p>

<p>Download <a href=""https://bootstrap.pypa.io/get-pip.py"" rel=""noreferrer""><code>get-pip.py</code></a>, being careful to save it as a <code>.py</code> file rather than <code>.txt</code>. Then, run it from the command prompt:</p>

<pre><code>python get-pip.py
</code></pre>

<p>You possibly need an administrator command prompt to do this. Follow <em><a href=""http://technet.microsoft.com/en-us/library/cc947813(v=ws.10).aspx"" rel=""noreferrer"">Start a Command Prompt as an Administrator</a></em> (Microsoft TechNet).</p>

<p>This installs the pip package, which (in Windows) contains ...\Scripts\pip.exe that path must be in PATH environment variable to use pip from the command line (see second part of 'Alternative Instructions' for adding it to your PATH,</p>

<h3>Alternative instructions</h3>

<p>The official documentation tells users to install Pip and each of its dependencies from source. That's tedious for the experienced, and prohibitively difficult for newbies.</p>

<p>For our sake, Christoph Gohlke prepares Windows installers (<code>.msi</code>) for popular Python packages. He builds installers for all Python versions, both 32 and 64 bit. You need to:</p>

<ol>
<li><a href=""http://www.lfd.uci.edu/~gohlke/pythonlibs/#setuptools"" rel=""noreferrer"">Install setuptools</a></li>
<li><a href=""http://www.lfd.uci.edu/~gohlke/pythonlibs/#pip"" rel=""noreferrer"">Install pip</a></li>
</ol>

<p>For me, this installed Pip at <code>C:\Python27\Scripts\pip.exe</code>. Find <code>pip.exe</code> on your computer, then add its folder (for example, <code>C:\Python27\Scripts</code>) to your path (Start / Edit environment variables). Now you should be able to run <code>pip</code> from the command line. Try installing a package:</p>

<pre><code>pip install httpie
</code></pre>

<p>There you go (hopefully)! Solutions for common problems are given below:</p>

<h3>Proxy problems</h3>

<p>If you work in an office, you might be behind a HTTP proxy. If so, set the environment variables <a href=""http://docs.python.org/2/library/urllib.html"" rel=""noreferrer""><code>http_proxy</code> and <code>https_proxy</code></a>. Most Python applications (and other free software) respect these. Example syntax:</p>

<pre><code>http://proxy_url:port
http://username:password@proxy_url:port
</code></pre>

<p>If you're really unlucky, your proxy might be a Microsoft <a href=""https://en.wikipedia.org/wiki/NT_LAN_Manager"" rel=""noreferrer"">NTLM</a> proxy. Free software can't cope. The only solution is to install a free software friendly proxy that forwards to the nasty proxy. <a href=""http://cntlm.sourceforge.net/"" rel=""noreferrer"">http://cntlm.sourceforge.net/</a></p>

<h3>Unable to find vcvarsall.bat</h3>

<p>Python modules can be part written in C or C++. Pip tries to compile from source. If you don't have a C/C++ compiler installed and configured, you'll see this cryptic error message.</p>

<blockquote>
  <p>Error: Unable to find vcvarsall.bat</p>
</blockquote>

<p>You can fix that by <a href=""https://stackoverflow.com/questions/2817869/error-unable-to-find-vcvarsall-bat"">installing a C++ compiler</a> such as <a href=""http://en.wikipedia.org/wiki/MinGW"" rel=""noreferrer"">MinGW</a> or <a href=""http://en.wikipedia.org/wiki/Visual_C%2B%2B#32-bit_versions"" rel=""noreferrer"">Visual C++</a>. Microsoft actually ship one specifically for use with Python. Or try <em><a href=""http://aka.ms/vcpython27"" rel=""noreferrer"">Microsoft Visual C++ Compiler for Python 2.7</a></em>.</p>

<p>Often though it's easier to check <a href=""http://www.lfd.uci.edu/~gohlke/pythonlibs/"" rel=""noreferrer"">Christoph's site</a> for your package.</p>
","12476379"
"How to get the number of elements in a list in Python?","2061061","","<pre><code>items = []
items.append(""apple"")
items.append(""orange"")
items.append(""banana"")

# FAKE METHOD::
items.amount()  # Should return 3
</code></pre>

<p>How do I get the number of elements in the list?</p>
","<p>The <a href=""https://docs.python.org/2/library/functions.html#len"" rel=""noreferrer"" title=""len()""><code>len()</code></a> function can be used with a lot of types in <a href=""http://en.wikipedia.org/wiki/Python_%28programming_language%29"" rel=""noreferrer"">Python</a> - both built-in types and library types.</p>

<pre><code>&gt;&gt;&gt; len([1,2,3])
3
</code></pre>
","1712236"
"Difference between append vs. extend list methods in Python","1894191","","<p>What's the difference between the list methods <code>append()</code> and <code>extend()</code>?</p>
","<p><a href=""https://docs.python.org/2/library/array.html?#array.array.append"" rel=""noreferrer""><code>append</code></a>: Appends object at end.</p>

<pre><code>x = [1, 2, 3]
x.append([4, 5])
print (x)
</code></pre>

<p>gives you: <code>[1, 2, 3, [4, 5]]</code></p>

<hr>

<p><a href=""https://docs.python.org/2/library/array.html?#array.array.extend"" rel=""noreferrer""><code>extend</code></a>: Extends list by appending elements from the iterable.</p>

<pre><code>x = [1, 2, 3]
x.extend([4, 5])
print (x)
</code></pre>

<p>gives you: <code>[1, 2, 3, 4, 5]</code></p>
","252711"
"Add new keys to a dictionary?","1846547","","<p>Is it possible to add a key to a Python dictionary after it has been created? It doesn't seem to have an <code>.add()</code> method.</p>
","<pre><code>&gt;&gt;&gt; d = {'key':'value'}
&gt;&gt;&gt; print(d)
{'key': 'value'}
&gt;&gt;&gt; d['mynewkey'] = 'mynewvalue'
&gt;&gt;&gt; print(d)
{'mynewkey': 'mynewvalue', 'key': 'value'}
</code></pre>
","1024851"
"Check if a given key already exists in a dictionary","1819050","","<p>I wanted to test if a key exists in a dictionary before updating the value for the key.
I wrote the following code:</p>

<pre><code>if 'key1' in dict.keys():
  print ""blah""
else:
  print ""boo""
</code></pre>

<p>I think this is not the best way to accomplish this task. Is there a better way to test for a key in the dictionary?</p>
","<p><code>in</code> is the intended way to test for the existence of a key in a <code>dict</code>.</p>

<pre><code>d = dict()

for i in xrange(100):
    key = i % 10
    if key in d:
        d[key] += 1
    else:
        d[key] = 1
</code></pre>

<p>If you wanted a default, you can always use <code>dict.get()</code>:</p>

<pre><code>d = dict()

for i in xrange(100):
    key = i % 10
    d[key] = d.get(key, 0) + 1
</code></pre>

<p>... and if you wanted to always ensure a default value for any key you can use <code>defaultdict</code> from the <code>collections</code> module, like so:</p>

<pre><code>from collections import defaultdict

d = defaultdict(lambda: 0)

for i in xrange(100):
    d[i % 10] += 1
</code></pre>

<p>... but in general, the <code>in</code> keyword is the best way to do it.</p>
","1602964"
"How to get current time in Python?","1763245","","<p>What is the module/method used to get current time?</p>
","<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; datetime.datetime.now()
datetime(2009, 1, 6, 15, 8, 24, 78915)
</code></pre>

<p>And just the time:</p>

<pre><code>&gt;&gt;&gt; datetime.datetime.time(datetime.datetime.now())
datetime.time(15, 8, 24, 78915)
</code></pre>

<p>The same but slightly more compact:</p>

<pre><code>&gt;&gt;&gt; datetime.datetime.now().time()
</code></pre>

<p>See the <a href=""https://docs.python.org/3/library/datetime.html"" rel=""noreferrer""><strong>documentation</strong></a> for more info.</p>

<p>To save typing, you can import the <code>datetime</code> object from the <code>datetime</code> module:</p>

<pre><code>&gt;&gt;&gt; from datetime import datetime
</code></pre>

<p>Then remove the leading <code>datetime.</code> from all the above.</p>
","415519"
"Is there a way to substring a string in Python?","1745035","","<p>Is there a way to substring a string in Python, to get a new string from the 3rd character to the end of the string?</p>

<p>Maybe like <code>myString[2:end]</code>?</p>

<p>If leaving the second part means 'till the end', if you leave the first part, does it start from the start?</p>
","<pre><code>&gt;&gt;&gt; x = ""Hello World!""
&gt;&gt;&gt; x[2:]
'llo World!'
&gt;&gt;&gt; x[:2]
'He'
&gt;&gt;&gt; x[:-2]
'Hello Worl'
&gt;&gt;&gt; x[-2:]
'd!'
&gt;&gt;&gt; x[2:-2]
'llo Worl'
</code></pre>

<p>Python calls this concept ""slicing"" and it works on more than just strings. Take a look <a href=""https://stackoverflow.com/questions/509211/good-primer-for-python-slice-notation"">here</a> for a comprehensive introduction.</p>
","663175"
"Parsing values from a JSON file?","1611074","","<p>I have this JSON in a file:</p>

<pre class=""lang-json prettyprint-override""><code>{
    ""maps"": [
        {
            ""id"": ""blabla"",
            ""iscategorical"": ""0""
        },
        {
            ""id"": ""blabla"",
            ""iscategorical"": ""0""
        }
    ],
    ""masks"": [
        ""id"": ""valore""
    ],
    ""om_points"": ""value"",
    ""parameters"": [
        ""id"": ""valore""
    ]
}
</code></pre>

<p>I wrote this script which prints all of the json text:</p>

<pre><code>json_data=open(file_directory).read()

data = json.loads(json_data)
pprint(data)
</code></pre>

<p>How can I parse the file and extract single values?</p>
","<p>I think what Ignacio is saying is that your JSON file is incorrect. You have <code>[]</code> when you should have <code>{}</code>. <code>[]</code> are for lists, <code>{}</code> are for dictionaries.</p>

<p>Here's how your JSON file should look, your JSON file wouldn't even load for me:</p>

<pre><code>{
    ""maps"": [
        {
            ""id"": ""blabla"",
            ""iscategorical"": ""0""
        },
        {
            ""id"": ""blabla"",
            ""iscategorical"": ""0""
        }
    ],
    ""masks"": {
        ""id"": ""valore""
    },
    ""om_points"": ""value"",
    ""parameters"": {
        ""id"": ""valore""
    }
}
</code></pre>

<p>Then you can use your code:</p>

<pre><code>import json
from pprint import pprint

data = json.load(open('data.json'))

pprint(data)
</code></pre>

<p>With data, you can now also find values like so:</p>

<pre><code>data[""maps""][0][""id""]
data[""masks""][""id""]
data[""om_points""]
</code></pre>

<p>Try those out and see if it starts to make sense.</p>
","2835672"
"How to remove an element from a list by index in Python?","1582260","","<p>How to remove an element from a list by index in Python?</p>

<p>I found the <code>list.remove</code> method, but say I want to remove the last element, how do I do this? It seems like the default remove searches the list, but I don't want any search to be performed.</p>
","<p>Use <code>del</code> and specify the element you want to delete with the index:</p>

<pre><code>In [9]: a = list(range(10))
In [10]: a
Out[10]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
In [11]: del a[-1]
In [12]: a
Out[12]: [0, 1, 2, 3, 4, 5, 6, 7, 8]
</code></pre>

<p><a href=""http://docs.python.org/tutorial/datastructures.html#the-del-statement"" rel=""noreferrer"">Here</a> is the section from the tutorial.</p>
","627453"
"How can I create a directory if it does not exist?","1579827","","<p>What is the most elegant way to check if the directory a file is going to be written to exists, and if not, create the directory using Python? Here is what I tried:</p>

<pre><code>import os

file_path = ""/my/directory/filename.txt""
directory = os.path.dirname(file_path)

try:
    os.stat(directory)
except:
    os.mkdir(directory)       

f = file(filename)
</code></pre>

<p>Somehow, I missed <code>os.path.exists</code> (thanks kanja, Blair, and Douglas). This is what I have now:</p>

<pre><code>def ensure_dir(file_path):
    directory = os.path.dirname(file_path)
    if not os.path.exists(directory):
        os.makedirs(directory)
</code></pre>

<p>Is there a flag for ""open"", that makes this happen automatically?</p>
","<p>I see two answers with good qualities, each with a small flaw, so I will give my take on it:</p>

<p>Try <a href=""https://docs.python.org/2/library/os.path.html#os.path.exists"" rel=""noreferrer""><code>os.path.exists</code></a>, and consider <a href=""https://docs.python.org/2/library/os.html#os.makedirs"" rel=""noreferrer""><code>os.makedirs</code></a> for the creation.</p>

<pre><code>if not os.path.exists(directory):
    os.makedirs(directory)
</code></pre>

<p>As noted in comments and elsewhere, there's a race condition - if the directory is created between the <code>os.path.exists</code> and the <code>os.makedirs</code> calls, the <code>os.makedirs</code> will fail with an <code>OSError</code>. Unfortunately, blanket-catching <code>OSError</code> and continuing is not foolproof, as it will ignore a failure to create the directory due to other factors, such as insufficient permissions, full disk, etc.</p>

<p>One option would be to trap the <code>OSError</code> and examine the embedded error code (see <a href=""https://stackoverflow.com/questions/273698/is-there-a-cross-platform-way-of-getting-information-from-pythons-oserror"">Is there a cross-platform way of getting information from Python’s OSError</a>):</p>

<pre><code>import os, errno

try:
    os.makedirs(directory)
except OSError as e:
    if e.errno != errno.EEXIST:
        raise
</code></pre>

<p>Alternatively, there could be a second <code>os.path.exists</code>, but suppose another created the directory after the first check, then removed it before the second one - we could still be fooled. </p>

<p>Depending on the application, the danger of concurrent operations may be more or less than the danger posed by other factors such as file permissions. The developer would have to know more about the particular application being developed and its expected environment before choosing an implementation.</p>
","273227"
"How do I sort a dictionary by value?","1557109","","<p>I have a dictionary of values read from two fields in a database: a string field and a numeric field. The string field is unique, so that is the key of the dictionary.</p>

<p>I can sort on the keys, but how can I sort based on the values?</p>

<p>Note: I have read Stack Overflow question <em><a href=""https://stackoverflow.com/questions/72899"">How do I sort a list of dictionaries by values of the dictionary in Python?</a></em> and probably could change my code to have a list of dictionaries, but since I do not really need a list of dictionaries I wanted to know if there is a simpler solution.</p>
","<p>It is not possible to sort a dict, only to get a representation of a dict that is sorted. Dicts are inherently orderless, but other types, such as lists and tuples, are not. So you need an ordered data type to represent sorted values, which will be a list—probably a list of tuples.</p>

<p>For instance,</p>

<pre><code>import operator
x = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}
sorted_x = sorted(x.items(), key=operator.itemgetter(1))
</code></pre>

<p><code>sorted_x</code> will be a list of tuples sorted by the second element in each tuple. <code>dict(sorted_x) == x</code>.</p>

<p>And for those wishing to sort on keys instead of values:</p>

<pre><code>import operator
x = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}
sorted_x = sorted(x.items(), key=operator.itemgetter(0))
</code></pre>
","613218"
"What does the ""yield"" keyword do?","1550063","","<p>What is the use of the <code>yield</code> keyword in Python? What does it do?</p>

<p>For example, I'm trying to understand this code<sup><strong>1</strong></sup>:</p>

<pre><code>def _get_child_candidates(self, distance, min_dist, max_dist):
    if self._leftchild and distance - max_dist &lt; self._median:
        yield self._leftchild
    if self._rightchild and distance + max_dist &gt;= self._median:
        yield self._rightchild  
</code></pre>

<p>And this is the caller:</p>

<pre><code>result, candidates = [], [self]
while candidates:
    node = candidates.pop()
    distance = node._get_dist(obj)
    if distance &lt;= max_dist and distance &gt;= min_dist:
        result.extend(node._values)
    candidates.extend(node._get_child_candidates(distance, min_dist, max_dist))
return result
</code></pre>

<p>What happens when the method <code>_get_child_candidates</code> is called?
Is a list returned? A single element? Is it called again? When will subsequent calls stop?</p>

<hr>

<p><sub>
1. The code comes from Jochen Schulz (jrschulz), who made a great Python library for metric spaces. This is the link to the complete source: <a href=""http://well-adjusted.de/~jrschulz/mspace/"" rel=""noreferrer"">Module mspace</a>.</sub></p>
","<p>To understand what <code>yield</code> does, you must understand what <em>generators</em> are. And before generators come <em>iterables</em>.</p>

<h2>Iterables</h2>

<p>When you create a list, you can read its items one by one. Reading its items one by one is called iteration:</p>

<pre><code>&gt;&gt;&gt; mylist = [1, 2, 3]
&gt;&gt;&gt; for i in mylist:
...    print(i)
1
2
3
</code></pre>

<p><code>mylist</code> is an <em>iterable</em>. When you use a list comprehension, you create a list, and so an iterable:</p>

<pre><code>&gt;&gt;&gt; mylist = [x*x for x in range(3)]
&gt;&gt;&gt; for i in mylist:
...    print(i)
0
1
4
</code></pre>

<p>Everything you can use ""<code>for... in...</code>"" on is an iterable; <code>lists</code>, <code>strings</code>, files...</p>

<p>These iterables are handy because you can read them as much as you wish, but you store all the values in memory and this is not always what you want when you have a lot of values.</p>

<h2>Generators</h2>

<p>Generators are iterators, a kind of iterable <strong>you can only iterate over once</strong>. Generators do not store all the values in memory, <strong>they generate the values on the fly</strong>:</p>

<pre><code>&gt;&gt;&gt; mygenerator = (x*x for x in range(3))
&gt;&gt;&gt; for i in mygenerator:
...    print(i)
0
1
4
</code></pre>

<p>It is just the same except you used <code>()</code> instead of <code>[]</code>. BUT, you <strong>cannot</strong> perform <code>for i in mygenerator</code> a second time since generators can only be used once: they calculate 0, then forget about it and calculate 1, and end calculating 4, one by one.</p>

<h2>Yield</h2>

<p><code>yield</code> is a keyword that is used like <code>return</code>, except the function will return a generator.</p>

<pre><code>&gt;&gt;&gt; def createGenerator():
...    mylist = range(3)
...    for i in mylist:
...        yield i*i
...
&gt;&gt;&gt; mygenerator = createGenerator() # create a generator
&gt;&gt;&gt; print(mygenerator) # mygenerator is an object!
&lt;generator object createGenerator at 0xb7555c34&gt;
&gt;&gt;&gt; for i in mygenerator:
...     print(i)
0
1
4
</code></pre>

<p>Here it's a useless example, but it's handy when you know your function will return a huge set of values that you will only need to read once.</p>

<p>To master <code>yield</code>, you must understand that <strong>when you call the function, the code you have written in the function body does not run.</strong> The function only returns the generator object, this is a bit tricky :-)</p>

<p>Then, your code will be run each time the <code>for</code> uses the generator.</p>

<p>Now the hard part:</p>

<p>The first time the <code>for</code> calls the generator object created from your function, it will run the code in your function from the beginning until it hits <code>yield</code>, then it'll return the first value of the loop. Then, each other call will run the loop you have written in the function one more time, and return the next value, until there is no value to return.</p>

<p>The generator is considered empty once the function runs but does not hit <code>yield</code> anymore. It can be because the loop had come to an end, or because you do not satisfy an <code>""if/else""</code> anymore.</p>

<hr>

<h2>Your code explained</h2>

<p>Generator:</p>

<pre><code># Here you create the method of the node object that will return the generator
def _get_child_candidates(self, distance, min_dist, max_dist):

    # Here is the code that will be called each time you use the generator object:

    # If there is still a child of the node object on its left
    # AND if distance is ok, return the next child
    if self._leftchild and distance - max_dist &lt; self._median:
        yield self._leftchild

    # If there is still a child of the node object on its right
    # AND if distance is ok, return the next child
    if self._rightchild and distance + max_dist &gt;= self._median:
        yield self._rightchild

    # If the function arrives here, the generator will be considered empty
    # there is no more than two values: the left and the right children
</code></pre>

<p>Caller:</p>

<pre><code># Create an empty list and a list with the current object reference
result, candidates = list(), [self]

# Loop on candidates (they contain only one element at the beginning)
while candidates:

    # Get the last candidate and remove it from the list
    node = candidates.pop()

    # Get the distance between obj and the candidate
    distance = node._get_dist(obj)

    # If distance is ok, then you can fill the result
    if distance &lt;= max_dist and distance &gt;= min_dist:
        result.extend(node._values)

    # Add the children of the candidate in the candidates list
    # so the loop will keep running until it will have looked
    # at all the children of the children of the children, etc. of the candidate
    candidates.extend(node._get_child_candidates(distance, min_dist, max_dist))

return result
</code></pre>

<p>This code contains several smart parts:</p>

<ul>
<li><p>The loop iterates on a list but the list expands while the loop is being iterated :-) It's a concise way to go through all these nested data even if it's a bit dangerous since you can end up with an infinite loop. In this case, <code>candidates.extend(node._get_child_candidates(distance, min_dist, max_dist))</code> exhausts all the values of the generator, but <code>while</code> keeps creating new generator objects which will produce different values from the previous ones since it's not applied on the same node.</p></li>
<li><p>The <code>extend()</code> method is a list object method that expects an iterable and adds its values to the list.</p></li>
</ul>

<p>Usually we pass a list to it:</p>

<pre><code>&gt;&gt;&gt; a = [1, 2]
&gt;&gt;&gt; b = [3, 4]
&gt;&gt;&gt; a.extend(b)
&gt;&gt;&gt; print(a)
[1, 2, 3, 4]
</code></pre>

<p>But in your code it gets a generator, which is good because:</p>

<ol>
<li>You don't need to read the values twice.</li>
<li>You may have a lot of children and you don't want them all stored in memory.</li>
</ol>

<p>And it works because Python does not care if the argument of a method is a list or not. Python expects iterables so it will work with strings, lists, tuples and generators! This is called duck typing and is one of the reason why Python is so cool. But this is another story, for another question...</p>

<p>You can stop here, or read a little bit to see an advanced use of a generator:</p>

<h2>Controlling a generator exhaustion</h2>

<pre><code>&gt;&gt;&gt; class Bank(): # let's create a bank, building ATMs
...    crisis = False
...    def create_atm(self):
...        while not self.crisis:
...            yield ""$100""
&gt;&gt;&gt; hsbc = Bank() # when everything's ok the ATM gives you as much as you want
&gt;&gt;&gt; corner_street_atm = hsbc.create_atm()
&gt;&gt;&gt; print(corner_street_atm.next())
$100
&gt;&gt;&gt; print(corner_street_atm.next())
$100
&gt;&gt;&gt; print([corner_street_atm.next() for cash in range(5)])
['$100', '$100', '$100', '$100', '$100']
&gt;&gt;&gt; hsbc.crisis = True # crisis is coming, no more money!
&gt;&gt;&gt; print(corner_street_atm.next())
&lt;type 'exceptions.StopIteration'&gt;
&gt;&gt;&gt; wall_street_atm = hsbc.create_atm() # it's even true for new ATMs
&gt;&gt;&gt; print(wall_street_atm.next())
&lt;type 'exceptions.StopIteration'&gt;
&gt;&gt;&gt; hsbc.crisis = False # trouble is, even post-crisis the ATM remains empty
&gt;&gt;&gt; print(corner_street_atm.next())
&lt;type 'exceptions.StopIteration'&gt;
&gt;&gt;&gt; brand_new_atm = hsbc.create_atm() # build a new one to get back in business
&gt;&gt;&gt; for cash in brand_new_atm:
...    print cash
$100
$100
$100
$100
$100
$100
$100
$100
$100
...
</code></pre>

<p><strong>Note:</strong> For Python3 use<code>print(corner_street_atm.__next__())</code> or <code>print(next(corner_street_atm))</code></p>

<p>It can be useful for various things like controlling access to a resource.</p>

<h2>Itertools, your best friend</h2>

<p>The itertools module contains special functions to manipulate iterables. Ever wish to duplicate a generator?
Chain two generators? Group values in a nested list with a one liner? <code>Map / Zip</code> without creating another list?</p>

<p>Then just <code>import itertools</code>.</p>

<p>An example? Let's see the possible orders of arrival for a 4 horse race:</p>

<pre><code>&gt;&gt;&gt; horses = [1, 2, 3, 4]
&gt;&gt;&gt; races = itertools.permutations(horses)
&gt;&gt;&gt; print(races)
&lt;itertools.permutations object at 0xb754f1dc&gt;
&gt;&gt;&gt; print(list(itertools.permutations(horses)))
[(1, 2, 3, 4),
 (1, 2, 4, 3),
 (1, 3, 2, 4),
 (1, 3, 4, 2),
 (1, 4, 2, 3),
 (1, 4, 3, 2),
 (2, 1, 3, 4),
 (2, 1, 4, 3),
 (2, 3, 1, 4),
 (2, 3, 4, 1),
 (2, 4, 1, 3),
 (2, 4, 3, 1),
 (3, 1, 2, 4),
 (3, 1, 4, 2),
 (3, 2, 1, 4),
 (3, 2, 4, 1),
 (3, 4, 1, 2),
 (3, 4, 2, 1),
 (4, 1, 2, 3),
 (4, 1, 3, 2),
 (4, 2, 1, 3),
 (4, 2, 3, 1),
 (4, 3, 1, 2),
 (4, 3, 2, 1)]
</code></pre>

<h2>Understanding the inner mechanisms of iteration</h2>

<p>Iteration is a process implying iterables (implementing the <code>__iter__()</code> method) and iterators (implementing the <code>__next__()</code> method).
Iterables are any objects you can get an iterator from. Iterators are objects that let you iterate on iterables.</p>

<p>More about it in this article about <a href=""http://effbot.org/zone/python-for-statement.htm"" rel=""noreferrer"">how does the for loop work</a>.</p>
","231855"
"Converting string into datetime","1464575","","<p>Short and simple. I've got a huge list of date-times like this as strings:</p>

<pre><code>Jun 1 2005  1:33PM
Aug 28 1999 12:00AM
</code></pre>

<p>I'm going to be shoving these back into proper datetime fields in a database so I need to magic them into real datetime objects. </p>

<p>Any help (even if it's just a kick in the right direction) would be appreciated.</p>

<p>Edit: This is going through Django's ORM so I can't use SQL to do the conversion on insert.</p>
","<pre><code>from datetime import datetime

datetime_object = datetime.strptime('Jun 1 2005  1:33PM', '%b %d %Y %I:%M%p')
</code></pre>

<p>The resulting <code>datetime</code> object is timezone-naive.</p>

<p>Links:</p>

<ul>
<li><p>Python documentation for <code>strptime</code>: <a href=""https://docs.python.org/2/library/datetime.html#datetime.datetime.strptime"" rel=""noreferrer"" title=""datetime.datetime.strptime"">Python 2</a>, <a href=""https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime"" rel=""noreferrer"">Python 3</a></p></li>
<li><p>Python documentation for <code>strftime</code> format mask: <a href=""https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior"" rel=""noreferrer"" title=""strftime-and-strptime-behavior"">Python 2</a>, <a href=""https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior"" rel=""noreferrer"">Python 3</a></p></li>
<li><p><a href=""http://strftime.org/"" rel=""noreferrer"">strftime.org</a> is also a really nice reference for strftime</p></li>
</ul>

<p>Notes:</p>

<ul>
<li><code>strptime</code> = ""string parse time""</li>
<li><code>strftime</code> = ""string format time""</li>
<li>Pronounce it out loud today &amp; you won't have to search for it again in 6 months.</li>
</ul>
","466376"
"What does if __name__ == ""__main__"": do?","1453860","","<p>What does the <code>if __name__ == ""__main__"":</code> do?</p>

<pre><code># Threading example
import time, thread

def myfunction(string, sleeptime, lock, *args):
    while True:
        lock.acquire()
        time.sleep(sleeptime)
        lock.release()
        time.sleep(sleeptime)

if __name__ == ""__main__"":
    lock = thread.allocate_lock()
    thread.start_new_thread(myfunction, (""Thread #: 1"", 2, lock))
    thread.start_new_thread(myfunction, (""Thread #: 2"", 2, lock))
</code></pre>
","<p>When the Python interpreter reads a source file, it executes all of the code found in it.  </p>

<p>Before executing the code, it will define a few special variables.  For example, if the python interpreter is running that module (the source file) as the main program, it sets the special <code>__name__</code> variable to have a value <code>""__main__""</code>.  If this file is being imported from another module, <code>__name__</code> will be set to the module's name.</p>

<p>In the case of your script, let's assume that it's executing as the main function, e.g. you said something like</p>

<pre><code>python threading_example.py
</code></pre>

<p>on the command line.  After setting up the special variables, it will execute the <code>import</code> statement and load those modules.  It will then evaluate the <code>def</code> block, creating a function object and creating a variable called <code>myfunction</code> that points to the function object.  It will then read the <code>if</code> statement and see that <code>__name__</code> does equal <code>""__main__""</code>, so it will execute the block shown there.</p>

<p>One reason for doing this is that sometimes you write a module (a <code>.py</code> file) where it can be executed directly.  Alternatively, it can also be imported and used in another module.  By doing the main check, you can have that code only execute when you want to run the module as a program and not have it execute when someone just wants to import your module and call your functions themselves.</p>

<p>See <a href=""http://ibiblio.org/g2swap/byteofpython/read/module-name.html"" rel=""noreferrer"">this page</a> for some extra details.</p>
","419185"
"How do I check if a list is empty?","1434755","","<p>For example, if passed the following:</p>

<pre><code>a = []
</code></pre>

<p>How do I check to see if <code>a</code> is empty?</p>
","<pre><code>if not a:
  print(""List is empty"")
</code></pre>

<p>Using the implicit booleanness of the empty list is quite pythonic.</p>
","53522"
"How to convert string to lowercase in Python","1411935","","<p>Is there a way to convert a string from uppercase, or even part uppercase to lowercase? </p>

<p>E.g. Kilometers --> kilometers.</p>
","<pre><code>s = ""Kilometer""
print(s.lower())
</code></pre>

<p>The official documentation is <a href=""https://docs.python.org/3.4/library/stdtypes.html?highlight=str.lower#str.lower"" rel=""noreferrer""><code>str.lower()</code></a>.</p>
","6797990"
"Find current directory and file's directory","1409689","","<p>In Python, what commands can I use to find:</p>

<ol>
<li>the current directory (where I was in the terminal when I ran the Python script), and</li>
<li>where the file I am executing is?</li>
</ol>
","<p>To get the full path to the directory a Python file is contained in, write this in that file:</p>

<pre><code>import os 
dir_path = os.path.dirname(os.path.realpath(__file__))
</code></pre>

<p>(Note that the incantation above won't work if you've already used <code>os.chdir()</code> to change your current working directory, since the value of the <code>__file__</code> constant is relative to the current working directory and is not changed by an <code>os.chdir()</code> call.)</p>

<hr>

<p>To get the current working directory use </p>

<pre><code>import os
cwd = os.getcwd()
</code></pre>

<hr>

<p>Documentation references for the modules, constants and functions used above:</p>

<ul>
<li>The <a href=""https://docs.python.org/library/os.html""><code>os</code></a> and <a href=""https://docs.python.org/library/os.path.html#module-os.path""><code>os.path</code></a> modules.</li>
<li>The <a href=""https://docs.python.org/reference/datamodel.html""><code>__file__</code></a> constant</li>
<li><a href=""https://docs.python.org/library/os.path.html#os.path.realpath""><code>os.path.realpath(path)</code></a> (returns <em>""the canonical path of the specified filename, eliminating any symbolic links encountered in the path""</em>)</li>
<li><a href=""https://docs.python.org/library/os.path.html#os.path.dirname""><code>os.path.dirname(path)</code></a> (returns <em>""the directory name of pathname <code>path</code>""</em>)</li>
<li><a href=""https://docs.python.org/library/os.html#os.getcwd""><code>os.getcwd()</code></a> (returns <em>""a string representing the current working directory""</em>)</li>
<li><a href=""https://docs.python.org/library/os.html#os.chdir""><code>os.chdir(path)</code></a> (<em>""change the current working directory to <code>path</code>""</em>)</li>
</ul>
","5137509"
"Correct way to write line to file?","1383483","","<p>I'm used to doing <code>print &gt;&gt;f, ""hi there""</code></p>

<p>However, it seems that <code>print &gt;&gt;</code> is getting deprecated. What is the recommended way to do the line above?</p>

<p><b>Update</b>:
Regarding all those answers with <code>""\n""</code>...is this universal or Unix-specific? IE, should I be doing <code>""\r\n""</code> on Windows?</p>
","<p>This should be as simple as:</p>

<pre><code>with open('somefile.txt', 'a') as the_file:
    the_file.write('Hello\n')
</code></pre>

<p>From The Documentation:</p>

<blockquote>
  <p>Do not use <code>os.linesep</code> as a line terminator when writing files opened in text mode (the default); use a single '\n' instead, on all platforms.</p>
</blockquote>

<p>Some useful reading:</p>

<ul>
<li><a href=""http://docs.python.org/reference/compound_stmts.html#the-with-statement"" rel=""noreferrer"">The <code>with</code> statement</a></li>
<li><a href=""http://docs.python.org/library/functions.html?highlight=open#open"" rel=""noreferrer""><code>open()</code></a>

<ul>
<li>'a' is for append, or use</li>
<li>'w' to write with truncation</li>
</ul></li>
<li><a href=""http://docs.python.org/library/os.html"" rel=""noreferrer""><code>os</code></a> (particularly <a href=""http://docs.python.org/library/os.html?highlight=os.linesep#os.linesep"" rel=""noreferrer""><code>os.linesep</code></a>)</li>
</ul>
","6160082"
"How to define a two-dimensional array in Python","1314712","","<p>I want to define a two-dimensional array without an initialized length like this:</p>

<pre><code>Matrix = [][]
</code></pre>

<p>but it does not work...</p>

<p>I've tried the code below, but it is wrong too:</p>

<pre><code>Matrix = [5][5]
</code></pre>

<p><strong><em>Error:</em></strong></p>

<pre><code>Traceback ...

IndexError: list index out of range
</code></pre>

<p>What is my mistake?</p>
","<p>You're technically trying to index an uninitialized array. You have to first initialize the outer list with lists before adding items; Python calls this
""list comprehension"".</p>

<pre><code># Creates a list containing 5 lists, each of 8 items, all set to 0
w, h = 8, 5;
Matrix = [[0 for x in range(w)] for y in range(h)] 
</code></pre>

<h1>You can now add items to the list:</h1>

<pre><code>Matrix[0][0] = 1
Matrix[6][0] = 3 # error! range... 
Matrix[0][6] = 3 # valid

print Matrix[0][0] # prints 1
x, y = 0, 6 
print Matrix[x][y] # prints 3; be careful with indexing! 
</code></pre>

<p>Although you can name them as you wish, I look at it this way to avoid some confusion that could arise with the indexing, if you use ""x"" for both the inner and outer lists, and want a non-square Matrix.</p>
","6667288"
"Getting the length of an array in Python","1266452","","<p>In <a href=""http://en.wikipedia.org/wiki/Python_%28programming_language%29"" rel=""noreferrer"">Python</a>, is the following the only way to get the number of elements?</p>

<pre><code>arr.__len__()
</code></pre>

<p>If so, why the strange syntax?</p>
","<pre><code>my_list = [1,2,3,4,5]
len(my_list)
</code></pre>

<p>The same works for tuples:</p>

<pre><code>my_tuple = (1,2,3,4,5)
len(my_tuple)
</code></pre>

<p>And strings, which are really just arrays of characters:</p>

<pre><code>my_string = 'hello world'
len(my_string)
</code></pre>

<p>It was <a href=""http://effbot.org/pyfaq/why-does-python-use-methods-for-some-functionality-e-g-list-index-but-functions-for-other-e-g-len-list.htm"" rel=""noreferrer"">intentionally done this way</a> so that lists, tuples and other container types didn't all need to explicitly implement a public <code>.length()</code> method, instead you can just check the <code>len()</code> of anything that implements the 'magic' <code>__len__()</code> method.</p>

<p>Sure, this may seem redundant, but length checking implementations can vary considerably, even within the same language. It's not uncommon to see one collection type use a <code>.length()</code> method while another type uses a <code>.length</code> property, while yet another uses <code>.count()</code>. Having a language-level keyword unifies the entry point for all these types. So even objects you may not consider to be lists of elements could still be length-checked.  This includes strings, queues, trees, etc.</p>

<p>The functional nature of <code>len()</code> also lends itself well to functional styles of programming.</p>

<pre><code>lengths = map(len, list_of_containers)
</code></pre>
","518038"
"How to split a string into a list?","1217055","","<p>I want my python function to split a sentence (input) and store each word in a list. The code that I've written so far splits the sentence, but does not store the words as a list. How do I do that?</p>

<pre><code>def split_line(text):

    # split the text
    words = text.split()

    # for each word in the line:
    for word in words:

        # print the word
        print(word)
</code></pre>
","<pre><code>text.split()
</code></pre>

<p>This should be enough to store each word in a list.  <code>words</code> is already a list of the words from the sentence, so there is no need for the loop.</p>

<p>Second, it might be a typo, but you have your loop a little messed up. If you really did want to use append, it would be:</p>

<pre><code>words.append(word)
</code></pre>

<p>not </p>

<pre><code>word.append(words)
</code></pre>
","743823"
"Understanding Python super() with __init__() methods","1165348","","<p>I'm trying to understand the use of <code>super()</code>. From the looks of it, both child classes can be created, just fine. </p>

<p>I'm curious to know about the actual difference between the following 2 child classes.</p>

<pre><code>class Base(object):
    def __init__(self):
        print ""Base created""

class ChildA(Base):
    def __init__(self):
        Base.__init__(self)

class ChildB(Base):
    def __init__(self):
        super(ChildB, self).__init__()

ChildA() 
ChildB()
</code></pre>
","<p><code>super()</code> lets you avoid referring to the base class explicitly, which can be nice. But the main advantage comes with multiple inheritance, where all sorts of <a href=""http://www.artima.com/weblogs/viewpost.jsp?thread=236275"" rel=""noreferrer"">fun stuff</a> can happen. See the <a href=""https://docs.python.org/2/library/functions.html#super"" rel=""noreferrer"">standard docs on super</a> if you haven't already.</p>

<p>Note that <a href=""https://docs.python.org/3.0/library/functions.html#super"" rel=""noreferrer"">the syntax changed in Python 3.0</a>: you can just say <code>super().__init__()</code> instead of <code>super(ChildB, self).__init__()</code> which IMO is quite a bit nicer.</p>
","576183"
"Does Python have a ternary conditional operator?","1162111","","<p>If Python does not have a ternary conditional operator, is it possible to simulate one using other language constructs?</p>
","<p>Yes, it was <a href=""https://mail.python.org/pipermail/python-dev/2005-September/056846.html"" rel=""noreferrer"" title=""[Python-Dev] Conditional Expression Resolution"">added</a> in version 2.5.<br>
The syntax is:</p>

<pre><code>a if condition else b
</code></pre>

<p>First <code>condition</code> is evaluated, then either <code>a</code> or <code>b</code> is returned based on the <a href=""https://en.wikipedia.org/wiki/Boolean_data_type"" rel=""noreferrer"" title=""Boolean data type"">Boolean</a> value of <code>condition</code><br>
If <code>condition</code> evaluates to <em>True</em> <code>a</code> is returned, else <code>b</code> is returned. </p>

<p>For example:</p>

<pre><code>&gt;&gt;&gt; 'true' if True else 'false'
'true'
&gt;&gt;&gt; 'true' if False else 'false'
'false'
</code></pre>

<p>Keep in mind that it's frowned upon by some Pythonistas for several reasons:</p>

<ul>
<li>The order of the arguments is different from many other languages (such as C, Ruby, Java, etc.), which may lead to bugs when people unfamiliar with Python's ""surprising"" behaviour use it (they may reverse the order).</li>
<li>Some find it ""unwieldy"", since it goes contrary to the normal flow of thought (thinking of the condition first and then the effects).</li>
<li>Stylistic reasons.</li>
</ul>

<p>If you're having trouble remembering the order, then remember that if you read it out loud, you (almost) say what you mean. For example, <code>x = 4 if b &gt; 8 else 9</code> is read aloud as <code>x will be 4 if b is greater than 8 otherwise 9</code>.</p>

<p>Official documentation:</p>

<ul>
<li><a href=""https://docs.python.org/3/reference/expressions.html#conditional-expressions"" rel=""noreferrer"" title=""Conditional expressions"">Conditional expressions</a></li>
<li><a href=""https://docs.python.org/3.3/faq/programming.html#is-there-an-equivalent-of-c-s-ternary-operator"" rel=""noreferrer"" title=""Is there an equivalent of C’s ”?:” ternary operator?"">Is there an equivalent of C’s ”?:” ternary operator?</a></li>
</ul>
","394814"
"How to delete a file or folder?","1156151","","<p>How do I delete a file or folder in Python?</p>
","<p><a href=""http://docs.python.org/library/os.html#os.remove"" rel=""noreferrer""><code>os.remove()</code></a> will remove a file.</p>

<p><a href=""http://docs.python.org/library/os.html#os.rmdir"" rel=""noreferrer""><code>os.rmdir()</code></a> will remove an empty directory.</p>

<p><a href=""http://docs.python.org/library/shutil.html#shutil.rmtree"" rel=""noreferrer""><code>shutil.rmtree()</code></a> will delete a directory and all its contents.</p>
","6996628"
"How to print without newline or space?","1150397","","<p>The question is in the title.</p>

<p>I'd like to do it in  <a href=""/questions/tagged/python"" class=""post-tag"" title=""show questions tagged &#39;python&#39;"" rel=""tag"">python</a>. What I'd like to do in this example in <a href=""/questions/tagged/c"" class=""post-tag"" title=""show questions tagged &#39;c&#39;"" rel=""tag"">c</a>:</p>

<pre class=""lang-c prettyprint-override""><code>#include &lt;stdio.h&gt;

int main() {
    int i;
    for (i=0; i&lt;10; i++) printf(""."");
    return 0;
}
</code></pre>

<p>Output:</p>

<pre><code>..........
</code></pre>

<p>In Python:</p>

<pre><code>&gt;&gt;&gt; for i in xrange(0,10): print '.'
.
.
.
.
.
.
.
.
.
.
&gt;&gt;&gt; for i in xrange(0,10): print '.',
. . . . . . . . . .
</code></pre>

<p>In Python <code>print</code> will add a <code>\n</code> or a space, how can I avoid that? Now, it's just an example. Don't tell me I can first build a string then print it. I'd like to know how to ""append"" strings to <code>stdout</code>.</p>
","<h2>General way</h2>

<pre><code>import sys
sys.stdout.write('.')
</code></pre>

<p>You may also need to call</p>

<pre><code>sys.stdout.flush()
</code></pre>

<p>to ensure <code>stdout</code> is flushed immediately.</p>

<h2>Python 2.6+</h2>

<p>From Python 2.6 you can import the <code>print</code> function from Python 3:</p>

<pre><code>from __future__ import print_function
</code></pre>

<p>This allows you to use the Python 3 solution below.</p>

<h2>Python 3</h2>

<p>In Python 3, the <code>print</code> statement has been changed into a function. In Python 3, you can instead do:</p>

<pre><code>print('.', end='')
</code></pre>

<p>This also works in Python 2, provided that you've used <code>from __future__ import print_function</code>.</p>

<p>If you are having trouble with buffering, you can flush the output by adding <code>flush=True</code> keyword argument:</p>

<pre><code>print('.', end='', flush=True)
</code></pre>
","493399"
"How to convert strings into integers in Python?","1148929","","<p>I have a tuple of tuples from a MySQL query like this:</p>

<pre><code>T1 = (('13', '17', '18', '21', '32'),
      ('07', '11', '13', '14', '28'),
      ('01', '05', '06', '08', '15', '16'))
</code></pre>

<p>I'd like to convert all the string elements into integers and put them back into a list of lists:</p>

<pre><code>T2 = [[13, 17, 18, 21, 32], [7, 11, 13, 14, 28], [1, 5, 6, 8, 15, 16]]
</code></pre>

<p>I tried to achieve it with <code>eval</code> but didn't get any decent result yet.</p>
","<p><a href=""https://docs.python.org/2/library/functions.html#int"" rel=""noreferrer""><code>int()</code></a> is the Python standard built-in function to convert a string into an integer value. You call it with a string containing a number as the argument, and it returns the number converted to an actual integer:</p>

<pre><code>print int(""1"") + 1
</code></pre>

<p>The above prints <code>2</code>.</p>

<p>If you know the structure of your list, T1 (that it simply contains lists, only one level), you could do this in Python 2:</p>

<pre><code>T2 = [map(int, x) for x in T1]
</code></pre>

<p>In Python 3:</p>

<pre><code>T2 = [list(map(int, x)) for x in T1]
</code></pre>
","642169"
"How to concatenate two lists in Python?","1138949","","<p>How do I concatenate two lists in Python?</p>

<p>Example:</p>

<pre><code>listone = [1, 2, 3]
listtwo = [4, 5, 6]
</code></pre>

<p>Expected outcome:</p>

<pre><code>joinedlist == [1, 2, 3, 4, 5, 6]
</code></pre>
","<p>Python makes this ridiculously easy. You can use the <code>+</code> operator to combine them:</p>

<pre><code>mergedlist = listone + listtwo
</code></pre>
","1720432"
"Determine the type of an object?","1112420","","<p>Is there a simple way to determine if a variable is a list, dictionary, or something else? I am getting an object back that may be either type and I need to be able to tell the difference.</p>
","<p>To get the type of an object, you can use the built-in <a href=""http://docs.python.org/3/library/functions.html#type"" rel=""noreferrer""><code>type()</code></a> function. Passing an object as the only parameter will return the type object of that object:</p>

<pre><code>&gt;&gt;&gt; type([]) is list
True
&gt;&gt;&gt; type({}) is dict
True
&gt;&gt;&gt; type('') is str
True
&gt;&gt;&gt; type(0) is int
True
&gt;&gt;&gt; type({})
&lt;type 'dict'&gt;
&gt;&gt;&gt; type([])
&lt;type 'list'&gt;
</code></pre>

<p>This of course also works for custom types:</p>

<pre><code>&gt;&gt;&gt; class Test1 (object):
        pass
&gt;&gt;&gt; class Test2 (Test1):
        pass
&gt;&gt;&gt; a = Test1()
&gt;&gt;&gt; b = Test2()
&gt;&gt;&gt; type(a) is Test1
True
&gt;&gt;&gt; type(b) is Test2
True
</code></pre>

<p>Note that <code>type()</code> will only return the immediate type of the object, but won’t be able to tell you about type inheritance.</p>

<pre><code>&gt;&gt;&gt; type(b) is Test1
False
</code></pre>

<p>To cover that, you should use the <a href=""http://docs.python.org/3/library/functions.html#isinstance"" rel=""noreferrer""><code>isinstance</code></a> function. This of course also works for built-in types:</p>

<pre><code>&gt;&gt;&gt; isinstance(b, Test1)
True
&gt;&gt;&gt; isinstance(b, Test2)
True
&gt;&gt;&gt; isinstance(a, Test1)
True
&gt;&gt;&gt; isinstance(a, Test2)
False
&gt;&gt;&gt; isinstance([], list)
True
&gt;&gt;&gt; isinstance({}, dict)
True
</code></pre>

<p><code>isinstance()</code> is usually the preferred way to ensure the type of an object because it will also accept derived types. So unless you actually need the type object (for whatever reason), using <code>isinstance()</code> is preferred over <code>type()</code>.</p>

<p>The second parameter of <code>isinstance()</code> also accepts a tuple of types, so it’s possible to check for multiple types at once. <code>isinstance</code> will then return true, if the object is of any of those types:</p>

<pre><code>&gt;&gt;&gt; isinstance([], (tuple, list, set))
True
</code></pre>
","2225066"
"Accessing the index in Python 'for' loops","1110370","","<p>How do I access the index itself for a list like the following?</p>

<pre><code>ints = [8, 23, 45, 12, 78]
</code></pre>

<p>When I loop through it using a <code>for</code> loop, how do I access the loop index, from 1 to 5 in this case?</p>
","<p>Using an additional state variable, such as an index variable (which you would normally use in languages such as C or PHP), is considered non-pythonic.</p>

<p>The better option is to use the built-in function <a href=""https://docs.python.org/3/library/functions.html#enumerate"" rel=""noreferrer"" title=""enumerate""><code>enumerate()</code></a>, available in both Python 2 and 3:</p>

<pre><code>for idx, val in enumerate(ints):
    print(idx, val)
</code></pre>

<p>Check out <a href=""https://www.python.org/dev/peps/pep-0279/"" rel=""noreferrer"" title=""PEP 279"">PEP 279</a> for more.</p>
","522578"
"Generate random integers between 0 and 9","1083303","","<p>How can I generate random integers between 0 and 9 (inclusive) in Python?</p>

<p>i.e. <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code>, <code>6</code>, <code>7</code>, <code>8</code>, <code>9</code></p>
","<p>Try:</p>

<pre><code>from random import randint
print(randint(0, 9))
</code></pre>

<p>More info: <a href=""https://docs.python.org/3/library/random.html#random.randint"" rel=""noreferrer"">https://docs.python.org/3/library/random.html#random.randint</a></p>
","3996930"
"Why does comparing strings in Python using either '==' or 'is' sometimes produce a different result?","1071113","","<p>I've got a Python program where two variables are set to the value <code>'public'</code>. In a conditional expression I have the comparison <code>var1 is var2</code> which fails, but if I change it to <code>var1 == var2</code> it returns <code>True</code>.</p>

<p>Now if I open my Python interpreter and do the same ""is"" comparison, it succeeds.</p>

<pre><code>&gt;&gt;&gt; s1 = 'public'
&gt;&gt;&gt; s2 = 'public'
&gt;&gt;&gt; s2 is s1
True
</code></pre>

<p>What am I missing here?</p>
","<p><code>is</code> is identity testing, <code>==</code> is equality testing. what happens in your code would be emulated in the interpreter like this:</p>

<pre><code>&gt;&gt;&gt; a = 'pub'
&gt;&gt;&gt; b = ''.join(['p', 'u', 'b'])
&gt;&gt;&gt; a == b
True
&gt;&gt;&gt; a is b
False
</code></pre>

<p>so, no wonder they're not the same, right?</p>

<p>In other words: <code>is</code> is the <code>id(a) == id(b)</code></p>
","1504742"
"How do you append to a file?","1060690","","<p>How do you append to the file instead of overwriting it? Is there a special function that appends to the file?</p>
","<pre><code>with open(""test.txt"", ""a"") as myfile:
    myfile.write(""appended text"")
</code></pre>
","4706520"
"Getting the last element of a list in Python","1048401","","<p>In Python, how do you get the last element of a list?</p>
","<p><code>some_list[-1]</code> is the shortest and most Pythonic.</p>

<p>In fact, you can do much more with this syntax. The <code>some_list[-n]</code> syntax gets the nth-to-last element. So <code>some_list[-1]</code> gets the last element, <code>some_list[-2]</code> gets the second to last, etc, all the way down to <code>some_list[-len(some_list)]</code>, which gives you the first element.</p>

<p>You can also set list elements in this way. For instance:</p>

<pre><code>&gt;&gt;&gt; some_list = [1, 2, 3]
&gt;&gt;&gt; some_list[-1] = 5 # Set the last element
&gt;&gt;&gt; some_list[-2] = 3 # Set the second to last element
&gt;&gt;&gt; some_list
[1, 3, 5]
</code></pre>
","930398"
"Python's equivalent of && (logical-and) in an if-statement","1036149","","<p>Here's my code:</p>

<pre><code># F. front_back
# Consider dividing a string into two halves.
# If the length is even, the front and back halves are the same length.
# If the length is odd, we'll say that the extra char goes in the front half.
# e.g. 'abcde', the front half is 'abc', the back half 'de'.
# Given 2 strings, a and b, return a string of the form
#  a-front + b-front + a-back + b-back
def front_back(a, b):
  # +++your code here+++
  if len(a) % 2 == 0 &amp;&amp; len(b) % 2 == 0:
    return a[:(len(a)/2)] + b[:(len(b)/2)] + a[(len(a)/2):] + b[(len(b)/2):] 
  else:
    #todo! Not yet done. :P
  return
</code></pre>

<p>I'm getting an error in the IF conditional. What am I doing wrong?</p>
","<p>You would want <code>and</code> instead of <code>&amp;&amp;</code>.</p>
","2485471"
"Replacements for switch statement in Python?","1010035","","<p>I want to write a function in Python that returns different fixed values based on the value of an input index.  </p>

<p>In other languages I would use a <code>switch</code> or <code>case</code> statement, but Python does not appear to have a <code>switch</code> statement.  What are the recommended Python solutions in this scenario?</p>
","<p>You could use a dictionary:</p>

<pre><code>def f(x):
    return {
        'a': 1,
        'b': 2,
    }[x]
</code></pre>
","60211"
"Renaming columns in pandas","1005225","","<p>I have a DataFrame using pandas and column labels that I need to edit to replace the original column labels. </p>

<p>I'd like to change the column names in a DataFrame <code>A</code> where the original column names are:</p>

<pre><code>['$a', '$b', '$c', '$d', '$e'] 
</code></pre>

<p>to </p>

<pre><code>['a', 'b', 'c', 'd', 'e'].
</code></pre>

<p>I have the edited column names stored it in a list, but I don't know how to replace the column names.</p>
","<p>Just assign it to the <code>.columns</code> attribute:</p>

<pre><code>&gt;&gt;&gt; df = pd.DataFrame({'$a':[1,2], '$b': [10,20]})
&gt;&gt;&gt; df.columns = ['a', 'b']
&gt;&gt;&gt; df
   a   b
0  1  10
1  2  20
</code></pre>
","11346337"
"How can I do a line break (line continuation) in Python?","1002302","","<p>I have a long line of code that I want to break up among multiple lines. What do I use and what is the syntax?</p>

<p>For example, adding a bunch of strings,</p>

<pre><code>e = 'a' + 'b' + 'c' + 'd'
</code></pre>

<p>and have it in two lines like this:</p>

<pre><code>e = 'a' + 'b' +
    'c' + 'd'
</code></pre>
","<p>What is the line?  You can just have arguments on the next line without any problems:</p>

<pre><code>a = dostuff(blahblah1, blahblah2, blahblah3, blahblah4, blahblah5, 
            blahblah6, blahblah7)
</code></pre>

<p>Otherwise you can do something like this:</p>

<pre><code>if a == True and \
   b == False
</code></pre>

<p>Check the <a href=""http://www.python.org/dev/peps/pep-0008/"" rel=""noreferrer"">style guide</a> for more information.</p>

<p>From your example line:</p>

<pre><code>a = '1' + '2' + '3' + \
    '4' + '5'
</code></pre>

<p>Or:</p>

<pre><code>a = ('1' + '2' + '3' +
    '4' + '5')
</code></pre>

<p>Note that the style guide says that using the implicit continuation with parentheses is preferred, but in this particular case just adding parentheses around your expression is probably the wrong way to go.</p>
","53180"
"How do I append one string to another in Python?","987604","","<p>I want an efficient way to append one string to another in Python.</p>

<pre><code>var1 = ""foo""
var2 = ""bar""
var3 = var1 + var2
</code></pre>

<p>Is there any good built-in method to use?</p>
","<p>If you only have one reference to a string and you concatenate another string to the end, CPython now special cases this and tries to extend the string in place.</p>

<p>The end result is that the operation is amortized O(n).</p>

<p>e.g.</p>

<pre><code>s = """"
for i in range(n):
    s+=str(i)
</code></pre>

<p>used to be O(n^2), but now it is O(n).</p>

<p>From the source (bytesobject.c):</p>

<pre class=""lang-c prettyprint-override""><code>void
PyBytes_ConcatAndDel(register PyObject **pv, register PyObject *w)
{
    PyBytes_Concat(pv, w);
    Py_XDECREF(w);
}


/* The following function breaks the notion that strings are immutable:
   it changes the size of a string.  We get away with this only if there
   is only one module referencing the object.  You can also think of it
   as creating a new string object and destroying the old one, only
   more efficiently.  In any case, don't use this if the string may
   already be known to some other part of the code...
   Note that if there's not enough memory to resize the string, the original
   string object at *pv is deallocated, *pv is set to NULL, an ""out of
   memory"" exception is set, and -1 is returned.  Else (on success) 0 is
   returned, and the value in *pv may or may not be the same as on input.
   As always, an extra byte is allocated for a trailing \0 byte (newsize
   does *not* include that), and a trailing \0 byte is stored.
*/

int
_PyBytes_Resize(PyObject **pv, Py_ssize_t newsize)
{
    register PyObject *v;
    register PyBytesObject *sv;
    v = *pv;
    if (!PyBytes_Check(v) || Py_REFCNT(v) != 1 || newsize &lt; 0) {
        *pv = 0;
        Py_DECREF(v);
        PyErr_BadInternalCall();
        return -1;
    }
    /* XXX UNREF/NEWREF interface should be more symmetrical */
    _Py_DEC_REFTOTAL;
    _Py_ForgetReference(v);
    *pv = (PyObject *)
        PyObject_REALLOC((char *)v, PyBytesObject_SIZE + newsize);
    if (*pv == NULL) {
        PyObject_Del(v);
        PyErr_NoMemory();
        return -1;
    }
    _Py_NewReference(*pv);
    sv = (PyBytesObject *) *pv;
    Py_SIZE(sv) = newsize;
    sv-&gt;ob_sval[newsize] = '\0';
    sv-&gt;ob_shash = -1;          /* invalidate cached hash value */
    return 0;
}
</code></pre>

<p>It's easy enough to verify empirically.</p>

<pre>
$ python -m timeit -s""s=''"" ""for i in xrange(10):s+='a'""
1000000 loops, best of 3: 1.85 usec per loop
$ python -m timeit -s""s=''"" ""for i in xrange(100):s+='a'""
10000 loops, best of 3: 16.8 usec per loop
$ python -m timeit -s""s=''"" ""for i in xrange(1000):s+='a'""
10000 loops, best of 3: 158 usec per loop
$ python -m timeit -s""s=''"" ""for i in xrange(10000):s+='a'""
1000 loops, best of 3: 1.71 msec per loop
$ python -m timeit -s""s=''"" ""for i in xrange(100000):s+='a'""
10 loops, best of 3: 14.6 msec per loop
$ python -m timeit -s""s=''"" ""for i in xrange(1000000):s+='a'""
10 loops, best of 3: 173 msec per loop
</pre>

<p><strong>It's important</strong> however to note that this optimisation isn't part of the Python spec. It's only in the cPython implementation as far as I know. The same empirical testing on pypy or jython for example might show the older O(n**2) performance .</p>

<pre>
$ pypy -m timeit -s""s=''"" ""for i in xrange(10):s+='a'""
10000 loops, best of 3: 90.8 usec per loop
$ pypy -m timeit -s""s=''"" ""for i in xrange(100):s+='a'""
1000 loops, best of 3: 896 usec per loop
$ pypy -m timeit -s""s=''"" ""for i in xrange(1000):s+='a'""
100 loops, best of 3: 9.03 msec per loop
$ pypy -m timeit -s""s=''"" ""for i in xrange(10000):s+='a'""
10 loops, best of 3: 89.5 msec per loop
</pre>

<p>So far so good, but then,</p>

<pre>
$ pypy -m timeit -s""s=''"" ""for i in xrange(100000):s+='a'""
10 loops, best of 3: 12.8 sec per loop
</pre>

<p>ouch even worse than quadratic. So pypy is doing something that works well with short strings, but performs poorly for larger strings.</p>
","4435752"
"Understanding Python's slice notation","986390","","<p>I need a good explanation (references are a plus) on Python's slice notation. </p>

<p>To me, this notation needs a bit of picking up. </p>

<p>It looks extremely powerful, but I haven't quite got my head around it.</p>
","<p>It's pretty simple really:</p>

<pre><code>a[start:end] # items start through end-1
a[start:]    # items start through the rest of the array
a[:end]      # items from the beginning through end-1
a[:]         # a copy of the whole array
</code></pre>

<p>There is also the <code>step</code> value, which can be used with any of the above:</p>

<pre><code>a[start:end:step] # start through not past end, by step
</code></pre>

<p>The key point to remember is that the <code>:end</code> value represents the first value that is <em>not</em> in the selected slice. So, the difference beween <code>end</code> and <code>start</code> is the number of elements selected (if <code>step</code> is 1, the default).</p>

<p>The other feature is that <code>start</code> or <code>end</code> may be a <em>negative</em> number, which means it counts from the end of the array instead of the beginning. So:</p>

<pre><code>a[-1]    # last item in the array
a[-2:]   # last two items in the array
a[:-2]   # everything except the last two items
</code></pre>

<p>Python is kind to the programmer if there are fewer items than you ask for. For example, if you ask for <code>a[:-2]</code> and <code>a</code> only contains one element, you get an empty list instead of an error. Sometimes you would prefer the error, so you have to be aware that this may happen.</p>
","509295"
"How to merge two dictionaries in a single expression?","985651","","<p>I have two Python dictionaries, and I want to write a single expression that returns these two dictionaries, merged.  The <code>update()</code> method would be what I need, if it returned its result instead of modifying a dict in-place.</p>

<pre><code>&gt;&gt;&gt; x = {'a':1, 'b': 2}
&gt;&gt;&gt; y = {'b':10, 'c': 11}
&gt;&gt;&gt; z = x.update(y)
&gt;&gt;&gt; print(z)
None
&gt;&gt;&gt; x
{'a': 1, 'b': 10, 'c': 11}
</code></pre>

<p>How can I get that final merged dict in <code>z</code>, not <code>x</code>?</p>

<p>(To be extra-clear, the last-one-wins conflict-handling of <code>dict.update()</code> is what I'm looking for as well.)</p>
","<blockquote>
  <h1>How can I merge two Python dictionaries in a single expression?</h1>
</blockquote>

<p>For dictionaries <code>x</code> and <code>y</code>, <code>z</code> becomes a merged dictionary with values from <code>y</code> replacing those from <code>x</code>.</p>

<ul>
<li><p>In Python 3.5 or greater, :</p>

<pre><code>z = {**x, **y}
</code></pre></li>
<li><p>In Python 2, (or 3.4 or lower) write a function:</p>

<pre><code>def merge_two_dicts(x, y):
    z = x.copy()   # start with x's keys and values
    z.update(y)    # modifies z with y's keys and values &amp; returns None
    return z
</code></pre>

<p>and</p>

<pre><code>z = merge_two_dicts(x, y)
</code></pre></li>
</ul>

<h2>Explanation</h2>

<p>Say you have two dicts and you want to merge them into a new dict without altering the original dicts:</p>

<pre><code>x = {'a': 1, 'b': 2}
y = {'b': 3, 'c': 4}
</code></pre>

<p>The desired result is to get a new dictionary (<code>z</code>) with the values merged, and the second dict's values overwriting those from the first.</p>

<pre><code>&gt;&gt;&gt; z
{'a': 1, 'b': 3, 'c': 4}
</code></pre>

<p>A new syntax for this, proposed in <a href=""https://www.python.org/dev/peps/pep-0448"" rel=""noreferrer"">PEP 448</a> and <a href=""https://mail.python.org/pipermail/python-dev/2015-February/138564.html"" rel=""noreferrer"">available as of Python 3.5</a>, is </p>

<pre><code>z = {**x, **y}
</code></pre>

<p>And it is indeed a single expression. It is now showing as implemented in the <a href=""https://www.python.org/dev/peps/pep-0478/#features-for-3-5"" rel=""noreferrer"">release schedule for 3.5, PEP 478</a>, and it has now made its way into <a href=""https://docs.python.org/dev/whatsnew/3.5.html#pep-448-additional-unpacking-generalizations"" rel=""noreferrer"">What's New in Python 3.5</a> document.</p>

<p>However, since many organizations are still on Python 2, you may wish to do this in a backwards compatible way. The classically Pythonic way, available in Python 2 and Python 3.0-3.4, is to do this as a two-step process:</p>

<pre><code>z = x.copy()
z.update(y) # which returns None since it mutates z
</code></pre>

<p>In both approaches, <code>y</code> will come second and its values will replace <code>x</code>'s values, thus <code>'b'</code> will point to <code>3</code> in our final result.</p>

<h1>Not yet on Python 3.5, but want a <em>single expression</em></h1>

<p>If you are not yet on Python 3.5, or need to write backward-compatible code, and you want this in a <em>single expression</em>, the most performant while correct approach is to put it in a function:</p>

<pre><code>def merge_two_dicts(x, y):
    """"""Given two dicts, merge them into a new dict as a shallow copy.""""""
    z = x.copy()
    z.update(y)
    return z
</code></pre>

<p>and then you have a single expression:</p>

<pre><code>z = merge_two_dicts(x, y)
</code></pre>

<p>You can also make a function to merge an undefined number of dicts, from zero to a very large number:</p>

<pre><code>def merge_dicts(*dict_args):
    """"""
    Given any number of dicts, shallow copy and merge into a new dict,
    precedence goes to key value pairs in latter dicts.
    """"""
    result = {}
    for dictionary in dict_args:
        result.update(dictionary)
    return result
</code></pre>

<p>This function will work in Python 2 and 3 for all dicts. e.g. given dicts <code>a</code> to <code>g</code>:</p>

<pre><code>z = merge_dicts(a, b, c, d, e, f, g) 
</code></pre>

<p>and key value pairs in <code>g</code> will take precedence over dicts <code>a</code> to <code>f</code>, and so on.</p>

<h1>Critiques of Other Answers</h1>

<p>Don't use what you see in the formerly accepted answer:</p>

<pre><code>z = dict(x.items() + y.items())
</code></pre>

<p>In Python 2, you create two lists in memory for each dict, create a third list in memory with length equal to the length of the first two put together, and then discard all three lists to create the dict. <strong>In Python 3, this will fail</strong> because you're adding two <code>dict_items</code> objects together, not two lists - </p>

<pre><code>&gt;&gt;&gt; c = dict(a.items() + b.items())
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
TypeError: unsupported operand type(s) for +: 'dict_items' and 'dict_items'
</code></pre>

<p>and you would have to explicitly create them as lists, e.g. <code>z = dict(list(x.items()) + list(y.items()))</code>. This is a waste of resources and computation power. </p>

<p>Similarly, taking the union of <code>items()</code> in Python 3 (<code>viewitems()</code> in Python 2.7) will also fail when values are unhashable objects (like lists, for example). Even if your values are hashable, <strong>since sets are semantically unordered, the behavior is undefined in regards to precedence. So don't do this:</strong></p>

<pre><code>&gt;&gt;&gt; c = dict(a.items() | b.items())
</code></pre>

<p>This example demonstrates what happens when values are unhashable:</p>

<pre><code>&gt;&gt;&gt; x = {'a': []}
&gt;&gt;&gt; y = {'b': []}
&gt;&gt;&gt; dict(x.items() | y.items())
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
TypeError: unhashable type: 'list'
</code></pre>

<p>Here's an example where y should have precedence, but instead the value from x is retained due to the arbitrary order of sets:</p>

<pre><code>&gt;&gt;&gt; x = {'a': 2}
&gt;&gt;&gt; y = {'a': 1}
&gt;&gt;&gt; dict(x.items() | y.items())
{'a': 2}
</code></pre>

<p>Another hack you should not use:</p>

<pre><code>z = dict(x, **y)
</code></pre>

<p>This uses the <code>dict</code> constructor, and is very fast and memory efficient (even slightly more-so than our two-step process) but unless you know precisely what is happening here (that is, the second dict is being passed as keyword arguments to the dict constructor), it's difficult to read, it's not the intended usage, and so it is not Pythonic. </p>

<p>Here's an example of the usage being <a href=""https://code.djangoproject.com/attachment/ticket/13357/django-pypy.2.diff"" rel=""noreferrer"">remediated in django</a>.</p>

<p>Dicts are intended to take hashable keys (e.g. frozensets or tuples), but <strong>this method fails in Python 3 when keys are not strings.</strong></p>

<pre><code>&gt;&gt;&gt; c = dict(a, **b)
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
TypeError: keyword arguments must be strings
</code></pre>

<p>From the <a href=""https://mail.python.org/pipermail/python-dev/2010-April/099459.html"" rel=""noreferrer"">mailing list</a>, Guido van Rossum, the creator of the language, wrote:</p>

<blockquote>
  <p>I am fine with
  declaring dict({}, **{1:3}) illegal, since after all it is abuse of
  the ** mechanism.</p>
</blockquote>

<p>and </p>

<blockquote>
  <p>Apparently dict(x, **y) is going around as ""cool hack"" for ""call
  x.update(y) and return x"". Personally I find it more despicable than
  cool.</p>
</blockquote>

<p>It is my understanding (as well as the understanding of the <a href=""https://mail.python.org/pipermail/python-dev/2010-April/099485.html"" rel=""noreferrer"">creator of the language</a>) that the intended usage for <code>dict(**y)</code> is for creating dicts for readability purposes, e.g.:</p>

<pre><code>dict(a=1, b=10, c=11)
</code></pre>

<p>instead of </p>

<pre><code>{'a': 1, 'b': 10, 'c': 11}
</code></pre>

<h2>Response to comments</h2>

<blockquote>
  <p>Despite what Guido says, <code>dict(x, **y)</code> is in line with the dict specification, which btw. works for both Python 2 and 3. The fact that this only works for string keys is a direct consequence of how keyword parameters work and not a short-comming of dict. Nor is using the ** operator in this place an abuse of the mechanism, in fact ** was designed precisely to pass dicts as keywords. </p>
</blockquote>

<p>Again, it doesn't work for 3 when keys are non-strings. The implicit calling contract is that namespaces take ordinary dicts, while users must only pass keyword arguments that are strings. All other callables enforced it. <code>dict</code> broke this consistency in Python 2:</p>

<pre><code>&gt;&gt;&gt; foo(**{('a', 'b'): None})
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
TypeError: foo() keywords must be strings
&gt;&gt;&gt; dict(**{('a', 'b'): None})
{('a', 'b'): None}
</code></pre>

<p>This inconsistency was bad given other implementations of Python (Pypy, Jython, IronPython). Thus it was fixed in Python 3, as this usage could be a breaking change.</p>

<p>I submit to you that it is malicious incompetence to intentionally write code that only works in one version of a language or that only works given certain arbitrary constraints.</p>

<p>Another comment:</p>

<blockquote>
  <p><code>dict(x.items() + y.items())</code> is still the most readable solution for Python 2. Readability counts. </p>
</blockquote>

<p>My response: <code>merge_two_dicts(x, y)</code> actually seems much clearer to me, if we're actually concerned about readability. And it is not forward compatible, as Python 2 is increasingly deprecated.</p>

<h1>Less Performant But Correct Ad-hocs</h1>

<p>These approaches are less performant, but they will provide correct behavior.
They will be <em>much less</em> performant than <code>copy</code> and <code>update</code> or the new unpacking because they iterate through each key-value pair at a higher level of abstraction, but they <em>do</em> respect the order of precedence (latter dicts have precedence)</p>

<p>You can also chain the dicts manually inside a dict comprehension:</p>

<pre><code>{k: v for d in dicts for k, v in d.items()} # iteritems in Python 2.7
</code></pre>

<p>or in python 2.6 (and perhaps as early as 2.4 when generator expressions were introduced):</p>

<pre><code>dict((k, v) for d in dicts for k, v in d.items())
</code></pre>

<p><code>itertools.chain</code> will chain the iterators over the key-value pairs in the correct order:</p>

<pre><code>import itertools
z = dict(itertools.chain(x.iteritems(), y.iteritems()))
</code></pre>

<h1>Performance Analysis</h1>

<p>I'm only going to do the performance analysis of the usages known to behave correctly. </p>

<pre><code>import timeit
</code></pre>

<p>The following is done on Ubuntu 14.04</p>

<p>In Python 2.7 (system Python):</p>

<pre><code>&gt;&gt;&gt; min(timeit.repeat(lambda: merge_two_dicts(x, y)))
0.5726828575134277
&gt;&gt;&gt; min(timeit.repeat(lambda: {k: v for d in (x, y) for k, v in d.items()} ))
1.163769006729126
&gt;&gt;&gt; min(timeit.repeat(lambda: dict(itertools.chain(x.iteritems(), y.iteritems()))))
1.1614501476287842
&gt;&gt;&gt; min(timeit.repeat(lambda: dict((k, v) for d in (x, y) for k, v in d.items())))
2.2345519065856934
</code></pre>

<p>In Python 3.5 (deadsnakes PPA):</p>

<pre><code>&gt;&gt;&gt; min(timeit.repeat(lambda: {**x, **y}))
0.4094954460160807
&gt;&gt;&gt; min(timeit.repeat(lambda: merge_two_dicts(x, y)))
0.7881555100320838
&gt;&gt;&gt; min(timeit.repeat(lambda: {k: v for d in (x, y) for k, v in d.items()} ))
1.4525277839857154
&gt;&gt;&gt; min(timeit.repeat(lambda: dict(itertools.chain(x.items(), y.items()))))
2.3143140770262107
&gt;&gt;&gt; min(timeit.repeat(lambda: dict((k, v) for d in (x, y) for k, v in d.items())))
3.2069112799945287
</code></pre>

<h2>Resources on Dictionaries</h2>

<ul>
<li><a href=""https://stackoverflow.com/questions/327311/how-are-pythons-built-in-dictionaries-implemented/44509302#44509302"">My explanation of Python's <strong>dictionary implementation</strong>, updated for 3.6.</a></li>
<li><a href=""https://stackoverflow.com/questions/1024847/add-new-keys-to-a-dictionary/27208535#27208535"">Answer on how to add new keys to a dictionary</a></li>
<li><a href=""https://stackoverflow.com/questions/209840/map-two-lists-into-a-dictionary-in-python/33737067#33737067"">Mapping two lists into a dictionary</a></li>
<li>The official Python <a href=""https://docs.python.org/3/tutorial/datastructures.html#dictionaries"" rel=""noreferrer"">docs on dictionaries</a> </li>
<li><a href=""https://www.youtube.com/watch?v=66P5FMkWoVU"" rel=""noreferrer"">The Dictionary Even Mightier</a> - talk by Brandon Rhodes at Pycon 2017</li>
<li><a href=""https://www.youtube.com/watch?v=npw4s1QTmPg"" rel=""noreferrer"">Modern Python Dictionaries, A Confluence of Great Ideas</a> - talk by Raymond Hettinger at Pycon 2017</li>
</ul>
","26853961"
"Python add new item to dictionary","961587","","<p>I want to add an item to an existing dictionary in python. For example, this is my dictionary:</p>

<pre><code>default_data = {
            'item1': 1,
            'item2': 2,
}
</code></pre>

<p>I want to add new item such that:</p>

<pre><code>default_data = default_data + {'item3':3}
</code></pre>

<p>How to achieve this?</p>
","<pre><code>default_data['item3'] = 3
</code></pre>

<p>Easy as py.</p>

<p>Another possible solution:</p>

<pre><code>default_data.update({'item3': 3})
</code></pre>

<p>which is nice if you want to insert multiple items at once.</p>
","6416142"
"Find all files in a directory with extension .txt in Python","953242","","<p>How can I find all the files in a directory having the extension <code>.txt</code> in python?</p>
","<p>You can use <a href=""https://docs.python.org/2/library/glob.html"" rel=""noreferrer""><code>glob</code></a>:</p>

<pre><code>import glob, os
os.chdir(""/mydir"")
for file in glob.glob(""*.txt""):
    print(file)
</code></pre>

<p>or simply <a href=""https://docs.python.org/2/library/os.html#os.listdir"" rel=""noreferrer""><code>os.listdir</code></a>:</p>

<pre><code>import os
for file in os.listdir(""/mydir""):
    if file.endswith("".txt""):
        print(os.path.join(""/mydir"", file))
</code></pre>

<p>or if you want to traverse directory, use <a href=""https://docs.python.org/2/library/os.html#os.walk"" rel=""noreferrer""><code>os.walk</code></a>:</p>

<pre><code>import os
for root, dirs, files in os.walk(""/mydir""):
    for file in files:
        if file.endswith("".txt""):
             print(os.path.join(root, file))
</code></pre>
","3964691"
"How do I copy a file in python?","951119","","<p>How do I copy a file in Python? I couldn't find anything under <a href=""https://docs.python.org/2/library/os.html"" rel=""noreferrer""><code>os</code></a>.</p>
","<p><a href=""http://docs.python.org/2/library/shutil.html"" rel=""noreferrer""><code>shutil</code></a> has many methods you can use. One of which is:</p>

<pre><code>from shutil import copyfile

copyfile(src, dst)
</code></pre>

<p>Copy the contents of the file named <code>src</code> to a file named <code>dst</code>. The destination location must be writable; otherwise, an <code>IOError</code> exception will be raised. If <code>dst</code> already exists, it will be replaced. Special files such as character or block devices and pipes cannot be copied with this function. <code>src</code> and <code>dst</code> are path names given as strings. </p>
","123212"
"Terminating a Python script","940499","","<p>I am aware of the <code>die()</code> command in PHP which stops a script early.</p>

<p>How can I do this in Python?</p>
","<pre><code>import sys
sys.exit()
</code></pre>

<p>details from the <a href=""https://docs.python.org/2/library/constants.html#exit"" rel=""noreferrer"" title=""exit""><code>sys</code> module documentation</a>:</p>

<blockquote>
  <p><code>sys.<strong>exit</strong>([<em>arg</em>])</code></p>
  
  <blockquote>
    <p>Exit from Python. This is implemented by raising the
    <a href=""https://docs.python.org/2/library/exceptions.html#SystemExit"" rel=""noreferrer"" title=""SystemExit""><code>SystemExit</code></a> exception, so cleanup actions specified by finally clauses
    of <a href=""https://docs.python.org/2/reference/compound_stmts.html#try"" rel=""noreferrer"" title=""try""><code>try</code></a> statements are honored, and it is possible to intercept the
    exit attempt at an outer level.</p>
    
    <p>The optional argument <em>arg</em> can be an integer giving the exit status
    (defaulting to zero), or another type of object. If it is an integer,
    zero is considered “successful termination” and any nonzero value is
    considered “abnormal termination” by shells and the like. Most systems
    require it to be in the range 0-127, and produce undefined results
    otherwise. Some systems have a convention for assigning specific
    meanings to specific exit codes, but these are generally
    underdeveloped; Unix programs generally use 2 for command line syntax
    errors and 1 for all other kind of errors. If another type of object
    is passed, None is equivalent to passing zero, and any other object is
    printed to <a href=""https://docs.python.org/2/library/sys.html#sys.stderr"" rel=""noreferrer"" title=""sys.stderr""><code>stderr</code></a> and results in an exit code of 1. In particular,
    <code>sys.exit(""some error message"")</code> is a quick way to exit a program when
    an error occurs.</p>
    
    <p>Since <a href=""https://docs.python.org/2/library/constants.html#exit"" rel=""noreferrer"" title=""exit""><code>exit()</code></a> ultimately “only” raises an exception, it will only exit
    the process when called from the main thread, and the exception is not
    intercepted.</p>
  </blockquote>
</blockquote>

<p>Note that this is the 'nice' way to exit.  @<a href=""https://stackoverflow.com/questions/73663/terminating-a-python-script#76374"">glyphtwistedmatrix</a> below points out that if you want a 'hard exit', you can use os._exit(<em>errorcode</em>), though it's likely os-specific to some extent (it might not take an errorcode under windows, for example), and it definitely is less friendly since it doesn't let the interpreter do any cleanup before the process dies.</p>
","73673"
"Making a flat list out of list of lists in Python","938290","","<p>I wonder whether there is a shortcut to make a simple list out of list of lists in Python.</p>

<p>I can do that in a for loop, but maybe there is some cool ""one-liner""? I tried it with <em>reduce</em>, but I get an error.</p>

<p><strong>Code</strong></p>

<pre><code>l = [[1, 2, 3], [4, 5, 6], [7], [8, 9]]
reduce(lambda x, y: x.extend(y), l)
</code></pre>

<p><strong>Error message</strong></p>

<pre><code>Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
  File ""&lt;stdin&gt;"", line 1, in &lt;lambda&gt;
AttributeError: 'NoneType' object has no attribute 'extend'
</code></pre>
","<pre><code>flat_list = [item for sublist in l for item in sublist]
</code></pre>

<p>which means:</p>

<pre><code>for sublist in l:
    for item in sublist:
        flat_list.append(item)
</code></pre>

<p>is faster than the shortcuts posted so far. (<code>l</code> is the list to flatten.)</p>

<p>Here is a the corresponding function:</p>

<pre><code>flatten = lambda l: [item for sublist in l for item in sublist]
</code></pre>

<p>For evidence, as always, you can use the <code>timeit</code> module in the standard library:</p>

<pre><code>$ python -mtimeit -s'l=[[1,2,3],[4,5,6], [7], [8,9]]*99' '[item for sublist in l for item in sublist]'
10000 loops, best of 3: 143 usec per loop
$ python -mtimeit -s'l=[[1,2,3],[4,5,6], [7], [8,9]]*99' 'sum(l, [])'
1000 loops, best of 3: 969 usec per loop
$ python -mtimeit -s'l=[[1,2,3],[4,5,6], [7], [8,9]]*99' 'reduce(lambda x,y: x+y,l)'
1000 loops, best of 3: 1.1 msec per loop
</code></pre>

<p>Explanation: the shortcuts based on <code>+</code> (including the implied use in <code>sum</code>) are, of necessity, <code>O(L**2)</code> when there are L sublists -- as the intermediate result list keeps getting longer, at each step a new intermediate result list object gets allocated, and all the items in the previous intermediate result must be copied over (as well as a few new ones added at the end). So (for simplicity and without actual loss of generality) say you have L sublists of I items each: the first I items are copied back and forth L-1 times, the second I items L-2 times, and so on; total number of copies is I times the sum of x for x from 1 to L excluded, i.e., <code>I * (L**2)/2</code>.</p>

<p>The list comprehension just generates one list, once, and copies each item over (from its original place of residence to the result list) also exactly once.</p>
","952952"
"Python: Find in list","937579","","<p>I have come across this delightful:</p>

<pre><code>item = someSortOfSelection()
if item in myList:
    doMySpecialFunction(item)
</code></pre>

<p>but sometimes it does not work with all my items, as if they weren't recognized in the list (when it's a list of string).</p>

<p>is it the most 'pythonic' way of finding an item in a list: <code>if x in l:</code>?</p>
","<p>As for your first question: that code is perfectly fine and should work if <code>item</code> equals one of the elements inside <code>myList</code>. Maybe you try to find a string that does not <em>exactly</em> match one of the items or maybe you are using a float value which suffers from inaccuracy.</p>

<p>As for your second question: There's actually several possible ways if ""finding"" things in lists.</p>

<h3>Checking if something is inside</h3>

<p>This is the use case you describe: Checking whether something is inside a list or not. As you know, you can use the <code>in</code> operator for that:</p>

<pre><code>3 in [1, 2, 3] # =&gt; True
</code></pre>

<h3>Filtering a collection</h3>

<p>That is, finding all elements in a sequence that meet a certain condition. You can use list comprehension or generator expressions for that:</p>

<pre><code>matches = [x for x in lst if fulfills_some_condition(x)]
matches = (x for x in lst if x &gt; 6)
</code></pre>

<p>The latter will return a <em>generator</em> which you can imagine as a sort of lazy list that will only be built as soon as you iterate through it. By the way, the first one is exactly equivalent to</p>

<pre><code>matches = filter(fulfills_some_condition, lst)
</code></pre>

<p>in Python 2. Here you can see higher-order functions at work. In Python 3, <code>filter</code> doesn't return a list, but a generator-like object.</p>

<h3>Finding the first occurrence</h3>

<p>If you only want the first thing that matches a condition (but you don't know what it is yet), it's fine to use a for loop (possibly using the <code>else</code> clause as well, which is not really well-known). You can also use</p>

<pre><code>next(x for x in lst if ...)
</code></pre>

<p>which will return the first match or raise a <code>StopIteration</code> if none is found. Alternatively, you can use</p>

<pre><code>next((x for x in lst if ...), [default value])
</code></pre>

<h3>Finding the location of an item</h3>

<p>For lists, there's also the <code>index</code> method that can sometimes be useful if you want to know <em>where</em> a certain element is in the list:</p>

<pre><code>[1,2,3].index(2) # =&gt; 1
[1,2,3].index(4) # =&gt; ValueError
</code></pre>

<p>However, note that if you have duplicates, <code>.index</code> always returns the lowest index:......</p>

<pre><code>[1,2,3,2].index(2) # =&gt; 1
</code></pre>

<p>If there are duplicates and you want all the indexes then you can use <code>enumerate()</code> instead:</p>

<pre><code>[i for i,x in enumerate([1,2,3,2]) if x==2] # =&gt; [1, 3]
</code></pre>
","9542768"
"Fastest way to check if a value exist in a list","932346","","<p>I'm searching for the fastest way to know if a value exists in a list (a list with millions of values in it) and what its index is? I know all values in the list are unique like my example.</p>

<p><strong>My first methods I try is(3.8sec in my real code):</strong></p>

<pre><code>a = [4,2,3,1,5,6]

if a.count(7) == 1:
    b=a.index(7)
    ""Do something with variable b""
</code></pre>

<p><strong>My second methods I try is (2x faster:1.9sec on my real code):</strong></p>

<pre><code>a = [4,2,3,1,5,6]

try:
    b=a.index(7)
except ValueError:
    ""Do nothing""
else:
    ""Do something with variable b""
</code></pre>

<p><strong>Proposed methods from Stackoverflow user (2.74sec on my real code):</strong></p>

<pre><code>a = [4,2,3,1,5,6]
if 7 in a:
    a.index(7)
</code></pre>

<p>In my real code, first method take 3.81sec and the second methods take 1.88sec.
It's a good improvement but:</p>

<p>I'm a beginner with Python/scripting and I want to know if a fastest way exist to do the same things and save more process time?</p>

<p><strong>More specific explication for my application:</strong></p>

<p>In the API of blender a can access to a list of particles:</p>

<pre><code>particles = [1,2,3,4...etc.]
</code></pre>

<p>From there , I can access to it's location:</p>

<pre><code>particles[x].location = [x,y,z]
</code></pre>

<p>And I test for each particles if a neighbour exist by searching
in the location of each particles like:</p>

<pre><code>if [x+1,y,z] in particles.location
    ""find the identity of this neighbour particles in x:the index 
    of the particles array""
    particles.index([x+1,y,z])
</code></pre>
","<pre><code>7 in a
</code></pre>

<p>Clearest and fastest way to do it.</p>

<p>You can also consider using a <code>set</code>, but constructing that set from your list may take more time than faster membership testing will save. The only way to be certain is to benchmark well. (this also depends on what operations you require)</p>
","7571665"
"Is there a simple way to delete a list element by value?","928972","","<pre><code>a=[1,2,3,4]
b=a.index(6)
del a[b]
print a
</code></pre>

<p>The above shows the following error:</p>

<pre class=""lang-none prettyprint-override""><code>Traceback (most recent call last):
  File ""D:\zjm_code\a.py"", line 6, in &lt;module&gt;
    b=a.index(6)
ValueError: list.index(x): x not in list
</code></pre>

<p>So I have to do this:</p>

<pre><code>a=[1,2,3,4]
try:
    b=a.index(6)
    del a[b]
except:
    pass
print a
</code></pre>

<p>But is there not a simpler way to do this?</p>
","<p>To remove an element's first occurrence in a list, simply use <code>list.remove</code>:</p>

<pre><code>&gt;&gt;&gt; a = ['a', 'b', 'c', 'd']
&gt;&gt;&gt; a.remove('b')
&gt;&gt;&gt; print a
['a', 'c', 'd']
</code></pre>

<p>Mind that it does not remove all occurrences of your element. Use a list comprehension for that.</p>

<pre><code>&gt;&gt;&gt; a = [1, 2, 3, 4, 2, 3, 4, 2, 7, 2]
&gt;&gt;&gt; a = [x for x in a if x != 2]
&gt;&gt;&gt; print a
[1, 3, 4, 3, 4, 7]
</code></pre>
","2793341"
"Is there a ""not equal"" operator in Python?","909274","","<p>How would you say does not equal?</p>

<p>Like </p>

<pre><code>if hi == hi:
    print ""hi""
elif hi (does not equal) bye:
    print ""no hi""
</code></pre>

<p>Is there a replacement for <code>==</code> that means ""not equal""?</p>
","<p>Use <code>!=</code>. See <a href=""http://docs.python.org/release/2.5.2/lib/comparisons.html"" rel=""noreferrer"">comparison operators</a>. For comparing object identities, you can use the keyword <code>is</code> and its negation <code>is not</code>.</p>

<p>e.g.</p>

<pre><code>1 == 1 #  -&gt; True
1 != 1 #  -&gt; False
[] is [] #-&gt; False (distinct objects)
a = b = []; a is b # -&gt; True (same object)
</code></pre>
","11060508"
"UnicodeEncodeError: 'ascii' codec can't encode character u'\xa0' in position 20: ordinal not in range(128)","901172","","<p>I'm having problems dealing with unicode characters from text fetched from different web pages (on different sites). I am using BeautifulSoup. </p>

<p>The problem is that the error is not always reproducible; it sometimes works with some pages, and sometimes, it barfs by throwing a <code>UnicodeEncodeError</code>. I have tried just about everything I can think of, and yet I have not found anything that works consistently without throwing some kind of Unicode-related error.</p>

<p>One of the sections of code that is causing problems is shown below:</p>

<pre><code>agent_telno = agent.find('div', 'agent_contact_number')
agent_telno = '' if agent_telno is None else agent_telno.contents[0]
p.agent_info = str(agent_contact + ' ' + agent_telno).strip()
</code></pre>

<p>Here is a stack trace produced on SOME strings when the snippet above is run:</p>

<pre><code>Traceback (most recent call last):
  File ""foobar.py"", line 792, in &lt;module&gt;
    p.agent_info = str(agent_contact + ' ' + agent_telno).strip()
UnicodeEncodeError: 'ascii' codec can't encode character u'\xa0' in position 20: ordinal not in range(128)
</code></pre>

<p>I suspect that this is because some pages (or more specifically, pages from some of the sites) may be encoded, whilst others may be unencoded. All the sites are based in the UK and provide data meant for UK consumption - so there are no issues relating to internalization or dealing with text written in anything other than English.</p>

<p>Does anyone have any ideas as to how to solve this so that I can CONSISTENTLY fix this problem?</p>
","<p>You need to read the Python <a href=""https://docs.python.org/2.7/howto/unicode.html"" rel=""noreferrer"">Unicode HOWTO</a>. This error is the <a href=""https://docs.python.org/2.7/howto/unicode.html#the-unicode-type"" rel=""noreferrer"">very first example</a>.</p>

<p>Basically, stop using <code>str</code> to convert from unicode to encoded text / bytes.</p>

<p>Instead, properly use <a href=""http://docs.python.org/library/stdtypes.html#str.encode"" rel=""noreferrer""><code>.encode()</code></a> to encode the string:</p>

<pre><code>p.agent_info = u' '.join((agent_contact, agent_telno)).encode('utf-8').strip()
</code></pre>

<p>or work entirely in unicode.</p>
","9942822"
"Python join: why is it string.join(list) instead of list.join(string)?","897459","","<p>This has always confused me. It seems like this would be nicer:</p>

<pre><code>my_list = [""Hello"", ""world""]
print my_list.join(""-"")
# Produce: ""Hello-world""
</code></pre>

<p>Than this:</p>

<pre><code>my_list = [""Hello"", ""world""]
print ""-"".join(my_list)
# Produce: ""Hello-world""
</code></pre>

<p>Is there a specific reason it is like this?</p>
","<p>It's because any iterable can be joined, not just lists, but the result and the ""joiner"" are always strings.</p>

<p>E.G:</p>

<pre><code>import urllib2
print '\n############\n'.join(
    urllib2.urlopen('http://data.stackexchange.com/users/7095'))
</code></pre>
","493842"
"Python remove all whitespace in a string","890756","","<p>I want to eliminate all the whitespace from a string, on both ends, and in between words.</p>

<p>I have this Python code:</p>

<pre><code>def my_handle(self):
    sentence = ' hello  apple  '
    sentence.strip()
</code></pre>

<p>But that only eliminates the whitespace on both sides of the string. How do I remove all whitespace?</p>
","<p>If you want to remove leading and ending spaces, use <a href=""http://docs.python.org/2/library/stdtypes.html#str.strip"" rel=""noreferrer""><code>str.strip()</code></a>: </p>

<pre><code>sentence = ' hello  apple'
sentence.strip()
&gt;&gt;&gt; 'hello  apple'
</code></pre>

<p>If you want to remove all spaces, use <a href=""http://docs.python.org/2/library/stdtypes.html#str.replace"" rel=""noreferrer""><code>str.replace()</code></a>:</p>

<pre><code>sentence = ' hello  apple'
sentence.replace("" "", """")
&gt;&gt;&gt; 'helloapple'
</code></pre>

<p>If you want to remove duplicated spaces, use <a href=""http://docs.python.org/2/library/stdtypes.html#str.split"" rel=""noreferrer""><code>str.split()</code></a>:</p>

<pre><code>sentence = ' hello  apple'
"" "".join(sentence.split())
&gt;&gt;&gt; 'hello apple'
</code></pre>
","8270146"
"How do I check what version of Python is running my script?","889153","","<p>How can I check what version of the Python Interpreter is interpreting my script?</p>
","<p>This information is available in the <a href=""http://docs.python.org/2/library/sys.html#sys.version"" rel=""noreferrer"">sys.version</a> string in the <a href=""http://docs.python.org/2/library/sys.html"" rel=""noreferrer"">sys</a> module:</p>

<pre><code>&gt;&gt;&gt; import sys
</code></pre>

<p>Human readable:</p>

<pre><code>&gt;&gt;&gt; print (sys.version) #parentheses necessary in python 3.       
2.5.2 (r252:60911, Jul 31 2008, 17:28:52) 
[GCC 4.2.3 (Ubuntu 4.2.3-2ubuntu7)]
</code></pre>

<p>For further processing:</p>

<pre><code>&gt;&gt;&gt; sys.version_info
(2, 5, 2, 'final', 0)
# or
&gt;&gt;&gt; sys.hexversion
34014192
</code></pre>

<p>To ensure a script runs with a minimal version requirement of the Python interpreter add this to your code:</p>

<pre><code>assert sys.version_info &gt;= (2,5)
</code></pre>

<p>This compares major and minor version information. Add micro (=<code>0</code>, <code>1</code>, etc) and even releaselevel (=<code>'alpha'</code>,<code>'final'</code>, etc) to the tuple as you like. Note however, that it is almost always better to ""duck"" check if a certain feature is there, and if not, workaround (or bail out). Sometimes features go away in newer releases, being replaced by others.</p>
","1093331"
"Way to create multiline comments in Python?","888715","","<p>I have recently started studying <a href=""http://en.wikipedia.org/wiki/Python_%28programming_language%29"" rel=""noreferrer"">Python</a>, but I couldn't find how to implement multi-line comments. Most languages have block comment symbols like </p>

<pre><code>/* 

*/
</code></pre>

<p>I tried this in Python, but it throws an error, so this probably is not the correct way. Does Python actually have a multiline comment feature?</p>
","<p>You can use triple-quoted strings. When they're not a docstring (first thing in a class/function/module), they are ignored. </p>

<pre><code>'''
This is a multiline
comment.
'''
</code></pre>

<p>(Make sure to indent the leading <code>'''</code> appropriately to avoid an <code>IndentationError</code>.)</p>

<p>Guido van Rossum (creator of Python) <a href=""https://twitter.com/gvanrossum/status/112670605505077248"" rel=""noreferrer"">tweeted this</a> as a ""pro tip"".</p>

<p>However, Python's style guide, PEP8, <a href=""http://www.python.org/dev/peps/pep-0008/#block-comments"" rel=""noreferrer"">favors using consecutive single-line comments</a>, and this is also what you'll find in many projects. Editors usually have a shortcut to do this easily.</p>
","7696966"
"Convert bytes to a string?","880995","","<p>I'm using this code to get standard output from an external program:</p>

<pre><code>&gt;&gt;&gt; from subprocess import *
&gt;&gt;&gt; command_stdout = Popen(['ls', '-l'], stdout=PIPE).communicate()[0]
</code></pre>

<p>The communicate() method returns an array of bytes:</p>

<pre><code>&gt;&gt;&gt; command_stdout
b'total 0\n-rw-rw-r-- 1 thomas thomas 0 Mar  3 07:03 file1\n-rw-rw-r-- 1 thomas thomas 0 Mar  3 07:03 file2\n'
</code></pre>

<p>However, I'd like to work with the output as a normal Python string. So that I could print it like this:</p>

<pre><code>&gt;&gt;&gt; print(command_stdout)
-rw-rw-r-- 1 thomas thomas 0 Mar  3 07:03 file1
-rw-rw-r-- 1 thomas thomas 0 Mar  3 07:03 file2
</code></pre>

<p>I thought that's what the <a href=""http://docs.python.org/3.0/library/binascii.html?highlight=b2a#binascii.b2a_qp"" rel=""noreferrer"">binascii.b2a_qp()</a> method is for, but when I tried it, I got the same byte array again:</p>

<pre><code>&gt;&gt;&gt; binascii.b2a_qp(command_stdout)
b'total 0\n-rw-rw-r-- 1 thomas thomas 0 Mar  3 07:03 file1\n-rw-rw-r-- 1 thomas thomas 0 Mar  3 07:03 file2\n'
</code></pre>

<p>Does anybody know how to convert the bytes value back to string? I mean, using the ""batteries"" instead of doing it manually. And I'd like it to be ok with Python 3.</p>
","<p>You need to decode the bytes object to produce a string:</p>

<pre><code>&gt;&gt;&gt; b""abcde""
b'abcde'

# utf-8 is used here because it is a very common encoding, but you
# need to use the encoding your data is actually in.
&gt;&gt;&gt; b""abcde"".decode(""utf-8"") 
'abcde'
</code></pre>
","606199"
"Python error ""ImportError: No module named""","877201","","<p>Python is installed in a local directory.  </p>

<p>My directory tree looks like this:</p>

<pre><code>(local directory)/site-packages/toolkit/interface.py
</code></pre>

<p>My code is in here:</p>

<pre><code>(local directory)/site-packages/toolkit/examples/mountain.py
</code></pre>

<p>To run the example, I write <code>python mountain.py</code>, and in the code I have:</p>

<pre><code>from toolkit.interface import interface
</code></pre>

<p>And I get the error:</p>

<pre><code>Traceback (most recent call last):
  File ""mountain.py"", line 28, in ?
    from toolkit.interface import interface
ImportError: No module named toolkit.interface
</code></pre>

<p>I have already checked <code>sys.path</code> and there I have the directory <code>/site-packages</code>. Also, I have the file <code>__init__.py.bin</code> in the toolkit folder to indicate to Python that this is a package. I also have a <code>__init__.py.bin</code> in the examples directory.</p>

<p>I do not know why Python cannot find the file when it is in <code>sys.path</code>.  Any ideas?  Can it be a permissions problem?  Do I need some execution permission?</p>
","<p>Based on your comments to orip's post, I guess this is what happened:</p>

<ol>
<li>You edited <code>__init__.py</code> on windows.</li>
<li>The windows editor added something non-printing, perhaps a carriage-return (end-of-line in Windows is CR/LF; in unix it is LF only), or perhaps a CTRL-Z (windows end-of-file).</li>
<li>You used WinSCP to copy the file to your unix box.</li>
<li>WinSCP thought: ""This has something that's not basic text; I'll put a .bin extension to indicate binary data.""</li>
<li>The missing <code>__init__.py</code> (now called <code>__init__.py.bin</code>) means python doesn't understand toolkit as a package.</li>
<li>You create <code>__init__.py</code> in the appropriate directory and everything works... ?</li>
</ol>
","339220"
"How do I check if a string is a number (float)?","863853","","<p>What is the best possible way to check if a string can be represented as a number in Python? </p>

<p>The function I currently have right now is:</p>

<pre><code>def is_number(s):
    try:
        float(s)
        return True
    except ValueError:
        return False
</code></pre>

<p>Which, not only is ugly and slow, seems clunky. However I haven't found a better method because calling <code>float</code> in the main function is even worse. </p>
","<blockquote>
  <p>Which, not only is ugly and slow</p>
</blockquote>

<p>I'd dispute both.</p>

<p>A regex or other string parsing would be uglier and slower.  </p>

<p>I'm not sure that anything much could be faster than the above.  It calls the function and returns.  Try/Catch doesn't introduce much overhead because the most common exception is caught without an extensive search of stack frames.</p>

<p>The issue is that any numeric conversion function has two kinds of results</p>

<ul>
<li>A number, if the number is valid</li>
<li>A status code (e.g., via errno) or exception to show that no valid number could be parsed.</li>
</ul>

<p>C (as an example) hacks around this a number of ways.  Python lays it out clearly and explicitly.</p>

<p>I think your code for doing this is perfect.</p>
","354130"
"Manually raising (throwing) an exception in Python","863170","","<p>How can I raise an exception in Python so that it can later be caught via an <code>except</code> block?</p>
","<blockquote>
  <h2>How do I manually throw/raise an exception in Python?</h2>
</blockquote>

<p><a href=""https://docs.python.org/3/library/exceptions.html#exception-hierarchy"" rel=""noreferrer"">Use the most specific Exception constructor that semantically fits your issue</a>.  </p>

<p>Be specific in your message, e.g.:</p>

<pre><code>raise ValueError('A very specific bad thing happened.')
</code></pre>

<h2>Don't raise generic exceptions</h2>

<p>Avoid raising a generic Exception. To catch it, you'll have to catch all other more specific exceptions that subclass it.</p>

<h3>Problem 1: Hiding bugs</h3>

<pre><code>raise Exception('I know Python!') # Don't! If you catch, likely to hide bugs.
</code></pre>

<p>For example:</p>

<pre><code>def demo_bad_catch():
    try:
        raise ValueError('Represents a hidden bug, do not catch this')
        raise Exception('This is the exception you expect to handle')
    except Exception as error:
        print('Caught this error: ' + repr(error))

&gt;&gt;&gt; demo_bad_catch()
Caught this error: ValueError('Represents a hidden bug, do not catch this',)
</code></pre>

<h3>Problem 2: Won't catch</h3>

<p>and more specific catches won't catch the general exception:</p>

<pre><code>def demo_no_catch():
    try:
        raise Exception('general exceptions not caught by specific handling')
    except ValueError as e:
        print('we will not catch exception: Exception')


&gt;&gt;&gt; demo_no_catch()
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
  File ""&lt;stdin&gt;"", line 3, in demo_no_catch
Exception: general exceptions not caught by specific handling
</code></pre>

<h2>Best Practices: <code>raise</code> statement</h2>

<p><a href=""https://docs.python.org/3/library/exceptions.html#exception-hierarchy"" rel=""noreferrer"">Instead, use the most specific Exception constructor that semantically fits your issue</a>.</p>

<pre><code>raise ValueError('A very specific bad thing happened')
</code></pre>

<p>which also handily allows an arbitrary number of arguments to be passed to the constructor:</p>

<pre><code>raise ValueError('A very specific bad thing happened', 'foo', 'bar', 'baz') 
</code></pre>

<p>These arguments are accessed by the <code>args</code> attribute on the Exception object. For example:</p>

<pre><code>try:
    some_code_that_may_raise_our_value_error()
except ValueError as err:
    print(err.args)
</code></pre>

<p>prints </p>

<pre><code>('message', 'foo', 'bar', 'baz')    
</code></pre>

<p>In Python 2.5, an actual <code>message</code> attribute was added to BaseException in favor of encouraging users to subclass Exceptions and stop using <code>args</code>, but <a href=""http://www.python.org/dev/peps/pep-0352/#retracted-ideas"" rel=""noreferrer"">the introduction of <code>message</code> and the original deprecation of args has been retracted</a>.</p>

<h2>Best Practices: <code>except</code> clause</h2>

<p>When inside an except clause, you might want to, for example, log that a specific type of error happened, and then re-raise. The best way to do this while preserving the stack trace is to use a bare raise statement. For example:</p>

<pre><code>logger = logging.getLogger(__name__)

try:
    do_something_in_app_that_breaks_easily()
except AppError as error:
    logger.error(error)
    raise                 # just this!
    # raise AppError      # Don't do this, you'll lose the stack trace!
</code></pre>

<h3>Don't modify your errors... but if you insist.</h3>

<p>You can preserve the stacktrace (and error value) with <code>sys.exc_info()</code>, but <strong>this is way more error prone</strong> and <strong>has compatibility problems between Python 2 and 3</strong>, prefer to use a bare <code>raise</code> to re-raise. </p>

<p>To explain - the <code>sys.exc_info()</code> returns the type, value, and traceback. </p>

<pre><code>type, value, traceback = sys.exc_info()
</code></pre>

<p>This is the syntax in Python 2 - note this is not compatible with Python 3:</p>

<pre><code>    raise AppError, error, sys.exc_info()[2] # avoid this.
    # Equivalently, as error *is* the second object:
    raise sys.exc_info()[0], sys.exc_info()[1], sys.exc_info()[2]
</code></pre>

<p>If you want to, you can modify what happens with your new raise - e.g. setting new args for the instance:</p>

<pre><code>def error():
    raise ValueError('oops!')

def catch_error_modify_message():
    try:
        error()
    except ValueError:
        error_type, error_instance, traceback = sys.exc_info()
        error_instance.args = (error_instance.args[0] + ' &lt;modification&gt;',)
        raise error_type, error_instance, traceback
</code></pre>

<p>And we have preserved the whole traceback while modifying the args. Note that this is <strong>not a best practice</strong> and it is <strong>invalid syntax</strong> in Python 3 (making keeping compatibility much harder to work around).</p>

<pre><code>&gt;&gt;&gt; catch_error_modify_message()
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
  File ""&lt;stdin&gt;"", line 3, in catch_error_modify_message
  File ""&lt;stdin&gt;"", line 2, in error
ValueError: oops! &lt;modification&gt;
</code></pre>

<p>In <a href=""https://docs.python.org/3/reference/simple_stmts.html#the-raise-statement"" rel=""noreferrer"">Python 3</a>:</p>

<pre><code>    raise error.with_traceback(sys.exc_info()[2])
</code></pre>

<p>Again: avoid manually manipulating tracebacks. It's <a href=""https://docs.python.org/2/reference/simple_stmts.html#the-raise-statement"" rel=""noreferrer"">less efficient</a> and more error prone. And if you're using threading and <code>sys.exc_info</code> you may even get the wrong traceback (especially if you're using exception handling for control flow - which I'd personally tend to avoid.)</p>

<h3>Python 3, Exception chaining</h3>

<p>In Python 3, you can chain Exceptions, which preserve tracebacks:</p>

<pre><code>    raise RuntimeError('specific message') from error
</code></pre>

<p>Be aware:</p>

<ul>
<li>this <em>does</em> allow changing the error type raised, and</li>
<li>this is <em>not</em> compatible with Python 2.</li>
</ul>

<h3>Deprecated Methods:</h3>

<p>These can easily hide and even get into production code. You want to raise an exception, and doing them will raise an exception, <strong>but not the one intended!</strong></p>

<p><a href=""http://www.python.org/dev/peps/pep-3109/"" rel=""noreferrer"">Valid in Python 2, but not in Python 3</a> is the following:</p>

<pre><code>raise ValueError, 'message' # Don't do this, it's deprecated!
</code></pre>

<p>Only <a href=""https://docs.python.org/2/whatsnew/2.5.html#pep-352-exceptions-as-new-style-classes"" rel=""noreferrer"">valid in much older versions of Python</a> (2.4 and lower), you may still see people raising strings:</p>

<pre><code>raise 'message' # really really wrong. don't do this.
</code></pre>

<p>In all modern versions, this will actually raise a TypeError, because you're not raising a BaseException type. If you're not checking for the right exception and don't have a reviewer that's aware of the issue, it could get into production.</p>

<h2>Example Usage</h2>

<p>I raise Exceptions to warn consumers of my API if they're using it incorrectly:</p>

<pre><code>def api_func(foo):
    '''foo should be either 'baz' or 'bar'. returns something very useful.'''
    if foo not in _ALLOWED_ARGS:
        raise ValueError('{foo} wrong, use ""baz"" or ""bar""'.format(foo=repr(foo)))
</code></pre>

<h2>Create your own error types when apropos</h2>

<blockquote>
  <p><strong>""I want to make an error on purpose, so that it would go into the except""</strong></p>
</blockquote>

<p>You can create your own error types, if you want to indicate something specific is wrong with your application, just subclass the appropriate point in the exception hierarchy:</p>

<pre><code>class MyAppLookupError(LookupError):
    '''raise this when there's a lookup error for my app'''
</code></pre>

<p>and usage:</p>

<pre><code>if important_key not in resource_dict and not ok_to_be_missing:
    raise MyAppLookupError('resource is missing, and that is not ok.')
</code></pre>
","24065533"
"Comment out a Python code block","862873","","<p>Is there a mechanism to comment out large blocks of Python code?</p>

<p>Right now, the only ways I can see of commenting out code are to either start every line with a <code>#</code>, or to enclose the code in triple quotes: <code>""""""</code>.</p>

<p>The problem with these is that inserting <code>#</code> before every line is cumbersome and <code>""""""</code> makes the string I want to use as a comment show up in generated documentation.</p>

<p>After reading all comments, the answer seems to be ""No"".</p>
","<p>Python does not have such a mechanism. Prepend a <code>#</code> to each line to block comment. For more information see <a href=""http://www.python.org/dev/peps/pep-0008/"" rel=""noreferrer"">PEP 8</a>. Most Python IDEs support a mechanism to do the block-commenting-with-pound-signs automatically for you. For example, in IDLE on my machine, it's <kbd>Alt</kbd>+<kbd>3</kbd> and <kbd>Alt</kbd>+<kbd>4</kbd>.</p>

<p><strong>Don't use triple-quotes;</strong> as you discovered, this is for documentation strings not block comments, although it has a similar effect. If you're just commenting things out temporarily, this is fine as a temporary measure.</p>
","675448"
"Access environment variables from Python","861625","","<p>I set an environment variable that I want to access in my Python application.  How do I get this value?</p>
","<p>Environment variables are accessed through <a href=""http://docs.python.org/2/library/os.html#process-parameters"" rel=""noreferrer"">os.environ</a></p>

<pre><code>import os
print os.environ['HOME']
</code></pre>

<p>Or you can see a list of all the environment variables using:</p>

<pre><code>os.environ
</code></pre>

<p>As sometimes you might need to see a complete list!</p>

<pre><code># using get will return `None` if a key is not present rather than raise a `KeyError`
print os.environ.get('KEY_THAT_MIGHT_EXIST')

# os.getenv is equivalent, and can also give a default value instead of `None`
print os.getenv('KEY_THAT_MIGHT_EXIST', default_value)
</code></pre>

<p><a href=""http://docs.python.org/install/index.html#how-installation-works"" rel=""noreferrer"">Python default installation</a> on Windows is <code>C:\Python</code>. If you want to find out while running python you can do:</p>

<pre><code>import sys
print sys.prefix
</code></pre>
","4907053"
"How do I pass a variable by reference?","852590","","<p>The Python documentation seems unclear about whether parameters are passed by reference or value, and the following code produces the unchanged value 'Original'</p>

<pre><code>class PassByReference:
    def __init__(self):
        self.variable = 'Original'
        self.change(self.variable)
        print(self.variable)

    def change(self, var):
        var = 'Changed'
</code></pre>

<p>Is there something I can do to pass the variable by actual reference?</p>
","<p>Arguments are <a href=""http://docs.python.org/3/faq/programming.html#how-do-i-write-a-function-with-output-parameters-call-by-reference"" rel=""noreferrer"">passed by assignment</a>. The rationale behind this is twofold:</p>

<ol>
<li>the parameter passed in is actually a <em>reference</em> to an object (but the reference is passed by value)</li>
<li>some data types are mutable, but others aren't</li>
</ol>

<p>So:</p>

<ul>
<li><p>If you pass a <em>mutable</em> object into a method, the method gets a reference to that same object and you can mutate it to your heart's delight, but if you rebind the reference in the method, the outer scope will know nothing about it, and after you're done, the outer reference will still point at the original object. </p></li>
<li><p>If you pass an <em>immutable</em> object to a method, you still can't rebind the outer reference, and you can't even mutate the object.</p></li>
</ul>

<p>To make it even more clear, let's have some examples. </p>

<h2>List - a mutable type</h2>

<p><strong>Let's try to modify the list that was passed to a method:</strong></p>

<pre><code>def try_to_change_list_contents(the_list):
    print('got', the_list)
    the_list.append('four')
    print('changed to', the_list)

outer_list = ['one', 'two', 'three']

print('before, outer_list =', outer_list)
try_to_change_list_contents(outer_list)
print('after, outer_list =', outer_list)
</code></pre>

<p>Output:</p>

<pre class=""lang-none prettyprint-override""><code>before, outer_list = ['one', 'two', 'three']
got ['one', 'two', 'three']
changed to ['one', 'two', 'three', 'four']
after, outer_list = ['one', 'two', 'three', 'four']
</code></pre>

<p>Since the parameter passed in is a reference to <code>outer_list</code>, not a copy of it, we can use the mutating list methods to change it and have the changes reflected in the outer scope.</p>

<p><strong>Now let's see what happens when we try to change the reference that was passed in as a parameter:</strong></p>

<pre><code>def try_to_change_list_reference(the_list):
    print('got', the_list)
    the_list = ['and', 'we', 'can', 'not', 'lie']
    print('set to', the_list)

outer_list = ['we', 'like', 'proper', 'English']

print('before, outer_list =', outer_list)
try_to_change_list_reference(outer_list)
print('after, outer_list =', outer_list)
</code></pre>

<p>Output:</p>

<pre class=""lang-none prettyprint-override""><code>before, outer_list = ['we', 'like', 'proper', 'English']
got ['we', 'like', 'proper', 'English']
set to ['and', 'we', 'can', 'not', 'lie']
after, outer_list = ['we', 'like', 'proper', 'English']
</code></pre>

<p>Since the <code>the_list</code> parameter was passed by value, assigning a new list to it had no effect that the code outside the method could see. The <code>the_list</code> was a copy of the <code>outer_list</code> reference, and we had <code>the_list</code> point to a new list, but there was no way to change where <code>outer_list</code> pointed.</p>

<h2>String - an immutable type</h2>

<p><strong>It's immutable, so there's nothing we can do to change the contents of the string</strong></p>

<p><strong>Now, let's try to change the reference</strong></p>

<pre><code>def try_to_change_string_reference(the_string):
    print('got', the_string)
    the_string = 'In a kingdom by the sea'
    print('set to', the_string)

outer_string = 'It was many and many a year ago'

print('before, outer_string =', outer_string)
try_to_change_string_reference(outer_string)
print('after, outer_string =', outer_string)
</code></pre>

<p>Output:</p>

<pre class=""lang-none prettyprint-override""><code>before, outer_string = It was many and many a year ago
got It was many and many a year ago
set to In a kingdom by the sea
after, outer_string = It was many and many a year ago
</code></pre>

<p>Again, since the <code>the_string</code> parameter was passed by value, assigning a new string to it had no effect that the code outside the method could see. The <code>the_string</code> was a copy of the <code>outer_string</code> reference, and we had <code>the_string</code> point to a new string, but there was no way to change where <code>outer_string</code> pointed.</p>

<p>I hope this clears things up a little.</p>

<p><strong>EDIT:</strong> It's been noted that this doesn't answer the question that @David originally asked, ""Is there something I can do to pass the variable by actual reference?"". Let's work on that.</p>

<h2>How do we get around this?</h2>

<p>As @Andrea's answer shows, you could return the new value. This doesn't change the way things are passed in, but does let you get the information you want back out:</p>

<pre><code>def return_a_whole_new_string(the_string):
    new_string = something_to_do_with_the_old_string(the_string)
    return new_string

# then you could call it like
my_string = return_a_whole_new_string(my_string)
</code></pre>

<p>If you really wanted to avoid using a return value, you could create a class to hold your value and pass it into the function or use an existing class, like a list:</p>

<pre><code>def use_a_wrapper_to_simulate_pass_by_reference(stuff_to_change):
    new_string = something_to_do_with_the_old_string(stuff_to_change[0])
    stuff_to_change[0] = new_string

# then you could call it like
wrapper = [my_string]
use_a_wrapper_to_simulate_pass_by_reference(wrapper)

do_something_with(wrapper[0])
</code></pre>

<p>Although this seems a little cumbersome.</p>
","986145"
"How to clone or copy a list?","849259","","<p>What are the options to clone or copy a list in Python?</p>

<p>Using <code>new_list = my_list</code> then modifies <code>new_list</code> every time <code>my_list</code> changes.<br>
Why is this?</p>
","<p>With <code>new_list = my_list</code>, you don't actually have two lists. The assignment just copies the reference to the list, not the actual list, so both <code>new_list</code> and <code>my_list</code> refer to the same list after the assignment.</p>

<p>To actually copy the list, you have various possibilities:</p>

<ul>
<li><p>You can slice it: </p>

<pre><code>new_list = old_list[:]
</code></pre>

<p><a href=""https://en.wikipedia.org/wiki/Alex_Martelli"" rel=""noreferrer"" title=""Alex Martelli"">Alex Martelli's</a> opinion (at least <a href=""https://www.youtube.com/watch?v=g7V89K8QfgQ"" rel=""noreferrer"" title=""Bay Area Python Interest Group August 2007 Meeting"">back in 2007</a>) about this is, that <em>it is a weird syntax and it does not make sense to use it ever</em>. ;) (In his opinion, the next one is more readable).</p></li>
<li><p>You can use the built in <a href=""https://docs.python.org/2/library/functions.html#list"" rel=""noreferrer"" title=""list""><code>list()</code></a> function:</p>

<pre><code>new_list = list(old_list)
</code></pre></li>
<li><p>You can use generic <a href=""https://docs.python.org/2/library/copy.html#copy.copy"" rel=""noreferrer"" title=""copy.copy""><code>copy.copy()</code></a>:</p>

<pre><code>import copy
new_list = copy.copy(old_list)
</code></pre>

<p>This is a little slower than <code>list()</code> because it has to find out the datatype of <code>old_list</code> first.</p></li>
<li><p>If the list contains objects and you want to copy them as well, use generic <a href=""https://docs.python.org/2/library/copy.html#copy.deepcopy"" rel=""noreferrer"" title=""copy.deepcopy""><code>copy.deepcopy()</code></a>:</p>

<pre><code>import copy
new_list = copy.deepcopy(old_list)
</code></pre>

<p>Obviously the slowest and most memory-needing method, but sometimes unavoidable.</p></li>
</ul>

<p><strong>Example:</strong></p>

<pre><code>import copy

class Foo(object):
    def __init__(self, val):
         self.val = val

    def __repr__(self):
        return str(self.val)

foo = Foo(1)

a = ['foo', foo]
b = a[:]
c = list(a)
d = copy.copy(a)
e = copy.deepcopy(a)

# edit orignal list and instance 
a.append('baz')
foo.val = 5

print('original: %r\n slice: %r\n list(): %r\n copy: %r\n deepcopy: %r'
      % (a, b, c, d, e))
</code></pre>

<p>Result:</p>

<pre><code>original: ['foo', 5, 'baz']
slice: ['foo', 5]
list(): ['foo', 5]
copy: ['foo', 5]
deepcopy: ['foo', 1]
</code></pre>
","2612815"
"Delete column from pandas DataFrame using python del","846643","","<p>When deleting a column in a DataFrame I use:</p>

<pre><code>del df['column_name']
</code></pre>

<p>and this works great. Why can't I use:</p>

<pre><code>del df.column_name
</code></pre>

<p><em>As you can access the column/Series as <code>df.column_name</code>, I expect this to work.</em></p>
","<p>It's difficult to make <code>del df.column_name</code> work simply as the result of syntactic limitations in Python. <code>del df[name]</code> gets translated to <code>df.__delitem__(name)</code> under the covers by Python.</p>
","13485766"
"How can I reverse a list in python?","843477","","<p>How can I do this in python?</p>

<pre><code>array = [0,10,20,40]
for (i = array.length() - 1 ;i &gt;= 0; i--)
</code></pre>

<p>I need to have the elements of an array but from the end to the beginning.</p>
","<p>You can make use of the <a href=""https://www.python.org/dev/peps/pep-0322/"" rel=""noreferrer""><code>reversed</code></a> function for this as:</p>

<pre><code>&gt;&gt;&gt; array=[0,10,20,40]
&gt;&gt;&gt; for i in reversed(array):
...     print(i)
</code></pre>

<p>Note that <code>reversed(...)</code> does not return a list. You can get a reversed list using <code>list(reversed(array))</code>.</p>
","3940144"
"How to delete a character from a string using python?","839769","","<p>There is a string, for example <code>EXAMPLE</code></p>

<p>How can I remove the middle character i.e. <code>M</code> from it. I don't need the code, what I want to know is</p>

<ul>
<li>Do strings in python end in any special character?</li>
<li>Which is a better way - shifting everything right to left starting from the middle character OR creation of a new string and not copying the middle character?</li>
</ul>
","<p>In Python, strings are immutable, so you have to create a new string.  You have a few options of how to create the new string.  If you want to remove the 'M' wherever it appears:</p>

<pre><code>newstr = oldstr.replace(""M"", """")
</code></pre>

<p>If you want to remove the central character:</p>

<pre><code>midlen = len(oldstr)/2
newstr = oldstr[:midlen] + oldstr[midlen+1:]
</code></pre>

<p>You asked if strings end with a special character.  No, you are thinking like a C programmer.  In Python, strings are stored with their length, so any byte value, including <code>\0</code>, can appear in a string.</p>
","3559600"
"ASCII value of a character in Python","836598","","<p>How do I get the <a href=""http://en.wikipedia.org/wiki/ASCII"" rel=""noreferrer"">ASCII</a> value of a character as an int in <a href=""http://en.wikipedia.org/wiki/Python_%28programming_language%29"" rel=""noreferrer"">Python</a>?</p>
","<p>From <a href=""http://mail.python.org/pipermail/python-win32/2005-April/003100.html"" rel=""noreferrer"">here</a>:</p>

<blockquote>
  <p>function ord() would get the int value
  of the char. And in case you want to
  convert back after playing with the
  number, function chr() does the trick.</p>
</blockquote>

<pre><code>&gt;&gt;&gt; ord('a')
97
&gt;&gt;&gt; chr(97)
'a'
&gt;&gt;&gt; chr(ord('a') + 3)
'd'
&gt;&gt;&gt;
</code></pre>

<p>In Python 2, there is also the <code>unichr</code> function, returning the <a href=""http://en.wikipedia.org/wiki/Unicode"" rel=""noreferrer"">Unicode</a> character whose ordinal is the <code>unichr</code> argument:</p>

<pre><code>&gt;&gt;&gt; unichr(97)
u'a'
&gt;&gt;&gt; unichr(1234)
u'\u04d2'
</code></pre>

<p>In Python 3 you can use <code>chr</code> instead of <code>unichr</code>.</p>
","227472"
"Python string formatting: % vs. .format","836372","","<p>Python 2.6 introduced the <a href=""https://docs.python.org/2/library/stdtypes.html#str.format"" rel=""noreferrer""><code>str.format()</code></a> method with a slightly different syntax from the existing <code>%</code> operator. Which is better and for what situations?</p>

<ol>
<li><p>The following uses each method and has the same outcome, so what is the difference?</p>

<pre><code>#!/usr/bin/python
sub1 = ""python string!""
sub2 = ""an arg""

a = ""i am a %s"" % sub1
b = ""i am a {0}"".format(sub1)

c = ""with %(kwarg)s!"" % {'kwarg':sub2}
d = ""with {kwarg}!"".format(kwarg=sub2)

print a    # ""i am a python string!""
print b    # ""i am a python string!""
print c    # ""with an arg!""
print d    # ""with an arg!""
</code></pre></li>
<li><p>Furthermore when does string formatting occur in Python? For example, if my logging level is set to HIGH will I still take a hit for performing the following <code>%</code> operation? And if so, is there a way to avoid this?</p>

<pre><code>log.debug(""some debug info: %s"" % some_info)
</code></pre></li>
</ol>
","<p>To answer your first question... <code>.format</code> just seems more sophisticated in many ways. An annoying thing about <code>%</code> is also how it can either take a variable or a tuple. You'd think the following would always work:</p>

<pre><code>""hi there %s"" % name
</code></pre>

<p>yet, if <code>name</code> happens to be <code>(1, 2, 3)</code>, it will throw a <code>TypeError</code>. To guarantee that it always prints, you'd need to do</p>

<pre><code>""hi there %s"" % (name,)   # supply the single argument as a single-item tuple
</code></pre>

<p>which is just ugly. <code>.format</code> doesn't have those issues. Also in the second example you gave, the <code>.format</code> example is much cleaner looking.</p>

<p>Why would you not use it? </p>

<ul>
<li>not knowing about it (me before reading this)</li>
<li>having to be compatible with Python 2.5</li>
</ul>

<hr>

<p>To answer your second question, string formatting happens at the same time as any other operation - when the string formatting expression is evaluated. And Python, not being a lazy language, evaluates expressions before calling functions, so in your <code>log.debug</code> example, the expression <code>""some debug info: %s""%some_info</code>will first evaluate to, e.g. <code>""some debug info: roflcopters are active""</code>, then that string will be passed to <code>log.debug()</code>. </p>
","5082482"
"Try/Except in Python: How do you properly ignore Exceptions?","833281","","<p>When you just want to do a try-except without handling the exception, how do you do it in Python?</p>

<p>Is the following the right way to do it?</p>

<pre><code>try:
    shutil.rmtree(path)
except:
    pass
</code></pre>
","<pre><code>try:
  doSomething()
except: 
  pass
</code></pre>

<p>or</p>

<pre><code>try:
  doSomething()
except Exception: 
  pass
</code></pre>

<p>The difference is, that the first one will also catch <code>KeyboardInterrupt</code>, <code>SystemExit</code> and stuff like that, which are derived directly from <code>exceptions.BaseException</code>, not <code>exceptions.Exception</code>.<br/> See documentation for details:</p>

<ul>
<li>try statement &mdash; <a href=""http://docs.python.org/reference/compound_stmts.html#try"" rel=""noreferrer"">http://docs.python.org/reference/compound_stmts.html#try</a></li>
<li>exceptions &mdash; <a href=""http://docs.python.org/library/exceptions"" rel=""noreferrer"">http://docs.python.org/library/exceptions</a></li>
</ul>
","730778"
"How to count the occurrences of a list item?","832497","","<p>Given an item, how can I count its occurrences in a list in Python?</p>
","<p>If you only want one item's count, use the <code>count</code> method:</p>

<pre><code>&gt;&gt;&gt; [1, 2, 3, 4, 1, 4, 1].count(1)
3
</code></pre>

<p><strong>Don't</strong> use this if you want to count multiple items. Calling <code>count</code> in a loop requires a separate pass over the list for every <code>count</code> call, which can be catastrophic for performance. If you want to count all items, or even just multiple items, use <code>Counter</code>, as explained in the other answers.</p>
","2600208"
"Writing a list to a file with Python","828339","","<p>Is this the cleanest way to write a list to a file, since <code>writelines()</code> doesn't insert newline characters?</p>

<pre><code>file.writelines([""%s\n"" % item  for item in list])
</code></pre>

<p>It seems like there would be a standard way...</p>
","<blockquote>
  <p><strong>EDIT</strong> Adding info from <a href=""https://stackoverflow.com/users/306312/thomas"">Thomas</a>' comment</p>
  
  <p>Don't forget to open the file first</p>
  
  <p><code>thefile = open('test.txt', 'w')</code></p>
</blockquote>

<p>I'd use a loop:</p>

<pre><code>for item in thelist:
  thefile.write(""%s\n"" % item)
</code></pre>

<p>or:</p>

<pre><code>for item in thelist:
  print&gt;&gt;thefile, item
</code></pre>

<p>If you're keen on a single function call, at least remove the square brackets <code>[]</code> so that the strings to be printed get made one at a time (a genexp rather than a listcomp) -- no reason to take up all the memory required to materialize the whole list of strings.</p>
","899176"
"Trimming a string in Python","828216","","<p>How do I remove leading and trailing whitespace from a string in Python?</p>

<p>For example:</p>

<pre><code>"" Hello "" --&gt; ""Hello""
"" Hello""  --&gt; ""Hello""
""Hello ""  --&gt; ""Hello""
""Bob has a cat"" --&gt; ""Bob has a cat""
</code></pre>
","<p>Just one space, or all such spaces?  If the second, then strings already have a <code>.strip()</code> method:</p>

<pre><code>&gt;&gt;&gt; ' Hello '.strip()
'Hello'
&gt;&gt;&gt; ' Hello'.strip()
'Hello'
&gt;&gt;&gt; 'Bob has a cat'.strip()
'Bob has a cat'
&gt;&gt;&gt; '          Hello        '.strip()  # ALL spaces at ends removed
'Hello'
</code></pre>

<p>If you need only to remove one space however, you could do it with:</p>

<pre><code>def strip_one_space(s):
    if s.endswith("" ""): s = s[:-1]
    if s.startswith("" ""): s = s[1:]
    return s

&gt;&gt;&gt; strip_one_space(""   Hello "")
'  Hello'
</code></pre>

<p>Also, note that <code>str.strip()</code> removes other whitespace characters as well (e.g. tabs and newlines).  To remove only spaces, you can specify the character to remove as an argument to <code>strip</code>, i.e.:</p>

<pre><code>&gt;&gt;&gt; ""  Hello\n"".strip("" "")
'Hello\n'
</code></pre>
","761825"
"How do I trim whitespace?","826453","","<p>Is there a Python function that will trim whitespace (spaces and tabs) from a string?</p>

<p>Example: <code>\t example string\t</code> → <code>example string</code></p>
","<p>Whitespace on both sides:</p>

<pre><code>s = ""  \t a string example\t  ""
s = s.strip()
</code></pre>

<p>Whitespace on the right side:</p>

<pre><code>s = s.rstrip()
</code></pre>

<p>Whitespace on the left side:</p>

<pre><code>s = s.lstrip()
</code></pre>

<p>As <a href=""https://stackoverflow.com/users/84380/thedz"">thedz</a> points out, you can provide an argument to strip arbitrary characters to any of these functions like this:</p>

<pre><code>s = s.strip(' \t\n\r')
</code></pre>

<p>This will strip any space, <code>\t</code>, <code>\n</code>, or <code>\r</code> characters from the left-hand side, right-hand side, or both sides of the string. </p>

<p>The examples above only remove strings from the left-hand and right-hand sides of strings. If you want to also remove characters from the middle of a string, try <code>re.sub</code>:</p>

<pre><code>import re
print re.sub('[\s+]', '', s)
</code></pre>

<p>That should print out:</p>

<pre><code>astringexample
</code></pre>
","1185529"
"Delete an item from a dictionary","824157","","<p>Is there a way to delete an item from a dictionary in Python?</p>

<p>I know I can just call <code>.pop</code> on the dictionary, but that returns the item that was removed. What I'm looking for is something returns the dictionary <em>minus</em> the element in question. </p>

<p>At present I have a helper function that accepts the dictionary in question as parameter, and then returns a dictionary with the item removed, Is there a more elegant solution?</p>
","<p>The <a href=""http://docs.python.org/reference/simple_stmts.html#grammar-token-del_stmt"" rel=""noreferrer""><code>del</code> statement</a> removes an element:</p>

<pre><code>del d[key]
</code></pre>

<p>However, this mutates the existing dictionary so the contents of the dictionary changes for anybody else who has a reference to the same instance. To return a <em>new</em> dictionary, make a copy of the dictionary:</p>

<pre><code>def removekey(d, key):
    r = dict(d)
    del r[key]
    return r
</code></pre>

<p>The <code>dict()</code> constructor makes a <em>shallow copy</em>. To make a deep copy, see the <a href=""https://docs.python.org/library/copy.html"" rel=""noreferrer""><code>copy</code> module</a>.</p>
","5844692"
"Static class variables in Python","819776","","<p>Is it possible to have static class variables or methods in python? What syntax is required to do this?</p>
","<p>Variables declared inside the class definition, but not inside a method are class or static variables:</p>

<pre><code>&gt;&gt;&gt; class MyClass:
...     i = 3
...
&gt;&gt;&gt; MyClass.i
3 
</code></pre>

<p>As @<a href=""https://stackoverflow.com/questions/68645/static-class-variables-in-python#answer-69067"">millerdev</a> points out, this creates a class-level <code>i</code> variable, but this is distinct from any instance-level <code>i</code> variable, so you could have</p>

<pre><code>&gt;&gt;&gt; m = MyClass()
&gt;&gt;&gt; m.i = 4
&gt;&gt;&gt; MyClass.i, m.i
&gt;&gt;&gt; (3, 4)
</code></pre>

<p>This is different from C++ and Java, but not so different from C#, where a static member can't be accessed using a reference to an instance.</p>

<p>See <a href=""https://docs.python.org/2/tutorial/classes.html#class-objects"" rel=""noreferrer"">what the Python tutorial has to say on the subject of classes and class objects</a>.</p>

<p>@Steve Johnson has already answered regarding <a href=""http://web.archive.org/web/20090214211613/http://pyref.infogami.com/staticmethod"" rel=""noreferrer"">static methods</a>, also documented under <a href=""https://docs.python.org/2/library/functions.html#staticmethod"" rel=""noreferrer"">""Built-in Functions"" in the Python Library Reference</a>.</p>

<pre><code>class C:
    @staticmethod
    def f(arg1, arg2, ...): ...
</code></pre>

<p>@beidy recommends <a href=""https://docs.python.org/2/library/functions.html#classmethod"" rel=""noreferrer"">classmethod</a>s over staticmethod, as the method then receives the class type as the first argument, but I'm still a little fuzzy on the advantages of this approach over staticmethod. If you are too, then it probably doesn't matter.</p>
","68672"
"Reverse a string in Python","818004","","<p>There is no built in <code>reverse</code> function for Python's <code>str</code> object. What is the best way of implementing this method?</p>

<p>If supplying a very concise answer, please elaborate on its efficiency. For example, whether the <code>str</code> object is converted to a different object, etc. </p>
","<p>How about:</p>

<pre><code>&gt;&gt;&gt; 'hello world'[::-1]
'dlrow olleh'
</code></pre>

<p>This is <a href=""http://docs.python.org/2/whatsnew/2.3.html#extended-slices"" rel=""noreferrer"">extended slice</a> syntax. It works by doing <code>[begin:end:step]</code> - by leaving begin and end off and specifying a step of -1, it reverses a string.</p>
","931095"
"Most elegant way to check if the string is empty in Python?","815091","","<p>Does Python have something like an empty string variable where you can do?:</p>

<pre><code>if myString == string.empty:
</code></pre>

<p>Regardless what's the most elegant way to check for empty string values? I find hard coding <code>""""</code> every time for checking an empty string not as good.</p>
","<p>Empty strings are <a href=""http://docs.python.org/2/library/stdtypes.html#truth-value-testing"" rel=""noreferrer"">""falsy""</a> which means they are considered false in a Boolean context, so you can just do this:</p>

<pre><code>if not myString:
</code></pre>

<p>This is the preferred way if you know that your variable is a string.  If your variable could also be some other type then you should use <code>myString == """"</code>.  See the documentation on <a href=""http://docs.python.org/library/stdtypes.html#truth-value-testing"" rel=""noreferrer"">Truth Value Testing</a> for other values that are false in Boolean contexts.</p>
","9573259"
"Emulate a do-while loop in Python?","810583","","<p>I need to emulate a do-while loop in a Python program. Unfortunately, the following straightforward code does not work:</p>

<pre><code>l = [ 1, 2, 3 ]
i = l.__iter__()
s = None
while True :
  if s :
    print s
  try :
    s = i.next()
  except StopIteration :
    break
print ""done""
</code></pre>

<p>Instead of ""1,2,3,done"", it prints the following output:</p>

<pre><code>[stdout:]1
[stdout:]2
[stdout:]3
None['Traceback (most recent call last):
', '  File ""test_python.py"", line 8, in &lt;module&gt;
    s = i.next()
', 'StopIteration
']
</code></pre>

<p>What can I do in order to catch the 'stop iteration' exception and break a while
loop properly?</p>

<p>An example of why such a thing may be needed is shown below as pseudocode.</p>

<p>State machine:</p>

<pre><code>s = """"
while True :
  if state is STATE_CODE :
    if ""//"" in s :
      tokens.add( TOKEN_COMMENT, s.split( ""//"" )[1] )
      state = STATE_COMMENT
    else :
      tokens.add( TOKEN_CODE, s )
  if state is STATE_COMMENT :
    if ""//"" in s :
      tokens.append( TOKEN_COMMENT, s.split( ""//"" )[1] )
    else
      state = STATE_CODE
      # Re-evaluate same line
      continue
  try :
    s = i.next()
  except StopIteration :
    break
</code></pre>
","<p>I am not sure what you are trying to do. You can implement a do-while loop like this:</p>

<pre><code>while True:
  stuff()
  if fail_condition:
    break
</code></pre>

<p>Or:</p>

<pre><code>stuff()
while not fail_condition:
  stuff()
</code></pre>

<p>What are you doing trying to use a do while loop to print the stuff in the list? Why not just use:</p>

<pre><code>for i in l:
  print i
print ""done""
</code></pre>

<p>Update:</p>

<p>So do you have a list of lines? And you want to keep iterating through it? How about: </p>

<pre><code>for s in l: 
  while True: 
    stuff() 
    # use a ""break"" instead of s = i.next()
</code></pre>

<p>Does that seem like something close to what you would want? With your code example, it would be:</p>

<pre><code>for s in some_list:
  while True :
    if state is STATE_CODE :
      if ""//"" in s :
        tokens.add( TOKEN_COMMENT, s.split( ""//"" )[1] )
        state = STATE_COMMENT
      else :
        tokens.add( TOKEN_CODE, s )
    if state is STATE_COMMENT :
      if ""//"" in s :
        tokens.append( TOKEN_COMMENT, s.split( ""//"" )[1] )
        break # get next s
      else
        state = STATE_CODE
        # re-evaluate same line
        # continues automatically
</code></pre>
","743186"
"null object in Python?","805125","","<p>How do I refer to the null object in Python?</p>
","<p>In Python, the 'null' object is the singleton <code>None</code>.</p>

<p>The best way to check things for ""Noneness"" is to use the identity operator, <code>is</code>:</p>

<pre><code>if foo is None:
    ...
</code></pre>
","3289606"
"How do I parse XML in Python?","800203","","<p>I have many rows in a database that contains xml and I'm trying to write a Python script that will go through those rows and count how many instances of a particular node attribute show up. For instance, my tree looks like:</p>

<pre><code>&lt;foo&gt;
   &lt;bar&gt;
      &lt;type foobar=""1""/&gt;
      &lt;type foobar=""2""/&gt;
   &lt;/bar&gt;
&lt;/foo&gt;
</code></pre>

<p>How can I access the attributes 1 and 2 in the XML using Python?</p>
","<p>I suggest <a href=""http://docs.python.org/library/xml.etree.elementtree.html"" rel=""noreferrer""><code>ElementTree</code></a>.  There are other compatible implementations of the same API, such as <a href=""http://lxml.de/"" rel=""noreferrer""><code>lxml</code></a>, and <code>cElementTree</code> in the Python standard library itself; but, in this context, what they chiefly add is even more speed -- the ease of programming part depends on the API, which <code>ElementTree</code> defines.</p>

<p>After building an Element instance <code>e</code> from the XML, e.g. with the <a href=""http://docs.python.org/library/xml.etree.elementtree.html#xml.etree.ElementTree.XML"" rel=""noreferrer"">XML</a> function, or by parsing a file with something like</p>

<pre><code>import xml.etree.ElementTree
e = xml.etree.ElementTree.parse('thefile.xml').getroot()
</code></pre>

<p>or any of the many other ways shown at <a href=""http://docs.python.org/library/xml.etree.elementtree.html"" rel=""noreferrer""><code>ElementTree</code></a>, you just do something like:</p>

<pre><code>for atype in e.findall('type'):
    print(atype.get('foobar'))
</code></pre>

<p>and similar, usually pretty simple, code patterns.</p>
","1912483"
"How to print date in a regular format in Python?","799502","","<p>This is my code:</p>

<pre><code>import datetime
today = datetime.date.today()
print today
</code></pre>

<p>This prints: 2008-11-22 which is exactly what I want BUT....I have a list I'm appending this to and then suddenly everything goes ""wonky"". Here is the code:</p>

<pre><code>import datetime
mylist = []
today = datetime.date.today()
mylist.append(today)
print mylist
</code></pre>

<p>This prints the following: </p>

<pre><code>[datetime.date(2008, 11, 22)]
</code></pre>

<p>How on earth can I get just a simple date like ""2008-11-22""?</p>
","<h2>The WHY: dates are objects</h2>

<p>In Python, dates are objects. Therefore, when you manipulate them, you manipulate objects, not strings, not timestamps nor anything.</p>

<p>Any object in Python have TWO string representations:</p>

<ul>
<li><p>The regular representation that is used by ""print"", can be get using the <code>str()</code> function. It is most of the time the most common human readable format and is used to ease display. So <code>str(datetime.datetime(2008, 11, 22, 19, 53, 42))</code> gives you <code>'2008-11-22 19:53:42'</code>. </p></li>
<li><p>The alternative representation that is used to represent the object nature (as a data). It can be get using the <code>repr()</code> function and is handy to know what kind of data your manipulating while you are developing or debugging. <code>repr(datetime.datetime(2008, 11, 22, 19, 53, 42))</code> gives you <code>'datetime.datetime(2008, 11, 22, 19, 53, 42)'</code>.</p></li>
</ul>

<p>What happened is that when you have printed the date using ""print"", it used <code>str()</code> so you could see a nice date string. But when you have printed <code>mylist</code>, you have printed a list of objects and Python tried to represent the set of data, using <code>repr()</code>.</p>

<h2>The How: what do you want to do with that?</h2>

<p>Well, when you manipulate dates, keep using the date objects all long the way. They got thousand of useful methods and most of the Python API expect dates to be objects.</p>

<p>When you want to display them, just use <code>str()</code>. In Python, the good practice is to explicitly cast everything. So just when it's time to print, get a string representation of your date using <code>str(date)</code>.</p>

<p>One last thing. When you tried to print the dates, you printed <code>mylist</code>. If you want to print a date, you must print the date objects, not their container (the list).</p>

<p>E.G, you want to print all the date in a list :</p>

<pre><code>for date in mylist :
    print str(date)
</code></pre>

<p>Note that <strong><em>in that specific case</em></strong>, you can even omit <code>str()</code> because print will use it for you. But it should not become a habit :-)</p>

<h2>Practical case, using your code</h2>

<pre><code>import datetime
mylist = []
today = datetime.date.today()
mylist.append(today)
print mylist[0] # print the date object, not the container ;-)
2008-11-22

# It's better to always use str() because :

print ""This is a new day : "", mylist[0] # will work
This is a new day : 2008-11-22

print ""This is a new day : "" + mylist[0] # will crash
cannot concatenate 'str' and 'datetime.date' objects

print ""This is a new day : "" + str(mylist[0]) 
This is a new day : 2008-11-22
</code></pre>

<h2>Advanced date formatting</h2>

<p>Dates have a default representation, but you may want to print them in a specific format. In that case, you can get a custom string representation using the <code>strftime()</code> method.</p>

<p><code>strftime()</code> expects a string pattern explaining how you want to format your date.</p>

<p>E.G : </p>

<pre><code>print today.strftime('We are the %d, %b %Y')
'We are the 22, Nov 2008'
</code></pre>

<p>All the letter after a <code>""%""</code> represent a format for something :</p>

<ul>
<li><code>%d</code> is the day number</li>
<li><code>%m</code> is the month number</li>
<li><code>%b</code> is the month abbreviation</li>
<li><code>%y</code> is the year last two digits</li>
<li><code>%Y</code> is the all year</li>
</ul>

<p>etc</p>

<p><a href=""http://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior"" rel=""noreferrer"">Have a look at the official documentation</a>, or <a href=""http://strftime.org"" rel=""noreferrer"">McCutchen's quick reference</a> you can't know them all.</p>

<p>Since <a href=""http://www.python.org/dev/peps/pep-3101/"" rel=""noreferrer"">PEP3101</a>, every object can have its own format used automatically by the method format of any string. In the case of the datetime, the format is the same used in
strftime. So you can do the same as above like this:</p>

<pre><code>print ""We are the {:%d, %b %Y}"".format(today)
'We are the 22, Nov 2008'
</code></pre>

<p>The advantage of this form is that you can also convert other objects at the same time.<br>
With the introduction of <a href=""https://docs.python.org/3/reference/lexical_analysis.html#formatted-string-literals"" rel=""noreferrer"">Formatted string literals</a> (since Python 3.6, 2016-12-23) this can be written as</p>

<pre><code>import datetime
f""{datetime.datetime.now():%Y-%m-%d}""
'2017-06-15'
</code></pre>

<h2>Localization</h2>

<p>Dates can automatically adapt to the local language and culture if you use them the right way, but it's a bit complicated. Maybe for another question on SO(Stack Overflow) ;-)</p>
","311655"
"How to randomly select an item from a list?","779788","","<p>Assume I have the following list:</p>

<pre><code>foo = ['a', 'b', 'c', 'd', 'e']
</code></pre>

<p>What is the simplest way to retrieve an item at random from this list?</p>
","<p>Use <a href=""https://docs.python.org/2/library/random.html#random.choice"" rel=""noreferrer""><code>random.choice</code></a>:</p>

<pre><code>import random

foo = ['a', 'b', 'c', 'd', 'e']
print(random.choice(foo))
</code></pre>

<p>For cryptographically secure random choices (e.g. for generating a passphrase from a wordlist), use <a href=""https://docs.python.org/2/library/random.html#random.SystemRandom"" rel=""noreferrer""><code>random.SystemRandom</code></a> class:</p>

<pre><code>import random

foo = ['battery', 'correct', 'horse', 'staple']
secure_random = random.SystemRandom()
print(secure_random.choice(foo))
</code></pre>
","306417"
"Python: user input and commandline arguments","777117","","<p>How do I have a Python script that can accept user input (assuming this is possible) and how do I make it read in arguments if run from the command line?</p>
","<p>To read user input you can try <a href=""https://docs.python.org/dev/library/cmd.html"" rel=""noreferrer"">the <code>cmd</code> module</a> for easily creating a mini-command line interpreter (with help texts and autocompletion) and <a href=""https://docs.python.org/2/library/functions.html#raw_input"" rel=""noreferrer""><code>raw_input</code></a> (<a href=""https://docs.python.org/dev/library/functions.html#input"" rel=""noreferrer""><code>input</code></a> for Python 3+) for reading a line of text from the user.</p>

<pre><code>text = raw_input(""prompt"")  # Python 2
text = input(""prompt"")  # Python 3
</code></pre>

<p>Command line inputs are in <code>sys.argv</code>. Try this in your script:</p>

<pre><code>import sys
print (sys.argv)
</code></pre>

<p>There are two modules for parsing command line options: <a href=""https://docs.python.org/dev/library/optparse.html"" rel=""noreferrer""><s><code>optparse</code></s></a> (deprecated since Python 2.7, use <a href=""https://docs.python.org/dev/library/argparse.html"" rel=""noreferrer""><code>argparse</code></a> instead) and <a href=""https://docs.python.org/dev/library/getopt.html"" rel=""noreferrer""><code>getopt</code></a>. If you just want to input files to your script, behold the power of <a href=""https://docs.python.org/dev/library/fileinput.html"" rel=""noreferrer""><code>fileinput</code></a>.</p>

<p>The <a href=""https://docs.python.org/dev/library/"" rel=""noreferrer"">Python library reference</a> is your friend.</p>
","70833"
"String comparison in Python: is vs. ==","773914","","<p>I noticed a Python script I was writing was acting squirrelly, and traced it to an infinite loop, where the loop condition was <code>while line is not ''</code>. Running through it in the debugger, it turned out that line was in fact <code>''</code>. When I changed it to <code>!=''</code> rather than <code>is not ''</code>, it worked fine. </p>

<p>Also, is it generally considered better to just use '==' by default, even when comparing int or Boolean values? I've always liked to use 'is' because I find it more aesthetically pleasing and pythonic (which is how I fell into this trap...), but I wonder if it's intended to just be reserved for when you care about finding two objects with the same id.</p>
","<blockquote>
  <p>For all built-in Python objects (like
  strings, lists, dicts, functions,
  etc.), if x is y, then x==y is also
  True.</p>
</blockquote>

<p>Not always.  NaN is a counterexample.  But <em>usually</em>, identity (<code>is</code>) implies equality (<code>==</code>).  The converse is not true: Two distinct objects can have the same value.</p>

<blockquote>
  <p>Also, is it generally considered better to just use '==' by default, even
  when comparing int or Boolean values?</p>
</blockquote>

<p>You use <code>==</code> when comparing values and <code>is</code> when comparing identities.</p>

<p>When comparing ints (or immutable types in general), you pretty much always want the former.  There's an optimization that allows small integers to be compared with <code>is</code>, but don't rely on it.</p>

<p>For boolean values, you shouldn't be doing comparisons at all.   Instead of:</p>

<pre><code>if x == True:
    # do something
</code></pre>

<p>write:</p>

<pre><code>if x:
    # do something
</code></pre>

<p>For comparing against <code>None</code>, <code>is None</code> is preferred over <code>== None</code>.</p>

<blockquote>
  <p>I've always liked to use 'is' because
  I find it more aesthetically pleasing
  and pythonic (which is how I fell into
  this trap...), but I wonder if it's
  intended to just be reserved for when
  you care about finding two objects
  with the same id.</p>
</blockquote>

<p>Yes, that's exactly what it's for.</p>
","2988117"
"Import a module from a relative path","761553","","<p>How do I import a Python module given its relative path?</p>

<p>For example, if <code>dirFoo</code> contains <code>Foo.py</code> and <code>dirBar</code>, and <code>dirBar</code> contains <code>Bar.py</code>, how do I import <code>Bar.py</code> into <code>Foo.py</code>?</p>

<p>Here's a visual representation:</p>

<pre><code>dirFoo\
    Foo.py
    dirBar\
        Bar.py
</code></pre>

<p><code>Foo</code> wishes to include <code>Bar</code>, but restructuring the folder hierarchy is not an option.</p>
","<p>Assuming that both your directories are real Python packages (do have the <code>__init__.py</code> file inside them), here is a safe solution for inclusion of modules relatively to the location of the script.</p>

<p>I assume that you want to do this, because you need to include a set of modules with your script. I use this in production in several products and works in many special scenarios like: scripts called from another directory or executed with python execute instead of opening a new interpreter.</p>

<pre><code> import os, sys, inspect
 # realpath() will make your script run, even if you symlink it :)
 cmd_folder = os.path.realpath(os.path.abspath(os.path.split(inspect.getfile( inspect.currentframe() ))[0]))
 if cmd_folder not in sys.path:
     sys.path.insert(0, cmd_folder)

 # Use this if you want to include modules from a subfolder
 cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],""subfolder"")))
 if cmd_subfolder not in sys.path:
     sys.path.insert(0, cmd_subfolder)

 # Info:
 # cmd_folder = os.path.dirname(os.path.abspath(__file__)) # DO NOT USE __file__ !!!
 # __file__ fails if the script is called in different ways on Windows.
 # __file__ fails if someone does os.chdir() before.
 # sys.argv[0] also fails, because it doesn't not always contains the path.
</code></pre>

<p>As a bonus, this approach does let you force Python to use your module instead of the ones installed on the system.</p>

<p>Warning! I don't really know what is happening when current module is inside an <code>egg</code> file. It probably fails too.</p>
","6098238"
"Adding new column to existing DataFrame in Python pandas","753964","","<p>I have the following indexed DataFrame with named columns and rows not- continuous numbers:</p>

<pre><code>          a         b         c         d
2  0.671399  0.101208 -0.181532  0.241273
3  0.446172 -0.243316  0.051767  1.577318
5  0.614758  0.075793 -0.451460 -0.012493
</code></pre>

<p>I would like to add a new column, <code>'e'</code>, to the existing data frame and do not want to change anything in the data frame (i.e., the new column always has the same length as the DataFrame). </p>

<pre><code>0   -0.335485
1   -1.166658
2   -0.385571
dtype: float64
</code></pre>

<p>I tried different versions of <code>join</code>, <code>append</code>, <code>merge</code>, but I did not get the result I wanted, only errors at most. How can I add column <code>e</code> to the above example? </p>
","<p>Use the original df1 indexes to create the series:</p>

<pre><code>df1['e'] = Series(np.random.randn(sLength), index=df1.index)
</code></pre>

<hr>

<hr>

<p><strong>Edit 2015</strong><br>
Some reported to get the <code>SettingWithCopyWarning</code> with this code.<br>
However, the code still runs perfect with the current pandas version 0.16.1.</p>

<pre><code>&gt;&gt;&gt; sLength = len(df1['a'])
&gt;&gt;&gt; df1
          a         b         c         d
6 -0.269221 -0.026476  0.997517  1.294385
8  0.917438  0.847941  0.034235 -0.448948

&gt;&gt;&gt; df1['e'] = p.Series(np.random.randn(sLength), index=df1.index)
&gt;&gt;&gt; df1
          a         b         c         d         e
6 -0.269221 -0.026476  0.997517  1.294385  1.757167
8  0.917438  0.847941  0.034235 -0.448948  2.228131

&gt;&gt;&gt; p.version.short_version
'0.16.1'
</code></pre>

<p>The <code>SettingWithCopyWarning</code> aims to inform of a possibly invalid assignment on a copy of the Dataframe. It doesn't necessarily say you did it wrong (it can trigger false positives) but from 0.13.0 it let you know there are more adequate methods for the same purpose. Then, if you get the warning, just follow its advise: <em>Try using .loc[row_index,col_indexer] = value instead</em></p>

<pre><code>&gt;&gt;&gt; df1.loc[:,'f'] = p.Series(np.random.randn(sLength), index=df1.index)
&gt;&gt;&gt; df1
          a         b         c         d         e         f
6 -0.269221 -0.026476  0.997517  1.294385  1.757167 -0.050927
8  0.917438  0.847941  0.034235 -0.448948  2.228131  0.006109
&gt;&gt;&gt; 
</code></pre>

<p>In fact, this is currently the more efficient method as <a href=""http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy"">described in pandas docs</a></p>

<hr>

<hr>

<p><strong>Edit 2017</strong></p>

<p>As indicated in the comments and by @Alexander, currently the best method to add the values of a Series as a new column of a DataFrame could be using <code>assign</code>:</p>

<pre><code>df1 = df1.assign(e=p.Series(np.random.randn(sLength)).values)
</code></pre>
","12555510"
"IndentationError: unindent does not match any outer indentation level","748993","","<p>When I compile the Python code below, I get </p>

<blockquote>
  <p>IndentationError: unindent does not match any outer indentation level</p>
</blockquote>

<hr>

<pre><code>import sys

def Factorial(n): # Return factorial
    result = 0
    for i in range (1,n):
        result = result * i
    print ""factorial is "",result
    return result
</code></pre>

<p>Why?</p>
","<p>Other posters are probably correct...there might be spaces mixed in with your tabs. Try doing a search &amp; replace to replace all tabs with a few spaces.</p>

<p>Try this:</p>

<pre><code>import sys

def Factorial(n): # return factorial
    result = 1
    for i in range (1,n):
        result = result * i
    print ""factorial is "",result
    return result

print Factorial(10)
</code></pre>
","492399"
"How can I sort a dictionary by key?","747519","","<p>What would be a nice way to go from <code>{2:3, 1:89, 4:5, 3:0}</code> to <code>{1:89, 2:3, 3:0, 4:5}</code>?<br>
I checked some posts but they all use the ""sorted"" operator that returns tuples. </p>
","<p>Standard Python dictionaries are unordered. Even if you sorted the (key,value) pairs, you wouldn't be able to store them in a <code>dict</code> in a way that would preserve the ordering.</p>

<p>The easiest way is to use <a href=""http://docs.python.org/library/collections.html#collections.OrderedDict""><code>OrderedDict</code></a>, which remembers the order in which the elements have been inserted:</p>

<pre><code>In [1]: import collections

In [2]: d = {2:3, 1:89, 4:5, 3:0}

In [3]: od = collections.OrderedDict(sorted(d.items()))

In [4]: od
Out[4]: OrderedDict([(1, 89), (2, 3), (3, 0), (4, 5)])
</code></pre>

<p>Never mind the way <code>od</code> is printed out; it'll work as expected:</p>

<pre><code>In [11]: od[1]
Out[11]: 89

In [12]: od[3]
Out[12]: 0

In [13]: for k, v in od.iteritems(): print k, v
   ....: 
1 89
2 3
3 0
4 5
</code></pre>

<h2>Python 3</h2>

<p>For Python 3 users, one needs to use the <code>.items()</code> instead of <code>.iteritems()</code>:</p>

<pre><code>In [13]: for k, v in od.items(): print(k, v)
   ....: 
1 89
2 3
3 0
4 5
</code></pre>
","9001529"
"Removing duplicates in lists","745564","","<p>Pretty much I need to write a program to check if a list has any duplicates and if it does it removes them and returns a new list with the items that werent duplicated/removed. This is what I have but to be honest I do not know what to do.</p>

<pre><code>def remove_duplicates():
    t = ['a', 'b', 'c', 'd']
    t2 = ['a', 'c', 'd']
    for t in t2:
        t.append(t.remove())
    return t
</code></pre>
","<p>The common approach to get a unique collection of items is to use a <a href=""http://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset"" rel=""noreferrer""><code>set</code></a>. Sets are <em>unordered</em> collections of <em>distinct</em> objects. To create a set from any iterable, you can simply pass it to the built-in <a href=""http://docs.python.org/3/library/functions.html#func-set"" rel=""noreferrer""><code>set()</code></a> function. If you later need a real list again, you can similarly pass the set to the <a href=""http://docs.python.org/3/library/functions.html#func-list"" rel=""noreferrer""><code>list()</code></a> function.</p>

<p>The following example should cover whatever you are trying to do:</p>

<pre><code>&gt;&gt;&gt; t = [1, 2, 3, 1, 2, 5, 6, 7, 8]
&gt;&gt;&gt; t
[1, 2, 3, 1, 2, 5, 6, 7, 8]
&gt;&gt;&gt; list(set(t))
[1, 2, 3, 5, 6, 7, 8]
&gt;&gt;&gt; s = [1, 2, 3]
&gt;&gt;&gt; list(set(t) - set(s))
[8, 5, 6, 7]
</code></pre>

<p>As you can see from the example result, the original order is not maintained. As mentioned above, sets themselves are unordered collections, so the order is lost. When converting a set back to a list, an arbitrary order is created.</p>

<p>If order is important to you, then you will have to use a different mechanism. A very common solution for this is to rely on <a href=""https://docs.python.org/3/library/collections.html#collections.OrderedDict"" rel=""noreferrer""><code>OrderedDict</code></a> to keep the order of keys during insertion:</p>

<pre><code>&gt;&gt;&gt; from collections import OrderedDict
&gt;&gt;&gt; list(OrderedDict.fromkeys(t))
[1, 2, 3, 5, 6, 7, 8]
</code></pre>

<p>Note that this has the overhead of creating a dictionary first, and then creating a list from it. So if you don’t actually need to preserve the order, you’re better off using a set. Check out <a href=""https://stackoverflow.com/q/480214/216074"">this question</a> for more details and alternative ways to preserve the order when removing duplicates.</p>
","7961390"
"How to change a string into uppercase","741971","","<p>I have problem in changing a string into uppercase with Python. In my research, I got <code>string.ascii_uppercase</code> but it doesn't work.</p>

<p>The following code:</p>

<pre><code> &gt;&gt;s = 'sdsd'
 &gt;&gt;s.ascii_uppercase
</code></pre>

<p>Gives this error message:</p>

<pre><code>Traceback (most recent call last):
  File ""&lt;console&gt;"", line 1, in &lt;module&gt;
AttributeError: 'str' object has no attribute 'ascii_uppercase'
</code></pre>

<p>My question is: <strong>how can I convert a string into uppercase in Python?</strong></p>
","<pre><code>&gt;&gt;&gt; s = 'sdsd'
&gt;&gt;&gt; s.upper()
'SDSD'
</code></pre>

<p>See <a href=""https://docs.python.org/2/library/stdtypes.html#string-methods"" rel=""noreferrer"">String Methods</a>.</p>
","9257122"
"Remove specific characters from a string in Python","741407","","<p>I'm trying to remove specific characters from a string using Python. This is the code I'm using right now. Unfortunately it appears to do nothing to the string.</p>

<pre><code>for char in line:
    if char in "" ?.!/;:"":
        line.replace(char,'')
</code></pre>

<p>How do I do this properly?</p>
","<p>Strings in Python are <em>immutable</em> (can't be changed).  Because of this, the effect of <code>line.replace(...)</code> is just to create a new string, rather than changing the old one.  You need to <em>rebind</em> (assign) it to <code>line</code> in order to have that variable take the new value, with those characters removed.</p>

<p>Also, the way you are doing it is going to be kind of slow, relatively.  It's also likely to be a bit confusing to experienced pythonators, who will see a doubly-nested structure and think for a moment that something more complicated is going on.</p>

<p>Starting in Python 2.6 and newer Python 2.x versions *, you can instead use <a href=""https://docs.python.org/2/library/stdtypes.html#str.translate"" rel=""noreferrer""><code>str.translate</code></a>, (but read on for Python 3 differences):</p>

<pre><code>line = line.translate(None, '!@#$')
</code></pre>

<p>or regular expression replacement with <a href=""https://docs.python.org/2/library/re.html#re.sub"" rel=""noreferrer""><code>re.sub</code></a></p>

<pre><code>import re
line = re.sub('[!@#$]', '', line)
</code></pre>

<p>The characters enclosed in brackets constitute a <em>character class</em>.  Any characters in <code>line</code> which are in that class are replaced with the second parameter to <code>sub</code>: an empty string.</p>

<p>In Python 3, strings are Unicode. You'll have to translate a little differently. kevpie mentions this in a <a href=""https://stackoverflow.com/questions/3939361/remove-specific-characters-from-a-string-in-python#comment-4205256"">comment</a> on one of the answers, and it's noted in the <a href=""https://docs.python.org/2/library/stdtypes.html#str.translate"" rel=""noreferrer"">documentation for <code>str.translate</code></a>.</p>

<p>When calling the <code>translate</code> method of a Unicode string, you cannot pass the second parameter that we used above. You also can't pass <code>None</code> as the first parameter, or even a translation table from <code>string.maketrans</code>. Instead, you pass a dictionary as the only parameter. This dictionary maps the <em>ordinal values</em> of characters (i.e. the result of calling <a href=""https://docs.python.org/2/library/functions.html#ord"" rel=""noreferrer""><code>ord</code></a> on them) to the ordinal values of the characters which should replace them, or—usefully to us—<code>None</code> to indicate that they should be deleted.</p>

<p>So to do the above dance with a Unicode string you would call something like</p>

<pre><code>translation_table = dict.fromkeys(map(ord, '!@#$'), None)
unicode_line = unicode_line.translate(translation_table)
</code></pre>

<p>Here <a href=""https://docs.python.org/2/library/stdtypes.html#dict.fromkeys"" rel=""noreferrer""><code>dict.fromkeys</code></a> and <a href=""https://docs.python.org/2/library/functions.html#map"" rel=""noreferrer""><code>map</code></a> are used to succinctly generate a dictionary containing</p>

<pre><code>{ord('!'): None, ord('@'): None, ...}
</code></pre>

<p>Even simpler, as <a href=""https://stackoverflow.com/questions/23175809/typeerror-translate-takes-one-argument-2-given-python"">another answer puts it</a>, create the dictionary in place:</p>

<pre><code>unicode_line = unicode_line.translate({ord(c): None for c in '!@#$'})
</code></pre>

<hr>

<p>*   for compatibility with earlier Pythons, you can create a ""null"" translation table to pass in place of <code>None</code>:</p>

<pre><code>import string
line = line.translate(string.maketrans('', ''), '!@#$')
</code></pre>

<p>Here <a href=""https://docs.python.org/2/library/string.html#string.maketrans"" rel=""noreferrer""><code>string.maketrans</code></a> is used to create a <em>translation table</em>, which is just a string containing the characters with ordinal values 0 to 255.</p>
","3939381"
"How do I install a Python package with a .whl file?","737073","","<p>I'm having trouble installing a Python package (specifically, JPype1 0.5.7) on my Windows machine, and would like to install it with Christoph Gohlke's Window binaries. (Which, to my experience, alleviated much of the fuss for many other package installations.)</p>

<p>However, while Christoph used to provide .exe files in the past, recently it seems he's uploading .whl files instead.</p>

<p><a href=""http://www.lfd.uci.edu/~gohlke/pythonlibs/#jpype"" rel=""noreferrer"">http://www.lfd.uci.edu/~gohlke/pythonlibs/#jpype</a></p>

<p>But how do I install .whl files?</p>

<blockquote>
  <p>Notes:</p>
  
  <ul>
  <li>I've found <a href=""https://wheel.readthedocs.org/en/latest/"" rel=""noreferrer"">documents on wheel</a>, but they don't seem so staightforward in explaining how to install .whl files.</li>
  <li>This question is a duplicate with <a href=""https://stackoverflow.com/questions/27041264/how-to-install-whl-file-in-python-windows"">this question</a>, which wasn't directly answered.</li>
  </ul>
</blockquote>
","<p>I just used the following which was quite simple. First open a console then cd to where you've downloaded your file like some-package.whl and use</p>

<pre><code>pip install some-package.whl
</code></pre>

<p>Note: if pip.exe is not recognized, you may find it in the ""Scripts"" directory from where python has been installed. If pip is not installed, this page can help:
<a href=""https://stackoverflow.com/questions/4750806/how-to-install-pip-on-windows"">How do I install pip on Windows?</a></p>

<p><em>Note: for clarification</em><br>
If you copy the <code>*.whl</code> file to your local drive (ex. <strong>C:\some-dir\some-file.whl</strong>) use the following command line parameters --  </p>

<pre><code>pip install C:/some-dir/some-file.whl
</code></pre>
","27909082"
"Save plot to image file instead of displaying it using Matplotlib","731905","","<p>I am writing a quick-and-dirty script to generate plots on the fly. I am using the code below (from <a href=""http://en.wikipedia.org/wiki/Matplotlib"" rel=""noreferrer"">Matplotlib</a> documentation) as a starting point:</p>

<pre><code>from pylab import figure, axes, pie, title, show

# Make a square figure and axes
figure(1, figsize=(6, 6))
ax = axes([0.1, 0.1, 0.8, 0.8])

labels = 'Frogs', 'Hogs', 'Dogs', 'Logs'
fracs = [15, 30, 45, 10]

explode = (0, 0.05, 0, 0)
pie(fracs, explode=explode, labels=labels, autopct='%1.1f%%', shadow=True)
title('Raining Hogs and Dogs', bbox={'facecolor': '0.8', 'pad': 5})

show()  # Actually, don't show, just save to foo.png
</code></pre>

<p>I don't want to display the plot on a GUI, instead, I want to save the plot to a file (say foo.png), so that, for example, it can be used in batch scripts. How do I do that?</p>
","<p>While the question has been answered, I'd like to add some useful tips when using <a href=""http://matplotlib.sourceforge.net/api/pyplot_api.html#matplotlib.pyplot.savefig"" rel=""noreferrer"">savefig</a>. The file format can be specified by the extension:</p>

<pre><code>savefig('foo.png')
savefig('foo.pdf')
</code></pre>

<p>Will give a rasterized or vectorized output respectively, both which could be useful. In addition, you'll find that <code>pylab</code> leaves a generous, often undesirable, whitespace around the image. Remove it with:</p>

<pre><code>savefig('foo.png', bbox_inches='tight')
</code></pre>
","9890599"
"How can I get a list of locally installed Python modules?","727164","","<p>I would like to get a list of Python modules, which are in my Python installation (UNIX server).</p>

<p><strong>How can you get a list of Python modules installed in your computer?</strong></p>
","<h2>Solution</h2>

<p>My 50 cents for getting a <code>pip freeze</code>-like list from a Python script:</p>

<pre class=""lang-python prettyprint-override""><code>import pip
installed_packages = pip.get_installed_distributions()
installed_packages_list = sorted([""%s==%s"" % (i.key, i.version)
     for i in installed_packages])
print(installed_packages_list)
</code></pre>

<p>As a (too long) one liner:</p>

<pre class=""lang-python prettyprint-override""><code>sorted([""%s==%s"" % (i.key, i.version) for i in pip.get_installed_distributions()])
</code></pre>

<p>Giving:</p>

<pre class=""lang-js prettyprint-override""><code>['behave==1.2.4', 'enum34==1.0', 'flask==0.10.1', 'itsdangerous==0.24', 
 'jinja2==2.7.2', 'jsonschema==2.3.0', 'markupsafe==0.23', 'nose==1.3.3', 
 'parse-type==0.3.4', 'parse==1.6.4', 'prettytable==0.7.2', 'requests==2.3.0',
 'six==1.6.1', 'vioozer-metadata==0.1', 'vioozer-users-server==0.1', 
 'werkzeug==0.9.4']
</code></pre>

<h2>Scope</h2>

<p>This solution applies to the system scope or to a virtual environment scope, and covers packages installed by <code>setuptools</code>, <code>pip</code> and (<a href=""https://stackoverflow.com/questions/3220404/why-use-pip-over-easy-install"">god forbid</a>) <code>easy_install</code>.</p>

<h2>My use case</h2>

<p>I added the result of this call to my flask server, so when I call it with <code>http://example.com/exampleServer/environment</code> I get the list of packages installed on the server's virtualenv. It makes debugging a whole lot easier.</p>

<h2>Caveats</h2>

<p>I have noticed a strange behaviour of this technique - when the Python interpreter is invoked in the same directory as a <code>setup.py</code> file, it does not list the package installed by <code>setup.py</code>.</p>

<h3>Steps to reproduce:</h3>

Create a virtual environment

<pre><code>$ cd /tmp
$ virtualenv test_env
New python executable in test_env/bin/python
Installing setuptools, pip...done.
$ source test_env/bin/activate
(test_env) $ 
</code></pre>

Clone a git repo with <code>setup.py</code>

<pre><code>(test_env) $ git clone https://github.com/behave/behave.git
Cloning into 'behave'...
remote: Reusing existing pack: 4350, done.
remote: Total 4350 (delta 0), reused 0 (delta 0)
Receiving objects: 100% (4350/4350), 1.85 MiB | 418.00 KiB/s, done.
Resolving deltas: 100% (2388/2388), done.
Checking connectivity... done.
</code></pre>

<p>We have behave's <code>setup.py</code> in <code>/tmp/behave</code>:</p>

<pre><code>(test_env) $ ls /tmp/behave/setup.py
/tmp/behave/setup.py
</code></pre>

Install the python package from the git repo

<pre><code>(test_env) $ cd /tmp/behave &amp;&amp; python setup.py install
running install
...
Installed /private/tmp/test_env/lib/python2.7/site-packages/enum34-1.0-py2.7.egg
Finished processing dependencies for behave==1.2.5a1
</code></pre>

<h3>If we run the aforementioned solution from <code>/tmp</code></h3>

<pre><code>&gt;&gt;&gt; import pip
&gt;&gt;&gt; sorted([""%s==%s"" % (i.key, i.version) for i in pip.get_installed_distributions()])
['behave==1.2.5a1', 'enum34==1.0', 'parse-type==0.3.4', 'parse==1.6.4', 'six==1.6.1']
&gt;&gt;&gt; import os
&gt;&gt;&gt; os.getcwd()
'/private/tmp'
</code></pre>

<h3>If we run the aforementioned solution from <code>/tmp/behave</code></h3>

<pre><code>&gt;&gt;&gt; import pip
&gt;&gt;&gt; sorted([""%s==%s"" % (i.key, i.version) for i in pip.get_installed_distributions()])
['enum34==1.0', 'parse-type==0.3.4', 'parse==1.6.4', 'six==1.6.1']
&gt;&gt;&gt; import os
&gt;&gt;&gt; os.getcwd()
'/private/tmp/behave'
</code></pre>

<p><code>behave==1.2.5a1</code> is missing from the second example, because the working directory contains <code>behave</code>'s <code>setup.py</code> file.</p>

<p>I could not find any reference to this issue in the documentation. Perhaps I shall open a bug for it.</p>
","23885252"
"How to add to the pythonpath in windows 7?","709022","","<p>I have a directory which hosts all of my Django apps (<code>C:\My_Projects</code>). I want to add this directory to my <code>pythonpath</code> so I can call the apps directly.</p>

<p>I have tried adding <code>C:\My_Projects\;</code> to my <code>Path</code> variable from the Windows GUI (<code>My Computer &gt; Properties &gt; Advanced System Settings &gt; Environment Variables</code>). But it still doesn't read the coltrane module and generates this error:</p>

<blockquote>
  <p>Error: No module named coltrane</p>
</blockquote>
","<p>You know what has worked for me really well on windows.</p>

<p><code>My Computer &gt; Properties &gt; Advanced System Settings &gt; Environment Variables &gt;</code> </p>

<p>Then under system variables I create a new Variable called <code>PythonPath</code>. In this variable I have <code>C:\Python27\Lib;C:\Python27\DLLs;C:\Python27\Lib\lib-tk;C:\other-folders-on-the-path</code></p>

<p><img src=""https://i.stack.imgur.com/ZGp36.png"" alt=""enter image description here""></p>

<p>This is the best way that has worked for me which I hadn't found in any of the docs offered.</p>

<p><strong>EDIT:</strong> For those who are not able to get it,
Please add </p>

<blockquote>
  <p>C:\Python27;</p>
</blockquote>

<p>along with it. Else it will <em>never work</em>.</p>
","4855685"
"How do I download a file over HTTP using Python?","705359","","<p>I have a small utility that I use to download a MP3 from a website on a schedule and then builds/updates a podcast XML file which I've obviously added to iTunes.</p>

<p>The text processing that creates/updates the XML file is written in Python. I use wget inside a Windows <code>.bat</code> file to download the actual MP3 however. I would prefer to have the entire utility written in Python though.</p>

<p>I struggled though to find a way to actually down load the file in Python, thus why I resorted to <code>wget</code>.</p>

<p>So, how do I download the file using Python?</p>
","<p>In Python 2, use urllib2 which comes with the standard library.</p>

<pre><code>import urllib2
response = urllib2.urlopen('http://www.example.com/')
html = response.read()
</code></pre>

<p>This is the most basic way to use the library, minus any error handling.  You can also do more complex stuff such as changing headers.  The documentation can be found <a href=""http://docs.python.org/2/library/urllib2.html"" rel=""noreferrer"">here.</a></p>
","22682"
"Python: How to import other Python files","698683","","<p>How do I import other files in Python?</p>

<ol>
<li>How exactly can I import a specific python file like <code>import file.py</code>?</li>
<li>How can I import a folder instead of a specific file?</li>
<li>I want to load a Python file dynamically at runtime, based on user
input.</li>
<li>I want to know how to load just one specific part from the file.</li>
</ol>

<p>For example, in <code>main.py</code> I have:</p>

<pre><code>from extra import * 
</code></pre>

<p>although this gives me all the definitions in <code>extra.py</code> when maybe all I want is a single definition:</p>

<pre><code>def gap():
    print
    print
</code></pre>

<p>What do I add to the <code>import</code> statement to just get <code>gap</code> from <code>extra.py</code>?</p>
","<p><code>importlib</code> is recent addition in Python to programmatically import a module. It just a wrapper around <code>__import__</code> 
See <a href=""https://docs.python.org/3/library/importlib.html#module-importlib"" rel=""noreferrer"">https://docs.python.org/3/library/importlib.html#module-importlib</a></p>

<pre><code>moduleName = input('Enter module name:')
import_module(moduleName)
</code></pre>

<hr>

<p><strong>Update: Answer below is outdated</strong>. Use the more recent alternative above.</p>

<ol>
<li><p>Just <code>import file</code> without the '.py' extension.</p></li>
<li><p>You can mark a folder as a package, by adding an empty file named <code>__init__.py</code>.</p></li>
<li><p>You can use the <code>__import__</code> function. It takes the module name as a string. (Again: module name without the '.py' extension.)</p>

<pre><code>pmName = input('Enter module name:')
pm = __import__(pmName)
print(dir(pm))
</code></pre>

<p>Type <code>help(__import__)</code> for more details.</p></li>
</ol>
","2349998"
"How to remove a key from a python dictionary?","694938","","<p>When trying to delete a key from a dictionary, I write:</p>

<pre><code>if 'key' in myDict:
    del myDict['key']
</code></pre>

<p>Is there a one line way of doing this?</p>
","<p>Use <a href=""http://docs.python.org/library/stdtypes.html#dict.pop"" rel=""noreferrer""><code>dict.pop()</code></a>:</p>

<pre><code>my_dict.pop('key', None)
</code></pre>

<p>This will return <code>my_dict[key]</code> if <code>key</code> exists in the dictionary, and <code>None</code> otherwise. If the second parameter is not specified (ie. <code>my_dict.pop('key')</code>) and <code>key</code> does not exist, a <code>KeyError</code> is raised.</p>
","11277439"
"How do I write JSON data to a file?","694521","","<p>I have JSON data stored in the variable <code>data</code>.</p>

<p>I want to write this to a text file for testing so I don't have to grab the data from the server each time.</p>

<p>Currently, I am trying this:</p>

<pre><code>obj = open('data.txt', 'wb')
obj.write(data)
obj.close
</code></pre>

<p>And am receiving the error: </p>

<p><code>TypeError: must be string or buffer, not dict</code></p>

<p>How to fix this?</p>
","<p>You forgot the actual JSON part - <code>data</code> is a dictionary and not yet JSON-encoded. Write it like this:</p>

<pre><code>import json
with open('data.txt', 'w') as outfile:
    json.dump(data, outfile)
</code></pre>

<p>Note: Works on both 3.x and 2.x .</p>
","12309296"
"Checking whether a variable is an integer or not","689053","","<p>How do I check whether a variable is an integer?</p>
","<p>If you need to do this, do</p>

<pre><code>isinstance(&lt;var&gt;, int)
</code></pre>

<p>unless you are in Python 2.x in which case you want</p>

<pre><code>isinstance(&lt;var&gt;, (int, long))
</code></pre>

<p>Do not use <code>type</code>. It is almost never the right answer in Python, since it blocks all the flexibility of polymorphism. For instance, if you subclass <code>int</code>, your new class should register as an <code>int</code>, which <code>type</code> will not do:</p>

<pre><code>class Spam(int): pass
x = Spam(0)
type(x) == int # False
isinstance(x, int) # True
</code></pre>

<p>This adheres to Python's strong polymorphism: you should allow any object that behaves like an <code>int</code>, instead of mandating that it be one.</p>

<h1>BUT</h1>

<p>The classical Python mentality, though, is that it's <em>easier to ask forgiveness than permission</em>. In other words, don't check whether <code>x</code> is an integer; assume that it is and catch the exception results if it isn't:</p>

<pre><code>try:
    x += 1
except TypeError:
    ...
</code></pre>

<p>This mentality is slowly being overtaken by the use of <a href=""http://docs.python.org/library/abc.html"" rel=""noreferrer"">abstract base classes</a>, which let you register exactly what properties your object should have (adding? multiplying? doubling?) by making it inherit from a specially-constructed class. That would be the best solution, since it will permit <em>exactly</em> those objects with the necessary and sufficient attributes, but you will have to read the docs on how to use it.</p>
","3501408"
"Finding the average of a list","687933","","<p>I have to find the average of a list in Python. This is my code so far</p>

<pre><code>l = [15, 18, 2, 36, 12, 78, 5, 6, 9]
print reduce(lambda x, y: x + y, l)
</code></pre>

<p>I've got it so it adds together the values in the list, but I don't know how to make it divide into them?</p>
","<p>If your reduce is already returning your sum, then all you have left to do is divide.</p>

<pre><code>l = [15, 18, 2, 36, 12, 78, 5, 6, 9]
print reduce(lambda x, y: x + y, l) / len(l)
</code></pre>

<p>though <code>sum(l)/len(l)</code> would be simpler, as you wouldn't need a lambda.</p>

<p>If you want a more exact float result instead of an int then just use <code>float(len(l))</code> instead of <code>len(l)</code>.</p>
","9039992"
"*args and **kwargs?","685639","","<p>So I have difficulty with the concept of *args and **kwargs.</p>

<p>So far I have learned that:</p>

<ul>
<li><code>*args</code> = list of arguments - as positional arguments</li>
<li><code>**kwargs</code> = dictionary - whose keys become separate keyword arguments and the values become values of these arguments.</li>
</ul>

<p>??</p>

<p>To be honest I don't understand what programming task this would be helpful for. </p>

<p>Maybe:</p>

<p>I think to enter lists and dictionaries as arguments of a function AND at the same time as a wildcard, so I can pass ANY argument?</p>

<p>Is there a simple example to explain how <code>*args</code> and <code>**kwargs</code> are used?</p>

<p>Also the tutorial I found used just the ""*"" and a variable name. </p>

<p>Is <code>*args</code> and <code>**kwargs</code> just a placeholder or do you use exactly <code>*args</code> and <code>**kwargs</code> in the code?</p>
","<p><a href=""http://docs.python.org/tutorial/controlflow.html#arbitrary-argument-lists"" rel=""noreferrer"">The syntax is the <code>*</code> and <code>**</code></a>.  The names <code>*args</code> and <code>**kwargs</code> are only by convention but there's no hard requirement to use them.</p>

<p>You would use <code>*args</code> when you're not sure how many arguments might be passed to your function, i.e. it allows you pass an arbitrary number of arguments to your function.  For example:</p>

<pre><code>&gt;&gt;&gt; def print_everything(*args):
        for count, thing in enumerate(args):
...         print( '{0}. {1}'.format(count, thing))
...
&gt;&gt;&gt; print_everything('apple', 'banana', 'cabbage')
0. apple
1. banana
2. cabbage
</code></pre>

<p>Similarly, <code>**kwargs</code> allows you to handle named arguments that you have not defined in advance:</p>

<pre><code>&gt;&gt;&gt; def table_things(**kwargs):
...     for name, value in kwargs.items():
...         print( '{0} = {1}'.format(name, value))
...
&gt;&gt;&gt; table_things(apple = 'fruit', cabbage = 'vegetable')
cabbage = vegetable
apple = fruit
</code></pre>

<p>You can use these along with named arguments too.  The explicit arguments get values first and then everything else is passed to <code>*args</code> and <code>**kwargs</code>.  The named arguments come first in the list.  For example:</p>

<pre><code>def table_things(titlestring, **kwargs)
</code></pre>

<p>You can also use both in the same function definition but <code>*args</code> must occur before <code>**kwargs</code>.</p>

<p>You can also use the <code>*</code> and <code>**</code> syntax when calling a function.  For example:</p>

<pre><code>&gt;&gt;&gt; def print_three_things(a, b, c):
...     print( 'a = {0}, b = {1}, c = {2}'.format(a,b,c))
...
&gt;&gt;&gt; mylist = ['aardvark', 'baboon', 'cat']
&gt;&gt;&gt; print_three_things(*mylist)
a = aardvark, b = baboon, c = cat
</code></pre>

<p>As you can see in this case it takes the list (or tuple) of items and unpacks it. By this it matches them to the arguments in the function.  Of course, you could have a <code>*</code> both in the function definition and in the function call.</p>
","3394898"
"Upgrading all packages with pip","683010","","<p>Is it possible to upgrade all Python packages at one time with <strong><a href=""https://pypi.python.org/pypi/pip"" rel=""noreferrer""><code>pip</code></a></strong>?</p>

<p>Note that there is <a href=""https://github.com/pypa/pip/issues/59"" rel=""noreferrer"">a feature request</a> for this on the official issue tracker.</p>
","<p>There isn't a built-in flag yet, but you can use</p>

<pre><code>pip freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip install -U
</code></pre>

<p>Note: there are infinite potential variations for this. I'm trying to keep this answer short and simple, but please do suggest variations in the comments!</p>

<p>Relevant edits:</p>

<ul>
<li>Added a <code>grep</code> to skip ""-e"" package definitions, as suggested by @jawache (Yes, you could replace <code>grep</code>+<code>cut</code> with <code>sed</code> or <code>awk</code> or <code>perl</code> or...).</li>
<li><p>Newer versions of <code>pip</code> allow you to list outdated packages: </p>

<pre><code>pip list --outdated --format=freeze
</code></pre></li>
<li><p>Added <code>-n1</code> to <code>xargs</code>, prevents stopping everything if updating one package fails (thanks <a href=""https://stackoverflow.com/users/339505/andsens"">@andsens</a>)</p></li>
</ul>
","3452888"
"Get key by value in dictionary","667153","","<p>I made a function which will look up ages in dictionary and show the matching name:</p>

<pre><code>list = {'george':16,'amber':19}
search_age = raw_input(""Provide age"")
for age in list.values():
    if age == search_age:
        name = list[age]
        print name
</code></pre>

<p>I know how to compare and find the age I just don't know how to show the name of the person. Additionally, I am getting a <code>KeyError</code> because of line 5. I know it's not correct but I can't figure out to make it search backwards.</p>
","<p>There is none. <code>dict</code> is not intended to be used this way.</p>

<pre><code>for name, age in list.iteritems():    # for name, age in list.items():  (for Python 3.x)
    if age == search_age:
        print name
</code></pre>
","8023337"
"Static methods in Python?","665874","","<p>Is it possible to have static methods in Python so I can call them without initializing a class, like:</p>

<pre><code>ClassName.StaticMethod ( )
</code></pre>
","<p>Yep, using the <a href=""https://docs.python.org/2/library/functions.html#staticmethod"" rel=""noreferrer"" title=""staticmethod"">staticmethod</a> decorator</p>

<pre><code>class MyClass(object):
    @staticmethod
    def the_static_method(x):
        print x

MyClass.the_static_method(2) # outputs 2
</code></pre>

<p>Note that some code might use the old method of defining a static method, using <code>staticmethod</code> as a function rather than a decorator. This should only be used if you have to support ancient versions of Python (2.2 and 2.3)</p>

<pre><code>class MyClass(object):
    def the_static_method(x):
        print x
    the_static_method = staticmethod(the_static_method)

MyClass.the_static_method(2) # outputs 2
</code></pre>

<p>This is entirely identical to the first example (using <code>@staticmethod</code>), just not using the nice decorator syntax</p>

<p>Finally, use <a href=""https://docs.python.org/2/library/functions.html#staticmethod"" rel=""noreferrer"" title=""staticmethod""><code>staticmethod()</code></a> sparingly! There are very few situations where static-methods are necessary in Python, and I've seen them used many times where a separate ""top-level"" function would have been clearer.</p>

<hr>

<p><a href=""https://docs.python.org/2/library/functions.html#staticmethod"" rel=""noreferrer"" title=""staticmethod"">The following is verbatim from the documentation:</a>:</p>

<blockquote>
  <p>A static method does not receive an implicit first argument. To declare a static method, use this idiom:</p>

<pre><code>class C:
    @staticmethod
    def f(arg1, arg2, ...): ...
</code></pre>
  
  <p>The @staticmethod form is a function <a href=""https://docs.python.org/2/glossary.html#term-decorator"" rel=""noreferrer"" title=""term-decorator""><em>decorator</em></a> – see the description of function definitions in <a href=""https://docs.python.org/2/reference/compound_stmts.html#function"" rel=""noreferrer"" title=""Function definitions""><em>Function definitions</em></a> for details.</p>
  
  <p>It can be called either on the class (such as <code>C.f()</code>) or on an instance (such as <code>C().f()</code>). The instance is ignored except for its class.</p>
  
  <p>Static methods in Python are similar to those found in Java or C++. For a more advanced concept, see <a href=""https://docs.python.org/2/library/functions.html#classmethod"" rel=""noreferrer"" title=""classmethod""><code>classmethod()</code></a>.</p>
  
  <p>For more information on static methods, consult the documentation on the standard type hierarchy in <a href=""https://docs.python.org/2/reference/datamodel.html#types"" rel=""noreferrer"" title=""types""><em>The standard type hierarchy</em></a>.</p>
  
  <p>New in version 2.2.</p>
  
  <p>Changed in version 2.4: Function decorator syntax added.</p>
</blockquote>
","735978"
"Python Print String To Text File","659643","","<p>I'm using Python to open a text document:</p>

<pre><code>text_file = open(""Output.txt"", ""w"")

text_file.write(""Purchase Amount: "" 'TotalAmount')

text_file.close()
</code></pre>

<p>I want to enter the string called ""TotalAmount"" into the text document. Can someone please let me know how to do this?</p>
","<pre><code>text_file = open(""Output.txt"", ""w"")
text_file.write(""Purchase Amount: %s"" % TotalAmount)
text_file.close()
</code></pre>

<p>If you use a context manager, the file is closed automatically for you</p>

<pre><code>with open(""Output.txt"", ""w"") as text_file:
    text_file.write(""Purchase Amount: %s"" % TotalAmount)
</code></pre>

<p>If you're using Python2.6 or higher, it's preferred to use <code>str.format()</code></p>

<pre><code>with open(""Output.txt"", ""w"") as text_file:
    text_file.write(""Purchase Amount: {0}"".format(TotalAmount))
</code></pre>

<p>For python2.7 and higher you can use <code>{}</code> instead of <code>{0}</code></p>

<p>In Python3, there is an optional <code>file</code> parameter to the <code>print</code> function</p>

<pre><code>with open(""Output.txt"", ""w"") as text_file:
    print(""Purchase Amount: {}"".format(TotalAmount), file=text_file)
</code></pre>

<p>Python3.6 introduced <a href=""https://docs.python.org/3/whatsnew/3.6.html#pep-498-formatted-string-literals"" rel=""noreferrer"">f-strings</a> for another alternative</p>

<pre><code>with open(""Output.txt"", ""w"") as text_file:
    print(f""Purchase Amount: {TotalAmount}"", file=text_file)
</code></pre>
","5214587"
"How would I specify a new line in Python?","655593","","<p>How would I specify a new line in python?</p>

<p>For a comparison to Java in a String you would do something like ""First Line\r\nSecond Line""</p>

<p>So How would you do that in Python? For purposes of saving files with more then one line.</p>
","<p>Depends on how correct you want to be. <code>\n</code> will usually do the job.  If you really want to get it right you look up the newline character in the <a href=""http://docs.python.org/library/os.html"" rel=""noreferrer""><code>os</code> package</a>.  (It's actually called <code>linesep</code>.)</p>

<p>Note: when writing to files using the Python api, do not use the <code>os.linesep</code>. Just use <code>\n</code>, Python automatically translates that to the proper newline character for your platform.</p>
","11497391"
"How do I read a text file into a string variable in Python","652042","","<p>I use the following code segment to read a file in python</p>

<pre><code>with open (""data.txt"", ""r"") as myfile:
    data=myfile.readlines()
</code></pre>

<p>input file is</p>

<pre><code>LLKKKKKKKKMMMMMMMMNNNNNNNNNNNNN
GGGGGGGGGHHHHHHHHHHHHHHHHHHHHEEEEEEEE
</code></pre>

<p>and when I print data I get</p>

<pre><code>['LLKKKKKKKKMMMMMMMMNNNNNNNNNNNNN\n', 'GGGGGGGGGHHHHHHHHHHHHHHHHHHHHEEEEEEEE']
</code></pre>

<p>As I see data is in list form. How do I make it string. And also how do I remove ""\n"", ""["", and ""]"" characters from it ?</p>
","<p>You could use:</p>

<pre><code>with open('data.txt', 'r') as myfile:
    data=myfile.read().replace('\n', '')
</code></pre>
","8369345"
"Convert a Unicode string to a string in Python (containing extra symbols)","647963","","<p>How do you convert a Unicode string (containing extra characters like £ $, etc.) into a Python string?</p>
","<pre><code>title = u""Klüft skräms inför på fédéral électoral große""
import unicodedata
unicodedata.normalize('NFKD', title).encode('ascii','ignore')
'Kluft skrams infor pa federal electoral groe'
</code></pre>
","1207479"
"Check if a Python list item contains a string inside another string","633892","","<p>I have a list:</p>

<pre><code>my_list = ['abc-123', 'def-456', 'ghi-789', 'abc-456']
</code></pre>

<p>and want to search for items that contain the string <code>'abc'</code>. How can I do that?</p>

<pre><code>if 'abc' in my_list:
</code></pre>

<p>would check if <code>'abc'</code> exists in the list but it is a part of <code>'abc-123'</code> and <code>'abc-456'</code>, <code>'abc'</code> does not exist on its own. So how can I get all items that contain <code>'abc'</code> ?</p>
","<p>If you only want to check for the presence of <code>abc</code> in any string in the list, you could try</p>

<pre><code>some_list = ['abc-123', 'def-456', 'ghi-789', 'abc-456']
if any(""abc"" in s for s in some_list):
    # whatever
</code></pre>

<p>If you really want to get all the items containing <code>abc</code>, use</p>

<pre><code>matching = [s for s in some_list if ""abc"" in s]
</code></pre>
","4843172"
"Python integer incrementing with ++","616454","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/1485841/python-behaviour-of-increment-and-decrement-operators"">Python: Behaviour of increment and decrement operators</a>  </p>
</blockquote>



<p>I've always laughed to myself when I've looked back at my VB6 days and thought, ""What modern language doesn't allow incrementing with double plus signs?"":</p>

<pre><code>number++
</code></pre>

<p>To my surprise, I can't find anything about this in the Python docs. Must I really subject myself to <code>number = number + 1</code>? Don't people use the <code>++/--</code> notation?</p>
","<p>Python doesn't support <code>++</code>, but you can do:</p>

<pre><code>number += 1
</code></pre>
","2632687"
"Select rows from a DataFrame based on values in a column in pandas","613738","","<p>How to select rows from a DataFrame based on values in some column in pandas?<br>
In SQL I would use: </p>

<pre><code>select * from table where colume_name = some_value. 
</code></pre>

<p><em>I tried to look at pandas documentation but did not immediately find the answer.</em></p>
","<p>To select rows whose column value equals a scalar, <code>some_value</code>, use <code>==</code>:</p>

<pre><code>df.loc[df['column_name'] == some_value]
</code></pre>

<p>To select rows whose column value is in an iterable, <code>some_values</code>, use <code>isin</code>:</p>

<pre><code>df.loc[df['column_name'].isin(some_values)]
</code></pre>

<p>Combine multiple conditions with <code>&amp;</code>: </p>

<pre><code>df.loc[(df['column_name'] == some_value) &amp; df['other_column'].isin(some_values)]
</code></pre>

<hr>

<p>To select rows whose column value <em>does not equal</em> <code>some_value</code>, use <code>!=</code>:</p>

<pre><code>df.loc[df['column_name'] != some_value]
</code></pre>

<p><code>isin</code> returns a boolean Series, so to select rows whose value is <em>not</em> in <code>some_values</code>, negate the boolean Series using <code>~</code>:</p>

<pre><code>df.loc[~df['column_name'].isin(some_values)]
</code></pre>

<hr>

<p>For example,</p>

<pre><code>import pandas as pd
import numpy as np
df = pd.DataFrame({'A': 'foo bar foo bar foo bar foo foo'.split(),
                   'B': 'one one two three two two one three'.split(),
                   'C': np.arange(8), 'D': np.arange(8) * 2})
print(df)
#      A      B  C   D
# 0  foo    one  0   0
# 1  bar    one  1   2
# 2  foo    two  2   4
# 3  bar  three  3   6
# 4  foo    two  4   8
# 5  bar    two  5  10
# 6  foo    one  6  12
# 7  foo  three  7  14

print(df.loc[df['A'] == 'foo'])
</code></pre>

<p>yields</p>

<pre><code>     A      B  C   D
0  foo    one  0   0
2  foo    two  2   4
4  foo    two  4   8
6  foo    one  6  12
7  foo  three  7  14
</code></pre>

<hr>

<p>If you have multiple values you want to include, put them in a
list (or more generally, any iterable) and use <code>isin</code>:</p>

<pre><code>print(df.loc[df['B'].isin(['one','three'])])
</code></pre>

<p>yields</p>

<pre><code>     A      B  C   D
0  foo    one  0   0
1  bar    one  1   2
3  bar  three  3   6
6  foo    one  6  12
7  foo  three  7  14
</code></pre>

<hr>

<p>Note, however, that if you wish to do this many times, it is more efficient to
make an index first, and then use <code>df.loc</code>:</p>

<pre><code>df = df.set_index(['B'])
print(df.loc['one'])
</code></pre>

<p>yields</p>

<pre><code>       A  C   D
B              
one  foo  0   0
one  bar  1   2
one  foo  6  12
</code></pre>

<p>or, to include multiple values from the index use <code>df.index.isin</code>:</p>

<pre><code>df.loc[df.index.isin(['one','two'])]
</code></pre>

<p>yields</p>

<pre><code>       A  C   D
B              
one  foo  0   0
one  bar  1   2
two  foo  2   4
two  foo  4   8
two  bar  5  10
one  foo  6  12
</code></pre>
","17071908"
"How do I create a constant in Python?","612819","","<p>Is there a way to declare a constant in Python? In Java we can create constant values in this manner:</p>

<pre class=""lang-java prettyprint-override""><code>public static final String CONST_NAME = ""Name"";
</code></pre>

<p>What is the equivalent of the above Java constant declaration in Python?</p>
","<p>No there is not. You cannot declare a variable or value as constant in Python. Just don't change it.</p>

<p>If you are in a class, the equivalent would be:</p>

<pre><code>class Foo(object):
    CONST_NAME = ""Name""
</code></pre>

<p>if not, it is just</p>

<pre><code>CONST_NAME = ""Name""
</code></pre>

<p>But you might want to have a look at the code snippet <a href=""http://code.activestate.com/recipes/65207-constants-in-python/?in=user-97991"" rel=""noreferrer"">Constants in Python</a> by Alex Martelli.</p>
","2682752"
"How do I ""cd"" in Python?","612410","","<p><code>cd</code> as in the shell command to change the working directory.</p>

<p>How do I change the current working directory in Python?</p>
","<p>You can change the working directory with:</p>

<pre class=""lang-py prettyprint-override""><code>import os

os.chdir(path)
</code></pre>

<p>There are two best practices to follow when using this method:</p>

<ol>
<li>Catch the exception (WindowsError, OSError) on invalid path.  If the exception is thrown, do not perform any recursive operations, especially destructive ones.  They will operate on the old path and not the new one.</li>
<li>Return to your old directory when you're done.  This can be done in an exception-safe manner by wrapping your chdir call in a context manager, like Brian M. Hunt did in <a href=""https://stackoverflow.com/questions/431684/how-do-i-cd-in-python/13197763#13197763"">his answer</a>.</li>
</ol>

<p>Changing the current working directory in a subprocess does not change the current working directory in the parent process.  This is true of the Python interpreter as well.  You cannot use <code>os.chdir()</code> to change the CWD of the calling process.</p>
","431715"
"Does Python's time.time() return the local or UTC timestamp?","603727","","<p>Does <code>time.time()</code> in the Python time module return the system's time or the time in UTC?</p>
","<p>The <a href=""https://docs.python.org/2/library/time.html#time.time"" rel=""noreferrer""><code>time.time()</code></a> function returns the number of seconds since the epoch, as seconds.  Note that the ""epoch"" is defined as the start of January 1st, 1970 in UTC.  So the epoch is defined in terms of UTC and establishes a global moment in time.  No matter where you are ""seconds past epoch"" (time.time()) returns the same value at the same moment.</p>

<p>Here is some sample output I ran on my computer, converting it to a string as well.</p>

<pre><code>Python 2.7.3 (default, Apr 24 2012, 00:00:54) 
[GCC 4.7.0 20120414 (prerelease)] on linux2
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
&gt;&gt;&gt; import time
&gt;&gt;&gt; ts = time.time()
&gt;&gt;&gt; print ts
1355563265.81
&gt;&gt;&gt; import datetime
&gt;&gt;&gt; st = datetime.datetime.fromtimestamp(ts).strftime('%Y-%m-%d %H:%M:%S')
&gt;&gt;&gt; print st
2012-12-15 01:21:05
&gt;&gt;&gt;
</code></pre>

<p>The <code>ts</code> variable is the time returned in seconds.  I then converted it to a string using the <code>datetime</code> library making it a string that is human readable. </p>
","13891070"
"How to install pip with Python 3?","597943","","<p>I want to install <a href=""http://pypi.python.org/pypi/pip"" rel=""noreferrer"">pip</a>. It should support Python 3, but it requires setuptools, which is available only for Python 2.</p>

<p>How can I install pip with Python 3?</p>
","<p>edit: Manual installation and use of <code>setuptools</code> is not the standard process anymore.</p>

<h2>If you're running Python 2.7.9+ or Python 3.4+</h2>

<p>Congrats, you <em>should</em> already have <code>pip</code> installed. If you do not, read onward.</p>

<h2>If you're running a Unix-like System</h2>

<p>You can usually install the package for <code>pip</code> through your package manager if your version of Python is older than 2.7.9 or 3.4, or if your system did not include it for whatever reason.</p>

<p>Instructions for some of the more common distros follow.</p>

<h3>Installing on Debian (Wheezy and newer) and Ubuntu (Trusty Tahr and newer) for Python 2.x</h3>

<p>Run the following command from a terminal:</p>

<pre><code>sudo apt-get install python-pip 
</code></pre>

<h3>Installing on Debian (Wheezy and newer) and Ubuntu (Trusty Tahr and newer) for Python 3.x</h3>

<p>Run the following command from a terminal:</p>

<pre><code>sudo apt-get install python3-pip
</code></pre>

<h3>Installing <code>pip</code> on CentOS 7 for Python 2.x</h3>

<p>On CentOS 7, you have to install setup tools first, and then use that to install <code>pip</code>, as there is no direct package for it.</p>

<pre><code>sudo yum install python-setuptools
sudo easy_install pip
</code></pre>

<h3>Installing <code>pip</code> on CentOS 7 for Python 3.x</h3>

<p>Assuming you installed Python 3.4 <a href=""https://fedoraproject.org/wiki/EPEL"">from EPEL</a>, you can install Python 3's setup tools and use it to install <code>pip</code>.</p>

<pre><code># First command requires you to have enabled EPEL for CentOS7
sudo yum install python34-setuptools
sudo easy_install pip
</code></pre>

<h3>If your Unix/Linux distro doesn't have it in package repos</h3>

<p>Install using the manual way detailed below.</p>

<h2>The manual way</h2>

<p>If you want to do it the manual way, the now-recommended method is to install using the <code>get-pip.py</code> script from <a href=""https://pip.pypa.io/en/stable/installing.html""><code>pip</code>'s installation instructions</a>.</p>

<blockquote>
  <p>Install pip</p>
  
  <p>To install pip, securely download <a href=""https://bootstrap.pypa.io/get-pip.py""><code>get-pip.py</code></a></p>
  
  <p>Then run the following (which may require administrator access):</p>

<pre><code>python get-pip.py 
</code></pre>
  
  <p>If <code>setuptools</code> is not already installed, <code>get-pip.py</code> will install setuptools for you.</p>
</blockquote>
","6587528"
"How can I represent an 'Enum' in Python?","591582","","<p>I'm mainly a C# developer, but I'm currently working on a project in Python.</p>

<p>How can I represent the equivalent of an Enum in Python?  </p>
","<p>Enums have been added to Python 3.4 as described in <a href=""http://www.python.org/dev/peps/pep-0435/"" rel=""noreferrer"">PEP 435</a>.  It has also been <a href=""https://pypi.python.org/pypi/enum34"" rel=""noreferrer"">backported to 3.3, 3.2, 3.1, 2.7, 2.6, 2.5, and 2.4</a> on pypi.  </p>

<p>For more advanced Enum techniques try the <a href=""https://pypi.python.org/pypi/aenum"" rel=""noreferrer"">aenum library</a> (2.7, 3.3+, same author as <code>enum34</code>. Code is not perfectly compatible between py2 and py3, e.g. you'll need <a href=""https://stackoverflow.com/a/25982264/57461""><code>__order__</code> in python 2</a>).</p>

<ul>
<li>To use <code>enum34</code>, do <code>$ pip install enum34</code></li>
<li>To use <code>aenum</code>, do <code>$ pip install aenum</code></li>
</ul>

<p>Installing <code>enum</code> (no numbers) will install a completely different and incompatible version.</p>

<hr>

<pre><code>from enum import Enum     # for enum34, or the stdlib version
# from aenum import Enum  # for the aenum version
Animal = Enum('Animal', 'ant bee cat dog')

Animal.ant  # returns &lt;Animal.ant: 1&gt;
Animal['ant']  # returns &lt;Animal.ant: 1&gt; (string lookup)
Animal.ant.name  # returns 'ant' (inverse lookup)
</code></pre>

<p>or equivalently:</p>

<pre><code>class Animal(Enum):
    ant = 1
    bee = 2
    cat = 3
    dog = 4
</code></pre>

<hr>

<p>In earlier versions, one way of accomplishing enums is:</p>

<pre><code>def enum(**enums):
    return type('Enum', (), enums)
</code></pre>

<p>which is used like so:</p>

<pre><code>&gt;&gt;&gt; Numbers = enum(ONE=1, TWO=2, THREE='three')
&gt;&gt;&gt; Numbers.ONE
1
&gt;&gt;&gt; Numbers.TWO
2
&gt;&gt;&gt; Numbers.THREE
'three'
</code></pre>

<p>You can also easily support automatic enumeration with something like this:</p>

<pre><code>def enum(*sequential, **named):
    enums = dict(zip(sequential, range(len(sequential))), **named)
    return type('Enum', (), enums)
</code></pre>

<p>and used like so:</p>

<pre><code>&gt;&gt;&gt; Numbers = enum('ZERO', 'ONE', 'TWO')
&gt;&gt;&gt; Numbers.ZERO
0
&gt;&gt;&gt; Numbers.ONE
1
</code></pre>

<p>Support for converting the values back to names can be added this way:</p>

<pre><code>def enum(*sequential, **named):
    enums = dict(zip(sequential, range(len(sequential))), **named)
    reverse = dict((value, key) for key, value in enums.iteritems())
    enums['reverse_mapping'] = reverse
    return type('Enum', (), enums)
</code></pre>

<p>This overwrites anything with that name, but it is useful for rendering your enums in output.  It will throw KeyError if the reverse mapping doesn't exist.  With the first example:</p>

<pre><code>&gt;&gt;&gt; Numbers.reverse_mapping['three']
'THREE'
</code></pre>
","1695250"
"Get list from pandas DataFrame column headers","590209","","<p>I want to get a list of the column headers from a pandas DataFrame.  The DataFrame will come from user input so I won't know how many columns there will be or what they will be called.</p>

<p>For example, if I'm given a DataFrame like this:</p>

<pre><code>&gt;&gt;&gt; my_dataframe
    y  gdp  cap
0   1    2    5
1   2    3    9
2   8    7    2
3   3    4    7
4   6    7    7
5   4    8    3
6   8    2    8
7   9    9   10
8   6    6    4
9  10   10    7
</code></pre>

<p>I would want to get a list like this:</p>

<pre><code>&gt;&gt;&gt; header_list
[y, gdp, cap]
</code></pre>
","<p>You can get the values as a list by doing:</p>

<pre><code>list(my_dataframe.columns.values)
</code></pre>

<p>Also you can simply use:</p>

<pre><code>list(my_dataframe)
</code></pre>
","19483025"
"Installing specific package versions with pip","583690","","<p>I'm trying to install version 1.2.2 of the MySQL_python adaptor, using a fresh virtualenv created with the <code>--no-site-packages</code> option. The current version shown in PyPi is <a href=""http://pypi.python.org/pypi/MySQL-python/1.2.3"" rel=""noreferrer"">1.2.3</a>. Is there a way to install the older version? I found an article stating that this should do it:</p>

<pre><code>pip install MySQL_python==1.2.2
</code></pre>

<p>When installed, however, it still shows MySQL_python-1.2.3-py2.6.egg-info in the site packages. Is this a problem specific to this package, or am I doing something wrong?</p>
","<p>First, I see two issues with what you're trying to do. Since you already have an installed version, you should either uninstall the current existing driver or use <code>pip install -I MySQL_python==1.2.2</code></p>

<p>However, you'll soon find out that this doesn't work. If you look at pip's installation log, or if you do a <code>pip install -Iv MySQL_python==1.2.2</code> you'll find that the PyPI URL link does not work for MySQL_python v1.2.2. You can verify this here: <a href=""http://pypi.python.org/pypi/MySQL-python/1.2.2"" rel=""noreferrer"">http://pypi.python.org/pypi/MySQL-python/1.2.2</a></p>

<p>The download link 404s and the fallback URL links are re-directing infinitely due to sourceforge.net's recent upgrade and PyPI's stale URL.</p>

<p>So to properly install the driver, you can follow these steps:</p>

<pre><code>pip uninstall MySQL_python
pip install -Iv http://sourceforge.net/projects/mysql-python/files/mysql-python/1.2.2/MySQL-python-1.2.2.tar.gz/download
</code></pre>
","5226504"
"Selecting columns in a pandas dataframe","582886","","<p>I have data in different columns but I don't know how to extract it to save it in another variable.</p>

<pre><code>index  a   b   c
1      2   3   4
2      3   4   5
</code></pre>

<p>How do I select <code>'b'</code>, <code>'c'</code> and save it in to df1?</p>

<p>I tried </p>

<pre><code>df1 = df['a':'b']
df1 = df.ix[:, 'a':'b']
</code></pre>

<p>None seem to work. Any ideas would help thanks.</p>
","<p>The column names (which are strings) cannot be sliced in the manner you tried.</p>

<p>Here you have a couple of options. If you know from context which variables you want to slice out, you can just return a view of only those columns by passing a list into the <code>__getitem__</code> syntax (the []'s).</p>

<pre><code>df1 = df[['a','b']]
</code></pre>

<p>Alternatively, if it matters to index them numerically and not by their name (say your code should automatically do this without knowing the names of the first two columns) then you can do this instead:</p>

<pre><code>df1 = df.iloc[:,0:2] # Remember that Python does not slice inclusive of the ending index.
</code></pre>

<p>Additionally, you should familiarize yourself with the idea of a view into a Pandas object vs. a copy of that object. The first of the above methods will return a new copy in memory of the desired sub-object (the desired slices). </p>

<p>Sometimes, however, there are indexing conventions in Pandas that don't do this and instead give you a new variable that just refers to the same chunk of memory as the sub-object or slice in the original object. This will happen with the second way of indexing, so you can modify it with the <code>copy()</code> function to get a regular copy. When this happens, changing what you think is the sliced object can sometimes alter the original object. Always good to be on the look out for this.</p>

<pre><code>df1 = df.iloc[0,0:2].copy() # To avoid the case where changing df1 also changes df
</code></pre>
","11287278"
"Styling multi-line conditions in 'if' statements?","582190","","<p>Sometimes I break long conditions in <code>if</code>s onto several lines. The most obvious way to do this is:</p>

<pre><code>  if (cond1 == 'val1' and cond2 == 'val2' and
      cond3 == 'val3' and cond4 == 'val4'):
      do_something
</code></pre>

<p>Isn't very very appealing visually, because the action blends with the conditions. However, it is the natural way using correct Python indentation of 4 spaces.</p>

<p>For the moment I'm using:</p>

<pre><code>  if (    cond1 == 'val1' and cond2 == 'val2' and
          cond3 == 'val3' and cond4 == 'val4'):
      do_something
</code></pre>

<p>But this isn't very pretty. :-)</p>

<p>Can you recommend an alternative way?</p>
","<p>You don't need to use 4 spaces on your second conditional line.  Maybe use:</p>

<pre><code>if (cond1 == 'val1' and cond2 == 'val2' and 
       cond3 == 'val3' and cond4 == 'val4'):
    do_something
</code></pre>

<p>Also, don't forget the whitespace is more flexible than you might think:</p>

<pre><code>if (   
       cond1 == 'val1' and cond2 == 'val2' and 
       cond3 == 'val3' and cond4 == 'val4'
   ):
    do_something
if    (cond1 == 'val1' and cond2 == 'val2' and 
       cond3 == 'val3' and cond4 == 'val4'):
    do_something
</code></pre>

<p>Both of those are fairly ugly though.</p>

<p>Maybe lose the brackets (the <a href=""https://www.python.org/dev/peps/pep-0008/#multiline-if-statements"" rel=""noreferrer"">Style Guide</a> discourages this though)?</p>

<pre><code>if cond1 == 'val1' and cond2 == 'val2' and \
   cond3 == 'val3' and cond4 == 'val4':
    do_something
</code></pre>

<p>This at least gives you some differentiation.</p>

<p>Or even:</p>

<pre><code>if cond1 == 'val1' and cond2 == 'val2' and \
                       cond3 == 'val3' and \
                       cond4 == 'val4':
    do_something
</code></pre>

<p>I think I prefer:</p>

<pre><code>if cond1 == 'val1' and \
   cond2 == 'val2' and \
   cond3 == 'val3' and \
   cond4 == 'val4':
    do_something
</code></pre>

<p>Here's the <a href=""https://www.python.org/dev/peps/pep-0008/#multiline-if-statements"" rel=""noreferrer"">Style Guide</a>, which (since 2010) recommends using brackets.</p>
","181557"
"What is the purpose of self?","581529","","<p>What is the purpose of the <code>self</code> word in Python? I understand it refers to the specific object created from that class, but I can't see why it explicitly needs to be added to every function as a parameter. To illustrate, in Ruby I can do this:</p>

<pre class=""lang-ruby prettyprint-override""><code>class myClass
    def myFunc(name)
        @name = name
    end
end
</code></pre>

<p>Which I understand, quite easily. However in Python I need to include <code>self</code>:</p>

<pre><code>class myClass:
    def myFunc(self, name):
        self.name = name
</code></pre>

<p>Can anyone talk me through this? It is not something I've come across in my (admittedly limited) experience.</p>
","<p>The reason you need to use <code>self.</code> is because Python does not use the <code>@</code> syntax to refer to instance attributes. Python decided to do methods in a way that makes the instance to which the method belongs be <em>passed</em> automatically, but not <em>received</em> automatically: the first parameter of methods is the instance the method is called on. That makes methods entirely the same as functions, and leaves the actual name to use up to you (although <code>self</code> is the convention, and people will generally frown at you when you use something else.) <code>self</code> is not special to the code, it's just another object.</p>

<p>Python could have done something else to distinguish normal names from attributes -- special syntax like Ruby has, or requiring declarations like C++ and Java do, or perhaps something  yet more different -- but it didn't. Python's all for making things explicit, making it obvious what's what, and although it doesn't do it entirely everywhere, it does do it for instance attributes. That's why assigning to an instance attribute needs to know what instance to assign to, and that's why it needs <code>self.</code>.</p>
","2709832"
"How to make IPython notebook matplotlib plot inline","579297","","<p>I am trying to use IPython notebook on MacOS X with Python 2.7.2 and IPython 1.1.0.</p>

<p>I cannot get matplotlib graphics to show up inline.</p>

<pre><code>import matplotlib
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline  
</code></pre>

<p>I have also tried <code>%pylab inline</code> and the ipython command line arguments <code>--pylab=inline</code> but this makes no difference.</p>

<pre><code>x = np.linspace(0, 3*np.pi, 500)
plt.plot(x, np.sin(x**2))
plt.title('A simple chirp')
plt.show()
</code></pre>

<p>Instead of inline graphics, I get this:</p>

<pre><code>&lt;matplotlib.figure.Figure at 0x110b9c450&gt;
</code></pre>

<p>And <code>matplotlib.get_backend()</code> shows that I have the <code>'module://IPython.kernel.zmq.pylab.backend_inline'</code> backend.</p>
","<p>I used <code>%matplotlib inline</code> in the first cell of the notebook and it works. I think you should try:</p>

<pre><code>%matplotlib inline

import matplotlib
import numpy as np
import matplotlib.pyplot as plt
</code></pre>

<p>You can also always start all your IPython kernels in inline mode by default by setting the following config options in your config files:</p>

<pre><code>c.IPKernelApp.matplotlib=&lt;CaselessStrEnum&gt;
  Default: None
  Choices: ['auto', 'gtk', 'gtk3', 'inline', 'nbagg', 'notebook', 'osx', 'qt', 'qt4', 'qt5', 'tk', 'wx']
  Configure matplotlib for interactive use with the default matplotlib backend.
</code></pre>
","24884342"
"How to read large file, line by line in python","574446","","<p>I want to iterate over each line of an entire file. One way to do this is by reading the entire file, saving it to a list, then going over the line of interest. This method uses a lot of memory, so I am looking for an alternative.</p>

<p>My code so far:</p>

<pre><code>for each_line in fileinput.input(input_file):
    do_something(each_line)

    for each_line_again in fileinput.input(input_file):
        do_something(each_line_again)
</code></pre>

<p>Executing this code gives an error message: <code>device active</code>.</p>

<p>Any suggestions?</p>

<p>EDIT: The purpose is to calculate pair-wise string similarity, meaning for each line in file, I want to calculate the Levenshtein distance with every other line.</p>
","<p>Nobody has given the correct, fully Pythonic way to read a file. It's the following:</p>

<pre><code>with open(...) as f:
    for line in f:
        &lt;do something with line&gt;
</code></pre>

<p>The <code>with</code> statement handles opening and closing the file, including if an exception is raised in the inner block. The <code>for line in f</code> treats the file object <code>f</code> as an iterable, which automatically uses buffered IO and memory management so you don't have to worry about large files.</p>

<blockquote>
  <p>There should be one -- and preferably only one -- obvious way to do it.</p>
</blockquote>
","8010133"
"How to find if directory exists in Python","573500","","<p>In the <code>os</code> module in Python, is there a way to find if a directory exists, something like:</p>

<pre><code>&gt;&gt;&gt; os.direxists(os.path.join(os.getcwd()), 'new_folder')) # in pseudocode
True/False
</code></pre>
","<p>You're looking for <a href=""http://docs.python.org/dev/library/os.path.html#os.path.isdir""><code>os.path.isdir</code></a>, or <a href=""http://docs.python.org/dev/library/os.path.html#os.path.exists""><code>os.path.exists</code></a> if you don't care whether it's a file or a directory.</p>

<p>Example:</p>

<pre><code>import os
print(os.path.isdir(""/home/el""))
print(os.path.exists(""/home/el/myfile.txt""))
</code></pre>
","8933290"
"Convert hex string to int in Python","573386","","<p>How do I convert a hex string to an int in Python? </p>

<p>I may have it as ""<code>0xffff</code>"" or just ""<code>ffff</code>"".</p>
","<p><strong>Without</strong> the 0x prefix, you need to specify the base explicitly, otherwise there's no way to tell:</p>

<pre><code>x = int(""deadbeef"", 16)
</code></pre>

<p><strong>With</strong> the 0x prefix, Python can distinguish hex and decimal automatically.</p>

<pre><code>&gt;&gt;&gt; print int(""0xdeadbeef"", 0)
3735928559
&gt;&gt;&gt; print int(""10"", 0)
10
</code></pre>

<p>(You <em>must</em> specify <code>0</code> as the base in order to invoke this prefix-guessing behavior; omitting the second parameter means to assume base-10.)</p>
","209550"
"Running shell command from Python and capturing the output","569992","","<p>I want to write a function that will execute a shell command and return its output <strong>as a string</strong>, no matter, is it an error or success message. I just want to get the same result that I would have gotten with the command line.</p>

<p>What would be a code example that would do such a thing?</p>

<p>For example:</p>

<pre><code>def run_command(cmd):
    # ??????

print run_command('mysqladmin create test -uroot -pmysqladmin12')
# Should output something like:
# mysqladmin: CREATE DATABASE failed; error: 'Can't create database 'test'; database exists'
</code></pre>
","<p>The answer to this question depends on the version of Python you're using. The simplest approach is to use the <a href=""https://docs.python.org/3/library/subprocess.html#subprocess.check_output"" rel=""noreferrer""><code>subprocess.check_output</code></a> function:</p>

<pre><code>&gt;&gt;&gt; subprocess.check_output(['ls', '-l'])
b'total 0\n-rw-r--r--  1 memyself  staff  0 Mar 14 11:04 files\n'
</code></pre>

<p><code>check_output</code> runs a single program that takes only arguments as input.<sup>1</sup> It returns the result exactly as printed to <code>stdout</code>. If you need to write input to <code>stdin</code>, skip ahead to the <code>run</code> or <code>Popen</code> sections. If you want to execute complex shell commands, see the note on <code>shell=True</code> at the end of this answer.</p>

<p>The <code>check_output</code> function works on almost all versions of Python still in wide use (2.7+).<sup>2</sup> But for more recent versions, it is no longer the recommended approach.</p>

<h3>Modern versions of Python (3.5 or higher): <code>run</code></h3>

<p>If you're using <strong>Python 3.5</strong> or higher, and <strong>do not need backwards compatibility</strong>, the <a href=""https://docs.python.org/3/library/subprocess.html#using-the-subprocess-module"" rel=""noreferrer"">new <code>run</code> function</a> is recommended. It provides a very general, high-level API for the <code>subprocess</code> module. To capture the output of a program, pass the <code>subprocess.PIPE</code> flag to the <code>stdout</code> keyword argument. Then access the <code>stdout</code> attribute of the returned <a href=""https://docs.python.org/3/library/subprocess.html#subprocess.CompletedProcess"" rel=""noreferrer""><code>CompletedProcess</code></a> object:</p>

<pre><code>&gt;&gt;&gt; import subprocess
&gt;&gt;&gt; result = subprocess.run(['ls', '-l'], stdout=subprocess.PIPE)
&gt;&gt;&gt; result.stdout
b'total 0\n-rw-r--r--  1 memyself  staff  0 Mar 14 11:04 files\n'
</code></pre>

<p>The return value is a <code>bytes</code> object, so if you want a proper string, you'll need to <code>decode</code> it. Assuming the called process returns a UTF-8-encoded string:</p>

<pre><code>&gt;&gt;&gt; result.stdout.decode('utf-8')
'total 0\n-rw-r--r--  1 memyself  staff  0 Mar 14 11:04 files\n'
</code></pre>

<p>This can all be compressed to a one-liner:</p>

<pre><code>&gt;&gt;&gt; subprocess.run(['ls', '-l'], stdout=subprocess.PIPE).stdout.decode('utf-8')
'total 0\n-rw-r--r--  1 memyself  staff  0 Mar 14 11:04 files\n'
</code></pre>

<p>If you want to pass input to the process's <code>stdin</code>, pass a <code>bytes</code> object to the <code>input</code> keyword argument:</p>

<pre><code>&gt;&gt;&gt; cmd = ['awk', 'length($0) &gt; 5']
&gt;&gt;&gt; input = 'foo\nfoofoo\n'.encode('utf-8')
&gt;&gt;&gt; result = subprocess.run(cmd, stdout=subprocess.PIPE, input=input)
&gt;&gt;&gt; result.stdout.decode('utf-8')
'foofoo\n'
</code></pre>

<p>You can capture errors by passing <code>stderr=subprocess.PIPE</code> (capture to <code>result.stderr</code>) or <code>stderr=subprocess.STDOUT</code> (capture to <code>result.stdout</code> along with regular output). When security is not a concern, you can also run more complex shell commands by passing <code>shell=True</code> as described in the notes below.</p>

<p>This adds just a bit of complexity, compared to the old way of doing things. But I think it's worth the payoff: now you can do almost anything you need to do with the <code>run</code> function alone.</p>

<h3>Older versions of Python (2.7-3.4): <code>check_output</code></h3>

<p>If you are using an older version of Python, or need modest backwards compatibility, you can probably use the <code>check_output</code> function as briefly described above. It has been available since Python 2.7.</p>

<pre><code>subprocess.check_output(*popenargs, **kwargs)  
</code></pre>

<p>It takes takes the same arguments as <code>Popen</code> (see below), and returns a string containing the program's output. The beginning of this answer has a more detailed usage example. </p>

<p>You can pass <code>stderr=subprocess.STDOUT</code> to ensure that error messages are included in the returned output -- but don't pass <code>stderr=subprocess.PIPE</code> to <code>check_output</code>. It can cause <a href=""http://docs.python.org/library/subprocess.html#subprocess.check_output"" rel=""noreferrer"">deadlocks</a>. When security is not a concern, you can also run more complex shell commands by passing <code>shell=True</code> as described in the notes below.</p>

<p>If you need to pipe from <code>stderr</code> or pass input to the process, <code>check_output</code> won't be up to the task. See the <code>Popen</code> examples below in that case. </p>

<h3>Complex applications &amp; legacy versions of Python (2.6 and below): <code>Popen</code></h3>

<p>If you need deep backwards compatibility, or if you need more sophisticated functionality than <code>check_output</code> provides, you'll have to work directly with <code>Popen</code> objects, which encapsulate the low-level API for subprocesses. </p>

<p>The <code>Popen</code> constructor accepts either <strong>a single command</strong> without arguments, or <strong>a list</strong> containing a command as its first item, followed by any number of arguments, each as a separate item in the list. <a href=""https://docs.python.org/3/library/shlex.html"" rel=""noreferrer""><code>shlex.split</code></a> can help parse strings into appropriately formatted lists. <code>Popen</code> objects also accept a <a href=""https://docs.python.org/3/library/subprocess.html#subprocess.Popen"" rel=""noreferrer"">host of different arguments</a> for process IO management and low-level configuration. </p>

<p>To send input and capture output, <code>communicate</code> is almost always the preferred method. As in:</p>

<pre><code>output = subprocess.Popen([""mycmd"", ""myarg""], 
                          stdout=subprocess.PIPE).communicate()[0]
</code></pre>

<p>Or </p>

<pre><code>&gt;&gt;&gt; import subprocess
&gt;&gt;&gt; p = subprocess.Popen(['ls', '-a'], stdout=subprocess.PIPE, 
...                                    stderr=subprocess.PIPE)
&gt;&gt;&gt; out, err = p.communicate()
&gt;&gt;&gt; print out
.
..
foo
</code></pre>

<p>If you set <code>stdin=PIPE</code>, <code>communicate</code> also allows you to pass data to the process via <code>stdin</code>:</p>

<pre><code>&gt;&gt;&gt; cmd = ['awk', 'length($0) &gt; 5']
&gt;&gt;&gt; p = subprocess.Popen(cmd, stdout=subprocess.PIPE,
...                           stderr=subprocess.PIPE,
...                           stdin=subprocess.PIPE)
&gt;&gt;&gt; out, err = p.communicate('foo\nfoofoo\n')
&gt;&gt;&gt; print out
foofoo
</code></pre>

<p>Note <a href=""https://stackoverflow.com/a/21867841/577088"">Aaron Hall's answer</a>, which indicates that on some systems, you may need to set <code>stdout</code>, <code>stderr</code>, and <code>stdin</code> all to <code>PIPE</code> (or <code>DEVNULL</code>) to get <code>communicate</code> to work at all.</p>

<p>In some rare cases, you may need complex, real-time output capturing. <a href=""https://stackoverflow.com/a/4760274/577088"">Vartec</a>'s answer suggests a way forward, but methods other than <code>communicate</code> are prone to deadlocks if not used carefully.</p>

<p>As with all the above functions, when security is not a concern, you can run more complex shell commands by passing <code>shell=True</code>.</p>

<h3>Notes</h3>

<p><strong>1. Running shell commands: the <code>shell=True</code> argument</strong></p>

<p>Normally, each call to <code>run</code>, <code>check_output</code>, or the <code>Popen</code> constructor executes a <em>single program</em>. That means no fancy bash-style pipes. If you want to run complex shell commands, you can pass <code>shell=True</code>, which all three functions support.</p>

<p>However, doing so raises <a href=""https://docs.python.org/3/library/subprocess.html#security-considerations"" rel=""noreferrer"">security concerns</a>. If you're doing anything more than light scripting, you might be better off calling each process separately, and passing the output from each as an input to the next, via</p>

<pre><code>run(cmd, [stdout=etc...], input=other_output)
</code></pre>

<p>Or</p>

<pre><code>Popen(cmd, [stdout=etc...]).communicate(other_output)
</code></pre>

<p>The temptation to directly connect pipes is strong; resist it. Otherwise, you'll likely see deadlocks or have to do hacky things like <a href=""https://stackoverflow.com/questions/6341451/piping-together-several-subprocesses"">this</a>.</p>

<p><strong>2. Unicode considerations</strong></p>

<p><code>check_output</code> returns a string in Python 2, but a <code>bytes</code> object in Python 3. It's worth taking a moment to <a href=""https://docs.python.org/3/howto/unicode.html"" rel=""noreferrer"">learn about unicode</a> if you haven't already.</p>
","4760517"
"Behaviour of increment and decrement operators in Python","567696","","<p>I notice that a pre-increment/decrement operator can be applied on a variable (like <code>++count</code>). It compiles, but it does not actually change the value of the variable!</p>

<p>What is the behavior of the pre-increment/decrement operators (++/--) in Python? </p>

<p>Why does Python deviate from the behavior of these operators seen in C/C++?</p>
","<p><code>++</code> is not an operator. It is two <code>+</code> operators. The <code>+</code> operator is the <strong>identity</strong> operator, which does nothing. (Clarification: the <code>+</code> and <code>-</code> unary operators only work on numbers, but I presume that you wouldn't expect a hypothetical <code>++</code> operator to work on strings.)</p>

<pre><code>++count
</code></pre>

<p>Parses as</p>

<pre><code>+(+count)
</code></pre>

<p>Which translates to</p>

<pre><code>count
</code></pre>

<p>You have to use the slightly longer <code>+=</code> operator to do what you want to do:</p>

<pre><code>count += 1
</code></pre>

<p>I suspect the <code>++</code> and <code>--</code> operators were left out for consistency and simplicity. I don't know the exact argument Guido van Rossum gave for the decision, but I can imagine a few arguments:</p>

<ul>
<li>Simpler parsing. Technically, parsing <code>++count</code> is ambiguous, as it could be <code>+</code>, <code>+</code>, <code>count</code> (two unary <code>+</code> operators) just as easily as it could be <code>++</code>, <code>count</code> (one unary <code>++</code> operator). It's not a significant syntactic ambiguity, but it does exist.</li>
<li>Simpler language. <code>++</code> is nothing more than a synonym for <code>+= 1</code>. It was a shorthand invented because C compilers were stupid and didn't know how to optimize <code>a += 1</code> into the <code>inc</code> instruction most computers have. In this day of optimizing compilers and bytecode interpreted languages, adding operators to a language to allow programmers to optimize their code is usually frowned upon, especially in a language like Python that is designed to be consistent and readable.</li>
<li>Confusing side-effects. One common newbie error in languages with <code>++</code> operators is mixing up the differences (both in precedence and in return value) between the pre- and post-incremend/decrement operators, and Python likes to eliminate language ""gotcha""-s. The precedence issues of pre-/post-increment in C are pretty hairy, and incredibly easy to mess up.</li>
</ul>
","1485854"
"Count occurrence of a character in a string","565591","","<p>What's the simplest way to count the number of occurrences of a character in a string?</p>

<p>e.g. count the number of times <code>'a'</code> appears in <code>'Mary had a little lamb'</code></p>
","<blockquote>
  <p><a href=""https://docs.python.org/2/library/stdtypes.html#str.count"" rel=""noreferrer"">str.count(sub[, start[, end]])</a></p>
  
  <p>Return the number of non-overlapping occurrences of substring <code>sub</code> in the range <code>[start, end]</code>. Optional arguments <code>start</code> and <code>end</code> are interpreted as in slice notation.</p>
</blockquote>

<pre><code>&gt;&gt;&gt; sentence = 'Mary had a little lamb'
&gt;&gt;&gt; sentence.count('a')
4
</code></pre>
","1155647"
"open() in Python does not create a file if it doesn't exist","564858","","<p>What is the best way to open a file as read/write if it exists, or if it does not, then create it and open it as read/write? From what I read, <code>file = open('myfile.dat', 'rw')</code> should do this, right?</p>

<p>It is not working for me (Python 2.6.2) and I'm wondering if it is a version problem, or not supposed to work like that or what.</p>

<p>The bottom line is, I just need a solution for the problem. I am curious about the other stuff, but all I need is a nice way to do the opening part.</p>

<p>UPDATE: the enclosing directory was writeable by user and group, not other (I'm on a Linux system... so permissions 775 in other words), and the exact error was:</p>

<blockquote>
  <p>IOError: no such file or directory.</p>
</blockquote>
","<p>You should use <code>file = open('myfile.dat', 'w+')</code></p>
","2967249"
"Putting a simple if-then statement on one line","562776","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/394809/python-ternary-operator"">Python Ternary Operator</a>  </p>
</blockquote>



<p>I'm just getting into Python and I really like the terseness of the syntax. However, is there an easier way of writing an <code>if</code>-<code>then</code> statement so it fits on one line?</p>

<p>For example:</p>

<pre><code>if count == N:
    count = 0
else:
    count = N + 1
</code></pre>

<p>Is there a simpler way of writing this? I mean, in Objective-C I would write this as:</p>

<pre><code>count = count == N ? 0 : count + 1;
</code></pre>

<p>Is there something similar for Python?</p>

<p><strong>Update</strong></p>

<p>I know that in this instance I can use <code>count == (count + 1) % N</code>. </p>

<p>I'm asking about the general syntax.</p>
","<p>That's more specifically a <a href=""https://en.wikipedia.org/wiki/%3F:#Python"" rel=""noreferrer"">ternary operator</a> expression than an if-then, here's the python syntax</p>

<pre><code>value_when_true if condition else value_when_false
</code></pre>

<p><strong>Better Example:</strong> (thanks <a href=""https://stackoverflow.com/users/253254/joshua-burns"">Mr. Burns</a>)</p>

<p><code>'Yes' if fruit == 'Apple' else 'No'</code> </p>

<p><strong>Now with assignment and contrast with if syntax</strong></p>

<pre><code>fruit = 'Apple'
isApple = True if fruit == 'Apple' else False
</code></pre>

<p><strong>vs</strong></p>

<pre><code>fruit = 'Apple'
isApple = False
if fruit == 'Apple' : isApple = True
</code></pre>
","2802748"
"Which version of Python do I have installed?","560694","","<p>I have to run a Python script on a Windows server. How can I know which version of Python I have, and does it even really matter? I was thinking of updating to latest version of Python.</p>
","<pre><code>python -V
</code></pre>

<p><a href=""http://docs.python.org/using/cmdline.html#generic-options"">http://docs.python.org/using/cmdline.html#generic-options</a></p>

<p><code>--version</code> may also work (introduced in version 2.5)</p>
","8917907"
"How do I check if a variable exists?","553768","","<p>I want to check if a variable exists. Now I'm doing something like this:</p>

<pre><code>try:
   myVar
except NameError:
   # Do something.
</code></pre>

<p>Are there other ways without exceptions?</p>
","<p>To check the existence of a local variable:</p>

<pre><code>if 'myVar' in locals():
  # myVar exists.
</code></pre>

<p>To check the existence of a global variable:</p>

<pre><code>if 'myVar' in globals():
  # myVar exists.
</code></pre>

<p>To check if an object has an attribute:</p>

<pre><code>if hasattr(obj, 'attr_name'):
  # obj.attr_name exists.
</code></pre>
","843293"
"What are metaclasses in Python?","553715","","<p>What are metaclasses and what do we use them for?</p>
","<p>A metaclass is the class of a class. Like a class defines how an instance of the class behaves, a metaclass defines how a class behaves. A class is an instance of a metaclass.</p>

<p><a href=""https://i.stack.imgur.com/QQ0OK.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/QQ0OK.png"" alt=""metaclass diagram""></a></p>

<p>While in Python you can use arbitrary callables for metaclasses (like <a href=""https://stackoverflow.com/questions/100003/what-is-a-metaclass-in-python/100037#100037"">Jerub</a> shows), the more useful approach is actually to make it an actual class itself. <code>type</code> is the usual metaclass in Python. In case you're wondering, yes, <code>type</code> is itself a class, and it is its own type. You won't be able to recreate something like <code>type</code> purely in Python, but Python cheats a little. To create your own metaclass in Python you really just want to subclass <code>type</code>.</p>

<p>A metaclass is most commonly used as a class-factory. Like you create an instance of the class by calling the class, Python creates a new class (when it executes the 'class' statement) by calling the metaclass. Combined with the normal <code>__init__</code> and <code>__new__</code> methods, metaclasses therefore allow you to do 'extra things' when creating a class, like registering the new class with some registry, or even replace the class with something else entirely.</p>

<p>When the <code>class</code> statement is executed, Python first executes the body of the <code>class</code> statement as a normal block of code. The resulting namespace (a dict) holds the attributes of the class-to-be. The metaclass is determined by looking at the baseclasses of the class-to-be (metaclasses are inherited), at the <code>__metaclass__</code> attribute of the class-to-be (if any) or the <code>__metaclass__</code> global variable. The metaclass is then called with the name, bases and attributes of the class to instantiate it.</p>

<p>However, metaclasses actually define the <em>type</em> of a class, not just a factory for it, so you can do much more with them. You can, for instance, define normal methods on the metaclass. These metaclass-methods are like classmethods, in that they can be called on the class without an instance, but they are also not like classmethods in that they cannot be called on an instance of the class. <code>type.__subclasses__()</code> is an example of a method on the <code>type</code> metaclass. You can also define the normal 'magic' methods, like <code>__add__</code>, <code>__iter__</code> and <code>__getattr__</code>, to implement or change how the class behaves.</p>

<p>Here's an aggregated example of the bits and pieces:</p>

<pre><code>def make_hook(f):
    """"""Decorator to turn 'foo' method into '__foo__'""""""
    f.is_hook = 1
    return f

class MyType(type):
    def __new__(cls, name, bases, attrs):

        if name.startswith('None'):
            return None

        # Go over attributes and see if they should be renamed.
        newattrs = {}
        for attrname, attrvalue in attrs.iteritems():
            if getattr(attrvalue, 'is_hook', 0):
                newattrs['__%s__' % attrname] = attrvalue
            else:
                newattrs[attrname] = attrvalue

        return super(MyType, cls).__new__(cls, name, bases, newattrs)

    def __init__(self, name, bases, attrs):
        super(MyType, self).__init__(name, bases, attrs)

        # classregistry.register(self, self.interfaces)
        print ""Would register class %s now."" % self

    def __add__(self, other):
        class AutoClass(self, other):
            pass
        return AutoClass
        # Alternatively, to autogenerate the classname as well as the class:
        # return type(self.__name__ + other.__name__, (self, other), {})

    def unregister(self):
        # classregistry.unregister(self)
        print ""Would unregister class %s now."" % self

class MyObject:
    __metaclass__ = MyType


class NoneSample(MyObject):
    pass

# Will print ""NoneType None""
print type(NoneSample), repr(NoneSample)

class Example(MyObject):
    def __init__(self, value):
        self.value = value
    @make_hook
    def add(self, other):
        return self.__class__(self.value + other.value)

# Will unregister the class
Example.unregister()

inst = Example(10)
# Will fail with an AttributeError
#inst.unregister()

print inst + inst
class Sibling(MyObject):
    pass

ExampleSibling = Example + Sibling
# ExampleSibling is now a subclass of both Example and Sibling (with no
# content of its own) although it will believe it's called 'AutoClass'
print ExampleSibling
print ExampleSibling.__mro__
</code></pre>
","100146"
"How to iterate over rows in a DataFrame in Pandas?","552971","","<p>I have a DataFrames from pandas:</p>

<pre><code>import pandas as pd
inp = [{'c1':10, 'c2':100}, {'c1':11,'c2':110}, {'c1':12,'c2':120}]
df = pd.DataFrame(inp)
print df
</code></pre>

<p>Output:</p>

<pre><code>   c1   c2
0  10  100
1  11  110
2  12  120
</code></pre>

<p>Now I want to iterate over the rows of the above frame. For every row I want to be able to access its elements (values in cells) by the name of the columns. So, for example, I would like to have something like that:</p>

<pre><code>for row in df.rows:
   print row['c1'], row['c2']
</code></pre>

<p>Is it possible to do that in pandas?</p>

<p>I found <a href=""https://stackoverflow.com/questions/7837722/what-is-the-most-efficient-way-to-loop-through-dataframes-with-pandas"">similar question</a>. But it does not give me the answer I need. For example, it is suggested there to use:</p>

<pre><code>for date, row in df.T.iteritems():
</code></pre>

<p>or</p>

<pre><code>for row in df.iterrows():
</code></pre>

<p>But I do not understand what the <code>row</code> object is and how I can work with it.</p>
","<p><a href=""http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.iterrows.html#pandas.DataFrame.iterrows"">iterrows</a> is a generator which yield both index and row</p>

<pre><code>In [18]: for index, row in df.iterrows():
   ....:     print row['c1'], row['c2']
   ....:     
10 100
11 110
12 120
</code></pre>
","16476974"
"Convert all strings in a list to int","543015","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/642154/how-to-convert-strings-into-integers-in-python"">How to convert strings into integers in python?</a><br>
  <a href=""https://stackoverflow.com/questions/6378889/how-to-convert-a-string-list-into-an-integer-in-python"">How to convert a string list into an integer in python</a>  </p>
</blockquote>



<p>In python, I want to convert all strings in a list to ints.</p>

<p>So if I have:</p>

<pre><code>results = ['1', '2', '3']
</code></pre>

<p>How do I make it:</p>

<pre><code>results = [1, 2, 3]
</code></pre>
","<p>Use the map function(in py2):</p>

<pre><code>results = map(int, results)
</code></pre>

<p>In py3:</p>

<pre><code>results = list(map(int, results))
</code></pre>
","7368801"
"Create an empty list in python with certain size","540992","","<p>I want to create an empty list (or whatever is the best way) that can hold 10 elements.</p>

<p>After that I want to assign values in that list, for example this is supposed to display 0 to 9:</p>

<pre><code>s1 = list();
for i in range(0,9):
   s1[i] = i

print  s1
</code></pre>

<p>But when I run this code, it generates an error or in another case it just displays <code>[]</code> (empty). </p>

<p>Can someone explain why?</p>
","<p>You cannot assign to a list like <code>lst[i] = something</code>. You need to use append. <code>lst.append(something)</code>.</p>

<p>(You could use the assignment notation if you were using a dictionary).</p>

<p>Creating an empty list:</p>

<pre><code>&gt;&gt;&gt; l = [None] * 10
&gt;&gt;&gt; l
[None, None, None, None, None, None, None, None, None, None]
</code></pre>

<p>range(x) creates a list from [0, 1, 2, ... x-1]</p>

<pre><code># 2.X only. Use list(range(10)) in 3.X.
&gt;&gt;&gt; l = range(10)
&gt;&gt;&gt; l
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
</code></pre>

<p>Using a function to create a list:</p>

<pre><code>&gt;&gt;&gt; def display():
...     s1 = []
...     for i in range(9): # This is just to tell you how to create a list.
...         s1.append(i)
...     return s1
... 
&gt;&gt;&gt; print display()
[0, 1, 2, 3, 4, 5, 6, 7, 8]
</code></pre>

<p>List comprehension (Using the squares because for range you don't need to do all this, you can just return <code>range(0,9)</code> ):</p>

<pre><code>&gt;&gt;&gt; def display():
...     return [x**2 for x in range(9)]
... 
&gt;&gt;&gt; print display()
[0, 1, 4, 9, 16, 25, 36, 49, 64]
</code></pre>
","10712044"
"How to get full path of current file's directory in Python?","538744","","<p>I want to get the current file's directory path.<br>
I tried: </p>

<pre><code>&gt;&gt;&gt; os.path.abspath(__file__)
'C:\\python27\\test.py'
</code></pre>

<p>But how can I retrieve the directory's path?
For example:</p>

<pre><code>'C:\\python27\\'
</code></pre>
","<p>If you mean the directory of the script being run:</p>

<pre><code>import os
os.path.dirname(os.path.abspath(__file__))
</code></pre>

<p>If you mean the current working directory:</p>

<pre><code>import os
os.getcwd()
</code></pre>

<p>Note that before and after <code>file</code> is two underscores, not just one. </p>
","3430395"
"Extracting extension from filename in Python","533541","","<p>Is there a function to extract the extension from a filename?</p>
","<p>Yes. Use <a href=""https://docs.python.org/2/library/os.path.html#os.path.splitext"" rel=""noreferrer"" title=""os.path.splitext""><code>os.path.splitext</code></a>:</p>

<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; filename, file_extension = os.path.splitext('/path/to/somefile.ext')
&gt;&gt;&gt; filename
'/path/to/somefile'
&gt;&gt;&gt; file_extension
'.ext'
</code></pre>
","541394"
"How do you split a list into evenly sized chunks?","531817","","<p>I have a list of arbitrary length, and I need to split it up into equal size chunks and operate on it. There are some obvious ways to do this, like keeping a counter and two lists, and when the second list fills up, add it to the first list and empty the second list for the next round of data, but this is potentially extremely expensive.</p>

<p>I was wondering if anyone had a good solution to this for lists of any length, e.g. using generators.</p>

<p>I was looking for something useful in <code>itertools</code> but I couldn't find anything obviously useful. Might've missed it, though.</p>

<p>Related question: <a href=""https://stackoverflow.com/questions/434287/what-is-the-most-pythonic-way-to-iterate-over-a-list-in-chunks"">What is the most “pythonic” way to iterate over a list in chunks?</a></p>
","<p>Here's a generator that yields the chunks you want:</p>

<pre><code>def chunks(l, n):
    """"""Yield successive n-sized chunks from l.""""""
    for i in range(0, len(l), n):
        yield l[i:i + n]
</code></pre>

<hr>

<pre><code>import pprint
pprint.pprint(list(chunks(range(10, 75), 10)))
[[10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
 [20, 21, 22, 23, 24, 25, 26, 27, 28, 29],
 [30, 31, 32, 33, 34, 35, 36, 37, 38, 39],
 [40, 41, 42, 43, 44, 45, 46, 47, 48, 49],
 [50, 51, 52, 53, 54, 55, 56, 57, 58, 59],
 [60, 61, 62, 63, 64, 65, 66, 67, 68, 69],
 [70, 71, 72, 73, 74]]
</code></pre>

<hr>

<p>If you're using Python 2, you should use <code>xrange()</code> instead of <code>range()</code>:</p>

<pre><code>def chunks(l, n):
    """"""Yield successive n-sized chunks from l.""""""
    for i in xrange(0, len(l), n):
        yield l[i:i + n]
</code></pre>

<hr>

<p>Also you can simply use list comprehension instead of writing a function. Python 3:</p>

<pre><code>[l[i:i + n] for i in range(0, len(l), n)]
</code></pre>

<p>Python 2 version:</p>

<pre><code>[l[i:i + n] for i in xrange(0, len(l), n)]
</code></pre>
","312464"
"Random string generation with upper case letters and digits in Python","524512","","<p>I want to generate a string of size N.</p>

<p>It should be made up of numbers and uppercase English letters such as:</p>

<ul>
<li>6U1S75</li>
<li>4Z4UKK</li>
<li>U911K4</li>
</ul>

<p>How can I achieve this in a <a href=""https://en.wikipedia.org/wiki/Python_%28programming_language%29#Features_and_philosophy"">pythonic</a> way?</p>
","<p><strong>Answer in one line:</strong></p>

<pre><code>''.join(random.choice(string.ascii_uppercase + string.digits) for _ in range(N))
</code></pre>

<p>or even shorter starting with Python 3.6 using <a href=""https://docs.python.org/3/library/random.html#random.choices"" rel=""noreferrer""><code>random.choices()</code></a>:</p>

<pre><code>''.join(random.choices(string.ascii_uppercase + string.digits, k=N))
</code></pre>

<p><strong>A cryptographically more secure version; see <a href=""https://stackoverflow.com/a/23728630/2213647"">https://stackoverflow.com/a/23728630/2213647</a>:</strong></p>

<pre><code>''.join(random.SystemRandom().choice(string.ascii_uppercase + string.digits) for _ in range(N))
</code></pre>

<p><strong>In details, with a clean function for further reuse:</strong></p>

<pre><code>&gt;&gt;&gt; import string
&gt;&gt;&gt; import random
&gt;&gt;&gt; def id_generator(size=6, chars=string.ascii_uppercase + string.digits):
...    return ''.join(random.choice(chars) for _ in range(size))
...
&gt;&gt;&gt; id_generator()
'G5G74W'
&gt;&gt;&gt; id_generator(3, ""6793YUIO"")
'Y3U'
</code></pre>

<p><strong>How does it work ?</strong></p>

<p>We import <code>string</code>, a module that contains sequences of common ASCII characters, and <code>random</code>, a module that deals with random generation.</p>

<p><code>string.ascii_uppercase + string.digits</code> just concatenates the list of characters representing uppercase ASCII chars and digits:</p>

<pre><code>&gt;&gt;&gt; string.ascii_uppercase
'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
&gt;&gt;&gt; string.digits
'0123456789'
&gt;&gt;&gt; string.ascii_uppercase + string.digits
'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
</code></pre>

<p>Then we use a list comprehension to create a list of 'n' elements:</p>

<pre><code>&gt;&gt;&gt; range(4) # range create a list of 'n' numbers
[0, 1, 2, 3]
&gt;&gt;&gt; ['elem' for _ in range(4)] # we use range to create 4 times 'elem'
['elem', 'elem', 'elem', 'elem']
</code></pre>

<p>In the example above, we use <code>[</code> to create the list, but we don't in the <code>id_generator</code> function so Python doesn't create the list in memory, but generates the elements on the fly, one by one (more about this <a href=""https://stackoverflow.com/questions/231767/the-python-yield-keyword-explained/231855#231855"">here</a>).</p>

<p>Instead of asking to create 'n' times the string <code>elem</code>, we will ask Python to create 'n' times a random character, picked from a sequence of characters:</p>

<pre><code>&gt;&gt;&gt; random.choice(""abcde"")
'a'
&gt;&gt;&gt; random.choice(""abcde"")
'd'
&gt;&gt;&gt; random.choice(""abcde"")
'b'
</code></pre>

<p>Therefore <code>random.choice(chars) for _ in range(size)</code> really is creating a sequence of <code>size</code> characters. Characters that are randomly picked from <code>chars</code>:</p>

<pre><code>&gt;&gt;&gt; [random.choice('abcde') for _ in range(3)]
['a', 'b', 'b']
&gt;&gt;&gt; [random.choice('abcde') for _ in range(3)]
['e', 'b', 'e']
&gt;&gt;&gt; [random.choice('abcde') for _ in range(3)]
['d', 'a', 'c']
</code></pre>

<p>Then we just join them with an empty string so the sequence becomes a string:</p>

<pre><code>&gt;&gt;&gt; ''.join(['a', 'b', 'b'])
'abb'
&gt;&gt;&gt; [random.choice('abcde') for _ in range(3)]
['d', 'c', 'b']
&gt;&gt;&gt; ''.join(random.choice('abcde') for _ in range(3))
'dac'
</code></pre>
","2257449"
"How can I get the concatenation of two lists in Python without modifying either one?","520584","","<p>In Python, the only way I can find to concatenate two lists is <code>list.extend</code>, which modifies the first list. Is there any concatenation function that returns its result without modifying its arguments?</p>
","<p>Yes: <code>list1+list2</code>. This gives a new list that is the concatenation of <code>list1</code> and <code>list2</code>.</p>
","4344029"
"Create a dictionary with list comprehension in Python","516647","","<p>I like the Python list comprehension syntax.</p>

<p>Can it be used to create dictionaries too? For example, by iterating over pairs of keys and values:</p>

<pre><code>mydict = {(k,v) for (k,v) in blah blah blah}  # doesn't work
</code></pre>
","<p>In Python 2.6 and earlier, the dict constructor can receive an iterable of key/value pairs:</p>

<pre><code>d = dict((key, value) for (key, value) in iterable)
</code></pre>

<p>From Python 2.7 and 3 onwards, you can just use the <a href=""http://www.python.org/dev/peps/pep-0274/"" rel=""noreferrer"">dict comprehension syntax</a> directly:</p>

<pre><code>d = {key: value for (key, value) in iterable}
</code></pre>

<p>Of course, you can use the iterable in any way you want (tuples and lists literals, generator comprehensions, list comprehensions, generator functions, functional composition... feel creative) as long as each element is an iterable itself of two elements:</p>

<pre><code>d = {value: foo(value) for value in sequence if bar(value)}

def key_value_gen(k):
   yield chr(k+65)
   yield chr((k+13)%26+65)
d = dict(map(key_value_gen, range(26)))
</code></pre>
","1747827"
"How to get the filename without the extension from a path in Python?","514992","","<p>How to get the filename without the extension from a path in Python?</p>

<p>I found out a method called <code>os.path.basename</code> to get the filename with extension. But even when I import os, I am not able to call it <code>path.basename</code>. Is it possible to call it as directly as basename?</p>
","<p>Getting the name of the file without the extension :</p>

<pre><code>import os
print(os.path.splitext(""path_to_file"")[0])
</code></pre>

<p>As for your import problem, you solve it this way :</p>

<pre><code>from os.path import basename

# now you can call it directly with basename
print(basename(""/a/b/c.txt""))
</code></pre>
","678242"
"Change data type of columns in Pandas","514339","","<p>I want to convert a table, represented as a list of lists, into a Pandas DataFrame. As an extremely simplified example:</p>

<pre><code>a = [['a', '1.2', '4.2'], ['b', '70', '0.03'], ['x', '5', '0']]
df = pd.DataFrame(a)
</code></pre>

<p>What is the best way to convert the columns to the appropriate types, in this case columns 2 and 3 into floats? Is there a way to specify the types while converting to DataFrame? Or is it better to create the DataFrame first and then loop through the columns to change the type for each column? Ideally I would like to do this in a dynamic way because there can be hundreds of columns and I don't want to specify exactly which columns are of which type. All I can guarantee is that each columns contains values of the same type.</p>
","<p>You can use <a href=""http://pandas.pydata.org/pandas-docs/stable/generated/pandas.to_numeric.html"" rel=""noreferrer""><code>pd.to_numeric</code></a> (introduced in version 0.17) to convert a column or a Series to a numeric type. The function can also be applied over multiple columns of a DataFrame using <code>apply</code>.</p>

<p>Importantly, the function also takes an <code>errors</code> key word argument that lets you force not-numeric values to be <code>NaN</code>, or simply ignore columns containing these values.</p>

<p>Example uses are shown below.</p>

<h3>Individual column / Series</h3>

<p>Here's an example using a Series of strings <code>s</code> which has the object dtype:</p>

<pre><code>&gt;&gt;&gt; s = pd.Series(['1', '2', '4.7', 'pandas', '10'])
&gt;&gt;&gt; s
0         1
1         2
2       4.7
3    pandas
4        10
dtype: object
</code></pre>

<p>The function's default behaviour is to raise if it can't convert a value. In this case, it can't cope with the string 'pandas':</p>

<pre><code>&gt;&gt;&gt; pd.to_numeric(s) # or pd.to_numeric(s, errors='raise')
ValueError: Unable to parse string
</code></pre>

<p>Rather than fail, we might want 'pandas' to be considered a missing/bad value. We can coerce invalid values to <code>NaN</code> as follows:</p>

<pre><code>&gt;&gt;&gt; pd.to_numeric(s, errors='coerce')
0     1.0
1     2.0
2     4.7
3     NaN
4    10.0
dtype: float64
</code></pre>

<p>The third option is just to ignore the operation if an invalid value is encountered:</p>

<pre><code>&gt;&gt;&gt; pd.to_numeric(s, errors='ignore')
# the original Series is returned untouched
</code></pre>

<h3>Multiple columns / entire DataFrames</h3>

<p>We might want to apply this operation to multiple columns. Processing each column in turn is tedious, so we can use <code>DataFrame.apply</code> to have the function act on each column.</p>

<p>Borrowing the DataFrame from the question:</p>

<pre><code>&gt;&gt;&gt; a = [['a', '1.2', '4.2'], ['b', '70', '0.03'], ['x', '5', '0']]
&gt;&gt;&gt; df = pd.DataFrame(a, columns=['col1','col2','col3'])
&gt;&gt;&gt; df
  col1 col2  col3
0    a  1.2   4.2
1    b   70  0.03
2    x    5     0
</code></pre>

<p>Then we can write:</p>

<pre><code>df[['col2','col3']] = df[['col2','col3']].apply(pd.to_numeric)
</code></pre>

<p>and now 'col2' and 'col3' have dtype <code>float64</code> as desired.</p>

<p>However, we might not know which of our columns can be converted reliably to a numeric type. In that case we can just write:</p>

<pre><code>df.apply(pd.to_numeric, errors='ignore')
</code></pre>

<p>Then the function will be applied to the <em>whole</em> DataFrame. Columns that can be converted to a numeric type will be converted, while columns that cannot (e.g. they contain non-digit strings or dates) will be left alone.</p>

<p>There is also <code>pd.to_datetime</code> and <code>pd.to_timedelta</code> for conversion to dates and timestamps.</p>

<h3>Soft conversions</h3>

<p>Version 0.21.0 introduces the method <code>infer_objects()</code> for converting columns of a DataFrame that have an object datatype to a more specific type.</p>

<p>For example, let's create a DataFrame with two columns of object type, with one holding integers and the other holding strings of integers:</p>

<pre><code>&gt;&gt;&gt; df = pd.DataFrame({'a': [7, 1, 5], 'b': ['3','2','1']}, dtype='object')
&gt;&gt;&gt; df.dtypes
a    object
b    object
dtype: object
</code></pre>

<p>Then using <code>infer_objects()</code>, we can change the type of column 'a' to int64:</p>

<pre><code>&gt;&gt;&gt; df = df.infer_objects()
&gt;&gt;&gt; df.dtypes
a     int64
b    object
dtype: object
</code></pre>

<p>Column 'b' has been left alone since its values were strings, not integers. If we wanted to try and force the conversion of both columns to an integer type, we could use <code>df.astype(int)</code> instead.</p>
","28648923"
"Getting the class name of an instance in Python","512694","","<p>How do I find out a name of class that created an instance of an object in Python if the function I am doing this from is the base class of which the class of the instance has been derived?</p>

<p>Was thinking maybe <a href=""https://docs.python.org/2/library/inspect.html"" rel=""noreferrer"" title=""inspect — Inspect live objects"">the inspect module</a> might have helped me out here, but it doesn't seem to give me what I want. And short of parsing the <code>__class__</code> member, I'm not sure how to get at this information.</p>
","<p>Have you tried the <code>__name__</code> attribute of the class? ie <code>type(x).__name__</code> will give you the name of the class, which I think is what you want.</p>

<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; x = itertools.count(0)
&gt;&gt;&gt; type(x).__name__
'count'
</code></pre>

<p>This method works with <a href=""https://wiki.python.org/moin/NewClassVsClassicClass"" rel=""noreferrer"">new-style classes</a> only. Your code might use some old-style classes. The following works for both:</p>

<pre><code>x.__class__.__name__
</code></pre>
","511059"
"How to print to stderr in Python?","511244","","<p>I've come across at least three ways to print to stderr:</p>

<pre><code> import sys

 print &gt;&gt; sys.stderr, 'spam'

 sys.stderr.write('spam\n')

 from __future__ import print_function
 print('spam', file=sys.stderr)
</code></pre>

<p>It seems to contradict <em>zen of Python #13</em> <sup>†</sup>, so what's the preferred way to do it? Are there any advantages or disadvantages to one way or the other?</p>

<p><sup>†</sup> <sub>There should be one — and preferably only one — obvious way to do it.</sub></p>
","<p>I found this to be the only one short + flexible + portable + readable:</p>

<pre><code>from __future__ import print_function
import sys

def eprint(*args, **kwargs):
    print(*args, file=sys.stderr, **kwargs)
</code></pre>

<p>The function <code>eprint</code> can be used in the same was as the standard <code>print</code> function:</p>

<pre><code>&gt;&gt;&gt; print(""Test"")
Test
&gt;&gt;&gt; eprint(""Test"")
Test
&gt;&gt;&gt; eprint(""foo"", ""bar"", ""baz"", sep=""---"")
foo---bar---baz
</code></pre>
","14981125"
"Directory listing in Python","510876","","<p>How do I get a list of all files (and directories) in a given directory in Python?</p>
","<p>This is a way to traverse every file and directory in a directory tree:</p>

<pre><code>import os

for dirname, dirnames, filenames in os.walk('.'):
    # print path to all subdirectories first.
    for subdirname in dirnames:
        print(os.path.join(dirname, subdirname))

    # print path to all filenames.
    for filename in filenames:
        print(os.path.join(dirname, filename))

    # Advanced usage:
    # editing the 'dirnames' list will stop os.walk() from recursing into there.
    if '.git' in dirnames:
        # don't go into any .git directories.
        dirnames.remove('.git')
</code></pre>
","120701"
"Shuffling a list of objects","510278","","<p>I have a list of objects in Python and I want to shuffle them. I thought I could use the <code>random.shuffle</code> method, but this seems to fail when the list is of objects. Is there a method for shuffling object or another way around this?</p>

<pre><code>import random

class a:
    foo = ""bar""

a1 = a()
a2 = a()
b = [a1,a2]

print random.shuffle(b)
</code></pre>

<p>This will fail.</p>
","<p><a href=""https://docs.python.org/library/random.html#random.shuffle"" rel=""noreferrer""><code>random.shuffle</code></a> should work.  Here's an example, where the objects are lists:</p>

<pre><code>from random import shuffle
x = [[i] for i in range(10)]
shuffle(x)

# print x  gives  [[9], [2], [7], [0], [4], [5], [3], [1], [8], [6]]
# of course your results will vary
</code></pre>

<p>Note that shuffle works <strong>in place</strong>, and returns None.</p>
","976918"
"Convert a list of characters into a string","509137","","<p>If I have a list of chars:</p>

<pre><code>a = ['a','b','c','d']
</code></pre>

<p>How do I convert it into a single string?</p>

<pre><code>a = 'abcd'
</code></pre>
","<p>Use the <code>join</code> method of the empty string to join all of the strings together with the empty string in between, like so:</p>

<pre><code>&gt;&gt;&gt; a = ['a', 'b', 'c', 'd']
&gt;&gt;&gt; ''.join(a)
'abcd'
</code></pre>
","4481731"
"What's the canonical way to check for type in Python?","508423","","<p>What is the best way to check whether a given object is of a given type? How about checking whether the object inherits from a given type?</p>

<p>Let's say I have an object <code>o</code>. How do I check whether it's a <code>str</code>?</p>
","<p>To check if the type of <code>o</code> is exactly <code>str</code>:</p>

<pre><code>type(o) is str
</code></pre>

<p>To check if <code>o</code> is an instance of <code>str</code> or any subclass of <code>str</code> (this would be the ""canonical"" way):</p>

<pre><code>isinstance(o, str)
</code></pre>

<p>The following also works, and can be useful in some cases:</p>

<pre><code>issubclass(type(o), str)
type(o) in ([str] + str.__subclasses__())
</code></pre>

<p>See <a href=""http://docs.python.org/2/library/functions.html"" rel=""noreferrer"">Built-in Functions</a> in the Python Library Reference for relevant information.</p>

<p>One more note: in this case, you may actually want to use:</p>

<pre><code>isinstance(o, basestring)
</code></pre>

<p>because this will also catch Unicode strings (<code>unicode</code> is not a subclass of <code>str</code>; both <code>str</code> and <code>unicode</code> are subclasses of <code>basestring</code>).</p>

<p>Alternatively, <code>isinstance</code> accepts a tuple of classes. This will return True if x is an instance of any subclass of any of (str, unicode):</p>

<pre><code>isinstance(o, (str, unicode))
</code></pre>
","152596"
"Pythonic way to create a long multi-line string","506148","","<p>I have a very long query. I would like to split it in several lines in Python. A way to do it in JavaScript would be using several sentences and joining them with a <code>+</code> operator (I know, maybe it's not the most efficient way to do it, but I'm not really concerned about performance in this stage, just code readability). Example:</p>

<pre><code>var long_string = 'some text not important. just garbage to' +
                  'illustrate my example';
</code></pre>

<p>I tried doing something similar in Python, but it didn't work, so I used <code>\</code> to split the long string. However, I'm not sure if this is the only/best/pythonicest way of doing it. It looks awkward. 
Actual code:</p>

<pre><code>query = 'SELECT action.descr as ""action"", '\
    'role.id as role_id,'\
    'role.descr as role'\
    'FROM '\
    'public.role_action_def,'\
    'public.role,'\
    'public.record_def, '\
    'public.action'\
    'WHERE role.id = role_action_def.role_id AND'\
    'record_def.id = role_action_def.def_id AND'\
    'action.id = role_action_def.action_id AND'\
    'role_action_def.account_id = ' + account_id + ' AND'\
    'record_def.account_id=' + account_id + ' AND'\
    'def_id=' + def_id
</code></pre>
","<p>Are you talking about multi-line strings? Easy, use triple quotes to start and end them.</p>

<pre><code>s = """""" this is a very
        long string if I had the
        energy to type more and more ...""""""
</code></pre>

<p>You can use single quotes too (3 of them of course at start and end) and treat the resulting string <code>s</code> just like any other string.</p>

<p><strong>NOTE</strong>: Just as with any string, anything between the starting and ending quotes becomes part of the string, so this example has a leading blank (as pointed out by @root45). This string will also contain both blanks and newlines.</p>

<p>I.e.,:</p>

<pre><code>' this is a very\n        long string if I had the\n        energy to type more and more ...'
</code></pre>

<p>Finally, one can also construct long lines in Python like this:</p>

<pre><code> s = (""this is a very""
      ""long string too""
      ""for sure ...""
     )
</code></pre>

<p>which will <strong>not</strong> include any extra blanks or newlines (this is a deliberate example showing what the effect of skipping blanks will result in):</p>

<pre><code>'this is a verylong string toofor sure ...'
</code></pre>

<p>No commas required, simply place the strings to be joined together into a pair of parenthesis and be sure to account for any needed blanks and newlines.</p>
","10660443"
"How to pip install packages according to requirements.txt from a local directory?","505930","","<p>Here is the problem</p>

<p>I have a requirements.txt that looks like:</p>

<pre><code>BeautifulSoup==3.2.0
Django==1.3
Fabric==1.2.0
Jinja2==2.5.5
PyYAML==3.09
Pygments==1.4
SQLAlchemy==0.7.1
South==0.7.3
amqplib==0.6.1
anyjson==0.3
...
</code></pre>

<p>I have a local archive directory containing all the packages + others.</p>

<p>I have created a new virtualenv with</p>

<pre><code>bin/virtualenv testing
</code></pre>

<p>upon activating it, I tried to install the packages according to requirements.txt from the local archive directory.</p>

<pre><code>source bin/activate
pip install -r /path/to/requirements.txt -f file:///path/to/archive/
</code></pre>

<p>I got some output that seems to indicate that the installation is fine</p>

<pre><code>Downloading/unpacking Fabric==1.2.0 (from -r ../testing/requirements.txt (line 3))
  Running setup.py egg_info for package Fabric
    warning: no previously-included files matching '*' found under directory 'docs/_build'
    warning: no files found matching 'fabfile.py'
Downloading/unpacking South==0.7.3 (from -r ../testing/requirements.txt (line 8))
  Running setup.py egg_info for package South
....
</code></pre>

<p>But later check revealed none of the package is installed properly. I cannot import the package, and none is found in the site-packages directory of my virtualenv. So what went wrong?</p>
","<p>This works for me:</p>

<pre><code>$ pip install -r requirements.txt --no-index --find-links file:///tmp/packages
</code></pre>

<p><code>--no-index</code> - Ignore package index (only looking at <code>--find-links</code> URLs instead). </p>

<p><code>-f, --find-links &lt;URL&gt;</code> - If a URL or path to an html file, then parse for links to archives. 
If a local path or <code>file://</code> URL that's a directory, then look for archives in the directory listing.</p>
","10429168"
"How does % work in Python?","504070","","<p>What does the <code>%</code> in a calculation? I can't seem to work out what it does.</p>

<p>Does it work out a percent of the calculation for example: <code>3 + 2 + 1 - 5 + 4 % 2 - 1 / 4 + 6</code> is apparently equal to 7. How?</p>
","<blockquote>
  <p>The % (modulo) operator yields the remainder from the division of the first argument by the second. The numeric arguments are first converted to a common type. A zero right argument raises the ZeroDivisionError exception. The arguments may be floating point numbers, e.g., 3.14%0.7 equals 0.34 (since 3.14 equals 4*0.7 + 0.34.) The modulo operator always yields a result with the same sign as its second operand (or zero); the absolute value of the result is strictly smaller than the absolute value of the second operand [2].</p>
</blockquote>

<p>Taken from <a href=""http://docs.python.org/reference/expressions.html"" rel=""noreferrer"">http://docs.python.org/reference/expressions.html</a></p>

<p><strong>Example 1:</strong> 
<code>6%2</code> evaluates to <code>0</code> because there's no remainder if 6 is divided by 2 ( 3 times ).</p>

<p><strong>Example 2</strong>: <code>7%2</code> evaluates to <code>1</code> because there's a remainder of <code>1</code> when 7 is divided by 2 ( 3 times ).</p>

<p>So to summarise that, it returns the remainder of a division operation, or <code>0</code> if there is no remainder.  So <code>6%2</code> means find the remainder of 6 divided by 2. </p>
","4432235"
"How do I make python to wait for a pressed key","503123","","<p>I want my script to wait until the user presses any key.</p>

<p>How do I do that?</p>
","<p>In Python 3, no <code>raw_input()</code> exists. So, just use:</p>

<pre><code>input(""Press Enter to continue..."")
</code></pre>

<p>This only waits for a user to press enter though, so you might want to use <strong>msvcrt</strong> ((Windows/DOS only) The msvcrt module gives you access to a number of functions in the Microsoft Visual C/C++ Runtime Library (MSVCRT)):</p>

<pre><code>import msvcrt as m
def wait():
    m.getch()
</code></pre>

<p>This should wait for a key press.</p>
","1135035"
"How do I get the row count of a Pandas dataframe?","502985","","<p>I'm trying to get the number of rows of dataframe df with Pandas, and here is my code.</p>

<h3>Method 1:</h3>

<pre><code>total_rows = df.count
print total_rows +1
</code></pre>

<h3>Method 2:</h3>

<pre><code>total_rows = df['First_columnn_label'].count
print total_rows +1
</code></pre>

<p>Both the code snippets give me this error:</p>

<blockquote>
  <p>TypeError: unsupported operand type(s) for +: 'instancemethod' and 'int'</p>
</blockquote>

<p>What am I doing wrong?</p>

<p>According to <a href=""https://stackoverflow.com/a/15943975/4230591"">the answer</a> given by <a href=""https://stackoverflow.com/users/1199589/root"">@root</a> the best (the fastest) way to check df length is to call:</p>

<pre><code>len(df.index)
</code></pre>
","<p>You can use the <code>.shape</code> property or just <code>len(DataFrame.index)</code>. However, there are notable performance differences ( the <code>.shape</code> property is faster):</p>

<pre><code>In [1]: import numpy as np

In [2]: import pandas as pd

In [3]: df = pd.DataFrame(np.arange(9).reshape(3,3))

In [4]: df
Out[4]: 
   0  1  2
0  0  1  2
1  3  4  5
2  6  7  8

In [5]: df.shape
Out[5]: (3, 3)

In [6]: timeit df.shape
1000000 loops, best of 3: 1.17 us per loop

In [7]: timeit df[0].count()
10000 loops, best of 3: 56 us per loop

In [8]: len(df.index)
Out[8]: 3

In [9]: timeit len(df.index)
1000000 loops, best of 3: 381 ns per loop
</code></pre>

<hr>

<p>EDIT: As @Dan Allen noted in the comments <code>len(df.index)</code> and <code>df[0].count()</code> are not interchangeable as <code>count</code> excludes <code>NaN</code>s,</p>
","15943975"
"How do I use raw_input in Python 3","495763","","<pre><code>import sys
print (sys.platform)
print (2 ** 100)
raw_input( )
</code></pre>

<p>I am using Python 3.1 and can't get the raw_input to ""freeze"" the dos pop-up. The book I'm reading is for 2.5 and I'm using 3.1</p>

<p>What should I do to fix this?</p>
","<p><code>raw_input()</code> was renamed to <code>input()</code></p>

<p>From <a href=""http://docs.python.org/dev/py3k/whatsnew/3.0.html"" rel=""noreferrer"">http://docs.python.org/dev/py3k/whatsnew/3.0.html</a></p>
","954840"
"Extract file name from path, no matter what the os/path format","495352","","<p>Which Python library can I use to extract filenames from paths, no matter what the operating system or path format could be?</p>

<p>For example, I'd like all of these paths to return me <code>c</code>:</p>

<pre><code>a/b/c/
a/b/c
\a\b\c
\a\b\c\
a\b\c
a/b/../../a/b/c/
a/b/../../a/b/c
</code></pre>
","<p>Using <code>os.path.split</code> or <code>os.path.basename</code> as others suggest won't work in all cases: if you're running the script on Linux and attempt to process a classic windows-style path, it will fail.</p>

<p>Windows paths can use either backslash or forward slash as path separator. Therefore, the <code>ntpath</code> module (which is equivalent to os.path when running on windows) will work for all<sup>(1)</sup> paths on all platforms.</p>

<pre><code>import ntpath
ntpath.basename(""a/b/c"")
</code></pre>

<p>Of course, if the file ends with a slash, the basename will be empty, so make your own function to deal with it:</p>

<pre><code>def path_leaf(path):
    head, tail = ntpath.split(path)
    return tail or ntpath.basename(head)
</code></pre>

<p>Verification:</p>

<pre><code>&gt;&gt;&gt; paths = ['a/b/c/', 'a/b/c', '\\a\\b\\c', '\\a\\b\\c\\', 'a\\b\\c', 
...     'a/b/../../a/b/c/', 'a/b/../../a/b/c']
&gt;&gt;&gt; [path_leaf(path) for path in paths]
['c', 'c', 'c', 'c', 'c', 'c', 'c']
</code></pre>

<p><br></p>

<p><sup>(1) There's one caveat: Linux filenames <em>may contain backslashes</em>. So on linux, <code>r'a/b\c'</code> always refers to the file <code>b\c</code> in the <code>a</code> folder, while on Windows, it always refers to the <code>c</code> file in the <code>b</code> subfolder of the <code>a</code> folder. So when both forward and backward slashes are used in a path, you <em>need</em> to know the associated platform to be able to interpret it correctly. In practice it's usually safe to assume it's a windows path since backslashes are seldom used in Linux filenames, but keep this in mind when you code so you don't create accidental security holes.</sup></p>
","8384788"
"What is __init__.py for?","494755","","<p>What is <code>__init__.py</code> for in a Python source directory?</p>
","<p>It's a part of a package. <a href=""http://docs.python.org/tutorial/modules.html#packages"" rel=""noreferrer"">Here's the documentation.</a></p>

<blockquote>
  <p>The <code>__init__.py</code> files are required to make Python treat the directories as containing packages; this is done to prevent directories with a common name, such as <code>string</code>, from unintentionally hiding valid modules that occur later (deeper) on the module search path. In the simplest case, <code>__init__.py</code> can just be an empty file, but it can also execute initialization code for the package or set the <code>__all__</code> variable, described later.</p>
</blockquote>
","448279"
"Why use def main()?","494238","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/419163/what-does-if-name-main-do"">What does <code>if __name__== ""__main__""</code> do?</a>  </p>
</blockquote>



<p>I've seen some code samples and tutorials that use</p>

<pre><code>def main():
    # my code here

if __name__ == ""__main__"":
    main()
</code></pre>

<p>But why? Is there any reason not do define your functions at the top of the file, then just write code under it? ie</p>

<pre><code>def my_function()
    # my code here

def my_function_two()
    # my code here

# some code
# call function
# print(something)
</code></pre>

<p>I just wonder if there is any rhyme to the main?</p>
","<p>Without the main sentinel, the code would be executed even if the script were imported as a module.</p>
","4041253"
"What are the differences between type() and isinstance()?","493504","","<p>What are the differences between these two code fragments?
Using <code>type()</code>:</p>

<pre><code>import types

if type(a) is types.DictType:
    do_something()
if type(b) in types.StringTypes:
    do_something_else()
</code></pre>

<p>Using <code>isinstance()</code>:</p>

<pre><code>if isinstance(a, dict):
    do_something()
if isinstance(b, str) or isinstance(b, unicode):
    do_something_else()
</code></pre>
","<p>To summarize the contents of other (already good!) answers, <code>isinstance</code> caters for inheritance (an instance of a derived class <em>is an</em> instance of a base class, too), while checking for equality of <code>type</code> does not (it demands identity of types and rejects instances of subtypes, AKA subclasses).</p>

<p>Normally, in Python, you want your code to support inheritance, of course (since inheritance is so handy, it would be bad to stop code using yours from using it!), so <code>isinstance</code> is less bad than checking identity of <code>type</code>s because it seamlessly supports inheritance.</p>

<p>It's not that <code>isinstance</code> is <em>good</em>, mind you—it's just <em>less bad</em> than checking equality of types.  The normal, Pythonic, preferred solution is almost invariably ""duck typing"": try using the argument <em>as if</em> it was of a certain desired type, do it in a <code>try</code>/<code>except</code> statement catching all exceptions that could arise if the argument was not in fact of that type (or any other type nicely duck-mimicking it;-), and in the <code>except</code> clause, try something else (using the argument ""as if"" it was of some other type).</p>

<p><code>basestring</code> <strong>is</strong>, however, quite a special case—a builtin type that exists <strong>only</strong> to let you use <code>isinstance</code> (both <code>str</code> and <code>unicode</code> subclass <code>basestring</code>). Strings are sequences (you could loop over them, index them, slice them, ...), but you generally want to treat them as ""scalar"" types—it's somewhat incovenient (but a reasonably frequent use case) to treat all kinds of strings (and maybe other scalar types, i.e., ones you can't loop on) one way, all containers (lists, sets, dicts, ...) in another way, and <code>basestring</code> plus <code>isinstance</code> helps you do that—the overall structure of this idiom is something like:</p>

<pre><code>if isinstance(x, basestring)
  return treatasscalar(x)
try:
  return treatasiter(iter(x))
except TypeError:
  return treatasscalar(x)
</code></pre>

<p>You could say that <code>basestring</code> is an <em>Abstract Base Class</em> (""ABC"")—it offers no concrete functionality to subclasses, but rather exists as a ""marker"", mainly for use with <code>isinstance</code>. The concept is obviously a growing one in Python, since <a href=""http://www.python.org/dev/peps/pep-3119/"" rel=""noreferrer"">PEP 3119</a>, which introduces a generalization of it, was accepted and has been implemented starting with Python 2.6 and 3.0.</p>

<p>The PEP makes it clear that, while ABCs can often substitute for duck typing, there is generally no big pressure to do that (see <a href=""http://www.python.org/dev/peps/pep-3119/#abcs-vs-duck-typing"" rel=""noreferrer"">here</a>). ABCs as implemented in recent Python versions do however offer extra goodies: <code>isinstance</code> (and <code>issubclass</code>) can now mean more than just ""[an instance of] a derived class"" (in particular, any class can be ""registered"" with an ABC so that it will show as a subclass, and its instances as instances of the ABC); and ABCs can also offer extra convenience to actual subclasses in a very natural way via Template Method design pattern applications (see <a href=""http://en.wikipedia.org/wiki/Template_method_pattern"" rel=""noreferrer"">here</a> and <a href=""http://www.catonmat.net/blog/learning-python-design-patterns-through-video-lectures/"" rel=""noreferrer"">here</a> [[part II]] for more on the TM DP, in general and specifically in Python, independent of ABCs).</p>

<p>For the underlying mechanics of ABC support as offered in Python 2.6, see <a href=""http://docs.python.org/library/abc.html"" rel=""noreferrer"">here</a>; for their 3.1 version, very similar, see <a href=""http://docs.python.org/3.1/library/abc.html"" rel=""noreferrer"">here</a>.  In both versions, standard library module <a href=""http://docs.python.org/3.1/library/collections.html#module-collections"" rel=""noreferrer"">collections</a> (that's the 3.1 version—for the very similar 2.6 version, see <a href=""http://docs.python.org/library/collections.html#module-collections"" rel=""noreferrer"">here</a>) offers several useful ABCs.</p>

<p>For the purpose of this answer, the key thing to retain about ABCs (beyond an arguably more natural placement for TM DP functionality, compared to the classic Python alternative of mixin classes such as <a href=""http://docs.python.org/library/userdict.html?highlight=userdict#UserDict.DictMixin"" rel=""noreferrer"">UserDict.DictMixin</a>) is that they make <code>isinstance</code> (and <code>issubclass</code>) much more attractive and pervasive (in Python 2.6 and going forward) than they used to be (in 2.5 and before), and therefore, by contrast, make checking type equality an even worse practice in recent Python versions than it already used to be.</p>
","1549854"
"How to know if an object has an attribute in Python","492482","","<p>Is there a way in Python to determine if an object has some attribute?  For example:</p>

<pre><code>&gt;&gt;&gt; a = SomeClass()
&gt;&gt;&gt; a.someProperty = value
&gt;&gt;&gt; a.property
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
AttributeError: SomeClass instance has no attribute 'property'
</code></pre>

<p>How can you tell if <code>a</code> has the attribute <code>property</code> before using it?</p>
","<p>Try <code>hasattr()</code>:</p>

<pre><code>if hasattr(a, 'property'):
    a.property
</code></pre>

<p>EDIT: See <a href=""https://stackoverflow.com/a/610923/117030"">zweiterlinde's answer</a> below, who offers good advice about asking forgiveness! A very pythonic approach! </p>

<p>The general practice in python is that, if the property is likely to be there most of the time, simply call it and either let the exception propagate, or trap it with a try/except block. This will likely be faster than <code>hasattr</code>. If the property is likely to not be there most of the time, or you're not sure, using <code>hasattr</code> will probably be faster than repeatedly falling into an exception block.</p>
","610893"
"How can I check for NaN in Python?","491020","","<p><code>float('nan')</code> results in Nan (not a number). But how do I check for it? Should be very easy, but I cannot find it.</p>
","<p><a href=""http://docs.python.org/library/math.html#math.isnan"" rel=""noreferrer"">math.isnan()</a></p>

<blockquote>
  <p>Checks if the float x is a NaN (not a number). NaNs are part of the IEEE 754 standards. Operation like but not limited to inf * 0, inf / inf or any operation involving a NaN, e.g. nan * 1, return a NaN.</p>
  
  <p><em>New in version 2.6.</em></p>
</blockquote>

<pre><code>&gt;&gt;&gt; import math
&gt;&gt;&gt; x=float('nan')
&gt;&gt;&gt; math.isnan(x)
True
&gt;&gt;&gt; 
</code></pre>
","944733"
"How to get line count cheaply in Python?","490838","","<p>I need to get a line count of a large file (hundreds of thousands of lines) in python. What is the most efficient way both memory- and time-wise?</p>

<p>At the moment I do:</p>

<pre><code>def file_len(fname):
    with open(fname) as f:
        for i, l in enumerate(f):
            pass
    return i + 1
</code></pre>

<p>is it possible to do any better?</p>
","<p>You can't get any better than that.</p>

<p>After all, any solution will have to read the entire file, figure out how many <code>\n</code> you have, and return that result.</p>

<p>Do you have a better way of doing that without reading the entire file? Not sure... The best solution will always be I/O-bound, best you can do is make sure you don't use unnecessary memory, but it looks like you have that covered.</p>
","845081"
"How do I execute a program from Python? os.system fails due to spaces in path","489750","","<p>I have a Python script that needs to execute an external program, but for some reason fails.</p>

<p>If I have the following script:</p>

<pre><code>import os;
os.system(""C:\\Temp\\a b c\\Notepad.exe"");
raw_input();
</code></pre>

<p>Then it fails with the following error:</p>

<blockquote>
  <p>'C:\Temp\a' is not recognized as an internal or external command, operable program or batch file.</p>
</blockquote>

<p>If I escape the program with quotes:</p>

<pre><code>import os;
os.system('""C:\\Temp\\a b c\\Notepad.exe""');
raw_input();
</code></pre>

<p>Then it works. However, if I add a parameter, it stops working again:</p>

<pre><code>import os;
os.system('""C:\\Temp\\a b c\\Notepad.exe"" ""C:\\test.txt""');
raw_input();
</code></pre>

<p>What is the right way to execute a program and wait for it to complete? I do not need to read output from it, as it is a visual program that does a job and then just exits, but I need to wait for it to complete.</p>

<p>Also note, moving the program to a non-spaced path is not an option either.</p>

<hr>

<p>This does not work either:</p>

<pre><code>import os;
os.system(""'C:\\Temp\\a b c\\Notepad.exe'"");
raw_input();
</code></pre>

<p>Note the swapped single/double quotes.</p>

<p>With or without a parameter to Notepad here, it fails with the error message</p>

<blockquote>
  <p>The filename, directory name, or volume label syntax is incorrect.</p>
</blockquote>
","<p><a href=""http://docs.python.org/2/library/subprocess.html#using-the-subprocess-module"" rel=""noreferrer""><code>subprocess.call</code></a> will avoid problems with having to deal with quoting conventions of various shells. It accepts a list, rather than a string, so arguments are more easily delimited. i.e.</p>

<pre><code>import subprocess
subprocess.call(['C:\\Temp\\a b c\\Notepad.exe', 'C:\\test.txt'])
</code></pre>
","204049"
"Concatenate item in list to strings","489292","","<p>Is there a simpler way to concatenate string items in list into a single string?</p>

<p>Can I use the <code>str.join()</code> function to join items in list?</p>

<p>E.g. this is the input <code>['this','is','a','sentence']</code> and this is the desired output <code>this-is-a-sentence</code></p>

<pre><code>sentence = ['this','is','a','sentence']
sent_str = """"
for i in sentence:
    sent_str += str(i) + ""-""
sent_str = sent_str[:-1]
print sent_str
</code></pre>
","<p>Use <a href=""http://docs.python.org/library/stdtypes.html#str.join""><code>join</code></a>:</p>

<pre><code>&gt;&gt;&gt; sentence = ['this','is','a','sentence']
&gt;&gt;&gt; '-'.join(sentence)
'this-is-a-sentence'
</code></pre>
","12453584"
"How do I get time of a Python program's execution?","489232","","<p>I have a command line program in Python that takes a while to finish. I want to know the exact time it takes to finish running.</p>

<p>I've looked at the <code>timeit</code> module, but it seems it's only for small snippets of code. I want to time the whole program.</p>
","<p>The simplest way in Python:</p>

<pre><code>import time
start_time = time.time()
main()
print(""--- %s seconds ---"" % (time.time() - start_time))
</code></pre>

<p>This assumes that your program takes at least a tenth of second to run.</p>

<p>Prints:</p>

<pre><code>--- 0.764891862869 seconds ---
</code></pre>
","1557584"
"How to import a module given the full path?","488669","","<p>How can I load a Python module given its full path? Note that the file can be anywhere in the filesystem, as it is a configuration option.</p>
","<p>For Python 3.5+ use:</p>

<pre><code>import importlib.util
spec = importlib.util.spec_from_file_location(""module.name"", ""/path/to/file.py"")
foo = importlib.util.module_from_spec(spec)
spec.loader.exec_module(foo)
foo.MyClass()
</code></pre>

<p>For Python 3.3 and 3.4 use:</p>

<pre><code>from importlib.machinery import SourceFileLoader

foo = SourceFileLoader(""module.name"", ""/path/to/file.py"").load_module()
foo.MyClass()
</code></pre>

<p>(Although this has been deprecated in Python 3.4.)</p>

<p>Python 2 use:</p>

<pre><code>import imp

foo = imp.load_source('module.name', '/path/to/file.py')
foo.MyClass()
</code></pre>

<p>There are equivalent convenience functions for compiled Python files and DLLs.</p>

<p>See also. <a href=""http://bugs.python.org/issue21436"" rel=""noreferrer"">http://bugs.python.org/issue21436</a>.</p>
","67692"
"Reading binary file and looping over each byte","486753","","<p>In Python, how do I read in a binary file and loop over each byte of that file?</p>
","<pre><code>f = open(""myfile"", ""rb"")
try:
    byte = f.read(1)
    while byte != """":
        # Do stuff with byte.
        byte = f.read(1)
finally:
    f.close()
</code></pre>

<p>By suggestion of chrispy:</p>

<pre><code>with open(""myfile"", ""rb"") as f:
    byte = f.read(1)
    while byte != """":
        # Do stuff with byte.
        byte = f.read(1)
</code></pre>

<p>Note that the with statement is not available in versions of Python below 2.5. To use it in v 2.5 you'll need to import it:</p>

<pre><code>from __future__ import with_statement
</code></pre>

<p>In 2.6 this is not needed.</p>

<p>In Python 3, it's a bit different. We will no longer get raw characters from the stream in byte mode but byte objects, thus we need to alter the condition:</p>

<pre><code>with open(""myfile"", ""rb"") as f:
    byte = f.read(1)
    while byte != b"""":
        # Do stuff with byte.
        byte = f.read(1)
</code></pre>

<p>Or as benhoyt says, skip the not equal and take advantage of the fact that <code>b""""</code> evaluates to false. This makes the code compatible between 2.6 and 3.x without any changes. It would also save you from changing the condition if you go from byte mode to text or the reverse.</p>

<pre><code>with open(""myfile"", ""rb"") as f:
    byte = f.read(1)
    while byte:
        # Do stuff with byte.
        byte = f.read(1)
</code></pre>
","1035360"
"Find intersection of two nested lists?","486635","","<p>I know how to get an intersection of two flat lists:</p>

<pre><code>b1 = [1,2,3,4,5,9,11,15]
b2 = [4,5,6,7,8]
b3 = [val for val in b1 if val in b2]
</code></pre>

<p>or </p>

<pre><code>def intersect(a, b):
    return list(set(a) &amp; set(b))

print intersect(b1, b2)
</code></pre>

<p>But when I have to find intersection for nested lists then my problems starts:</p>

<pre><code>c1 = [1, 6, 7, 10, 13, 28, 32, 41, 58, 63]
c2 = [[13, 17, 18, 21, 32], [7, 11, 13, 14, 28], [1, 5, 6, 8, 15, 16]]
</code></pre>

<p>In the end I would like to receive:</p>

<pre><code>c3 = [[13,32],[7,13,28],[1,6]]
</code></pre>

<p>Can you guys give me a hand with this?</p>

<h3>Related</h3>

<ul>
<li><a href=""https://stackoverflow.com/questions/406121/flattening-a-shallow-list-in-python"">Flattening a shallow list in python</a></li>
</ul>
","<p><strong>If you want:</strong></p>

<pre><code>c1 = [1, 6, 7, 10, 13, 28, 32, 41, 58, 63]
c2 = [[13, 17, 18, 21, 32], [7, 11, 13, 14, 28], [1, 5, 6, 8, 15, 16]]
c3 = [[13, 32], [7, 13, 28], [1,6]]
</code></pre>

<p><strong>Then here is your solution for Python 2:</strong></p>

<pre><code>c3 = [filter(lambda x: x in c1, sublist) for sublist in c2]
</code></pre>

<p><strong>In Python 3 <code>filter</code> returns an iterable instead of <code>list</code>, so you need to wrap <code>filter</code> calls with <code>list()</code>:</strong></p>

<pre><code>c3 = [list(filter(lambda x: x in c1, sublist)) for sublist in c2]
</code></pre>

<p><strong>Explanation:</strong> </p>

<p>The filter part takes each sublist's item and checks to see if it is in the source list c1. 
The list comprehension is executed for each sublist in c2. </p>
","642895"
"What does ""SyntaxError: Missing parentheses in call to 'print'"" mean in Python?","482612","","<p>When I try to use a <code>print</code> statement in Python, it gives me this error:</p>

<pre><code>&gt;&gt;&gt; print ""Hello world!""
  File ""&lt;stdin&gt;"", line 1
    print ""Hello world!""
                       ^
SyntaxError: Missing parentheses in call to 'print'
</code></pre>

<p>What does that mean?</p>
","<p>This error message means that you are attempting to use Python 3 to follow an example or run a program that uses the Python 2 <code>print</code> statement:</p>

<p><s></p>

<pre><code>print ""Hello world""
</code></pre>

<p></s></p>

<p>The statement above does not work in Python 3. In Python 3 you need to add parentheses around the value to be printed:</p>

<pre><code>print(""Hello world"")
</code></pre>

<hr>

<p><em>“SyntaxError: Missing parentheses in call to 'print'”</em> is a new error message that was added in Python 3.4.2 primarily to help users that are trying to follow a Python 2 tutorial while running Python 3.</p>

<p>In Python 3, printing values changed from being a distinct statement to being an ordinary function call, so it now needs parentheses:</p>

<pre><code>&gt;&gt;&gt; print(""Hello world!"")
Hello world!
</code></pre>

<p>In earlier versions of Python 3, the interpreter just reports a generic syntax error, without providing any useful hints as to what might be going wrong:</p>

<pre><code>&gt;&gt;&gt; print ""Hello world!""
  File ""&lt;stdin&gt;"", line 1
    print ""Hello world!""
                       ^
SyntaxError: invalid syntax
</code></pre>

<p>As for <em>why</em> <code>print</code> became an ordinary function in Python 3, that didn't relate to the basic form of the statement, but rather to how you did more complicated things like printing multiple items to stderr with a trailing space rather than ending the line.</p>

<p>In Python 2:</p>

<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; print &gt;&gt; sys.stderr, 1, 2, 3,; print &gt;&gt; sys.stderr, 4, 5, 6
1 2 3 4 5 6
</code></pre>

<p>In Python 3:</p>

<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; print(1, 2, 3, file=sys.stderr, end="" ""); print(4, 5, 6, file=sys.stderr)
1 2 3 4 5 6
</code></pre>

<hr>

<p>Starting with the Python 3.6.3 release in September 2017, some error messages related to the Python 2.x print syntax have been updated to recommend their Python 3.x counterparts:</p>

<pre><code>&gt;&gt;&gt; print ""Hello!""
  File ""&lt;stdin&gt;"", line 1
    print ""Hello!""
                 ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(""Hello!"")?
</code></pre>

<p>Since the ""Missing parentheses in call to print"" case is a compile time syntax error and hence has access to the raw source code, it's able to include the full text on the rest of the line in the suggested replacement. However, it doesn't currently try to work out the appropriate quotes to place around that expression (that's not impossible, just sufficiently complicated that it hasn't been done).</p>

<p>The <code>TypeError</code> raised for the right shift operator has also been customised:</p>

<pre><code>&gt;&gt;&gt; print &gt;&gt; sys.stderr
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
TypeError: unsupported operand type(s) for &gt;&gt;: 'builtin_function_or_method' and '_io.TextIOWrapper'. Did you mean ""print(&lt;message&gt;, file=&lt;output_stream&gt;)""?
</code></pre>

<p>Since this error is raised when the code runs, rather than when it is compiled, it doesn't have access to the raw source code, and hence uses meta-variables (<code>&lt;message&gt;</code> and <code>&lt;output_stream&gt;</code>) in the suggested replacement expression instead of whatever the user actually typed. Unlike the syntax error case, it's straightforward to place quotes around the Python expression in the custom right shift error message.</p>
","25445440"
"Nicest way to pad zeroes to string","482566","","<p>What is the most pythonic way to pad a numeric string with zeroes to the left, i.e., so the numeric string has a specific length?</p>
","<p>Strings:</p>

<pre><code>&gt;&gt;&gt; n = '4'
&gt;&gt;&gt; print n.zfill(3)
004
</code></pre>

<p>And for numbers:</p>

<pre><code>&gt;&gt;&gt; n = 4
&gt;&gt;&gt; print '%03d' % n
004
&gt;&gt;&gt; print format(n, '03') # python &gt;= 2.6
004
&gt;&gt;&gt; print '{0:03d}'.format(n)  # python &gt;= 2.6
004
&gt;&gt;&gt; print '{foo:03d}'.format(foo=n)  # python &gt;= 2.6
004
&gt;&gt;&gt; print('{:03d}'.format(n))  # python &gt;= 2.7 + python3
004
&gt;&gt;&gt; print('{0:03d}'.format(n))  # python 3
004
&gt;&gt;&gt; print(f'{n:03}') # python &gt;= 3.6
004
</code></pre>

<p><a href=""https://docs.python.org/2/library/string.html#formatexamples"" rel=""noreferrer"">String formatting documentation</a>.</p>
","339013"
"How can I force division to be floating point? Division keeps rounding down to 0","478466","","<p>I have two integer values <code>a</code> and <code>b</code>, but I need their ratio in floating point.  I know that <code>a&lt;b</code> and I want to calculate <code>a/b</code>, so if I use integer division I'll always get 0 with a remainder of <code>a</code>.</p>

<p>How can I force <code>c</code> to be a floating point number in Python in the following?</p>

<pre><code>c = a / b
</code></pre>
","<pre><code>&gt;&gt;&gt; from __future__ import division
&gt;&gt;&gt; a = 4
&gt;&gt;&gt; b = 6
&gt;&gt;&gt; c = a / b
&gt;&gt;&gt; c
0.66666666666666663
</code></pre>
","1267892"
"Check if something is not in a list in Python","477852","","<p>I have a list of tuples in <a href=""http://en.wikipedia.org/wiki/Python_%28programming_language%29"" rel=""noreferrer"">Python</a>, and I have a conditional where I want to take the branch ONLY if the tuple is not in the list (if it is in the list, then I don't want to take the if branch)</p>

<pre><code>if curr_x -1 &gt; 0 and (curr_x-1 , curr_y) not in myList: 

    # Do Something
</code></pre>

<p>This is not really working for me though. What have I done wrong?</p>
","<p>The bug is probably somewhere else in your code, because it should work fine:</p>

<pre><code>&gt;&gt;&gt; 3 not in [2, 3, 4]
False
&gt;&gt;&gt; 3 not in [4, 5, 6]
True
</code></pre>

<p>Or with tuples:</p>

<pre><code>&gt;&gt;&gt; (2, 3) not in [(2, 3), (5, 6), (9, 1)]
False
&gt;&gt;&gt; (2, 3) not in [(2, 7), (7, 3), ""hi""]
True
</code></pre>
","10406143"
"How do I remove the first Item from a Python list?","473877","","<p>I have the list <code>[0, 1, 2, 3, 4]</code> I'd like to make it into <code>[1, 2, 3, 4]</code>. How do I go about this? </p>
","<p><a href=""http://docs.python.org/tutorial/datastructures.html"" rel=""noreferrer"">Python List</a></p>

<p><strong>list.pop(index)</strong></p>

<pre><code>&gt;&gt;&gt; l = ['a', 'b', 'c', 'd']
&gt;&gt;&gt; l.pop(0)
'a'
&gt;&gt;&gt; l
['b', 'c', 'd']
&gt;&gt;&gt; 
</code></pre>

<p><strong>del list[index]</strong></p>

<pre><code>&gt;&gt;&gt; l = ['a', 'b', 'c', 'd']
&gt;&gt;&gt; del l[0]
&gt;&gt;&gt; l
['b', 'c', 'd']
&gt;&gt;&gt; 
</code></pre>

<p>These both modify your original list.</p>

<p>Others have suggested using slicing:</p>

<ul>
<li>Copies the list</li>
<li>Can return a subset</li>
</ul>

<p>Also, if you are performing many pop(0), you should look at <a href=""http://docs.python.org/library/collections.html#collections.deque"" rel=""noreferrer"">collections.deque</a></p>

<pre><code>from collections import deque
&gt;&gt;&gt; l = deque(['a', 'b', 'c', 'd'])
&gt;&gt;&gt; l.popleft()
'a'
&gt;&gt;&gt; l
deque(['b', 'c', 'd'])
</code></pre>

<ul>
<li>Provides higher performance popping from left end of the list</li>
</ul>
","4426727"
"How do I run a Python program?","472109","","<p>So I'm starting like Python a bit, but I'm having trouble erm...running it. Lol</p>

<p>I'm using IDLE for now, but its no use whatsoever because you can only run a couple of lines at a time.</p>

<p>I'm also using Komodo Edit to create the actual .py files.</p>

<p>My question is, how can I run the .py files to test out the actual program? </p>

<p>I'm using Windows 7, and Komodo Edit 5 as my IDE. Pressing F5 in Komodo doesn't do anythin at all.</p>

<p><img src=""https://imgur.com/x8DJK.png"" alt=""alt text""></p>
","<p>I'm very glad you asked! I was just working on explaining this very thing <a href=""http://en.wikibooks.org/wiki/Choose_Your_Own_Pyventure"" rel=""noreferrer"">in our wikibook</a> (which is obviously incomplete).  We're working with Python novices, and had to help a few through exactly what you're asking!  </p>

<p><strong>Command-line Python in Windows:</strong> </p>

<ol>
<li><p>Save your python code file somewhere, using ""Save"" or ""Save as"" in your editor.  Lets call it 'first.py' in some folder, like ""pyscripts"" that you make on your Desktop.</p></li>
<li><p>Open a <strong>prompt</strong> (a Windows 'cmd' shell that is a text interface into the computer):   </p>

<p>start > run > ""cmd"" (in the little box).  OK.     </p></li>
<li><p>Navigate to where your python file is, using the commands 'cd' (change directory) and 'dir' (to show files in the directory, to verify your head).  For our example something like, </p>

<p>> cd C:\Documents and Settings\Gregg\Desktop\pyscripts</p></li>
<li><p>try:</p>

<p>> python first.py</p></li>
</ol>

<p>If you get this message:  </p>

<blockquote>
  <p>'python' is not recognized as an
  internal or external command, operable
  program or batch file.</p>
</blockquote>

<p>then <strong>python</strong> (the <em>interpreter</em> program that can translate Python into 'computer instructions') isn't on your path (see Putting Python in Your Path below).  Then try calling it like this (assuming Python2.6, installed in the usual location):</p>

<p>> C:\Python26\python.exe first.py</p>

<p>(Advanced users:  instead of first.py, you could write out first.py's full path of C:\Documents and Settings\Gregg\Desktop\pyscripts\first.py)</p>

<p><strong>Putting Python In Your Path</strong></p>

<p><em>Windows</em></p>

<p>In order to run programs, your operating system looks in various places,
and tries to match the name of the program / command you typed with some 
programs along the way.  </p>

<p>In windows:</p>

<p>control panel > system >  advanced > |Environmental Variables| > system variables -> Path</p>

<p>this needs to include:  C:\Python26; (or equivalent).  If you put it at the front,
it will be the first place looked.  You can also add it at the end, which is possibly saner.</p>

<p>Then restart your prompt, and try typing 'python'.  If it all worked, you should
get a "">>>"" prompt.</p>
","1527012"
"How to flush output of Python print?","471950","","<p>How do I force Python's print function to output to the screen?</p>

<p><sub>This is not a duplicate of <a href=""https://stackoverflow.com/questions/107705/python-output-buffering"">Disable output buffering</a> - the linked question is attempting unbuffered output, while this is more general. The top answers in that question are too powerful or involved for this one (they're not good answers for this), and this question can be found on Google by a relative newbie.</sub></p>
","<pre><code>import sys
sys.stdout.flush()
</code></pre>

<p>Print by default prints to <code>sys.stdout</code>.</p>

<p>References:</p>

<ul>
<li><a href=""http://docs.python.org/reference/simple_stmts.html#the-print-statement"" rel=""noreferrer"">http://docs.python.org/reference/simple_stmts.html#the-print-statement</a></li>
<li><a href=""http://docs.python.org/library/sys.html"" rel=""noreferrer"">http://docs.python.org/library/sys.html</a></li>
<li><a href=""http://docs.python.org/library/stdtypes.html#file-objects"" rel=""noreferrer"">http://docs.python.org/library/stdtypes.html#file-objects</a></li>
</ul>
","230774"
"Run a python script from another python script, passing in args","470612","","<p>I want to run a Python script from another Python script. I want to pass variables like I would using the command line.</p>

<p>For example, I would run my first script that would iterate through a list of values (0,1,2,3) and pass those to the 2nd script <code>script2.py 0</code> then  <code>script2.py 1</code>, etc.</p>

<p>I found SO <a href=""https://stackoverflow.com/questions/1186789/what-is-the-best-way-to-call-a-python-script-from-another-python-script"">1186789</a> which is a similar question but ars's answer calls a function, where as I want to run the whole script not just a function, and balpha's answer calls the script but with no args. I altered this to something like the below as a test: </p>

<pre><code>execfile(""script2.py 1"")
</code></pre>

<p>But it is not accepting variables properly.  When I print out the <code>sys.argv</code> in script2.py it is the original command call to first script ""['C:\script1.py'].</p>

<p>I don't really want to change the original script (i.e. script2.py in my example) since I don't own it.</p>

<p>I figure there must be a way to do this, I am just confused how you do it.  </p>
","<p>Try using <a href=""http://docs.python.org/library/os.html#os.system""><code>os.system</code></a>:</p>

<pre><code>os.system(""script2.py 1"")
</code></pre>

<p><code>execfile</code> is different because it is designed to run a sequence of Python statements in the <em>current</em> execution context. That's why <code>sys.argv</code> didn't change for you.</p>
","3781869"
"What is the difference between @staticmethod and @classmethod in Python?","463748","","<p>What is the difference between a function decorated with <a href=""http://docs.python.org/library/functions.html#staticmethod"" rel=""noreferrer""><code>@staticmethod</code></a> and one decorated with <a href=""http://docs.python.org/library/functions.html#classmethod"" rel=""noreferrer""><code>@classmethod</code></a>?</p>
","<p>Maybe a bit of example code will help: Notice the difference in the call signatures of <code>foo</code>, <code>class_foo</code> and <code>static_foo</code>:</p>

<pre><code>class A(object):
    def foo(self,x):
        print ""executing foo(%s,%s)""%(self,x)

    @classmethod
    def class_foo(cls,x):
        print ""executing class_foo(%s,%s)""%(cls,x)

    @staticmethod
    def static_foo(x):
        print ""executing static_foo(%s)""%x    

a=A()
</code></pre>

<p>Below is the usual way an object instance calls a method. The object instance, <code>a</code>, is implicitly passed as the first argument.</p>

<pre><code>a.foo(1)
# executing foo(&lt;__main__.A object at 0xb7dbef0c&gt;,1)
</code></pre>

<hr>

<p><strong>With classmethods</strong>, the class of the object instance is implicitly passed as the first argument instead of <code>self</code>.</p>

<pre><code>a.class_foo(1)
# executing class_foo(&lt;class '__main__.A'&gt;,1)
</code></pre>

<p>You can also call <code>class_foo</code> using the class. In fact, if you define something to be
a classmethod, it is probably because you intend to call it from the class rather than from a class instance. <code>A.foo(1)</code> would have raised a TypeError, but <code>A.class_foo(1)</code> works just fine:</p>

<pre><code>A.class_foo(1)
# executing class_foo(&lt;class '__main__.A'&gt;,1)
</code></pre>

<p>One use people have found for class methods is to create <a href=""https://stackoverflow.com/a/1950927/190597"">inheritable alternative constructors</a>.</p>

<hr>

<p><strong>With staticmethods</strong>, neither <code>self</code> (the object instance) nor  <code>cls</code> (the class) is implicitly passed as the first argument. They behave like plain functions except that you can call them from an instance or the class:</p>

<pre><code>a.static_foo(1)
# executing static_foo(1)

A.static_foo('hi')
# executing static_foo(hi)
</code></pre>

<p>Staticmethods are used to group functions which have some logical connection with a class to the class.</p>

<hr>

<p><code>foo</code> is just a function, but when you call <code>a.foo</code> you don't just get the function,
you get a ""partially applied"" version of the function with the object instance <code>a</code> bound as the first argument to the function. <code>foo</code> expects 2 arguments, while <code>a.foo</code> only expects 1 argument.</p>

<p><code>a</code> is bound to <code>foo</code>. That is what is meant by the term ""bound"" below:</p>

<pre><code>print(a.foo)
# &lt;bound method A.foo of &lt;__main__.A object at 0xb7d52f0c&gt;&gt;
</code></pre>

<p>With <code>a.class_foo</code>, <code>a</code> is not bound to <code>class_foo</code>, rather the class <code>A</code> is bound to <code>class_foo</code>.</p>

<pre><code>print(a.class_foo)
# &lt;bound method type.class_foo of &lt;class '__main__.A'&gt;&gt;
</code></pre>

<p>Here, with a staticmethod, even though it is a method, <code>a.static_foo</code> just returns
a good 'ole function with no arguments bound. <code>static_foo</code> expects 1 argument, and
<code>a.static_foo</code> expects 1 argument too.</p>

<pre><code>print(a.static_foo)
# &lt;function static_foo at 0xb7d479cc&gt;
</code></pre>

<p>And of course the same thing happens when you call <code>static_foo</code> with the class <code>A</code> instead.</p>

<pre><code>print(A.static_foo)
# &lt;function static_foo at 0xb7d479cc&gt;
</code></pre>
","1669524"
"How do I set the figure title and axes labels font size in Matplotlib?","461674","","<p>I am creating a figure in Matplotlib like this:</p>

<pre><code>from matplotlib import pyplot as plt

fig = plt.figure()
plt.plot(data)
fig.suptitle('test title')
plt.xlabel('xlabel')
plt.ylabel('ylabel')
fig.savefig('test.jpg')
</code></pre>

<p>I want to specify font sizes for the figure title and the axis labels. I need all three to be different font sizes, so setting a global font size (<code>mpl.rcParams['font.size']=x</code>) is not what I want. How do I set font sizes for the figure title and the axis labels individually?</p>
","<p>Functions dealing with text like <code>label</code>, <code>title</code>, etc. accept parameters same as <a href=""http://matplotlib.org/users/text_props.html"" rel=""noreferrer"">matplotlib.text.Text</a>. For the font size you can use <code>size/fontsize</code>:</p>

<pre><code>from matplotlib import pyplot as plt    

fig = plt.figure()
plt.plot(data)
fig.suptitle('test title', fontsize=20)
plt.xlabel('xlabel', fontsize=18)
plt.ylabel('ylabel', fontsize=16)
fig.savefig('test.jpg')
</code></pre>

<p>For globally setting <code>title</code> and <code>label</code> sizes, <a href=""http://matplotlib.org/users/customizing.html"" rel=""noreferrer""><code>mpl.rcParams</code></a> contains <code>axes.titlesize</code> and <code>axes.labelsize</code>. (From the page):</p>

<pre><code>axes.titlesize      : large   # fontsize of the axes title
axes.labelsize      : medium  # fontsize of the x any y labels
</code></pre>

<p>(As far as I can see, there is no way to set <code>x</code> and <code>y</code> label sizes separately.)</p>

<p>And I see that <code>axes.titlesize</code> does not affect <code>suptitle</code>. I guess, you need to set that manually.</p>
","12444777"
"How to exit from Python without traceback?","461529","","<p>I would like to know how to I exit from Python without having an traceback dump on the output. </p>

<p>I still want want to be able to return an error code but I do not want to display the traceback log.</p>

<p>I want to be able to exit using <code>exit(number)</code> without trace but in case of an Exception (not an exit) I want the trace.</p>
","<p>You are presumably encountering an exception and the program is exiting because of this (with a traceback).  The first thing to do therefore is to catch that exception, before exiting cleanly (maybe with a message, example given).</p>

<p>Try something like this in your <code>main</code> routine:</p>

<pre><code>import sys, traceback

def main():
    try:
        do main program stuff here
        ....
    except KeyboardInterrupt:
        print ""Shutdown requested...exiting""
    except Exception:
        traceback.print_exc(file=sys.stdout)
    sys.exit(0)

if __name__ == ""__main__"":
    main()
</code></pre>
","1188086"
"How can I compare two lists in python and return matches","458889","","<p>I want to take two lists and find the values that appear in both.</p>

<pre><code>a = [1, 2, 3, 4, 5]
b = [9, 8, 7, 6, 5]

returnMatches(a, b)
</code></pre>

<p>would return <code>[5]</code>, for instance.</p>
","<p>Not the most efficient one, but by far the most obvious way to do it is:</p>

<pre><code>&gt;&gt;&gt; a = [1, 2, 3, 4, 5]
&gt;&gt;&gt; b = [9, 8, 7, 6, 5]
&gt;&gt;&gt; set(a) &amp; set(b)
{5}
</code></pre>

<p>if order is significant you can do it with list comprehensions like this:</p>

<pre><code>&gt;&gt;&gt; [i for i, j in zip(a, b) if i == j]
[5]
</code></pre>

<p>(only works for equal-sized lists, which order-significance implies).</p>
","1388836"
"How do I find the location of my Python site-packages directory?","458581","","<p>How do I find the location of my site-packages directory?</p>
","<p>There are two types of site-packages directories, <em>global</em> and <em>per user</em>.</p>

<ol>
<li><p><strong>Global</strong> site-packages (""<a href=""https://stackoverflow.com/questions/9387928/whats-the-difference-between-dist-packages-and-site-packages"">dist-packages</a>"") directories are listed in <code>sys.path</code> when you run:</p>

<pre><code>python -m site
</code></pre>

<p>For a more concise list run <code>getsitepackages</code> from the <a href=""https://docs.python.org/3.5/library/site.html#site.getsitepackages"" rel=""noreferrer"">site module</a> in Python code:</p>

<pre><code>python -c ""import site; print(site.getsitepackages())""
</code></pre>

<p><em>Note:</em> With virtualenvs <a href=""https://github.com/pypa/virtualenv/issues/228"" rel=""noreferrer"">getsitepackages is not available</a>, <code>sys.path</code> from above will list the virtualenv's site-packages directory correctly, though.</p></li>
<li><p>The <strong>per user</strong> site-packages directory (<a href=""https://www.python.org/dev/peps/pep-0370/"" rel=""noreferrer"">PEP 370</a>) is where Python installs your local packages:</p>

<pre><code>python -m site --user-site
</code></pre>

<p>If this points to a non-existing directory check the exit status of Python and see <code>python -m site --help</code> for explanations.</p></li>
</ol>
","46071447"
"Rename multiple files in a directory in Python","458309","","<p>I'm trying to rename some files in a directory using Python.</p>

<p>Say I have a file called <code>CHEESE_CHEESE_TYPE.***</code> and want to remove <code>CHEESE_</code> so my resulting filename would be <code>CHEESE_TYPE</code></p>

<p>I'm trying to use the <code>os.path.split</code> but it's not working properly. I have also considered using string manipulations, but have not been successful with that either.</p>
","<p>Use <a href=""https://docs.python.org/3/library/os.html#os.rename"" rel=""noreferrer""><code>os.rename(src, dst)</code></a> to rename or move a file or a directory.</p>

<pre><code>$ ls
cheese_cheese_type.bar  cheese_cheese_type.foo
$ python
&gt;&gt;&gt; import os
&gt;&gt;&gt; for filename in os.listdir("".""):
...  if filename.startswith(""cheese_""):
...    os.rename(filename, filename[7:])
... 
&gt;&gt;&gt; 
$ ls
cheese_type.bar  cheese_type.foo
</code></pre>
","2759130"
"How to print a dictionary's key?","457675","","<p>I found a my question in SO already, but it was not answered directly. I would like to print a specific Python dictionary key:</p>

<pre><code>mydic = {}
mydic['key_name'] = 'value_name'
</code></pre>

<p>Now I can check if <code>mydic.has_key('key_name')</code>, but what I would like to do is print the name of the key <code>'key_name'</code>. Of course I could use <code>mydic.items()</code>, but I don't want <strong>all</strong> the keys listed, merely one specific key. For instance I'd expect something like this (in pseudo-code):</p>

<pre><code>print ""the key name is"", mydic['key_name'].name_the_key(), ""and its value is"", mydic['key_name']
</code></pre>

<p>Is there any <code>name_the_key()</code> method to print a key name?</p>

<hr>

<p><strong>Edit:</strong>
OK, thanks a lot guys for your reactions! :) I realise my question is not well formulated and trivial. I just got confused because i realised key_name and <code>mydic['key_name']</code> are two different things and i thought it would incorrect to print the <code>key_name</code> out of the dictionary context. But indeed i can simply use the 'key_name' to refer to the key! :)</p>
","<p>A dictionary has, by definition, an arbitrary number of keys. There is no ""the key"". You have the <code>keys()</code> method, which gives you a python <code>list</code> of all the keys, and you have the <code>iteritems()</code> method, which returns key-value pairs, so</p>

<pre><code>for key, value in mydic.iteritems() :
    print key, value
</code></pre>

<p>Python 3 version:</p>

<pre><code>for key, value in mydic.items() :
    print (key, value)
</code></pre>

<p>So you have a handle on the keys, but they only really mean sense if coupled to a value. I hope I have understood your question.</p>
","5905166"
"How do I create an empty array/matrix in NumPy?","456992","","<p>I can't figure out how to use an array or matrix in the way that I would normally use a list. I want to create an empty array (or matrix) and then add one column (or row) to it at a time.</p>

<p>At the moment the only way I can find to do this is like:</p>

<pre><code>mat = None
for col in columns:
    if mat is None:
        mat = col
    else:
        mat = hstack((mat, col))
</code></pre>

<p>Whereas if it were a list, I'd do something like this:</p>

<pre><code>list = []
for item in data:
    list.append(item)
</code></pre>

<p>Is there a way to use that kind of notation for <a href=""http://en.wikipedia.org/wiki/NumPy"" rel=""noreferrer"">NumPy</a> arrays or matrices?</p>
","<p>You have the wrong mental model for using NumPy efficiently. NumPy arrays are stored in contiguous blocks of memory. If you want to add rows or columns to an existing array, the entire array needs to be copied to a new block of memory, creating gaps for the new elements to be stored. This is very inefficient if done repeatedly to build an array.</p>

<p>In the case of adding rows, your best bet is to create an array that is as big as your data set will eventually be, and then add data to it row-by-row:</p>

<pre><code>&gt;&gt;&gt; import numpy
&gt;&gt;&gt; a = numpy.zeros(shape=(5,2))
&gt;&gt;&gt; a
array([[ 0.,  0.],
   [ 0.,  0.],
   [ 0.,  0.],
   [ 0.,  0.],
   [ 0.,  0.]])
&gt;&gt;&gt; a[0] = [1,2]
&gt;&gt;&gt; a[1] = [2,3]
&gt;&gt;&gt; a
array([[ 1.,  2.],
   [ 2.,  3.],
   [ 0.,  0.],
   [ 0.,  0.],
   [ 0.,  0.]])
</code></pre>
","569063"
"How to get file creation & modification date/times in Python?","455751","","<p>I have a script that needs to do some stuff based on file creation &amp; modification dates but has to run on Linux &amp; Windows.</p>

<p>What's the best <strong>cross-platform</strong> way to get file creation &amp; modification date/times in Python?</p>
","<p>Getting some sort of modification date in a cross-platform way is easy - just call <a href=""https://docs.python.org/library/os.path.html#os.path.getmtime"" rel=""noreferrer""><code>os.path.getmtime(<i>path</i>)</code></a> and you'll get the Unix timestamp of when the file at <code>path</code> was last modified.</p>

<p>Getting file <em>creation</em> dates, on the other hand, is fiddly and platform-dependent, differing even between the three big OSes:</p>

<ul>
<li>On <strong>Windows</strong>, a file's <code>ctime</code> (documented at <a href=""https://msdn.microsoft.com/en-us/library/14h5k7ff.aspx"" rel=""noreferrer"">https://msdn.microsoft.com/en-us/library/14h5k7ff.aspx</a>) stores its creation date. You can access this in Python through <a href=""https://docs.python.org/library/os.path.html#os.path.getctime"" rel=""noreferrer""><code>os.path.getctime()</code></a> or the <a href=""https://docs.python.org/3/library/os.html#os.stat_result.st_ctime"" rel=""noreferrer""><code>.st_ctime</code></a> attribute of the result of a call to <a href=""https://docs.python.org/3/library/os.html#os.stat"" rel=""noreferrer""><code>os.stat()</code></a>. This <em>won't</em> work on Unix, where the <code>ctime</code> <a href=""http://www.linux-faqs.info/general/difference-between-mtime-ctime-and-atime"" rel=""noreferrer"">is the last time that the file's attributes <em>or</em> content were changed</a>.</li>
<li>On <strong>Mac</strong>, as well as some other Unix-based OSes, you can use the <a href=""https://docs.python.org/3/library/os.html#os.stat_result.st_birthtime"" rel=""noreferrer""><code>.st_birthtime</code></a> attribute of the result of a call to <code>os.stat()</code>.</li>
<li><p>On <strong>Linux</strong>, this is currently impossible, at least without writing a C extension for Python. Although some file systems commonly used with Linux <a href=""https://unix.stackexchange.com/questions/7562/what-file-systems-on-linux-store-the-creation-time"">do store creation dates</a> (for example, <code>ext4</code> stores them in <code>st_crtime</code>) , the Linux kernel <a href=""https://unix.stackexchange.com/questions/91197/how-to-find-creation-date-of-file"">offers no way of accessing them</a>; in particular, the structs it returns from <code>stat()</code> calls in C, as of the latest kernel version, <a href=""https://github.com/torvalds/linux/blob/v4.8-rc6/include/linux/stat.h"" rel=""noreferrer"">don't contain any creation date fields</a>. You can also see that the identifier <code>st_crtime</code> doesn't currently feature anywhere in the <a href=""https://github.com/python/cpython/search?utf8=%E2%9C%93&amp;q=st_crtime"" rel=""noreferrer"">Python source</a>. At least if you're on <code>ext4</code>, the data <em>is</em> attached to the inodes in the file system, but there's no convenient way of accessing it.</p>

<p>The next-best thing on Linux is to access the file's <code>mtime</code>, through either <a href=""https://docs.python.org/library/os.path.html#os.path.getmtime"" rel=""noreferrer""><code>os.path.getmtime()</code></a> or the <a href=""https://docs.python.org/3/library/os.html#os.stat_result.st_ctime"" rel=""noreferrer""><code>.st_mtime</code></a> attribute of an <code>os.stat()</code> result. This will give you the last time the file's content was modified, which may be adequate for some use cases.</p></li>
</ul>

<p>Putting this all together, cross-platform code should look something like this...</p>

<pre><code>import os
import platform

def creation_date(path_to_file):
    """"""
    Try to get the date that a file was created, falling back to when it was
    last modified if that isn't possible.
    See http://stackoverflow.com/a/39501288/1709587 for explanation.
    """"""
    if platform.system() == 'Windows':
        return os.path.getctime(path_to_file)
    else:
        stat = os.stat(path_to_file)
        try:
            return stat.st_birthtime
        except AttributeError:
            # We're probably on Linux. No easy way to get creation dates here,
            # so we'll settle for when its content was last modified.
            return stat.st_mtime
</code></pre>
","39501288"
"Is there any way to kill a Thread in Python?","455496","","<p>Is it possible to terminate a running thread without setting/checking any flags/semaphores/etc.?</p>
","<p>It is generally a bad pattern to kill a thread abruptly, in Python and in any language. Think of the following cases:</p>

<ul>
<li>the thread is holding a critical resource that must be closed properly</li>
<li>the thread has created several other threads that must be killed as well.</li>
</ul>

<p>The nice way of handling this if you can afford it (if you are managing your own threads) is to have an exit_request flag that each threads checks on regular interval to see if it is time for it to exit.</p>

<p><strong>For example:</strong></p>

<pre><code>import threading

class StoppableThread(threading.Thread):
    """"""Thread class with a stop() method. The thread itself has to check
    regularly for the stopped() condition.""""""

    def __init__(self):
        super(StoppableThread, self).__init__()
        self._stop_event = threading.Event()

    def stop(self):
        self._stop_event.set()

    def stopped(self):
        return self._stop_event.is_set()
</code></pre>

<p>In this code, you should call stop() on the thread when you want it to exit, and wait for the thread to exit properly using join(). The thread should check the stop flag at regular intervals.</p>

<p>There are cases however when you really need to kill a thread. An example is when you are wrapping an external library that is busy for long calls and you want to interrupt it.</p>

<p>The following code allows (with some restrictions) to raise an Exception in a Python thread:</p>

<pre><code>def _async_raise(tid, exctype):
    '''Raises an exception in the threads with id tid'''
    if not inspect.isclass(exctype):
        raise TypeError(""Only types can be raised (not instances)"")
    res = ctypes.pythonapi.PyThreadState_SetAsyncExc(tid,
                                                  ctypes.py_object(exctype))
    if res == 0:
        raise ValueError(""invalid thread id"")
    elif res != 1:
        # ""if it returns a number greater than one, you're in trouble,
        # and you should call it again with exc=NULL to revert the effect""
        ctypes.pythonapi.PyThreadState_SetAsyncExc(tid, 0)
        raise SystemError(""PyThreadState_SetAsyncExc failed"")

class ThreadWithExc(threading.Thread):
    '''A thread class that supports raising exception in the thread from
       another thread.
    '''
    def _get_my_tid(self):
        """"""determines this (self's) thread id

        CAREFUL : this function is executed in the context of the caller
        thread, to get the identity of the thread represented by this
        instance.
        """"""
        if not self.isAlive():
            raise threading.ThreadError(""the thread is not active"")

        # do we have it cached?
        if hasattr(self, ""_thread_id""):
            return self._thread_id

        # no, look for it in the _active dict
        for tid, tobj in threading._active.items():
            if tobj is self:
                self._thread_id = tid
                return tid

        # TODO: in python 2.6, there's a simpler way to do : self.ident

        raise AssertionError(""could not determine the thread's id"")

    def raiseExc(self, exctype):
        """"""Raises the given exception type in the context of this thread.

        If the thread is busy in a system call (time.sleep(),
        socket.accept(), ...), the exception is simply ignored.

        If you are sure that your exception should terminate the thread,
        one way to ensure that it works is:

            t = ThreadWithExc( ... )
            ...
            t.raiseExc( SomeException )
            while t.isAlive():
                time.sleep( 0.1 )
                t.raiseExc( SomeException )

        If the exception is to be caught by the thread, you need a way to
        check that your thread has caught it.

        CAREFUL : this function is executed in the context of the
        caller thread, to raise an excpetion in the context of the
        thread represented by this instance.
        """"""
        _async_raise( self._get_my_tid(), exctype )
</code></pre>

<p>As noted in the documentation, this is not a magic bullet because if the thread is busy outside the Python interpreter, it will not catch the interruption.</p>

<p>A good usage pattern of this code is to have the thread catch a specific exception and perform the cleanup. That way, you can interrupt a task and still have proper cleanup.</p>
","325528"
"What is the quickest way to HTTP GET in Python?","453426","","<p>What is the quickest way to HTTP GET in Python if I know the content will be a string? I am searching the docs for a quick one-liner like:</p>

<pre><code>contents = url.get(""http://example.com/foo/bar"")
</code></pre>

<p>But all I can find using Google are <code>httplib</code> and <code>urllib</code> - and I am unable to find a shortcut in those libraries.</p>

<p>Does standard Python 2.5 have a shortcut in some form as above, or should I write a function <code>url_get</code>?</p>

<ol>
<li>I would prefer not to capture the output of shelling out to <code>wget</code> or <code>curl</code>.</li>
</ol>
","<p>Python 2.x:</p>

<pre><code>import urllib2
urllib2.urlopen(""http://example.com/foo/bar"").read()
</code></pre>

<p>Python 3.x:</p>

<pre><code>import urllib.request
urllib.request.urlopen(""http://example.com/foo/bar"").read()
</code></pre>

<p>Documentation for <a href=""https://docs.python.org/3.5/library/urllib.request.html"" rel=""noreferrer"">urllib.request</a> and <a href=""https://docs.python.org/3.3/tutorial/inputoutput.html#methods-of-file-objects"" rel=""noreferrer"">read</a>.</p>

<p>How is that?</p>
","645318"
"Python: Attribute Error - 'NoneType' object has no attribute 'something'","453405","","<p>I keep getting an error that says</p>

<pre><code>AttributeError: 'NoneType' object has no attribute 'something'
</code></pre>

<p>The code I have is too long to post here, but I was wondering if someone could give a gist of what general scenarios would be cause this 'AttributeError', and what <strong>'NoneType'</strong> is supposed to mean? (Usually you would receive the name of some object where the code went wrong, but since it gives me 'NoneType' I'm not sure how it's possible to narrow down what's going on, other than line #)</p>
","<p>NoneType means that instead of an instance of whatever Class or Object you think you're working with, you've actually got <code>None</code>.  That usually means that an assignment or function call up above failed or returned an unexpected result.</p>
","8949265"
"How do I remove packages installed with Python's easy_install?","452422","","<p>Python's <code>easy_install</code> makes installing new packages extremely convenient. However, as far as I can tell, it doesn't implement the other common features of a dependency manager - listing and removing installed packages.</p>

<p>What is the best way of finding out what's installed, and what is the preferred way of removing installed packages? Are there any files that need to be updated if I remove packages manually (e.g. by <code>rm /usr/local/lib/python2.6/dist-packages/my_installed_pkg.egg</code> or similar)?</p>
","<p><a href=""http://pypi.python.org/pypi/pip/"" rel=""noreferrer"">pip</a>, an alternative to setuptools/easy_install, provides an ""uninstall"" command. </p>

<p>Install pip according to the <a href=""http://pip.readthedocs.org/en/stable/installing/"" rel=""noreferrer"">installation instructions</a>:</p>

<pre><code>$ wget https://bootstrap.pypa.io/get-pip.py
$ python get-pip.py
</code></pre>

<p>Then you can use <code>pip uninstall</code> to remove packages installed with <code>easy_install</code></p>
","3297564"
"Reading JSON from a file?","451077","","<p>I am getting a bit of headache just because a simple looking, easy statement is throwing some errors in my face.</p>

<p>I have a json file called strings.json like this:</p>

<pre><code>""strings"": [{""-name"": ""city"", ""#text"": ""City""}, {""-name"": ""phone"", ""#text"": ""Phone""}, ...,
            {""-name"": ""address"", ""#text"": ""Address""}]
</code></pre>

<p>I want to read the json file, just that for now. I have these statements which I found out, but it's not working:</p>

<pre><code>import json
from pprint import pprint

with open('strings.json') as json_data:
    d = json.loads(json_data)
    json_data.close()
    pprint(d)
</code></pre>

<p>The error displayed on the console was this:</p>

<pre class=""lang-none prettyprint-override""><code>Traceback (most recent call last):
File ""/home/.../android/values/manipulate_json.py"", line 5, in &lt;module&gt;
d = json.loads(json_data)
File ""/usr/lib/python2.7/json/__init__.py"", line 326, in loads
return _default_decoder.decode(s)
File ""/usr/lib/python2.7/json/decoder.py"", line 366, in decode
obj, end = self.raw_decode(s, idx=_w(s, 0).end())
TypeError: expected string or buffer
[Finished in 0.1s with exit code 1]
</code></pre>

<p><strong>Edited</strong></p>

<p>Changed from <code>json.loads</code> to <code>json.load</code></p>

<p>and got this:</p>

<pre class=""lang-none prettyprint-override""><code>Traceback (most recent call last):
File ""/home/.../android/values/manipulate_json.py"", line 5, in &lt;module&gt;
d = json.load(json_data)
File ""/usr/lib/python2.7/json/__init__.py"", line 278, in load
**kw)
File ""/usr/lib/python2.7/json/__init__.py"", line 326, in loads
return _default_decoder.decode(s)
File ""/usr/lib/python2.7/json/decoder.py"", line 369, in decode
raise ValueError(errmsg(""Extra data"", s, end, len(s)))
ValueError: Extra data: line 829 column 1 - line 829 column 2 (char 18476 - 18477)
[Finished in 0.1s with exit code 1]
</code></pre>
","<p>The <a href=""http://docs.python.org/3/library/json.html#json.load"" rel=""noreferrer""><code>json.load()</code> method</a> (without ""s"" in ""load"") can read a file directly:</p>

<pre><code>import json

with open('strings.json') as json_data:
    d = json.load(json_data)
    print(d)
</code></pre>

<p>You were using the <a href=""http://docs.python.org/3/library/json.html#json.loads"" rel=""noreferrer""><code>json.loads()</code> method</a>, which is used for <em>string</em> arguments only. </p>

<p>Edit:
The new message is a totally different problem. In that case, there is some invalid json in that file. For that, I would recommend running the file through a <a href=""http://jsonlint.com/"" rel=""noreferrer"">json validator</a>.</p>

<p>There are also solutions for fixing json like for example <a href=""https://stackoverflow.com/questions/18514910/how-do-i-automatically-fix-an-invalid-json-string"">How do I automatically fix an invalid JSON string?</a>.</p>
","20199213"
"How do I sort a list of dictionaries by values of the dictionary in Python?","448678","","<p>I got a list of dictionaries and want that to be sorted by a value of that dictionary.</p>

<p>This</p>

<pre><code>[{'name':'Homer', 'age':39}, {'name':'Bart', 'age':10}]
</code></pre>

<p>sorted by name, should become</p>

<pre><code>[{'name':'Bart', 'age':10}, {'name':'Homer', 'age':39}]
</code></pre>
","<p>It may look cleaner using a key instead a cmp:</p>

<pre class=""lang-py prettyprint-override""><code>newlist = sorted(list_to_be_sorted, key=lambda k: k['name']) 
</code></pre>

<p>or as J.F.Sebastian and others suggested,</p>

<pre class=""lang-py prettyprint-override""><code>from operator import itemgetter
newlist = sorted(list_to_be_sorted, key=itemgetter('name')) 
</code></pre>

<p>For completeness (as pointed out in comments by fitzgeraldsteele), add <code>reverse=True</code> to sort descending</p>

<pre class=""lang-py prettyprint-override""><code>newlist = sorted(l, key=itemgetter('name'), reverse=True)
</code></pre>
","73050"
"Maximum and Minimum values for ints","446764","","<p>I am looking for minimum and maximum values for integers in python. For eg., in Java, we have <code>Integer.MIN_VALUE</code> and <code>Integer.MAX_VALUE</code>. Is there something like this in python?</p>
","<p>In Python 2, there's <code>sys.maxint</code>:</p>

<pre><code>&gt;&gt;&gt; sys.maxint
9223372036854775807
</code></pre>

<p>And you can calculate the minimum value with <code>-sys.maxint - 1</code> as shown <a href=""https://docs.python.org/2/library/sys.html#sys.maxint"" rel=""noreferrer"">here</a>. Of course Python just switches from plain to long integers once you exceed this value.</p>

<p>In Python 3 this value has no significance at all for integers. (However, a closely related value is still available as <code>sys.maxsize</code>, in case you're actually looking for the machine's <a href=""http://en.wikipedia.org/wiki/Word_(computer_architecture)#Table_of_word_sizes"" rel=""noreferrer"">word size</a>.)</p>
","7604981"
"How to make a Python script standalone executable to run without ANY dependency?","446084","","<p>I'm building a Python application and don't want to force my clients to install Python and modules. I also want to make my application closed-source.</p>

<p>So, is there a way to compile Python scripts to standalone executables?</p>
","<p>You can use <a href=""http://www.py2exe.org/"">py2exe</a> as already answered and use <a href=""http://cython.org/"">cython</a> to convert your key <code>.py</code> files in <code>.pyc</code>, C compiled files, like <code>.dll</code> in Windows and <code>.so</code> in linux, much harder to revert than common <code>.pyo</code> and <code>.pyc</code> files (and also gain in performance!)</p>
","5458807"
"Best way to convert string to bytes in Python 3?","445503","","<p>There appears to be two different ways to convert a string to bytes, as seen in the answers to <a href=""https://stackoverflow.com/questions/5471158/typeerror-str-does-not-support-the-buffer-interface"">TypeError: &#39;str&#39; does not support the buffer interface</a></p>

<p>Which of these methods would be better or more Pythonic? Or is it just a matter of personal preference?</p>

<pre><code>b = bytes(mystring, 'utf-8')

b = mystring.encode('utf-8')
</code></pre>
","<p>If you look at the docs for <code>bytes</code>, it points you to <a href=""https://docs.python.org/3/library/functions.html#func-bytearray"" rel=""noreferrer""><code>bytearray</code></a>:</p>

<blockquote>
  <p>bytearray([source[, encoding[, errors]]])</p>
  
  <p>Return a new array of bytes. The bytearray type is a mutable sequence of integers in the range 0 &lt;= x &lt; 256. It has most of the usual methods of mutable sequences, described in Mutable Sequence Types, as well as most methods that the bytes type has, see Bytes and Byte Array Methods.</p>
  
  <p>The optional source parameter can be used to initialize the array in a few different ways:</p>
  
  <p><strong>If it is a string, you must also give the encoding (and optionally, errors) parameters; bytearray() then converts the string to bytes using str.encode().</strong></p>
  
  <p><strong>If it is an integer, the array will have that size and will be initialized with null bytes.</strong></p>
  
  <p><strong>If it is an object conforming to the buffer interface, a read-only buffer of the object will be used to initialize the bytes array.</strong></p>
  
  <p><strong>If it is an iterable, it must be an iterable of integers in the range 0 &lt;= x &lt; 256, which are used as the initial contents of the array.</strong></p>
  
  <p><strong>Without an argument, an array of size 0 is created.</strong></p>
</blockquote>

<p>So <code>bytes</code> can do much more than just encode a string. It's Pythonic that it would allow you to call the constructor with any type of source parameter that makes sense. </p>

<p>For  encoding a string, I think that <code>some_string.encode(encoding)</code> is more Pythonic than using the constructor, because it is the most self documenting -- ""take this string and encode it with this encoding"" is clearer than <code>bytes(some_string, encoding)</code> -- there is no explicit verb when you use the constructor.</p>

<p><strong>Edit:</strong> I checked the Python source. If you pass a unicode string to <code>bytes</code> using CPython, it calls <a href=""http://hg.python.org/cpython/file/5a12416890c0/Objects/unicodeobject.c#l2328"" rel=""noreferrer"">PyUnicode_AsEncodedString</a>, which is the implementation of <code>encode</code>; so you're just skipping a level of indirection if you call <code>encode</code> yourself.</p>

<p>Also, see Serdalis' comment -- <code>unicode_string.encode(encoding)</code> is also more Pythonic because its inverse is <code>byte_string.decode(encoding)</code> and symmetry is nice.</p>
","7585619"
"How to move a file in Python","442824","","<p>I looked into the Python <a href=""http://docs.python.org/library/os.html""><code>os</code></a> interface, but was unable to locate a method to move a file. How would I do the equivalent of <code>$ mv ...</code> in Python?</p>

<pre><code>&gt;&gt;&gt; source_files = '/PATH/TO/FOLDER/*'
&gt;&gt;&gt; destination_folder = 'PATH/TO/FOLDER'
&gt;&gt;&gt; # equivalent of $ mv source_files destination_folder
</code></pre>
","<p><a href=""http://docs.python.org/library/os.html#os.rename"" rel=""noreferrer""><code>os.rename()</code></a> or <a href=""http://docs.python.org/library/shutil.html#shutil.move"" rel=""noreferrer""><code>shutil.move()</code></a></p>

<p>Both employ the same syntax:</p>

<pre><code>os.rename(""path/to/current/file.foo"", ""path/to/new/desination/for/file.foo"")
shutil.move(""path/to/current/file.foo"", ""path/to/new/destination/for/file.foo"")
</code></pre>

<p>Note that in both cases the directory in which the new file is being created must already exist, (but, on Windows, a file with that name must not or an exception will be raised). Note also, you must include the file name (<code>file.foo</code>) in both the source and destination arguments. If it is changed, the file will be renamed as well as moved.</p>

<p>As has been noted in comments on other answers, <code>shutil.move</code> simply calls <code>os.rename</code> in most cases. However, if the destination is on a different disk than the source, it will instead copy and then delete the source file.</p>
","8858026"
"Is there a way to run Python on Android?","442782","","<p>We are working on an <a href=""http://en.wikipedia.org/wiki/S60_%28software_platform%29"" rel=""noreferrer"">S60</a> version and this platform has a nice Python API. </p>

<p>However, there is nothing official about Python on Android, but since <a href=""http://en.wikipedia.org/wiki/Jython"" rel=""noreferrer"">Jython</a> exists, is there a way to let the snake and the robot work together?</p>
","<p>One way is to use <a href=""http://kivy.org/"" rel=""noreferrer"">Kivy</a>:</p>

<blockquote>
  <p>Open source Python library for rapid development of applications
  that make use of innovative user interfaces, such as multi-touch apps.</p>
</blockquote>

<p></p>

<blockquote>
  <p>Kivy runs on Linux, Windows, OS X, Android and iOS. You can run the same [python] code on all supported platforms.</p>
</blockquote>

<p><a href=""https://play.google.com/store/apps/details?id=org.kivy.showcase"" rel=""noreferrer"">Kivy Showcase app</a>  </p>
","8189603"
"Is there a built-in function to print all the current properties and values of an object?","442167","","<p>So what I'm looking for here is something like PHP's <a href=""http://us2.php.net/print_r"" rel=""noreferrer"">print_r</a> function. This is so I can debug my scripts by seeing what's the state of the object in question.</p>
","<p>You are really mixing together two different things.</p>

<p>Use <a href=""https://docs.python.org/3/library/functions.html#dir"" rel=""noreferrer""><code>dir()</code></a>, <a href=""https://docs.python.org/3/library/functions.html#vars"" rel=""noreferrer""><code>vars()</code></a> or the <a href=""https://docs.python.org/3/library/inspect.html"" rel=""noreferrer""><code>inspect</code></a> module to get what you are interested in (I use <code>__builtins__</code> as an example; you can use any object instead).</p>

<pre><code>&gt;&gt;&gt; l = dir(__builtins__)
&gt;&gt;&gt; d = __builtins__.__dict__
</code></pre>

<p>Print that dictionary however fancy you like:</p>

<pre><code>&gt;&gt;&gt; print l
['ArithmeticError', 'AssertionError', 'AttributeError',...
</code></pre>

<p>or</p>

<pre><code>&gt;&gt;&gt; from pprint import pprint
&gt;&gt;&gt; pprint(l)
['ArithmeticError',
 'AssertionError',
 'AttributeError',
 'BaseException',
 'DeprecationWarning',
...

&gt;&gt;&gt; pprint(d, indent=2)
{ 'ArithmeticError': &lt;type 'exceptions.ArithmeticError'&gt;,
  'AssertionError': &lt;type 'exceptions.AssertionError'&gt;,
  'AttributeError': &lt;type 'exceptions.AttributeError'&gt;,
...
  '_': [ 'ArithmeticError',
         'AssertionError',
         'AttributeError',
         'BaseException',
         'DeprecationWarning',
...
</code></pre>

<p>Pretty printing is also available in the interactive debugger as a command:</p>

<pre><code>(Pdb) pp vars()
{'__builtins__': {'ArithmeticError': &lt;type 'exceptions.ArithmeticError'&gt;,
                  'AssertionError': &lt;type 'exceptions.AssertionError'&gt;,
                  'AttributeError': &lt;type 'exceptions.AttributeError'&gt;,
                  'BaseException': &lt;type 'exceptions.BaseException'&gt;,
                  'BufferError': &lt;type 'exceptions.BufferError'&gt;,
                  ...
                  'zip': &lt;built-in function zip&gt;},
 '__file__': 'pass.py',
 '__name__': '__main__'}
</code></pre>
","192365"
"Calculating arithmetic mean (average) in Python","441711","","<p>Is there a built-in or standard library method in Python to calculate the arithmetic mean (average) of a list of numbers?</p>
","<p>I am not aware of anything in the standard library. However, you could use something like:</p>

<pre><code>def mean(numbers):
    return float(sum(numbers)) / max(len(numbers), 1)

&gt;&gt;&gt; mean([1,2,3,4])
2.5
&gt;&gt;&gt; mean([])
0.0
</code></pre>

<p>In numpy, there's <a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.mean.html""><code>numpy.mean()</code></a>.</p>
","7716358"
"How to read/process command line arguments?","436786","","<p>I am originally a C programmer. I have seen numerous tricks and ""hacks"" to read many different arguments. </p>

<p>What are some of the ways Python programmers can do this?</p>

<h3>Related</h3>

<ul>
<li><a href=""https://stackoverflow.com/questions/20063/whats-the-best-way-to-grab-parse-command-line-arguments-passed-to-a-python-scrip"">What’s the best way to grab/parse command line arguments passed to a Python script?</a></li>
<li><a href=""https://stackoverflow.com/questions/362426/implementing-a-command-action-parameter-style-command-line-interfaces"">Implementing a “[command] [action] [parameter]” style command-line interfaces?</a></li>
<li><a href=""https://stackoverflow.com/questions/567879/how-can-i-process-command-line-arguments-in-python"">How can I process command line arguments in Python?</a></li>
<li><a href=""https://stackoverflow.com/questions/642648/how-do-i-format-positional-argument-help-using-pythons-optparse"">How do I format positional argument help using Python’s optparse?</a></li>
</ul>
","<h2><em>Please</em> note that optparse was deprecated in version 2.7 of Python:</h2>

<p><a href=""http://docs.python.org/2/library/optparse.html"" rel=""noreferrer"">http://docs.python.org/2/library/optparse.html</a>.  <strong>argparse</strong> is the replacement: <a href=""http://docs.python.org/2/library/argparse.html#module-argparse"" rel=""noreferrer"">http://docs.python.org/2/library/argparse.html#module-argparse</a></p>

<hr>

<p>There are the following modules in the standard library:</p>

<ul>
<li>The <a href=""http://docs.python.org/library/getopt.html"" rel=""noreferrer"">getopt</a> module is similar to GNU getopt.</li>
<li>The <a href=""http://docs.python.org/library/optparse.html#module-optparse"" rel=""noreferrer"">optparse</a> module offers object-oriented command line option parsing. </li>
</ul>

<p>Here is an example that uses the latter from the docs:</p>

<pre><code>from optparse import OptionParser

parser = OptionParser()
parser.add_option(""-f"", ""--file"", dest=""filename"",
                  help=""write report to FILE"", metavar=""FILE"")
parser.add_option(""-q"", ""--quiet"",
                  action=""store_false"", dest=""verbose"", default=True,
                  help=""don't print status messages to stdout"")

(options, args) = parser.parse_args()
</code></pre>

<p>optparse supports (among other things):</p>

<ul>
<li>Multiple options in any order.</li>
<li>Short and long options.</li>
<li>Default values.</li>
<li>Generation of a usage help message.</li>
</ul>
","1009864"
"add one row in a pandas.DataFrame","435562","","<p>I understand that pandas is designed to load fully populated <code>DataFrame</code> but I need to <strong>create an empty DataFrame then add rows, one by one</strong>.
What is the best way to do this ?</p>

<p>I successfully created an empty DataFrame with :</p>

<pre><code>res = DataFrame(columns=('lib', 'qty1', 'qty2'))
</code></pre>

<p>Then I can add a new row and fill a field with :</p>

<pre><code>res = res.set_value(len(res), 'qty1', 10.0)
</code></pre>

<p>It works but seems very odd :-/ (it fails for adding string value)</p>

<p>How can I add a new row to my DataFrame (with different columns type) ?</p>
","<p>Example at @Nasser's answer:</p>

<pre><code>&gt;&gt;&gt; import pandas as pd
&gt;&gt;&gt; df = pd.DataFrame(columns=['lib', 'qty1', 'qty2'])
&gt;&gt;&gt; for i in range(5):
&gt;&gt;&gt;     df.loc[i] = [randint(-1,1) for n in range(3)]
&gt;&gt;&gt;
&gt;&gt;&gt; print(df)
    lib  qty1  qty2
0    0     0    -1
1   -1    -1     1
2    1    -1     1
3    0     0     0
4    1    -1    -1

[5 rows x 3 columns]
</code></pre>
","24888331"
"fatal error: Python.h: No such file or directory","435338","","<p>I am trying to build a shared library using a C extension file but first I have to generate the output file using the command below:</p>

<pre class=""lang-none prettyprint-override""><code>gcc -Wall utilsmodule.c -o Utilc
</code></pre>

<p>After executing the command, I get this error message:</p>

<blockquote>
  <p>utilsmodule.c:1:20: fatal error: Python.h: No such file or directory
  compilation terminated.</p>
</blockquote>

<p>in fact I have tried all the suggested solutions over the internet but the problem still exists ... also I have no problem with <code>Python.h</code>. I managed to locate the file on my machine ... anybody has faced the same problem before??</p>
","<p>I managed to solve this issue and generate the .so file in one command </p>

<pre><code>gcc -shared -o UtilcS.so
-fPIC -I/usr/include/python2.7 -lpython2.7  utilsmodule.c
</code></pre>
","21548557"
"Concatenate strings in python 2.4?","435080","","<p>How to concatenate strings in python?  </p>

<p>For example:</p>

<pre><code>Section = 'C_type'
</code></pre>

<p>Concatenate it with <code>Sec_</code> to form the string:</p>

<pre><code>Sec_C_type
</code></pre>
","<p>The easiest way would be</p>

<pre><code>Section = 'Sec_' + Section
</code></pre>

<p>But for efficiency, see: <a href=""http://www.skymind.com/~ocrow/python_string/"" rel=""noreferrer"">http://www.skymind.com/~ocrow/python_string/</a></p>
","2711589"
"Is it possible to break a long line to multiple lines in Python","434683","","<p>Just like C, you can break a long line into multiple short lines. But in <a href=""http://en.wikipedia.org/wiki/Python_%28programming_language%29"">Python</a>, if I do this, there will be an indent error... Is it possible?</p>
","<p>From <a href=""http://www.python.org/dev/peps/pep-0008/"" rel=""noreferrer"">PEP 8 - Style Guide for Python Code</a>:</p>

<blockquote>
  <p>The preferred way of wrapping long lines is by using Python's implied line
  continuation inside parentheses, brackets and braces.  If necessary, you
  can add an extra pair of parentheses around an expression, but sometimes
  using a backslash looks better.  Make sure to indent the continued line
  appropriately.  </p>
</blockquote>

<p>Example of implicit line continuation:</p>

<pre><code>a = some_function(
    '1' + '2' + '3' - '4')
</code></pre>

<p>On the topic of line-breaks around a binary operator, it goes on to say:-</p>

<blockquote>
  <p>For decades the recommended style was to break after binary operators.
  But this can hurt readability in two ways: the operators tend to get scattered across different columns on the screen, and each operator is moved away from its operand and onto the previous line.</p>
  
  <p>In Python code, it is permissible to break before or after a binary operator, as long as the convention is consistent locally. For new code Knuth's style (line breaks <em>before</em> the operator) is suggested.</p>
</blockquote>

<p>Example of explicit line continuation:</p>

<pre><code>a = '1'   \
    + '2' \
    + '3' \
    - '4'
</code></pre>
","4172465"
"What exactly does the .join() method do?","431362","","<p>I'm pretty new to Python and am completely confused by <code>.join()</code> which I have read is the preferred method for concatenating strings.</p>

<p>I tried:</p>

<pre><code>strid = repr(595)
print array.array('c', random.sample(string.ascii_letters, 20 - len(strid)))
    .tostring().join(strid)
</code></pre>

<p>and got something like:</p>

<pre><code>5wlfgALGbXOahekxSs9wlfgALGbXOahekxSs5
</code></pre>

<p>Why does it work like this?  Shouldn't the <code>595</code> just be automatically appended?</p>
","<p>Look carefully at your output:</p>

<pre><code>5wlfgALGbXOahekxSs9wlfgALGbXOahekxSs5
^                 ^                 ^
</code></pre>

<p>I've highlighted the ""5"", ""9"", ""5"" of your original string. The Python <a href=""https://docs.python.org/3/library/stdtypes.html#str.join"" rel=""noreferrer""><code>join()</code></a> method is a string method, and takes a <em>list</em> of things to join with the string. A simpler example might help explain:</p>

<pre><code>&gt;&gt;&gt; "","".join([""a"", ""b"", ""c""])
'a,b,c'
</code></pre>

<p>The "","" is inserted between each element of the given list. In your case, your ""list"" is the string representation ""595"", which is treated as the list [""5"", ""9"", ""5""].</p>

<p>It appears that you're looking for <code>+</code> instead:</p>

<pre><code>print array.array('c', random.sample(string.ascii_letters, 20 - len(strid)))
.tostring() + strid
</code></pre>
","1876206"
"Python: finding an element in an array","427768","","<p>What is a good way to find the index of an element in an array in python? 
Note that the array may not be sorted.
Is there a way to specify what comparison operator to use?</p>
","<p>The best way is probably to use the list method .index. </p>

<p>For the objects in the list, you can do something like:</p>

<pre><code>def __eq__(self, other):
    return self.Value == other.Value
</code></pre>

<p>with any special processing you need.</p>

<p>You can also use a for/in statement with enumerate(arr)</p>

<p>Example of finding the index of an item that has value > 100.</p>

<pre><code>for index, item in enumerate(arr):
    if item &gt; 100:
        return index, item
</code></pre>

<p><a href=""http://www.daniweb.com/forums/thread174502.html"" rel=""noreferrer"">Source</a></p>
","604813"
"How to use a decimal range() step value?","426816","","<p>Is there a way to step between 0 and 1 by 0.1? </p>

<p>I thought I could do it like the following, but it failed:</p>

<pre><code>for i in range(0, 1, 0.1):
    print i
</code></pre>

<p>Instead, it says that the step argument cannot be zero, which I did not expect.</p>
","<p>You can also use the <a href=""http://en.wikipedia.org/wiki/NumPy"" rel=""noreferrer"">NumPy</a> library (which isn't part of standard library but is relatively easy to obtain) which has the <code>arange</code> function:</p>

<pre><code>&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; np.arange(0.0, 1.0, 0.1)
array([ 0. ,  0.1,  0.2,  0.3,  0.4,  0.5,  0.6,  0.7,  0.8,  0.9])
</code></pre>

<p>as well as the <code>linspace</code> function which lets you have control over what happens at the endpoint (non-trivial for floating point numbers when things won't always divide into the correct number of ""slices""):</p>

<pre><code>&gt;&gt;&gt; np.linspace(0,1,11)
array([ 0. ,  0.1,  0.2,  0.3,  0.4,  0.5,  0.6,  0.7,  0.8,  0.9,  1. ])
&gt;&gt;&gt; np.linspace(0,1,10,endpoint=False)
array([ 0. ,  0.1,  0.2,  0.3,  0.4,  0.5,  0.6,  0.7,  0.8,  0.9])
</code></pre>
","477635"
"How do you remove duplicates from a list in whilst preserving order?","425811","","<p>Is there a built-in that removes duplicates from list in Python, whilst preserving order? I know that I can use a set to remove duplicates, but that destroys the original order. I also know that I can roll my own like this:</p>

<pre><code>def uniq(input):
  output = []
  for x in input:
    if x not in output:
      output.append(x)
  return output
</code></pre>

<p>(Thanks to <a href=""https://stackoverflow.com/users/28169/unwind"">unwind</a> for that <a href=""https://stackoverflow.com/questions/479897/how-do-you-remove-duplicates-from-a-list-in-python#479921"">code sample</a>.)</p>

<p>But I'd like to avail myself of a built-in or a more Pythonic idiom if possible.</p>

<p>Related question: <a href=""https://stackoverflow.com/questions/89178/in-python-what-is-the-fastest-algorithm-for-removing-duplicates-from-a-list-so-t"">In Python, what is the fastest algorithm for removing duplicates from a list so that all elements are unique <em>while preserving order</em>?</a></p>
","<p>Here you have some alternatives: <a href=""http://www.peterbe.com/plog/uniqifiers-benchmark"" rel=""noreferrer"">http://www.peterbe.com/plog/uniqifiers-benchmark</a></p>

<p>Fastest one:</p>

<pre><code>def f7(seq):
    seen = set()
    seen_add = seen.add
    return [x for x in seq if not (x in seen or seen_add(x))]
</code></pre>

<p>Why assign <code>seen.add</code> to <code>seen_add</code> instead of just calling <code>seen.add</code>? Python is a dynamic language, and resolving <code>seen.add</code> each iteration is more costly than resolving a local variable. <code>seen.add</code> could have changed between iterations, and the runtime isn't smart enough to rule that out. To play it safe, it has to check the object each time.</p>

<p>If you plan on using this function a lot on the same dataset, perhaps you would be better off with an ordered set: <a href=""http://code.activestate.com/recipes/528878/"" rel=""noreferrer"">http://code.activestate.com/recipes/528878/</a></p>

<p><em>O</em>(1) insertion, deletion and member-check per operation.</p>
","480227"
"not None test in Python","424431","","<p>Out of these not None tests.</p>

<pre><code>if val != None:

if not (val is None):

if val is not None:
</code></pre>

<p>Which one is preferable, and why?</p>
","<pre><code>if val is not None:
    # ...
</code></pre>

<p>is the Pythonic idiom for testing that a variable is not set to <code>None</code>. This idiom has particular uses in the case of <a href=""http://effbot.org/zone/default-values.htm"" rel=""noreferrer"">declaring keyword functions with default parameters</a>. <code>is</code> tests identity in Python. Because there is one and only one instance of <code>None</code> present in a running Python script/program, <code>is</code> is the optimal test for this. As <a href=""https://stackoverflow.com/questions/3965104/not-none-test-in-python/3965165#3965165"">Johnsyweb points out</a>, this is discussed in <a href=""http://www.python.org/dev/peps/pep-0008/"" rel=""noreferrer"">PEP 8</a> under ""Programming Recommendations"".</p>

<p>As for why this is preferred to </p>

<pre><code>if not (val is None):
    # ...
</code></pre>

<p>this is simply part of the <a href=""http://www.python.org/dev/peps/pep-0020/"" rel=""noreferrer"">Zen of Python</a>: ""Readability counts."" Good Python is often close to good <a href=""http://en.wikipedia.org/wiki/Pseudocode"" rel=""noreferrer"">pseudocode</a>.</p>
","3965129"
"Why are Python lambdas useful?","421134","","<p>I'm trying to figure out Python lambdas.  Is lambda one of those ""interesting"" language items that in real life should be forgotten? </p>

<p>I'm sure there are some edge cases where it might be needed, but given the obscurity of it, the potential of it being redefined in future releases (my assumption based on the various definitions of it) and the reduced coding clarity - should it be avoided?  </p>

<p>This reminds me of overflowing (buffer overflow) of C types - pointing to the top variable and overloading to set the other field values.  It feels like sort of a techie showmanship but maintenance coder nightmare.</p>
","<p>Are you talking about <a href=""https://docs.python.org/3.5/tutorial/controlflow.html#lambda-expressions"" rel=""noreferrer"">lambda functions</a>? Like</p>

<pre><code>lambda x: x**2 + 2*x - 5
</code></pre>

<p>Those things are actually quite useful.  Python supports a style of programming called <em>functional programming</em> where you can pass functions to other functions to do stuff. Example:</p>

<pre><code>mult3 = filter(lambda x: x % 3 == 0, [1, 2, 3, 4, 5, 6, 7, 8, 9])
</code></pre>

<p>sets <code>mult3</code> to <code>[3, 6, 9]</code>, those elements of the original list that are multiples of 3. This is shorter (and, one could argue, clearer) than</p>

<pre><code>def filterfunc(x):
    return x % 3 == 0
mult3 = filter(filterfunc, [1, 2, 3, 4, 5, 6, 7, 8, 9])
</code></pre>

<p>Of course, in this particular case, you could do the same thing as a list comprehension:</p>

<pre><code>mult3 = [x for x in [1, 2, 3, 4, 5, 6, 7, 8, 9] if x % 3 == 0]
</code></pre>

<p>(or even as <code>range(3,10,3)</code>), but there are many other, more sophisticated use cases where you can't use a list comprehension and a lambda function may be the shortest way to write something out.</p>

<ul>
<li><p>Returning a function from another function</p>

<pre><code>&gt;&gt;&gt; def transform(n):
...     return lambda x: x + n
...
&gt;&gt;&gt; f = transform(3)
&gt;&gt;&gt; f(4)
7
</code></pre>

<p>This is often used to create function wrappers, such as Python's decorators.</p></li>
<li><p>Combining elements of an iterable sequence with <code>reduce()</code></p>

<pre><code>&gt;&gt;&gt; reduce(lambda a, b: '{}, {}'.format(a, b), [1, 2, 3, 4, 5, 6, 7, 8, 9])
'1, 2, 3, 4, 5, 6, 7, 8, 9'
</code></pre></li>
<li><p>Sorting by an alternate key</p>

<pre><code>&gt;&gt;&gt; sorted([1, 2, 3, 4, 5, 6, 7, 8, 9], key=lambda x: abs(5-x))
[5, 4, 6, 3, 7, 2, 8, 1, 9]
</code></pre></li>
</ul>

<p>I use lambda functions on a regular basis. It took me a while to get used to them, but eventually I came to understand that they're a very valuable part of the language.</p>
","890188"
"How to print a linebreak in a python function?","418814","","<p>I have a list of strings in my code;</p>

<pre><code>A = ['a1', 'a2', 'a3' ...]
B = ['b1', 'b2', 'b3' ...]
</code></pre>

<p>and I want to print them separated by a linebreak, like this:</p>

<pre><code>&gt;a1
b1
&gt;a2
b2
&gt;a3
b3
</code></pre>

<p>I've tried:</p>

<pre><code>print '&gt;' + A + '/n' + B
</code></pre>

<p>But /n isn't recognized like a line break.</p>
","<p>You have your slash backwards, it should be <code>""\n""</code></p>
","5982228"
"Understanding kwargs in Python","417978","","<p>What are the uses for <code>**kwargs</code> in Python?</p>

<p>I know you can do an <code>objects.filter</code> on a table and pass in a <code>**kwargs</code> argument. &nbsp;</p>

<p>Can I also do this for specifying time deltas i.e. <code>timedelta(hours = time1)</code>? </p>

<p>How exactly does it work? Is it classes as 'unpacking'? Like <code>a,b=1,2</code>?</p>
","<p>You can use <code>**kwargs</code> to let your functions take an arbitrary number of keyword arguments (""kwargs"" means ""keyword arguments""):</p>

<pre><code>&gt;&gt;&gt; def print_keyword_args(**kwargs):
...     # kwargs is a dict of the keyword args passed to the function
...     for key, value in kwargs.iteritems():
...         print ""%s = %s"" % (key, value)
... 
&gt;&gt;&gt; print_keyword_args(first_name=""John"", last_name=""Doe"")
first_name = John
last_name = Doe
</code></pre>

<p>You can also use the <code>**kwargs</code> syntax when calling functions by constructing a dictionary of keyword arguments and passing it to your function:</p>

<pre><code>&gt;&gt;&gt; kwargs = {'first_name': 'Bobby', 'last_name': 'Smith'}
&gt;&gt;&gt; print_keyword_args(**kwargs)
first_name = Bobby
last_name = Smith
</code></pre>

<p>The <a href=""http://docs.python.org/tutorial/controlflow.html#keyword-arguments"" rel=""noreferrer"">Python Tutorial</a> contains a good explanation of how it works, along with some nice examples.</p>
","1769475"
"How to get an absolute file path in Python","417965","","<p>Given a path such as <code>""mydir/myfile.txt""</code>, how do I find the absolute filepath relative to the current working directory in Python? E.g. on Windows, I might end up with:</p>

<pre><code>""C:/example/cwd/mydir/myfile.txt""
</code></pre>
","<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; os.path.abspath(""mydir/myfile.txt"")
'C:/example/cwd/mydir/myfile.txt'
</code></pre>

<p>Also works if it is already an absolute path:</p>

<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; os.path.abspath(""C:/example/cwd/mydir/myfile.txt"")
'C:/example/cwd/mydir/myfile.txt'
</code></pre>
","51523"
"How do I remove/delete a folder that is not empty with Python?","416783","","<p>I am getting an 'access is denied' error when I attempt to delete a folder that is not empty. I used the following command in my attempt: <code>os.remove(""/folder_name"")</code>. </p>

<p>What is the most effective way of removing/deleting a folder/directory that is not empty?</p>
","<pre><code>import shutil

shutil.rmtree('/folder_name')
</code></pre>

<p><a href=""http://docs.python.org/library/shutil.html#shutil.rmtree"" rel=""noreferrer"">Standard Library Reference: shutil.rmtree</a>.</p>
","303225"
"How to check if an object is a list or tuple (but not string)?","416559","","<p>This is what I normally do in order to ascertain that the input is a <code>list</code>/<code>tuple</code> - but not a <code>str</code>. Because many times I stumbled upon bugs where a function passes a <code>str</code> object by mistake, and the target function does <code>for x in lst</code> assuming that <code>lst</code> is actually a <code>list</code> or <code>tuple</code>.</p>

<pre><code>assert isinstance(lst, (list, tuple))
</code></pre>

<p>My question is: is there a better way of achieving this?</p>
","<p>I think</p>

<pre><code>assert not isinstance(lst, basestring)
</code></pre>

<p>Is actually what you want, otherwise you'll miss out on a lot of things which act like lists, but aren't subclasses of <code>list</code> or <code>tuple</code>.</p>
","1835044"
"Calling a function of a module by using its name (a string)","415761","","<p>What is the best way to go about calling a function given a string with the function's name in a Python program.  For example, let's say that I have a module <code>foo</code>, and I have a string whose contents are <code>""bar""</code>. What is the best way to go about calling <code>foo.bar()</code>?</p>

<p>I need to get the return value of the function, which is why I don't just use <code>eval</code>. I figured out how to do it by using <code>eval</code> to define a temp function that returns the result of that function call, but I'm hoping that there is a more elegant way to do this.</p>
","<p>Assuming module <code>foo</code> with method <code>bar</code>:</p>

<pre><code>import foo
method_to_call = getattr(foo, 'bar')
result = method_to_call()
</code></pre>

<p>As far as that goes, lines 2 and 3 can be compressed to:</p>

<pre><code>result = getattr(foo, 'bar')()
</code></pre>

<p>if that makes more sense for your use case.  You can use <code>getattr</code> in this fashion on class instance bound methods, module-level methods, class methods... the list goes on.</p>
","3071"
"Creating an empty Pandas DataFrame, then filling it?","414616","","<p>I'm starting from the pandas Data Frame docs here: <a href=""http://pandas.pydata.org/pandas-docs/stable/dsintro.html"" rel=""noreferrer"">http://pandas.pydata.org/pandas-docs/stable/dsintro.html</a></p>

<p>I'd like to iteratively fill the Data Frame with values in a time series kind of calculation.
So basically, I'd like to initialize, data frame with columns A,B and timestamp rows, all 0 or all NaN.</p>

<p>I'd then add initial values and go over this data calculating the new row from the row before, say row[A][t] = row[A][t-1]+1 or so.</p>

<p>I'm currently using the code as below, but I feel it's kind of ugly and there must be a  way to do this with a data frame directly or just a better way in general.
Note: I'm using Python 2.7.</p>

<pre><code>import datetime as dt
import pandas as pd
import scipy as s

if __name__ == '__main__':
    base = dt.datetime.today().date()
    dates = [ base - dt.timedelta(days=x) for x in range(0,10) ]
    dates.sort()

    valdict = {}
    symbols = ['A','B', 'C']
    for symb in symbols:
        valdict[symb] = pd.Series( s.zeros( len(dates)), dates )

    for thedate in dates:
        if thedate &gt; dates[0]:
            for symb in valdict:
                valdict[symb][thedate] = 1+valdict[symb][thedate - dt.timedelta(days=1)]

    print valdict
</code></pre>
","<p>Here's a couple of suggestions:</p>

<p>Use <a href=""http://pandas.pydata.org/pandas-docs/stable/generated/pandas.date_range.html"" rel=""noreferrer""><code>date_range</code></a> for the index:</p>

<pre><code>import datetime
import pandas as pd
import numpy as np

todays_date = datetime.datetime.now().date()
index = pd.date_range(todays_date-datetime.timedelta(10), periods=10, freq='D')

columns = ['A','B', 'C']
</code></pre>

<p><em>Note: we could create an empty DataFrame (with <code>NaN</code>s) simply by writing:</em></p>

<pre><code>df_ = pd.DataFrame(index=index, columns=columns)
df_ = df_.fillna(0) # with 0s rather than NaNs
</code></pre>

<p>To do these type of calculations for the data, use a numpy array:</p>

<pre><code>data = np.array([np.arange(10)]*3).T
</code></pre>

<p>Hence we can create the DataFrame:</p>

<pre><code>In [10]: df = pd.DataFrame(data, index=index, columns=columns)

In [11]: df
Out[11]: 
            A  B  C
2012-11-29  0  0  0
2012-11-30  1  1  1
2012-12-01  2  2  2
2012-12-02  3  3  3
2012-12-03  4  4  4
2012-12-04  5  5  5
2012-12-05  6  6  6
2012-12-06  7  7  7
2012-12-07  8  8  8
2012-12-08  9  9  9
</code></pre>
","13786327"
"List filtering: list comprehension vs. lambda + filter","414581","","<p>I happened to find myself having a basic filtering need: I have a list and I have to filter it by an attribute of the items.</p>

<p>My code looked like this:</p>

<pre><code>my_list = [x for x in my_list if x.attribute == value]
</code></pre>

<p>But then I thought, wouldn't it be better to write it like this?</p>

<pre><code>my_list = filter(lambda x: x.attribute == value, my_list)
</code></pre>

<p>It's more readable, and if needed for performance the lambda could be taken out to gain something.  </p>

<p>Question is: are there any caveats in using the second way? Any performance difference? Am I missing the Pythonic Way™ entirely and should do it in yet another way (such as using itemgetter instead of the lambda)?</p>
","<p>It is strange how much beauty varies for different people. I find the list comprehension much clearer than <code>filter</code>+<code>lambda</code>, but use whichever you find easier. However, do stop giving your variables names already used for built-ins, that's confusing.</p>

<p>There are two things that may slow down your use of <code>filter</code>.</p>

<p>The first is the function call overhead: as soon as you use a Python function (whether created by <code>def</code> or <code>lambda</code>) it is likely that filter will be slower than the list comprehension. It almost certainly is not enough to matter, and you shouldn't think much about performance until you've timed your code and found it to be a bottleneck, but the difference will be there.</p>

<p>The other overhead that might apply is that the lambda is being forced to access a scoped variable (<code>value</code>). That is slower than accessing a local variable and in Python 2.x the list comprehension only accesses local variables. If you are using Python 3.x the list comprehension runs in a separate function so it will also be accessing <code>value</code> through a closure and this difference won't apply.</p>

<p>The other option to consider is to use a generator instead of a list comprehension:</p>

<pre><code>def filterbyvalue(seq, value):
   for el in seq:
       if el.attribute==value: yield el
</code></pre>

<p>Then in your main code (which is where readability really matters) you've replaced both list comprehension and filter with a hopefully meaningful function name.</p>
","3013686"
"Finding local IP addresses using Python's stdlib","412761","","<p>How can I find local IP addresses (i.e. 192.168.x.x or 10.0.x.x) in Python platform independently and using only the standard library?</p>
","<pre><code>import socket
socket.gethostbyname(socket.gethostname())
</code></pre>

<p>This won't work always (returns <code>127.0.0.1</code> on machines having the hostname in <code>/etc/hosts</code> as <code>127.0.0.1</code>), a paliative would be what gimel shows, use <code>socket.getfqdn()</code> instead. Of course your machine needs a resolvable hostname.</p>
","166520"
"Python: Extract numbers from a string","412330","","<p>I would extract all the numbers contained in a string. Which is the better suited for the purpose, regular expressions or the <code>isdigit()</code> method?</p>

<p>Example:</p>

<pre><code>line = ""hello 12 hi 89""
</code></pre>

<p>Result:</p>

<pre><code>[12, 89]
</code></pre>
","<p>If you only want to extract only positive integers, try the following:</p>

<pre><code>&gt;&gt;&gt; str = ""h3110 23 cat 444.4 rabbit 11 2 dog""
&gt;&gt;&gt; [int(s) for s in str.split() if s.isdigit()]
[23, 11, 2]
</code></pre>

<p>I would argue that this is better than the regex example for three reasons.  First,  you don't need another module; secondly, it's more readable because you don't need to parse the regex mini-language; and third, it is faster (and thus likely more pythonic):</p>

<pre><code>python -m timeit -s ""str = 'h3110 23 cat 444.4 rabbit 11 2 dog' * 1000"" ""[s for s in str.split() if s.isdigit()]""
100 loops, best of 3: 2.84 msec per loop

python -m timeit -s ""import re"" ""str = 'h3110 23 cat 444.4 rabbit 11 2 dog' * 1000"" ""re.findall('\\b\\d+\\b', str)""
100 loops, best of 3: 5.66 msec per loop
</code></pre>

<p>This will not recognize floats, negative integers, or integers in hexadecimal format.  If you can't accept these limitations, <a href=""https://stackoverflow.com/questions/4289331/python-extract-numbers-of-a-string/4289415#4289415"">slim's answer below</a> will do the trick.</p>
","4289557"
"Unicode (UTF-8) reading and writing to files in Python","411913","","<p>I'm having some brain failure in understanding reading and writing text to a file (Python 2.4).</p>

<pre><code># The string, which has an a-acute in it.
ss = u'Capit\xe1n'
ss8 = ss.encode('utf8')
repr(ss), repr(ss8)
</code></pre>

<blockquote>
  <p>(""u'Capit\xe1n'"", ""'Capit\xc3\xa1n'"")</p>
</blockquote>

<pre><code>print ss, ss8
print &gt;&gt; open('f1','w'), ss8

&gt;&gt;&gt; file('f1').read()
'Capit\xc3\xa1n\n'
</code></pre>

<p>So I type in <code>Capit\xc3\xa1n</code> into my favorite editor, in file f2.</p>

<p>Then:</p>

<pre><code>&gt;&gt;&gt; open('f1').read()
'Capit\xc3\xa1n\n'
&gt;&gt;&gt; open('f2').read()
'Capit\\xc3\\xa1n\n'
&gt;&gt;&gt; open('f1').read().decode('utf8')
u'Capit\xe1n\n'
&gt;&gt;&gt; open('f2').read().decode('utf8')
u'Capit\\xc3\\xa1n\n'
</code></pre>

<p>What am I not understanding here? Clearly there is some vital bit of magic (or good sense) that I'm missing. What does one type into text files to get proper conversions?</p>

<p>What I'm truly failing to grok here, is what the point of the UTF-8 representation is, if you can't actually get Python to recognize it, when it comes from outside. Maybe I should just JSON dump the string, and use that instead, since that has an asciiable representation! More to the point, is there an ASCII representation of this Unicode object that Python will recognize and decode, when coming in from a file?  If so, how do I get it?</p>

<pre><code>&gt;&gt;&gt; print simplejson.dumps(ss)
'""Capit\u00e1n""'
&gt;&gt;&gt; print &gt;&gt; file('f3','w'), simplejson.dumps(ss)
&gt;&gt;&gt; simplejson.load(open('f3'))
u'Capit\xe1n'
</code></pre>
","<p>In the notation</p>

<pre><code>u'Capit\xe1n\n'
</code></pre>

<p>the ""\xe1"" represents just one byte. ""\x"" tells you that ""e1"" is in hexadecimal.
When you write</p>

<pre><code>Capit\xc3\xa1n
</code></pre>

<p>into your file you have ""\xc3"" in it. Those are 4 bytes and in your code you read them all. You can see this when you display them:</p>

<pre><code>&gt;&gt;&gt; open('f2').read()
'Capit\\xc3\\xa1n\n'
</code></pre>

<p>You can see that the backslash is escaped by a backslash. So you have four bytes in your string: ""\"", ""x"", ""c"" and ""3"".</p>

<p>Edit:</p>

<p>As others pointed out in their answers you should just enter the characters in the editor and your editor should then handle the conversion to UTF-8 and save it.</p>

<p>If you actually have a string in this format you can use the <code>string_escape</code> codec to decode it into a normal string:</p>

<pre><code>In [15]: print 'Capit\\xc3\\xa1n\n'.decode('string_escape')
Capitán
</code></pre>

<p>The result is a string that is encoded in UTF-8 where the accented character is represented by the two bytes that were written <code>\\xc3\\xa1</code> in the original string. If you want to have a unicode string you have to decode again with UTF-8.</p>

<p>To your edit: you don't have UTF-8 in your file. To actually see how it would look like:</p>

<pre><code>s = u'Capit\xe1n\n'
sutf8 = s.encode('UTF-8')
open('utf-8.out', 'w').write(sutf8)
</code></pre>

<p>Compare the content of the file <code>utf-8.out</code> to the content of the file you saved with your editor.</p>
","491967"
"Meaning of @classmethod and @staticmethod for beginner?","411539","","<p>Could someone explain to me the meaning of <code>@classmethod</code> and <code>@staticmethod</code> in python? I need to know the difference and the meaning. </p>

<p>As far as I understand, <code>@classmethod</code> tells a class that it's a method which should be inherited into subclasses, or... something. However, what's the point of that? Why not just define the class method without adding <code>@classmethod</code> or <code>@staticmethod</code> or any <code>@</code> definitions?</p>

<p><strong>tl;dr:</strong> <em>when</em> should I use them, <em>why</em> should I use them, and <em>how</em> should I use them?</p>

<p>I'm pretty advanced with C++, so using more advanced programming concepts shouldn't be a problem. Feel free giving me a corresponding C++ example if possible.</p>
","<p>Though <code>classmethod</code> and <code>staticmethod</code> are quite similar, there's a slight difference in usage for both entities: <code>classmethod</code> must have a reference to a class object as the first parameter, whereas <code>staticmethod</code> can have no parameters at all.</p>

<h2>Example</h2>

<pre><code>class Date(object):

    def __init__(self, day=0, month=0, year=0):
        self.day = day
        self.month = month
        self.year = year

    @classmethod
    def from_string(cls, date_as_string):
        day, month, year = map(int, date_as_string.split('-'))
        date1 = cls(day, month, year)
        return date1

    @staticmethod
    def is_date_valid(date_as_string):
        day, month, year = map(int, date_as_string.split('-'))
        return day &lt;= 31 and month &lt;= 12 and year &lt;= 3999

date2 = Date.from_string('11-09-2012')
is_date = Date.is_date_valid('11-09-2012')
</code></pre>

<h2>Explanation</h2>

<p>Let's assume an example of a class, dealing with date information (this is what will be our boilerplate to cook on):</p>

<pre><code>class Date(object):

    def __init__(self, day=0, month=0, year=0):
        self.day = day
        self.month = month
        self.year = year
</code></pre>

<p>This class obviously could be used to store information about certain dates (without timezone information; let's assume all dates are presented in UTC).</p>

<p>Here we have <code>__init__</code>, a typical initializer of Python class instances, which receives arguments as a typical <code>instancemethod</code>, having the first non-optional argument (<code>self</code>) that holds reference to a newly created instance.</p>

<p><strong>Class Method</strong></p>

<p>We have some tasks that can be nicely done using <code>classmethod</code>s.</p>

<p><em>Let's assume that we want to create a lot of <code>Date</code> class instances having date information coming from outer source encoded as a string of next format ('dd-mm-yyyy'). We have to do that in different places of our source code in project.</em></p>

<p>So what we must do here is:</p>

<ol>
<li>Parse a string to receive day, month and year as three integer variables or a 3-item tuple consisting of that variable.</li>
<li>Instantiate <code>Date</code> by passing those values to initialization call.</li>
</ol>

<p>This will look like:</p>

<pre><code>day, month, year = map(int, string_date.split('-'))
date1 = Date(day, month, year)
</code></pre>

<p>For this purpose, C++ has such feature as overloading, but Python lacks that feature- so here's when <code>classmethod</code> applies. Lets create another ""<em>constructor</em>"".</p>

<pre><code>    @classmethod
    def from_string(cls, date_as_string):
        day, month, year = map(int, date_as_string.split('-'))
        date1 = cls(day, month, year)
        return date1

date2 = Date.from_string('11-09-2012')
</code></pre>

<p>Let's look more carefully at the above implementation, and review what advantages we have here:</p>

<ol>
<li>We've implemented date string parsing in one place and it's reusable now.</li>
<li>Encapsulation works fine here (if you think that you could implement string parsing as a single function elsewhere, this solution fits OOP paradigm far better).</li>
<li><code>cls</code> is an object that holds <strong>class itself</strong>, not an instance of the class. It's pretty cool because if we inherit our <code>Date</code> class, all children will have <code>from_string</code> defined also.</li>
</ol>

<p><strong>Static method</strong></p>

<p>What about <code>staticmethod</code>? It's pretty similar to <code>classmethod</code> but doesn't take any obligatory parameters (like a class method or instance method does).</p>

<p>Let's look at the next use case.</p>

<p><em>We have a date string that we want to validate somehow. This task is also logically bound to <code>Date</code> class we've used so far, but still doesn't require instantiation of it.</em></p>

<p>Here is where <code>staticmethod</code> can be useful. Let's look at the next piece of code:</p>

<pre><code>    @staticmethod
    def is_date_valid(date_as_string):
        day, month, year = map(int, date_as_string.split('-'))
        return day &lt;= 31 and month &lt;= 12 and year &lt;= 3999

    # usage:
    is_date = Date.is_date_valid('11-09-2012')
</code></pre>

<p>So, as we can see from usage of <code>staticmethod</code>, we don't have any access to what the class is- it's basically just a function,  called syntactically like a method, but without access to the object and it's internals (fields and another methods), while classmethod does.</p>
","12179752"
"How to make a chain of function decorators?","411059","","<p>How can I make two decorators in Python that would do the following?</p>

<pre><code>@makebold
@makeitalic
def say():
   return ""Hello""
</code></pre>

<p>...which should return:</p>

<pre><code>""&lt;b&gt;&lt;i&gt;Hello&lt;/i&gt;&lt;/b&gt;""
</code></pre>

<p>I'm not trying to make <code>HTML</code> this way in a real application - just trying to understand how decorators and decorator chaining works.</p>
","<p>Check out <a href=""http://docs.python.org/reference/compound_stmts.html#function"" rel=""noreferrer"">the documentation</a> to see how decorators work. Here is what you asked for:</p>

<pre><code>def makebold(fn):
    def wrapped():
        return ""&lt;b&gt;"" + fn() + ""&lt;/b&gt;""
    return wrapped

def makeitalic(fn):
    def wrapped():
        return ""&lt;i&gt;"" + fn() + ""&lt;/i&gt;""
    return wrapped

@makebold
@makeitalic
def hello():
    return ""hello world""

print hello() ## returns ""&lt;b&gt;&lt;i&gt;hello world&lt;/i&gt;&lt;/b&gt;""
</code></pre>
","739665"
"Python String and Integer concatenation","410926","","<p>I want to create string using integer appended to it, in a for loop.  Like this:</p>

<pre><code>for i in range(1,11):
  string=""string""+i
</code></pre>

<p>But it returns an error:</p>

<pre><code>TypeError: unsupported operand type(s) for +: 'int' and 'str'
</code></pre>

<p>What's the best way to concatenate the String and Integer?</p>
","<h2>NOTE:</h2>

<p>The method used in this answer (backticks) is deprecated in later versions of Python 2, and removed in Python 3. Use the <a href=""https://docs.python.org/3/library/stdtypes.html#str"" rel=""noreferrer""><code>str()</code></a> function instead.</p>

<hr>

<p>You can use :</p>

<pre><code>string = 'string'
for i in range(11):
    string +=`i`
print string
</code></pre>

<p>It will print <code>string012345678910</code>.</p>

<p>To get <code>string0, string1 ..... string10</code> you can use this as @YOU suggested</p>

<pre><code>&gt;&gt;&gt; string = ""string""
&gt;&gt;&gt; [string+`i` for i in range(11)]
</code></pre>

<hr>

<h1>Update as per Python3</h1>

<p>You can use :</p>

<pre><code>string = 'string'
for i in range(11):
    string +=str(i)
print string
</code></pre>

<p>It will print <code>string012345678910</code>.</p>

<p>To get <code>string0, string1 ..... string10</code> you can use this as @YOU suggested</p>

<pre><code>&gt;&gt;&gt; string = ""string""
&gt;&gt;&gt; [string+str(i) for i in range(11)]
</code></pre>
","18364263"
"How can I get dictionary key as variable directly in Python (not by searching from value)?","410630","","<p>Sorry for this basic question but my searches on this are not turning up anything other than how to get a dictionary's key based on its value which I would prefer not to use as I simply want the text/name of the key and am worried that searching by value may end up returning 2 or more keys if the dictionary has a lot of entries... what I am trying to do is this:</p>

<pre><code>mydictionary={'keyname':'somevalue'}
for current in mydictionary:

   result = mydictionary.(some_function_to_get_key_name)[current]
   print result
   ""keyname""
</code></pre>

<p>The reason for this is that I am printing these out to a document and I want to use the key name and the value in doing this</p>

<p>I have seen the method below but this seems to just return the key's value</p>

<pre><code>get(key[, default])
</code></pre>
","<p>You should iterate over keys with:</p>

<pre><code>for key in mydictionary:
   print ""key: %s , value: %s"" % (key, mydictionary[key])
</code></pre>
","3545353"
"Difference between __str__ and __repr__ in Python","408532","","<p>What is the difference between <code>__str__</code> and <code>__repr__</code> in <code>Python</code>?</p>
","<p>Alex summarized well but, surprisingly, was too succinct.</p>

<p>First, let me reiterate the main points in Alex’s post:</p>

<ul>
<li>The default implementation is useless (it’s hard to think of one which wouldn’t be, but yeah)</li>
<li><code>__repr__</code> goal is to be unambiguous</li>
<li><code>__str__</code> goal is to be readable</li>
<li>Container’s <code>__str__</code> uses contained objects’ <code>__repr__</code></li>
</ul>

<p><strong>Default implementation is useless</strong></p>

<p>This is mostly a surprise because Python’s defaults tend to be fairly useful. However, in this case, having a default for <code>__repr__</code> which would act like:</p>

<pre><code>return ""%s(%r)"" % (self.__class__, self.__dict__)
</code></pre>

<p>would have been too dangerous (for example, too easy to get into infinite recursion if objects reference each other). So Python cops out. Note that there is one default which is true: if <code>__repr__</code> is defined, and <code>__str__</code> is not, the object will behave as though <code>__str__=__repr__</code>.</p>

<p>This means, in simple terms: almost every object you implement should have a functional <code>__repr__</code> that’s usable for understanding the object. Implementing <code>__str__</code> is optional: do that if you need a “pretty print” functionality (for example, used by a report generator).</p>

<p><strong>The goal of <code>__repr__</code> is to be unambiguous</strong></p>

<p>Let me come right out and say it — I do not believe in debuggers. I don’t really know how to use any debugger, and have never used one seriously. Furthermore, I believe that the big fault in debuggers is their basic nature — most failures I debug happened a long long time ago, in a galaxy far far away. This means that I do believe, with religious fervor, in logging. Logging is the lifeblood of any decent fire-and-forget server system. Python makes it easy to log: with maybe some project specific wrappers, all you need is a</p>

<pre><code>log(INFO, ""I am in the weird function and a is"", a, ""and b is"", b, ""but I got a null C — using default"", default_c)
</code></pre>

<p>But you have to do the last step — make sure every object you implement has a useful repr, so code like that can just work. This is why the “eval” thing comes up: if you have enough information so <code>eval(repr(c))==c</code>, that means you know everything there is to know about <code>c</code>. If that’s easy enough, at least in a fuzzy way, do it. If not, make sure you have enough information about <code>c</code> anyway. I usually use an eval-like format: <code>""MyClass(this=%r,that=%r)"" % (self.this,self.that)</code>. It does not mean that you can actually construct MyClass, or that those are the right constructor arguments — but it is a useful form to express “this is everything you need to know about this instance”.</p>

<p>Note: I used <code>%r</code> above, not <code>%s</code>. You always want to use <code>repr()</code> [or <code>%r</code> formatting character, equivalently] inside <code>__repr__</code> implementation, or you’re defeating the goal of repr. You want to be able to differentiate <code>MyClass(3)</code> and <code>MyClass(""3"")</code>.</p>

<p><strong>The goal of <code>__str__</code> is to be readable</strong></p>

<p>Specifically, it is not intended to be unambiguous — notice that <code>str(3)==str(""3"")</code>. Likewise, if you implement an IP abstraction, having the str of it look like 192.168.1.1 is just fine. When implementing a date/time abstraction, the str can be ""2010/4/12 15:35:22"", etc. The goal is to represent it in a way that a user, not a programmer, would want to read it. Chop off useless digits, pretend to be some other class — as long is it supports readability, it is an improvement.</p>

<p><strong>Container’s <code>__str__</code> uses contained objects’ <code>__repr__</code></strong></p>

<p>This seems surprising, doesn’t it? It is a little, but how readable would</p>

<pre><code>[moshe is, 3, hello
world, this is a list, oh I don't know, containing just 4 elements]
</code></pre>

<p>be? Not very. Specifically, the strings in a container would find it way too easy to disturb its string representation. In the face of ambiguity, remember, Python resists the temptation to guess. If you want the above behavior when you’re printing a list, just</p>

<pre><code>print ""[""+"", "".join(l)+""]""
</code></pre>

<p>(you can probably also figure out what to do about dictionaries.</p>

<p><strong>Summary</strong></p>

<p>Implement <code>__repr__</code> for any class you implement. This should be second nature. Implement <code>__str__</code> if you think it would be useful to have a string version which errs on the side of more readability in favor of more ambiguity.</p>
","2626364"
"Change one character in a string?","408225","","<p>What is the easiest way in Python to replace a character in a string like: </p>

<pre><code>text = ""abcdefg"";
text[1] = ""Z"";
           ^
</code></pre>
","<p>Don't modify strings.</p>

<p>Work with them as lists; turn them into strings only when needed.</p>

<pre><code>&gt;&gt;&gt; s = list(""Hello zorld"")
&gt;&gt;&gt; s
['H', 'e', 'l', 'l', 'o', ' ', 'z', 'o', 'r', 'l', 'd']
&gt;&gt;&gt; s[6] = 'W'
&gt;&gt;&gt; s
['H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd']
&gt;&gt;&gt; """".join(s)
'Hello World'
</code></pre>

<p>Python strings are immutable (i.e. they can't be modified).  There are <a href=""http://effbot.org/pyfaq/why-are-python-strings-immutable.htm"" rel=""noreferrer"">a lot</a> of reasons for this.  Use lists until you have no choice, only then turn them into strings.</p>
","1228597"
"'has_key()' or 'in'?","408183","","<p>I wonder what is better to do:</p>

<pre><code>d = {'a': 1, 'b': 2}
'a' in d
True
</code></pre>

<p>or:</p>

<pre><code>d = {'a': 1, 'b': 2}
d.has_key('a')
True
</code></pre>
","<p><code>in</code> is definitely more pythonic.</p>

<p>In fact <a href=""http://docs.python.org/3.1/whatsnew/3.0.html#builtins"" rel=""noreferrer""><code>has_key()</code> was removed in Python 3.x</a>.</p>
","1323426"
"How to urlencode a querystring in Python?","407671","","<p>I am trying to urlencode this string before I submit. </p>

<pre><code>queryString = 'eventName=' + evt.fields[""eventName""] + '&amp;' + 'eventDescription=' + evt.fields[""eventDescription""]; 
</code></pre>
","<p>You need to pass your parameters into <a href=""http://docs.python.org/2/library/urllib.html#urllib.urlencode"" rel=""noreferrer""><code>urlencode()</code></a> as either a mapping (dict), or a sequence of 2-tuples, like:</p>

<pre><code>    &gt;&gt;&gt; import urllib
    &gt;&gt;&gt; f = { 'eventName' : 'myEvent', 'eventDescription' : 'cool event'}
    &gt;&gt;&gt; urllib.urlencode(f)
   'eventName=myEvent&amp;eventDescription=cool+event'
</code></pre>
","5607708"
"Determine if variable is defined in Python","406764","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/750298/easy-way-to-check-that-variable-is-defined-in-python"">Easy way to check that variable is defined in python?</a><br>
  <a href=""https://stackoverflow.com/questions/843277/how-do-i-check-if-a-variable-exists-in-python"">How do I check if a variable exists in Python?</a>  </p>
</blockquote>



<p>How do you know whether a variable has been set at a particular place in the code at runtime? This is not always obvious because (1) the variable could be conditionally set, and (2) the variable could be conditionally deleted. I'm looking for something like <code>defined()</code> in Perl or <code>isset()</code> in PHP or <code>defined?</code> in Ruby.</p>

<pre><code>if condition:
    a = 42

# is ""a"" defined here?

if other_condition:
    del a

# is ""a"" defined here?
</code></pre>
","<pre><code>try:
  thevariable
except NameError:
  print ""well, it WASN'T defined after all!""
else:
  print ""sure, it was defined.""
</code></pre>
","1592578"
"How to write the Fibonacci Sequence?","404741","","<p>I had originally coded the program wrongly. Instead of returning the Fibonacci numbers between a range (ie. startNumber 1, endNumber 20 should = only those numbers between 1 &amp; 20), I have written for the program to display all Fibonacci numbers between a range (ie. startNumber 1, endNumber 20 displays = First 20 Fibonacci numbers). I thought I had a sure-fire code. I also do not see why this is happening.</p>

<pre><code>startNumber = int(raw_input(""Enter the start number here ""))
endNumber = int(raw_input(""Enter the end number here ""))

def fib(n):
    if n &lt; 2:
        return n
    return fib(n-2) + fib(n-1)

print map(fib, range(startNumber, endNumber))
</code></pre>

<p>Someone pointed out in my Part II (which was closed for being a duplicate - <a href=""https://stackoverflow.com/questions/504193/how-to-write-the-fibonacci-sequence-in-python-part-ii"">https://stackoverflow.com/questions/504193/how-to-write-the-fibonacci-sequence-in-python-part-ii</a>) that I need to pass the startNumber and endNumber through a generator using a while loop. Can someone please point me in the direction on how to do this? Any help is welcome.</p>

<hr>

<p>I'm a learning programmer and I've run into a bit of a jumble. I am asked to write a program that will compute and display Fibonacci's Sequence by a user inputted start number and end number (ie. startNumber = 20 endNumber = 100 and it will display only the numbers between that range). The trick is to use it inclusively (which I do not know how to do in Python? - I'm assuming this means to use an inclusive range?).</p>

<p>What I have so far is no actual coding but rather:</p>

<ul>
<li>Write Fib sequence formula to infinite</li>
<li>Display startNumber to endNumber only from Fib sequence.</li>
</ul>

<p>I have no idea where to start and I am asking for ideas or insight into how to write this. I also have tried to write the Fib sequence forumla but I get lost on that as well.</p>
","<p>There is lots of information about the Fibonacci Sequence on <a href=""http://en.wikipedia.org/wiki/Fibonacci_number"" rel=""noreferrer"">wikipedia</a> and on <a href=""http://mathworld.wolfram.com/FibonacciNumber.html"" rel=""noreferrer"">wolfram</a>. A lot more than you may need. Anyway it is a good thing to learn how to use these resources to find (quickly if possible) what you need.</p>

<h2>Write Fib sequence formula to infinite</h2>

<p>In math, it's given in a recursive form:</p>

<p><img src=""https://upload.wikimedia.org/math/7/6/f/76f99713cf111eb035d908228c351710.png"" alt=""fibonacci from wikipedia""></p>

<p>In programming, <strong>infinite</strong> doesn't exist. You can use a recursive form translating the math form directly in your language, for example in Python it becomes:</p>

<pre><code>def F(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return F(n-1)+F(n-2)
</code></pre>

<p>Try it in your favourite language and see that this form requires <strong>a lot</strong> of time as n gets bigger. In fact, this is O(2<sup>n</sup>) in time.</p>

<p>Go on on the sites I linked to you and will see this (on <a href=""http://mathworld.wolfram.com/images/equations/FibonacciNumber/NumberedEquation6.gif"" rel=""noreferrer"">wolfram</a>):</p>

<p><a href=""https://i.stack.imgur.com/SPYOU.gif"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/SPYOU.gif"" alt=""Fibonacci Equation""></a></p>

<p>This one is pretty easy to implement and very, very fast to compute, in Python:</p>

<pre><code>from math import sqrt
def F(n):
    return ((1+sqrt(5))**n-(1-sqrt(5))**n)/(2**n*sqrt(5))
</code></pre>

<p>An other way to do it is following the definition (from <a href=""http://en.wikipedia.org/wiki/Fibonacci_number"" rel=""noreferrer"">wikipedia</a>):</p>

<blockquote>
  <p>The first number of the sequence is 0,
  the second number is 1, and each
  subsequent number is equal to the sum
  of the previous two numbers of the
  sequence itself, yielding the sequence
  0, 1, 1, 2, 3, 5, 8, etc.</p>
</blockquote>

<p>If your language supports iterators you may do something like:</p>

<pre><code>def F():
    a,b = 0,1
    while True:
        yield a
        a, b = b, a + b
</code></pre>

<h2>Display startNumber to endNumber only from Fib sequence.</h2>

<p>Once you know how to generate Fibonacci Numbers you just have to cycle trough the numbers and check if they verify the given conditions.</p>

<p>Suppose now you wrote a f(n) that returns the n-th term of the Fibonacci Sequence (like the one with sqrt(5) )</p>

<p>In most languages you can do something like:</p>

<pre><code>def SubFib(startNumber, endNumber):
    n = 0
    cur = f(n)
    while cur &lt;= endNumber:
        if startNumber &lt;= cur:
            print cur
        n += 1
        cur = f(n)
</code></pre>

<p>In python I'd use the iterator form and go for:</p>

<pre><code>def SubFib(startNumber, endNumber):
    for cur in F():
        if cur &gt; endNumber: return
        if cur &gt;= startNumber:
            yield cur

for i in SubFib(10, 200):
    print i
</code></pre>

<p>My hint is to <em>learn to read</em> what you need. Project Euler (google for it) will train you to do so :P
Good luck and have fun!</p>
","499245"
"How do I do a case-insensitive string comparison?","404684","","<p>How can I do case insensitive string comparison in Python?</p>

<p>I would like to encapsulate comparison of a regular strings to a repository string using in a very simple and Pythonic way. I also would like to have ability to look up values in a dict hashed by strings using regular python strings.</p>
","<p>Assuming ASCII strings:</p>

<pre><code>string1 = 'Hello'
string2 = 'hello'

if string1.lower() == string2.lower():
    print ""The strings are the same (case insensitive)""
else:
    print ""The strings are not the same (case insensitive)""
</code></pre>
","319435"
"Pandas writing dataframe to CSV file","403782","","<p>I have a dataframe in pandas which I would like to write to a CSV file. I am doing this using:</p>

<pre><code>df.to_csv('out.csv')
</code></pre>

<p>And getting the error:</p>

<pre><code>UnicodeEncodeError: 'ascii' codec can't encode character u'\u03b1' in position 20: ordinal not in range(128)
</code></pre>

<p>Is there any way to get around this easily (i.e. I have unicode characters in my data frame)? And is there a way to write to a tab delimited file instead of a CSV using e.g. a 'to-tab' method (that I dont think exists)?</p>
","<p>To delimit by a tab you can use the <code>sep</code> argument of <a href=""http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_csv.html""><code>to_csv</code></a>:</p>

<pre><code>df.to_csv(file_name, sep='\t')
</code></pre>

<p>To use a specific encoding (e.g. 'utf-8') use the <code>encoding</code> argument:</p>

<pre><code>df.to_csv(file_name, sep='\t', encoding='utf-8')
</code></pre>
","16923367"
"How do I unload (reload) a Python module?","402812","","<p>I have a long-running Python server and would like to be able to upgrade a service without restarting the server. What's the best way do do this?</p>

<pre><code>if foo.py has changed:
    unimport foo  &lt;-- How do I do this?
    import foo
    myfoo = foo.Foo()
</code></pre>
","<p>You can reload a module when it has already been imported by using the <a href=""https://docs.python.org/2.7/library/functions.html#reload"" rel=""noreferrer""><code>reload</code></a> builtin function in Python 2:</p>

<pre><code>import foo

while True:
    # Do some things.
    if is_changed(foo):
        foo = reload(foo)
</code></pre>

<p>In Python 3, <code>reload</code> was moved to the <a href=""https://docs.python.org/3.2/library/imp.html"" rel=""noreferrer""><code>imp</code></a> module. In 3.4, <code>imp</code> was deprecated in favor of <a href=""https://docs.python.org/3.4/library/importlib.html"" rel=""noreferrer""><code>importlib</code></a>, and <a href=""https://docs.python.org/3.4/library/importlib.html#importlib.reload"" rel=""noreferrer""><code>reload</code></a> was added to the latter. When targeting 3 or later, either reference the appropriate module when calling <code>reload</code> or import it.</p>

<p>I think that this is what you want. Web servers like Django's development server use this so that you can see the effects of your code changes without restarting the server process itself.</p>

<p>To quote from the docs:</p>

<blockquote>
  <p>Python modules’ code is recompiled and
  the module-level code reexecuted,
  defining a new set of objects which
  are bound to names in the module’s
  dictionary. The init function of
  extension modules is not called a
  second time. As with all other objects
  in Python the old objects are only
  reclaimed after their reference counts
  drop to zero. The names in the module
  namespace are updated to point to any
  new or changed objects. Other
  references to the old objects (such as
  names external to the module) are not
  rebound to refer to the new objects
  and must be updated in each namespace
  where they occur if that is desired.</p>
</blockquote>

<p>As you noted in your question, you'll have to reconstruct <code>Foo</code> objects if the <code>Foo</code> class resides in the <code>foo</code> module.</p>
","437591"
"How to import the class within the same directory or sub directory?","402737","","<p>I have a directory that stores all the <strong>.py</strong> files.</p>

<pre><code>bin/
   main.py
   user.py # where class User resides
   dir.py # where class Dir resides
</code></pre>

<p>I want to use classes from <strong>user.py</strong> and <strong>dir.py</strong> in <strong>main.py</strong>.<br>
How can I import these Python classes into <strong>main.py</strong>?<br>
Furthermore, how can I import class <code>User</code> if <strong>user.py</strong> is in a sub directory?</p>

<pre><code>bin/
    dir.py
    main.py
    usr/
        user.py
</code></pre>
","<h1>Python 2</h1>

<p>Make an empty file called <code>__init__.py</code> in the same directory as the files. That will signify to Python that it's ""ok to import from this directory"".</p>

<p>Then just do...</p>

<pre><code>from user import User
from dir import Dir
</code></pre>

<p>The same holds true if the files are in a subdirectory - put an <code>__init__.py</code> in the subdirectory as well, and then use regular import statements, with dot notation. For each level of directory, you need to add to the import path. </p>

<pre><code>bin/
    main.py
    classes/
        user.py
        dir.py
</code></pre>

<p>So if the directory was named ""classes"", then you'd do this:</p>

<pre><code>from classes.user import User
from classes.dir import Dir
</code></pre>

<h1>Python 3</h1>

<p>Same as previous, but prefix the module name with a <code>.</code> if not using a subdirectory:</p>

<pre><code>from .user import User
from .dir import Dir
</code></pre>
","4142178"
"How to print a class or objects of class using print()?","402129","","<p>I am learning the ropes in Python. When I try to print an object of class <strong><code>Foobar</code></strong> using the <strong><code>print()</code></strong> function, I get an output like this:</p>

<pre><code>&lt;__main__.Foobar instance at 0x7ff2a18c&gt;
</code></pre>

<p>Is there a way I can set the <em>printing behaviour</em> (or the <em>string representation</em>) of a <em>class</em> and its <em>objects</em>? For instance, when I call <code>print()</code> on a class object, I would like to print its data members in a certain format. How to achieve this in Python?</p>

<p>If you are familiar with C++ classes, the above can be achieved for the standard <strong><code>ostream</code></strong> by adding a <strong><code>friend ostream&amp; operator &lt;&lt; (ostream&amp;, const Foobar&amp;)</code></strong> method for the class.</p>
","<pre><code>&gt;&gt;&gt; class Test:
...     def __repr__(self):
...         return ""Test()""
...     def __str__(self):
...         return ""member of Test""
... 
&gt;&gt;&gt; t = Test()
&gt;&gt;&gt; t
Test()
&gt;&gt;&gt; print t
member of Test
</code></pre>

<p>The <code>__str__</code> method is what happens when you print it, and the <code>__repr__</code> method is what happens when you use the <code>repr()</code> function (or when you look at it with the interactive prompt). If this isn't the most <em>Pythonic</em> method, I apologize, because I'm still learning too - but it works.</p>

<p>If no <code>__str__</code> method is given, Python will print the result of <code>__repr__</code> instead. If you define <code>__str__</code> but not <code>__repr__</code>, Python will use what you see above as the <code>__repr__</code>, but still use <code>__str__</code> for printing.</p>
","1535336"
"Display number with leading zeros","401857","","<p>Given:</p>

<pre><code>a = 1
b = 10
c = 100
</code></pre>

<p>I want to display a leading zero for all numbers with less than 2 digits, i.e.:</p>

<pre><code>01
10
100
</code></pre>
","<p>Here you are:</p>

<pre><code>print ""%02d"" % (1,)
</code></pre>

<p>Basically <strong>%</strong> is like <code>printf</code> or <code>sprint</code>.</p>
","134951"
"Difference between del, remove and pop on lists","401788","","<pre><code>&gt;&gt;&gt; a=[1,2,3]
&gt;&gt;&gt; a.remove(2)
&gt;&gt;&gt; a
[1, 3]
&gt;&gt;&gt; a=[1,2,3]
&gt;&gt;&gt; del a[1]
&gt;&gt;&gt; a
[1, 3]
&gt;&gt;&gt; a= [1,2,3]
&gt;&gt;&gt; a.pop(1)
2
&gt;&gt;&gt; a
[1, 3]
&gt;&gt;&gt; 
</code></pre>

<p>Is there any difference between the above three methods to remove an element from a list?</p>
","<p>Yes, <code>remove</code> removes the <em>first</em> matching <em>value</em>, not a specific index:</p>

<pre><code>&gt;&gt;&gt; a = [0, 2, 3, 2]
&gt;&gt;&gt; a.remove(2)
&gt;&gt;&gt; a
[0, 3, 2]
</code></pre>

<p><code>del</code> removes a specific index:</p>

<pre><code>&gt;&gt;&gt; a = [3, 2, 2, 1]
&gt;&gt;&gt; del a[1]
[3, 2, 1]
</code></pre>

<p>and <code>pop</code> returns the removed element:</p>

<pre><code>&gt;&gt;&gt; a = [4, 3, 5]
&gt;&gt;&gt; a.pop(1)
3
&gt;&gt;&gt; a
[4, 5]
</code></pre>

<p>Their error modes are different too:</p>

<pre><code>&gt;&gt;&gt; a = [4, 5, 6]
&gt;&gt;&gt; a.remove(7)
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
ValueError: list.remove(x): x not in list
&gt;&gt;&gt; del a[7]
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
IndexError: list assignment index out of range
&gt;&gt;&gt; a.pop(7)
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
IndexError: pop index out of range
</code></pre>
","11520540"
"How to execute a file within the python interpreter?","401547","","<p>I'm trying to execute a file with python commands from within the interpreter. </p>

<p>EDIT: I'm trying to use variables and settings from that file, not to invoke a separate process.</p>
","<p>Several ways.</p>

<p>From the shell</p>

<pre><code>python someFile.py
</code></pre>

<p>From inside IDLE, hit <strong>F5</strong>.</p>

<p>If you're typing interactively, try this.</p>

<pre><code>&gt;&gt;&gt; variables= {}
&gt;&gt;&gt; execfile( ""someFile.py"", variables )
&gt;&gt;&gt; print variables # globals from the someFile module
</code></pre>
","1027739"
"Split Strings with Multiple Delimiters?","399961","","<p>I think what I want to do is a fairly common task but I've found no reference on the web. I have text, with punctuation, and I want list of the words. </p>

<pre><code>""Hey, you - what are you doing here!?""
</code></pre>

<p>should be</p>

<pre><code>['hey', 'you', 'what', 'are', 'you', 'doing', 'here']
</code></pre>

<p>But Python's <code>str.split()</code> only works with one argument... So I have all words with the punctuation after I split with whitespace. Any ideas?</p>
","<p>A case where regular expressions are justified:</p>

<pre><code>import re
DATA = ""Hey, you - what are you doing here!?""
print re.findall(r""[\w']+"", DATA)
# Prints ['Hey', 'you', 'what', 'are', 'you', 'doing', 'here']
</code></pre>
","1059596"
"How can I read inputs as integers?","399926","","<p>Why does this code not input integers?  Everything on the web says to use <code>raw_input()</code>, but I read on Stack Overflow (on a thread that did not deal with integer input) that <code>raw_input()</code> was renamed to <code>input()</code> in Python 3.x.</p>

<pre><code>play = True

while play:

    x = input(""Enter a number: "")
    y = input(""Enter a number: "")

    print(x + y)
    print(x - y)
    print(x * y)
    print(x / y)
    print(x % y)

    if input(""Play again? "") == ""no"":
        play = False
</code></pre>
","<p><strong>Python 2.x</strong></p>

<p>There were two functions to get user input, called <a href=""https://docs.python.org/2/library/functions.html#input"" rel=""noreferrer""><code>input</code></a> and <a href=""https://docs.python.org/2/library/functions.html#raw_input"" rel=""noreferrer""><code>raw_input</code></a>. The difference between them is, <code>raw_input</code> doesn't evaluate the data and returns as it is, in string form. But, <code>input</code> will evaluate whatever you entered and the result of evaluation will be returned. For example,</p>

<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; sys.version
'2.7.6 (default, Mar 22 2014, 22:59:56) \n[GCC 4.8.2]'
&gt;&gt;&gt; data = input(""Enter a number: "")
Enter a number: 5 + 17
&gt;&gt;&gt; data, type(data)
(22, &lt;type 'int'&gt;)
</code></pre>

<p>The data <code>5 + 17</code> is evaluated and the result is <code>22</code>. When it evaluates the expression <code>5 + 17</code>, it detects that you are adding two numbers and so the result will also be of the same <code>int</code> type. So, the type conversion is done for free and <code>22</code> is returned as the result of <code>input</code> and stored in <code>data</code> variable. You can think of <code>input</code> as the <code>raw_input</code> composed with an <a href=""https://docs.python.org/2/library/functions.html#eval"" rel=""noreferrer""><code>eval</code></a> call.</p>

<pre><code>&gt;&gt;&gt; data = eval(raw_input(""Enter a number: ""))
Enter a number: 5 + 17
&gt;&gt;&gt; data, type(data)
(22, &lt;type 'int'&gt;)
</code></pre>

<p><strong>Note:</strong> you should be careful when you are using <code>input</code> in Python 2.x. I explained why one should be careful when using it, in <a href=""https://stackoverflow.com/a/21122817/1903116"">this answer</a>.</p>

<p>But, <code>raw_input</code> doesn't evaluate the input and returns as it is, as a string.</p>

<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; sys.version
'2.7.6 (default, Mar 22 2014, 22:59:56) \n[GCC 4.8.2]'
&gt;&gt;&gt; data = raw_input(""Enter a number: "")
Enter a number: 5 + 17
&gt;&gt;&gt; data, type(data)
('5 + 17', &lt;type 'str'&gt;)
</code></pre>

<p><strong>Python 3.x</strong></p>

<p>Python 3.x's <a href=""https://docs.python.org/3/library/functions.html#input"" rel=""noreferrer""><code>input</code></a> and Python 2.x's <code>raw_input</code> are similar and <code>raw_input</code> is not available in Python 3.x. </p>

<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; sys.version
'3.4.0 (default, Apr 11 2014, 13:05:11) \n[GCC 4.8.2]'
&gt;&gt;&gt; data = input(""Enter a number: "")
Enter a number: 5 + 17
&gt;&gt;&gt; data, type(data)
('5 + 17', &lt;class 'str'&gt;)
</code></pre>

<hr>

<p><strong>Solution</strong></p>

<p>To answer your question, since Python 3.x doesn't evaluate and convert the data type, you have to explicitly convert to <code>int</code>s, with <a href=""https://docs.python.org/3/library/functions.html#int"" rel=""noreferrer""><code>int</code></a>, like this</p>

<pre><code>x = int(input(""Enter a number: ""))
y = int(input(""Enter a number: ""))
</code></pre>

<p>You can accept numbers of any base and convert them directly to base-10 with the <code>int</code> function, like this</p>

<pre><code>&gt;&gt;&gt; data = int(input(""Enter a number: ""), 8)
Enter a number: 777
&gt;&gt;&gt; data
511
&gt;&gt;&gt; data = int(input(""Enter a number: ""), 16)
Enter a number: FFFF
&gt;&gt;&gt; data
65535
&gt;&gt;&gt; data = int(input(""Enter a number: ""), 2)
Enter a number: 10101010101
&gt;&gt;&gt; data
1365
</code></pre>

<p>The second parameter tells what is the base of the numbers entered and then internally it understands and converts it. If the entered data is wrong it will throw a <code>ValueError</code>.</p>

<pre><code>&gt;&gt;&gt; data = int(input(""Enter a number: ""), 2)
Enter a number: 1234
Traceback (most recent call last):
  File ""&lt;input&gt;"", line 1, in &lt;module&gt;
ValueError: invalid literal for int() with base 2: '1234'
</code></pre>

<hr>

<p>Apart from that, your program can be changed a little bit, like this</p>

<pre><code>while True:
    ...
    ...
    if input(""Play again? "") == ""no"":
        break
</code></pre>

<p>You can get rid of the <code>play</code> variable by using <code>break</code> and <code>while True</code>. </p>

<p><strong>PS</strong>: Python doesn't expect <code>;</code> at the end of the line :)</p>
","20449433"
"How to sort a list of strings?","399184","","<p>What is the best way of creating an alphabetically sorted list in Python?</p>
","<p>Basic answer:</p>

<pre><code>mylist = [""b"", ""C"", ""A""]
mylist.sort()
</code></pre>

<p>This modifies your original list (i.e. sorts in-place). To get a sorted copy of the list, without changing the original, use the <a href=""http://docs.python.org/library/functions.html#sorted"" rel=""noreferrer""><code>sorted()</code></a> function:</p>

<pre><code>for x in sorted(mylist):
    print x
</code></pre>

<p>However, the examples above are a bit naive, because they don't take locale into account, and perform a case-sensitive sorting. You can take advantage of the optional parameter <code>key</code> to specify custom sorting order (the alternative, using <code>cmp</code>, is a deprecated solution, as it has to be evaluated multiple times - <code>key</code> is only computed once per element).</p>

<p>So, to sort according to the current locale, taking language-specific rules into account (<a href=""http://docs.python.org/library/functools.html#functools.cmp_to_key"" rel=""noreferrer""><code>cmp_to_key</code></a> is a helper function from functools):</p>

<pre><code>sorted(mylist, key=cmp_to_key(locale.strcoll))
</code></pre>

<p>And finally, if you need, you can specify a <a href=""http://docs.python.org/library/locale.html"" rel=""noreferrer"">custom locale</a> for sorting:</p>

<pre><code>import locale
locale.setlocale(locale.LC_ALL, 'en_US.UTF-8') # vary depending on your lang/locale
assert sorted((u'Ab', u'ad', u'aa'),
  key=cmp_to_key(locale.strcoll)) == [u'aa', u'Ab', u'ad']
</code></pre>

<p>Last note: you will see examples of case-insensitive sorting which use the <code>lower()</code> method - those are incorrect, because they work only for the ASCII subset of characters. Those two are wrong for any non-English data:</p>

<pre><code># this is incorrect!
mylist.sort(key=lambda x: x.lower())
# alternative notation, a bit faster, but still wrong
mylist.sort(key=str.lower)
</code></pre>
","36156"
"Call a parent class's method from child class in Python?","398577","","<p>When creating a simple object hierarchy in Python, I'd like to be able to invoke methods of the parent class from a derived class.  In Perl and Java, there is a keyword for this (super).  In Perl, I might do this:</p>

<pre><code>package Foo;

sub frotz {
    return ""Bamf"";
}

package Bar;
@ISA = qw(Foo);

sub frotz {
   my $str = SUPER::frotz();
   return uc($str);
}
</code></pre>

<p>In python, it appears that I have to name the parent class explicitly from the child.
In the example above, I'd have to do something like Foo::frotz().  </p>

<p>This doesn't seem right, since this behavior makes it hard to make deep hierarchies.  If children need to know what class defined an inherited method, then all sorts of information pain is created.  </p>

<p>Is this an actual limitation in python, a gap in my understanding or both?</p>
","<p>Yes, but only with <a href=""http://docs.python.org/glossary.html#term-new-style-class"" rel=""noreferrer"">new-style classes</a>.  Use the <a href=""http://docs.python.org/library/functions.html#super"" rel=""noreferrer""><code>super()</code></a> function:</p>

<pre><code>class Foo(Bar):
    def baz(self, arg):
        return super(Foo, self).baz(arg)
</code></pre>
","805081"
"Python `if x is not None` or `if not x is None`?","398456","","<p>I've always thought of the <code>if not x is None</code> version to be more clear, but Google's <a href=""https://google.github.io/styleguide/pyguide.html?showone=True/False_evaluations#True/False_evaluations"" rel=""noreferrer"">style guide</a> and <a href=""https://www.python.org/dev/peps/pep-0008/#programming-recommendations"" rel=""noreferrer"">PEP-8</a> both use <code>if x is not None</code>. Is there any minor performance difference (I'm assuming not), and is there any case where one really doesn't fit (making the other a clear winner for my convention)?*</p>

<p>*I'm referring to any singleton, rather than just <code>None</code>.</p>

<blockquote>
  <p>...to compare singletons like
  None. Use is  or is not.</p>
</blockquote>
","<p>There's no performance difference, as they compile to the same bytecode:</p>

<pre><code>Python 2.6.2 (r262:71600, Apr 15 2009, 07:20:39)
&gt;&gt;&gt; import dis
&gt;&gt;&gt; def f(x):
...    return x is not None
...
&gt;&gt;&gt; dis.dis(f)
  2           0 LOAD_FAST                0 (x)
              3 LOAD_CONST               0 (None)
              6 COMPARE_OP               9 (is not)
              9 RETURN_VALUE
&gt;&gt;&gt; def g(x):
...   return not x is None
...
&gt;&gt;&gt; dis.dis(g)
  2           0 LOAD_FAST                0 (x)
              3 LOAD_CONST               0 (None)
              6 COMPARE_OP               9 (is not)
              9 RETURN_VALUE
</code></pre>

<p>Stylistically, I try to avoid <code>not x is y</code>.  Although the compiler will always treat it as <code>not (x is y)</code>, a human reader might misunderstand the construct as <code>(not x) is y</code>.  If I write <code>x is not y</code> then there is no ambiguity.</p>
","2711073"
"Which is the preferred way to concatenate a string in Python?","396749","","<p>Since Python's <code>string</code> can't be changed, I was wondering how to concatenate a string more efficiently?</p>

<p>I can write like it:</p>

<pre><code>s += stringfromelsewhere
</code></pre>

<p>or like this:</p>

<pre><code>s = []
s.append(somestring)

later

s = ''.join(s)
</code></pre>

<p>While writing this question, I found a good article talking about the topic.</p>

<p><a href=""http://www.skymind.com/~ocrow/python_string/"">http://www.skymind.com/~ocrow/python_string/</a></p>

<p>But it's in Python 2.x., so the question would be did something change in Python 3?</p>
","<p>The <em>best</em> way of appending a string to a string variable is to use <code>+</code> or <code>+=</code>. This is because it's readable and fast. They are also just as fast, which one you choose is a matter of taste, the latter one is the most common. Here are timings with the <code>timeit</code> module:</p>

<pre><code>a = a + b:
0.11338996887207031
a += b:
0.11040496826171875
</code></pre>

<p>However, those who recommend having lists and appending to them and then joining those lists, do so because appending a string to a list is presumably very fast compared to extending a string. And this can be true, in some cases. Here, for example, is one
million appends of a one-character string, first to a string, then to a list:</p>

<pre><code>a += b:
0.10780501365661621
a.append(b):
0.1123361587524414
</code></pre>

<p>OK, turns out that even when the resulting string is a million characters long, appending was still faster.</p>

<p>Now let's try with appending a thousand character long string a hundred thousand times:</p>

<pre><code>a += b:
0.41823482513427734
a.append(b):
0.010656118392944336
</code></pre>

<p>The end string, therefore, ends up being about 100MB long. That was pretty slow, appending to a list was much faster. That that timing doesn't include the final <code>a.join()</code>. So how long would that take? </p>

<pre><code>a.join(a):
0.43739795684814453
</code></pre>

<p>Oups. Turns out even in this case, append/join is slower.</p>

<p>So where does this recommendation come from? Python 2?</p>

<pre><code>a += b:
0.165287017822
a.append(b):
0.0132720470428
a.join(a):
0.114929914474
</code></pre>

<p>Well, append/join is <em>marginally</em> faster there if you are using extremely long strings (which you usually aren't, what would you have a string that's 100MB in memory?)</p>

<p>But the real clincher is Python 2.3. Where I won't even show you the timings, because it's so slow that it hasn't finished yet. These tests suddenly take <em>minutes</em>. Except for the append/join, which is just as fast as under later Pythons.</p>

<p>Yup. String concatenation was very slow in Python back in the stone age. But on 2.4 it isn't anymore (or at least Python 2.4.7), so the recommendation to use append/join became outdated in 2008, when Python 2.3 stopped being updated, and you should have stopped using it. :-)</p>

<p><em>(Update: Turns out when I did the testing more carefully that using <code>+</code> and <code>+=</code> is faster for two strings on Python 2.3 as well. The recommendation to use <code>''.join()</code> must be a misunderstanding)</em></p>

<p>However, this is CPython. Other implementations may have other concerns. And this is just yet another reason why premature optimization is the root of all evil. Don't use a technique that's supposed ""faster"" unless you first measure it.</p>

<p><strong>Therefore the ""best"" version to do string concatenation is to use + or +=</strong>. And if that turns out to be slow for you, which is pretty unlikely, then do something else.</p>

<p>So why do I use a lot of append/join in my code? Because sometimes it's actually clearer. Especially when whatever you should concatenate together should be separated by spaces or commas or newlines.</p>
","12171382"
"What is the difference between dict.items() and dict.iteritems()?","396261","","<p>Are there any applicable differences between <a href=""http://docs.python.org/library/stdtypes.html#dict.items"" rel=""noreferrer""><code>dict.items()</code></a> and <a href=""http://docs.python.org/library/stdtypes.html#dict.iteritems"" rel=""noreferrer""><code>dict.iteritems()</code></a>?</p>

<p>From the Python docs:</p>

<blockquote>
  <p><code>dict.items()</code>: Return a <strong>copy</strong> of the dictionary’s list of (key, value) pairs.</p>
  
  <p><code>dict.iteritems()</code>: Return an <strong>iterator</strong> over the dictionary’s (key, value) pairs.</p>
</blockquote>

<p>If I run the code below, each seems to return a reference to the same object. Are there any subtle differences that I am missing?</p>

<pre><code>#!/usr/bin/python

d={1:'one',2:'two',3:'three'}
print 'd.items():'
for k,v in d.items():
   if d[k] is v: print '\tthey are the same object' 
   else: print '\tthey are different'

print 'd.iteritems():'   
for k,v in d.iteritems():
   if d[k] is v: print '\tthey are the same object' 
   else: print '\tthey are different'   
</code></pre>

<p>Output:</p>

<pre><code>d.items():
    they are the same object
    they are the same object
    they are the same object
d.iteritems():
    they are the same object
    they are the same object
    they are the same object
</code></pre>
","<p>It's part of an evolution. </p>

<p>Originally, Python <code>items()</code> built a real list of tuples and returned that. That could potentially take a lot of extra memory. </p>

<p>Then, generators were introduced to the language in general, and that method was reimplemented as an iterator-generator method named <code>iteritems()</code>. The original remains for backwards compatibility. </p>

<p>One of Python 3’s changes is that  <code>items()</code> now return iterators, and a list is never fully built. The <code>iteritems()</code> method is also gone, since <code>items()</code> in Python 3 works like <code>viewitems()</code> in Python 2.7. </p>
","10458567"
"Convert list to tuple in Python","394979","","<p>I'm trying to convert a list to a tuple. </p>

<p>When I google it, I find a lot of answers similar to:</p>

<pre><code>l = [4,5,6]
tuple(l)
</code></pre>

<p>But if I do that I get this error message:</p>

<blockquote>
  <p>TypeError: 'tuple' object is not callable</p>
</blockquote>

<p>How can I fix this problem?</p>
","<p>It should work fine. Don't use <code>tuple</code>, <code>list</code> or other special names as a variable name. It's probably what's causing your problem.</p>

<pre><code>&gt;&gt;&gt; l = [4,5,6]
&gt;&gt;&gt; tuple(l)
(4, 5, 6)
</code></pre>
","12836173"
"Convert a String representation of a Dictionary to a dictionary?","390468","","<p>How can I convert the <code>str</code> representation of a <code>dict</code>, such as the following string, into a <code>dict</code>?</p>

<pre><code>s = ""{'muffin' : 'lolz', 'foo' : 'kitty'}""
</code></pre>

<p>I prefer not to use <code>eval</code>. What else can I use?</p>

<p>The main reason for this, is one of my coworkers classes he wrote, converts all input into strings. I'm not in the mood to go and modify his classes, to deal with this issue.</p>
","<p>Starting in Python 2.6 you can use the built-in <a href=""https://docs.python.org/library/ast.html#ast.literal_eval"" rel=""noreferrer""><code>ast.literal_eval</code></a>:</p>

<pre><code>&gt;&gt;&gt; import ast
&gt;&gt;&gt; ast.literal_eval(""{'muffin' : 'lolz', 'foo' : 'kitty'}"")
{'muffin': 'lolz', 'foo': 'kitty'}
</code></pre>

<p>This is safer than using <code>eval</code>.  As its own docs say:</p>

<pre>
>>> help(ast.literal_eval)
Help on function literal_eval in module ast:

literal_eval(node_or_string)
    Safely evaluate an expression node or a string containing a Python
    expression.  The string or node provided may only consist of the following
    Python literal structures: strings, numbers, tuples, lists, dicts, booleans,
    and None.
</pre>

<p>For example:</p>

<pre><code>&gt;&gt;&gt; eval(""shutil.rmtree('mongo')"")
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
  File ""&lt;string&gt;"", line 1, in &lt;module&gt;
  File ""/opt/Python-2.6.1/lib/python2.6/shutil.py"", line 208, in rmtree
    onerror(os.listdir, path, sys.exc_info())
  File ""/opt/Python-2.6.1/lib/python2.6/shutil.py"", line 206, in rmtree
    names = os.listdir(path)
OSError: [Errno 2] No such file or directory: 'mongo'
&gt;&gt;&gt; ast.literal_eval(""shutil.rmtree('mongo')"")
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
  File ""/opt/Python-2.6.1/lib/python2.6/ast.py"", line 68, in literal_eval
    return _convert(node_or_string)
  File ""/opt/Python-2.6.1/lib/python2.6/ast.py"", line 67, in _convert
    raise ValueError('malformed string')
ValueError: malformed string
</code></pre>
","988251"
"pip install mysql-python fails with EnvironmentError: mysql_config not found","389053","","<p><strong>This is the error I get</strong></p>

<pre><code>(mysite)zjm1126@zjm1126-G41MT-S2:~/zjm_test/mysite$ pip install mysql-python
Downloading/unpacking mysql-python
  Downloading MySQL-python-1.2.3.tar.gz (70Kb): 70Kb downloaded
  Running setup.py egg_info for package mysql-python
    sh: mysql_config: not found
    Traceback (most recent call last):
      File ""&lt;string&gt;"", line 14, in &lt;module&gt;
      File ""/home/zjm1126/zjm_test/mysite/build/mysql-python/setup.py"", line 15, in &lt;module&gt;
        metadata, options = get_config()
      File ""setup_posix.py"", line 43, in get_config
        libs = mysql_config(""libs_r"")
      File ""setup_posix.py"", line 24, in mysql_config
        raise EnvironmentError(""%s not found"" % (mysql_config.path,))
    EnvironmentError: mysql_config not found
    Complete output from command python setup.py egg_info:
    sh: mysql_config: not found

Traceback (most recent call last):

  File ""&lt;string&gt;"", line 14, in &lt;module&gt;

  File ""/home/zjm1126/zjm_test/mysite/build/mysql-python/setup.py"", line 15, in &lt;module&gt;

    metadata, options = get_config()

  File ""setup_posix.py"", line 43, in get_config

    libs = mysql_config(""libs_r"")

  File ""setup_posix.py"", line 24, in mysql_config

    raise EnvironmentError(""%s not found"" % (mysql_config.path,))

EnvironmentError: mysql_config not found

----------------------------------------
Command python setup.py egg_info failed with error code 1
Storing complete log in /home/zjm1126/.pip/pip.log
(mysite)zjm1126@zjm1126-G41MT-S2:~/zjm_test/mysite$ pip install mysql-python
Downloading/unpacking mysql-python
  Running setup.py egg_info for package mysql-python
    sh: mysql_config: not found
    Traceback (most recent call last):
      File ""&lt;string&gt;"", line 14, in &lt;module&gt;
      File ""/home/zjm1126/zjm_test/mysite/build/mysql-python/setup.py"", line 15, in &lt;module&gt;
        metadata, options = get_config()
      File ""setup_posix.py"", line 43, in get_config
        libs = mysql_config(""libs_r"")
      File ""setup_posix.py"", line 24, in mysql_config
        raise EnvironmentError(""%s not found"" % (mysql_config.path,))
    EnvironmentError: mysql_config not found
    Complete output from command python setup.py egg_info:
    sh: mysql_config: not found

Traceback (most recent call last):

  File ""&lt;string&gt;"", line 14, in &lt;module&gt;

  File ""/home/zjm1126/zjm_test/mysite/build/mysql-python/setup.py"", line 15, in &lt;module&gt;

    metadata, options = get_config()

  File ""setup_posix.py"", line 43, in get_config

    libs = mysql_config(""libs_r"")

  File ""setup_posix.py"", line 24, in mysql_config

    raise EnvironmentError(""%s not found"" % (mysql_config.path,))

EnvironmentError: mysql_config not found

----------------------------------------
Command python setup.py egg_info failed with error code 1
Storing complete log in /home/zjm1126/.pip/pip.log
</code></pre>

<p>What can I do to resolve this?</p>
","<p>It seems mysql_config is missing on your system or the installer could not find it.
Be sure mysql_config is really installed.</p>

<p>For example on Debian/Ubuntu you must install the package:</p>

<pre><code>sudo apt-get install libmysqlclient-dev
</code></pre>

<p>Maybe the mysql_config is not in your path, it will be the case when you compile by yourself
the mysql suite.</p>
","5178698"
"Catch multiple exceptions in one line (except block)","386563","","<p>I know that I can do:</p>

<pre><code>try:
    # do something that may fail
except:
    # do this if ANYTHING goes wrong
</code></pre>

<p>I can also do this:</p>

<pre><code>try:
    # do something that may fail
except IDontLikeYouException:
    # say please
except YouAreTooShortException:
    # stand on a ladder
</code></pre>

<p>But if I want to do the same thing inside two different exceptions, the best I can think of right now is to do this:</p>

<pre><code>try:
    # do something that may fail
except IDontLikeYouException:
    # say please
except YouAreBeingMeanException:
    # say please
</code></pre>

<p>Is there any way that I can do something like this (since the action to take in both exceptions is to <code>say please</code>):</p>

<pre><code>try:
    # do something that may fail
except IDontLikeYouException, YouAreBeingMeanException:
    # say please
</code></pre>

<p>Now this really won't work, as it matches the syntax for:</p>

<pre><code>try:
    # do something that may fail
except Exception, e:
    # say please
</code></pre>

<p>So, my effort to catch the two distinct exceptions doesn't exactly come through.</p>

<p>Is there a way to do this?</p>
","<p>From <a href=""https://docs.python.org/3/tutorial/errors.html#handling-exceptions"" rel=""noreferrer"">Python Documentation</a>:</p>

<blockquote>
  <p>An except clause may name multiple exceptions as a parenthesized tuple, for example</p>
</blockquote>

<pre><code>except (IDontLikeYouException, YouAreBeingMeanException) as e:
    pass
</code></pre>

<p>Separating the exception from the variable with a comma will still work in Python 2.6 and 2.7, but is now deprecated and does not work in Python 3; now you should be using <code>as</code>.</p>
","6470452"
"Removing a list of characters in string","386282","","<p>I want to remove characters in a string in python:</p>

<pre><code>string.replace(',', '').replace(""!"", '').replace("":"", '').replace("";"", '')...
</code></pre>

<p>But I have many characters I have to remove. I thought about a list</p>

<pre><code>list = [',', '!', '.', ';'...]
</code></pre>

<p>But how can I use the <code>list</code> to replace the characters in the <code>string</code>?</p>
","<p>If you're using python2 and your inputs are strings (not unicodes), the absolutely best method is <a href=""https://docs.python.org/2/library/stdtypes.html#str.translate"" rel=""noreferrer""><code>str.translate</code></a>:</p>

<pre><code>&gt;&gt;&gt; chars_to_remove = ['.', '!', '?']
&gt;&gt;&gt; subj = 'A.B!C?'
&gt;&gt;&gt; subj.translate(None, ''.join(chars_to_remove))
'ABC'
</code></pre>

<p>Otherwise, there are following options to consider:</p>

<p>A. Iterate the subject char by char, omit unwanted characters and <a href=""https://docs.python.org/2/library/stdtypes.html#str.join"" rel=""noreferrer""><code>join</code></a> the resulting list:</p>

<pre><code>&gt;&gt;&gt; sc = set(chars_to_remove)
&gt;&gt;&gt; ''.join([c for c in subj if c not in sc])
'ABC'
</code></pre>

<p>(Note that the generator version <code>''.join(c for c ...)</code> will be less efficient).</p>

<p>B. Create a regular expression on the fly and <a href=""https://docs.python.org/2/library/re.html#re.sub"" rel=""noreferrer""><code>re.sub</code></a> with an empty string:</p>

<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; rx = '[' + re.escape(''.join(chars_to_remove)) + ']'
&gt;&gt;&gt; re.sub(rx, '', subj)
'ABC'
</code></pre>

<p>(<a href=""https://docs.python.org/2/library/re.html#re.escape"" rel=""noreferrer""><code>re.escape</code></a> ensures that characters like <code>^</code> or <code>]</code> won't break the regular expression).</p>

<p>C. Use the <a href=""https://docs.python.org/3/library/stdtypes.html#str.translate"" rel=""noreferrer"">mapping variant of <code>translate</code></a>:</p>

<pre><code>&gt;&gt;&gt; chars_to_remove = [u'δ', u'Γ', u'ж']
&gt;&gt;&gt; subj = u'AжBδCΓ'
&gt;&gt;&gt; dd = {ord(c):None for c in chars_to_remove}
&gt;&gt;&gt; subj.translate(dd)
u'ABC'
</code></pre>

<p>Full testing code and timings:</p>

<pre><code>#coding=utf8

import re

def remove_chars_iter(subj, chars):
    sc = set(chars)
    return ''.join([c for c in subj if c not in sc])

def remove_chars_re(subj, chars):
    return re.sub('[' + re.escape(''.join(chars)) + ']', '', subj)

def remove_chars_re_unicode(subj, chars):
    return re.sub(u'(?u)[' + re.escape(''.join(chars)) + ']', '', subj)

def remove_chars_translate_bytes(subj, chars):
    return subj.translate(None, ''.join(chars))

def remove_chars_translate_unicode(subj, chars):
    d = {ord(c):None for c in chars}
    return subj.translate(d)

import timeit, sys

def profile(f):
    assert f(subj, chars_to_remove) == test
    t = timeit.timeit(lambda: f(subj, chars_to_remove), number=1000)
    print ('{0:.3f} {1}'.format(t, f.__name__))

print (sys.version)
PYTHON2 = sys.version_info[0] == 2

print ('\n""plain"" string:\n')

chars_to_remove = ['.', '!', '?']
subj = 'A.B!C?' * 1000
test = 'ABC' * 1000

profile(remove_chars_iter)
profile(remove_chars_re)

if PYTHON2:
    profile(remove_chars_translate_bytes)
else:
    profile(remove_chars_translate_unicode)

print ('\nunicode string:\n')

if PYTHON2:
    chars_to_remove = [u'δ', u'Γ', u'ж']
    subj = u'AжBδCΓ'
else:
    chars_to_remove = ['δ', 'Γ', 'ж']
    subj = 'AжBδCΓ'

subj = subj * 1000
test = 'ABC' * 1000

profile(remove_chars_iter)

if PYTHON2:
    profile(remove_chars_re_unicode)
else:
    profile(remove_chars_re)

profile(remove_chars_translate_unicode)
</code></pre>

<p>Results:</p>

<pre class=""lang-none prettyprint-override""><code>2.7.5 (default, Mar  9 2014, 22:15:05) 
[GCC 4.2.1 Compatible Apple LLVM 5.0 (clang-500.0.68)]

""plain"" string:

0.637 remove_chars_iter
0.649 remove_chars_re
0.010 remove_chars_translate_bytes

unicode string:

0.866 remove_chars_iter
0.680 remove_chars_re_unicode
1.373 remove_chars_translate_unicode

---

3.4.2 (v3.4.2:ab2c023a9432, Oct  5 2014, 20:42:22) 
[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)]

""plain"" string:

0.512 remove_chars_iter
0.574 remove_chars_re
0.765 remove_chars_translate_unicode

unicode string:

0.817 remove_chars_iter
0.686 remove_chars_re
0.876 remove_chars_translate_unicode
</code></pre>

<p>(As a side note, the figure for <code>remove_chars_translate_bytes</code> might give us a clue why the industry was reluctant to adopt Unicode for such a long time).</p>
","10017169"
"How to declare and add items to an array in Python?","383632","","<p>I'm trying to add items to an array in python.</p>

<p>I run </p>

<pre><code>array = {}
</code></pre>

<p>Then, I try to add something to this array by doing:</p>

<pre><code>array.append(valueToBeInserted)
</code></pre>

<p>There doesn't seem to be a <code>.append</code> method for this.  How do I add items to an array?</p>
","<p><code>{}</code> represents an empty dictionary, not an array/list.  For lists or arrays, you need <code>[]</code>.</p>

<p>To initialize an empty list do this:</p>

<pre><code>my_list = []
</code></pre>

<p>or</p>

<pre><code>my_list = list()
</code></pre>

<p>To add elements to the list, use <code>append</code></p>

<pre><code>my_list.append(12)
</code></pre>

<p>To <code>extend</code> the list to include the elements from another list use <code>extend</code></p>

<pre><code>my_list.extend([1,2,3,4])
my_list
--&gt; [12,1,2,3,4]
</code></pre>

<p>To remove an element from a list use <code>remove</code></p>

<pre><code>my_list.remove(2)
</code></pre>

<p>Dictionaries represent a collection of key/value pairs also known as an associative array or a map. </p>

<p>To initialize an empty dictionary use <code>{}</code> or <code>dict()</code></p>

<p>Dictionaries have keys and values</p>

<pre><code>my_dict = {'key':'value', 'another_key' : 0}
</code></pre>

<p>To extend a dictionary with the contents of another dictionary you may use the <code>update</code> method</p>

<pre><code>my_dict.update({'third_key' : 1})
</code></pre>

<p>To remove a value from a dictionary</p>

<pre><code>del my_dict['key']
</code></pre>
","10487303"
"Python - Check If Word Is In A String","382510","","<p>I'm working with Python v2, and I'm trying to find out if you can tell if a word is in a string.</p>

<p>I have found some information about identifying if the word is in the string - using .find, but is there a way to do an IF statement. I would like to have something like the following:</p>

<pre><code>if string.find(word):
    print 'success'
</code></pre>

<p>Thanks for any help.</p>
","<p>What is wrong with:</p>

<pre><code>if word in mystring: 
   print 'success'
</code></pre>
","5319942"
"How do you round UP a number in Python?","382410","","<p>This problem is killing me. How does one roundup a number UP in Python?</p>

<p>I tried round(number) but it round the number down. Example:</p>

<pre><code>round(2.3) = 2.0 and not 3, what I would like
</code></pre>

<p>The I tried int(number + .5) but it round the number down again! Example:</p>

<pre><code>int(2.3 + .5) = 2
</code></pre>

<p>Then I tried round(number + .5) but it won't work in edge cases. Example:</p>

<pre><code>WAIT! THIS WORKED!
</code></pre>

<p>Please advise.</p>
","<p>The <a href=""https://docs.python.org/2/library/math.html#math.ceil"" rel=""noreferrer"">ceil</a> (ceiling) function:</p>

<pre><code>import math
print math.ceil(4.2)
</code></pre>
","2356510"
"AttributeError: 'module' object has no attribute","382400","","<p>I have two python modules:</p>

<p>a.py</p>

<pre><code>import b

def hello():
  print ""hello""

print ""a.py""
print hello()
print b.hi()
</code></pre>

<p>b.py</p>

<pre><code>import a

def hi():
  print ""hi""
</code></pre>

<p>When I run <code>a.py</code>, I get:</p>

<pre><code>AttributeError: 'module' object has no attribute 'hi'
</code></pre>

<p>What does the error mean?  How do I fix it?</p>
","<p>You have mutual top-level imports, which is almost always a bad idea.</p>

<p>If you really must have mutual imports in Python, the way to do it is to import them within a function:</p>

<pre><code># In b.py:
def cause_a_to_do_something():
    import a
    a.do_something()
</code></pre>

<p>Now a.py can safely do <code>import b</code> without causing problems.</p>

<p>(At first glance it might appear that <code>cause_a_to_do_something()</code> would be hugely inefficient because it does an <code>import</code> every time you call it, but in fact the import work only gets done the first time.  The second and subsequent times you import a module, it's a quick operation.)</p>
","1250135"
"How to generate all permutations of a list in Python","382238","","<p>How do you generate all the permutations of a list in Python, independently of the type of elements in that list?</p>

<p>For example:</p>

<pre><code>permutations([])
[]

permutations([1])
[1]

permutations([1, 2])
[1, 2]
[2, 1]

permutations([1, 2, 3])
[1, 2, 3]
[1, 3, 2]
[2, 1, 3]
[2, 3, 1]
[3, 1, 2]
[3, 2, 1]
</code></pre>
","<p><strong>Starting with Python 2.6</strong> (and if you're on Python 3) you have a <strong>standard-library</strong> tool for this: <a href=""https://docs.python.org/2/library/itertools.html#itertools.permutations"" rel=""noreferrer""><code>itertools.permutations</code></a>.</p>

<pre><code>import itertools
list(itertools.permutations([1, 2, 3]))
</code></pre>

<hr>

<p>If you're using an <strong>older Python (&lt;2.6)</strong> for some reason or are just curious to know how it works, here's one nice approach, taken from  <a href=""http://code.activestate.com/recipes/252178/"" rel=""noreferrer"">http://code.activestate.com/recipes/252178/</a>:</p>

<pre><code>def all_perms(elements):
    if len(elements) &lt;=1:
        yield elements
    else:
        for perm in all_perms(elements[1:]):
            for i in range(len(elements)):
                # nb elements[0:1] works in both string and list contexts
                yield perm[:i] + elements[0:1] + perm[i:]
</code></pre>

<p>A couple of alternative approaches are listed in the documentation of <code>itertools.permutations</code>. Here's one:</p>

<pre><code>def permutations(iterable, r=None):
    # permutations('ABCD', 2) --&gt; AB AC AD BA BC BD CA CB CD DA DB DC
    # permutations(range(3)) --&gt; 012 021 102 120 201 210
    pool = tuple(iterable)
    n = len(pool)
    r = n if r is None else r
    if r &gt; n:
        return
    indices = range(n)
    cycles = range(n, n-r, -1)
    yield tuple(pool[i] for i in indices[:r])
    while n:
        for i in reversed(range(r)):
            cycles[i] -= 1
            if cycles[i] == 0:
                indices[i:] = indices[i+1:] + indices[i:i+1]
                cycles[i] = n - i
            else:
                j = cycles[i]
                indices[i], indices[-j] = indices[-j], indices[i]
                yield tuple(pool[i] for i in indices[:r])
                break
        else:
            return
</code></pre>

<p>And another, based on <code>itertools.product</code>:</p>

<pre><code>def permutations(iterable, r=None):
    pool = tuple(iterable)
    n = len(pool)
    r = n if r is None else r
    for indices in product(range(n), repeat=r):
        if len(set(indices)) == r:
            yield tuple(pool[i] for i in indices)
</code></pre>
","104436"
"Get difference between two lists","382021","","<p>I have two lists in Python, like these:</p>

<pre><code>temp1 = ['One', 'Two', 'Three', 'Four']
temp2 = ['One', 'Two']
</code></pre>

<p>I need to create a third list with items from the first list which aren't present in the second one. From the example I have to get:</p>

<pre><code>temp3 = ['Three', 'Four']
</code></pre>

<p>Are there any fast ways without cycles and checking?</p>
","<pre><code>In [5]: list(set(temp1) - set(temp2))
Out[5]: ['Four', 'Three']
</code></pre>

<p>Beware that </p>

<pre><code>In [5]: set([1, 2]) - set([2, 3])
Out[5]: set([1]) 
</code></pre>

<p>where you might expect/want it to equal <code>set([1, 3])</code>. If you do want <code>set([1, 3])</code> as your answer, you'll need to use <code>set([1, 2]).symmetric_difference(set([2, 3]))</code>.</p>
","3462160"
"Numpy array dimensions","381195","","<p>I'm currently trying to learn Numpy and Python. Given the following array:</p>

<pre><code>import numpy as N
a = N.array([[1,2],[1,2]])
</code></pre>

<p>Is there a function that returns the dimensions of <code>a</code> (e.g.a is a 2 by 2 array)?</p>

<p><code>size()</code> returns 4 and that doesn't help very much. </p>
","<p>It is <a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.shape.html#numpy.ndarray.shape"" rel=""noreferrer""><code>.shape</code></a>:</p>

<blockquote>
  <p>ndarray.<strong>shape</strong><br>
  Tuple of array dimensions.</p>
</blockquote>

<p>Thus:</p>

<pre><code>&gt;&gt;&gt; a.shape
(2, 2)
</code></pre>
","3061789"
"How do you get the logical xor of two variables in Python?","379437","","<p>How do you get the <a href=""http://en.wikipedia.org/wiki/Exclusive_or"" rel=""noreferrer"">logical xor</a> of two variables in Python?</p>

<p>For example, I have two variables that I expect to be strings. I want to test that only one of them contains a True value (is not None or the empty string):</p>

<pre><code>str1 = raw_input(""Enter string one:"")
str2 = raw_input(""Enter string two:"")
if logical_xor(str1, str2):
    print ""ok""
else:
    print ""bad""
</code></pre>

<p>The <code>^</code> operator seems to be bitwise, and not defined on all objects:</p>

<pre><code>&gt;&gt;&gt; 1 ^ 1
0
&gt;&gt;&gt; 2 ^ 1
3
&gt;&gt;&gt; ""abc"" ^ """"
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
TypeError: unsupported operand type(s) for ^: 'str' and 'str'
</code></pre>
","<p>If you're already normalizing the inputs to booleans, then != is xor.</p>

<pre><code>bool(a) != bool(b)
</code></pre>
","433161"
"Get current time in milliseconds in Python?","379405","","<p>How can I get the current time in milliseconds in Python? </p>
","<p>For what I needed, here's what I did, based on @samplebias' comment above:</p>

<pre><code>import time
millis = int(round(time.time() * 1000))
print millis
</code></pre>

<p>Quick'n'easy. Thanks all, sorry for the brain fart.</p>

<p>For reuse:</p>

<pre><code>import time

current_milli_time = lambda: int(round(time.time() * 1000))
</code></pre>

<p>Then:</p>

<pre><code>&gt;&gt;&gt; current_milli_time()
1378761833768
</code></pre>
","5998359"
"How to check a string for specific characters?","376663","","<p>How can I check if a string value has exact characters in it using Python2?
Specifically, I am looking to detect if it has dollar signs (""$""), commas ("",""), and numbers.</p>
","<p>Assuming your string is <code>s</code>:</p>

<pre><code>'$' in s        # found
'$' not in s    # not found

# original answer given, but less Pythonic than the above...
s.find('$')==-1 # not found
s.find('$')!=-1 # found
</code></pre>

<p>And so on for other characters.</p>

<p>... or</p>

<pre><code>pattern = re.compile(r'\d\$,')
if pattern.findall(s):
    print('Found')
else
    print('Not found')
</code></pre>

<p>... or</p>

<pre><code>chars = set('0123456789$,')
if any((c in chars) for c in s):
    print('Found')
else:
    print('Not Found')
</code></pre>

<p>[Edit: added the <code>'$' in s</code> answers]</p>
","5188909"
"Creating a new dict in Python","376251","","<p>I want to build a dictionary in Python. However, all the examples that I see are instantiating a dictionary from a list, etc . ..</p>

<p>How do I create a new empty dictionary in Python?</p>
","<p>Call <code>dict</code> with no parameters</p>

<pre><code>new_dict = dict()
</code></pre>

<p>or simply write</p>

<pre><code>new_dict = {}
</code></pre>
","8424955"
"Safest way to convert float to integer in python?","375996","","<p>Python's math module contain handy functions like <code>floor</code> &amp; <code>ceil</code>. These functions take a floating point number and return the nearest integer below or above it. However these functions return the answer as a floating point number. For example:</p>

<pre><code>import math
f=math.floor(2.3)
</code></pre>

<p>Now <code>f</code> returns:</p>

<pre><code>2.0
</code></pre>

<p>What is the safest way to get an integer out of this float, without running the risk of rounding errors (for example if the float is the equivalent of 1.99999) or perhaps I should use another function altogether?</p>
","<p>All integers that can be represented by floating point numbers have an exact representation. So you can safely use <code>int</code> on the result. Inexact representations occur only if you are trying to represent a rational number with a denominator that is not a power of two.</p>

<p>That this works is not trivial at all! It's a property of the IEEE floating point representation that int∘floor = ⌊⋅⌋ if the magnitude of the numbers in question is small enough, but different representations are possible where int(floor(2.3)) might be 1.</p>

<p>To quote from <a href=""http://en.wikipedia.org/w/index.php?title=Floating_point&amp;oldid=376101741#IEEE_754:_floating_point_in_modern_computers"" rel=""noreferrer"">Wikipedia</a>,</p>

<blockquote>
  <p>Any integer with absolute value less than or equal to 2<sup>24</sup> can be exactly represented in the single precision format, and any integer with absolute value less than or equal to 2<sup>53</sup> can be exactly represented in the double precision format.</p>
</blockquote>
","3387715"
"What does %s mean in Python?","375881","","<p>What does %s mean in Python? And what does the following bit of code do?</p>

<p>For instance... </p>

<pre><code> if len(sys.argv) &lt; 2:
     sys.exit('Usage: %s database-name' % sys.argv[0])

 if not os.path.exists(sys.argv[1]):
     sys.exit('ERROR: Database %s was not found!' % sys.argv[1])
</code></pre>
","<p>It is a string formatting syntax (which it borrows from C).</p>

<p>Please see <a href=""http://www.diveintopython.net/native_data_types/formatting_strings.html"" rel=""noreferrer"">""Formatting Strings""</a>:</p>

<blockquote>
  <p>Python supports formatting values into
  strings. Although this can include
  very complicated expressions, the most
  basic usage is to insert values into a
  string with the <code>%s</code> placeholder.</p>
</blockquote>

<p><strong>Edit:</strong> Here is a really simple example:</p>

<pre><code>name = raw_input(""who are you?"")
print ""hello %s"" % (name,)
</code></pre>

<p>The <code>%s</code> token allows me to insert (and potentially format) a string.  Notice that the <code>%s</code> token is replaced by whatever I pass to the string after the <code>%</code> symbol.  Notice also that I am using a tuple here as well (when you only have one string using a tuple is optional) to illustrate that multiple strings can be inserted and formatted in one statement.</p>
","997807"
"How to uninstall Python 2.7 on a Mac OS X 10.6.4?","375826","","<p>I want to completely remove Python 2.7 from my Mac OS X 10.6.4. I managed to remove the entry from the PATH variable by reverting my .bash_profile. But I also want to remove all directories, files, symlinks, and entries that got installed by the Python 2.7 install package. I've got the install package from <a href=""http://www.python.org/"" rel=""noreferrer"">http://www.python.org/</a>. What directories/files/configuration file entries do I need to remove? Is there a list somewhere?</p>
","<p>The complete list is <a href=""http://bugs.python.org/issue7107"" rel=""noreferrer"">documented here</a>.  Basically, all you need to do is the following:</p>

<ol>
<li><p>Remove the Python 2.7 framework</p>

<p><code>sudo rm -rf /Library/Frameworks/Python.framework/Versions/2.7</code></p></li>
<li><p>Remove the Python 2.7 applications directory</p>

<p><code>sudo rm -rf ""/Applications/Python 2.7""</code></p></li>
<li><p>Remove the symbolic links in <code>/usr/local/bin</code> that point to this Python version see <code>ls -l /usr/local/bin | grep '../Library/Frameworks/Python.framework/Versions/2.7'</code> and then run the following command to remove all the links:</p>

<pre><code>cd /usr/local/bin/
ls -l /usr/local/bin | grep '../Library/Frameworks/Python.framework/Versions/2.7' | awk '{print $9}' | tr -d @ | xargs rm
</code></pre></li>
<li><p>If necessary, edit your shell profile file(s) to remove adding <code>/Library/Frameworks/Python.framework/Versions/2.7</code> to your <code>PATH</code> environment file.  Depending on which shell you use, any of the following files may have been modified:
<code>~/.bash_login</code>, <code>~/.bash_profile</code>, <code>~/.cshrc</code>, <code>~/.profile</code>, <code>~/.tcshrc</code>, and/or <code>~/.zprofile</code>.</p></li>
</ol>
","3819829"
"Python simple if or logic statement","374478","","<p>How would you write, in python:</p>

<pre><code>if key &lt; 1 or key &gt; 34:
</code></pre>

<p>I've tried every way I can think of, and am finding it very frustrating.</p>
","<p>If <code>key</code> isn't an <code>int</code> or <code>float</code> but a <code>str</code>ing, you need to convert it to an <code>int</code> first by doing</p>

<pre><code>key = int(key)
</code></pre>

<p>or to a <code>float</code> by doing</p>

<pre><code>key = float(key)
</code></pre>

<p>Otherwise, what you have in your question should work, but</p>

<pre><code>if (key &lt; 1) or (key &gt; 34):
</code></pre>

<p>or</p>

<pre><code>if not (1 &lt;= key &lt;= 34):
</code></pre>

<p>would be a bit clearer.</p>
","7141226"
"Initializing a list to a known number of elements in Python","373211","","<p>Right now I am using a list, and was expecting something like:</p>

<pre><code>verts = list (1000)
</code></pre>

<p>Should I use array instead?</p>
","<p>The first thing that comes to mind for me is:</p>

<pre><code>verts = [None]*1000
</code></pre>

<p>But do you really need to preinitialize it?</p>
","521688"
"Iterating over a string","372818","","<p>In C++, I could do:</p>

<pre><code>for (int i = 0; i &lt; str.length(); ++i)
    std::cout &lt;&lt; str[i] &lt;&lt; std::endl;
</code></pre>

<p>How do I iterate over a string in Python?</p>
","<p>As Johannes pointed out, </p>

<pre><code>for c in ""string"":
    #do something with c
</code></pre>

<p>You can iterate pretty much anything in python using the <code>for loop</code> construct, </p>

<p>for example, <code>open(""file.txt"")</code> returns a file object (and opens the file), iterating over it iterates over lines in that file</p>

<pre><code>for line in open(filename):
    # do something with line
</code></pre>

<p>If that seems like magic, well it kinda is, but the idea behind it is really simple.  </p>

<p>There's a simple iterator protocol that can be applied to any kind of object to make the <code>for</code> loop work on it.</p>

<p>Simply implement an iterator that defines a <code>next()</code> method, and implement an <code>__iter__</code> method on a class to make it iterable. (the <code>__iter__</code> of course, should return an iterator object, that is, an object that defines <code>next()</code>)</p>

<p><a href=""http://docs.python.org/library/stdtypes.html#iterator-types"" rel=""noreferrer"">See official documentation</a></p>
","538374"
"Proper way to declare custom exceptions in modern Python?","372751","","<p>What's the proper way to declare custom exception classes in modern Python? My primary goal is to follow whatever standard other exception classes have, so that (for instance) any extra string I include in the exception is printed out by whatever tool caught the exception.</p>

<p>By ""modern Python"" I mean something that will run in Python 2.5 but be 'correct' for the Python 2.6 and Python 3.* way of doing things. And by ""custom"" I mean an Exception object that can include extra data about the cause of the error: a string, maybe also some other arbitrary object relevant to the exception.</p>

<p>I was tripped up by the following deprecation warning in Python 2.6.2:</p>

<pre><code>&gt;&gt;&gt; class MyError(Exception):
...     def __init__(self, message):
...         self.message = message
... 
&gt;&gt;&gt; MyError(""foo"")
_sandbox.py:3: DeprecationWarning: BaseException.message has been deprecated as of Python 2.6
</code></pre>

<p>It seems crazy that <code>BaseException</code> has a special meaning for attributes named <code>message</code>. I gather from <A href=""http://www.python.org/dev/peps/pep-0352/"" rel=""noreferrer"">PEP-352</a> that attribute did have a special meaning in 2.5 they're trying to deprecate away, so I guess that name (and that one alone) is now forbidden? Ugh.</p>

<p>I'm also fuzzily aware that <code>Exception</code> has some magic parameter <code>args</code>, but I've never known how to use it. Nor am I sure it's the right way to do things going forward; a lot of the discussion I found online suggested they were trying to do away with args in Python 3.</p>

<p>Update: two answers have suggested overriding <code>__init__</code>, and <code>__str__</code>/<code>__unicode__</code>/<code>__repr__</code>. That seems like a lot of typing, is it necessary?</p>
","<p>Maybe I missed the question, but why not:</p>

<pre><code>class MyException(Exception):
    pass
</code></pre>

<p><strong>Edit:</strong> to override something (or pass extra args), do this:</p>

<pre><code>class ValidationError(Exception):
    def __init__(self, message, errors):

        # Call the base class constructor with the parameters it needs
        super(ValidationError, self).__init__(message)

        # Now for your custom code...
        self.errors = errors
</code></pre>

<p>That way you could pass dict of error messages to the second param, and get to it later with <code>e.errors</code></p>
","1319675"
"Python list sort in descending order","372510","","<p>How can I sort this list in descending order?</p>

<pre><code>timestamp = [
    ""2010-04-20 10:07:30"",
    ""2010-04-20 10:07:38"",
    ""2010-04-20 10:07:52"",
    ""2010-04-20 10:08:22"",
    ""2010-04-20 10:08:22"",
    ""2010-04-20 10:09:46"",
    ""2010-04-20 10:10:37"",
    ""2010-04-20 10:10:58"",
    ""2010-04-20 10:11:50"",
    ""2010-04-20 10:12:13"",
    ""2010-04-20 10:12:13"",
    ""2010-04-20 10:25:38""
]
</code></pre>
","<p>In one line, using a <code>lambda</code>:</p>

<pre><code>timestamp.sort(key=lambda x: time.strptime(x, '%Y-%m-%d %H:%M:%S')[0:6], reverse=True)
</code></pre>

<hr>

<p>Passing a function to <code>list.sort</code>:</p>

<pre><code>def foo(x):
    return time.strptime(x, '%Y-%m-%d %H:%M:%S')[0:6]

timestamp.sort(key=foo, reverse=True)
</code></pre>
","4183540"
"python: SyntaxError: EOL while scanning string literal","369891","","<p>I have the above mentioned error in <code>s1=""some very long string............""</code> </p>

<p>Anyone know what i am doing wrong?</p>
","<p>You are not putting a <code>""</code> before the end of the line. </p>

<p>Use <code>""""""</code> if you want to do this:</p>

<pre><code>"""""" a very long string ...... 
....that can span multiple lines
""""""
</code></pre>
","3561704"
"Python: simplest way to get list of values from dict?","369656","","<p>What is the simplest way to get a list of the values in a dict in Python?</p>

<p>In Java, getting the values of a Map as a List is as easy as doing <code>list = map.values();</code>.  I'm wondering if there is a similarly simple way in Python to get a list of values from a dict.</p>
","<p>Yes it's the exact same thing in <a href=""https://docs.python.org/2/library/stdtypes.html#dict.values"" rel=""noreferrer"">Python 2</a>:</p>

<pre><code>d.values()
</code></pre>

<p>In <a href=""https://docs.python.org/3/library/stdtypes.html#dict.values"" rel=""noreferrer"">Python 3</a> (where <code>dict.values</code> returns a <a href=""https://docs.python.org/3/library/stdtypes.html#dict-views"" rel=""noreferrer""><em>view</em></a> of the dictionary’s values instead):</p>

<pre><code>list(d.values())
</code></pre>
","16228268"
"How to list all functions in a Python module?","369397","","<p>I have a python module installed on my system and I'd like to be able to see what functions/classes/methods are available in it.   </p>

<p>I want to call the doc function on each one. In ruby I can do something like ClassName.methods to get a list of all the methods available on that class. Is there something similar in python?</p>

<p>eg. something like:</p>

<pre><code>from somemodule import foo
print foo.methods # or whatever is the correct method to call
</code></pre>
","<p>The inspect module. Also see the <a href=""http://docs.python.org/2/library/pydoc.html"" rel=""noreferrer""><code>pydoc</code></a> module, the <code>help()</code> function in the interactive interpreter and the <code>pydoc</code> command-line tool which generates the documentation you are after. You can just give them the class you wish to see the documentation of. They can also generate, for instance, HTML output and write it to disk.</p>
","139198"
"How to search for a string in text files?","368657","","<p>I want to check if a string is in a text file. If it is, do X. If it's not, do Y. However, this code always returns <code>True</code> for some reason. Can anyone see what is wrong?</p>

<pre><code>def check():
    datafile = file('example.txt')
    found = False
    for line in datafile:
        if blabla in line:
            found = True
            break

check()
if True:
    print ""true""
else:
    print ""false""
</code></pre>
","<p>The reason why you always got <code>True</code> has already been given, so I'll just offer another suggestion:</p>

<p>If your file is not too large, you can read it into a string, and just use that (easier and often faster than reading and checking line per line):</p>

<pre><code>if 'blabla' in open('example.txt').read():
    print(""true"")
</code></pre>

<p>Another trick: you can alleviate the possible memory problems by using <a href=""http://docs.python.org/library/mmap.html"" rel=""noreferrer""><code>mmap.mmap()</code></a> to create a ""string-like"" object that uses the underlying file (instead of reading the whole file in memory):</p>

<pre><code>import mmap

f = open('example.txt')
s = mmap.mmap(f.fileno(), 0, access=mmap.ACCESS_READ)
if s.find('blabla') != -1:
    print('true')
</code></pre>

<p>NOTE: in python 3, mmaps behave like <code>bytearray</code> objects rather than strings, so the subsequence you look for with <code>find()</code> has to be a <code>bytes</code> object rather than a string as well, eg. <code>s.find(b'blabla')</code>:</p>

<pre><code>#!/usr/bin/env python3
import mmap

with open('example.txt', 'rb', 0) as file, \
     mmap.mmap(file.fileno(), 0, access=mmap.ACCESS_READ) as s:
    if s.find(b'blabla') != -1:
        print('true')
</code></pre>

<p>You could also use regular expressions on <code>mmap</code> e.g., case-insensitive search: <code>if re.search(br'(?i)blabla', s):</code></p>
","4944929"
"How to put the legend out of the plot","368006","","<p>I have a series of 20 plots (not subplots) to be made in a single figure.  I want the legend to be outside of the box.  At the same time, I do not want to change the axes, as the size of the figure gets reduced.  Kindly help me for the following queries:</p>

<ol>
<li>I want to keep the legend box outside the plot area. (I want the legend to be outside at the right side of the plot area).</li>
<li>Is there anyway that I reduce the font size of the text inside the legend box, so that the size of the legend box will be small.</li>
</ol>
","<p>Create font properties</p>

<pre><code>from matplotlib.font_manager import FontProperties

fontP = FontProperties()
fontP.set_size('small')
legend([plot1], ""title"", prop=fontP)
</code></pre>
","4700674"
"How to sort (list/tuple) of lists/tuples?","367138","","<p>I have some data either in list contains lists, or list contains tuples.</p>

<pre><code>data = [[1,2,3], [4,5,6], [7,8,9]]
data = [(1,2,3), (4,5,6), (7,8,9)]
</code></pre>

<p>And I want to sort by the 2nd element in the subset. Meaning, sorting by 2,5,8 where 2 is from (1,2,3), 5 is from (4,5,6). What is the common way to do this? Should I store tuples or lists in my list? Since tuples are more inflexible.</p>
","<pre><code>sorted_by_second = sorted(data, key=lambda tup: tup[1])
</code></pre>

<p>or:</p>

<pre><code>data.sort(key=lambda tup: tup[1])  # sorts in place
</code></pre>
","3121985"
"Getting key with maximum value in dictionary?","365394","","<p>I have a <code>dictionary</code>: keys are strings, values are integers.</p>

<p>Example: </p>

<pre><code>stats = {'a':1000, 'b':3000, 'c': 100}
</code></pre>

<p>I'd like to get <code>'b'</code> as an answer, since it's the key with a higher value.</p>

<p>I did the following, using an intermediate list with reversed key-value tuples:</p>

<pre><code>inverse = [(value, key) for key, value in stats.items()]
print max(inverse)[1]
</code></pre>

<p>Is that one the better (or even more elegant) approach?</p>
","<p>You can use <code>operator.itemgetter</code> for that:</p>

<pre><code>import operator
stats = {'a':1000, 'b':3000, 'c': 100}
max(stats.iteritems(), key=operator.itemgetter(1))[0]
</code></pre>

<p>And instead of building a new list in memory use <code>stats.iteritems()</code>. The <code>key</code> parameter to the <code>max()</code> function is a function that computes a key that is used to determine how to rank items.</p>

<p>Please note that if you were to have another key-value pair 'd': 3000 that this method will only return <strong>one</strong> of the <strong>two</strong> even though they both have the maximum value. </p>

<pre><code>&gt;&gt;&gt; import operator
&gt;&gt;&gt; stats = {'a':1000, 'b':3000, 'c': 100, 'd':3000}
&gt;&gt;&gt; max(stats.iteritems(), key=operator.itemgetter(1))[0]
'b' 
</code></pre>
","268285"
"How do I get the path and name of the file that is currently executing?","364874","","<p>I have scripts calling other script files but I need to get the filepath of the file that is currently running within the process. </p>

<p>For example, let's say I have three files. Using <a href=""http://docs.python.org/library/functions.html#execfile"" rel=""noreferrer"">execfile</a>:</p>

<ul>
<li><code>script_1.py</code> calls <code>script_2.py</code>. </li>
<li>In turn, <code>script_2.py</code> calls <code>script_3.py</code>. </li>
</ul>

<p>How can I get the file name and path of <strong><code>script_3.py</code></strong>, <em>from code within <code>script_3.py</code></em>, without having to pass that information as arguments from <code>script_2.py</code>?</p>

<p>(Executing <code>os.getcwd()</code> returns the original starting script's filepath not the current file's.)</p>
","<p>p1.py:</p>

<pre><code>execfile(""p2.py"")
</code></pre>

<p>p2.py:</p>

<pre><code>import inspect, os
print inspect.getfile(inspect.currentframe()) # script filename (usually with path)
print os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe()))) # script directory
</code></pre>
","50905"
"Map two lists into a dictionary in Python","363531","","<p>Imagine that you have:</p>

<pre><code>keys = ('name', 'age', 'food')
values = ('Monty', 42, 'spam')
</code></pre>

<p>What is the simplest way to produce the following dictionary ?</p>

<pre><code>a_dict = {'name' : 'Monty', 'age' : 42, 'food' : 'spam'}
</code></pre>

<p>This code works, but I'm not really proud of it :</p>

<pre><code>a_dict = {}
junk = map(lambda k, v: a_dict.update({k: v}), keys, values)
</code></pre>
","<p>Like this:</p>

<pre><code>&gt;&gt;&gt; keys = ['a', 'b', 'c']
&gt;&gt;&gt; values = [1, 2, 3]
&gt;&gt;&gt; dictionary = dict(zip(keys, values))
&gt;&gt;&gt; print(dictionary)
{'a': 1, 'b': 2, 'c': 3}
</code></pre>

<p>Voila :-)  The pairwise dict constructor and zip function are awesomely useful: <a href=""https://docs.python.org/3/library/functions.html#func-dict"" rel=""noreferrer"">https://docs.python.org/3/library/functions.html#func-dict</a></p>
","209854"
"Import error: No module name urllib2","362534","","<p>Here's my code:</p>

<pre><code>import urllib2.request

response = urllib2.urlopen(""http://www.google.com"")
html = response.read()
print(html)
</code></pre>

<p>Any help?</p>
","<p>As stated in the <a href=""https://docs.python.org/2/library/urllib2.html"" rel=""noreferrer""><code>urllib2</code> documentation</a>:</p>

<blockquote>
  <p>The <code>urllib2</code> module has been split across several modules in Python 3 named <code>urllib.request</code> and <code>urllib.error</code>. The <code>2to3</code> tool will automatically adapt imports when converting your sources to Python 3.</p>
</blockquote>

<p>So you should instead be saying</p>

<pre><code>from urllib.request import urlopen
html = urlopen(""http://www.google.com/"")
print(html)
</code></pre>

<p>Your current, now-edited code sample is incorrect because you are saying <code>urllib.urlopen(""http://www.google.com/"")</code> instead of just <code>urlopen(""http://www.google.com/"")</code>.</p>
","2792652"
"How to get item's position in a list?","360597","","<p>I am iterating over a list and I want to print out the index of the item if it meets a certain condition. How would I do this?</p>

<p>Example:  </p>

<pre><code>testlist = [1,2,3,5,3,1,2,1,6]
for item in testlist:
    if item == 1:
        print position
</code></pre>
","<p>Hmmm.  There was an answer with a list comprehension here, but it's disappeared.</p>

<p>Here:</p>

<pre><code> [i for i,x in enumerate(testlist) if x == 1]
</code></pre>

<p>Example:</p>

<pre><code>&gt;&gt;&gt; testlist
[1, 2, 3, 5, 3, 1, 2, 1, 6]
&gt;&gt;&gt; [i for i,x in enumerate(testlist) if x == 1]
[0, 5, 7]
</code></pre>

<p>Update:</p>

<p>Okay, you want a generator expression, we'll have a generator expression.  Here's the list comprehension again, in a for loop:</p>

<pre><code>&gt;&gt;&gt; for i in [i for i,x in enumerate(testlist) if x == 1]:
...     print i
... 
0
5
7
</code></pre>

<p>Now we'll construct a generator...</p>

<pre><code>&gt;&gt;&gt; (i for i,x in enumerate(testlist) if x == 1)
&lt;generator object at 0x6b508&gt;
&gt;&gt;&gt; for i in (i for i,x in enumerate(testlist) if x == 1):
...     print i
... 
0
5
7
</code></pre>

<p>and niftily enough, we can assign that to a variable, and use it from there...</p>

<pre><code>&gt;&gt;&gt; gen = (i for i,x in enumerate(testlist) if x == 1)
&gt;&gt;&gt; for i in gen: print i
... 
0
5
7
</code></pre>

<p>And to think I used to write FORTRAN.</p>
","364769"
"How to prettyprint a JSON file?","360544","","<p>I have a JSON file that is a mess that I want to prettyprint-- what's the easiest way to do this in python? I know PrettyPrint takes an ""object"", which I think can be a file, but I don't know how to pass a file in-- just using the filename doesn't work.</p>
","<p>The <code>json</code> module already implements some basic pretty printing with the <code>indent</code> parameter:</p>

<pre><code>&gt;&gt;&gt; import json
&gt;&gt;&gt;
&gt;&gt;&gt; your_json = '[""foo"", {""bar"":[""baz"", null, 1.0, 2]}]'
&gt;&gt;&gt; parsed = json.loads(your_json)
&gt;&gt;&gt; print json.dumps(parsed, indent=4, sort_keys=True)
[
    ""foo"", 
    {
        ""bar"": [
            ""baz"", 
            null, 
            1.0, 
            2
        ]
    }
]
</code></pre>

<p>To parse a file, use <code>json.load</code>:</p>

<pre><code>with open('filename.txt', 'r') as handle:
    parsed = json.load(handle)
</code></pre>
","12944035"
"Traverse a list in reverse order in Python","360307","","<p>So I can start from <code>len(collection)</code> and end in <code>collection[0]</code>.</p>

<p>EDIT: Sorry, I forgot to mention I also want to be able to access the loop index.</p>
","<p>Use the <code>reversed()</code> built-in function:</p>

<pre><code>&gt;&gt;&gt; a = [""foo"", ""bar"", ""baz""]
&gt;&gt;&gt; for i in reversed(a):
...     print i
... 
baz
bar
foo
</code></pre>

<p>To also access the original index:</p>

<pre><code>&gt;&gt;&gt; for i, e in reversed(list(enumerate(a))):
...     print i, e
... 
2 baz
1 bar
0 foo
</code></pre>
","529427"
"How to drop rows of Pandas DataFrame whose value in certain columns is NaN","359407","","<p>I have a <code>DataFrame</code>:</p>

<pre><code>&gt;&gt;&gt; df
                 STK_ID  EPS  cash
STK_ID RPT_Date                   
601166 20111231  601166  NaN   NaN
600036 20111231  600036  NaN    12
600016 20111231  600016  4.3   NaN
601009 20111231  601009  NaN   NaN
601939 20111231  601939  2.5   NaN
000001 20111231  000001  NaN   NaN
</code></pre>

<p>Then I just want the records whose <code>EPS</code> is not <code>NaN</code>, that is, <code>df.drop(....)</code> will return the dataframe as below:</p>

<pre><code>                  STK_ID  EPS  cash
STK_ID RPT_Date                   
600016 20111231  600016  4.3   NaN
601939 20111231  601939  2.5   NaN
</code></pre>

<p>How do I do that?</p>
","<p>Don't <code>drop</code>. Just take rows where <code>EPS</code> is <strong>finite</strong>:</p>

<pre><code>df = df[np.isfinite(df['EPS'])]
</code></pre>
","13413845"
"Using pip behind a proxy","358876","","<p>I am trying to use pip behind a proxy at work.</p>

<p>One of the answers from <a href=""https://stackoverflow.com/questions/9698557/how-to-use-pip-on-windows-behind-an-authenticating-proxy"">this post</a> suggested using <a href=""http://cntlm.sourceforge.net/"" rel=""noreferrer"">CNTLM</a>. I installed and configured it per <a href=""https://stackoverflow.com/questions/9181637/how-to-fill-proxy-information-in-cntlm-config-file"">this other post</a>, but running <code>cntlm.exe -c cntlm.ini -I -M http://google.com</code> gave the error <code>Connection to proxy failed, bailing out</code>.</p>

<p>I also tried <code>pip install -–proxy=user:pass@localhost:3128</code> (the default CNTLM port) but that raised <code>Cannot fetch index base URL http://pypi.python.org/simple/</code>. Clearly something's up with the proxy.</p>

<p>Does anyone know how to check more definitively whether CNTLM is set up right, or if there's another way around this altogether? I know you can also set the <code>http_proxy</code> environment variable as described <a href=""https://stackoverflow.com/questions/11726881/how-to-set-an-http-proxy-in-python-2-7"">here</a> but I'm not sure what credentials to put in. The ones from <code>cntlm.ini</code>?</p>
","<p>To setup CNTLM for windows, follow this <a href=""http://stormpoopersmith.com/2012/03/20/using-applications-behind-a-corporate-proxy/"" rel=""noreferrer"">article</a>. For Ubuntu, read <a href=""http://annelagang.blogspot.com/2012/11/installing-gems-in-ubuntu-1204-using.html"" rel=""noreferrer"">my blog post</a>. </p>

<p><strong>Edit:</strong></p>

<p>Basically, to use CNTLM in any platform, you need to setup your username and <em>hashed</em> password, before using <code>http://127.0.0.1:3128</code> as a proxy to your parent proxy.</p>

<ol>
<li><p>Edit the config and add important information like domain, username, password and parent proxy. </p></li>
<li><p>Generate hashed password.</p>

<p><strong>Windows</strong> <code>cntlm –c cntlm.ini –H</code></p>

<p><strong>Ubuntu/Linux</strong> <code>cntlm -v -H -c /etc/cntlm.conf</code></p></li>
<li><p>Remove plain text password from the config and replace them with the generated passwords.</p></li>
</ol>

<p>To check if working:</p>

<p><strong>Windows</strong> <code>cntlm –M http://www.google.com</code></p>

<p><strong>Ubuntu/Linux</strong> <code>sudo cntlm -M http://www.google.com/</code></p>

<p>For more detailed instructions, see links above.</p>

<p><strong>Update:</strong> </p>

<p>Just for completeness sake, I was able to configure and use CNTLM in Windows recently. I encountered a problem during the syncing process of Kindle for PC because of our proxy and installing and configuring CNTLM for Windows fixed that issue for me. Refer to <a href=""http://annelagang.blogspot.com/2014/01/register-and-download-books-using.html"" rel=""noreferrer"">my article</a> for more details. </p>
","14188155"
"python : list index out of range error","358656","","<p>I have written a simple python program </p>

<pre><code>l=[1,2,3,0,0,1]
for i in range(0,len(l)):
       if l[i]==0:
           l.pop(i)
</code></pre>

<p>This gives me error 'list index out of range' on line <code>if l[i]==0:</code></p>

<p>After debugging I could figure out that <code>i</code> is getting incremented and list is getting reduced.<br>
However, I have loop termination condition <code>i &lt; len(l)</code>. Then why I am getting such error? </p>
","<p>You are reducing the length of your list <code>l</code> as you iterate over it, so as you approach the end of your indices in the range statement, some of those indices are no longer valid.</p>

<p>It <em>looks</em> like what you want to do is:</p>

<pre><code>l = [x for x in l if x != 0]
</code></pre>

<p>which will return a copy of <code>l</code> without any of the elements that were zero (that operation is called a <a href=""http://docs.python.org/tutorial/datastructures.html#list-comprehensions"" rel=""noreferrer"">list comprehension</a>, by the way).  You could even shorten that last part to just <code>if x</code>, since non-zero numbers evaluate to <code>True</code>.</p>

<p>There is no such thing as a loop termination condition of <code>i &lt; len(l)</code>, in the way you've written the code, because <code>len(l)</code> is <em>pre</em>calculated before the loop, not re-evaluated on each iteration.  You <em>could</em> write it in such a way, however:</p>

<pre><code>i = 0
while i &lt; len(l):
   if l[i] == 0:
       l.pop(i)
   else:
       i += 1
</code></pre>
","1798807"
"How to change the font size on a matplotlib plot","355658","","<p>How does one change the font size for all elements (ticks, labels, title) on a matplotlib plot?</p>

<p>I know how to change the tick label sizes, this is done with:</p>

<pre><code>import matplotlib 
matplotlib.rc('xtick', labelsize=20) 
matplotlib.rc('ytick', labelsize=20) 
</code></pre>

<p>But how does one change the rest?</p>
","<p>From the <a href=""http://matplotlib.sourceforge.net/api/matplotlib_configuration_api.html#matplotlib.rc"" rel=""noreferrer"">matplotlib documentation</a>, </p>

<pre><code>font = {'family' : 'normal',
        'weight' : 'bold',
        'size'   : 22}

matplotlib.rc('font', **font)
</code></pre>

<p>This sets the font of all items to the font specified by the kwargs object, <code>font</code>.</p>

<p>Alternatively, you could also use the <code>rcParams</code> <code>update</code> method as suggested in <a href=""https://stackoverflow.com/a/6441839/605121"">this answer</a>:</p>

<pre><code>matplotlib.rcParams.update({'font.size': 22})
</code></pre>

<p>You can find a full list of available properties on the <a href=""http://matplotlib.org/users/customizing.html"" rel=""noreferrer"">Customizing matplotlib page</a>.</p>
","3900167"
"Python: Split string with multiple delimiters","355120","","<p>I found some answers online, but I have no experience with regular expressions, which I believe is what is needed here.</p>

<p>I have a string that needs to be split by either a ';' or ', '
That is, it has to be either a semicolon or a comma followed by a space. Individual commas without trailing spaces should be left untouched</p>

<p>Example string:</p>

<pre><code>""b-staged divinylsiloxane-bis-benzocyclobutene [124221-30-3], mesitylene [000108-67-8]; polymerized 1,2-dihydro-2,2,4- trimethyl quinoline [026780-96-1]""
</code></pre>

<p>should be split into a list containing the following:</p>

<pre><code>('b-staged divinylsiloxane-bis-benzocyclobutene [124221-30-3]' , 'mesitylene [000108-67-8]', 'polymerized 1,2-dihydro-2,2,4- trimethyl quinoline [026780-96-1]') 
</code></pre>
","<p>Luckily, Python has this built-in :)</p>

<pre><code>import re
re.split('; |, ',str)
</code></pre>

<p><strong>Update:</strong><br>Following your comment:</p>

<pre><code>&gt;&gt;&gt; a='Beautiful, is; better*than\nugly'
&gt;&gt;&gt; import re
&gt;&gt;&gt; re.split('; |, |\*|\n',a)
['Beautiful', 'is', 'better', 'than', 'ugly']
</code></pre>
","4998688"
"Best way to strip punctuation from a string in Python","353248","","<p>It seems like there should be a simpler way than:</p>

<pre><code>import string
s = ""string. With. Punctuation?"" # Sample string 
out = s.translate(string.maketrans("""",""""), string.punctuation)
</code></pre>

<p>Is there?</p>
","<p>From an efficiency perspective, you're not going to beat </p>

<pre><code>s.translate(None, string.punctuation)
</code></pre>

<p>It's performing raw string operations in C with a lookup table - there's not much that will beat that but writing your own C code.</p>

<p>If speed isn't a worry, another option though is:</p>

<pre><code>exclude = set(string.punctuation)
s = ''.join(ch for ch in s if ch not in exclude)
</code></pre>

<p>This is faster than s.replace with each char, but won't perform as well as non-pure python approaches such as regexes or string.translate, as you can see from the below timings.  For this type of problem, doing it at as low a level as possible pays off.</p>

<p>Timing code:</p>

<pre><code>import re, string, timeit

s = ""string. With. Punctuation""
exclude = set(string.punctuation)
table = string.maketrans("""","""")
regex = re.compile('[%s]' % re.escape(string.punctuation))

def test_set(s):
    return ''.join(ch for ch in s if ch not in exclude)

def test_re(s):  # From Vinko's solution, with fix.
    return regex.sub('', s)

def test_trans(s):
    return s.translate(table, string.punctuation)

def test_repl(s):  # From S.Lott's solution
    for c in string.punctuation:
        s=s.replace(c,"""")
    return s

print ""sets      :"",timeit.Timer('f(s)', 'from __main__ import s,test_set as f').timeit(1000000)
print ""regex     :"",timeit.Timer('f(s)', 'from __main__ import s,test_re as f').timeit(1000000)
print ""translate :"",timeit.Timer('f(s)', 'from __main__ import s,test_trans as f').timeit(1000000)
print ""replace   :"",timeit.Timer('f(s)', 'from __main__ import s,test_repl as f').timeit(1000000)
</code></pre>

<p>This gives the following results:</p>

<pre><code>sets      : 19.8566138744
regex     : 6.86155414581
translate : 2.12455511093
replace   : 28.4436721802
</code></pre>
","266162"
"How to check file size in python?","352818","","<p>I am writing a Python script in Windows. I want to do something based on the file size. For example, if the size is greater than 0, I will send an email to somebody, otherwise continue to other things. </p>

<p>How do I check the file size?</p>
","<p>Use <a href=""https://docs.python.org/2/library/os.html#os.stat"" rel=""noreferrer""><code>os.stat</code></a>, and use the <code>st_size</code> member of the resulting object:</p>

<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; statinfo = os.stat('somefile.txt')
&gt;&gt;&gt; statinfo
(33188, 422511L, 769L, 1, 1032, 100, 926L, 1105022698,1105022732, 1105022732)
&gt;&gt;&gt; statinfo.st_size
926L
</code></pre>

<p>Output is in bytes.</p>
","2104107"
"How to set the current working directory?","352585","","<p>How to set the current working directory in Python?</p>
","<p>Try <a href=""http://docs.python.org/library/os.html#os.chdir"" rel=""noreferrer""><code>os.chdir</code></a></p>

<blockquote>
<pre><code>os.chdir(path)
</code></pre>
  
  <p>        Change the current working directory to path. Availability: Unix, Windows.</p>
</blockquote>
","1810760"
"Python: how can I check if the key of an dictionary exists?","351779","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/1602934/what-is-a-good-way-to-test-if-a-key-exists-in-python-dictionary"">What is a good way to test if a Key exists in Python Dictionary</a>  </p>
</blockquote>



<p>Let's say I have an associative array like so: <code>{'key1': 22, 'key2': 42}</code>.</p>

<p>How can I check if <code>key1</code> exists in the dictionary?</p>
","<pre><code>if key in array:
  # do something
</code></pre>

<p>Associative arrays are called dictionaries in Python and you can learn more about them in <a href=""http://docs.python.org/library/stdtypes.html#dict"" rel=""noreferrer"">the stdtypes documentation</a>.</p>
","3845371"
"How to initialize a two-dimensional array in Python?","351670","","<p>I'm beginning python and I'm trying to use a two-dimensional list, that I initially fill up with the same variable in every place. I came up with this:</p>

<pre><code>def initialize_twodlist(foo):
    twod_list = []
    new = []
    for i in range (0, 10):
        for j in range (0, 10):
            new.append(foo)
        twod_list.append(new)
        new = []
</code></pre>

<p>It gives the desired result, but feels like a workaround. Is there an easier/shorter/more elegant way to do this?</p>
","<p>A pattern that often came up in Python was</p>

<pre><code>bar = []
for item in some_iterable:
    bar.append(SOME EXPRESSION)
</code></pre>

<p>which helped motivate the introduction of list comprehensions, which convert that snippet to</p>

<pre><code>bar = [SOME EXPRESSION for item in some_iterable]
</code></pre>

<p>which is shorter and sometimes clearer. Usually you get in the habit of recognizing these and often replacing loops with comprehensions.</p>

<p>Your code follows this pattern twice</p>

<pre><code>twod_list = []                                       \                      
for i in range (0, 10):                               \
    new = []                  \ can be replaced        } this too
    for j in range (0, 10):    } with a list          /
        new.append(foo)       / comprehension        /
    twod_list.append(new)                           /
</code></pre>
","2397192"
"Use different Python version with virtualenv","350824","","<p>I have a Debian system currently running with python 2.5.4. I got virtualenv properly installed, everything is working fine. Is there a possibility that I can use a virtualenv with a different version of Python?</p>

<p>I compiled Python 2.6.2 and would like to use it with some virtualenv. Is it enough to overwrite the binary file? Or do I have to change something in respect to the libraries?</p>
","<p>Just use the <code>--python</code> (or short <code>-p</code>) option when creating your virtualenv instance to specify the Python executable you want to use, e.g.:</p>

<pre><code>virtualenv --python=/usr/bin/python2.6 &lt;path/to/new/virtualenv/&gt;
</code></pre>

<p>N.B. For <strong>Python 3.3</strong> or later, refer to The Aelfinn's <a href=""https://stackoverflow.com/a/39713544/1450294"">answer</a> below. <em>[Editor's note: I know this should normally be a comment, not an edit, but a new comment would be hidden, and I just spent 45 minutes untangling errors because this important answer was buried under three or four parrot answers. I'm just trying to save everyone time here.]</em></p>
","1534343"
"The difference between sys.stdout.write and print?","349286","","<p>Are there situations in which <code>sys.stdout.write()</code> is preferable to <code>print</code>? </p>

<p>(<strong>Examples:</strong> better performance; code that makes more sense)</p>
","<p><code>print</code> is just a thin wrapper that formats the inputs (space between args and newline at the end) and calls the write function of a given object. By default this object is <code>sys.stdout</code>, but you can pass a file using the ""chevron"" form. For example:</p>

<pre><code>print &gt;&gt; open('file.txt', 'w'), 'Hello', 'World', 2+3
</code></pre>

<p>See: <a href=""https://docs.python.org/2/reference/simple_stmts.html?highlight=print#the-print-statement"" rel=""noreferrer"">https://docs.python.org/2/reference/simple_stmts.html?highlight=print#the-print-statement</a></p>

<hr>

<p>In Python 3.x, <code>print</code> becomes a function, but it is still possible to pass something else than <code>sys.stdout</code> thanks to the <code>file</code>argument.</p>

<pre><code>print('Hello', 'World', 2+3, file=open('file.txt', 'w'))
</code></pre>

<p>See <a href=""https://docs.python.org/3/library/functions.html#print"" rel=""noreferrer"">https://docs.python.org/3/library/functions.html#print</a></p>

<hr>

<p>In Python 2.6+, <code>print</code> is still a statement, but it can be used as a function with</p>

<pre><code>from __future__ import print_function
</code></pre>

<hr>

<p>Update: There is a little difference between the print function and the print statement (and more generally between a function and a statement) pointed by Bakuriu in comments.</p>

<p>In case of error when evaluating arguments:</p>

<pre><code>print ""something"", 1/0, ""other"" #prints only something because 1/0 raise an Exception

print(""something"", 1/0, ""other"") #doesn't print anything. The func is not called
</code></pre>
","3263763"
"Python: Convert Unicode to ASCII without errors","349278","","<p>My code just scrapes a web page, then converts it to Unicode.</p>

<pre><code>html = urllib.urlopen(link).read()
html.encode(""utf8"",""ignore"")
self.response.out.write(html)
</code></pre>

<p>But I get a <code>UnicodeDecodeError</code>:</p>

<hr>

<pre><code>Traceback (most recent call last):
  File ""/Applications/GoogleAppEngineLauncher.app/Contents/Resources/GoogleAppEngine-default.bundle/Contents/Resources/google_appengine/google/appengine/ext/webapp/__init__.py"", line 507, in __call__
    handler.get(*groups)
  File ""/Users/greg/clounce/main.py"", line 55, in get
    html.encode(""utf8"",""ignore"")
UnicodeDecodeError: 'ascii' codec can't decode byte 0xa0 in position 2818: ordinal not in range(128)
</code></pre>

<p>So I assume that means the HTML contains some wrongly-formed attempt at Unicode somewhere. Can I just drop whatever code bytes are causing the problem instead of getting an error?</p>
","<p>Can we get the actual value used for <code>link</code>?</p>

<p>In addition, we usually encounter this problem here when we are trying to <code>.encode()</code> an already encoded byte string. So you might try to decode it first as in</p>

<pre><code>html = urllib.urlopen(link).read()
unicode_str = html.decode(&lt;source encoding&gt;)
encoded_str = unicode_str.encode(""utf8"")
</code></pre>

<p>As an example:</p>

<pre><code>html = '\xa0'
encoded_str = html.encode(""utf8"")
</code></pre>

<p>Fails with</p>

<pre><code>UnicodeDecodeError: 'ascii' codec can't decode byte 0xa0 in position 0: ordinal not in range(128)
</code></pre>

<p>While:</p>

<pre><code>html = '\xa0'
decoded_str = html.decode(""windows-1252"")
encoded_str = decoded_str.encode(""utf8"")
</code></pre>

<p>Succeeds without error. Do note that ""windows-1252"" is something I used as an <em>example</em>. I got this from chardet and it had 0.5 confidence that it is right! (well, as given with a 1-character-length string, what do you expect) You should change that to the encoding of the byte string returned from <code>.urlopen().read()</code> to what applies to the content you retrieved.</p>

<p>Another problem I see there is that the <code>.encode()</code> string method returns the modified string and does not modify the source in place. So it's kind of useless to have <code>self.response.out.write(html)</code> as html is not the encoded string from html.encode (if that is what you were originally aiming for).</p>

<p>As Ignacio suggested, check the source webpage for the actual encoding of the returned string from <code>read()</code>. It's either in one of the Meta tags or in the ContentType header in the response. Use that then as the parameter for <code>.decode()</code>.</p>

<p>Do note however that it should not be assumed that other developers are responsible enough to make sure the header and/or meta character set declarations match the actual content. (Which is a PITA, yeah, I should know, I <em>was</em> one of those before).</p>
","2368248"
"Python function global variables?","348733","","<p>I know I should avoid using global variables in the first place due to confusion like this, but if I were to use them, is the following a valid way to go about using them? (I am trying to call the global copy of a variable created in a separate function.)</p>

<pre><code>x = somevalue

def func_A ():
   global x
   # Do things to x
   return x

def func_B():
   x=func_A()
   # Do things
   return x

func_A()
func_B()
</code></pre>

<p>Does the <code>x</code> that the second function uses have the same value of the global copy of <code>x</code> that <code>func_a</code> uses and modifies? When calling the functions after definition, does order matter?</p>
","<p>If you want to simply access a global variable you just use its name. However to <strong>change</strong> its value you need to use the <a href=""https://docs.python.org/reference/simple_stmts.html#the-global-statement""><code>global</code></a> keyword.</p>

<p>E.g.</p>

<pre><code>global someVar
someVar = 55
</code></pre>

<p>This would change the value of the global variable to 55. Otherwise it would just assign 55 to a local variable.</p>

<p>The order of function definition listings doesn't matter (assuming they don't refer to each other in some way), the order they are called does.</p>
","10588342"
"What is the use of ""assert"" in Python?","348494","","<p>I have been reading some source code and in several places I have seen the usage of <code>assert</code>. </p>

<p>What does it mean exactly? What is its usage?</p>
","<p>The <code>assert</code> statement exists in almost every programming language. When you do...</p>

<pre><code>assert condition
</code></pre>

<p>... you're telling the program to test that condition, and trigger an error if the condition is false.</p>

<p>In Python, it's roughly equivalent to this:</p>

<pre><code>if not condition:
    raise AssertionError()
</code></pre>

<p>Try it in the Python shell:</p>

<pre><code>&gt;&gt;&gt; assert True # nothing happens
&gt;&gt;&gt; assert False
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
AssertionError
</code></pre>

<p>Assertions can include an optional message, and you can disable them when you're done debugging. See <a href=""http://docs.python.org/reference/simple_stmts.html#assert"" rel=""noreferrer"">here</a> for the relevant documentation.</p>
","5142453"
"Changing the ""tick frequency"" on x or y axis in matplotlib?","347080","","<p>I am trying to fix how python plots my data.</p>

<p>Say </p>

<pre><code>x = [0,5,9,10,15]
</code></pre>

<p>and </p>

<pre><code>y = [0,1,2,3,4]
</code></pre>

<p>Then I would do:</p>

<pre><code>matplotlib.pyplot.plot(x,y)
matplotlib.pyplot.show()
</code></pre>

<p>and the x axis' ticks are plotted in intervals of 5. Is there a way to make it show intervals of 1?</p>
","<p>You could explicitly set where you want to tick marks with <code>plt.xticks</code>:</p>

<pre><code>plt.xticks(np.arange(min(x), max(x)+1, 1.0))
</code></pre>

<hr>

<p>For example,</p>

<pre><code>import numpy as np
import matplotlib.pyplot as plt

x = [0,5,9,10,15]
y = [0,1,2,3,4]
plt.plot(x,y)
plt.xticks(np.arange(min(x), max(x)+1, 1.0))
plt.show()
</code></pre>

<hr>

<p>(<code>np.arange</code> was used rather than Python's <code>range</code> function just in case <code>min(x)</code> and <code>max(x)</code> are floats instead of ints.) </p>

<hr>

<p>The <code>plt.plot</code> (or <code>ax.plot</code>) function will automatically set default <code>x</code> and <code>y</code> limits. If you wish to keep those limits, and just change the stepsize of the tick marks, then you could use <code>ax.get_xlim()</code> to discover what limits Matplotlib has already set. </p>

<pre><code>start, end = ax.get_xlim()
ax.xaxis.set_ticks(np.arange(start, end, stepsize))
</code></pre>

<p>The default tick formatter should do a decent job rounding the tick values to a sensible number of significant digits. However, if you wish to have more control over the format, you can define your own formatter. For example,</p>

<pre><code>ax.xaxis.set_major_formatter(ticker.FormatStrFormatter('%0.1f'))
</code></pre>

<p>Here's a runnable example:</p>

<pre><code>import numpy as np
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker

x = [0,5,9,10,15]
y = [0,1,2,3,4]
fig, ax = plt.subplots()
ax.plot(x,y)
start, end = ax.get_xlim()
ax.xaxis.set_ticks(np.arange(start, end, 0.712123))
ax.xaxis.set_major_formatter(ticker.FormatStrFormatter('%0.1f'))
plt.show()
</code></pre>
","12608937"
"Getting the index of the returned max or min item using max()/min() on a list","346693","","<p>I'm using Python's <code>max</code> and <code>min</code> functions on lists for a minimax algorithm, and I need the index of the value returned by <code>max()</code> or <code>min()</code>. In other words, I need to know which move produced the max (at a first player's turn) or min (second player) value.</p>

<pre><code>for i in range(9):
    newBoard = currentBoard.newBoardWithMove([i / 3, i % 3], player)

    if newBoard:
        temp = minMax(newBoard, depth + 1, not isMinLevel)  
        values.append(temp)

if isMinLevel:
    return min(values)
else:
    return max(values)
</code></pre>

<p>I need to be able to return the actual index of the min or max value, not just the value.</p>
","<pre>
if isMinLevel:
    return values.index(min(values))
else:
    return values.index(max(values))
</pre>
","2474030"
"Using Python 3 in virtualenv","345994","","<p>Using <a href=""https://virtualenv.pypa.io/en/latest/"">virtualenv</a>, I run my projects with the default version of Python (2.7). On one project, I need to use Python 3.4. </p>

<p>I used <code>brew install python3</code> to install it on my Mac. Now, how do I create a virtualenv that uses the new version?</p>

<p>e.g. sudo virtualenv envPython3</p>

<p>If I try:</p>

<pre><code>virtualenv -p python3 test
</code></pre>

<p>I get:</p>

<pre><code>Running virtualenv with interpreter /usr/local/bin/python3
Using base prefix '/usr/local/Cellar/python3/3.4.0_1/Frameworks/Python.framework/Versions/3.4'
New python executable in test/bin/python3.4
Also creating executable in test/bin/python
Failed to import the site module
Traceback (most recent call last):
  File ""/Users/user/Documents/workspace/test/test/bin/../lib/python3.4/site.py"", line 67, in &lt;module&gt;
    import os
  File ""/Users/user/Documents/workspace/test/test/bin/../lib/python3.4/os.py"", line 634, in &lt;module&gt;
    from _collections_abc import MutableMapping
ImportError: No module named '_collections_abc'
ERROR: The executable test/bin/python3.4 is not functioning
ERROR: It thinks sys.prefix is '/Users/user/Documents/workspace/test' (should be '/Users/user/Documents/workspace/test/test')
ERROR: virtualenv is not compatible with this system or executable
</code></pre>
","<p>simply run</p>

<pre><code>virtualenv -p python3 envname
</code></pre>

<p>Update after OP's edit:</p>

<p>There was a bug in the OP's version of virtualenv, as described <a href=""https://github.com/pypa/virtualenv/issues/463"" rel=""noreferrer"">here</a>. The problem was fixed by running:</p>

<pre><code>pip install --upgrade virtualenv
</code></pre>
","23842752"
"How to leave/exit/deactivate a python virtualenv?","345365","","<p>I'm using virtualenv and the virtualenvwrapper. I can switch between virtualenv's just fine using the workon command. </p>

<pre><code>me@mymachine:~$ workon env1
(env1)me@mymachine:~$ workon env2
(env2)me@mymachine:~$ workon env1
(env1)me@mymachine:~$ 
</code></pre>

<p>However, how do I exit all virtual machines and workon my real machine again? Right now, the only way I have of getting back to</p>

<pre><code>me@mymachine:~$ 
</code></pre>

<p>is to exit the shell and start a new one. That's kind of annoying. Is there a command to workon ""nothing"", and if so, what is it? If such a command does not exist, how would I go about creating it?</p>
","<p>Usually, activating a virtualenv gives you a shell function named:</p>

<pre><code>$ deactivate
</code></pre>

<p>which puts things back to normal.</p>

<h3>Edit 1</h3>

<p>I have just looked specifically again at the code for <code>virtualenvwrapper,</code> and, yes, it too supports <code>deactivate</code> as the way to escape from all virtualenvs.</p>

<h3>Edit 2</h3>

<p>If you are trying to leave an <em>Anaconda</em> environment, the procedure is a bit different: run the two-word command <code>source deactivate</code> since they implement deactivation using a stand-alone script.</p>

<pre><code>bash-4.3$ deactivate
pyenv-virtualenv: deactivate must be sourced. Run 'source deactivate' instead of 'deactivate'
bash-4.3$ source deactivate
pyenv-virtualenv: no virtualenv has been activated.
</code></pre>
","990779"
"Creating a JSON response using Django and Python","344606","","<p>I'm trying to convert a server side Ajax response script into a Django HttpResponse, but apparently it's not working.</p>

<p>This is the server-side script:</p>

<pre><code>/* RECEIVE VALUE */
$validateValue=$_POST['validateValue'];
$validateId=$_POST['validateId'];
$validateError=$_POST['validateError'];

/* RETURN VALUE */
$arrayToJs = array();
$arrayToJs[0] = $validateId;
$arrayToJs[1] = $validateError;

if($validateValue ==""Testuser""){  // Validate??
    $arrayToJs[2] = ""true"";       // RETURN TRUE
    echo '{""jsonValidateReturn"":'.json_encode($arrayToJs).'}';  // RETURN ARRAY WITH success
}
else{
    for($x=0;$x&lt;1000000;$x++){
        if($x == 990000){
            $arrayToJs[2] = ""false"";
            echo '{""jsonValidateReturn"":'.json_encode($arrayToJs).'}';   // RETURNS ARRAY WITH ERROR.
        }
    }
}
</code></pre>

<p>And this is the converted code</p>

<pre><code>def validate_user(request):
    if request.method == 'POST':
        vld_value = request.POST.get('validateValue')
        vld_id = request.POST.get('validateId')
        vld_error = request.POST.get('validateError')

        array_to_js = [vld_id, vld_error, False]

        if vld_value == ""TestUser"":
            array_to_js[2] = True
            x = simplejson.dumps(array_to_js)
            return HttpResponse(x)
        else:
            array_to_js[2] = False
            x = simplejson.dumps(array_to_js)
            error = 'Error'
            return render_to_response('index.html',{'error':error},context_instance=RequestContext(request))
    return render_to_response('index.html',context_instance=RequestContext(request))
</code></pre>

<p>I'm using simplejson to encode the Python list (so it will return a JSON array). I couldn't figure out the problem yet. But I think that I did something wrong about the 'echo'.</p>
","<p>I usually use a dictionary, not a list to return JSON content. </p>

<pre><code>import json

from django.http import HttpResponse

response_data = {}
response_data['result'] = 'error'
response_data['message'] = 'Some error message'
</code></pre>

<p>Pre-Django 1.7 you'd return it like this:</p>

<pre><code>return HttpResponse(json.dumps(response_data), content_type=""application/json"")
</code></pre>

<p>For Django 1.7+, use <a href=""https://docs.djangoproject.com/en/dev/ref/request-response/#jsonresponse-objects"" rel=""noreferrer""><code>JsonResponse</code></a> as shown in <a href=""https://stackoverflow.com/a/24411716/7376"">this SO answer</a> like so : </p>

<pre><code>from django.http import JsonResponse
return JsonResponse({'foo':'bar'})
</code></pre>
","2428119"
"Python - Create list with numbers between 2 values?","344434","","<p>How would I create a list with values between 2 values I put in? 
For example, following list is generated for values between 11 and 16:</p>

<pre><code>list = [11, 12, 13, 14, 15, 16]
</code></pre>
","<p>Use <a href=""http://docs.python.org/2.7/library/functions.html#range"" rel=""noreferrer""><code>range</code></a>. In Python 2.x it returns a list so all you need is,</p>

<pre><code>&gt;&gt;&gt; range(11, 17)
[11, 12, 13, 14, 15, 16]
</code></pre>

<p>In Python 3.x it's a iterator so you need to convert it to a list,</p>

<pre><code>&gt;&gt;&gt; list(range(11, 17))
[11, 12, 13, 14, 15, 16]
</code></pre>

<p><strong>Note</strong>: Second number is exclusive so here it needs to be <code>16+1</code> = <code>17</code></p>

<p>EDIT:</p>

<p>To response to the question about incrementing by <code>0.5</code> the easiest option would probably be to use <a href=""https://pypi.python.org/pypi/numpy"" rel=""noreferrer""><code>numpy</code></a>'s <code>arange</code>,</p>

<pre><code>&gt;&gt;&gt; numpy.arange(11, 17, 0.5)
array([ 11. ,  11.5,  12. ,  12.5,  13. ,  13.5,  14. ,  14.5,  15. ,
        15.5,  16. ,  16.5])
</code></pre>
","18265979"
"How do I update pip itself from inside my virtual environment?","344374","","<p>I'm able to update pip-managed packages, but how do I update pip itself? According to <code>pip --version</code>, I currently have pip 1.1 installed in my virtualenv and I want to update to the latest version. </p>

<p>What's the command for that? Do I need to use distribute or is there a native pip or virtualenv command? I've already tried <code>pip update</code> and <code>pip update pip</code> with no success.</p>
","<p><code>pip</code> is just a <a href=""https://pypi.python.org/pypi/pip"">PyPI package</a> like any other; you could use it to upgrade itself the same way you would upgrade any package:</p>

<pre><code>pip install --upgrade pip
</code></pre>

<p>On Windows the <a href=""https://pip.pypa.io/en/stable/installing/#upgrading-pip"">recommended command</a> is:</p>

<pre><code>python -m pip install --upgrade pip
</code></pre>
","15223296"
"Python 2.7 getting user input and manipulating as string without quotations","343885","","<p>I want to get a string from a user, and then to manipulate it.</p>

<pre><code>testVar = input(""Ask user for something."")
</code></pre>

<p>Is there a way for testVar to be a string without me having the user type his response in quotes?  i.e. ""Hello"" vs. Hello</p>

<p>If the user types in Hello, I get the following error:</p>

<p>NameError: name 'Hello' is not defined</p>
","<p>Use <code>raw_input()</code> instead of <code>input()</code>:</p>

<pre><code>testVar = raw_input(""Ask user for something."")
</code></pre>

<p><code>input()</code> actually evaluates the input as Python code.  I suggest to never use it.  <code>raw_input()</code> returns the verbatim string entered by the user.</p>
","4960216"
"Python string.replace regular expression","343727","","<p>I have a parameter file of the form</p>

<pre><code>parameter-name parameter-value
</code></pre>

<p>where the parameters may be in any order but there is only one parameter per line.  I want to replace one parameter's parameter-value with a new value.</p>

<p>I am using a line replace function posted previously (<a href=""https://stackoverflow.com/questions/39086/search-and-replace-a-line-in-a-file-in-python"">Search and replace a line in a file in Python</a>) to replace the line which uses python's <a href=""http://www.tutorialspoint.com/python/string_replace.htm%20String.Replace"" rel=""noreferrer"">string.replace</a>(pattern, subst).  The regular expression that I'm using works for instance in vim but doesn't appear to work in string.replace.  Here is the regular expression that I'm using:</p>

<pre><code>line.replace(""^.*interfaceOpDataFile.*$/i"", ""interfaceOpDataFile %s"" % (fileIn))
</code></pre>

<p>where interfaceOpDataFile is the parameter name that I'm replacing (/i for case insensitive) and the new parameter value is the contents of the fileIn variable.  Is there a way to get python to recognize this regular expression or else is there another way to accomplish this task?  Thanks in advance.</p>
","<p><code>str.replace()</code> <sup><a href=""https://docs.python.org/2/library/stdtypes.html#str.replace"" rel=""noreferrer"">v2</a>|<a href=""https://docs.python.org/3/library/stdtypes.html#str.replace"" rel=""noreferrer"">v3</a></sup> does not recognize regular expressions. </p>

<p>To perform a substitution using a regular expression, use <code>re.sub()</code> <sup><a href=""https://docs.python.org/2/library/re.html#re.sub"" rel=""noreferrer"">v2</a>|<a href=""https://docs.python.org/3/library/re.html#re.sub"" rel=""noreferrer"">v3</a></sup>.</p>

<p>For example:</p>

<pre><code>import re

line = re.sub(
           r""(?i)^.*interfaceOpDataFile.*$"", 
           ""interfaceOpDataFile %s"" % fileIn, 
           line
       )
</code></pre>

<p>In a loop, it would be better to compile the regular expression first:</p>

<pre><code>import re

regex = re.compile(r""^.*interfaceOpDataFile.*$"", re.IGNORECASE)
for line in some_file:
    line = regex.sub(""interfaceOpDataFile %s"" % fileIn, line)
    # do something with the updated line
</code></pre>
","16720705"
"How to extract a substring from inside a string in Python?","343527","","<p>Let's say I have a string <code>'gfgfdAAA1234ZZZuijjk'</code> and I want to extract just the <code>'1234'</code> part.</p>

<p>I only know what will be the few characters directly before <code>AAA</code>, and after <code>ZZZ</code> the part I am interested in <code>1234</code>.</p>

<p>With <code>sed</code> it is possible to do something like this with a string:</p>

<pre><code>echo ""$STRING"" | sed -e ""s|.*AAA\(.*\)ZZZ.*|\1|""
</code></pre>

<p>And this will give me <code>1234</code> as a result.</p>

<p>How to do the same thing in Python?</p>
","<p>Using regular expressions - <a href=""http://docs.python.org/2/library/re.html"" rel=""noreferrer"">documentation</a> for further reference</p>

<pre><code>import re

text = 'gfgfdAAA1234ZZZuijjk'

m = re.search('AAA(.+?)ZZZ', text)
if m:
    found = m.group(1)

# found: 1234
</code></pre>

<p>or:</p>

<pre><code>import re

text = 'gfgfdAAA1234ZZZuijjk'

try:
    found = re.search('AAA(.+?)ZZZ', text).group(1)
except AttributeError:
    # AAA, ZZZ not found in the original string
    found = '' # apply your error handling

# found: 1234
</code></pre>
","4667014"
"finding and replacing elements in a list (python)","343505","","<p>I have to search through a list and replace all occurrences of one element with another. So far my attempts in code are getting me nowhere, what is the best way to do this?</p>

<p>For example, suppose my list has the following integers</p>

<pre><code>&gt;&gt;&gt; a = [1,2,3,4,5,1,2,3,4,5,1]
</code></pre>

<p>and I need to replace all occurrences of the number 1 with the value 10 so the output I need is </p>

<pre><code>&gt;&gt;&gt; a = [10, 2, 3, 4, 5, 10, 2, 3, 4, 5, 10]
</code></pre>

<p>Thus my goal is to replace all instances of the number 1 with the number 10.</p>
","<pre><code>&gt;&gt;&gt; a=[1,2,3,4,5,1,2,3,4,5,1]
&gt;&gt;&gt; for n,i in enumerate(a):
...   if i==1:
...      a[n]=10
...
&gt;&gt;&gt; a
[10, 2, 3, 4, 5, 10, 2, 3, 4, 5, 10]
</code></pre>
","2582183"
"Split string on whitespace in Python","342982","","<p>I'm looking for the Python equivalent of </p>

<pre><code>String str = ""many   fancy word \nhello    \thi"";
String whiteSpaceRegex = ""\\s"";
String[] words = str.split(whiteSpaceRegex);

[""many"", ""fancy"", ""word"", ""hello"", ""hi""]
</code></pre>
","<p>The <code>str.split()</code> method without an argument splits on whitespace:</p>

<pre><code>&gt;&gt;&gt; ""many   fancy word \nhello    \thi"".split()
['many', 'fancy', 'word', 'hello', 'hi']
</code></pre>
","8113787"
"How to clear the interpreter console?","342955","","<p>Like most Python developers, I typically keep a console window open with the Python interpreter running to test commands, dir() stuff, help() stuff, etc.</p>

<p>Like any console, after a while the visible backlog of past commands and prints gets to be cluttered, and sometimes confusing when re-running the same command several times.  I'm wondering if, and how, to clear the Python interpreter console.</p>

<p>I've heard about doing a system call and either calling <code>cls</code> on Windows or <code>clear</code> on Linux, but I was hoping there was something I could command the interpreter itself to do.</p>

<p><strong>Note:</strong> I'm running on Windows, so Ctrl+L doesn't work.</p>
","<p>As you mentioned, you can do a system call:</p>

<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; clear = lambda: os.system('cls')
&gt;&gt;&gt; clear()
</code></pre>

<p>I am not sure of any other way in Windows.</p>
","518007"
"Python creating a dictionary of lists","342822","","<p>I want to create a dictionary whose values are lists.  For example: </p>

<pre><code>{
  1: ['1'],
  2: ['1','2'],
  3: ['2']
}
</code></pre>

<p>If I do:</p>

<pre><code>d = dict()
a = ['1', '2']
for i in a:
    for j in range(int(i), int(i) + 2): 
        d[j].append(i)
</code></pre>

<p>I get a KeyError, because d[...] isn't a list.  In this case, I can add the following code after the assignment of a to initialize the dictionary. </p>

<pre><code>for x in range(1, 4):
    d[x] = list()
</code></pre>

<p>Is there a better way to do this?  Lets say I don't know the keys I am going to need until I am in the second <code>for</code> loop.  For example:</p>

<pre><code>class relation:
    scope_list = list()
...
d = dict()
for relation in relation_list:
    for scope_item in relation.scope_list:
        d[scope_item].append(relation)
</code></pre>

<p>An alternative would then be replacing </p>

<pre><code>d[scope_item].append(relation)
</code></pre>

<p>with </p>

<pre><code>if d.has_key(scope_item):
    d[scope_item].append(relation)
else:
    d[scope_item] = [relation,]
</code></pre>

<p>What is the best way to handle this?  Ideally, appending would ""just work"".  Is there some way to express that I want a dictionary of empty lists, even if I don't know every key when I first create the list?</p>
","<p>You can use <a href=""http://docs.python.org/library/collections.html#collections.defaultdict"" rel=""noreferrer"">defaultdict</a>:</p>

<pre><code>&gt;&gt;&gt; from collections import defaultdict
&gt;&gt;&gt; d = defaultdict(list)
&gt;&gt;&gt; for i in a:
...   for j in range(int(i), int(i) + 2):
...     d[j].append(i)
...
&gt;&gt;&gt; d
defaultdict(&lt;type 'list'&gt;, {1: ['1'], 2: ['1', '2'], 3: ['2']})
&gt;&gt;&gt; d.items()
[(1, ['1']), (2, ['1', '2']), (3, ['2'])]
</code></pre>
","960753"
"How do I remove a substring from the end of a string in Python?","341244","","<p>I have the following code:</p>

<pre><code>url = 'abcdc.com'
print(url.strip('.com'))
</code></pre>

<p>I expected: <code>abcdc</code></p>

<p>I got: <code>abcd</code></p>

<p>Now I do </p>

<pre><code>url.rsplit('.com', 1)
</code></pre>

<p>Is there a better way?</p>
","<p>You could do this:</p>

<pre><code>url = 'abcdc.com'
if url.endswith('.com'):
    url = url[:-4]
</code></pre>

<p>Or using regular expressions:</p>

<pre><code>import re
url = 'abcdc.com'
url = re.sub('\.com$', '', url)
</code></pre>
","1038845"
"Retrieving python module path","340502","","<p>I want to detect whether module has changed. Now, using inotify is simple, you just need to know the directory you want to get notifications from.</p>

<p>How do I retrieve a module's path in python?</p>
","<pre><code>import a_module
print a_module.__file__
</code></pre>

<p>Will actually give you the path to the .pyc file that was loaded, at least on Mac OS X. So I guess you can do</p>

<pre><code>import os
path = os.path.dirname(amodule.__file__)
</code></pre>

<p>You can also try</p>

<pre><code>path = os.path.abspath(amodule.__file__)
</code></pre>

<p>To get the directory to look for changes.</p>
","248862"
"Call a function from another file in Python","340002","","<p>Set_up: I have a .py file for each function I need to use in a program.</p>

<p>In this program, I need to call the function from the external files.</p>

<p>I've tried:</p>

<pre><code>from file.py import function(a,b)
</code></pre>

<p>But I get the error:</p>

<blockquote>
  <p>ImportError: No module named 'file.py'; file is not a package</p>
</blockquote>

<p>How do I fix this problem?</p>
","<p>There isn't any need to add <code>file.py</code> while importing. Just write <code>from file import function</code>, and then call the function using <code>function(a, b)</code>. The reason why this may not work, is because <code>file</code> is one of Python's core modules, so I suggest you change the name of your file.</p>

<p>Note that if you're trying to import functions from <code>a.py</code> to a file called <code>b.py</code>, you will need to make sure that <code>a.py</code> and <code>b.py</code> are in the same directory.</p>
","20309470"
"Single quotes vs. double quotes in Python","339069","","<p>According to the documentation, they're pretty much interchangeable.  Is there a stylistic reason to use one over the other?</p>
","<p>I like to use double quotes around strings that are used for interpolation or that are natural language messages, and single quotes for small symbol-like strings, but will break the rules if the strings contain quotes, or if I forget. I use triple double quotes for docstrings and raw string literals for regular expressions even if they aren't needed.</p>

<p>For example:</p>

<pre><code>LIGHT_MESSAGES = {
    'English': ""There are %(number_of_lights)s lights."",
    'Pirate':  ""Arr! Thar be %(number_of_lights)s lights.""
}

def lights_message(language, number_of_lights):
    """"""Return a language-appropriate string reporting the light count.""""""
    return LIGHT_MESSAGES[language] % locals()

def is_pirate(message):
    """"""Return True if the given message sounds piratical.""""""
    return re.search(r""(?i)(arr|avast|yohoho)!"", message) is not None
</code></pre>
","56190"
"Python int to binary?","338574","","<p>Are there any canned Python methods to convert an Integer (or Long) into a binary string in Python?</p>

<p>There are a myriad of dec2bin() functions out on Google... But I was hoping I could use a built-in function / library.</p>
","<p>Python's string format method can take a format spec. </p>

<pre><code>&gt;&gt;&gt; ""{0:b}"".format(37)
'100101'
</code></pre>

<p><a href=""https://docs.python.org/2/library/string.html#formatspec"" rel=""noreferrer"">Format spec docs for Python 2</a> </p>

<p><a href=""https://docs.python.org/3/library/string.html#formatspec"" rel=""noreferrer"">Format spec docs for Python 3</a></p>
","699891"
"Examples for string find in Python","338382","","<p>I am trying to find some examples but no luck. Does anyone know of some examples on the net? I would like to know what it returns when it can't find, and how to specify from start to end, which I guess is going to be 0, -1.</p>
","<p>you can use <a href=""http://docs.python.org/library/stdtypes.html?highlight=index#str.index"" rel=""noreferrer""><code>str.index</code></a> too:</p>

<pre><code>&gt;&gt;&gt; 'sdfasdf'.index('cc')
Traceback (most recent call last):
  File ""&lt;pyshell#144&gt;"", line 1, in &lt;module&gt;
    'sdfasdf'.index('cc')
ValueError: substring not found
&gt;&gt;&gt; 'sdfasdf'.index('df')
1
</code></pre>
","674775"
"What does ** (double star/asterisk) and * (star/asterisk) do for parameters?","338343","","<p>In the following method definitions, what does the <code>*</code> and <code>**</code> do for <code>param2</code>?</p>

<pre><code>def foo(param1, *param2):
def bar(param1, **param2):
</code></pre>
","<p>The <code>*args</code> and <code>**kwargs</code> is a common idiom to allow arbitrary number of arguments to functions as described in the section <a href=""http://docs.python.org/dev/tutorial/controlflow.html#more-on-defining-functions"" rel=""noreferrer"">more on defining functions</a> in the Python documentation.</p>

<p>The <code>*args</code> will give you all function parameters <a href=""https://docs.python.org/dev/tutorial/controlflow.html#arbitrary-argument-lists"" rel=""noreferrer"">as a tuple</a>:</p>

<pre><code>In [1]: def foo(*args):
   ...:     for a in args:
   ...:         print a
   ...:         
   ...:         

In [2]: foo(1)
1


In [4]: foo(1,2,3)
1
2
3
</code></pre>

<p>The <code>**kwargs</code> will give you all 
<strong>keyword arguments</strong> except for those corresponding to a formal parameter as a dictionary.</p>

<pre><code>In [5]: def bar(**kwargs):
   ...:     for a in kwargs:
   ...:         print a, kwargs[a]
   ...:         
   ...:         

In [6]: bar(name='one', age=27)
age 27
name one
</code></pre>

<p>Both idioms can be mixed with normal arguments to allow a set of fixed and some variable arguments:</p>

<pre><code>def foo(kind, *args, **kwargs):
   pass
</code></pre>

<p>Another usage of the <code>*l</code> idiom is to <strong>unpack argument lists</strong> when calling a function.</p>

<pre><code>In [9]: def foo(bar, lee):
   ...:     print bar, lee
   ...:     
   ...:     

In [10]: l = [1,2]

In [11]: foo(*l)
1 2
</code></pre>

<p>In Python 3 it is possible to use <code>*l</code> on the left side of an assignment (<a href=""http://www.python.org/dev/peps/pep-3132/"" rel=""noreferrer"">Extended Iterable Unpacking</a>), though it gives a list instead of a tuple in this context:</p>

<pre><code>first, *rest = [1,2,3,4]
first, *l, last = [1,2,3,4]
</code></pre>

<p>Also Python 3 adds new semantic (refer <a href=""https://www.python.org/dev/peps/pep-3102/"" rel=""noreferrer"">PEP 3102</a>):</p>

<pre><code>def func(arg1, arg2, arg3, *, kwarg1, kwarg2):
    pass
</code></pre>

<p>Such function accepts only 3 positional arguments, and everything after <code>*</code> can only be passed as keyword arguments.</p>
","36908"
"Permanently add a directory to PYTHONPATH","338256","","<p>Whenever I use <code>sys.path.append</code>, the new directory will be added. However, once I close python, the list will revert to the previous (default?) values. How do I permanently add a directory to PYTHONPATH?</p>
","<p>You need to add your new directory to the environment variable <code>PYTHONPATH</code>, separated by a colon from previous contents thereof.  In any form of Unix, you can do that in a startup script appropriate to whatever shell you're using (<code>.profile</code> or whatever, depending on your favorite shell) with a command which, again, depends on the shell in question; in Windows, you can do it through the system GUI for the purpose.</p>

<p><code>superuser.com</code> may be a better place to ask further, i.e. for more details if you need specifics about how to enrich an environment variable in your chosen platform and shell, since it's not really a programming question per se.</p>
","3402193"
"How can I print variable and string on same line in Python?","337746","","<p>I am using python to work out how many children would be born in 5 years if a child was born every 7 seconds. The problem is on my last line. How do I get a variable to work when I'm printing text either side of it? </p>

<p>Here is my code:</p>

<pre><code>currentPop = 312032486
oneYear = 365
hours = 24
minutes = 60
seconds = 60

# seconds in a single day
secondsInDay = hours * minutes * seconds

# seconds in a year
secondsInYear = secondsInDay * oneYear

fiveYears = secondsInYear * 5

#Seconds in 5 years
print fiveYears

# fiveYears in seconds, divided by 7 seconds
births = fiveYears // 7

print ""If there was a birth every 7 seconds, there would be: "" births ""births""
</code></pre>
","<p>Use <code>,</code> to separate strings and variables while printing:</p>

<pre><code>print ""If there was a birth every 7 seconds, there would be: "",births,""births""
</code></pre>

<p><code>,</code> in print statement separtes the items by a single space:</p>

<pre><code>&gt;&gt;&gt; print ""foo"",""bar"",""spam""
foo bar spam
</code></pre>

<p>or better use <a href=""http://docs.python.org/2/library/string.html#formatspec"">string formatting</a>:</p>

<pre><code>print ""If there was a birth every 7 seconds, there would be: {} births"".format(births)
</code></pre>

<p>String formatting is much more powerful and allows you to do some other things as well, like : padding, fill, alignment,width, set precision etc</p>

<pre><code>&gt;&gt;&gt; print ""{:d} {:03d} {:&gt;20f}"".format(1,2,1.1)
1 002             1.100000
  ^^^
  0's padded to 2
</code></pre>

<p>Demo:</p>

<pre><code>&gt;&gt;&gt; births = 4
&gt;&gt;&gt; print ""If there was a birth every 7 seconds, there would be: "",births,""births""
If there was a birth every 7 seconds, there would be:  4 births

#formatting
&gt;&gt;&gt; print ""If there was a birth every 7 seconds, there would be: {} births"".format(births)
If there was a birth every 7 seconds, there would be: 4 births
</code></pre>
","17153791"
"How do I find the location of Python module sources?","336335","","<p>How do I learn where the source file for a given Python module is installed? Is the method different on Windows than on Linux?</p>

<p>I'm trying to look for the source of the <code>datetime</code> module in particular, but I'm interested in a more general answer as well.</p>
","<p>For a pure python module you can find the source by looking at <code>themodule.__file__</code>.
The datetime module, however, is written in C, and therefore <code>datetime.__file__</code> points to a .so file (there is no <code>datetime.__file__</code> on Windows), and therefore, you can't see the source.</p>

<p>If you download a python source tarball and extract it, the modules' code can be found in the <strong>Modules</strong> subdirectory.</p>

<p>For example, if you want to find the datetime code for python 2.6, you can look at</p>

<pre><code>Python-2.6/Modules/datetimemodule.c
</code></pre>

<p>You can also find the latest Mercurial version on the web at 
<a href=""https://hg.python.org/cpython/file/tip/Modules/_datetimemodule.c"" rel=""noreferrer"">https://hg.python.org/cpython/file/tip/Modules/_datetimemodule.c</a></p>
","269825"
"How do I put a variable inside a String in Python?","336315","","<p>I would like to put an <code>int</code> into a <code>string</code>. This is what I am doing at the moment:</p>

<pre><code>end = smooth(data,window_len=40)
plot.plot(time[0:len(end)],end)
plot.savefig('hanning(40).pdf') #problem line
</code></pre>

<p>I have to run the program for several different numbers instead of the two 40's. So I'd like to do a loop but inserting the variable like this doesn't work:</p>

<pre><code>plot.savefig('hanning',num,'.pdf')
</code></pre>

<p>How do I insert a variable into a Python string?</p>
","<pre><code>plot.savefig('hanning(%d).pdf' % num)
</code></pre>

<p>The <code>%</code> operator, when following a string, allows you to insert values into that string via format codes (the <code>%d</code> in this case). For more details, see the Python documentation:</p>

<p><a href=""https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting"" rel=""noreferrer"">https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting</a></p>
","2960791"
"Programmatically stop execution of python script?","336302","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/73663/terminating-a-python-script"">Terminating a Python script</a>  </p>
</blockquote>



<p>Is it possible to stop execution of a python script at any line with a command?</p>

<p>Like</p>

<pre><code>some code

quit() # quit at this point

some more code (that's not executed)
</code></pre>
","<p><a href=""https://docs.python.org/2/library/sys.html#sys.exit"" rel=""noreferrer"">sys.exit()</a> will do exactly what you want.</p>

<pre><code>import sys
sys.exit(""Error message"")
</code></pre>
","543322"
"How to convert an int to a hex string?","336165","","<p>I want to take an integer (that will be &lt;= 255), to a hex string representation</p>

<p>e.g.: I want to pass in <code>65</code> and get out <code>'\x41'</code>, or <code>255</code> and get <code>'\xff'</code>.</p>

<p>I've tried doing this with the <code>struct.pack('c',</code>65<code>)</code>, but that chokes on anything above <code>9</code> since it wants to take in a single character string.</p>
","<p>You are looking for the <code>chr</code> function.</p>

<p>You seem to be mixing decimal representations of integers and hex representations of integers, so it's not entirely clear what you need. Based on the description you gave, I think one of these snippets shows what you want.</p>

<pre><code>&gt;&gt;&gt; chr(0x65) == '\x65'
True


&gt;&gt;&gt; hex(65)
'0x41'
&gt;&gt;&gt; chr(65) == '\x41'
True
</code></pre>

<p>Note that this is quite different from <em>a string containing an integer as hex</em>. If that is what you want, use the <code>hex</code> builtin.</p>
","2269836"
"Python @property versus getters and setters","335757","","<p>Here is a pure Python-specific design question: </p>

<pre><code>class MyClass(object):
    ...
    def get_my_attr(self):
        ...

    def set_my_attr(self, value):
        ...
</code></pre>

<p>and </p>

<pre><code>class MyClass(object):
    ...        
    @property
    def my_attr(self):
        ...

    @my_attr.setter
    def my_attr(self, value):
        ...
</code></pre>

<p>Python lets us to do it either way. If you would design a Python program, which approach would you use and why?</p>
","<p><em>Prefer properties</em>. It's what they're there for.</p>

<p>The reason is that all attributes are public in Python. Starting names with an underscore or two is just a warning that the given attribute is an implementation detail that may not stay the same in future versions of the code. It doesn't prevent you from actually getting or setting that attribute. Therefore, standard attribute access is the normal, Pythonic way of, well, accessing attributes.</p>

<p>The advantage of properties is that they are syntactically identical to attribute access, so you can change from one to another without any changes to client code. You could even have one version of a class that uses properties (say, for code-by-contract or debugging) and one that doesn't for production, without changing the code that uses it. At the same time, you don't have to write getters and setters for everything just in case you might need to better control access later.</p>
","6618176"
"How to print the full traceback without halting the program?","335728","","<p>I'm writing a program that parses 10 websites, locates data files, saves the files, and then parses them to make data that can be readily used in the NumPy library. There are <strong>tons</strong> of errors this file encounters through bad links, poorly formed XML, missing entries, and other things I've yet to categorize. I initially made this program to handle errors like this:</p>

<pre><code>try:
    do_stuff()
except:
    pass
</code></pre>

<p>But now I want to log errors:</p>

<pre><code>try:
    do_stuff()
except Exception, err:
    print Exception, err
</code></pre>

<p>Note this is printing to a log file for later review. This usually prints very useless data. What I want is to print the exact same lines printed when the error triggers without the try-except intercepting the exception, but I don't want it to halt my program since it is nested in a series of for loops that I would like to see to completion.</p>
","<p>Some other answer have already pointed out the <a href=""http://docs.python.org/3/library/traceback.html"">traceback</a> module.</p>

<p>Please notice that with <code>print_exc</code>, in some corner cases, you will not obtain what you would expect. In Python 2.x:</p>

<pre><code>import traceback

try:
    raise TypeError(""Oups!"")
except Exception, err:
    try:
        raise TypeError(""Again !?!"")
    except:
        pass

    traceback.print_exc()
</code></pre>

<p>...will display the traceback of the <em>last</em> exception:</p>

<pre class=""lang-none prettyprint-override""><code>Traceback (most recent call last):
  File ""e.py"", line 7, in &lt;module&gt;
    raise TypeError(""Again !?!"")
TypeError: Again !?!
</code></pre>

<p><strong>If you really need to access the original <em>traceback</em></strong> one solution is to cache the <em>exception infos</em> as returned from <a href=""https://docs.python.org/2/library/sys.html#sys.exc_info""><code>exc_info</code></a> in a local variable and display it using <a href=""https://docs.python.org/2/library/traceback.html#traceback.print_exception""><code>print_exception</code></a>:</p>

<pre><code>import traceback
import sys

try:
    raise TypeError(""Oups!"")
except Exception, err:
    try:
        exc_info = sys.exc_info()

        # do you usefull stuff here
        # (potentially raising an exception)
        try:
            raise TypeError(""Again !?!"")
        except:
            pass
        # end of useful stuff


    finally:
        # Display the *original* exception
        traceback.print_exception(*exc_info)
        del exc_info
</code></pre>

<p>Producing:</p>

<pre class=""lang-none prettyprint-override""><code>Traceback (most recent call last):
  File ""t.py"", line 6, in &lt;module&gt;
    raise TypeError(""Oups!"")
TypeError: Oups!
</code></pre>

<p>Few pitfalls with this though:</p>

<ul>
<li><p>From the doc of <a href=""https://docs.python.org/2/library/sys.html#sys.exc_info""><code>sys_info</code></a>:</p>

<blockquote>
  <p>Assigning the traceback return value to a local variable in a function that is handling an exception will cause a <strong>circular reference</strong>. This will prevent anything referenced by a local variable in the same function or by the traceback from being garbage collected. [...] <strong>If you do need the traceback, make sure to delete it after use</strong> (best done with a try ... finally statement)</p>
</blockquote></li>
<li><p>but, from the same doc:</p>

<blockquote>
  <p><strong>Beginning with Python 2.2, such cycles are automatically reclaimed</strong> when garbage collection is enabled and they become unreachable, but it remains more efficient to avoid creating cycles.</p>
</blockquote></li>
</ul>

<hr>

<p>On the other hand, by allowing you to access the traceback <em>associated with</em> an exception, Python 3 produce a less surprising result:</p>

<pre><code>import traceback

try:
    raise TypeError(""Oups!"")
except Exception as err:
    try:
        raise TypeError(""Again !?!"")
    except:
        pass

    traceback.print_tb(err.__traceback__)
</code></pre>

<p>... will display:</p>

<pre class=""lang-none prettyprint-override""><code>  File ""e3.py"", line 4, in &lt;module&gt;
    raise TypeError(""Oups!"")
</code></pre>
","16946886"
"Use a Glob() to find files recursively in Python?","335308","","<p>This is what I have:</p>

<pre><code>glob(os.path.join('src','*.c'))
</code></pre>

<p>but I want to search the subfolders of src. Something like this would work:</p>

<pre><code>glob(os.path.join('src','*.c'))
glob(os.path.join('src','*','*.c'))
glob(os.path.join('src','*','*','*.c'))
glob(os.path.join('src','*','*','*','*.c'))
</code></pre>

<p>But this is obviously limited and clunky.</p>
","<p><strong>Python 3.5+</strong></p>

<p>Starting with Python version 3.5, the <a href=""https://docs.python.org/3/library/glob.html"" rel=""noreferrer""><code>glob</code></a> module supports the <code>""**""</code> directive (which is parsed only if you pass <code>recursive</code> flag):</p>

<pre><code>import glob

for filename in glob.iglob('src/**/*.c', recursive=True):
    print(filename)
</code></pre>

<p>If you need a list, just use <a href=""https://docs.python.org/3/library/glob.html#glob.glob"" rel=""noreferrer""><code>glob.glob</code></a> instead of <a href=""https://docs.python.org/3/library/glob.html#glob.iglob"" rel=""noreferrer""><code>glob.iglob</code></a>.</p>

<p>For cases where matching files beginning with a dot (.); like files in the current directory or hidden files on Unix based system, use the <a href=""https://docs.python.org/2/library/os.html#os.walk"" rel=""noreferrer""><code>os.walk</code></a> solution below.</p>

<p><strong>Python 2.2 to 3.4</strong></p>

<p>For older Python versions, starting with Python 2.2, use <a href=""https://docs.python.org/2/library/os.html#os.walk"" rel=""noreferrer""><code>os.walk</code></a> to recursively walk a directory and <a href=""https://docs.python.org/2/library/fnmatch.html#fnmatch.filter"" rel=""noreferrer""><code>fnmatch.filter</code></a> to match against a simple expression:</p>

<pre><code>import fnmatch
import os

matches = []
for root, dirnames, filenames in os.walk('src'):
    for filename in fnmatch.filter(filenames, '*.c'):
        matches.append(os.path.join(root, filename))
</code></pre>

<p><strong>Python 2.1 and earlier</strong></p>

<p>For even older Python versions, use <a href=""https://docs.python.org/2/library/glob.html#glob.glob"" rel=""noreferrer""><code>glob.glob</code></a> against each filename instead of <a href=""https://docs.python.org/2/library/fnmatch.html#fnmatch.filter"" rel=""noreferrer""><code>fnmatch.filter</code></a>.</p>
","2186565"
"Creating an empty list in Python","334897","","<p>What is the best way to create a new empty list in Python?</p>

<pre><code>l = [] 
</code></pre>

<p>or</p>

<pre><code>l = list()
</code></pre>

<p>I am asking this because of two reasons:</p>

<ol>
<li>Technical reasons, as to which is faster. (creating a class causes overhead?)<br/></li>
<li>Code readability - which one is the standard convention.</li>
</ol>
","<p>Here is how you can test which piece of code is faster:</p>

<pre><code>% python -mtimeit  ""l=[]""
10000000 loops, best of 3: 0.0711 usec per loop

% python -mtimeit  ""l=list()""
1000000 loops, best of 3: 0.297 usec per loop
</code></pre>

<p>However, in practice, this initialization is most likely an extremely small part of your program, so worrying about this is probably wrong-headed.</p>

<p>Readability is very subjective. I prefer <code>[]</code>, but some very knowledgable people, like Alex Martelli, prefer <code>list()</code> because <a href=""https://stackoverflow.com/questions/2745008/differences-between-d-dict-and-d/2745292#2745292"">it is pronounceable</a>.</p>
","2972226"
"Boolean in Python","334805","","<p>Does Python actually contain a Boolean value? I know that you can do:</p>

<pre><code>checker = 1
if checker:
    #dostuff
</code></pre>

<p>But I'm quite pedantic and enjoy seeing booleans in Java. For instance:</p>

<pre><code>Boolean checker;
if (someDecision)
{
    checker = true;
}
if(checker)
{
    //some stuff
}
</code></pre>

<p>Is there such a thing as this in Python? I can't seem to find anything like it in the documentation.</p>
","<pre><code>checker = None # not necessary

if some_decision:
    checker = True

if checker:
    # some stuff
</code></pre>

<p>[Edit]</p>

<p>For more information: <a href=""http://docs.python.org/library/functions.html#bool"" rel=""noreferrer"">http://docs.python.org/library/functions.html#bool</a></p>

<p>Your code works too, since 1 is converted to True when necessary.
Actually Python didn't have a boolean type for a long time (as in old C), and some programmers sill use integers instead of booleans.</p>
","1748651"
"How do I find out my python path using python?","332648","","<p>How do I find out which directories are listed in my system’s <code>PYTHONPATH</code> variable, from within a Python script (or the interactive shell)?</p>
","<p><code>sys.path</code> might include items that aren't specifically in your <code>PYTHONPATH</code> environment variable. To query the variable directly, use:</p>

<pre><code>import os
try:
    user_paths = os.environ['PYTHONPATH'].split(os.pathsep)
except KeyError:
    user_paths = []
</code></pre>
","1489625"
"How to print a dictionary line by line in Python?","332645","","<p>This is the dictionary</p>

<pre><code>cars = {'A':{'speed':70,
        'color':2},
        'B':{'speed':60,
        'color':3}}
</code></pre>

<p>Using this <code>for loop</code></p>

<pre><code>for keys,values in cars.items():
    print(keys)
    print(values)
</code></pre>

<p>It prints the following:</p>

<pre><code>B
{'color': 3, 'speed': 60}
A
{'color': 2, 'speed': 70}
</code></pre>

<p>But I want the program to print it like this:</p>

<pre><code>B
color : 3
speed : 60
A
color : 2
speed : 70
</code></pre>

<p>I just started learning dictionaries so I'm not sure how to do this.</p>
","<pre><code>for x in cars:
    print (x)
    for y in cars[x]:
        print (y,':',cars[x][y])
</code></pre>

<p>output:</p>

<pre><code>A
color : 2
speed : 70
B
color : 3
speed : 60
</code></pre>
","15785785"
"How to check if string input is a number?","331267","","<p>How do I check if a user's string input is a number (e.g. <code>-1</code>, <code>0</code>, <code>1</code>, etc.)?</p>

<pre><code>user_input = input(""Enter something:"")

if type(user_input) == int:
    print(""Is a number"")
else:
    print(""Not a number"")
</code></pre>

<p>The above won't work since <code>input</code> always returns a string.</p>
","<p>Simply try converting it to an int and then bailing out if it doesn't work.</p>

<pre><code>try:
   val = int(userInput)
except ValueError:
   print(""That's not an int!"")
</code></pre>
","5424739"
"How to check version of python modules?","330751","","<p>I just installed the python modules: <code>construct</code> and <code>statlib</code> with <code>setuptools</code> like this:</p>

<pre><code># Install setuptools to be able to download the following
sudo apt-get install python-setuptools

# Install statlib for lightweight statistical tools
sudo easy_install statlib

# Install construct for packing/unpacking binary data
sudo easy_install construct
</code></pre>

<p>I want to be able to (programmatically) check their versions.  Is there an equivalent to <code>python --version</code> I can run from the command line?</p>

<p>My python version is <code>2.7.3</code>.</p>
","<p>I suggest using <a href=""https://stackoverflow.com/a/3220572/1265154"">pip in place of easy_install</a>. With pip, you can list all installed packages and their versions with </p>

<pre><code>pip freeze
</code></pre>

<p>For an individual module, you can try <a href=""http://www.python.org/dev/peps/pep-0396/"" rel=""noreferrer""><code>__version__</code> attribute</a>, however there are modules without it:</p>

<pre><code>$ pip freeze | grep lxml
lxml==2.3
$ python -c ""import lxml; print lxml.__version__""
Traceback (most recent call last):
  File ""&lt;string&gt;"", line 1, in &lt;module&gt;
AttributeError: 'module' object has no attribute '__version__'
</code></pre>

<p>Last, as you run your command with <code>sudo</code> prefix, I guess you're installing to global python environment. Strongly advise to take look into python <a href=""https://pypi.python.org/pypi/virtualenv"" rel=""noreferrer"">virtual environment</a> managers, for example <a href=""http://virtualenvwrapper.readthedocs.org/en/latest/"" rel=""noreferrer"">virtualenvwrapper</a></p>
","20180597"
"Is there a Numpy function to return the first index of something in an array?","329083","","<p>I know there is a method for python list to return the first index of something</p>

<pre><code>&gt;&gt;&gt; l = list([1, 2, 3])
&gt;&gt;&gt; l.index(2)
1
</code></pre>

<p>Is there something like that for numpy arrays?</p>
","<p>Yes, here is the answer given a Numpy array, array, and a value, item, to search for.</p>

<pre><code>itemindex = numpy.where(array==item)
</code></pre>

<p>The result is a tuple with first all the row indices, then all the column indices.</p>

<p>For example if array is two dimensions and it contained your item at two locations then</p>

<pre><code>array[itemindex[0][0]][itemindex[1][0]]
</code></pre>

<p>would be equal to your item and so would</p>

<pre><code>array[itemindex[0][1]][itemindex[1][1]]
</code></pre>

<p><a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.where.html"" rel=""noreferrer"">numpy.where</a></p>
","432289"
"How to read csv into record array in numpy?","328947","","<p>I wonder if there is a direct way to import the contents of a csv file into a record array, much in the way that R's <code>read.table()</code>, <code>read.delim()</code>, and <code>read.csv()</code> family imports data to R's data frame? </p>

<p>Or is the best way to use <a href=""https://stackoverflow.com/questions/2859404/reading-csv-files-in-scipy-numpy-in-python"">csv.reader()</a> and then apply something like <code>numpy.core.records.fromrecords()</code>?</p>
","<p>You can use Numpy's <code>genfromtxt()</code> method to do so, by setting the <code>delimiter</code> kwarg to a comma.</p>

<pre><code>from numpy import genfromtxt
my_data = genfromtxt('my_file.csv', delimiter=',')
</code></pre>

<p>More information on the function can be found at its respective <a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.genfromtxt.html"" rel=""noreferrer"">documentation</a>.</p>
","3519314"
"How to calculate a mod b in python?","327882","","<p>Is there a modulo function in the python <code>math</code> library?</p>

<p>Isn't <code>15 % 4</code>, 3? But <code>15 mod 4</code> is 1, right?</p>
","<p>There's the <code>%</code> sign.  It's not just for the remainder, it is the modulo operation.</p>
","991034"
"Print in one line dynamically","327060","","<p>I would like to make several statements that give standard output without seeing newlines in between statements.</p>

<p>Specifically, suppose I have:</p>

<pre><code>for item in range(1,100):
    print item
</code></pre>

<p>The result is:</p>

<pre><code>1
2
3
4
.
.
.
</code></pre>

<p>How get this to instead look like:</p>

<pre><code>1 2 3 4 5 ...
</code></pre>

<p>Even better, is it possible to print the single number <em>over</em> the last number, so only one number is on the screen at a time?</p>
","<p>Change <code>print item</code> to:</p>

<ul>
<li><code>print item,</code> in Python 2.7</li>
<li><code>print(item, end="" "")</code> in Python 3</li>
</ul>

<p>If you want to print the data dynamically use following syntax:</p>

<ul>
<li><code>print(item, sep=' ', end='', flush=True)</code> in Python 3</li>
</ul>
","3249539"
"Getting user input","326741","","<p>I am running this:</p>

<pre><code>import csv
import sys
reader = csv.reader(open(sys.argv[0], ""rb""))
for row in reader:
    print row
</code></pre>

<p>And I get this in response:</p>

<pre><code>['import csv']
['import sys']
['reader = csv.reader(open(sys.argv[0]', ' ""rb""))']
['for row in reader:']
['    print row']
&gt;&gt;&gt; 
</code></pre>

<p>For the <code>sys.argv[0]</code> I would like it to prompt me to enter a filename.</p>

<p>How do I get it to prompt me to enter a filename?</p>
","<p>In python 3.x, use <code>input()</code> instead of <code>raw_input()</code></p>
","36110735"
"Replace values in list using Python","324705","","<p>I have a list where I want to replace values with None where condition() returns True.</p>

<pre><code>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
</code></pre>

<p>For example, if condition checks bool(item%2) should return:</p>

<pre><code>[None, 1, None, 3, None, 5, None, 7, None, 9, None]
</code></pre>

<p>What is the most efficient way to do this?</p>
","<p>Build a new list with a list comprehension:</p>

<pre><code>new_items = [x if x % 2 else None for x in items]
</code></pre>

<p>You can modify the original list in-place if you want, but it doesn't actually save time:</p>

<pre><code>items = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
for index, item in enumerate(items):
    if not (item % 2):
        items[index] = None
</code></pre>

<p>Here are (Python 3.6.3) timings demonstrating the non-timesave:</p>

<pre><code>In [1]: %%timeit
   ...: items = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
   ...: for index, item in enumerate(items):
   ...:     if not (item % 2):
   ...:         items[index] = None
   ...:
1.06 µs ± 33.7 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)

In [2]: %%timeit
   ...: items = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
   ...: new_items = [x if x % 2 else None for x in items]
   ...:
891 ns ± 13.6 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)
</code></pre>

<p>And Python 2.7.6 timings:</p>

<pre><code>In [1]: %%timeit
   ...: items = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
   ...: for index, item in enumerate(items):
   ...:     if not (item % 2):
   ...:         items[index] = None
   ...: 
1000000 loops, best of 3: 1.27 µs per loop
In [2]: %%timeit
   ...: items = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
   ...: new_items = [x if x % 2 else None for x in items]
   ...: 
1000000 loops, best of 3: 1.14 µs per loop
</code></pre>
","1540069"
"How can you profile a script?","323760","","<p>Project Euler and other coding contests often have a maximum time to run or people boast of how fast their particular solution runs.  With python, sometimes the approaches are somewhat kludgey - i.e., adding timing code to <code>__main__</code>.</p>

<p>What is a good way to profile how long a python program takes to run?</p>
","<p>Python includes a profiler called <a href=""https://docs.python.org/3/library/profile.html#module-cProfile"" rel=""nofollow noreferrer"">cProfile</a>. It not only gives the total running time, but also times each function separately, and tells you how many times each function was called, making it easy to determine where you should make optimizations.</p>

<p>You can call it from within your code, or from the interpreter, like this:</p>

<pre><code>import cProfile
cProfile.run('foo()')
</code></pre>

<p>Even more usefully, you can invoke the cProfile when running a script:</p>

<pre><code>python -m cProfile myscript.py
</code></pre>

<p>To make it even easier, I made a little batch file called 'profile.bat':</p>

<pre><code>python -m cProfile %1
</code></pre>

<p>So all I have to do is run:</p>

<pre><code>profile euler048.py
</code></pre>

<p>And I get this:</p>

<pre class=""lang-none prettyprint-override""><code>1007 function calls in 0.061 CPU seconds

Ordered by: standard name
ncalls  tottime  percall  cumtime  percall filename:lineno(function)
    1    0.000    0.000    0.061    0.061 &lt;string&gt;:1(&lt;module&gt;)
 1000    0.051    0.000    0.051    0.000 euler048.py:2(&lt;lambda&gt;)
    1    0.005    0.005    0.061    0.061 euler048.py:2(&lt;module&gt;)
    1    0.000    0.000    0.061    0.061 {execfile}
    1    0.002    0.002    0.053    0.053 {map}
    1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler objects}
    1    0.000    0.000    0.000    0.000 {range}
    1    0.003    0.003    0.003    0.003 {sum}
</code></pre>

<p>EDIT: Updated link to a good video resource from PyCon 2013 titled 
<a href=""http://lanyrd.com/2013/pycon/scdywg/"" rel=""nofollow noreferrer""><strong><em>Python Profiling</em></strong></a>.</p>
","582337"
"How to capitalize the first letter of each word in a string (Python)?","323053","","<pre><code>s = 'the brown fox'
</code></pre>

<p>...do something here...</p>

<p><code>s</code> should be :</p>

<pre><code>'The Brown Fox'
</code></pre>

<p>What's the easiest way to do this?</p>
","<p>The <a href=""http://docs.python.org/library/stdtypes.html#str.title"" rel=""noreferrer""><code>.title()</code></a> method of a string (either ASCII or Unicode is fine) does this:</p>

<pre><code>&gt;&gt;&gt; ""hello world"".title()
'Hello World'
&gt;&gt;&gt; u""hello world"".title()
u'Hello World'
</code></pre>

<p>However, look out for strings with embedded apostrophes, as noted in the docs.</p>

<blockquote>
  <p>The algorithm uses a simple language-independent definition of a word as groups of consecutive letters. The definition works in many contexts but it means that apostrophes in contractions and possessives form word boundaries, which may not be the desired result:</p>

<pre><code>&gt;&gt;&gt; ""they're bill's friends from the UK"".title()
""They'Re Bill'S Friends From The Uk""
</code></pre>
</blockquote>
","1549644"
"If Python is interpreted, what are .pyc files?","322465","","<p>I've been given to understand that Python is an interpreted language... However, when I look at my Python source code I see <code>.pyc</code> files, which Windows identifies as ""Compiled Python Files"". Where do these come in?</p>
","<p>They contain <a href=""http://en.wikipedia.org/wiki/Bytecode"" rel=""noreferrer"">byte code</a>, which is what the Python interpreter compiles the source to. This code is then executed by Python's virtual machine. </p>

<p>Python's documentation explains the definition like this:</p>

<blockquote>
  <p>Python is an interpreted language, as
  opposed to a compiled one, though the
  distinction can be blurry because of
  the presence of the bytecode compiler.
  This means that source files can be
  run directly without explicitly
  creating an executable which is then
  run.</p>
</blockquote>
","2998228"
"Remove empty strings from a list of strings","320223","","<p>I want to remove all empty strings from a list of strings in python.</p>

<p>My idea looks like this:</p>

<pre><code>while '' in str_list:
    str_list.remove('')
</code></pre>

<p>Is there any more pythonic way to do this?</p>
","<p>I would use <a href=""http://docs.python.org/library/functions.html#filter"" rel=""noreferrer""><code>filter</code></a>:</p>

<pre><code>str_list = filter(None, str_list) # fastest
str_list = filter(bool, str_list) # fastest
str_list = filter(len, str_list)  # a bit of slower
str_list = filter(lambda item: item, str_list) # slower than list comprehension
</code></pre>

<p>Python 3 returns an iterator from <code>filter</code>, so should be wrapped in a call to <code>list()</code></p>

<pre><code>str_list = list(filter(None, str_list)) # fastest
</code></pre>

<p>(<em>etc.</em>)</p>

<p>Tests:</p>

<pre><code>&gt;&gt;&gt; timeit('filter(None, str_list)', 'str_list=[""a""]*1000', number=100000)
2.4797441959381104
&gt;&gt;&gt; timeit('filter(bool, str_list)', 'str_list=[""a""]*1000', number=100000)
2.4788150787353516
&gt;&gt;&gt; timeit('filter(len, str_list)', 'str_list=[""a""]*1000', number=100000)
5.2126238346099854
&gt;&gt;&gt; timeit('[x for x in str_list if x]', 'str_list=[""a""]*1000', number=100000)
13.354584932327271
&gt;&gt;&gt; timeit('filter(lambda item: item, str_list)', 'str_list=[""a""]*1000', number=100000)
17.427681922912598
</code></pre>
","3845453"
"Deleting DataFrame row in Pandas based on column value","319782","","<p>I have the following DataFrame:</p>

<pre><code>             daysago  line_race rating        rw    wrating
 line_date                                                 
 2007-03-31       62         11     56  1.000000  56.000000
 2007-03-10       83         11     67  1.000000  67.000000
 2007-02-10      111          9     66  1.000000  66.000000
 2007-01-13      139         10     83  0.880678  73.096278
 2006-12-23      160         10     88  0.793033  69.786942
 2006-11-09      204          9     52  0.636655  33.106077
 2006-10-22      222          8     66  0.581946  38.408408
 2006-09-29      245          9     70  0.518825  36.317752
 2006-09-16      258         11     68  0.486226  33.063381
 2006-08-30      275          8     72  0.446667  32.160051
 2006-02-11      475          5     65  0.164591  10.698423
 2006-01-13      504          0     70  0.142409   9.968634
 2006-01-02      515          0     64  0.134800   8.627219
 2005-12-06      542          0     70  0.117803   8.246238
 2005-11-29      549          0     70  0.113758   7.963072
 2005-11-22      556          0     -1  0.109852  -0.109852
 2005-11-01      577          0     -1  0.098919  -0.098919
 2005-10-20      589          0     -1  0.093168  -0.093168
 2005-09-27      612          0     -1  0.083063  -0.083063
 2005-09-07      632          0     -1  0.075171  -0.075171
 2005-06-12      719          0     69  0.048690   3.359623
 2005-05-29      733          0     -1  0.045404  -0.045404
 2005-05-02      760          0     -1  0.039679  -0.039679
 2005-04-02      790          0     -1  0.034160  -0.034160
 2005-03-13      810          0     -1  0.030915  -0.030915
 2004-11-09      934          0     -1  0.016647  -0.016647
</code></pre>

<p>I need to remove the rows where <code>line_race</code> is equal to <code>0</code>. What's the most efficient way to do this?</p>
","<p>If I'm understanding correctly, it should be as simple as:</p>

<pre><code>df = df[df.line_race != 0]
</code></pre>
","18173074"
"Convert string to JSON using Python","318781","","<p>I'm a little bit confused with JSON in Python.
To me, it seems like a dictionary, and for that reason
I'm trying to do that:</p>

<pre><code>{
    ""glossary"":
    {
        ""title"": ""example glossary"",
        ""GlossDiv"":
        {
            ""title"": ""S"",
            ""GlossList"":
            {
                ""GlossEntry"":
                {
                    ""ID"": ""SGML"",
                    ""SortAs"": ""SGML"",
                    ""GlossTerm"": ""Standard Generalized Markup Language"",
                    ""Acronym"": ""SGML"",
                    ""Abbrev"": ""ISO 8879:1986"",
                    ""GlossDef"":
                    {
                        ""para"": ""A meta-markup language, used to create markup languages such as DocBook."",
                        ""GlossSeeAlso"": [""GML"", ""XML""]
                    },
                    ""GlossSee"": ""markup""
                }
            }
        }
    }
}
</code></pre>

<p>But when I do print dict(json), it gives an error.</p>

<p>How can I transform this string into a structure and then call json[""title""] to obtain ""example glossary""?</p>
","<p><a href=""http://docs.python.org/library/json.html#json.loads"" rel=""noreferrer""><code>json.loads()</code></a></p>

<pre><code>d = json.loads(j)
print d['glossary']['title']
</code></pre>
","4528110"
"Post JSON using Python Requests","317617","","<p>I need to POST a JSON from a client to a server. I'm using Python 2.7.1 and simplejson. The client is using Requests. The server is CherryPy. I can GET a hard-coded JSON from the server (code not shown), but when I try to POST a JSON to the server, I get ""400 Bad Request"".</p>

<p>Here is my client code:</p>

<pre><code>data = {'sender':   'Alice',
    'receiver': 'Bob',
    'message':  'We did it!'}
data_json = simplejson.dumps(data)
payload = {'json_payload': data_json}
r = requests.post(""http://localhost:8080"", data=payload)
</code></pre>

<p>Here is the server code.</p>

<pre><code>class Root(object):

    def __init__(self, content):
        self.content = content
        print self.content  # this works

    exposed = True

    def GET(self):
        cherrypy.response.headers['Content-Type'] = 'application/json'
        return simplejson.dumps(self.content)

    def POST(self):
        self.content = simplejson.loads(cherrypy.request.body.read())
</code></pre>

<p>Any ideas?</p>
","<p>As of Requests version 2.4.2 and onwards, you can alternatively use 'json' parameter in the call which makes it simpler.</p>

<pre><code>&gt;&gt;&gt; import requests
&gt;&gt;&gt; r = requests.post('http://httpbin.org/post', json={""key"": ""value""})
&gt;&gt;&gt; r.status_code
200
&gt;&gt;&gt; r.json()
{'args': {},
 'data': '{""key"": ""value""}',
 'files': {},
 'form': {},
 'headers': {'Accept': '*/*',
             'Accept-Encoding': 'gzip, deflate',
             'Connection': 'close',
             'Content-Length': '16',
             'Content-Type': 'application/json',
             'Host': 'httpbin.org',
             'User-Agent': 'python-requests/2.4.3 CPython/3.4.0',
             'X-Request-Id': 'xx-xx-xx'},
 'json': {'key': 'value'},
 'origin': 'x.x.x.x',
 'url': 'http://httpbin.org/post'}
</code></pre>

<p>EDIT: This feature has been added to the official documentation. You can view it here: <a href=""http://docs.python-requests.org/en/master/user/quickstart/#more-complicated-post-requests"">Requests documentation</a></p>
","26344315"
"How to return dictionary keys as a list in Python?","317357","","<p>In <em>Python 2.7</em>, I could get dictionary <em>keys</em>, <em>values</em>, or <em>items</em> as a list:</p>

<pre><code>&gt;&gt;&gt; newdict = {1:0, 2:0, 3:0}
&gt;&gt;&gt; newdict.keys()
[1, 2, 3]
</code></pre>

<p>Now, in <em>Python >= 3.3</em>, I get something like this:</p>

<pre><code>&gt;&gt;&gt; newdict.keys()
dict_keys([1, 2, 3])
</code></pre>

<p>So, I have to do this to get a list:</p>

<pre><code>newlist = list()
for i in newdict.keys():
    newlist.append(i)
</code></pre>

<p>I'm wondering, is there a better way to return a list in <em>Python 3</em>? </p>
","<p>Try <code>list(newdict.keys())</code>.</p>

<p>This will convert the <code>dict_keys</code> object to a list.</p>

<p>On the other hand, you should ask yourself whether or not it matters. The Pythonic way to code is to assume duck typing (<em>if it looks like a duck and it quacks like a duck, it's a duck</em>). The <code>dict_keys</code> object will act like a list for most purposes. For instance:</p>

<pre><code>for key in newdict.keys():
  print(key)
</code></pre>

<p>Obviously, insertion operators may not work, but that doesn't make much sense for a list of dictionary keys anyway.</p>
","16819250"
"How to write inline if statement for print?","317252","","<p>I need to print some stuff only when a boolean variable is set to <code>True</code>. So, after looking at <a href=""https://stackoverflow.com/questions/1319214/shorter-more-pythonic-way-of-writing-an-if-statements"">this</a>, I tried with a simple example:</p>

<pre><code>&gt;&gt;&gt; a = 100
&gt;&gt;&gt; b = True
&gt;&gt;&gt; print a if b
  File ""&lt;stdin&gt;"", line 1
    print a if b
             ^
SyntaxError: invalid syntax  
</code></pre>

<p>Same thing if I write <code>print a if b==True</code>.</p>

<p>What am I missing here?</p>
","<p>Python does <strong>not</strong> have a trailing <code>if</code> <strong>statement</strong>.</p>

<p>There are two kinds of <code>if</code> in Python:</p>

<ol>
<li><p><code>if</code> statement:</p>

<pre><code>if condition: statement
if condition:
    block
</code></pre></li>
<li><p><code>if</code> <strong>expression</strong> (introduced in Python 2.5)</p>

<pre><code>expression_if_true if condition else expression_if_false
</code></pre></li>
</ol>

<p>And note, that both <code>print a</code> and <code>b = a</code> are statements. Only the <code>a</code> part is an expression. So if you write</p>

<pre><code>print a if b else 0
</code></pre>

<p>it means</p>

<pre><code>print (a if b else 0)
</code></pre>

<p>and similarly when you write</p>

<pre><code>x = a if b else 0
</code></pre>

<p>it means</p>

<pre><code>x = (a if b else 0)
</code></pre>

<p>Now what would it print/assign if there was no <code>else</code> clause? The print/assignment is <strong>still there</strong>.</p>

<p>And note, that if you don't want it to be there, you can always write the regular <code>if</code> statement on a single line, though it's less readable and there is really no reason to avoid the two-line variant.</p>
","11880682"
"Getting a list of all subdirectories in the current directory","317229","","<p>Is there a way to return a list of all the subdirectories in the current directory in Python?</p>

<p>I know you can do this with files, but I need to get the list of directories instead.</p>
","<p>Do you mean immediate subdirectories, or every directory right down the tree? </p>

<p>Either way, you could use <a href=""http://docs.python.org/library/os.html#os.walk"" rel=""noreferrer""><code>os.walk</code></a> to do this:</p>

<pre><code>os.walk(directory)
</code></pre>

<p>will yield a tuple for each subdirectory. Ths first entry in the 3-tuple is a directory name, so</p>

<pre><code>[x[0] for x in os.walk(directory)]
</code></pre>

<p>should give you all of the subdirectories, recursively.</p>

<p>Note that the second entry in the tuple is the list of child directories of the entry in the first position, so you could use this instead, but it's not likely to save you much.</p>

<p>However, you could use it just to give you the immediate child directories:</p>

<pre><code>next(os.walk('.'))[1]
</code></pre>

<p>Or see the other solutions already posted, using <a href=""http://docs.python.org/library/os.html#os.listdir"" rel=""noreferrer""><code>os.listdir</code></a> and <a href=""http://docs.python.org/library/os.path.html#os.path.isdir"" rel=""noreferrer""><code>os.path.isdir</code></a>, including those at ""<a href=""https://stackoverflow.com/questions/800197/get-all-of-the-immediate-subdirectories-in-python"">How to get all of the immediate subdirectories in Python</a>"".</p>
","973488"
"Python 'If not' syntax","317163","","<p>I'm a bit confused about how/why so many python developers use <code>if not</code> in their conditional statements. </p>

<p>for example, lets say we had a function, </p>

<pre><code>def foo(bar = None):
    if not bar:
        bar = 2
</code></pre>

<p>But why go about this way? I mean, wouldn't doing <code>if bar != None</code> or <code>if bar is not None</code>be more explicit? What does <code>if not</code> try to say? </p>
","<p>Yes, <code>if bar is not None</code> is more explicit, and thus better, assuming it is indeed what you want. That's not always the case, there are subtle differences: <code>if not bar:</code> will execute if <code>bar</code> is any kind of zero or empty container, or <code>False</code>.
Many people do use <code>not bar</code> where they <em>really do</em> mean <code>bar is not None</code>.</p>
","16739649"
"python setup.py uninstall","316519","","<p>I have installed a python package with <code>python setup.py install</code>.</p>

<p>How do I uninstall it?</p>
","<p>You need to remove all files manually, and also undo any other stuff that installation did manually.</p>

<p>If you don't know the list of all files, you can reinstall it with the <code>--record</code> option, and take a look at the list this produces.</p>

<p>To record a list of installed files, you can use:</p>

<pre><code>python setup.py install --record files.txt
</code></pre>

<p>Once you want to uninstall you can use xargs to do the removal:</p>

<pre><code>cat files.txt | xargs rm -rf
</code></pre>

<p>Or if you're running Windows, use Powershell:  </p>

<pre><code>Get-Content files.txt | ForEach-Object {Remove-Item $_ -Recurse -Force}
</code></pre>
","1550235"
"Use of ""global"" keyword in Python","316080","","<p>What I understand from reading the documentation is that Python has a separate namespace for functions, and if I want to use a global variable in that function, I need to use <code>global</code>.</p>

<p>I'm using Python 2.7 and I tried this little test</p>

<pre><code>&gt;&gt;&gt; sub = ['0', '0', '0', '0']
&gt;&gt;&gt; def getJoin():
...     return '.'.join(sub)
...
&gt;&gt;&gt; getJoin()
'0.0.0.0'
</code></pre>

<p>It seems things are working fine even without <code>global</code>. I was able to access global variable without any problem.</p>

<p>Am I missing anything? Also, following is from Python documentation:</p>

<blockquote>
  <p>Names listed in a global statement
  must not be defined as formal
  parameters or in a for loop control
  target, class definition, function
  definition, or import statement.</p>
</blockquote>

<p>While formal parameters and class definition make sense to me, I'm not able to understand the restriction on for loop control target and function definition.</p>
","<p>The keyword <code>global</code> is only useful to change or create global variables in a local context, although creating global variables is seldom considered a good solution.</p>

<pre><code>def bob():
    me = ""locally defined""    # Defined only in local context
    print me

bob()
print me     # Asking for a global variable
</code></pre>

<p>The above will give you:</p>

<pre><code>locally defined
Traceback (most recent call last):
  File ""file.py"", line 9, in &lt;module&gt;
    print me
NameError: name 'me' is not defined
</code></pre>

<p>While if you use the <code>global</code> statement, the variable will become available ""outside"" the scope of the function, effectively becoming a global variable.</p>

<pre><code>def bob():
    global me
    me = ""locally defined""   # Defined locally but declared as global
    print me

bob()
print me     # Asking for a global variable
</code></pre>

<p>So the above code will give you:</p>

<pre><code>locally defined
locally defined
</code></pre>

<p>In addition, due to the nature of python, you could also use <code>global</code> to declare functions, classes or other objects in a local context. Although I would advise against it since it causes nightmares if something goes wrong or needs debugging.</p>
","4693385"
"How to access the ith column of a NumPy multidimensional array?","316043","","<p>Suppose I have:</p>

<pre><code>test = numpy.array([[1, 2], [3, 4], [5, 6]])
</code></pre>

<p><code>test[i]</code> gets me <em>ith</em> line of the array (eg <code>[1, 2]</code>). How can I access the <em>ith</em> column? (eg <code>[1, 3, 5]</code>). Also, would this be an expensive operation?</p>
","<pre><code>&gt;&gt;&gt; test[:,0]
array([1, 3, 5])
</code></pre>

<p>Similarly, </p>

<pre><code>&gt;&gt;&gt; test[1,:]
array([3, 4])
</code></pre>

<p>lets you access rows.  This is covered in Section 1.4 (Indexing) of the <a href=""http://docs.scipy.org/doc/numpy/reference/arrays.indexing.html"" rel=""noreferrer"">NumPy reference</a>.  This is quick, at least in my experience.  It's certainly much quicker than accessing each element in a loop.</p>
","4455154"
"How to iterate through two lists in parallel?","315734","","<p>I have two iterables in Python, and I want to go over them in pairs:</p>

<pre><code>foo = (1, 2, 3)
bar = (4, 5, 6)

for (f, b) in some_iterator(foo, bar):
    print ""f: "", f, ""; b: "", b
</code></pre>

<p>It should result in:</p>

<pre><code>f: 1; b: 4
f: 2; b: 5
f: 3; b: 6
</code></pre>

<p><em>One</em> way to do it is to iterate over the indices:</p>

<pre><code>for i in xrange(len(foo)):
    print ""f: "", foo[i], ""; b: "", b[i]
</code></pre>

<p>But that seems somewhat unpythonic to me. Is there a better way to do it?</p>
","<pre><code>for f, b in zip(foo, bar):
    print(f, b)
</code></pre>

<p><code>zip</code> stops when the shorter of <code>foo</code> or <code>bar</code> stops.</p>

<p>In <strong>Python 2</strong>, <a href=""https://docs.python.org/2/library/functions.html#zip"" rel=""noreferrer""><code>zip</code></a>
returns a list of tuples. This is fine when <code>foo</code> and <code>bar</code> are not massive. If
they are both massive then forming <code>zip(foo,bar)</code> is an unnecessarily massive
temporary variable, and should be replaced by <code>itertools.izip</code> or
<code>itertools.izip_longest</code>, which returns an iterator instead of a list.</p>

<pre><code>import itertools
for f,b in itertools.izip(foo,bar):
    print(f,b)
for f,b in itertools.izip_longest(foo,bar):
    print(f,b)
</code></pre>

<p><code>izip</code> stops when either <code>foo</code> or <code>bar</code> is exhausted.
<code>izip_longest</code> stops when both <code>foo</code> and <code>bar</code> are exhausted.
When the shorter iterator(s) are exhausted, <code>izip_longest</code> yields a tuple with <code>None</code> in the position corresponding to that iterator. You can also set a different <code>fillvalue</code> besides <code>None</code> if you wish. See here for the <a href=""http://docs.python.org/library/itertools.html#itertools.izip_longest"" rel=""noreferrer"">full story</a>.</p>

<p>In <strong>Python 3</strong>, <a href=""https://docs.python.org/3/library/functions.html#zip"" rel=""noreferrer""><code>zip</code></a>
returns an iterator of tuples, like <code>itertools.izip</code> in Python2.  To get a list
of tuples, use <code>list(zip(foo, bar))</code>. And to zip until both iterators are
exhausted, you would use
<a href=""https://docs.python.org/3.4/library/itertools.html#itertools.zip_longest"" rel=""noreferrer"">itertools.zip_longest</a>.</p>

<hr>

<p>Note also that <code>zip</code> and its <code>zip</code>-like brethen can accept an arbitrary number of iterables as arguments. For example,</p>

<pre><code>for num, cheese, color in zip([1,2,3], ['manchego', 'stilton', 'brie'], 
                              ['red', 'blue', 'green']):
    print('{} {} {}'.format(num, color, cheese))
</code></pre>

<p>prints</p>

<pre><code>1 red manchego
2 blue stilton
3 green brie
</code></pre>
","1663826"
"How to empty a list in Python?","313983","","<p>It seems so ""dirty"" emptying a list in this way:</p>

<pre><code>while len(alist) &gt; 0 : alist.pop()
</code></pre>

<p>Does a clear way exist to do that?</p>
","<p>This actually removes the contents from the list, but doesn't replace the old label with a new empty list:</p>

<pre><code>del lst[:]
</code></pre>

<p>Here's an example:</p>

<pre><code>lst1 = [1, 2, 3]
lst2 = lst1
del lst1[:]
print(lst2)
</code></pre>

<p>For the sake of completeness, the slice assignment has the same effect:</p>

<pre><code>lst[:] = []
</code></pre>

<p>It can also be used to shrink a part of the list while replacing a part at the same time (but that is out of the scope of the question).</p>

<p>Note that doing <code>lst = []</code> does not empty the list, just creates a new object and binds it to the variable <code>lst</code>, but the old list will still have the same elements, and effect will be apparent if it had other variable bindings.</p>
","1400622"
"Is there a short contains function for lists?","313395","","<p>I see people are using <code>any</code> to gather another list to see if an item exists in a list, but is there a quick way to just do?:</p>

<pre><code>if list.contains(myItem):
    # do something
</code></pre>
","<p>You can use this syntax:</p>

<pre><code>if myItem in list:
    # do something
</code></pre>

<p>Also, inverse operator:</p>

<pre><code>if myItem not in list:
    # do something
</code></pre>

<p>It's work fine for lists, tuples, sets and dicts (check keys).</p>

<p><strong>Note</strong> that this is an O(n) operation in lists and tuples, but an O(1) operation in sets and dicts.</p>
","12934223"
"Executing command line programs from within python","312668","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/89228/calling-an-external-command-in-python"">Calling an external command in Python</a>  </p>
</blockquote>



<p>I'm building a web application that will is going to manipulate (pad, mix, merge etc) sound files and I've found that <a href=""http://sox.sourceforge.net/"" rel=""noreferrer"">sox</a> does exactly what I want. Sox is a linux command line program and I'm feeling a little uncomfortable with having the python web app starting new sox processes on my server on a per request basis. </p>

<p>Example:</p>

<pre><code>import os
os.system('sox input.wav -b 24 output.aiff rate -v -L -b 90 48k')
</code></pre>

<p>This whole setup seems a little unstable to me.</p>

<p>So my question is, what's the best practice for running command line programs from within  a python (or any scripting language) web app?</p>

<p>Message queues would be one thing to implement in order to get around the whole request response cycle. But is there other ways to make these things more elegant?</p>
","<p>The <a href=""http://docs.python.org/library/subprocess.html"" rel=""noreferrer""><code>subprocess</code></a> module is the preferred way of running other programs from Python -- much more flexible and nicer to use than <code>os.system</code>. </p>

<pre><code>import subprocess
#subprocess.check_output(['ls','-l']) #all that is technically needed...
print subprocess.check_output(['ls','-l'])
</code></pre>
","450329"
"if/else in Python's list comprehension?","312506","","<p>How can I do the following in Python?</p>

<pre><code>row = [unicode(x.strip()) for x in row if x is not None else '']
</code></pre>

<p>Essentially:</p>

<ol>
<li>replace all the Nones with empty strings, and then</li>
<li>carry out a function.</li>
</ol>
","<p>You can totally do that, it's just an ordering issue:</p>

<pre><code>[ unicode(x.strip()) if x is not None else '' for x in row ]
</code></pre>

<p>Note that this actually uses a different language construct, a <a href=""https://docs.python.org/3/reference/expressions.html#conditional-expressions"" rel=""noreferrer"">conditional expression</a>, which itself is not part of the <a href=""https://docs.python.org/3/reference/expressions.html#displays-for-lists-sets-and-dictionaries"" rel=""noreferrer"">comprehension syntax</a>, while the <code>if</code> after the <code>for…in</code> is part of list comprehensions and used to <em>filter</em> elements from the source iterable.</p>

<p>Conditional expressions can be used in all kinds of situations where you want to choose between two expression values based on some condition. This does the same as the <a href=""https://docs.python.org/3/faq/programming.html#is-there-an-equivalent-of-c-s-ternary-operator"" rel=""noreferrer"">ternary operator <code>?:</code> that exists in other languages</a>. For example:</p>

<pre><code>value = 123
print(value, 'is', 'even' if value % 2 == 0 else 'odd')
</code></pre>
","4260304"
"Python debugging tips","312381","","<p>What are your best tips for debugging Python?</p>

<p>Please don't just list a particular debugger without saying what it can actually do.</p>

<h3>Related</h3>

<ul>
<li><a href=""https://stackoverflow.com/questions/299704"">What are good ways to make my Python code run first time?</a> - This discusses minimizing errors</li>
</ul>
","<p><strong><a href=""http://docs.python.org/library/pdb.html"" rel=""noreferrer"">PDB</a></strong></p>

<p>You can use the pdb module, insert <code>pdb.set_trace()</code> anywhere and it will function as a breakpoint.</p>

<pre><code>&gt;&gt;&gt; import pdb
&gt;&gt;&gt; a=""a string""
&gt;&gt;&gt; pdb.set_trace()
--Return--
&gt; &lt;stdin&gt;(1)&lt;module&gt;()-&gt;None
(Pdb) p a
'a string'
(Pdb)
</code></pre>

<p>To continue execution use <code>c</code> (or <code>cont</code> or <code>continue</code>).</p>

<p>It is possible to execute arbitrary Python expressions using pdb. For example, if you find a mistake, you can correct the code, then type a type expression to have the same effect in the running code</p>

<p>ipdb is a version of pdb for <a href=""http://en.wikipedia.org/wiki/IPython"" rel=""noreferrer"">IPython</a>. It allows the use of pdb with all the IPython features including tab completion.</p>

<p>It is also possible to <a href=""http://code.activestate.com/recipes/65287/"" rel=""noreferrer"">set pdb to automatically run</a> on an uncaught exception.</p>

<p><a href=""http://bashdb.sourceforge.net/pydb/"" rel=""noreferrer"">Pydb</a> was written to be an enhanced version of Pdb. Benefits?</p>
","1623085"
"How to make a class JSON serializable","311837","","<p>How to make a Python class serializable?  </p>

<p>A simple class:</p>

<pre><code>class FileItem:
    def __init__(self, fname):
        self.fname = fname
</code></pre>

<p>What should I do to be able to get output of:</p>

<pre><code>json.dumps()
</code></pre>

<p>Without an error (<code>FileItem instance at ... is not JSON serializable</code>)</p>
","<p>Do you have an idea about the expected output? For e.g. will this do?</p>

<pre><code>&gt;&gt;&gt; f  = FileItem(""/foo/bar"")
&gt;&gt;&gt; magic(f)
'{""fname"": ""/foo/bar""}'
</code></pre>

<p>In that case you can merely call <code>json.dumps(f.__dict__)</code>. </p>

<p>If you want more customized output then you will have to subclass <a href=""https://docs.python.org/2/library/json.html#json.JSONEncoder"" rel=""noreferrer""><code>JSONEncoder</code></a> and implement your own custom serialization. </p>

<p>For a trivial example, see below.</p>

<pre><code>&gt;&gt;&gt; from json import JSONEncoder
&gt;&gt;&gt; class MyEncoder(JSONEncoder):
        def default(self, o):
            return o.__dict__    

&gt;&gt;&gt; MyEncoder().encode(f)
'{""fname"": ""/foo/bar""}'
</code></pre>

<p>Then you pass this class into the <a href=""https://docs.python.org/2/library/json.html#json.JSONDecoder"" rel=""noreferrer""><code>json.dumps()</code></a> method as <code>cls</code> kwarg:</p>

<pre><code>json.dumps(cls=MyEncoder)
</code></pre>

<p>If you also want to decode then you'll have to supply a custom <code>object_hook</code> to the <a href=""https://docs.python.org/2/library/json.html#json.JSONDecoder"" rel=""noreferrer""><code>JSONDecoder</code></a> class. For e.g.</p>

<pre><code>&gt;&gt;&gt; def from_json(json_object):
        if 'fname' in json_object:
            return FileItem(json_object['fname'])
&gt;&gt;&gt; f = JSONDecoder(object_hook = from_json).decode('{""fname"": ""/foo/bar""}')
&gt;&gt;&gt; f
&lt;__main__.FileItem object at 0x9337fac&gt;
&gt;&gt;&gt; 
</code></pre>
","3768975"
"Python - Write to Excel Spreadsheet","311211","","<p>I am new to Python. I need to write some data from my program to a spreadsheet. I've searched online and there seems to be many packages available (xlwt, XlsXcessive, openpyxl). Others suggest to write to a csv file (never used csv &amp; don't really understand what it is).</p>

<p>The program is very simple. I have two lists (float) and three variables (strings). I don't know the lengths of the two lists and they probably won't be the same length.</p>

<p>I want the layout to be as in the picture below:</p>

<p><img src=""https://i.stack.imgur.com/Ih3fa.png"" alt=""enter image description here""></p>

<p>The pink column will have the values of the first list and the green column will have the values of the second list.</p>

<p>So what's the best way to do this? Thanks.</p>

<p>P.S. I am running Windows 7 but I won't necessarily have Office installed on the computers running this program.</p>

<p><strong>EDIT</strong></p>

<pre><code>import xlwt

x=1
y=2
z=3

list1=[2.34,4.346,4.234]

book = xlwt.Workbook(encoding=""utf-8"")

sheet1 = book.add_sheet(""Sheet 1"")

sheet1.write(0, 0, ""Display"")
sheet1.write(1, 0, ""Dominance"")
sheet1.write(2, 0, ""Test"")

sheet1.write(0, 1, x)
sheet1.write(1, 1, y)
sheet1.write(2, 1, z)

sheet1.write(4, 0, ""Stimulus Time"")
sheet1.write(4, 1, ""Reaction Time"")

i=4

for n in list1:
    i = i+1
    sheet1.write(i, 0, n)



book.save(""trial.xls"")
</code></pre>

<p>I wrote this using all your suggestions. It gets the job done but it can be slightly improved. How do I format the cells created in the for loop (list1 values) as scientific or number? I do not want to truncate the values. The actual values used in the program would have around 10 digits after the decimal.</p>
","<pre><code>import xlwt

def output(filename, sheet, list1, list2, x, y, z):
    book = xlwt.Workbook()
    sh = book.add_sheet(sheet)

    variables = [x, y, z]
    x_desc = 'Display'
    y_desc = 'Dominance'
    z_desc = 'Test'
    desc = [x_desc, y_desc, z_desc]

    col1_name = 'Stimulus Time'
    col2_name = 'Reaction Time'

    #You may need to group the variables together
    #for n, (v_desc, v) in enumerate(zip(desc, variables)):
    for n, v_desc, v in enumerate(zip(desc, variables)):
        sh.write(n, 0, v_desc)
        sh.write(n, 1, v)

    n+=1

    sh.write(n, 0, col1_name)
    sh.write(n, 1, col2_name)

    for m, e1 in enumerate(list1, n+1):
        sh.write(m, 0, e1)

    for m, e2 in enumerate(list2, n+1):
        sh.write(m, 1, e2)

    book.save(filename)
</code></pre>

<p>for more explanation:
    <a href=""https://github.com/python-excel"" rel=""noreferrer"">https://github.com/python-excel</a></p>
","13437772"
"How to open a file using the open with statement","311197","","<p>I'm looking at how to do file input and output in Python. I've written the following code to read a list of names (one per line) from a file into another file while checking a name against the names in the file and appending text to the occurrences in the file. The code works. Could it be done better? </p>

<p>I'd wanted to use the <code>with open(...</code> statement for both input and output files but can't see how they could be in the same block meaning I'd need to store the names in a temporary location. </p>

<pre><code>def filter(txt, oldfile, newfile):
    '''\
    Read a list of names from a file line by line into an output file.
    If a line begins with a particular name, insert a string of text
    after the name before appending the line to the output file.
    '''

    outfile = open(newfile, 'w')
    with open(oldfile, 'r', encoding='utf-8') as infile:
        for line in infile:
            if line.startswith(txt):
                line = line[0:len(txt)] + ' - Truly a great person!\n'
            outfile.write(line)

    outfile.close()
    return # Do I gain anything by including this?

# input the name you want to check against
text = input('Please enter the name of a great person: ')    
letsgo = filter(text,'Spanish', 'Spanish2')
</code></pre>
","<p>Python allows putting multiple <code>open()</code> statements in a single <code>with</code>.  You comma-separate them.   Your code would then be:</p>

<pre><code>def filter(txt, oldfile, newfile):
    '''\
    Read a list of names from a file line by line into an output file.
    If a line begins with a particular name, insert a string of text
    after the name before appending the line to the output file.
    '''

    with open(newfile, 'w') as outfile, open(oldfile, 'r', encoding='utf-8') as infile:
        for line in infile:
            if line.startswith(txt):
                line = line[0:len(txt)] + ' - Truly a great person!\n'
            outfile.write(line)

# input the name you want to check against
text = input('Please enter the name of a great person: ')    
letsgo = filter(text,'Spanish', 'Spanish2')
</code></pre>

<p>And no, you don't gain anything by putting an explicit <code>return</code> at the end of your function.  You can use <code>return</code> to exit early, but you had it at the end, and the function will exit without it.  (Of course with functions that return a value, you use the <code>return</code> to specify the value to return.)</p>

<p>Using multiple <code>open()</code> items with <code>with</code> was not supported in Python 2.5 when the <code>with</code> statement was introduced, or in Python 2.6, but it is supported in Python 2.7 and Python 3.1 or newer.</p>

<p><a href=""http://docs.python.org/reference/compound_stmts.html#the-with-statement"">http://docs.python.org/reference/compound_stmts.html#the-with-statement</a>
<a href=""http://docs.python.org/release/3.1/reference/compound_stmts.html#the-with-statement"">http://docs.python.org/release/3.1/reference/compound_stmts.html#the-with-statement</a></p>

<p>If you are writing code that must run in Python 2.5, 2.6 or 3.0, nest the <code>with</code> statements as the other answers suggested or use <a href=""http://docs.python.org/library/contextlib.html#contextlib.nested""><code>contextlib.nested</code></a>.</p>
","9283052"
"UnicodeDecodeError: 'utf8' codec can't decode byte 0x9c","310461","","<p>I have a socket server that is supposed to receive UTF-8 valid characters from clients.</p>

<p>The problem is some clients (mainly hackers) are sending all the wrong kind of data over it.</p>

<p>I can easily distinguish the genuine client, but I am logging to files all the data sent so I can analyze it later.</p>

<p>Sometimes I get characters like this <code>œ</code> that cause the <code>UnicodeDecodeError</code> error.</p>

<p>I need to be able to make the string UTF-8 with or without those characters.</p>

<hr>

<p><strong>Update:</strong></p>

<p>For my particular case the socket service was an MTA and thus I only expect to receive ASCII commands such as:</p>

<pre><code>EHLO example.com
MAIL FROM: &lt;john.doe@example.com&gt;
...
</code></pre>

<p>I was logging all of this in JSON.</p>

<p>Then some folks out there without good intentions decided to sell all kind of junk.</p>

<p>That is why for my specific case it is perfectly OK to strip the non ASCII characters.</p>
","<p><a href=""http://docs.python.org/howto/unicode.html#the-unicode-type"" rel=""noreferrer"">http://docs.python.org/howto/unicode.html#the-unicode-type</a></p>

<pre><code>str = unicode(str, errors='replace')
</code></pre>

<p>or</p>

<pre><code>str = unicode(str, errors='ignore')
</code></pre>

<p><strong>Note:</strong>
This solution will strip out (ignore) the characters in question returning the string without them.
Only use this if your need is to strip them not convert them.</p>

<p>Alternatively, use the open method from the <a href=""https://docs.python.org/2/library/codecs.html#codecs.open"" rel=""noreferrer""><code>codecs</code></a> module to read in the file:</p>

<pre><code>import codecs
with codecs.open(file_name, ""r"",encoding='utf-8', errors='ignore') as fdata:
</code></pre>
","12468274"
"Converting Python Dictionary to List","310177","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/674519/how-can-i-convert-a-python-dictionary-to-a-list-of-tuples"">How can I convert a Python dictionary to a list of tuples?</a>  </p>
</blockquote>



<p>I'm trying to convert a Python dictionary into a Python list, in order to perform some calculations.</p>

<pre><code>#My dictionary
dict = {}
dict['Capital']=""London""
dict['Food']=""Fish&amp;Chips""
dict['2012']=""Olympics""

#lists
temp = []
dictList = []

#My attempt:
for key, value in dict.iteritems():
    aKey = key
    aValue = value
    temp.append(aKey)
    temp.append(aValue)
    dictList.append(temp) 
    aKey = """"
    aValue = """"
</code></pre>

<p>That's my attempt at it... but I can't work out what's wrong?</p>
","<p>Your problem is that you have <code>key</code> and <code>value</code> in quotes making them strings, i.e. you're setting <code>aKey</code> to contain the string <code>""key""</code> and not the value of the variable <code>key</code>.  Also, you're not clearing out the <code>temp</code> list, so you're adding to it each time, instead of just having two items in it.</p>

<p>To fix your code, try something like:</p>

<pre><code>for key, value in dict.iteritems():
    temp = [key,value]
    dictlist.append(temp)
</code></pre>

<p>You don't need to copy the loop variables <code>key</code> and <code>value</code> into another variable before using them so I dropped them out.  Similarly, you don't need to use append to build up a list, you can just specify it between square brackets as shown above.  And we could have done <code>dictlist.append([key,value])</code> if we wanted to be as brief as possible.</p>

<p>Or just use <code>dict.items()</code> as has been suggested.</p>
","1679406"
"How do I resize an image using PIL and maintain its aspect ratio?","309950","","<p>Is there an obvious way to do this that I'm missing?  I'm just trying to make thumbnails.</p>
","<p>Define a maximum size.
Then, compute a resize ratio by taking <code>min(maxwidth/width, maxheight/height)</code>.</p>

<p>The proper size is <code>oldsize*ratio</code>.</p>

<p>There is of course also a library method to do this: the method <code>Image.thumbnail</code>.<br>
Below is an (edited) example from the <a href=""http://effbot.org/imagingbook/introduction.htm"" rel=""noreferrer"">PIL documentation</a>.</p>

<pre><code>import os, sys
import Image

size = 128, 128

for infile in sys.argv[1:]:
    outfile = os.path.splitext(infile)[0] + "".thumbnail""
    if infile != outfile:
        try:
            im = Image.open(infile)
            im.thumbnail(size, Image.ANTIALIAS)
            im.save(outfile, ""JPEG"")
        except IOError:
            print ""cannot create thumbnail for '%s'"" % infile
</code></pre>
","273962"
"Python: avoid new line with print command","309347","","<p>I've started programming today and have this issue with Python. It's pretty dumb but I can't figure out how to do it. When I use the print command, it prints whatever I want and then goes to a different line. For example: </p>

<pre><code>print ""this should be""; print ""on the same line""
</code></pre>

<p>Should return: </p>

<blockquote>
  <p>this should be on the same line</p>
</blockquote>

<p>but instead returns: </p>

<blockquote>
  <p>this should be<br>
  on the same line</p>
</blockquote>

<p>More precisely I was trying to create a program with <code>if</code> that told me whether a number was a 2 or not</p>

<pre><code>def test2(x):
    if x == 2:
        print ""Yeah bro, that's tottaly a two""
    else:
        print ""Nope, that is not a two. That is a (x)""
</code></pre>

<p>But it doesn't recognise the last <code>(x)</code> as the value entered, and rather prints exactly: ""(x)"" (the letter with the brackets). To make it work I have to write:</p>

<pre><code>print ""Nope, that is not a two. That is a""; print (x)
</code></pre>

<p>And if e.g. I enter <code>test2(3)</code> that gives:</p>

<blockquote>
  <p>Nope, that is not a two, that is a<br>
  3</p>
</blockquote>

<p>So either i need to make Python recognise my (x) inside a print line as the number; or to print two separate things but on the same line. 
Thanks in advance and sorry for such a stupid question.</p>

<p><strong>IMPORTANT NOTE</strong>: I am using <strong>version 2.5.4</strong></p>

<p>Another note: If i put <code>print ""Thing"" , print ""Thing2""</code> it says ""Syntax error"" on the 2nd print.</p>
","<p>In <strong>Python 3.x</strong>, you can use the <code>end</code> argument to the <code>print()</code> function to prevent a newline character from being printed:</p>

<pre><code>print(""Nope, that is not a two. That is a"", end="""")
</code></pre>

<p>In <strong>Python 2.x</strong>, you can use a trailing comma:</p>

<pre><code>print ""this should be"",
print ""on the same line""
</code></pre>

<p>You don't need this to simply print a variable, though:</p>

<pre><code>print ""Nope, that is not a two. That is a"", x
</code></pre>

<p>Note that the trailing comma still results in a space being printed at the end of the line, i.e. it's equivalent to using <code>end="" ""</code> in Python 3.  To suppress the space character as well, you can either use</p>

<pre><code>from __future__ import print_function
</code></pre>

<p>to get access to the Python 3 print function or use <code>sys.stdout.write()</code>.</p>
","11266091"
"Converting from a string to boolean in Python?","309337","","<p>Does anyone know how to do convert from a string to a boolean in Python? I found <a href=""http://codecomments.wordpress.com/2008/04/08/converting-a-string-to-a-boolean-value-in-python/"" rel=""noreferrer"">this link</a>. But it doesn't look like a proper way to do it.  I.e. using a built in functionality, etc.</p>

<h3>EDIT:</h3>

<p>The reason I asked this is because I learned <code>int(""string"")</code>, from here. I tried <code>bool(""string"")</code> but always got <code>True</code>.</p>

<pre><code>&gt;&gt;&gt; bool(""False"")
True
</code></pre>
","<p>Really, you just compare the string to whatever you expect to accept as representing true, so you can do this:</p>

<pre><code>s == 'True'
</code></pre>

<p>Or to checks against a whole bunch of values:</p>

<pre><code>s in ['true', '1', 't', 'y', 'yes', 'yeah', 'yup', 'certainly', 'uh-huh']
</code></pre>

<p>Be cautious when using the following:</p>

<pre><code>&gt;&gt;&gt; bool(""foo"")
True
&gt;&gt;&gt; bool("""")
False
</code></pre>

<p>Empty strings evaluate to <code>False</code>, but everything else evaluates to <code>True</code>. So this should not be used for any kind of parsing purposes.</p>
","715455"
"Search and replace a line in a file in Python","309267","","<p>I want to loop over the contents of a text file and do a search and replace on some lines and write the result back to the file. I could first load the whole file in memory and then write it back, but that probably is not the best way to do it.</p>

<p>What is the best way to do this, within the following code?</p>

<pre><code>f = open(file)
for line in f:
    if line.contains('foo'):
        newline = line.replace('foo', 'bar')
        # how to write this newline back to the file
</code></pre>
","<p>I guess something like this should do it. It basically writes the content to a new file and replaces the old file with the new file:</p>

<pre><code>from tempfile import mkstemp
from shutil import move
from os import fdopen, remove

def replace(file_path, pattern, subst):
    #Create temp file
    fh, abs_path = mkstemp()
    with fdopen(fh,'w') as new_file:
        with open(file_path) as old_file:
            for line in old_file:
                new_file.write(line.replace(pattern, subst))
    #Remove original file
    remove(file_path)
    #Move new file
    move(abs_path, file_path)
</code></pre>
","39110"
"How can I use Python to get the system hostname?","308950","","<p>I'm writing a chat program for a local network. I would like be able to identify computers and get the user-set computer name with Python.</p>
","<p>Use <a href=""http://docs.python.org/library/socket.html"" rel=""noreferrer""><code>socket</code></a> and its <a href=""http://docs.python.org/library/socket.html#socket.gethostname"" rel=""noreferrer""><code>gethostname()</code></a> functionality. This will get the <code>hostname</code> of the computer where the Python interpreter is running:</p>

<pre><code>import socket
print(socket.gethostname())
</code></pre>
","4271755"
"Which is the best IDE for Python For Windows","307304","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/81584/what-ide-to-use-for-python"">What IDE to use for Python?</a>  </p>
</blockquote>



<p>I am new to python and I am using simple gedit application on linux machine to write python code, however its very difficult to manage the indentations of my code. I am looking for any Python IDEs that provides some functionality and should not slow down my P4 machine.</p>
","<p>I recommend you take a look at <a href=""http://wiki.python.org/moin/PythonEditors"" rel=""nofollow noreferrer"">the list of editors on Python's wiki</a>, as well as these related questions:</p>

<ul>
<li><a href=""https://stackoverflow.com/questions/81584/what-ide-to-use-for-python"">What IDE to use for Python?</a></li>
<li><a href=""https://stackoverflow.com/questions/1922356/which-editor-ide-should-i-use-for-python"">Which editor/IDE should I use for Python?</a></li>
</ul>
","7899780"
"Python pip install fails: invalid command egg_info","306444","","<p>I find that recently often when I try to install a <a href=""http://en.wikipedia.org/wiki/Python_%28programming_language%29"">Python</a> package using <em><a href=""https://en.wikipedia.org/wiki/Pip_%28package_manager%29"">pip</a></em>, I get the error(s) below.</p>

<p>I found a reference online that one has to use ""<em>python2 setup.py install</em>"" from the download directory, and indeed find that this will then work if I manually find and download the package (from pypi).</p>

<p>But, I don't know where pip is downloading packages to, and/or why it is failing in this manner.</p>

<p>I tried to do a pip upgrade, but it also failed in a similar manner, with a bunch of ""Unknown distribution option"" errors (entry_points, zip_safe, test_suite, tests_require)!</p>

<ul>
<li>pip 1.0.1</li>
<li><a href=""https://en.wikipedia.org/wiki/ActivePython"">ActivePython</a> 2.7</li>
</ul>

<p>Trying to use ActiveState's pypm fails, because they have a smaller library base, and it doesn't include these packages.</p>

<pre><code>C:\test&gt;pip install requests-oauth
Downloading/unpacking requests-oauth
  Downloading requests-oauth-0.4.1.tar.gz
  Running setup.py egg_info for package requests-oauth
    E:\Plang\ActivePython\lib\distutils\dist.py:267: UserWarning: Unknown distribution option: 'zip_safe'
      warnings.warn(msg)
    E:\Plang\ActivePython\lib\distutils\dist.py:267: UserWarning: Unknown distribution option: 'install_requires'
      warnings.warn(msg)
    usage: -c [global_opts] cmd1 [cmd1_opts] [cmd2 [cmd2_opts] ...]
       or: -c --help [cmd1 cmd2 ...]
       or: -c --help-commands
       or: -c cmd --help

    error: invalid command 'egg_info'
    Complete output from command python setup.py egg_info:
    E:\Plang\ActivePython\lib\distutils\dist.py:267: UserWarning: Unknown distribution option: 'zip_safe'
  warnings.warn(msg)

E:\Plang\ActivePython\lib\distutils\dist.py:267: UserWarning: Unknown distribution option: 'install_requires'
  warnings.warn(msg)

usage: -c [global_opts] cmd1 [cmd1_opts] [cmd2 [cmd2_opts] ...]
   or: -c --help [cmd1 cmd2 ...]
   or: -c --help-commands
   or: -c cmd --help

error: invalid command 'egg_info'
</code></pre>
","<p><s>Install <a href=""http://pypi.python.org/pypi/distribute/0.6#installation-instructions"" rel=""noreferrer"">distribute</a>, which comes with <code>egg_info</code>.</p>

<p>Should be as simple as <code>pip install Distribute</code>.</s></p>

<p>Distribute has been merged into Setuptools as of version 0.7. If you are using a version &lt;=0.6, upgrade using <code>pip install --upgrade setuptools</code> or <code>easy_install -U setuptools</code>.</p>
","11425830"
"Is it possible only to declare a variable without assigning any value in Python?","305765","","<p>Is it possible to declare a variable in Python, like so?:</p>

<pre><code>var
</code></pre>

<p>so that it initialized to None? It seems like Python allows this, but as soon as you access it, it crashes. Is this possible? If not, why?</p>

<p>EDIT: I want to do this for cases like this:</p>

<pre><code>value

for index in sequence:

   if value == None and conditionMet:
       value = index
       break
</code></pre>

<h3>Duplicate</h3>

<ul>
<li><a href=""https://stackoverflow.com/questions/664219/uninitialized-value-in-python"">Uninitialised value in python</a> (by same author)</li>
<li><a href=""https://stackoverflow.com/questions/571514/are-there-any-declaration-keywords-in-python"">Are there any declaration keywords in Python?</a> (by the same author)</li>
</ul>

<h3>Related</h3>

<ul>
<li><a href=""https://stackoverflow.com/questions/575196/python-variable-scope-and-function-calls"">Python: variable scope and function calls</a></li>
<li><a href=""http://python.net/~goodger/projects/pycon/2007/idiomatic/handout.html#other-languages-have-variables"" rel=""noreferrer"">Other languages have ""variables""</a></li>
</ul>
","<p>Why not just do this:</p>

<pre><code>var = None
</code></pre>

<p>Python is dynamic, so you don't need to declare things; they exist automatically in the first scope where they're assigned.  So, all you need is a regular old assignment statement as above.</p>

<p>This is nice, because you'll never end up with an uninitialized variable.  But be careful -- this doesn't mean that you won't end up with <em>incorrectly</em> initialized variables.  If you init something to <code>None</code>, make sure that's what you really want, and assign something more meaningful if you can.</p>
","664297"
"How to convert a string to utf-8 in Python","305374","","<p>I have a browser which sends utf-8 characters to my Python server, but when I retrieve it from the query string, the encoding that Python returns is ASCII. How can I convert the plain string to utf-8?</p>

<p>NOTE: The string passed from the web is already UTF-8 encoded, I just want to make Python to treat it as UTF-8 not ASCII.</p>
","<pre><code>&gt;&gt;&gt; plain_string = ""Hi!""
&gt;&gt;&gt; unicode_string = u""Hi!""
&gt;&gt;&gt; type(plain_string), type(unicode_string)
(&lt;type 'str'&gt;, &lt;type 'unicode'&gt;)
</code></pre>

<p>^ This is the difference between a byte string (plain_string) and a unicode string.</p>

<pre><code>&gt;&gt;&gt; s = ""Hello!""
&gt;&gt;&gt; u = unicode(s, ""utf-8"")
</code></pre>

<p>^ Converting to unicode and specifying the encoding.</p>
","4182635"
"How to install Python MySQLdb module using pip?","302246","","<p>How can I install the <a href=""http://mysql-python.sourceforge.net/MySQLdb.html"">MySQLdb</a> module for Python using pip?</p>
","<p>It's easy to do, but hard to remember the correct spelling:</p>

<pre><code>pip install mysqlclient
</code></pre>

<p>If you need 1.2.x versions (legacy Python only), use <code>pip install MySQL-python</code></p>

<p>Note: Some dependencies might have to be in place when running the above command. Some hints on how to install these on various platforms:</p>

<h2>Ubuntu 14, Ubuntu 16, Debian 8.6 (jessie)</h2>

<pre><code>sudo apt-get install python-pip python-dev libmysqlclient-dev
</code></pre>

<h2>Fedora 24:</h2>

<pre><code>sudo dnf install python python-devel mysql-devel redhat-rpm-config gcc
</code></pre>

<h2>Mac OS</h2>

<pre><code>brew install mysql-connector-c
</code></pre>

<p>if that fails, try</p>

<pre><code>brew install mysql
</code></pre>
","25865271"
"How to get all possible combinations of a list’s elements?","300693","","<p>I have a list with 15 numbers in, and I need to write some code that produces all 32,768 combinations of those numbers. </p>

<p>I've found <a href=""http://desk.stinkpot.org:8080/tricks/index.php/2008/04/get-all-possible-combinations-of-a-lists-elements-in-python/"" rel=""noreferrer"">some code</a> (by Googling) that apparently does what I'm looking for, but I found the code fairly opaque and am wary of using it. Plus I have a feeling there must be a more elegant solution.</p>

<p>The only thing that occurs to me would be to just loop through the decimal integers 1–32768 and convert those to binary, and use the binary representation as a filter to pick out the appropriate numbers. </p>

<p>Does anyone know of a better way? Using <code>map()</code>, maybe?</p>
","<p>Have a look at <a href=""http://docs.python.org/library/itertools.html#itertools.combinations"" rel=""noreferrer"">itertools.combinations</a>:</p>

<blockquote>
<pre><code>itertools.combinations(iterable, r)
</code></pre>
  
  <p>Return r length subsequences of elements from
  the input iterable.</p>
  
  <p>Combinations are emitted in lexicographic sort order. So, if the
  input iterable is sorted, the
  combination tuples will be produced in
  sorted order.</p>
</blockquote>

<p>Since 2.6, batteries are included!</p>
","464882"
"Reading specific lines only (Python)","300672","","<p>I'm using a for loop to read a file, but I only want to read specific lines, say line #26 and #30. Is there any built-in feature to achieve this?</p>

<p>Thanks</p>
","<p>If the file to read is big, and you don't want to read the whole file in memory at once:</p>

<pre><code>fp = open(""file"")
for i, line in enumerate(fp):
    if i == 25:
        # 26th line
    elif i == 29:
        # 30th line
    elif i &gt; 29:
        break
fp.close()
</code></pre>

<p>Note that <code>i == n-1</code> for the <code>n</code>th line.</p>

<hr>

<p>In Python 2.6 or later:</p>

<pre><code>with open(""file"") as fp:
    for i, line in enumerate(fp):
        if i == 25:
            # 26th line
        elif i == 29:
            # 30th line
        elif i &gt; 29:
            break
</code></pre>
","2081880"
"Python: about catching ANY exception","300478","","<p>How can I write a <code>try</code>/<code>except</code> block that catches all exceptions?</p>
","<p>You can but you shouldn't:</p>

<pre><code>try:
    do_something()
except:
    print ""Caught it!""
</code></pre>

<p>However, this will also catch exceptions like <code>KeyboardInterrupt</code> and you usually don't want that, do you? Unless you re-raise the exception right away - see the following example <a href=""http://docs.python.org/tutorial/errors.html"" rel=""noreferrer"">from the docs</a>:</p>

<pre><code>try:
    f = open('myfile.txt')
    s = f.readline()
    i = int(s.strip())
except IOError as (errno, strerror):
    print ""I/O error({0}): {1}"".format(errno, strerror)
except ValueError:
    print ""Could not convert data to an integer.""
except:
    print ""Unexpected error:"", sys.exc_info()[0]
    raise
</code></pre>
","4990739"
"Python: Check if a string represents an int, Without using Try/Except?","299974","","<p>Is there any way to tell whether a <strong>string</strong> represents an integer (e.g., <code>'3'</code>, <code>'-17'</code> but not <code>'3.14'</code> or <code>'asfasfas'</code>) Without using a try/except mechanism?</p>

<pre><code>is_int('3.14') = False
is_int('-7')   = True
</code></pre>
","<p>If you're really just annoyed at using <code>try/except</code>s all over the place, please just write a helper function:</p>

<pre><code>def RepresentsInt(s):
    try: 
        int(s)
        return True
    except ValueError:
        return False

&gt;&gt;&gt; print RepresentsInt(""+123"")
True
&gt;&gt;&gt; print RepresentsInt(""10.0"")
False
</code></pre>

<p>It's going to be WAY more code to exactly cover all the strings that Python considers integers.  I say just be pythonic on this one.</p>
","1267145"
"'pip' is not recognized as an internal or external command","299611","","<p>I'm running into a weird error trying to install Django on my computer.</p>

<p>This is the sequence that I've typed into my command line:</p>

<pre><code>C:\Python34&gt;python get-pip.py
Requirement already up-to-date: pip in c:\python34\lib\site-packages
Cleaning up...

C:\Python34&gt;pip install Django
'pip' is not recognized as an internal or external command,
operable program or batch file.

C:\Python34&gt;lib\site-packages\pip install Django
'lib\site-packages\pip' is not recognized as an internal or external command,
operable program or batch file. 
</code></pre>

<p>What could be causing this?</p>

<p>EDIT <strong>___________________</strong></p>

<p>As requested this is what I get when I type in echo %PATH%</p>

<pre><code>C:\Python34&gt;echo %PATH%
C:\Program Files\ImageMagick-6.8.8-Q16;C:\Program Files (x86)\Intel\iCLS Client\
;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\S
ystem32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\
Windows Live\Shared;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Progr
am Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Intel\Intel(R) Mana
gement Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine C
omponents\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components
\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\P
rogram Files (x86)\nodejs\;C:\Program Files (x86)\Heroku\bin;C:\Program Files (x
86)\git\cmd;C:\RailsInstaller\Ruby2.0.0\bin;C:\RailsInstaller\Git\cmd;C:\RailsIn
staller\Ruby1.9.3\bin;C:\Users\Javi\AppData\Roaming\npm
</code></pre>
","<p><strong>You need to add the path of your pip installation to your PATH system variable</strong>. By default, pip is installed to <code>C:\Python34\Scripts\pip</code> (pip now comes bundled with new versions of python), so the path ""C:\Python34\Scripts"" needs to be added to your PATH variable.</p>

<p>To check if it is already in your PATH variable, type <code>echo %PATH%</code> at the CMD prompt</p>

<p><strong>To add the path of your pip installation to your PATH variable</strong>, you can use the Control Panel or the <code>setx</code> command. For example:</p>

<pre><code>setx PATH ""%PATH%;C:\Python34\Scripts""
</code></pre>

<hr>

<p><strong>Note</strong>:
According to the <a href=""https://technet.microsoft.com/en-us/library/cc755104%28v=ws.11%29.aspx"">official documentation</a>, ""[v]ariables set with setx variables are available in future command windows only, not in the current command window"". In particular, <em>you will need to start a new cmd.exe instance</em> after entering the above command in order to utilize the new environment variable. </p>

<p>Thanks to Scott Bartell for pointing this out.</p>
","23709194"
"ValueError: setting an array element with a sequence","299603","","<p><strong>This Python code:</strong></p>

<pre><code>import numpy as p

def firstfunction():
    UnFilteredDuringExSummaryOfMeansArray = []
    MeanOutputHeader=['TestID','ConditionName','FilterType','RRMean','HRMean','dZdtMaxVoltageMean','BZMean','ZXMean'
                      ,'LVETMean','Z0Mean','StrokeVolumeMean','CardiacOutputMean','VelocityIndexMean']
    dataMatrix = BeatByBeatMatrixOfMatrices[column]
    roughTrimmedMatrix = p.array(dataMatrix[1:,1:17])


    trimmedMatrix = p.array(roughTrimmedMatrix,dtype=p.float64)  #ERROR THROWN HERE


    myMeans = p.mean(trimmedMatrix,axis=0,dtype=p.float64)
    conditionMeansArray = [TestID,testCondition,'UnfilteredBefore',myMeans[3], myMeans[4], myMeans[6], myMeans[9]
                      , myMeans[10], myMeans[11], myMeans[12], myMeans[13], myMeans[14], myMeans[15]]
    UnFilteredDuringExSummaryOfMeansArray.append(conditionMeansArray)
    secondfunction(UnFilteredDuringExSummaryOfMeansArray)
    return

def secondfunction(UnFilteredDuringExSummaryOfMeansArray):
    RRDuringArray = p.array(UnFilteredDuringExSummaryOfMeansArray,dtype=p.float64)[1:,3]
    return

firstfunction()
</code></pre>

<p><strong>Throws this error message:</strong></p>

<pre><code>File ""mypath\mypythonscript.py"", line 3484, in secondfunction
RRDuringArray = p.array(UnFilteredDuringExSummaryOfMeansArray,dtype=p.float64)[1:,3]
ValueError: setting an array element with a sequence.
</code></pre>

<p>Can anyone show me what to do to fix the problem in the broken code above so that it stops throwing an error message?</p>

<hr>

<p><strong>EDIT:</strong>
I did a print command to get the contents of the matrix, and this is what it printed out:</p>

<p>UnFilteredDuringExSummaryOfMeansArray is:  </p>

<pre><code>[['TestID', 'ConditionName', 'FilterType', 'RRMean', 'HRMean', 'dZdtMaxVoltageMean', 'BZMean', 'ZXMean', 'LVETMean', 'Z0Mean', 'StrokeVolumeMean', 'CardiacOutputMean', 'VelocityIndexMean'],
[u'HF101710', 'PreEx10SecondsBEFORE', 'UnfilteredBefore', 0.90670000000000006, 66.257731979420001, 1.8305673000000002, 0.11750000000000001, 0.15120546389880002, 0.26870546389879996, 27.628261216480002, 86.944190346160013, 5.767261352345999, 0.066259118585869997],
[u'HF101710', '25W10SecondsBEFORE', 'UnfilteredBefore', 0.68478571428571422, 87.727887206978565, 2.2965444125714285, 0.099642857142857144, 0.14952476549885715, 0.24916762264164286, 27.010483303721429, 103.5237336525, 9.0682762747642869, 0.085022572648242867],
[u'HF101710', '50W10SecondsBEFORE', 'UnfilteredBefore', 0.54188235294117659, 110.74841107829413, 2.6719262705882354, 0.077705882352917643, 0.15051306356552943, 0.2282189459185294, 26.768787504858825, 111.22827075238826, 12.329456404418824, 0.099814258468417641],
[u'HF101710', '75W10SecondsBEFORE', 'UnfilteredBefore', 0.4561904761904762, 131.52996981880955, 3.1818159523809522, 0.074714285714290493, 0.13459344175047619, 0.20930772746485715, 26.391156337028569, 123.27387909873812, 16.214243779323812, 0.1205685359981619]]
</code></pre>

<p>Looks like a 5 row by 13 column matrix to me, though the number of rows is variable when different data are run through the script.  With this same data that I am adding in this.</p>

<p><strong><em>EDIT 2</em></strong>: However, the script is throwing an error.  So I do not think that your idea explains the problem that is happening here.  Thank you, though.  Any other ideas?</p>

<hr>

<p><strong>EDIT 3:</strong></p>

<p>FYI, if I replace this problem line of code:</p>

<pre><code>    RRDuringArray = p.array(UnFilteredDuringExSummaryOfMeansArray,dtype=p.float64)[1:,3]
</code></pre>

<p>with this instead:</p>

<pre><code>    RRDuringArray = p.array(UnFilteredDuringExSummaryOfMeansArray)[1:,3]
</code></pre>

<p>Then that section of the script works fine without throwing an error, but then this line of code further down the line:</p>

<pre><code>p.ylim(.5*RRDuringArray.min(),1.5*RRDuringArray.max())
</code></pre>

<p>Throws this error:</p>

<pre><code>File ""mypath\mypythonscript.py"", line 3631, in CreateSummaryGraphics
  p.ylim(.5*RRDuringArray.min(),1.5*RRDuringArray.max())
TypeError: cannot perform reduce with flexible type
</code></pre>

<p>So you can see that I need to specify the data type in order to be able to use ylim in matplotlib, but yet specifying the data type is throwing the error message that initiated this post.</p>
","<p>From the code you showed us, the only thing we can tell is that you trying to create an array from a list that isn't shaped like a multi-dimensional array.  For example</p>

<pre><code>numpy.array([[1,2], [2, 3, 4]])
</code></pre>

<p>or</p>

<pre><code>numpy.array([[1,2], [2, [3, 4]]])
</code></pre>

<p>will yield this error message, because the shape of the input list isn't a (generalised) ""box"" that can be turned into a multidimensional array.  So probably <code>UnFilteredDuringExSummaryOfMeansArray</code> contains sequences of different lengths.</p>

<p><strong>Edit</strong>: Another possible cause for this error message is trying to use a string as an element in an array of type <code>float</code>:</p>

<pre><code>numpy.array([1.2, ""abc""], dtype=float)
</code></pre>

<p>That is what you are trying according to your edit.  If you really want to have a NumPy array containing both strings and floats, you could use the dtype <code>object</code>, which enables the array to hold arbitrary Python objects:</p>

<pre><code>numpy.array([1.2, ""abc""], dtype=object)
</code></pre>

<p>Without knowing what your code shall accomplish, I can't judge if this is what you want.</p>
","4675383"
"Python - TypeError: 'int' object is not iterable","299590","","<p>Here's my code:</p>

<pre><code>import math

print ""Hey, lets solve Task 4 :)""

number1 = input (""How many digits do you want to look at? "")
number2 = input (""What would you like the digits to add up to? "")

if number1 == 1:
    cow = range(0,10)
elif number1 == 2:
    cow = range(10,100)
elif number1 == 3:
    cow = range(100,1000)
elif number1 == 4:
    cow = range(1000,10000)
elif number1 == 5:
    cow = range(10000,100000)
elif number1 == 6:
    cow = range(100000,1000000)
elif number1 == 7:
    cow = range(1000000,10000000)
elif number1 == 8:
    cow = range(10000000,100000000)
elif number1 == 9:
    cow = range(100000000,1000000000)
elif number1 == 10:
    cow = range(1000000000,10000000000)

number3 = cow[-1] + 1

n = 0
while n &lt; number3:
    number4 = list(cow[n])
    n += 1
</code></pre>

<p>I am looking to make a loop so that for each element in the list, it will get broken down into each of it's characters. For example, say the number <code>137</code> was in the list then it would be turned into <code>[1,3,7]</code>. Then I want to add these numbers together (I haven't started that bit yet but I have some idea of how to do it).</p>

<p>However, I keep getting the error message</p>

<pre><code>TypeError: 'int' object is not iterable
</code></pre>

<p>when I try and run this.</p>

<p>What am I doing wrong?</p>
","<p>Your problem is with this line:</p>

<pre><code>number4 = list(cow[n])
</code></pre>

<p>It tries to take <code>cow[n]</code>, which returns an integer, and make it a list.  This doesn't work, as demonstrated below:</p>

<pre><code>&gt;&gt;&gt; a = 1
&gt;&gt;&gt; list(a)
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
TypeError: 'int' object is not iterable
&gt;&gt;&gt;
</code></pre>

<p>Perhaps you meant to put <code>cow[n]</code> <em>inside</em> a list:</p>

<pre><code>number4 = [cow[n]]
</code></pre>

<p>See a demonstration below:</p>

<pre><code>&gt;&gt;&gt; a = 1
&gt;&gt;&gt; [a]
[1]
&gt;&gt;&gt;
</code></pre>

<hr>

<p>Also, I wanted to address two things:</p>

<ol>
<li>Your while-statement is missing a <code>:</code> at the end.</li>
<li>It is considered very dangerous to use <code>input</code> like that, since it evaluates its input as real Python code.  It would be better here to use <a href=""http://docs.python.org/2.7/library/functions.html#raw_input""><code>raw_input</code></a> and then convert the input to an integer with <a href=""http://docs.python.org/2.7/library/functions.html#int""><code>int</code></a>.</li>
</ol>

<hr>

<p>To split up the digits and then add them like you want, I would first make the number a string.  Then, since strings are iterable, you can use <a href=""http://docs.python.org/2.7/library/functions.html#sum""><code>sum</code></a>:</p>

<pre><code>&gt;&gt;&gt; a = 137
&gt;&gt;&gt; a = str(a)
&gt;&gt;&gt; # This way is more common and preferred
&gt;&gt;&gt; sum(int(x) for x in a)
11
&gt;&gt;&gt; # But this also works
&gt;&gt;&gt; sum(map(int, a))
11
&gt;&gt;&gt;
</code></pre>
","19523620"
"Python progression path - From apprentice to guru","299443","","<p>I've been learning, working, and playing with Python for a year and a half now. As a biologist slowly making the turn to bio-informatics, this language has been at the very core of all the major contributions I have made in the lab. I more or less fell in love with the way Python permits me to express beautiful solutions and also with the semantics of the language that allows such a natural flow from thoughts to workable code.</p>

<p>What I would like to know is your answer to a kind of question I have seldom seen in this or other forums. This question seems central to me for anyone on the path to Python improvement but who wonders what his next steps should be.</p>

<p>Let me sum up what I do NOT want to ask first ;)</p>

<ul>
<li>I don't want to know how to QUICKLY learn Python</li>
<li>Nor do I want to find out the best way to get acquainted with the language</li>
<li>Finally, I don't want to know a 'one trick that does it all' approach.</li>
</ul>

<p>What I do want to know your opinion about, is:</p>

<p><strong>What are the steps YOU would recommend to a Python journeyman, from apprenticeship to guru status (feel free to stop wherever your expertise dictates it), in order that one IMPROVES CONSTANTLY, becoming a better and better Python coder, one step at a time. Some of the people on SO almost seem worthy of worship for their Python prowess, please enlighten us :)</strong></p>

<p>The kind of answers I would enjoy (but feel free to surprise the readership :P ), is formatted more or less like this:</p>

<ul>
<li>Read this (eg: python tutorial), pay attention to that kind of details</li>
<li>Code for so manytime/problems/lines of code</li>
<li>Then, read this (eg: this or that book), but this time, pay attention to this</li>
<li>Tackle a few real-life problems</li>
<li>Then, proceed to reading Y.</li>
<li>Be sure to grasp these concepts</li>
<li>Code for X time</li>
<li>Come back to such and such basics or move further to...</li>
<li>(you get the point :)</li>
</ul>

<p>I really care about knowing your opinion on what exactly one should pay attention to, at various stages, in order to progress CONSTANTLY (with due efforts, of course). If you come from a specific field of expertise, discuss the path you see as appropriate in this field.</p>

<p>EDIT: Thanks to your great input, I'm back on the Python improvement track! I really appreciate!</p>
","<p>I thought the process of Python mastery went something like:</p>

<ol>
<li>Discover <a href=""http://en.wikipedia.org/wiki/List_comprehension#Python"" rel=""noreferrer"">list comprehensions</a></li>
<li>Discover <a href=""http://en.wikipedia.org/wiki/Python_syntax_and_semantics#Generators"" rel=""noreferrer"">generators</a></li>
<li>Incorporate <a href=""http://docs.python.org/library/functions.html"" rel=""noreferrer"">map, reduce, filter, iter, range, xrange</a> often into your code</li>
<li>Discover <a href=""http://wiki.python.org/moin/PythonDecorators"" rel=""noreferrer"">Decorators</a></li>
<li>Write recursive functions, a lot</li>
<li>Discover <a href=""http://docs.python.org/library/itertools.html"" rel=""noreferrer"">itertools</a> and <a href=""http://docs.python.org/library/functools.html"" rel=""noreferrer"">functools</a></li>
<li>Read <a href=""http://rads.stackoverflow.com/amzn/click/0596514980"" rel=""noreferrer"">Real World Haskell</a> (<a href=""http://book.realworldhaskell.org/read/"" rel=""noreferrer"">read free online</a>)</li>
<li>Rewrite all your old Python code with tons of higher order functions, recursion, and whatnot.</li>
<li>Annoy your cubicle mates every time they present you with a Python class.  Claim it could be ""better"" implemented as a dictionary plus some functions.  Embrace functional programming.</li>
<li>Rediscover the <a href=""http://en.wikipedia.org/wiki/Strategy_pattern#Python"" rel=""noreferrer"">Strategy</a> pattern and then <a href=""http://rads.stackoverflow.com/amzn/click/0596007124"" rel=""noreferrer"">all those things</a> from imperative code you tried so hard to forget after Haskell.</li>
<li>Find a balance.</li>
</ol>
","2576240"
"Selecting a row of pandas series/dataframe by integer index","299022","","<p>I am curious as to why <code>df[2]</code> is not supported, while <code>df.ix[2]</code> and <code>df[2:3]</code> both work. </p>

<pre><code>In [26]: df.ix[2]
Out[26]: 
A    1.027680
B    1.514210
C   -1.466963
D   -0.162339
Name: 2000-01-03 00:00:00

In [27]: df[2:3]
Out[27]: 
                  A        B         C         D
2000-01-03  1.02768  1.51421 -1.466963 -0.162339
</code></pre>

<p>I would expect <code>df[2]</code> to work the same way as <code>df[2:3]</code> to be consistent with Python indexing convention. Is there a design reason for not supporting indexing row by single integer?</p>
","<p>echoing @HYRY, see the new docs in 0.11</p>

<p><a href=""http://pandas.pydata.org/pandas-docs/stable/indexing.html"" rel=""noreferrer"">http://pandas.pydata.org/pandas-docs/stable/indexing.html</a></p>

<p>Here we have new operators, <code>.iloc</code> to explicity support only integer indexing, and <code>.loc</code> to explicity support only label indexing</p>

<p>e.g. imagine this scenario</p>

<pre><code>In [1]: df = DataFrame(randn(5,2),index=range(0,10,2),columns=list('AB'))

In [2]: df
Out[2]: 
          A         B
0  1.068932 -0.794307
2 -0.470056  1.192211
4 -0.284561  0.756029
6  1.037563 -0.267820
8 -0.538478 -0.800654

In [5]: df.iloc[[2]]
Out[5]: 
          A         B
4 -0.284561  0.756029

In [6]: df.loc[[2]]
Out[6]: 
          A         B
2 -0.470056  1.192211
</code></pre>

<p><code>[]</code> slices the rows (by label location) only</p>
","16104482"
"Installing Numpy on 64bit Windows 7 with Python 2.7.3","298848","","<p>It looks like the only 64 bit windows installer for Numpy is for Numpy version 1.3.0 which only works with Python 2.6</p>

<p><a href=""http://sourceforge.net/projects/numpy/files/NumPy/"" rel=""noreferrer"">http://sourceforge.net/projects/numpy/files/NumPy/</a></p>

<p>It strikes me as strange that I would have to roll back to Python 2.6 to use Numpy on Windows, which makes me think I'm missing something.</p>

<p>Am I?</p>
","<p>Try the (unofficial) binaries in this site:</p>

<p><a href=""http://www.lfd.uci.edu/~gohlke/pythonlibs/#numpy"">http://www.lfd.uci.edu/~gohlke/pythonlibs/#numpy</a></p>

<p>You can get the newest <code>numpy</code> x64 with or without Intel MKL libs for Python 2.7 or Python 3.</p>
","11200146"
"How to check Django version","296844","","<p>I have to use <a href=""http://en.wikipedia.org/wiki/Python_%28programming_language%29"" rel=""noreferrer"">Python</a> and <a href=""http://en.wikipedia.org/wiki/Django_%28web_framework%29"" rel=""noreferrer"">Django</a> for our application. So I have two versions of Python, 2.6 and 2.7. Now I have installed Django. I could run the sample application for testing Django succesfuly. But how do I make sure whether Django uses the 2.6 or 2.7 version and what version of modules Django uses?</p>
","<p>Django 1.5 supports Python 2.6.5 and later.</p>

<p>If you're under Linux and want to check the Python version you're using, run <code>python -V</code> from the command line.</p>

<p>If you want to check the Django version, open a Python console and type</p>

<pre><code>&gt;&gt;&gt; import django
&gt;&gt;&gt; django.VERSION
(2, 0, 0, 'final', 0)
</code></pre>
","6468505"
"Using the AND and NOT Operator in Python","296553","","<p>Here is my custom class that I have that represents a triangle.  I'm trying to write code that checks to see if <code>self.a</code>, <code>self.b</code>, and <code>self.c</code> are greater than 0, which would mean that I have Angle, Angle, Angle.  </p>

<p>Below you will see the code that checks for A and B, however when I use just <code>self.a != 0</code> then it works fine.  I believe I'm not using <code>&amp;</code> correctly.  Any ideas?  Here is how I am calling it: <code>print myTri.detType()</code></p>

<pre><code>class Triangle:

    # Angle A To Angle C Connects Side F
    # Angle C to Angle B Connects Side D
    # Angle B to Angle A Connects Side E

    def __init__(self, a, b, c, d, e, f):
        self.a = a
        self.b = b
        self.c = c
        self.d = d
        self.e = e
        self.f = f

    def detType(self):
        #Triangle Type AAA
        if self.a != 0 &amp; self.b != 0:
            return self.a

        #If self.a &gt; 10:
            #return AAA

        #Triangle Type AAS

        #elif self.a = 0:
            #return AAS

        #Triangle Type ASA

        #Triangle Type SAS

        #Triangle Type SSS  

        #else:
            #return unknown
</code></pre>
","<p>You should write :</p>

<pre><code>if (self.a != 0) and (self.b != 0) :
</code></pre>

<p>""<code>&amp;</code>"" is the bit wise operator and does not suit for boolean operations. The equivalent of  ""<code>&amp;&amp;</code>"" is ""and"" in Python.</p>

<p>A shorter way to check what you want is to use the ""in"" operator :</p>

<pre><code>if 0 not in (self.a, self.b) :
</code></pre>

<p>You can check if anything is part of a an iterable with ""in"", it works for :</p>

<ul>
<li>Tuples. I.E : <code>""foo"" in (""foo"", 1, c, etc)</code> will return true</li>
<li>Lists. I.E : <code>""foo"" in [""foo"", 1, c, etc]</code> will return true</li>
<li>Strings. I.E : <code>""a"" in ""ago""</code> will return true</li>
<li>Dict. I.E : <code>""foo"" in {""foo"" : ""bar""}</code> will return true</li>
</ul>

<p><strong>As an answer to the comments :</strong></p>

<p>Yes, using ""in"" is slower since you are creating an Tuple object, but really performances are not an issue here, plus readability matters a lot in Python.</p>

<p>For the triangle check, it's easier to read :</p>

<pre><code>0 not in (self.a, self.b, self.c)
</code></pre>

<p>Than </p>

<pre><code>(self.a != 0) and (self.b != 0) and (self.c != 0) 
</code></pre>

<p>It's easier to refactor too.</p>

<p>Of course, in this example, it really is not that important, it's very simple snippet. But this style leads to a Pythonic code, which leads to a happier programmer (and losing weight, improving sex life, etc.) on big programs.</p>
","1075700"
"Importing modules from parent folder","295671","","<p>I am running Python 2.5.</p>

<p>This is my folder tree:</p>

<pre><code>ptdraft/
  nib.py
  simulations/
    life/
      life.py
</code></pre>

<p>(I also have <code>__init__.py</code> in each folder, omitted here for readability)</p>

<p>How do I import the <code>nib</code> module from inside the <code>life</code> module? I am hoping it is possible to do without tinkering with sys.path.</p>

<p>Note: The main module being run is in the <code>ptdraft</code> folder.</p>
","<p>It seems that the problem is not related to the module being in a parent directory or anything like that.</p>

<p>You need to add the directory that contains <code>ptdraft</code> to PYTHONPATH</p>

<p>You said that <code>import nib</code> worked with you, that probably means that you added <code>ptdraft</code> itself (not its parent) to PYTHONPATH.</p>
","714070"
"No module named pkg_resources","295623","","<p>I'm deploying a Django app to a dev server and am hitting this error when i run pip install requirements.txt:</p>

<pre><code>Traceback (most recent call last):
  File ""/var/www/mydir/virtualenvs/dev/bin/pip"", line 5, in &lt;module&gt;
    from pkg_resources import load_entry_point
ImportError: No module named pkg_resources
</code></pre>

<p>pkg_resources appears to be distributed with setuptools.  Initially I thought this might not be installed to the python in the virtualenv so I installed setuptools (2.6, same version as Python) to the Python site-packages in the virtualenv with the following command</p>

<pre><code>sh setuptools-0.6c11-py2.6.egg --install-dir /var/www/mydir/virtualenvs/dev/lib/python2.6/site-packages
</code></pre>

<p>EDIT
This only happens inside the virtualenv.  If I open a console outside the virtualenv then pkg_resources is present</p>

<p>but I am still getting the same error.  Any ideas as to why pkg_resources is not on the path?</p>
","<p>I encountered the same <code>ImportError</code> today while trying to use pip. Somehow the <code>setuptools</code> package had been deleted in my Python environment.</p>

<p>To fix the issue, run the setup script for <code>setuptools</code>:</p>

<pre><code>wget https://bootstrap.pypa.io/ez_setup.py -O - | python
</code></pre>

<p>(or if you don't have <code>wget</code> installed (e.g. OS X), try</p>

<pre><code>curl https://bootstrap.pypa.io/ez_setup.py | python
</code></pre>

<p>possibly with <code>sudo</code> prepended.)</p>

<p>If you have any version of <a href=""http://pythonhosted.org/setuptools/merge-faq.html""><code>distribute</code></a>, or any <code>setuptools</code> below 0.6, you will have to uninstall it first.*</p>

<p>See <a href=""https://pypi.python.org/pypi/setuptools/0.9.8#installation-instructions"">Installation Instructions</a> for further details.</p>

<hr>

<p>* If you already have a working <code>distribute</code>, upgrading it to the ""compatibility wrapper"" that switches you over to <code>setuptools</code> is easier. But if things are already broken, don't try that.</p>
","10538412"
"How do I split a multi-line string into multiple lines?","295608","","<p>I have a multi-line string literal that I want to do an operation on each line, like so:</p>

<pre><code>inputString = """"""Line 1
Line 2
Line 3""""""
</code></pre>

<p>I want to do something like the following:</p>

<pre><code>for line in inputString:
    doStuff()
</code></pre>
","<pre><code>inputString.splitlines()
</code></pre>

<p>Will give you a list with each item, the <a href=""http://docs.python.org/2/library/stdtypes.html#str.splitlines"" rel=""noreferrer""><code>splitlines()</code></a> method is designed to split each line into a list element.</p>
","172454"
"What's the difference between lists and tuples?","295550","","<p>What's the difference?</p>

<p>What are the advantages / disadvantages of tuples / lists?</p>
","<p>Apart from tuples being immutable there is also a semantic distinction that should guide their usage. Tuples are heterogeneous data structures (i.e., their entries have different meanings), while lists are homogeneous sequences. <strong>Tuples have structure, lists have order.</strong> </p>

<p>Using this distinction makes code more explicit and understandable.</p>

<p>One example would be pairs of page and line number to reference locations in a book, e.g.:</p>

<pre><code>my_location = (42, 11)  # page number, line number
</code></pre>

<p>You can then use this as a key in a dictionary to store notes on locations. A list on the other hand could be used to store multiple locations. Naturally one might want to add or remove locations from the list, so it makes sense that lists are mutable. On the other hand it doesn't make sense to add or remove items from an existing location - hence tuples are immutable.</p>

<p>There might be situations where you want to change items within an existing location tuple, for example when iterating through the lines of a page. But tuple immutability forces you to create a new location tuple for each new value. This seems inconvenient on the face of it, but using immutable data like this is a cornerstone of value types and functional programming techniques, which can have substantial advantages.</p>

<p>There are some interesting articles on this issue, e.g. <a href=""http://jtauber.com/blog/2006/04/15/python_tuples_are_not_just_constant_lists/"" rel=""noreferrer"">""Python Tuples are Not Just Constant Lists""</a> or <a href=""http://news.e-scribe.com/397"" rel=""noreferrer"">""Understanding tuples vs. lists in Python""</a>. The official Python documentation <a href=""http://docs.python.org/2/tutorial/datastructures.html#tuples-and-sequences"" rel=""noreferrer"">also mentions this</a> (<em>""Tuples are immutable, and usually contain an heterogeneous sequence ...""</em>).</p>

<p>In a statically typed language like <em>Haskell</em> the values in a tuple generally have different types and the length of the tuple must be fixed. In a list the values all have the same type and the length is not fixed. So the difference is very obvious.</p>

<p>Finally there is the <a href=""http://docs.python.org/dev/library/collections.html#collections.namedtuple"" rel=""noreferrer"">namedtuple</a> in Python, which makes sense because a tuple is already supposed to have structure. This underlines the idea that tuples are a light-weight alternative to classes and instances.</p>
","626871"
"Play a Sound with Python","295331","","<p>What's the easiest way to play a sound file (.wav) in Python? By easiest I mean both most platform independent and requiring the least dependencies. pygame is certainly an option, but it seems overkill for just sound.</p>
","<p><a href=""http://www.speech.kth.se/snack/"" rel=""noreferrer"">The Snack Sound Toolkit</a> can play wav, au and mp3 files.  </p>

<pre><code>s = Sound() 
s.read('sound.wav') 
s.play()
</code></pre>
","307501"
"How would you make a comma-separated string from a list?","295234","","<p>What would be your preferred way to concatenate strings from a sequence such that between each two consecutive pair a comma is added. That is, how do you map, for instance, <code>[ 'a', 'b', 'c' ]</code> to <code>'a,b,c'</code>? (The cases <code>[ s ]</code> and <code>[]</code> should be mapped to <code>s</code> and <code>''</code>, respectively.)</p>

<p>I usually end up using something like <code>''.join(map(lambda x: x+',',l))[:-1]</code>, but also feeling somewhat unsatisfied.</p>

<p>Edit: I'm both ashamed and happy that the solution is so simple. Obviously I have hardly a clue as to what I'm doing. (I probably needed ""simple"" concatenation in the past and somehow memorised <code>s.join([e1,e2,...])</code> as a shorthand for <code>s+e1+e2+...</code>.)</p>
","<pre><code>myList = ['a','b','c','d']
myString = "","".join(myList )
</code></pre>

<p>This won't work if the list contains numbers.</p>

<hr>

<p>As <a href=""https://stackoverflow.com/users/3399/ricardo-reyes"">Ricardo Reyes</a> suggested, if it contains non-string types (such as integers, floats, bools, None) then do:</p>

<pre><code>myList = ','.join(map(str, myList)) 
</code></pre>
","44781"
"How do I correctly clean up a Python object?","294982","","<pre><code>class Package:
    def __init__(self):
        self.files = []

    # ...

    def __del__(self):
        for file in self.files:
            os.unlink(file)
</code></pre>

<p><code>__del__(self)</code> above fails with an AttributeError exception.  I understand <a href=""http://docs.python.org/reference/datamodel.html#customization"" rel=""noreferrer"">Python doesn't guarantee</a> the existence of ""global variables"" (member data in this context?) when <code>__del__()</code> is invoked.  If that is the case and this is the reason for the exception, how do I make sure the object destructs properly?</p>
","<p>I'd recommend using Python's <code>with</code> statement for managing resources that need to be cleaned up.  The problem with using an explicit <code>close()</code> statement is that you have to worry about people forgetting to call it at all or forgetting to place it in a <code>finally</code> block to prevent a resource leak when an exception occurs.</p>

<p>To use the <code>with</code> statement, create a class with the following methods:</p>

<pre><code>  def __enter__(self)
  def __exit__(self, exc_type, exc_value, traceback)
</code></pre>

<p>In your example above, you'd use </p>

<pre><code>class Package:
    def __init__(self):
        self.files = []

    def __enter__(self):
        return self

    # ...

    def __exit__(self, exc_type, exc_value, traceback):
        for file in self.files:
            os.unlink(file)
</code></pre>

<p>Then, when someone wanted to use your class, they'd do the following:</p>

<pre><code>with Package() as package_obj:
    # use package_obj
</code></pre>

<p>The variable package_obj will be an instance of type Package (it's the value returned by the <code>__enter__</code> method).  Its <code>__exit__</code> method will automatically be called, regardless of whether or not an exception occurs.</p>

<p>You could even take this approach a step further.  In the example above, someone could still instantiate Package using its constructor without using the <code>with</code> clause.  You don't want that to happen.  You can fix this by creating a PackageResource class that defines the <code>__enter__</code> and <code>__exit__</code> methods.  Then, the Package class would be defined strictly inside the <code>__enter__</code> method and returned.  That way, the caller never could instantiate the Package class without using a <code>with</code> statement:</p>

<pre><code>class PackageResource:
    def __enter__(self):
        class Package:
            ...
        self.package_obj = Package()
        return self.package_obj

    def __exit__(self, exc_type, exc_value, traceback):
        self.package_obj.cleanup()
</code></pre>

<p>You'd use this as follows:</p>

<pre><code>with PackageResource() as package_obj:
    # use package_obj
</code></pre>
","865272"
"Install tkinter for Python","294129","","<p>I am trying to import Tkinter. However, I get an error stating that Tkinter has not been installed:</p>

<blockquote>
  <p>ImportError: No module named _tkinter, please install the python-tk package</p>
</blockquote>

<p>I could probably install it using synaptic manager (can I?), however, I would have to install it on every machine I program on. Would it be possible to add the Tkinter library into my workspace and reference it from there?</p>
","<p>It is not very easy to install Tkinter locally to use with system-provided Python. You may build it from sources, but this is usually not the best idea with a binary package-based distro you're apparently running.</p>

<p>It's safer to <code>apt-get install python-tk</code> on your machine(s).
(Works on Debian-derived distributions like for Ubuntu; refer to your package manager and package list on other distributions.)</p>
","4784123"
"append multiple values for one key in Python dictionary","293599","","<p>I am new to python and I have a list of years and values for each year. What I want to do is check if the year already exists in a dictionary and if it does, append the value to that list of values for the specific key.</p>

<p>So for instance, I have a list of years and have one value for each year:</p>

<pre><code>2010  
2  
2009  
4  
1989  
8  
2009  
7  
</code></pre>

<p>What I want to do is populate a dictionary with the years as keys and those single digit numbers as values. However, if I have 2009 listed twice, I want to append that second value to my list of values in that dictionary, so I want:  </p>

<pre><code>2010: 2  
2009: 4, 7  
1989: 8  
</code></pre>

<p>Right now I have the following:  </p>

<pre><code>d = dict()  
years = []  

(get 2 column list of years and values)

for line in list:    
    year = line[0]   
    value = line[1]  

for line in list:  
    if year in d.keys():  
        d[value].append(value)  
    else:  
        d[value] = value  
        d[year] = year  
</code></pre>
","<p>If I can rephrase your question, what you want is a dictionary with the years as keys and an array for each year containing a list of values associated with that year, right? Here's how I'd do it:</p>

<pre><code>years_dict = dict()

for line in list:
    if line[0] in years_dict:
        # append the new number to the existing array at this slot
        years_dict[line[0]].append(line[1])
    else:
        # create a new array in this slot
        years_dict[line[0]] = [line[1]]
</code></pre>

<p>What you should end up with in years_dict is a dictionary that looks like the following:</p>

<pre><code>{
    ""2010"": [2],
    ""2009"": [4,7],
    ""1989"": [8]
}
</code></pre>

<p>In general, it's poor programming practice to create ""parallel arrays"", where items are implicitly associated with each other by having the same index rather than being proper children of a container that encompasses them both.</p>
","3199256"
"How do I check if a given Python string is a substring of another one?","293394","","<p>I have two strings and I would like to check whether the first is a substring of the other. Does Python have such a built-in functionality?</p>
","<p>Try using <code>in</code> like this:</p>

<pre><code>&gt;&gt;&gt; x = 'hello'
&gt;&gt;&gt; y = 'll'
&gt;&gt;&gt; y in x
True
</code></pre>
","5143782"
"How to send POST request?","292643","","<p>I found this script online:</p>

<pre><code>import httplib, urllib
params = urllib.urlencode({'number': 12524, 'type': 'issue', 'action': 'show'})
headers = {""Content-type"": ""application/x-www-form-urlencoded"",
            ""Accept"": ""text/plain""}
conn = httplib.HTTPConnection(""bugs.python.org"")
conn.request(""POST"", """", params, headers)
response = conn.getresponse()
print response.status, response.reason
302 Found
data = response.read()
data
'Redirecting to &lt;a href=""http://bugs.python.org/issue12524""&gt;http://bugs.python.org/issue12524&lt;/a&gt;'
conn.close()
</code></pre>

<p>But I don't understand how to use it with PHP or what everything inside the params variable is or how to use it. Can I please have a little help with trying to get this to work?</p>
","<p>If you really want to handle with HTTP using Python, I highly recommend <a href=""http://docs.python-requests.org/en/latest/index.html"" rel=""noreferrer"">Requests: HTTP for Humans</a>. The <a href=""http://docs.python-requests.org/en/latest/user/quickstart/#more-complicated-post-requests"" rel=""noreferrer"">POST quickstart</a> adapted to your question is:</p>

<pre><code>&gt;&gt;&gt; import requests
&gt;&gt;&gt; r = requests.post(""http://bugs.python.org"", data={'number': 12524, 'type': 'issue', 'action': 'show'})
&gt;&gt;&gt; print(r.status_code, r.reason)
200 OK
&gt;&gt;&gt; print(r.text[:300] + '...')

&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd""&gt;
&lt;html xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""en"" lang=""en""&gt;
&lt;head&gt;
&lt;title&gt;
Issue 12524: change httplib docs POST example - Python tracker

&lt;/title&gt;
&lt;link rel=""shortcut i...
&gt;&gt;&gt; 
</code></pre>
","11324941"
"How can I subtract a day from a Python date?","291388","","<p>I have a Python <a href=""https://docs.python.org/library/datetime.html#datetime-objects"" rel=""noreferrer""><code>datetime.datetime</code></a> object. What is the best way to subtract one day?</p>
","<p>You can use a <a href=""http://docs.python.org/3.3/library/datetime.html?highlight=datetime#timedelta-objects"" rel=""noreferrer"">timedelta</a> object:</p>

<pre><code>from datetime import datetime, timedelta

d = datetime.today() - timedelta(days=days_to_subtract)
</code></pre>
","441152"
"How to update Python?","291064","","<p>I have version 2.7 installed from early 2012. I can't find any consensus on whether I should completely uninstall and wipe this version before putting on the latest version.</p>

<p>""Soft""-removing old versions? Hard-removing/wiping old versions? Installing over top?</p>

<p>I've seen somewhere a special install/upgrade process using a ""segmenting"" method of Python installations, keeping different versions separate and apart, but functional. Not sure if this is the standard, de facto way.</p>

<p>I also wonder if Revo gets too overzealous and may cause issues with wiping out still-needed remnants, like environment/PATH variables.</p>

<p>(Win7 x64, 32-bit Python)</p>
","<h3><strong>UPDATE: 2017-03-34</strong></h3>

<p><em>There have been no updates to Python(x,y) since June of 2015, so I think it's safe to assume it has been abandoned.</em></p>

<h3><strong>UPDATE</strong>: 2016-11-11</h3>

<p>As <a href=""https://stackoverflow.com/questions/15102943/how-to-update-python/17954487#comment68062745_17954487"">@cxw comments below</a>, these answers are for the same bit-versions, and by bit-version I mean 64-bit vs. 32-bit. For example, these answers would apply to updating from 64-bit Python-2.7.10 to 64-bit Python-2.7.11, <em>ie</em>: the <em>same</em> bit-version. While it is possible to install two different bit versions of Python together, it would require some hacking, so I'll save that exercise for the reader. If you don't want to hack, I suggest that if switching bit-versions, remove the other bit-version first.</p>

<h3><strong>UPDATES</strong>: 2016-05-16</h3>

<ul>
<li><a href=""https://docs.continuum.io/anaconda/install#windows-install"" rel=""noreferrer"">Anaconda</a> and <a href=""http://conda.pydata.org/docs/install/quick.html#windows-miniconda-install"" rel=""noreferrer"">MiniConda</a> can be used with an existing Python installation by disabling the options to alter the Windows <code>PATH</code> and Registry. After extraction, create a symlink to <code>conda</code> in your <code>bin</code> or install conda from PyPI. Then create another symlink called <code>conda-activate</code> to <code>activate</code> in the Anaconda/Miniconda root bin folder. Now Anaconda/Miniconda is just like Ruby RVM. Just use <code>conda-activate root</code> to enable Anaconda/Miniconda.</li>
<li>Portable Python is no longer being developed or maintained.</li>
</ul>

<h3><em>TL;DR</em></h3>

<ul>
<li><strong>same <em>major</em> version</strong> (<em>e.g.</em> 2.7.5), just install over old (<em>e.g.</em> 2.7.4), </li>
<li><strong>different <em>major</em> version</strong> (<em>e.g.</em> 3.3), install side-by-side with old, set paths/associations to point to dominant (<em>e.g.</em> 2.7), shortcut to other (<em>e.g.</em> in BASH <code>$ ln /c/Python33/python.exe python3</code>).</li>
</ul>

<h3>The answer depends:</h3>

<ol>
<li><p>If OP has 2.7.x and wants to install newer version of 2.7.x, then</p>

<ul>
<li>if using <a href=""http://en.wikipedia.org/wiki/Windows_Installer"" rel=""noreferrer"">MSI installer</a> from the <a href=""http://www.python.org/download/"" rel=""noreferrer"">official Python website</a>, just install over old version, installer will issue warning that it will remove and replace the older version; looking in ""installed programs"" in ""control panel"" before and after confirms that the old version has been replaced by the new version; newer versions of 2.7.x are backwards compatible so this is completely safe and therefore IMHO multiple versions of 2.7.x should never necessary.</li>
<li>if building from source, then you should probably build in a fresh, clean directory, and then point your path to the new build once it passes all tests and you are confident that it has been built successfully, but you may wish to keep the old build around because building from source may occasionally have issues. See my <a href=""http://poquitopicante.blogspot.com/2015/03/building-python-x64-on-windows-7-with.html"" rel=""noreferrer"">guide for building Python x64 on Windows 7 with SDK 7.0</a>.</li>
<li>if installing from a distribution such as <a href=""https://code.google.com/p/pythonxy/"" rel=""noreferrer"">Python(x,y)</a>, see their website. <strong><a href=""http://python-xy.github.io/"" rel=""noreferrer"">Python(x,y)</a> has been abandoned.</strong> <s>I believe that updates can be handled from within Python(x,y) with their package manager, but <a href=""https://code.google.com/p/pythonxy/wiki/Downloads#Updates"" rel=""noreferrer"">updates are also included on their website</a>. I could not find a specific reference so perhaps someone else can speak to this. Similar to ActiveState and probably Enthought, Python (x,y) clearly states it is incompatible with other installations of Python:</s>

<blockquote>
  <p>It is recommended to uninstall any other Python distribution before installing Python(x,y)  </p>
</blockquote></li>
<li><a href=""https://www.enthought.com/downloads/"" rel=""noreferrer"">Enthought Canopy</a> uses an MSI and will install either into <code>Program Files\Enthought</code> or <code>home\AppData\Local\Enthought\Canopy\App</code> for all users or per user respectively. Newer installations are updated by using the built in update tool. See their <a href=""http://docs.enthought.com/canopy/quick-start/install_windows.html"" rel=""noreferrer"">documentation</a>.</li>
<li><a href=""http://www.activestate.com/activepython/downloads"" rel=""noreferrer"">ActiveState</a> also uses an MSI so newer installations can be installed on top of older ones. See their <a href=""http://docs.activestate.com/activepython/2.7/installnotes.html#msi"" rel=""noreferrer"">installation notes</a>.

<blockquote>
  <p>Other Python 2.7 Installations On Windows, ActivePython 2.7 cannot coexist with other Python 2.7 installations (for example, a Python 2.7 build from python.org). Uninstall any other Python 2.7 installations before installing ActivePython 2.7.</p>
</blockquote></li>
<li><a href=""http://www.sagemath.org/download-windows.html"" rel=""noreferrer"">Sage</a> recommends that you install it into a virtual machine, and provides a Oracle VirtualBox image file that can be used for this purpose. Upgrades are handled internally by issuing the <code>sage -upgrade</code> command.</li>
<li><p><a href=""https://store.continuum.io/cshop/anaconda/"" rel=""noreferrer"">Anaconda</a> can be <a href=""http://docs.continuum.io/anaconda/install.html#updating-from-older-anaconda-versions"" rel=""noreferrer"">updated by using the <code>conda</code> command</a>:</p>

<pre><code>conda update conda
conda update anaconda
</code></pre>

<p>Anaconda/Miniconda lets users create <em>environments</em> to manage multiple Python versions including Python-2.6, 2.7, 3.3, 3.4 and 3.5. The root Anaconda/Miniconda installations are currently based on either Python-2.7 or Python-3.5.</p>

<p><s>Anaconda will likely disrupt any other Python installations. Installation uses MSI installer.</s>
[<strong>UPDATE</strong>: 2016-05-16] <em>Anaconda and Miniconda now use <code>.exe</code> installers and provide options to disable Windows <code>PATH</code> and Registry alterations.</em></p>

<p>Therefore Anaconda/Miniconda can be installed without disrupting existing Python installations depending on how it was installed and the options that were selected during installation. If the <code>.exe</code> installer is used and the options to alter Windows <code>PATH</code> and Registry are <em>not</em> disabled, then any previous Python installations <em>will be disabled</em>, but simply uninstalling the Anaconda/Miniconda installation should restore the original Python installation, except maybe the Windows Registry <code>Python\PythonCore</code> keys.</p>

<p>Anaconda/Miniconda makes the following registry edits regardless of the installation options: <code>HKCU\Software\Python\ContinuumAnalytics\</code> with the following keys: <code>Help</code>, <code>InstallPath</code>, <code>Modules</code> and <code>PythonPath</code> - official Python registers these keys too, but under <code>Python\PythonCore</code>. Also uninstallation info is registered for Anaconda\Miniconda. Unless you select the ""Register with Windows"" option during installation, it doesn't create <code>PythonCore</code>, so integrations like Python Tools for Visual Studio do not automatically see Anaconda/Miniconda. If the option to register Anaconda/Miniconda <em>is</em> enabled, then I think your existing Python Windows Registry keys will be altered and uninstallation will probably not restore them.</p></li>
<li><a href=""https://winpython.github.io/"" rel=""noreferrer"">WinPython</a> updates, I think, can be handled through the <a href=""https://github.com/winpython/winpython/wiki/Winpython-Control-Panel"" rel=""noreferrer"">WinPython  Control Panel</a>.</li>
<li><a href=""http://portablepython.com/"" rel=""noreferrer"">PortablePython</a> is <strong>no longer being developed</strong>. <s>It had no update method. Possibly updates could be unzipped into a fresh directory and then <code>App\lib\site-packages</code> and <code>App\Scripts</code> could be copied to the new installation, but if this didn't work then reinstalling all packages might have been necessary. Use <code>pip list</code> to see what packages were installed and their versions. Some were installed by PortablePython. Use <code>easy_install pip</code> to install pip if it wasn't installed.</s></li>
</ul></li>
<li><p>If OP has 2.7.x and wants to install a different version, <em>e.g.</em> &lt;=2.6.x or >=3.x.x, then installing different versions side-by-side is fine. You must choose which version of Python (if any) to associate with <code>*.py</code> files and which you want on your path, although you should be able to set up shells with different paths if you use <a href=""http://tiswww.case.edu/php/chet/bash/bashtop.html"" rel=""noreferrer"">BASH</a>. AFAIK 2.7.x is backwards compatible with 2.6.x, so IMHO side-by-side installs is not necessary, however Python-3.x.x is not backwards compatible, so my recommendation would be to put Python-2.7 on your path and have Python-3 be an optional version by creating a shortcut to its executable called python3 (this is a common setup on Linux). The official Python default install path on Windows is</p>

<ul>
<li>C:\Python33 for 3.3.x (latest 2013-07-29)</li>
<li>C:\Python32 for 3.2.x</li>
<li>&amp;c.</li>
<li>C:\Python27 for 2.7.x (latest 2013-07-29)</li>
<li>C:\Python26 for 2.6.x</li>
<li>&amp;c.</li>
</ul></li>
<li><p>If OP is not updating Python, but merely updating packages, they may wish to look into <a href=""https://pypi.python.org/pypi/virtualenv"" rel=""noreferrer"">virtualenv</a> to keep the different versions of packages specific to their development projects separate. <a href=""https://pypi.python.org/pypi/pip"" rel=""noreferrer"">Pip</a> is also a great tool to update packages. If packages use binary installers I usually uninstall the old package before installing the new one.</p></li>
</ol>

<p>I hope this clears up any confusion.</p>
","17954487"
"Python division","290674","","<p>I was trying to normalize a set of numbers from -100 to 0 to a range of 10-100 and was having problems only to notice that even with no variables at all, this does not evaluate the way I would expect it to:</p>

<pre><code>&gt;&gt;&gt; (20-10) / (100-10)
0
</code></pre>

<p>Float division doesn't work either:</p>

<pre><code>&gt;&gt;&gt; float((20-10) / (100-10))
0.0
</code></pre>

<p>If either side of the division is cast to a float it will work:</p>

<pre><code>&gt;&gt;&gt; (20-10) / float((100-10))
0.1111111111111111
</code></pre>

<p>Each side in the first example is evaluating as an int which means the final answer will be cast to an int. Since 0.111 is less than .5, it rounds to 0.  It is not transparent in my opinion, but I guess that's the way it is.</p>

<p>What is the explanation?</p>
","<p>You're using Python 2.x, where integer divisions will truncate instead of becoming a floating point number.</p>

<pre><code>&gt;&gt;&gt; 1 / 2
0
</code></pre>

<p>You should make one of them a <code>float</code>:</p>

<pre><code>&gt;&gt;&gt; float(10 - 20) / (100 - 10)
-0.1111111111111111
</code></pre>

<p>or <code>from __future__ import division</code>, which the forces <code>/</code> to adopt Python 3.x's behavior that always returns a float.</p>

<pre><code>&gt;&gt;&gt; from __future__ import division
&gt;&gt;&gt; (10 - 20) / (100 - 10)
-0.1111111111111111
</code></pre>
","2958717"
"Find and list duplicates in a list?","290109","","<p>How can I find the duplicates in a Python list and create another list of the duplicates?  The list is just integers.</p>
","<p>To remove duplicates use <code>set(a)</code>, to print duplicates - something like</p>

<pre><code>a = [1,2,3,2,1,5,6,5,5,5]

import collections
print [item for item, count in collections.Counter(a).items() if count &gt; 1]

## [1, 2, 5]
</code></pre>

<p>Note that <code>Counter</code> is not particularly efficient (<a href=""https://stackoverflow.com/a/25706298/989121"">timings</a>) and probably an overkill here, <code>set</code> will perform better:</p>

<pre><code>seen = set()
uniq = []
for x in a:
    if x not in seen:
        uniq.append(x)
        seen.add(x)
</code></pre>

<p>or, more concisely:</p>

<pre><code>seen = set()
uniq = [x for x in a if x not in seen and not seen.add(x)]    
</code></pre>

<p>I don't recommend the latter style, because it is not obvious what <code>not seen.add(x)</code> is doing  (the set <code>add()</code> method always returns <code>None</code>, hence the need for <code>not</code>).</p>

<p>If list elements are not hashable, you cannot use set/dicts and have to resort to a quadratic time solution (compare each which each), for example:</p>

<pre><code>a = [ [1], [2], [3], [1], [5], [3] ]

no_dupes = [x for n, x in enumerate(a) if x not in a[:n]]
print no_dupes # [[1], [2], [3], [5]]

dupes = [x for n, x in enumerate(a) if x in a[:n]]
print dupes # [[1], [3]]
</code></pre>
","9835819"
"How can the euclidean distance be calculated with numpy?","289972","","<p>I have two points in 3D:</p>

<pre><code>(xa, ya, za)
(xb, yb, zb)
</code></pre>

<p>And I want to calculate the distance:</p>

<pre><code>dist = sqrt((xa-xb)^2 + (ya-yb)^2 + (za-zb)^2)
</code></pre>

<p>What's the best way to do this with Numpy, or with Python in general?  I have:</p>

<pre><code>a = numpy.array((xa ,ya, za))
b = numpy.array((xb, yb, zb))
</code></pre>
","<p>Use <a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.norm.html"" rel=""noreferrer""><code>numpy.linalg.norm</code></a>:</p>

<pre><code>dist = numpy.linalg.norm(a-b)
</code></pre>
","1401828"
"TypeError: 'str' does not support the buffer interface","288449","","<pre class=""lang-python prettyprint-override""><code>plaintext = input(""Please enter the text you want to compress"")
filename = input(""Please enter the desired filename"")
with gzip.open(filename + "".gz"", ""wb"") as outfile:
    outfile.write(plaintext) 
</code></pre>

<p>The above python code is giving me following error:</p>

<pre class=""lang-none prettyprint-override""><code>Traceback (most recent call last):
  File ""C:/Users/Ankur Gupta/Desktop/Python_works/gzip_work1.py"", line 33, in &lt;module&gt;
    compress_string()
  File ""C:/Users/Ankur Gupta/Desktop/Python_works/gzip_work1.py"", line 15, in compress_string
    outfile.write(plaintext)
  File ""C:\Python32\lib\gzip.py"", line 312, in write
    self.crc = zlib.crc32(data, self.crc) &amp; 0xffffffff
TypeError: 'str' does not support the buffer interface
</code></pre>
","<p>If you use Python3x then <code>string</code> is not the same type as for Python 2.x, you must cast it to bytes (encode it).</p>

<pre><code>plaintext = input(""Please enter the text you want to compress"")
filename = input(""Please enter the desired filename"")
with gzip.open(filename + "".gz"", ""wb"") as outfile:
    outfile.write(bytes(plaintext, 'UTF-8'))
</code></pre>

<p>Also do not use variable names like <code>string</code> or <code>file</code> while those are names of module or function.</p>

<p><em>EDIT @Tom</em></p>

<p>Yes, non-ASCII text is also compressed/decompressed. I use Polish letters with UTF-8 encoding:</p>

<pre><code>plaintext = 'Polish text: ąćęłńóśźżĄĆĘŁŃÓŚŹŻ'
filename = 'foo.gz'
with gzip.open(filename, 'wb') as outfile:
    outfile.write(bytes(plaintext, 'UTF-8'))
with gzip.open(filename, 'r') as infile:
    outfile_content = infile.read().decode('UTF-8')
print(outfile_content)
</code></pre>
","5471351"
"How to execute Python scripts in Windows?","288275","","<p>I have a simple script blah.py (using Python 2):</p>

<pre><code>import sys
print sys.argv[1]
</code></pre>

<p>If I execute my script by:</p>

<pre><code>python c:/..../blah.py argument
</code></pre>

<p>It prints argument but if I execute script by:</p>

<pre><code>blah.py argument
</code></pre>

<p>error occurs:</p>

<blockquote>
  <p>IndexError...</p>
</blockquote>

<p>So arguments do not pass to script.</p>

<p>python.exe in PATH. Folder with blah.py also in PATH.<br>
python.exe is default program to execute *.py files.</p>

<p>What is the problem?</p>
","<p>When you execute a script without typing ""python"" in front, you need to know two things about how Windows invokes the program.  First is to find out what kind of file Windows thinks it is: </p>

<pre>
    C:\>assoc .py
    .py=Python.File
</pre>

<p>Next, you need to know how Windows is executing things with that extension.  It's associated with the file type ""Python.File"", so this command shows what it will be doing:</p>

<pre>
    C:\>ftype Python.File
    Python.File=""c:\python26\python.exe"" ""%1"" %*
</pre>

<p>So on my machine, when I type ""blah.py foo"", it will execute this exact command, with no difference in results than if I had typed the full thing myself:</p>

<pre>
    ""c:\python26\python.exe"" ""blah.py"" foo
</pre>

<p>If you type the same thing, including the quotation marks, then you'll get results identical to when you just type ""blah.py foo"".  Now you're in a position to figure out the rest of your problem for yourself.  </p>

<p>(Or post more helpful information in your question, like actual cut-and-paste copies of what you see in the console.  Note that people who do that type of thing get their questions voted up, and they get reputation points, and more people are likely to help them with good answers.)</p>

<h1>Brought In From Comments:</h1>

<p>Even if assoc and ftype display the correct information, it may happen that the arguments are stripped off. What may help in that case is directly fixing the relevant registry keys for Python. Set the </p>

<pre><code>HKEY_CLASSES_ROOT\Applications\python26.exe\shell\open\command
</code></pre>

<p>key to: </p>

<pre><code>""C:\Python26\python26.exe"" ""%1"" %*
</code></pre>

<p>Likely, previously, <code>%*</code> was missing. Similarly, set </p>

<pre><code> HKEY_CLASSES_ROOT\py_auto_file\shell\open\command
</code></pre>

<p>to the same value. See <a href=""http://eli.thegreenplace.net/2010/12/14/problem-passing-arguments-to-python-scripts-on-windows/"" rel=""noreferrer"">http://eli.thegreenplace.net/2010/12/14/problem-passing-arguments-to-python-scripts-on-windows/</a></p>

<p><a href=""https://i.stack.imgur.com/Dpdzv.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/Dpdzv.png"" alt=""example registry setting for python.exe""></a>
<code>HKEY_CLASSES_ROOT\Applications\python.exe\shell\open\command</code> The registry path may vary, use <code>python26.exe</code> or <code>python.exe</code> or whichever is already in the registry.</p>

<p><a href=""https://i.stack.imgur.com/mFI0X.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/mFI0X.png"" alt=""enter image description here""></a>
<code>HKEY_CLASSES_ROOT\py_auto_file\shell\open\command</code></p>
","1936078"
"What is the best way to call a Python script from another Python script?","286840","","<p>I have a script named test1.py which is not in a module. It just has code that should execute when the script itself is run. There are no functions, classes, methods, etc. I have another script which runs as a service. I want to call test1.py from the script running as a service.</p>

<p>For example:</p>

<h3>File test1.py</h3>

<pre><code>print ""I am a test""
print ""see! I do nothing productive.""
</code></pre>

<h3>File service.py</h3>

<pre><code># Lots of stuff here
test1.py # do whatever is in test1.py
</code></pre>

<p>I'm aware of one method which is opening the file, reading the contents, and basically eval'ing it. I'm assuming there's a better way of doing this. Or at least I hope so.</p>
","<p>The usual way to do this is something like the following.</p>

<p>test1.py</p>

<pre><code>def some_func():
    print 'in test 1, unproductive'

if __name__ == '__main__':
    # test1.py executed as script
    # do something
    some_func()
</code></pre>

<p>service.py</p>

<pre><code>import test1

def service_func():
    print 'service func'

if __name__ == '__main__':
    # service.py executed as script
    # do something
    service_func()
    test1.some_func()
</code></pre>
","1186847"
"Installing SciPy with pip","286299","","<p>It is possible to install <a href=""http://en.wikipedia.org/wiki/NumPy"" rel=""noreferrer"">NumPy</a> with <a href=""https://en.wikipedia.org/wiki/Pip_%28package_manager%29"" rel=""noreferrer"">pip</a> using <code>pip install numpy</code>. </p>

<p>Is there a similar possibility with <a href=""http://en.wikipedia.org/wiki/SciPy"" rel=""noreferrer"">SciPy</a>? (Doing <code>pip install scipy</code> does not work.)</p>

<hr>

<p><strong>Update</strong></p>

<p>The package SciPy is now available to be installed with <code>pip</code>!</p>
","<p>An attempt to <code>easy_install</code> indicates a problem with their <a href=""http://pypi.python.org/pypi/scipy/0.7.0"" rel=""noreferrer"">listing</a> in the <a href=""http://pypi.python.org/pypi"" rel=""noreferrer"">Python Package Index</a>, which pip searches.</p>

<pre><code>easy_install scipy
Searching for scipy
Reading http://pypi.python.org/simple/scipy/
Reading http://www.scipy.org
Reading http://sourceforge.net/project/showfiles.php?group_id=27747&amp;package_id=19531
Reading http://new.scipy.org/Wiki/Download
</code></pre>

<p>All is not lost, however; <code>pip</code> can install from <a href=""http://en.wikipedia.org/wiki/Apache_Subversion"" rel=""noreferrer"">Subversion</a> (SVN), <a href=""http://en.wikipedia.org/wiki/Git_%28software%29"" rel=""noreferrer"">Git</a>, <a href=""http://en.wikipedia.org/wiki/Mercurial"" rel=""noreferrer"">Mercurial</a>, and <a href=""http://en.wikipedia.org/wiki/Bazaar_%28software%29"" rel=""noreferrer"">Bazaar</a> repositories. SciPy uses SVN:</p>

<pre><code>pip install svn+http://svn.scipy.org/svn/scipy/trunk/#egg=scipy
</code></pre>

<p>Update (12-2012):</p>

<pre><code>pip install git+https://github.com/scipy/scipy.git
</code></pre>

<p>Since NumPy is a dependency, it should be installed as well.</p>
","2214018"
"Split by comma and strip whitespace in Python","286087","","<p>I have some python code that splits on comma, but doesn't strip the whitespace:</p>

<pre><code>&gt;&gt;&gt; string = ""blah, lots  ,  of ,  spaces, here ""
&gt;&gt;&gt; mylist = string.split(',')
&gt;&gt;&gt; print mylist
['blah', ' lots  ', '  of ', '  spaces', ' here ']
</code></pre>

<p>I would rather end up with whitespace removed like this:</p>

<pre><code>['blah', 'lots', 'of', 'spaces', 'here']
</code></pre>

<p>I am aware that I could loop through the list and strip() each item but, as this is Python, I'm guessing there's a quicker, easier and more elegant way of doing it.</p>
","<p>Use list comprehension -- simpler, and just as easy to read as a <code>for</code> loop.</p>

<pre><code>my_string = ""blah, lots  ,  of ,  spaces, here ""
[x.strip() for x in my_string.split(',')]
</code></pre>

<p><strong>See:</strong> <a href=""http://docs.python.org/tutorial/datastructures.html#list-comprehensions"" rel=""noreferrer"">Python docs on List Comprehension</a><br>
<a href=""https://stackoverflow.com/questions/501308/problem-in-understanding-python-list-comprehensions/501323#501323"">A good 2 second explanation of list comprehension.</a></p>
","4071407"
"How to create new folder?","285999","","<p>I want to put output information of my program to a folder. if given folder does not exist, then the program should create a new folder with folder name as given in the program. Is this possible? If yes, please let me know how.</p>

<p>Suppose I have given folder path like <code>""C:\Program Files\alex""</code> and <code>alex</code> folder doesn't exist then program should create <code>alex</code> folder and should put output information in the <code>alex</code> folder.</p>
","<p>You can create a folder with <a href=""http://docs.python.org/3/library/os.html?highlight=os.makedirs#os.makedirs"" rel=""noreferrer"">os.makedirs()</a><br>
and use <a href=""http://docs.python.org/3/library/os.path.html?highlight=os.path.exists#os.path.exists"" rel=""noreferrer"">os.path.exists()</a> to see if it already exists:</p>

<pre><code>newpath = r'C:\Program Files\arbitrary' 
if not os.path.exists(newpath):
    os.makedirs(newpath)
</code></pre>

<p>If you're trying to make an installer: <a href=""http://www.advancedinstaller.com/"" rel=""noreferrer"">Windows Installer</a> does a lot of work for you.</p>
","1274465"
"Difference between abstract class and interface in Python","285647","","<p>What is the difference between abstract class and interface in Python?</p>
","<p>What you'll see sometimes is the following:</p>

<pre><code>class Abstract1( object ):
    """"""Some description that tells you it's abstract,
    often listing the methods you're expected to supply.""""""
    def aMethod( self ):
        raise NotImplementedError( ""Should have implemented this"" )
</code></pre>

<p>Because Python doesn't have (and doesn't need) a formal Interface contract, the Java-style distinction between abstraction and interface doesn't exist.  If someone goes through the effort to define a formal interface, it will also be an abstract class.  The only differences would be in the stated intent in the docstring.  </p>

<p>And the difference between abstract and interface is a hairsplitting thing when you have duck typing.</p>

<p>Java uses interfaces because it doesn't have multiple inheritance.</p>

<p>Because Python has multiple inheritance, you may also see something like this</p>

<pre><code>class SomeAbstraction( object ):
    pass # lots of stuff - but missing something

class Mixin1( object ):
    def something( self ):
        pass # one implementation

class Mixin2( object ):
    def something( self ):
        pass # another

class Concrete1( SomeAbstraction, Mixin1 ):
    pass

class Concrete2( SomeAbstraction, Mixin2 ):
    pass
</code></pre>

<p>This uses a kind of abstract superclass with mixins to create concrete subclasses that are disjoint.</p>
","372121"
"How can I split and parse a string in Python?","285605","","<p>I am trying to split this string in python: <code>2.7.0_bf4fda703454</code></p>

<p>I want to split that string on the underscore <code>_</code> so that I can use the value on the left side.</p>
","<p><code>""2.7.0_bf4fda703454"".split(""_"")</code> gives a list of strings:</p>

<pre><code>In [1]: ""2.7.0_bf4fda703454"".split(""_"")
Out[1]: ['2.7.0', 'bf4fda703454']
</code></pre>

<p>This splits the string at <em>every</em> underscore. If you want it to stop after the first split, use <code>""2.7.0_bf4fda703454"".split(""_"", 1)</code>.</p>

<p>If you know for a fact that the string contains an underscore, you can even unpack the LHS and RHS into separate variables:</p>

<pre><code>In [8]: lhs, rhs = ""2.7.0_bf4fda703454"".split(""_"", 1)

In [9]: lhs
Out[9]: '2.7.0'

In [10]: rhs
Out[10]: 'bf4fda703454'
</code></pre>

<p>An alternative pointed out by @S.Lott is to use <a href=""http://docs.python.org/library/stdtypes.html#str.partition"" rel=""noreferrer""><code>partition</code></a>. The usage is similar to the last example, except that it returns three components instead of two. The principal advantage is that this method doesn't fail if the string doesn't contain the separator. This method, however, requires Python 2.5.</p>
","5749208"
"Redirect stdout to a file in Python?","285316","","<p>How do I redirect stdout to an arbitrary file in Python?</p>

<p>When a long-running Python script (e.g, web application) is started from within the ssh session and backgounded, and the ssh session is closed, the application will raise IOError and fail the moment it tries to write to stdout. I needed to find a way to make the application and modules output to a file rather than stdout to prevent failure due to IOError. Currently, I employ nohup to redirect output to a file, and that gets the job done, but I was wondering if there was a way to do it without using nohup, out of curiosity.</p>

<p>I have already tried <code>sys.stdout = open('somefile', 'w')</code>, but this does not seem to prevent some external modules from still outputting to terminal (or maybe the <code>sys.stdout = ...</code> line did not fire at all). I know it should work from simpler scripts I've tested on, but I also didn't have time yet to test on a web application yet.</p>
","<p>If you want to do the redirection within the Python script, set <code>sys.stdout</code> to an file object does the trick:</p>

<pre><code>import sys
sys.stdout = open('file', 'w')
print 'test'
</code></pre>

<p>A far more common method is to use shell redirection when executing (same on Windows and Linux):</p>

<pre><code>$ python foo.py &gt; file
</code></pre>
","4675744"
"How do I find the length (or dimensions, size) of a numpy matrix in python?","284500","","<p>For a numpy matrix in python</p>

<pre><code>from numpy import matrix
A = matrix([[1,2],[3,4]])
</code></pre>

<p>How can I find the length of a row (or column) of this matrix? Equivalently, how can I know the number of rows or columns?</p>

<p>So far, the only solution I've found is:</p>

<pre><code>len(A)
len(A[:,1])
len(A[1,:])
</code></pre>

<p>Which returns 2, 2, and 1, respectively. From this I've gathered that <code>len()</code> will return the number of rows, so I can always us the transpose, <code>len(A.T)</code>, for the number of columns. However, this feels unsatisfying and arbitrary, as when reading the line <code>len(A)</code>, it isn't immediately obvious that this should return the number of rows. It actually works differently than <code>len([1,2])</code> would for a 2D python array, as this would return 2.</p>

<p>So, is there a more intuitive way to find the size of a matrix, or is this the best I have?</p>
","<p><code>shape</code> is a property of both numpy ndarray's and matrices.</p>

<pre><code>A.shape
</code></pre>

<p>will return a tuple (m, n), where m is the number of rows, and n is the number of columns.</p>

<p>In fact, the numpy <code>matrix</code> object is built on top of the <code>ndarray</code> object, one of numpy's two fundamental objects (along with a universal function object), so it inherits from <code>ndarray</code></p>
","14847459"
"How to fix ""Attempted relative import in non-package"" even with __init__.py","284349","","<p>I'm trying to follow <a href=""http://www.python.org/dev/peps/pep-0328/"" rel=""noreferrer"">PEP 328</a>, with the following directory structure:</p>

<pre><code>pkg/
  __init__.py
  components/
    core.py
    __init__.py
  tests/
    core_test.py
    __init__.py
</code></pre>

<p>In <code>core_test.py</code> I have the following import statement</p>

<pre><code>from ..components.core import GameLoopEvents
</code></pre>

<p>However, when I run, I get the following error:</p>

<pre><code>tests$ python core_test.py 
Traceback (most recent call last):
  File ""core_test.py"", line 3, in &lt;module&gt;
    from ..components.core import GameLoopEvents
ValueError: Attempted relative import in non-package
</code></pre>

<p>Searching around I found ""<a href=""https://stackoverflow.com/questions/9427037/relative-path-not-working-even-with-init-py"">relative path not working even with __init__.py</a>"" and ""<a href=""https://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder/6098238#6098238"">Import a module from a relative path</a>"" but they didn't help.</p>

<p>Is there anything I'm missing here?</p>
","<p>Yes. You're not using it as a package.</p>

<pre><code>python -m pkg.tests.core_test
</code></pre>
","11536794"
"How do I install Python packages on Windows?","283955","","<p>I'm having a hard time setting up python packages. EasyInstall from <a href=""http://pypi.python.org/pypi/setuptools"" rel=""noreferrer"">SetupTools</a> is supposed to help that, but they don't have an executable for Python 2.6.</p>

<p>For instance to install Mechanize, I'm just supposed to put the Mechanize folder in C:\Python24\Lib\site-packages according to INSTALL.txt, but runnning the tests does not work. Can someone help shed some light on this? Thanks!</p>
","<p>The <a href=""https://stackoverflow.com/a/1449704/1438393"">accepted answer</a> is outdated. So first, <a href=""https://pypi.python.org/pypi/pip"" rel=""noreferrer""><code>pip</code></a> is preferred over <code>easy_install</code>, (<a href=""https://stackoverflow.com/questions/3220404/why-use-pip-over-easy-install"">Why use pip over easy_install?</a>). Then follow these steps to install <code>pip</code> on Windows, it's quite easy.</p>

<ol>
<li><p>Install <a href=""https://pypi.python.org/pypi/setuptools#installation-instructions"" rel=""noreferrer""><code>setuptools</code></a>:</p>

<pre><code>curl https://bootstrap.pypa.io/ez_setup.py | python
</code></pre></li>
<li><p>Install <a href=""http://www.pip-installer.org/en/latest/installing.html"" rel=""noreferrer""><code>pip</code></a>:</p>

<pre><code>curl https://bootstrap.pypa.io/get-pip.py | python
</code></pre></li>
<li><p>Optionally, you can add the path to your environment so that you can use <code>pip</code> anywhere. It's somewhere like <code>C:\Python33\Scripts</code>.</p></li>
</ol>
","15626784"
"Python datetime to string without microsecond component","283953","","<p>I'm adding UTC time strings to Bitbucket API responses that currently only contain Amsterdam (!) time strings. For consistency with the UTC time strings returned elsewhere, the desired format is <code>2011-11-03 11:07:04</code> (followed by <code>+00:00</code>, but that's not germane).</p>

<p>What's the best way to create such a string (<em>without</em> a microsecond component) from a <code>datetime</code> instance <em>with</em> a microsecond component?</p>

<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; print unicode(datetime.datetime.now())
2011-11-03 11:13:39.278026
</code></pre>

<p>I'll add the best option that's occurred to me as a possible answer, but there may well be a more elegant solution.</p>

<p><strong>Edit:</strong> I should mention that I'm not <em>actually</em> printing the current time – I used <code>datetime.now</code> to provide a quick example. So the solution should not assume that any <code>datetime</code> instances it receives will include microsecond components.</p>
","<pre><code>&gt;&gt;&gt; datetime.datetime.now().strftime(""%Y-%m-%d %H:%M:%S"")
'2011-11-03 18:21:26'
</code></pre>
","7999977"
"raw_input function in Python","283791","","<p>What is the <code>raw_input</code> function? Is it a user interface? When do we use it?</p>
","<p>It presents a prompt to the user (the optional <code>arg</code> of <code>raw_input([arg])</code>), gets input from the user and returns the data input by the user in a string. See the docs for <a href=""https://docs.python.org/2/library/functions.html#raw_input"" rel=""noreferrer""><code>raw_input()</code></a>.</p>

<p>Example:</p>

<pre><code>name = raw_input(""What is your name? "")
print ""Hello, %s."" % name
</code></pre>

<p>This differs from <a href=""https://docs.python.org/2/library/functions.html#input"" rel=""noreferrer""><code>input()</code></a>  in that the latter tries to interpret the input given by the user; it is usually best to avoid <code>input()</code> and to stick with <code>raw_input()</code> and custom parsing/conversion code.</p>

<p><em>Note: This is for Python 2.x</em></p>
","5563119"
"I'm getting Key error in python","282774","","<p>In my python program I am getting this error:</p>

<pre><code>KeyError: 'variablename'
</code></pre>

<p>From this code:</p>

<pre><code>path = meta_entry['path'].strip('/'),
</code></pre>

<p>Can anyone please explain why this is happening?</p>
","<p>A <a href=""https://docs.python.org/library/exceptions.html#KeyError"" rel=""noreferrer""><code>KeyError</code></a> generally means the key doesn't exist. So, are you sure the <code>path</code> key exists?</p>

<p>From the official python docs:</p>

<p><strong>exception KeyError</strong></p>

<blockquote>
  <p>Raised when a mapping (dictionary) key is not found in the set of
  existing keys.</p>
</blockquote>

<p>For example:</p>

<pre><code>&gt;&gt;&gt; mydict = {'a':'1','b':'2'}
&gt;&gt;&gt; mydict['a']
'1'
&gt;&gt;&gt; mydict['c']
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
KeyError: 'c'
&gt;&gt;&gt;
</code></pre>

<p>So, try to print the content of <code>meta_entry</code> and check whether <code>path</code> exists or not.</p>

<pre><code>&gt;&gt;&gt; mydict = {'a':'1','b':'2'}
&gt;&gt;&gt; print mydict
{'a': '1', 'b': '2'}
</code></pre>

<p>Or, you can do:</p>

<pre><code>&gt;&gt;&gt; 'a' in mydict
True
&gt;&gt;&gt; 'c' in mydict
False
</code></pre>
","10116540"
"python 3.5: TypeError: a bytes-like object is required, not 'str' when writing to a file","282138","","<p>I've very recently migrated to Py 3.5.
This code was working properly in Python 2.7:</p>

<pre><code>with open(fname, 'rb') as f:
    lines = [x.strip() for x in f.readlines()]

for line in lines:
    tmp = line.strip().lower()
    if 'some-pattern' in tmp: continue
    # ... code
</code></pre>

<p>After upgrading to 3.5, I'm getting the:</p>

<pre><code>TypeError: a bytes-like object is required, not 'str'
</code></pre>

<p>error on the last line (the pattern search code).</p>

<p>I've tried using the <code>.decode()</code> function on either side of the statement, also tried:</p>

<pre><code>if tmp.find('some-pattern') != -1: continue
</code></pre>

<p>- to no avail.</p>

<p>I was able to resolve almost all 2:3 issues quickly, but this little statement is bugging me.</p>
","<p>You opened the file in binary mode:</p>

<pre><code>with open(fname, 'rb') as f:
</code></pre>

<p>This means that all data read from the file is returned as <code>bytes</code> objects, not <code>str</code>. You cannot then use a string in a containment test:</p>

<pre><code>if 'some-pattern' in tmp: continue
</code></pre>

<p>You'd have to use a <code>bytes</code> object to test against <code>tmp</code> instead:</p>

<pre><code>if b'some-pattern' in tmp: continue
</code></pre>

<p>or open the file as a textfile instead by replacing the <code>'rb'</code> mode with <code>'r'</code>.</p>
","33054552"
"How does the @property decorator work?","281911","","<p>I would like to understand how the built-in function <code>property</code> works. What confuses me is that <code>property</code> can also be used as a decorator, but it only takes arguments when used as a built-in function and not when used as a decorator.</p>

<p>This example is from the <a href=""http://docs.python.org/2/library/functions.html#property"">documentation</a>:</p>

<pre><code>class C(object):
    def __init__(self):
        self._x = None

    def getx(self):
        return self._x
    def setx(self, value):
        self._x = value
    def delx(self):
        del self._x
    x = property(getx, setx, delx, ""I'm the 'x' property."")
</code></pre>

<p><code>property</code>'s arguments are <code>getx</code>, <code>setx</code>, <code>delx</code> and a doc string.</p>

<p>In the code below <code>property</code> is used as decorator. The object of it is the <code>x</code> function, but in the code above there is no place for an object function in the arguments.</p>

<pre><code>class C(object):
    def __init__(self):
        self._x = None

    @property
    def x(self):
        """"""I'm the 'x' property.""""""
        return self._x

    @x.setter
    def x(self, value):
        self._x = value

    @x.deleter
    def x(self):
        del self._x
</code></pre>

<p>And, how are the <code>x.setter</code> and <code>x.deleter</code> decorators created?
I am confused.</p>
","<p>The <code>property()</code> function returns a special <a href=""http://docs.python.org/2/howto/descriptor.html"" rel=""noreferrer"">descriptor object</a>:</p>

<pre><code>&gt;&gt;&gt; property()
&lt;property object at 0x10ff07940&gt;
</code></pre>

<p>It is this object that has <em>extra</em> methods:</p>

<pre><code>&gt;&gt;&gt; property().getter
&lt;built-in method getter of property object at 0x10ff07998&gt;
&gt;&gt;&gt; property().setter
&lt;built-in method setter of property object at 0x10ff07940&gt;
&gt;&gt;&gt; property().deleter
&lt;built-in method deleter of property object at 0x10ff07998&gt;
</code></pre>

<p>These act as decorators <em>too</em>. They return a new property object:</p>

<pre><code>&gt;&gt;&gt; property().getter(None)
&lt;property object at 0x10ff079f0&gt;
</code></pre>

<p>that is a copy of the old object, but with one of the functions replaced.</p>

<p>Remember, that the <code>@decorator</code> syntax is just syntactic sugar; the syntax:</p>

<pre><code>@property
def foo(self): return self._foo
</code></pre>

<p>really means the same thing as</p>

<pre><code>def foo(self): return self._foo
foo = property(foo)
</code></pre>

<p>so <code>foo</code> the function is replaced by <code>property(foo)</code>, which we saw above is a special object. Then when you use <code>@foo.setter()</code>, what you are doing is call that <code>property().setter</code> method I showed you above, which returns a new copy of the property, but this time with the setter function replaced with the decorated method.</p>

<p>The following sequence also creates a full-on property, by using those decorator methods.</p>

<p>First we create some functions and a <code>property</code> object with just a getter:</p>

<pre><code>&gt;&gt;&gt; def getter(self): print 'Get!'
... 
&gt;&gt;&gt; def setter(self, value): print 'Set to {!r}!'.format(value)
... 
&gt;&gt;&gt; def deleter(self): print 'Delete!'
... 
&gt;&gt;&gt; prop = property(getter)
&gt;&gt;&gt; prop.fget is getter
True
&gt;&gt;&gt; prop.fset is None
True
&gt;&gt;&gt; prop.fdel is None
True
</code></pre>

<p>Next we use the <code>.setter()</code> method to add a setter:</p>

<pre><code>&gt;&gt;&gt; prop = prop.setter(setter)
&gt;&gt;&gt; prop.fget is getter
True
&gt;&gt;&gt; prop.fset is setter
True
&gt;&gt;&gt; prop.fdel is None
True
</code></pre>

<p>Last we add a deleter with the <code>.deleter()</code> method:</p>

<pre><code>&gt;&gt;&gt; prop = prop.deleter(deleter)
&gt;&gt;&gt; prop.fget is getter
True
&gt;&gt;&gt; prop.fset is setter
True
&gt;&gt;&gt; prop.fdel is deleter
True
</code></pre>

<p>Last but not least, the <code>property</code> object acts as a <a href=""http://docs.python.org/2/reference/datamodel.html#implementing-descriptors"" rel=""noreferrer"">descriptor object</a>, so it has <a href=""http://docs.python.org/2/reference/datamodel.html#object.__get__"" rel=""noreferrer""><code>.__get__()</code></a>, <a href=""http://docs.python.org/2/reference/datamodel.html#object.__set__"" rel=""noreferrer""><code>.__set__()</code></a> and <a href=""http://docs.python.org/2/reference/datamodel.html#object.__delete__"" rel=""noreferrer""><code>.__delete__()</code></a> methods to hook into instance attribute getting, setting and deleting:</p>

<pre><code>&gt;&gt;&gt; class Foo(object): pass
... 
&gt;&gt;&gt; prop.__get__(Foo(), Foo)
Get!
&gt;&gt;&gt; prop.__set__(Foo(), 'bar')
Set to 'bar'!
&gt;&gt;&gt; prop.__delete__(Foo())
Delete!
</code></pre>

<p>The Descriptor Howto includes a <a href=""http://docs.python.org/2/howto/descriptor.html#properties"" rel=""noreferrer"">pure python sample implementation</a> of the <code>property()</code> type:</p>

<blockquote>
<pre><code>class Property(object):
    ""Emulate PyProperty_Type() in Objects/descrobject.c""

    def __init__(self, fget=None, fset=None, fdel=None, doc=None):
        self.fget = fget
        self.fset = fset
        self.fdel = fdel
        if doc is None and fget is not None:
            doc = fget.__doc__
        self.__doc__ = doc

    def __get__(self, obj, objtype=None):
        if obj is None:
            return self
        if self.fget is None:
            raise AttributeError(""unreadable attribute"")
        return self.fget(obj)

    def __set__(self, obj, value):
        if self.fset is None:
            raise AttributeError(""can't set attribute"")
        self.fset(obj, value)

    def __delete__(self, obj):
        if self.fdel is None:
            raise AttributeError(""can't delete attribute"")
        self.fdel(obj)

    def getter(self, fget):
        return type(self)(fget, self.fset, self.fdel, self.__doc__)

    def setter(self, fset):
        return type(self)(self.fget, fset, self.fdel, self.__doc__)

    def deleter(self, fdel):
        return type(self)(self.fget, self.fset, fdel, self.__doc__)
</code></pre>
</blockquote>
","17330273"
"Python NameError: name is not defined","281825","","<p>I have a python script and I am receiving the following error:</p>

<pre><code>Traceback (most recent call last):
  File ""C:\Users\Tim\Desktop\pop-erp\test.py"", line 1, in &lt;module&gt;  
  s = Something()
  NameError: name 'Something' is not defined
</code></pre>

<p>Here is the code that causes the problem:</p>

<pre><code>s = Something()
s.out()

class Something:
    def out():
        print(""it works"")
</code></pre>

<p>This is being run with Python 3.3.0 under Windows 7 x86-64.</p>

<p>Why can't the <code>Something</code> class be found?</p>
","<p>Define the class before you use it:</p>

<pre><code>class Something:
    def out(self):
        print(""it works"")

s = Something()
s.out()
</code></pre>

<p>You need to pass <code>self</code> as the first argument to all instance methods.</p>
","14804107"
"What is the difference between range and xrange functions in Python 2.X?","281128","","<p>Apparently xrange is faster but I have no idea why it's faster (and no proof besides the anecdotal so far that it is faster) or what besides that is different about</p>

<pre><code>for i in range(0, 20):
for i in xrange(0, 20):
</code></pre>
","<p>range creates a list, so if you do <code>range(1, 10000000)</code> it creates a list in memory with <code>9999999</code> elements.</p>

<p><code>xrange</code> is a sequence object that  evaluates lazily.  </p>
","94962"
"How to serve static files in Flask","280607","","<p>So this is embarrassing. I've got an application that I threw together in <code>Flask</code> and for now it is just serving up a single static HTML page with some links to CSS and JS. And I can't find where in the documentation <code>Flask</code> describes returning static files. Yes, I could use <code>render_template</code> but I know the data is not templatized. I'd have thought <code>send_file</code> or <code>url_for</code> was the right thing, but I could not get those to work. In the meantime, I am opening the files, reading content, and rigging up a <code>Response</code> with appropriate mimetype:</p>

<pre><code>import os.path

from flask import Flask, Response


app = Flask(__name__)
app.config.from_object(__name__)


def root_dir():  # pragma: no cover
    return os.path.abspath(os.path.dirname(__file__))


def get_file(filename):  # pragma: no cover
    try:
        src = os.path.join(root_dir(), filename)
        # Figure out how flask returns static files
        # Tried:
        # - render_template
        # - send_file
        # This should not be so non-obvious
        return open(src).read()
    except IOError as exc:
        return str(exc)


@app.route('/', methods=['GET'])
def metrics():  # pragma: no cover
    content = get_file('jenkins_analytics.html')
    return Response(content, mimetype=""text/html"")


@app.route('/', defaults={'path': ''})
@app.route('/&lt;path:path&gt;')
def get_resource(path):  # pragma: no cover
    mimetypes = {
        "".css"": ""text/css"",
        "".html"": ""text/html"",
        "".js"": ""application/javascript"",
    }
    complete_path = os.path.join(root_dir(), path)
    ext = os.path.splitext(path)[1]
    mimetype = mimetypes.get(ext, ""text/html"")
    content = get_file(complete_path)
    return Response(content, mimetype=mimetype)


if __name__ == '__main__':  # pragma: no cover
    app.run(port=80)
</code></pre>

<p>Someone want to give a code sample or url for this? I know this is going to be dead simple.</p>
","<p>The preferred method is to use nginx or another web server to serve static files; they'll be able to do it more efficiently than Flask.</p>

<p>However, you can use <a href=""http://flask.pocoo.org/docs/latest/api/#flask.send_from_directory""><code>send_from_directory</code></a> to send files from a directory, which can be pretty convenient in some situations:</p>

<pre><code>from flask import Flask, request, send_from_directory

# set the project root directory as the static folder, you can set others.
app = Flask(__name__, static_url_path='')

@app.route('/js/&lt;path:path&gt;')
def send_js(path):
    return send_from_directory('js', path)

if __name__ == ""__main__"":
    app.run()
</code></pre>

<p>Do <strong>not</strong> use <code>send_file</code> or <code>send_static_file</code> with an user-supplied path.</p>

<p><code>send_static_file</code> example:</p>

<pre><code>from flask import Flask, request
# set the project root directory as the static folder, you can set others.
app = Flask(__name__, static_url_path='')

@app.route('/')
def root():
    return app.send_static_file('index.html')
</code></pre>
","20648053"
"error: command 'gcc' failed with exit status 1 while installing eventlet","279739","","<p>I wanted to install <code>eventlet</code> on my system in order to have ""Herd"" for software deployment.. but the terminal is showing a gcc error:</p>

<pre><code>  root@agrover-OptiPlex-780:~# easy_install -U eventlet
  Searching for eventlet
  Reading http://pypi.python.org/simple/eventlet/
  Reading http://wiki.secondlife.com/wiki/Eventlet
  Reading http://eventlet.net
   Best match: eventlet 0.9.16
    Processing eventlet-0.9.16-py2.7.egg
    eventlet 0.9.16 is already the active version in easy-install.pth

   Using /usr/local/lib/python2.7/dist-packages/eventlet-0.9.16-py2.7.egg
 Processing dependencies for eventlet
 Searching for greenlet&gt;=0.3
Reading http://pypi.python.org/simple/greenlet/
Reading https://github.com/python-greenlet/greenlet
Reading http://bitbucket.org/ambroff/greenlet
Best match: greenlet 0.3.4
Downloading http://pypi.python.org/packages/source/g/greenlet/greenlet-   0.3.4.zip#md5=530a69acebbb0d66eb5abd83523d8272
Processing greenlet-0.3.4.zip
Writing /tmp/easy_install-_aeHYm/greenlet-0.3.4/setup.cfg
Running greenlet-0.3.4/setup.py -q bdist_egg --dist-dir /tmp/easy_install-_aeHYm/greenlet-0.3.4/egg-dist-tmp-t9_gbW
In file included from greenlet.c:5:0:
greenlet.h:8:20: fatal error: Python.h: No such file or directory
compilation terminated.
error: Setup script exited with error: command 'gcc' failed with exit status 1`
</code></pre>

<p>Why can't <code>Python.h</code> be found?</p>
","<p>Your install is failing because you don't have the python development headers installed. You can do this through apt on ubuntu/debian with:</p>

<pre><code>sudo apt-get install python-dev 
</code></pre>

<p>for python3 use:</p>

<pre><code>sudo apt-get install python3-dev
</code></pre>

<p>For eventlet you might also need the libevent libraries installed so if you get an error talking about that you can install libevent with:</p>

<pre><code>sudo apt-get install libevent-dev
</code></pre>
","11094752"
"Add Variables to Tuple","279615","","<p>I am learning Python and creating a database connection.
While trying to add to the DB, I am thinking of creating tuples out of information and then add them to the DB. </p>

<p><strong>What I am Doing</strong>:
I am taking information from the user and store it in variables. 
Can I add these variables into a tuple?  Can you please help me with the syntax?</p>

<p>Also if there is an efficient way of doing this, please share...</p>

<p><strong>EDIT</strong>
Let me edit this question a bit...I only need the tuple to enter info into the DB.  Once the information is added to the DB, should I delete the tuple?  I mean I don't need the tuple anymore.</p>
","<p>Tuples are immutable; you can't change which variables they contain after construction. However, you can concatenate or slice them to form new tuples:</p>

<pre><code>a = (1, 2, 3)
b = a + (4, 5, 6)
c = b[1:]
</code></pre>

<p>And, of course, build them from existing values:</p>

<pre><code>   name = ""Joe""
   age = 40
   location = ""New York""
   joe = (name, age, location)
</code></pre>
","1380875"
"Remove items from a list while iterating","279364","","<p>I'm iterating over a list of tuples in Python, and am attempting to remove them if they meet certain criteria. </p>

<pre><code>for tup in somelist:
    if determine(tup):
         code_to_remove_tup
</code></pre>

<p>What should I use in place of <code>code_to_remove_tup</code>? I can't figure out how to remove the item in this fashion.</p>
","<p>You can use a list comprehension to create a new list containing only the elements you don't want to remove:</p>

<pre><code>somelist = [x for x in somelist if not determine(x)]
</code></pre>

<p>Or, by assigning to the slice <code>somelist[:]</code>, you can mutate the existing list to contain only the items you want:</p>

<pre><code>somelist[:] = [x for x in somelist if not determine(x)]
</code></pre>

<p>This approach could be useful if there are other references to <code>somelist</code> that need to reflect the changes.</p>

<p>Instead of a comprehension, you could also use <code>itertools</code>. In Python 2:</p>

<pre><code>from itertools import ifilterfalse
somelist[:] = ifilterfalse(determine, somelist)
</code></pre>

<p>Or in Python 3:</p>

<pre><code>from itertools import filterfalse
somelist[:] = filterfalse(determine, somelist)
</code></pre>
","1207461"
"How to delete an item in a list if it exists?","278174","","<p>I am getting <code>new_tag</code> from a form text field with <code>self.response.get(""new_tag"")</code> and <code>selected_tags</code> from checkbox fields with </p>

<pre><code>self.response.get_all(""selected_tags"")
</code></pre>

<p>I combine them like this:</p>

<pre><code>tag_string = new_tag
new_tag_list = f1.striplist(tag_string.split("","") + selected_tags)
</code></pre>

<p>(<code>f1.striplist</code> is a function that strips white spaces inside the strings in the list.)</p>

<p>But in the case that <code>tag_list</code> is empty (no new tags are entered) but there are some <code>selected_tags</code>, <code>new_tag_list</code> contains an empty string <code>"" ""</code>.</p>

<p>For example, from <code>logging.info</code>:</p>

<pre><code>new_tag
selected_tags[u'Hello', u'Cool', u'Glam']
new_tag_list[u'', u'Hello', u'Cool', u'Glam']
</code></pre>

<p>How do I get rid of the empty string?</p>

<p>If there is an empty string in the list:</p>

<pre><code>&gt;&gt;&gt; s = [u'', u'Hello', u'Cool', u'Glam']
&gt;&gt;&gt; i = s.index("""")
&gt;&gt;&gt; del s[i]
&gt;&gt;&gt; s
[u'Hello', u'Cool', u'Glam']
</code></pre>

<p>But if there is no empty string:</p>

<pre><code>&gt;&gt;&gt; s = [u'Hello', u'Cool', u'Glam']
&gt;&gt;&gt; if s.index(""""):
        i = s.index("""")
        del s[i]
    else:
        print ""new_tag_list has no empty string""
</code></pre>

<p>But this gives:</p>

<pre><code>Traceback (most recent call last):
  File ""&lt;pyshell#30&gt;"", line 1, in &lt;module&gt;
    if new_tag_list.index(""""):
        ValueError: list.index(x): x not in list
</code></pre>

<p>Why does this happen, and how do I work around it?</p>
","<h2>1) Almost-English style:</h2>

<p>Test for presence using the <code>in</code> operator, then apply the <code>remove</code> method.</p>

<pre class=""lang-py prettyprint-override""><code>if thing in some_list: some_list.remove(thing)
</code></pre>

<p>The <code>remove</code>method will remove only the first occurrence of <code>thing</code>, in order to remove all occurrences you can use <code>while</code> instead of <code>if</code>.</p>

<pre class=""lang-py prettyprint-override""><code>while thing in some_list: some_list.remove(thing)    
</code></pre>

<ul>
<li>Simple enough, probably my choice.for small lists (can't resist one-liners)</li>
</ul>

<h2>2) <a href=""http://docs.python.org/glossary.html#term-duck-typing"" rel=""noreferrer"">Duck-typed</a>, <a href=""http://docs.python.org/glossary.html#term-eafp"" rel=""noreferrer"">EAFP</a> style:</h2>

<p>This shoot-first-ask-questions-last attitude is common in Python. Instead of testing in advance if the object is suitable, just carry out the operation and catch relevant Exceptions:</p>

<pre class=""lang-py prettyprint-override""><code>try:
    some_list.remove(thing)
except ValueError:
    pass # or scream: thing not in some_list!
except AttributeError:
    call_security(""some_list not quacking like a list!"")
</code></pre>

<p>Off course the second except clause in the example above is not only of questionable humor but totally unnecessary (the point was to illustrate duck-typing for people not familiar with the concept).</p>

<p>If you expect multiple occurrences of thing:</p>

<pre class=""lang-py prettyprint-override""><code>while True:
    try:
        some_list.remove(thing)
    except ValueError:
        break
</code></pre>

<ul>
<li>a little verbose for this specific use case, but very idiomatic in Python.</li>
<li>this performs better than #1</li>
<li><a href=""http://www.python.org/dev/peps/pep-0463/"" rel=""noreferrer"">PEP 463</a> proposed a shorter syntax for try/except simple usage that would be handy here, but it was not approved.</li>
</ul>

<p>However, with <a href=""https://docs.python.org/3/library/contextlib.html#contextlib.suppress"" rel=""noreferrer"">contextlib's suppress() contextmanager</a> (introduced in python 3.4) the above code can be simplified to this:</p>

<pre class=""lang-py prettyprint-override""><code>with suppress(ValueError, AttributeError):
    some_list.remove(thing)
</code></pre>

<p>Again, if you expect multiple occurrences of thing:</p>

<pre class=""lang-py prettyprint-override""><code>with suppress(ValueError):
    while True:
        some_list.remove(thing)
</code></pre>

<h2>3) Functional style:</h2>

<p>Around 1993, Python got <code>lambda</code>, <code>reduce()</code>, <code>filter()</code> and <code>map()</code>, courtesy of a <a href=""https://en.wikipedia.org/wiki/Lisp_%28programming_language%29"" rel=""noreferrer"">Lisp</a> hacker who missed them and submitted working patches*. You can use <code>filter</code> to remove elements from the list:</p>

<pre class=""lang-py prettyprint-override""><code>is_not_thing = lambda x: x is not thing
cleaned_list = filter(is_not_thing, some_list)
</code></pre>

<p>There is a shortcut that may be useful for your case: if you want to filter out empty items (in fact items where <code>bool(item) == False</code>, like <code>None</code>, zero, empty strings or other empty collections), you can pass None as the first argument:</p>

<pre class=""lang-py prettyprint-override""><code>cleaned_list = filter(None, some_list)
</code></pre>

<ul>
<li><strong>[update]</strong>: in Python 2.x, <code>filter(function, iterable)</code> used to be equivalent to <code>[item for item in iterable if function(item)]</code> (or <code>[item for item in iterable if item]</code> if the first argument is <code>None</code>); in Python 3.x, it is now equivalent to <code>(item for item in iterable if function(item))</code>. The subtle difference is that filter used to return a list, now it works like a generator expression - this is OK if you are only iterating over the cleaned list and discarding it, but if you really need a list, you have to enclose the <code>filter()</code> call with the <code>list()</code> constructor.</li>
<li>*These Lispy flavored constructs are considered a little alien in Python. Around 2005, <a href=""http://www.artima.com/weblogs/viewpost.jsp?thread=98196"" rel=""noreferrer"">Guido was even talking about dropping <code>filter</code></a> - along with companions <code>map</code> and <code>reduce</code> (they are not gone yet but <code>reduce</code> was moved into the <a href=""http://docs.python.org/2/library/functools.html#functools.reduce"" rel=""noreferrer"">functools</a> module, which is worth a look if you like <a href=""http://en.wikipedia.org/wiki/Higher-order_function"" rel=""noreferrer"">high order functions</a>).</li>
</ul>

<h2>4) Mathematical style:</h2>

<p><a href=""http://en.wikipedia.org/wiki/List_comprehension"" rel=""noreferrer"">List comprehensions</a> became the preferred style for list manipulation in Python since introduced in version 2.0 by <a href=""http://www.python.org/dev/peps/pep-0202/"" rel=""noreferrer"">PEP 202</a>. The rationale behind it is that List comprehensions provide a more concise way to create lists in situations where <code>map()</code> and <code>filter()</code> and/or nested loops would currently be used.</p>

<pre class=""lang-py prettyprint-override""><code>cleaned_list = [ x for x in some_list if x is not thing ]
</code></pre>

<p>Generator expressions were introduced in version 2.4 by <a href=""http://www.python.org/dev/peps/pep-0289/"" rel=""noreferrer"">PEP 289</a>. A generator expression is better for situations where you don't really need (or want) to have a full list created in memory - like when you just want to iterate over the elements one at a time. If you are only iterating over the list, you can think of a generator expression as a <a href=""http://en.wikipedia.org/wiki/Lazy_evaluation"" rel=""noreferrer"">lazy evaluated</a> list comprehension:</p>

<pre class=""lang-py prettyprint-override""><code>for item in (x for x in some_list if x is not thing):
    do_your_thing_with(item)
</code></pre>

<ul>
<li>See <a href=""http://python-history.blogspot.com.br/2010/06/from-list-comprehensions-to-generator.html"" rel=""noreferrer"">this Python history blog</a> post by <a href=""http://en.wikipedia.org/wiki/Guido_van_Rossum"" rel=""noreferrer"">GvR</a>.</li>
<li>This syntax is inspired by the <a href=""http://en.wikipedia.org/wiki/Set-builder_notation"" rel=""noreferrer"">set-builder notation</a> in math.</li>
<li>Python 3 has also <a href=""http://www.python.org/dev/peps/pep-3100/#id103"" rel=""noreferrer"">set</a> and <a href=""http://www.python.org/dev/peps/pep-0274/"" rel=""noreferrer"">dict comprehensions</a>.</li>
</ul>

<h2>Notes</h2>

<ol>
<li>you may want to use the inequality operator <code>!=</code> instead of <code>is not</code> (<a href=""https://stackoverflow.com/q/2209755/"">the difference is important</a>)</li>
<li>for critics of methods implying a list copy: contrary to popular belief, generator expressions are not always more efficient than list comprehensions - please profile before complaining</li>
</ol>
","4915964"
"Writing string to a file on a new line every time","276464","","<p>I want to append a newline to my string every time I call <code>file.write()</code>. What's the easiest way to do this in Python?</p>
","<p>Use ""\n"":</p>

<pre><code>file.write(""My String\n"")
</code></pre>

<p>See <a href=""http://docs.python.org/tutorial/inputoutput.html"" rel=""noreferrer"">the Python manual</a> for reference.</p>
","2918370"
"Parse JSON in Python","276202","","<p>My project is currently receiving a JSON message in python which I need to get bits of information out of. For the purposes of this, lets set it to some simple JSON in a string:</p>

<pre><code>jsonStr = '{""one"" : ""1"", ""two"" : ""2"", ""three"" : ""3""}'
</code></pre>

<p>So far I've been generating JSON requests using a list and then <code>json.dumps</code> but to do the opposite of this I think I need to use <code>json.loads</code> but I haven't had much luck with it. Could anyone provide me a snippet that would return ""2"" with the input of ""two"" in the above example?</p>
","<p>Very simple:</p>

<pre><code>import json
j = json.loads('{""one"" : ""1"", ""two"" : ""2"", ""three"" : ""3""}')
print j['two']
</code></pre>
","7771071"
"How can I return two values from a function in Python?","275391","","<p>I would like to return two values from a function in two separate variables. 
For example:</p>

<pre><code>def select_choice():
    loop = 1
    row = 0
    while loop == 1:
        print('''Choose from the following options?:
                 1. Row 1
                 2. Row 2
                 3. Row 3''')

        row = int(input(""Which row would you like to move the card from?: ""))
        if row == 1:
            i = 2
            card = list_a[-1]
        elif row == 2:
            i = 1
            card = list_b[-1]
        elif row == 3:
            i = 0
            card = list_c[-1]
        return i
        return card
</code></pre>

<p>And I want to be able to use these values separately. When I tried to use <code>return i, card</code>, it returns a <code>tuple</code> and this is not what I want. </p>
","<p>You cannot return two values, but you can return a <code>tuple</code> or a <code>list</code> and unpack it after the call:</p>

<pre><code>def select_choice():
    ...
    return i, card  # or [i, card]

my_i, my_card = select_choice()
</code></pre>

<p>On line <code>return i, card</code> <code>i, card</code> means creating a tuple. You can also use parenthesis like <code>return (i, card)</code>, but tuples are created by comma, so parens are not mandatory. But you can use parens to make your code more readable or to split the tuple over multiple lines. The same applies to line <code>my_i, my_card = select_choice()</code>.</p>

<p>If you want to return more than two values, consider using a <a href=""https://docs.python.org/3.6/library/collections.html#collections.namedtuple"" rel=""noreferrer"">named tuple</a>. It will allow the caller of the function to access fields of the returned value by name, which is more readable. You can still access items of the tuple by index. For example in <code>Schema.loads</code> method Marshmallow framework returns a <a href=""http://marshmallow.readthedocs.io/en/latest/api_reference.html#marshmallow.UnmarshalResult"" rel=""noreferrer""><code>UnmarshalResult</code></a> which is a <a href=""https://github.com/marshmallow-code/marshmallow/blob/fe5469998a6f1f297f8c85acfba8c48ff7bc3d7d/marshmallow/schema.py#L29"" rel=""noreferrer""><code>namedtuple</code></a>. So you can do:</p>

<pre><code>data, errors = MySchema.loads(request.json())
if errors:
    ...
</code></pre>

<p>or</p>

<pre><code>result = MySchema.loads(request.json())
if result.errors:
    ...
else:
    # use `result.data`
</code></pre>

<p>In other cases you may return a <code>dict</code> from your function:</p>

<pre><code>def select_choice():
    ...
    return {'i': i, 'card': card, 'other_field': other_field, ...}
</code></pre>

<p>But you might want consider to return an instance of a utility class, which wraps your data:</p>

<pre><code>class ChoiceData():
    def __init__(self, i, card, other_field, ...):
        # you can put here some validation logic
        self.i = i
        self.card = card
        self.other_field = other_field
        ...

def select_choice():
    ...
    return ChoiceData(i, card, other_field, ...)

choice_data = select_choice()
print(choice_data.i, choice_data.card)
</code></pre>
","9752970"
"Why doesn't os.path.join() work in this case?","275190","","<p>The below code will not join, when debugged the command does not store the whole path but just the last entry.</p>

<pre><code>os.path.join('/home/build/test/sandboxes/', todaystr, '/new_sandbox/')
</code></pre>

<p>When I test this it only stores the <code>/new_sandbox/</code> part of the code.</p>
","<p>The latter strings shouldn't start with a slash. If they start with a slash, then they're considered an ""absolute path"" and everything before them is discarded.</p>

<p>Quoting the <a href=""http://docs.python.org/library/os.path.html#os.path.join"" rel=""noreferrer"">Python docs for <code>os.path.join</code></a>:</p>

<blockquote>
  <p>If a component is an absolute path, all previous components are thrown away and joining continues from the absolute path component.</p>
</blockquote>

<p>Note on Windows, the behaviour in relation to drive letters, which seems to have changed compared to earlier Python versions:</p>

<blockquote>
  <p>On Windows, the drive letter is not reset when an absolute path component (e.g., <code>r'\foo'</code>) is encountered. If a component contains a drive letter, all previous components are thrown away and the drive letter is reset. Note that since there is a current directory for each drive, <code>os.path.join(""c:"", ""foo"")</code> represents a path relative to the current directory on drive <code>C:</code> (<code>c:foo</code>), not <code>c:\foo</code>.</p>
</blockquote>
","1945930"
"How to redirect 'print' output to a file using python?","274385","","<p>I want to redirect the print to a .txt file using python. I have a 'for' loop, which will 'print' the output for each of my .bam file while I want to redirect ALL these output to one file. So I tried to put</p>

<pre><code> f = open('output.txt','w'); sys.stdout = f
</code></pre>

<p>at the beginning of my script. However I get nothing in the .txt file.
My script is:</p>

<pre><code>#!/usr/bin/python

import os,sys
import subprocess
import glob
from os import path

f = open('output.txt','w')
sys.stdout = f

path= '/home/xug/nearline/bamfiles'
bamfiles = glob.glob(path + '/*.bam')

for bamfile in bamfiles:
    filename = bamfile.split('/')[-1]
    print 'Filename:', filename
    samtoolsin = subprocess.Popen([""/share/bin/samtools/samtools"",""view"",bamfile],
                                  stdout=subprocess.PIPE,bufsize=1)
    linelist= samtoolsin.stdout.readlines()
    print 'Readlines finished!'
    ........print....
    ........print....
</code></pre>

<p>So what's the problem? Any other way besides this sys.stdout?</p>

<p>I need my result look like:</p>

<pre><code>Filename: ERR001268.bam
Readlines finished!
Mean: 233
SD: 10
Interval is: (213, 252)
</code></pre>
","<p>The most obvious way to do this would be to print to a file object:</p>

<pre><code>with open('out.txt', 'w') as f:
    print &gt;&gt; f, 'Filename:', filename  # Python 2.x
    print('Filename:', filename, file=f)  # Python 3.x
</code></pre>

<p>However, redirecting stdout also works for me.  It is probably fine for a one-off script such as this:</p>

<pre><code>import sys

orig_stdout = sys.stdout
f = open('out.txt', 'w')
sys.stdout = f

for i in range(2):
    print 'i = ', i

sys.stdout = orig_stdout
f.close()
</code></pre>

<p>What is the first filename in your script?  I don't see it initialized.</p>

<p>My first guess is that glob doesn't find any bamfiles, and therefore the for loop doesn't run.  Check that the folder exists, and print out bamfiles in your script.</p>

<p>Also, use <a href=""http://docs.python.org/library/os.path.html"" rel=""noreferrer"">os.path.join and os.path.basename</a> to manipulate paths and filenames.</p>
","7152903"
"Why are Python's 'private' methods not actually private?","274074","","<p>Python gives us the ability to create 'private' methods and variables within a class by prepending double underscores to the name, like this: <code>__myPrivateMethod()</code>. How, then, can one explain this</p>

<pre><code>>>> class MyClass:
...     def myPublicMethod(self):
...             print 'public method'
...     def __myPrivateMethod(self):
...             print 'this is private!!'
... 
>>> obj = MyClass()
>>> obj.myPublicMethod()
public method
>>> obj.__myPrivateMethod()
Traceback (most recent call last):
  File """", line 1, in 
AttributeError: MyClass instance has no attribute '__myPrivateMethod'
>>> dir(obj)
['_MyClass__myPrivateMethod', '__doc__', '__module__', 'myPublicMethod']
>>> obj._MyClass__myPrivateMethod()
this is private!!
</code></pre>

<p>What's the deal?!</p>

<p>I'll explain this a little for those who didn't quite get that.</p>

<pre><code>>>> class MyClass:
...     def myPublicMethod(self):
...             print 'public method'
...     def __myPrivateMethod(self):
...             print 'this is private!!'
... 
>>> obj = MyClass()
</code></pre>

<p>What I did there is create a class with a public method and a private method and instantiate it.</p>

<p>Next, I call its public method.</p>

<pre><code>>>> obj.myPublicMethod()
public method
</code></pre>

<p>Next, I try and call its private method.</p>

<pre><code>>>> obj.__myPrivateMethod()
Traceback (most recent call last):
  File """", line 1, in 
AttributeError: MyClass instance has no attribute '__myPrivateMethod'
</code></pre>

<p>Everything looks good here; we're unable to call it. It is, in fact, 'private'. Well, actually it isn't. Running <em>dir()</em> on the object reveals a new magical method that python creates magically for all of your 'private' methods.</p>

<pre><code>>>> dir(obj)
['_MyClass__myPrivateMethod', '__doc__', '__module__', 'myPublicMethod']
</code></pre>

<p>This new method's name is always an underscore, followed by the class name, followed by the method name.</p>

<pre><code>>>> obj._MyClass__myPrivateMethod()
this is private!!
</code></pre>

<p>So much for encapsulation, eh?</p>

<p>In any case, I'd always heard Python doesn't support encapsulation, so why even try? What gives?</p>
","<p>The name scrambling is used to ensure that subclasses don't accidentally override the private methods and attributes of their superclasses. It's not designed to prevent deliberate access from outside.</p>

<p>For example:</p>

<pre><code>&gt;&gt;&gt; class Foo(object):
...     def __init__(self):
...         self.__baz = 42
...     def foo(self):
...         print self.__baz
...     
&gt;&gt;&gt; class Bar(Foo):
...     def __init__(self):
...         super(Bar, self).__init__()
...         self.__baz = 21
...     def bar(self):
...         print self.__baz
...
&gt;&gt;&gt; x = Bar()
&gt;&gt;&gt; x.foo()
42
&gt;&gt;&gt; x.bar()
21
&gt;&gt;&gt; print x.__dict__
{'_Bar__baz': 21, '_Foo__baz': 42}
</code></pre>

<p>Of course, it breaks down if two different classes have the same name.</p>
","70900"
"How to sort a list of objects based on an attribute of the objects?","273920","","<p>I've got a list of Python objects that I'd like to sort by an attribute of the objects themselves.  The list looks like:</p>

<pre><code>&gt;&gt;&gt; ut
[&lt;Tag: 128&gt;, &lt;Tag: 2008&gt;, &lt;Tag: &lt;&gt;, &lt;Tag: actionscript&gt;, &lt;Tag: addresses&gt;,
 &lt;Tag: aes&gt;, &lt;Tag: ajax&gt; ...]
</code></pre>

<p>Each object has a count:</p>

<pre><code>&gt;&gt;&gt; ut[1].count
1L
</code></pre>

<p>I need to sort the list by number of counts descending.</p>

<p>I've seen several methods for this, but I'm looking for best practice in Python.</p>
","<pre><code># To sort the list in place...
ut.sort(key=lambda x: x.count, reverse=True)

# To return a new list, use the sorted() built-in function...
newlist = sorted(ut, key=lambda x: x.count, reverse=True)
</code></pre>

<p>More on <a href=""http://wiki.python.org/moin/HowTo/Sorting#Sortingbykeys"" rel=""noreferrer"">sorting by keys &raquo;</a> </p>
","403426"
"Create a .csv file with values from a Python list","273916","","<p>I am trying to create a .csv file with the values from a Python list. When I print the values in the list they are all unicode (?), i.e. they look something like this </p>

<pre><code>[u'value 1', u'value 2', ...]
</code></pre>

<p>If I iterate through the values in the list i.e. <code>for v in mylist: print v</code> they appear to be plain text.</p>

<p>And I can put a <code>,</code> between each with <code>print ','.join(mylist)</code></p>

<p>And I can output to a file, i.e. </p>

<pre><code>myfile = open(...)
print &gt;&gt;myfile, ','.join(mylist)
</code></pre>

<p>But I want to output to a CSV and have delimiters around the values in the list e.g.</p>

<pre><code>""value 1"", ""value 2"", ... 
</code></pre>

<p>I can't find an easy way to include the delimiters in the formatting, e.g. I have tried through the <code>join</code> statement. How can I do this?</p>
","<pre><code>import csv

with open(..., 'wb') as myfile:
    wr = csv.writer(myfile, quoting=csv.QUOTE_ALL)
    wr.writerow(mylist)
</code></pre>
","2084135"
"Iterate a list with indexes in Python","273842","","<p>I could swear I've seen the function (or method) that takes a list, like this <code>[3, 7, 19]</code> and makes it into iterable list of tuples, like so: <code>[(0,3), (1,7), (2,19)]</code> to use it instead of:</p>

<pre><code>for i in range(len(name_of_list)):
    name_of_list[i] = something
</code></pre>

<p>but I can't remember the name and googling ""iterate list"" gets nothing.</p>
","<pre><code>&gt;&gt;&gt; a = [3,4,5,6]
&gt;&gt;&gt; for i, val in enumerate(a):
...     print i, val
...
0 3
1 4
2 5
3 6
&gt;&gt;&gt;
</code></pre>
","126533"
"Format numbers to strings in Python","273104","","<p>I need to find out how to format numbers as strings. My code is here:</p>

<pre><code>return str(hours)+"":""+str(minutes)+"":""+str(seconds)+"" ""+ampm
</code></pre>

<p>Hours and minutes are integers, and seconds is a float.  the str() function will convert all of these numbers to the tenths (0.1) place.  So instead of my string outputting ""5:30:59.07 pm"", it would display something like ""5.0:30.0:59.1 pm"".</p>

<p>Bottom line, what library / function do I need to do this for me?</p>
","<p>Formatting in Python is done via the <a href=""http://docs.python.org/2/library/stdtypes.html#string-formatting"" rel=""noreferrer"">string formatting (<code>%</code>) operator</a>:</p>

<pre><code>""%02d:%02d:%02d"" % (hours, minutes, seconds)
</code></pre>

<p>/Edit: There's also <a href=""https://docs.python.org/2/library/time.html#time.strftime"" rel=""noreferrer"">strftime</a>.</p>
","22624"
"How to fix ""ImportError: No module named ..."" error in Python?","272127","","<p>What is the correct way to fix this ImportError error?</p>

<p>I have the following directory structure:</p>

<pre><code>/home/bodacydo
/home/bodacydo/work
/home/bodacydo/work/project
/home/bodacydo/work/project/programs
/home/bodacydo/work/project/foo
</code></pre>

<p>And I am in the directory</p>

<pre><code>/home/bodacydo/work/project
</code></pre>

<p>Now if I type</p>

<pre><code>python ./programs/my_python_program.py
</code></pre>

<p>I instantly get</p>

<pre><code>ImportError: No module named foo.tasks
</code></pre>

<p>The <code>./programs/my_python_program.py</code> contains the following line:</p>

<pre><code>from foo.tasks import my_function
</code></pre>

<p>I can't understand why python won't find <code>./foo/tasks.py</code> - it's there.</p>

<p>If I do it from the Python shell, then it works:</p>

<pre><code>python
&gt;&gt;&gt; from foo.tasks import my_function
</code></pre>

<p>It only doesn't work if I call it via <code>python ./programs/my_python_program.py</code> script.</p>
","<p>Python does not add the current directory to <code>sys.path</code>, but rather the directory that the script is in. Add <code>/home/bodacydo/work/project</code> to either <code>sys.path</code> or <code>$PYTHONPATH</code>.</p>
","2326045"
"Python: Run function from the command line","270572","","<p>I have below code in my file:</p>

<pre><code>def hello():
    return 'Hi :)'
</code></pre>

<p>How would I run this from the command line?</p>
","<p>With the <code>-c</code> <em>(command)</em> argument (assuming your file is named <code>foo.py</code>):</p>

<pre><code>$ python -c 'import foo; print foo.hello()'
</code></pre>

<p>Alternatively, if you don't care about namespace pollution:</p>

<pre><code>$ python -c 'from foo import *; print hello()'
</code></pre>

<p>And the middle ground:</p>

<pre><code>$ python -c 'from foo import hello; print hello()'
</code></pre>
","3987113"
"In Python 2, what is the difference between '/' and '//' when used for division?","269930","","<p>Is there a benefit to using one over the other? In Python 2, they both seem to return the same results:</p>

<pre><code>&gt;&gt;&gt; 6/3
2
&gt;&gt;&gt; 6//3
2
</code></pre>
","<p>In Python 3.0, <code>5 / 2</code> will return <code>2.5</code> and <code>5 // 2</code> will return <code>2</code>.  The former is floating point division, and the latter is floor division, sometimes also called integer division.</p>

<p>In Python 2.2 or later in the 2.x line, there is no difference for integers unless you perform a <code>from __future__ import division</code>, which causes Python 2.x to adopt the behavior of 3.0</p>

<p>Regardless of the future import, <code>5.0 // 2</code> will return <code>2.0</code> since that's the floor division result of the operation.</p>

<p>You can find a detailed description at <a href=""https://docs.python.org/whatsnew/2.2.html#pep-238-changing-the-division-operator"" rel=""noreferrer"">https://docs.python.org/whatsnew/2.2.html#pep-238-changing-the-division-operator</a></p>
","183870"
"Read specific columns from a csv file with csv module?","268853","","<p>I'm trying to parse through a csv file and extract the data from only specific columns.</p>

<p>Example csv:</p>

<pre class=""lang-none prettyprint-override""><code>ID | Name | Address | City | State | Zip | Phone | OPEID | IPEDS |
10 | C... | 130 W.. | Mo.. | AL... | 3.. | 334.. | 01023 | 10063 |
</code></pre>

<p>I'm trying to capture only specific columns, say <code>ID</code>, <code>Name</code>, <code>Zip</code> and <code>Phone</code>.</p>

<p>Code I've looked at has led me to believe I can call the specific column by its corresponding number, so ie: <code>Name</code> would correspond to <code>2</code> and iterating through each row using <code>row[2]</code> would produce all the items in column 2. Only it doesn't.</p>

<p>Here's what I've done so far:</p>

<pre><code>import sys, argparse, csv
from settings import *

# command arguments
parser = argparse.ArgumentParser(description='csv to postgres',\
 fromfile_prefix_chars=""@"" )
parser.add_argument('file', help='csv file to import', action='store')
args = parser.parse_args()
csv_file = args.file

# open csv file
with open(csv_file, 'rb') as csvfile:

    # get number of columns
    for line in csvfile.readlines():
        array = line.split(',')
        first_item = array[0]

    num_columns = len(array)
    csvfile.seek(0)

    reader = csv.reader(csvfile, delimiter=' ')
        included_cols = [1, 2, 6, 7]

    for row in reader:
            content = list(row[i] for i in included_cols)
            print content
</code></pre>

<p>and I'm expecting that this will print out only the specific columns I want for each row except it doesn't, I get the last column only.</p>
","<p>The only way you would be getting the last column from this code is if you don't include your print statement <strong>in</strong> your <code>for</code> loop. </p>

<p>This is most likely the end of your code:</p>

<pre><code>for row in reader:
    content = list(row[i] for i in included_cols)
print content
</code></pre>

<p>You want it to be this:</p>

<pre><code>for row in reader:
        content = list(row[i] for i in included_cols)
        print content
</code></pre>

<p>Now that we have covered your mistake, I would like to take this time to introduce you to the <a href=""http://pandas.pydata.org/"" rel=""noreferrer"">pandas</a> module.</p>

<p>Pandas is spectacular for dealing with csv files, and the following code would be all you need to read a csv and save an entire column into a variable:</p>

<pre><code>import pandas as pd
df = pd.read_csv(csv_file)
saved_column = df.column_name #you can also use df['column_name']
</code></pre>

<p>so if you wanted to save all of the info in your column <code>Names</code> into a variable, this is all you need to do:</p>

<pre><code>names = df.Names
</code></pre>

<p>It's a great module and I suggest you look into it. If for some reason your print statement was in <code>for</code> loop and it was still only printing out the last column, which shouldn't happen, but let me know if my assumption was wrong. Your posted code has a lot of indentation errors so it was hard to know what was supposed to be where. Hope this was helpful!</p>
","16503807"
"What's a good IDE for Python on Mac OS X?","268778","","<p>I'm about to start a new job where the coding practices are heavily centered around TDD and refactoring, and whose primary development language is Python.  I come from the Java world, and have been a confident user of Eclipse for a good, long time.  When not working in Java, I use emacs.</p>

<p>I'm looking for an IDE for Python that will give me a lot of the capabilities I've grown used to with Eclipse, not only for refactoring but in terms of code completion, project management, SCM integration (currently CVS, but likely to switch to git one of these days) et al.</p>

<p>What IDE should I use?</p>
","<p>Have tried many different (Kate, Eclipse, Scite, Vim, Komodo): each one have some glitches, either limited functions, or slow and unresponsive. Final choice after many years: Emacs + ropemacs + flymake. Rope project file open dialog is extremely quick. Rope refactoring and code assist functions are super helpful. Flymake shows syntax mistakes. Emacs is the most configurable editor. I am very happy with this config.  Python related part of config is here: public.halogen-dg.com browser/alex-emacs-settings/configs/cfg_python.el</p>
","901101"
"Find the division remainder of a number","267643","","<p>How could I go about finding the division remainder of a number in Python?</p>

<p>For example:<br>
If the number is 26 and divided number is 7, then the division remainder is 5.<br>
(since 7+7+7=21 and 26-21=5.)</p>
","<p>you are looking for the modulo operator:</p>

<pre><code>a % b
</code></pre>

<p>for example:</p>

<pre><code>26 % 7
</code></pre>

<p>Of course, maybe they wanted you to implement it yourself, which wouldn't be too difficult either.</p>
","5584604"
"TypeError: 'NoneType' object is not iterable in Python","267607","","<p>What does error <code>TypeError: 'NoneType' object is not iterable</code> mean?</p>

<p>I am getting it on this Python code:</p>

<pre><code>def write_file(data,filename):   #creates file and writes list to it
  with open(filename,'wb') as outfile:
    writer=csv.writer(outfile)
    for row in data:             ##ABOVE ERROR IS THROWN HERE
      writer.writerow(row)
</code></pre>
","<p>It means ""data"" is None.</p>
","3887385"
"Access an arbitrary element in a dictionary in Python","267157","","<p>If a <code>dict</code> is not empty, I access an arbitrary element as:</p>

<pre><code>dict[dict.keys()[0]]
</code></pre>

<p>Is there any better way to do this?</p>
","<p>Non-destructively you can:</p>

<pre><code>dict.itervalues().next()
</code></pre>

<p>On Python 3 this becomes</p>

<pre><code>next (iter (dict.values()))
</code></pre>

<p>If you want it to work in both Python 2 &amp; 3, you can use the <code>six</code> library:</p>

<pre><code>six.next(six.itervalues(dict))
</code></pre>

<p>though at this point it is quite cryptic and I'd rather prefer your code.</p>

<p>If you want to remove any item, do:</p>

<pre><code>key, value = dict.popitem()
</code></pre>

<p>Note that ""first"" is not an appropriate term here.  This is ""any"" item, because <code>dict</code> is not an ordered type.</p>
","3097896"
"Pythonic way to print list items","266604","","<p>I would like to know if there is a better way to print all objects in a Python list than this :</p>

<pre><code>myList = [Person(""Foo""), Person(""Bar"")]
print(""\n"".join(map(str, myList)))
Foo
Bar
</code></pre>

<p>I read this way is not really good :</p>

<pre><code>myList = [Person(""Foo""), Person(""Bar"")]
for p in myList:
    print(p)
</code></pre>

<p>Isn't there something like :</p>

<pre><code>print(p) for p in myList
</code></pre>

<p>If not, my question is... why ? If we can do this kind of stuff with comprehensive lists, why not as a simple statement outside a list ?</p>
","<p>Assuming you are using Python 3.x:</p>

<pre><code>print(*myList, sep='\n')
</code></pre>

<p>You can get the same behavior on Python 2.x using <code>from __future__ import print_function</code>, as noted by mgilson in comments.</p>

<p>With the print statement on Python 2.x you will need iteration of some kind, regarding your question about <code>print(p) for p in myList</code> not working, you can just use the following which does the same thing and is still one line:</p>

<pre><code>for p in myList: print p
</code></pre>

<p>For a solution that uses <code>'\n'.join()</code>, I prefer list comprehensions and generators over <code>map()</code> so I would probably use the following:</p>

<pre><code>print '\n'.join(str(p) for p in myList) 
</code></pre>
","15769313"
"How can I convert a character to a integer in Python, and viceversa?","264908","","<p>I want to get, given a character, its <code>ASCII</code> value.</p>

<p>For example, for the character <code>a</code>, I want to get <code>97</code>, and vice versa.</p>
","<p>Use <a href=""http://docs.python.org/library/functions.html#chr"" rel=""noreferrer""><code>chr()</code></a> and <a href=""http://docs.python.org/library/functions.html#ord"" rel=""noreferrer""><code>ord()</code></a>:</p>

<pre><code>&gt;&gt;&gt; chr(97)
'a'
&gt;&gt;&gt; ord('a')
97
</code></pre>
","704160"
"Zip lists in Python","264844","","<p>I am trying to learn how to ""zip"" lists. To this end, I have a program, where at a particular point, I do the following:</p>

<pre><code>x1, x2, x3 = stuff.calculations(withdataa)
</code></pre>

<p>This gives me three lists, <code>x1</code>, <code>x2</code>, and <code>x3</code>, each of, say, size 20.</p>

<p>Now, I do:</p>

<pre><code>zipall = zip(x1, x2, x3)
</code></pre>

<p>However, when I do:</p>

<pre><code>print ""len of zipall %s"" % len(zipall)
</code></pre>

<p>I get 20, which is not what I expected. I expected three. I think I am doing something fundamentally wrong.</p>
","<p>When you <code>zip()</code> together three lists containing 20 elements each, the result has twenty elements. Each element is a three-tuple.</p>

<p>See for yourself:</p>

<pre><code>In [1]: a = b = c = range(20)

In [2]: zip(a, b, c)
Out[2]: 
[(0, 0, 0),
 (1, 1, 1),
 ...
 (17, 17, 17),
 (18, 18, 18),
 (19, 19, 19)]
</code></pre>

<p>To find out how many elements each tuple contains, you could examine the length of the first element:</p>

<pre><code>In [3]: result = zip(a, b, c)

In [4]: len(result[0])
Out[4]: 3
</code></pre>

<p>Of course, this won't work if the lists were empty to start with.</p>
","13704903"
"How to format a floating number to fixed width in Python","264113","","<p>How do I format a floating number to a fixed width with the following requirements:</p>

<ol>
<li>Leading zero if n &lt; 1</li>
<li>Add trailing decimal zero(s) to fill up fixed width</li>
<li>Truncate decimal digits past fixed width</li>
<li>Align all decimal points</li>
</ol>

<p>For example:</p>

<pre><code>% formatter something like '{:06}'
numbers = [23.23, 0.123334987, 1, 4.223, 9887.2]

for number in numbers:
    print formatter.format(number)
</code></pre>

<p>The output would be like</p>

<pre><code>  23.2300
   0.1233
   1.0000
   4.2230
9887.2000
</code></pre>
","<pre><code>for x in numbers:
    print ""{:10.4f}"".format(x)
</code></pre>

<p>prints</p>

<pre><code>   23.2300
    0.1233
    1.0000
    4.2230
 9887.2000
</code></pre>
","8885688"
"Why am I seeing ""TypeError: string indices must be integers""?","264039","","<p>I'm playing with both learning python and trying to get github issues into a readable form. Using the advice on <a href=""https://stackoverflow.com/questions/1871524/convert-from-json-to-csv-using-python"">How can I convert JSON to CSV?</a> I came up with this:</p>

<pre><code>import json
import csv

f=open('issues.json')
data = json.load(f)
f.close()

f=open(""issues.csv"",""wb+"")
csv_file=csv.writer(f)

csv_file.writerow([""gravatar_id"",""position"",""number"",""votes"",""created_at"",""comments"",""body"",""title"",""updated_at"",""html_url"",""user"",""labels"",""state""])

for item in data:
        csv_file.writerow([item[""gravatar_id""], item[""position""], item[""number""], item[""votes""], item[""created_at""], item[""comments""], item[""body""], item[""title""], item[""updated_at""], item[""html_url""], item[""user""], item[""labels""], item[""state""]])
</code></pre>

<p>Where ""issues.json"" is the json file containing my github issues. When I try to run that, I get </p>

<pre><code>File ""foo.py"", line 14, in &lt;module&gt;
csv_file.writerow([item[""gravatar_id""], item[""position""], item[""number""], item[""votes""], item[""created_at""], item[""comments""], item[""body""], item[""title""], item[""updated_at""], item[""html_url""], item[""user""], item[""labels""], item[""state""]])

TypeError: string indices must be integers
</code></pre>

<p>What am I missing here? Which are the ""string indices""? I'm sure that once I get this working I'll have more issues, but for now , I'd just love for this to work!</p>

<p><strong>UPDATE:</strong> 
When I tweak the <code>for</code> statement to simply </p>

<pre><code>for item in data:
    print item
</code></pre>

<p>what I get is ... ""issues"" -- so I'm doing something more basic wrong. Here's a bit of my json:</p>

<pre><code>{""issues"":[{""gravatar_id"":""44230311a3dcd684b6c5f81bf2ec9f60"",""position"":2.0,""number"":263,""votes"":0,""created_at"":""2010/09/17 16:06:50 -0700"",""comments"":11,""body"":""Add missing paging (Older&gt;&gt;) links...
</code></pre>

<p>when I print <code>data</code> it looks like it is getting munged really oddly:</p>

<pre><code>{u'issues': [{u'body': u'Add missing paging (Older&gt;&gt;) lin...
</code></pre>
","<p><code>item</code> is most likely a string in your code; the string indices are the ones in the square brackets, e.g., <code>gravatar_id</code>. So I'd first check your <code>data</code> variable to see what you received there; I guess that <code>data</code> is a list of strings (or at least a list containing at least one string) while it should be a list of dictionaries.</p>
","6077684"
"How do I install the yaml package for Python?","263264","","<p>I have a Python program that uses YAML.  I attempted to install it on a new server using <code>pip install yaml</code> and it returns the following:</p>

<pre><code>$ sudo pip install yaml
Downloading/unpacking yaml
  Could not find any downloads that satisfy the requirement yaml
No distributions at all found for yaml
Storing complete log in /home/pa/.pip/pip.log
</code></pre>

<p>How do I install the yaml package for Python?  I'm running Python 2.7.  (OS: Debian Wheezy)</p>
","<p>You could try the search feature in pip, </p>

<pre><code>$ pip search yaml
</code></pre>

<p>which looks for packages in PyPI with yaml in the short description.  That reveals various packages, including PyYaml, yamltools, and PySyck, among others (Note that <a href=""http://pyyaml.org/wiki/PySyck"" rel=""nofollow noreferrer"">PySyck docs</a> recommend using PyYaml, since syck is out of date).  Now you know a specific package name, you can install it:</p>

<pre><code>$ pip install pyyaml
</code></pre>

<p>If you want to install python yaml system-wide in linux, you can also use a package manager, like <code>aptitude</code> or <code>yum</code>:</p>

<pre><code>$ sudo apt-get install python-yaml
$ sudo yum install python-yaml
</code></pre>
","14262462"
"error: Setup script exited with error: command 'x86_64-linux-gnu-gcc' failed with exit status 1","262758","","<p>When I try to install odoo-server I got the following error could anyone help me to resolve this?</p>

<pre><code>error: Setup script exited with error: command 'x86_64-linux-gnu-gcc' failed with exit status 1
</code></pre>
","<p>Try installing these packages.</p>

<pre><code>sudo apt-get install build-essential autoconf libtool pkg-config python-opengl python-imaging python-pyrex python-pyside.qtopengl idle-python2.7 qt4-dev-tools qt4-designer libqtgui4 libqtcore4 libqt4-xml libqt4-test libqt4-script libqt4-network libqt4-dbus python-qt4 python-qt4-gl libgle3 python-dev libssl-dev

sudo easy_install greenlet

sudo easy_install gevent
</code></pre>
","26333011"
"In Python, how do I determine if an object is iterable?","262681","","<p>Is there a method like <code>isiterable</code>? The only solution I have found so far is to call</p>

<pre><code>hasattr(myObj, '__iter__')
</code></pre>

<p>But I am not sure how fool-proof this is.</p>
","<ol>
<li><p>Checking for <code>__iter__</code> works on sequence types, but it would fail on e.g. strings <strong>in Python 2</strong>. I would like to know the right answer too, until then, here is one possibility (which would work on strings, too):</p>

<pre><code>try:
    some_object_iterator = iter(some_object)
except TypeError, te:
    print some_object, 'is not iterable'
</code></pre>

<p>The <code>iter</code> built-in checks for the <code>__iter__</code> method or in the case of strings the <code>__getitem__</code> method.</p></li>
<li><p>Another general pythonic approach is to assume an iterable, then fail gracefully if it does not work on the given object. The Python glossary:</p>

<blockquote>
  <p>Pythonic programming style that determines an object's type by inspection of its method or attribute signature rather than by explicit relationship to some type object (""If it looks like a <strong>duck</strong> and quacks like a <strong>duck</strong>, it must be a <strong>duck</strong>."") By emphasizing interfaces rather than specific types, well-designed code improves its flexibility by allowing polymorphic substitution. Duck-typing avoids tests using type() or isinstance(). <strong>Instead, it typically employs the EAFP (Easier to Ask Forgiveness than Permission) style of programming.</strong></p>
  
  <p>...</p>

<pre><code>try:
   _ = (e for e in my_object)
except TypeError:
   print my_object, 'is not iterable'
</code></pre>
</blockquote></li>
<li><p>The <a href=""http://docs.python.org/library/collections.html#abcs-abstract-base-classes"" rel=""noreferrer""><code>collections</code></a> module provides some abstract base classes, which allow to ask classes or instances if they provide particular functionality, for example:</p>

<pre><code>import collections

if isinstance(e, collections.Iterable):
    # e is iterable
</code></pre>

<p>However, this does not check for classes that are iterable through <code>__getitem__</code>.</p></li>
</ol>
","1952481"
"Store output of subprocess.Popen call in a string","262519","","<p>I'm trying to make a system call in Python and store the output to a string that I can manipulate in the Python program.</p>

<pre><code>#!/usr/bin/python
import subprocess
p2 = subprocess.Popen(""ntpq -p"")
</code></pre>

<p>I've tried a few things including some of the suggestions here:</p>

<p><a href=""https://stackoverflow.com/questions/1996518/retrieving-the-output-of-subprocess-call"">Retrieving the output of subprocess.call()</a></p>

<p>but without any luck.</p>
","<p><strong>In Python 2.7 or Python 3</strong></p>

<p>Instead of making a <code>Popen</code> object directly, you can use the <a href=""http://docs.python.org/2/library/subprocess.html#subprocess.check_output"" rel=""noreferrer""><code>subprocess.check_output()</code> function</a> to store output of a command in a string:</p>

<pre><code>from subprocess import check_output
out = check_output([""ntpq"", ""-p""])
</code></pre>

<p><strong>In Python 2.4-2.6</strong></p>

<p>Use the <code>communicate</code> method.</p>

<pre><code>import subprocess
p = subprocess.Popen([""ntpq"", ""-p""], stdout=subprocess.PIPE)
out, err = p.communicate()
</code></pre>

<p><code>out</code> is what you want.</p>

<p><strong>Important note about the other answers</strong></p>

<p>Note how I passed in the command. The <code>""ntpq -p""</code> example brings up another matter. Since <code>Popen</code> does not invoke the shell, you would use a list of the command and options—<code>[""ntpq"", ""-p""]</code>.</p>
","2502883"
"How to get a complete list of object's methods and attributes?","262026","","<pre><code>dir(re.compile(pattern)) 
</code></pre>

<p>does not return pattern as one of the lists's elements. Namely it returns:</p>

<pre><code>['__copy__', '__deepcopy__', 'findall', 'finditer', 'match', 'scanner', 'search', 'split', 'sub', 'subn']
</code></pre>

<p>According to the manual, it is supposed to contain </p>

<blockquote>
  <p>the object's attributes' names, the
  names of its class's attributes, and
  recursively of the attributes of its
  class's base classes.</p>
</blockquote>

<p>It says also that</p>

<blockquote>
  <p>The list is not necessarily complete.</p>
</blockquote>

<p>Is there a way to get the <strong>complete</strong> list? I always assumed that dir returns a complete list but apparently it does not...</p>

<p>Also: is there a way to list only attributes? Or only methods?</p>

<p><em>Edit: this is actually a bug in python -> supposedly it is fixed in the 3.0 branch (and perhaps also in 2.6)</em></p>
","<p>For the <strong>complete</strong> list of attributes, the short answer is: no. The problem is that the attributes are actually defined as the arguments accepted by the <code>getattr</code> built-in function. As the user can reimplement <code>__getattr__</code>, suddenly allowing any kind of attribute, there is no possible generic way to generate that list. The <code>dir</code> function returns the keys in the <code>__dict__</code> attribute, i.e. all the attributes accessible if the <code>__getattr__</code> method is not reimplemented.</p>

<p>For the second question, it does not really make sense. Actually, methods are callable attributes, nothing more. You could though filter callable attributes, and, using the <code>inspect</code> module determine the class methods, methods or functions.</p>
","191029"
"Convert a list to a dictionary in Python","261893","","<p>Let's say I have a list <code>a</code> in Python whose entries conveniently map to a dictionary. Each even element represents the key to the dictionary, and the following odd element is the value</p>

<p>for example,</p>

<pre><code>a = ['hello','world','1','2']
</code></pre>

<p>and I'd like to convert it to a dictionary <code>b</code>, where </p>

<pre><code>b['hello'] = 'world'
b['1'] = '2'
</code></pre>

<p>What is the syntactically cleanest way to accomplish this?</p>
","<pre><code>b = dict(zip(a[::2], a[1::2]))
</code></pre>

<p>If <code>a</code> is large, you will probably want to do something like the following, which doesn't make any temporary lists like the above.</p>

<pre><code>from itertools import izip
i = iter(a)
b = dict(izip(i, i))
</code></pre>

<p>In Python 3 you could also use a dict comprehension, but ironically I think the simplest way to do it will be with <code>range()</code> and <code>len()</code>, which would normally be a code smell.</p>

<pre><code>b = {a[i]: a[i+1] for i in range(0, len(a), 2)}
</code></pre>

<p>So the <code>iter()/izip()</code> method is still probably the most Pythonic in Python 3, although as EOL notes in a comment, <code>zip()</code> is already lazy in Python 3 so you don't need <code>izip()</code>.</p>

<pre><code>i = iter(a)
b = dict(zip(i, i))
</code></pre>

<p>If you want it on one line, you'll have to cheat and use a semicolon.  ;-)</p>
","4576128"
"How do I get my Python program to sleep for 50 milliseconds?","261785","","<p>How do I get my Python program to sleep for 50 milliseconds?</p>
","<pre><code>from time import sleep
sleep(0.05)
</code></pre>

<p><a href=""http://docs.python.org/library/time.html"" rel=""noreferrer"">Reference</a></p>
","377463"
"Python, os.system for command-line call (linux) not returning what it should?","260872","","<p>I need to make some command line calls to linux and get the return from this, however doing it as below is just returning <code>0</code> when it should return a time value, like <code>00:08:19</code>, I am testing the exact same call in regular command line and it returns the time value <code>00:08:19</code> so I am confused as to what I am doing wrong as I thought this was how to do it in python. Any advice is appreciated.</p>

<pre><code>import os
retvalue = os.system(""ps -p 2993 -o time --no-headers"")
print retvalue
</code></pre>
","<p>What gets returned is the return value of executing this command. What you see in while executing it directly is the output of the command in stdout. That 0 is returned means, there was no error in execution.</p>

<p>Use popen etc for capturing the output .</p>

<p>Some thing along this line:</p>

<pre><code>import subprocess as sub
p = sub.Popen(['your command', 'arg1', 'arg2', ...],stdout=sub.PIPE,stderr=sub.PIPE)
output, errors = p.communicate()
print output
</code></pre>

<p>or </p>

<pre><code>import os
p = os.popen('command',""r"")
while 1:
    line = p.readline()
    if not line: break
    print line
</code></pre>

<p>ON SO : <a href=""https://stackoverflow.com/questions/1007855/popen-and-python"">Popen and python</a></p>
","3791476"
"How to install psycopg2 with ""pip"" on Python?","260813","","<p>I'm using <em><code>virtualenv</code></em> and I need to install ""psycopg2"".</p>

<p>I have done the following:</p>

<pre><code>pip install http://pypi.python.org/packages/source/p/psycopg2/psycopg2-2.4.tar.gz#md5=24f4368e2cfdc1a2b03282ddda814160
</code></pre>

<p>And I have the following messages:</p>

<pre><code>Downloading/unpacking http://pypi.python.org/packages/source/p/psycopg2/psycopg2
-2.4.tar.gz#md5=24f4368e2cfdc1a2b03282ddda814160
  Downloading psycopg2-2.4.tar.gz (607Kb): 607Kb downloaded
  Running setup.py egg_info for package from http://pypi.python.org/packages/sou
rce/p/psycopg2/psycopg2-2.4.tar.gz#md5=24f4368e2cfdc1a2b03282ddda814160
    Error: pg_config executable not found.

    Please add the directory containing pg_config to the PATH
    or specify the full executable path with the option:

        python setup.py build_ext --pg-config /path/to/pg_config build ...

    or with the pg_config option in 'setup.cfg'.
    Complete output from command python setup.py egg_info:
    running egg_info

creating pip-egg-info\psycopg2.egg-info

writing pip-egg-info\psycopg2.egg-info\PKG-INFO

writing top-level names to pip-egg-info\psycopg2.egg-info\top_level.txt

writing dependency_links to pip-egg-info\psycopg2.egg-info\dependency_links.txt

writing manifest file 'pip-egg-info\psycopg2.egg-info\SOURCES.txt'

warning: manifest_maker: standard file '-c' not found

Error: pg_config executable not found.



Please add the directory containing pg_config to the PATH

or specify the full executable path with the option:



    python setup.py build_ext --pg-config /path/to/pg_config build ...



or with the pg_config option in 'setup.cfg'.

----------------------------------------
Command python setup.py egg_info failed with error code 1
Storing complete log in C:\Documents and Settings\anlopes\Application Data\pip\p
ip.log
</code></pre>

<p>My question, I only need to do this to get the psycopg2 working?</p>

<pre><code>python setup.py build_ext --pg-config /path/to/pg_config build ...
</code></pre>
","<p>I found this post searching for a Linux solution to this problem.</p>

<p>This <a href=""https://web.archive.org/web/20110305033324/http://goshawknest.wordpress.com/2011/02/16/how-to-install-psycopg2-under-virtualenv/"" rel=""noreferrer"">post by ""goshawk""</a> gave me the solution: run <code>sudo apt-get install libpq-dev python-dev</code> if you are on Ubuntu/Debian.</p>

<h1>Update</h1>

<p>Since more people have found this answer useful and posted their own solutions, here's a list of them:</p>

<h2>Debian/Ubuntu</h2>

<h3>Python 2</h3>

<pre><code>sudo apt install libpq-dev python-dev
</code></pre>

<h3>Python 3</h3>

<pre><code>sudo apt install libpq-dev python3-dev
</code></pre>

<h3>Additional</h3>

<p>If none of the above solve your issue, try</p>

<pre><code>sudo apt install build-essential
</code></pre>

<p>or</p>

<pre><code>sudo apt install postgresql-server-dev-all
</code></pre>
","5450183"
"Import a file from a subdirectory?","260282","","<p>I have a file called <code>tester.py</code>, located on <code>/project</code>.</p>

<p><code>/project</code> has a subdirectory called <code>lib</code>, with a file called <code>BoxTime.py</code>:</p>

<pre class=""lang-none prettyprint-override""><code>/project/tester.py
/project/lib/BoxTime.py
</code></pre>

<p>I want to import <code>BoxTime</code> from <code>tester</code>. I have tried this:</p>

<pre><code>import lib.BoxTime
</code></pre>

<p>Which resulted:</p>

<pre class=""lang-none prettyprint-override""><code>Traceback (most recent call last):
  File ""./tester.py"", line 3, in &lt;module&gt;
    import lib.BoxTime
ImportError: No module named lib.BoxTime
</code></pre>

<p>Any ideas how to import <code>BoxTime</code> from the subdirectory?</p>

<p><strong>EDIT</strong></p>

<p>The <code>__init__.py</code> was the problem, but don't forget to refer to <code>BoxTime</code> as <code>lib.BoxTime</code>, or use:</p>

<pre><code>import lib.BoxTime as BT
...
BT.bt_function()
</code></pre>
","<p>Take a look at the Packages documentation (Section 6.4) here: <a href=""http://docs.python.org/tutorial/modules.html"" rel=""noreferrer"">http://docs.python.org/tutorial/modules.html</a></p>

<p>In short, you need to put a blank file named </p>

<pre><code>__init__.py
</code></pre>

<p>in the ""lib"" directory.</p>
","1260813"
"Understanding the map function","260231","","<pre><code>map(function, iterable, ...)
</code></pre>

<p>Apply function to every item of iterable and return a list of the results. If additional iterable arguments are passed, function must take that many arguments and is applied to the items from all iterables in parallel. </p>

<p>If one iterable is shorter than another it is assumed to be extended with None items. </p>

<p>If function is <code>None</code>, the identity function is assumed; if there are multiple arguments, <code>map()</code> returns a list consisting of tuples containing the corresponding items from all iterables (a kind of transpose operation). </p>

<p>The iterable arguments may be a sequence or any iterable object; the result is always a list.</p>

<p>What role does this play in making a Cartesian product?</p>

<pre><code>content = map(tuple, array)
</code></pre>

<p>What effect does putting a tuple anywhere in there have? I also noticed that without the map function the output is <code>abc</code> and with it, it's <code>a, b, c</code>.</p>

<p>I want to fully understand this function. The reference definitions is also hard to understand. Too much fancy fluff. </p>
","<p><code>map</code> isn't particularly pythonic. I would recommend using list comprehensions instead:</p>

<pre><code>map(f, iterable)
</code></pre>

<p>is basically equivalent to:</p>

<pre><code>[f(x) for x in iterable]
</code></pre>

<p><code>map</code> on its own can't do a Cartesian product, because the length of its output list is always the same as its input list. You can trivially do a Cartesian product with a list comprehension though:</p>

<pre><code>[(a, b) for a in iterable_a for b in iterable_b]
</code></pre>

<p>The syntax is a little confusing -- that's basically equivalent to:</p>

<pre><code>result = []
for a in iterable_a:
    for b in iterable_b:
        result.append((a, b))
</code></pre>
","10973817"
"Two versions of python on linux. how to make 2.7 the default","260177","","<p>I've got two versions of python on my linuxbox:</p>

<pre><code>$python
Python 2.6.6 (r266:84292, Jul 10 2013, 22:48:45) 
[GCC 4.4.7 20120313 (Red Hat 4.4.7-3)] on linux2
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
&gt;&gt;&gt; 


$ /usr/local/bin/python2.7
Python 2.7.3 (default, Oct  8 2013, 15:53:09) 
[GCC 4.4.7 20120313 (Red Hat 4.4.7-3)] on linux2
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
&gt;&gt;&gt; 

$ which python
/usr/bin/python
$ ls -al /usr/bin/python
-rwxr-xr-x. 2 root root 4864 Jul 10 22:49 /usr/bin/python
</code></pre>

<p>How can I make 2.7 be the default version so when I type <code>python</code> it puts me in 2.7?</p>
","<p>You probably don't actually want to change your default Python.</p>

<p>Your distro installed a standard system Python in <code>/usr/bin</code>, and may have scripts that depend on this being present, and selected by <code>#! /usr/bin/env python</code>. You can <em>usually</em> get away with running Python 2.6 scripts in 2.7, but do you want to risk it?</p>

<p>On top of that, monkeying with <code>/usr/bin</code> can break your package manager's ability to manage packages. And changing the order of directories in your <code>PATH</code> will affect a lot of other things besides Python. (In fact, it's more common to have <code>/usr/local/bin</code> ahead of <code>/usr/bin</code>, and it may be what you actually want—but if you have it the other way around, presumably there's a good reason for that.)</p>

<p>But you don't <em>need</em> to change your default Python to get the system to run 2.7 when you type <code>python</code>.</p>

<hr>

<p>First, you can set up a shell alias:</p>

<pre><code>alias python=/usr/local/bin/python2.7
</code></pre>

<p>Type that at a prompt, or put it in your <code>~/.bashrc</code> if you want the change to be persistent, and now when <em>you</em> type <code>python</code> it runs your chosen 2.7, but when some program on your system tries to run a script with <code>/usr/bin/env python</code> it runs the standard 2.6.</p>

<hr>

<p>Alternatively, just create a <a href=""https://pypi.python.org/pypi/virtualenv"" rel=""noreferrer"">virtual environment</a> out of your 2.7 (or separate venvs for different projects), and do your work inside the venv.</p>
","19256389"
"IndexError: list assignment index out of range","260070","","<p>Please consider the following code:</p>

<pre><code>i = [1, 2, 3, 5, 8, 13]
j = []
k = 0

for l in i:
    j[k] = l
    k += 1

print j
</code></pre>

<p>The output (Python 2.6.6 on Win 7 32-bit) is:</p>

<pre><code>&gt; Traceback (most recent call last): 
&gt;     j[k] = l IndexError: list assignment index out of range
</code></pre>

<p>I guess it's something simple I don't understand. Can someone clear it up?</p>
","<p><code>j</code> is an empty list, but you're attempting to write to element <code>[0]</code> in the first iteration, which doesn't exist yet.</p>

<p>Try the following instead, to add a new element to the end of the list:</p>

<pre><code>for l in i:
    j.append(l)
</code></pre>
","5653549"
"Does Python have “private” variables in classes?","259310","","<p>I'm coming from the Java world and reading Bruce Eckels' <em>Python 3 Patterns, Recipes and Idioms</em>. </p>

<p>While reading about classes, it goes on to say that in Python there is no need to declare instance variables. You just use them in the constructor, and boom, they are there. </p>

<p>So for example:</p>

<pre><code>class Simple:
    def __init__(self1, str):
        print(""inside the simple constructor"")
        self1.s = str
    def show(self1):
        print(self1.s)
    def showMsg (self, msg):
        print (msg + ':', self.show())
</code></pre>

<p>If that’s true, then any object of class <code>Simple</code> can just change the value of variable <code>s</code> outside of the class. </p>

<p>For example: </p>

<pre><code>if __name__ == ""__main__"":
    x = Simple(""constructor argument"")
    x.s = ""test15"" # this changes the value
    x.show()
    x.showMsg(""A message"")
</code></pre>

<p>In Java, we have been taught about public/private/protected variables.  Those keywords make sense because at times you want variables in a class to which no one outside the class has access to. </p>

<p>Why is that not required in Python?</p>
","<p>It's cultural.  In Python, you don't write to other classes' instance or class variables.  In Java, nothing prevents you from doing the same if you <em>really</em> want to - after all, you can always edit the source of the class itself to achieve the same effect. Python drops that pretence of security and encourages programmers to be responsible. In practice, this works very nicely.</p>

<p>If you want to emulate private variables for some reason, you can always use the <code>__</code> prefix from <a href=""http://www.python.org/dev/peps/pep-0008/"">PEP 8</a>. Python mangles the names of variables like <code>__foo</code> so that they're not easily visible to code outside the class that contains them (although you <em>can</em> get around it if you're determined enough, just like you <em>can</em> get around Java's protections if you work at it).</p>

<p>By the same convention, the <code>_</code> prefix means <strong>stay away even if you're not technically prevented from doing so</strong>. You don't play around with another class's variables that look like <code>__foo</code> or <code>_bar</code>.</p>
","1641236"
"In Python, how do I convert all of the items in a list to floats?","259266","","<p>I have a script which reads a text file, pulls decimal numbers out of it as strings and places them into a list.</p>

<p>So I have this list: <code>['0.49', '0.54', '0.54', '0.54', '0.54', '0.54', '0.55', '0.54', '0.54', '0.54', '0.55', '0.55', '0.55', '0.54', '0.55', '0.55', '0.54', '0.55', '0.55', '0.54']</code></p>

<p>How do I convert each of the values in the list from a string to a float?</p>

<p>I have tried:</p>

<pre><code>for item in list:
    float(item)
</code></pre>

<p>But this doesn't seem to work for me.</p>
","<pre><code>[float(i) for i in lst]
</code></pre>

<p>to be precise, it creates a new list with float values. Unlike the <code>map</code> approach it will work in py3k.</p>
","1614247"
"Python, creating objects","259260","","<p>I'm trying to learn python and I now I am trying to get the hang of classes and how to manipulate them with instances.</p>

<p>I can't seem to understand this practice problem:</p>

<p>Create and return a student object whose name, age, and major are
the same as those given as input</p>

<pre><code>def make_student(name, age, major)
</code></pre>

<p>I just don't get what it means by object, do they mean I should create an array inside the function that holds these values? or create a class and let this function be inside it, and assign instances? (before this question i was asked to set up a student class with name, age, and major inside)</p>

<pre><code>class Student:
    name = ""Unknown name""
    age = 0
    major = ""Unknown major""
</code></pre>
","<pre><code>class Student(object):
    name = """"
    age = 0
    major = """"

    # The class ""constructor"" - It's actually an initializer 
    def __init__(self, name, age, major):
        self.name = name
        self.age = age
        self.major = major

def make_student(name, age, major):
    student = Student(name, age, major)
    return student
</code></pre>

<p>Note that even though one of the principles in Python's philosophy is <em>""there should be one—and preferably only one—obvious way to do it""</em>, there are still multiple ways to do this. You can also use the two following snippets of code to take advantage of Python's dynamic capabilities:</p>

<pre><code>class Student(object):
    name = """"
    age = 0
    major = """"

def make_student(name, age, major):
    student = Student()
    student.name = name
    student.age = age
    student.major = major
    # Note: I didn't need to create a variable in the class definition before doing this.
    student.gpa = float(4.0)
    return student
</code></pre>

<p>I prefer the former, but there are instances where the latter can be useful – one being when working with document databases like MongoDB. </p>
","15081667"
"Reading entire file in Python","258728","","<p>If you read an entire file with <code>content = open('Path/to/file', 'r').read()</code> is the file handle left open until the script exits?  Is there a more concise method to read a whole file? </p>
","<p>the answer to that question depends somewhat on the particular python implementation.  </p>

<p>To understand what this is all about, pay particular attention to the actual <code>file</code> object.  In your code, that object is mentioned only once, in an expression, and becomes inaccessible immediatly after the <code>read()</code> call returns.</p>

<p>This means that the file object is garbage.  The only remaining question is ""When will the garbage collecter collect the file object?"".</p>

<p>in CPython, which uses a reference counter, this kind of garbage is noticed immediately, and so it will be collected immediately.  This is not generally true of other python implementations.</p>

<p>A better solution, to make sure that the file is closed, is this pattern:</p>

<pre><code>with open('Path/to/file', 'r') as content_file:
    content = content_file.read()
</code></pre>

<p>which will always close the file immediately after the block ends; even if an exception occurs.</p>

<p>Edit:  To put a finer point on it:</p>

<p>Other than <code>file.__exit__()</code>, which is ""automatically"" called in a <code>with</code> context manager setting, the only other way that <code>file.close()</code> is automatically called (that is, other than explicitly calling it yourself,) is via <code>file.__del__()</code>.  This leads us to the question of when does <code>__del__()</code> get called?</p>

<blockquote>
  <p>A correctly-written program cannot assume that finalizers will ever run at any point prior to program termination.</p>
</blockquote>

<p>-- <a href=""http://blogs.msdn.com/b/oldnewthing/archive/2010/08/09/10047586.aspx"" rel=""noreferrer"">http://blogs.msdn.com/b/oldnewthing/archive/2010/08/09/10047586.aspx</a></p>

<p>In particular:</p>

<blockquote>
  <p>Objects are never explicitly destroyed; however, when they become unreachable they may be garbage-collected. <strong>An implementation is allowed to postpone garbage collection or omit it altogether</strong> — it is a matter of implementation quality how garbage collection is implemented, as long as no objects are collected that are still reachable.</p>
  
  <p>[...]</p>
  
  <p>CPython currently uses a reference-counting scheme with (optional) delayed detection of cyclically linked garbage, which collects most objects as soon as they become unreachable, but is not guaranteed to collect garbage containing circular references.</p>
</blockquote>

<p>-- <a href=""https://docs.python.org/3.5/reference/datamodel.html#objects-values-and-types"" rel=""noreferrer"">https://docs.python.org/3.5/reference/datamodel.html#objects-values-and-types</a></p>

<p>(Emphasis mine)</p>

<p>but as it suggests, other implementations may have other behavior.  As an example, PyPy <a href=""https://pypy.readthedocs.org/en/release-2.4.x/garbage_collection.html"" rel=""noreferrer"">has <em>6</em> different garbage collection implementations</a>!</p>
","7409814"
"How can I fill out a Python string with spaces?","258385","","<p>I want to fill out a string with spaces. I know that the following works for zero's:</p>

<pre><code>&gt;&gt;&gt; print  ""'%06d'""%4
'000004'
</code></pre>

<p>But what should I do when I want this?:</p>

<pre><code>'hi    '
</code></pre>

<p>of course I can measure string length and do <code>str+"" ""*leftover</code>, but I'd like the shortest way.</p>
","<p>You can do this with <a href=""http://docs.python.org/library/stdtypes.html#str.ljust"" rel=""noreferrer""><strong><code>str.ljust(width[, fillchar])</code></strong></a>:</p>

<blockquote>
  <p>Return the string left justified in a string of length <em>width</em>. Padding is done using the specified <em>fillchar</em> (default is a space). The original string is returned if <em>width</em> is less than <code>len(s)</code>.</p>
</blockquote>

<pre><code>&gt;&gt;&gt; 'hi'.ljust(10)
'hi        '
</code></pre>
","5676676"
"How to get data received in Flask request","258030","","<p>I want to be able to get the data sent to my Flask app.  I've tried accessing <code>request.data</code> but it is an empty string. How do you access request data?</p>

<pre><code>@app.route('/', methods=['GET', 'POST'])
def parse_request():
    data = request.data  # data is empty
    # need posted data here
</code></pre>

<hr>

<p>The answer to this question led me to ask <a href=""https://stackoverflow.com/q/10999990"">Get raw POST body in Python Flask regardless of Content-Type header</a> next, which is about getting the raw data rather than the parsed data.</p>
","<p>The <a href=""http://flask.pocoo.org/docs/api/#flask.Request"" rel=""noreferrer"">docs</a> describe the attributes available on the request.  In most common cases <code>request.data</code> will be empty because it's used as a fallback:</p>

<blockquote>
  <p><code>request.data</code> Contains the incoming request data as string in case it came with a mimetype Flask does not handle.</p>
</blockquote>

<ul>
<li><code>request.args</code>: the key/value pairs in the URL query string</li>
<li><code>request.form</code>: the key/value pairs in the body, from a HTML post form, or JavaScript request that isn't JSON encoded</li>
<li><code>request.files</code>: the files in the body, which Flask keeps separate from <code>form</code>. HTML forms must use <code>enctype=multipart/form-data</code> or files will not be uploaded.</li>
<li><code>request.values</code>: combined <code>args</code> and <code>form</code>, preferring <code>args</code> if keys overlap</li>
</ul>
","16664376"
"Clear variable in python","257511","","<p>Is there a way to clear the value of a variable in python?</p>

<p>For example if I was implementing a binary tree:</p>

<pre><code>Class Node:
    self.left = somenode1
    self.right = somenode2
</code></pre>

<p>If I wanted to remove some node from the tree, I would need to set <code>self.left</code> to empty.</p>
","<p>What's wrong with <code>self.left = None</code>? Am I misinterpreting your question, or are you just not familiar with the <code>None</code> keyword?</p>
","8237659"
"What is setup.py?","257297","","<p>Can anyone please explain, what is <code>setup.py</code> and how can it be configured or used?</p>
","<p><code>setup.py</code> is a python file, which usually tells you that the module/package you are about to install has been packaged and distributed with Distutils, which is the standard for distributing Python Modules.<br></p>

<p>This allows you to easily install Python packages. Often it's enough to write:</p>

<pre><code>$ python setup.py install
</code></pre>

<p>and the module will install itself.</p>

<p><a href=""http://docs.python.org/install/index.html"" rel=""noreferrer"">http://docs.python.org/install/index.html</a></p>
","1472014"
"Proper indentation for Python multiline strings","256848","","<p>What is the proper indentation for Python multiline strings within a function?</p>

<pre><code>    def method():
        string = """"""line one
line two
line three""""""
</code></pre>

<p>or</p>

<pre><code>    def method():
        string = """"""line one
        line two
        line three""""""
</code></pre>

<p>or something else?</p>

<p>It looks kind of weird to have the string hanging outside the function in the first example.</p>
","<p>You probably want to line up with the <code>""""""</code></p>

<pre><code>def foo():
    string = """"""line one
             line two
             line three""""""
</code></pre>

<p>Since the newlines and spaces are included in the string itself, you will have to postprocess it. If you don't want to do that and you have a whole lot of text, you might want to store it separately in a text file. If a text file does not work well for your application and you don't want to postprocess, I'd probably go with</p>

<pre><code>def foo():
    string = (""this is an ""
              ""implicitly joined ""
              ""string"")
</code></pre>

<p>If you want to postprocess a multiline string to trim out the parts you don't need, you should consider the <a href=""http://docs.python.org/3/library/textwrap.html"" rel=""noreferrer""><code>textwrap</code></a> module or the technique for postprocessing docstrings presented in <a href=""http://www.python.org/dev/peps/pep-0257/"" rel=""noreferrer"">PEP 257</a>:</p>

<pre><code>def trim(docstring):
    if not docstring:
        return ''
    # Convert tabs to spaces (following the normal Python rules)
    # and split into a list of lines:
    lines = docstring.expandtabs().splitlines()
    # Determine minimum indentation (first line doesn't count):
    indent = sys.maxint
    for line in lines[1:]:
        stripped = line.lstrip()
        if stripped:
            indent = min(indent, len(line) - len(stripped))
    # Remove indentation (first line is special):
    trimmed = [lines[0].strip()]
    if indent &lt; sys.maxint:
        for line in lines[1:]:
            trimmed.append(line[indent:].rstrip())
    # Strip off trailing and leading blank lines:
    while trimmed and not trimmed[-1]:
        trimmed.pop()
    while trimmed and not trimmed[0]:
        trimmed.pop(0)
    # Return a single string:
    return '\n'.join(trimmed)
</code></pre>
","2504457"
"Print a string as hex bytes?","256595","","<p>I have this string: <code>Hello world !!</code> and I want to print it using Python as <code>48:65:6c:6c:6f:20:77:6f:72:6c:64:20:21:21</code>.</p>

<p><code>hex()</code> works only for integers. </p>

<p>How can it be done?</p>
","<p>Your can transform your string to a int generator, apply hex formatting for each element and intercalate with separator:</p>

<pre><code>&gt;&gt;&gt; s = ""Hello world !!""
&gt;&gt;&gt; "":"".join(""{:02x}"".format(ord(c)) for c in s)
'48:65:6c:6c:6f:20:77:6f:72:6c:64:20:21:21
</code></pre>
","12214880"
"How to get a function name as a string in Python?","256368","","<p>In Python, how do I get a function name as a string without calling the function?</p>

<pre><code>def my_function():
    pass

print get_function_name_as_string(my_function) # my_function is not in quotes
</code></pre>

<p>should output <code>""my_function""</code>.</p>

<p>Is this available in python? If not, any idea how to write <code>get_function_name_as_string</code> in Python?</p>
","<pre><code>my_function.__name__
</code></pre>

<p>Using <code>__name__</code> is the preferred method as it applies uniformly. Unlike <code>func_name</code>, it works on built-in functions as well:</p>

<pre><code>&gt;&gt;&gt; import time
&gt;&gt;&gt; time.time.func_name
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in ?
AttributeError: 'builtin_function_or_method' object has no attribute 'func_name'
&gt;&gt;&gt; time.time.__name__ 
'time'
</code></pre>

<p>Also the double underscores indicate to the reader this is a special attribute. As a bonus, classes and modules have a <code>__name__</code> attribute too, so you only have remember one special name.</p>
","255297"
"What is the naming convention in Python for variable and function names?","256163","","<p>Coming from a C# background the naming convention for variables and method names are usually either CamelCase or Pascal Case:</p>

<pre><code>// C# example
string thisIsMyVariable = ""a""
public void ThisIsMyMethod()
</code></pre>

<p>In Python, I have seen the above but I have also seen underscores being used:</p>

<pre><code># python example
this_is_my_variable = 'a'
def this_is_my_function():
</code></pre>

<p>Is there a more preferable, definitive coding style for Python?</p>
","<p>See Python <a href=""http://www.python.org/dev/peps/pep-0008/"" rel=""noreferrer"">PEP 8</a>.</p>

<blockquote>
  <p>Function names should be lowercase,
  with words separated by underscores as
  necessary to improve readability.</p>
  
  <p>mixedCase is allowed only in contexts
  where that's already the prevailing
  style</p>
</blockquote>

<p>Variables...</p>

<blockquote>
  <p>Use the function naming rules:
  lowercase with words separated by
  underscores as necessary to improve
  readability.</p>
</blockquote>

<p>Personally, I deviate from this because I also prefer <code>mixedCase</code> over <code>lower_case</code> for my own projects.</p>
","159745"
"How to print an error in Python?","255188","","<pre><code>try:
    something here
except:
    print 'the whatever error occurred.'
</code></pre>

<p>How can I print the error in my <code>except:</code> block?</p>
","<p>For Python 2.6 and later:</p>

<pre><code>except Exception as e: print(e)
</code></pre>

<p>For Python 2.5 and earlier, use:</p>

<pre><code>except Exception,e: print str(e)
</code></pre>
","1483488"
"Correct way to pause Python program","255123","","<p>I've been using the input function as a way to pause my scripts</p>

<pre><code>print(""something"")
wait = input(""PRESS ENTER TO CONTINUE."")
print(""something"")
</code></pre>

<p>is there a formal way to do this?</p>
","<p>Seems fine to me (or <code>raw_input()</code> in Python 2.X). Alternatively you could use <code>time.sleep()</code> if you want to pause for a certain number of seconds.</p>

<pre><code>import time
print(""something"")
time.sleep(5.5)    # pause 5.5 seconds
print(""something"")
</code></pre>
","11552350"
"How can I find script's directory with Python?","254814","","<p>Consider the following Python code:</p>

<pre><code>import os
print os.getcwd()
</code></pre>

<p>I use <code>os.getcwd()</code> to <a href=""http://www.faqs.org/docs/diveintopython/regression_path.html"" rel=""noreferrer"">get the script file's directory location</a>. When I run the script from the command line it gives me the correct path whereas when I run it from a script run by code in a Django view it prints <code>/</code>.</p>

<p>How can I get the path to the script from within a script run by a Django view?</p>

<p><strong>UPDATE:</strong><br>
Summing up the answers thus far - <code>os.getcwd()</code> and <code>os.path.abspath()</code> both give the current working directory which may or may not be the directory where the script resides. In my web host setup <code><code>__file__</code></code> gives only the filename without the path.</p>

<p>Isn't there any way in Python to (always) be able to receive the path in which the script resides?</p>
","<p>You need to call <code>os.path.realpath</code> on <code>__file__</code>, so that when <code>__file__</code> is a filename without the path you still get the dir path:</p>

<pre><code>import os
print(os.path.dirname(os.path.realpath(__file__)))
</code></pre>
","9350788"
"Converting a float to a string without rounding it","254639","","<p>I'm making a program that, for reasons not needed to be explained, requires a float to be converted into a string to be counted with len(). However, str(float(x)) results in x being rounded when converted to a string, which throws the entire thing off. Does anyone know of a fix for it?
Here's the code being used if you want to know:</p>

<pre><code>len(str(float(x)/3))
</code></pre>
","<p>Some form of rounding is often unavoidable when dealing with floating point numbers.  This is because numbers that you can express exactly in base 10 cannot always be expressed exactly in base 2 (which your computer uses).</p>

<p>For example:</p>

<pre><code>&gt;&gt;&gt; .1
0.10000000000000001
</code></pre>

<p>In this case, you're seeing .1 converted to a string using <code>repr</code>:</p>

<pre><code>&gt;&gt;&gt; repr(.1)
'0.10000000000000001'
</code></pre>

<p>I believe python chops off the last few digits when you use str() in order to work around this problem, but it's a partial workaround that doesn't substitute for understanding what's going on.</p>

<pre><code>&gt;&gt;&gt; str(.1)
'0.1'
</code></pre>

<p>I'm not sure exactly what problems ""rounding"" is causing you.  Perhaps you would do better with string formatting as a way to more precisely control your output?</p>

<p>e.g.</p>

<pre><code>&gt;&gt;&gt; '%.5f' % .1
'0.10000'
&gt;&gt;&gt; '%.5f' % .12345678
'0.12346'
</code></pre>

<p><a href=""http://docs.python.org/library/string.html#formatstrings"" rel=""noreferrer"">Documentation here</a>.</p>
","1317578"
"How to check if one of the following items is in a list?","254257","","<p>I'm trying to find a short way to see if any of the following items is in a list, but my first attempt does not work. Besides writing a function to accomplish this, is the any short way to check if one of multiple items is in a list.</p>

<pre><code>&gt;&gt;&gt; a = [2,3,4]
&gt;&gt;&gt; print (1 or 2) in a
False
&gt;&gt;&gt; print (2 or 1) in a
True
</code></pre>
","<pre><code>&gt;&gt;&gt; L1 = [2,3,4]
&gt;&gt;&gt; L2 = [1,2]
&gt;&gt;&gt; [i for i in L1 if i in L2]
[2]


&gt;&gt;&gt; S1 = set(L1)
&gt;&gt;&gt; S2 = set(L2)
&gt;&gt;&gt; S1.intersection(S2)
set([2])
</code></pre>

<p>Both empty lists and empty sets are False, so you can use the value directly as a truth value.</p>
","740294"
"How do I fix 'ImportError: cannot import name IncompleteRead'?","254106","","<p>When I try to install anything with <code>pip</code> or <code>pip3</code>, I get:</p>

<pre><code>$ sudo pip3 install python3-tk
Traceback (most recent call last):
  File ""/usr/bin/pip3"", line 9, in &lt;module&gt;
    load_entry_point('pip==1.5.6', 'console_scripts', 'pip3')()
  File ""/usr/lib/python3/dist-packages/pkg_resources.py"", line 356, in load_entry_point
    return get_distribution(dist).load_entry_point(group, name)
  File ""/usr/lib/python3/dist-packages/pkg_resources.py"", line 2476, in load_entry_point
    return ep.load()
  File ""/usr/lib/python3/dist-packages/pkg_resources.py"", line 2190, in load
    ['__name__'])
  File ""/usr/lib/python3/dist-packages/pip/__init__.py"", line 61, in &lt;module&gt;
    from pip.vcs import git, mercurial, subversion, bazaar  # noqa
  File ""/usr/lib/python3/dist-packages/pip/vcs/mercurial.py"", line 9, in &lt;module&gt;
    from pip.download import path_to_url
  File ""/usr/lib/python3/dist-packages/pip/download.py"", line 25, in &lt;module&gt;
    from requests.compat import IncompleteRead
ImportError: cannot import name 'IncompleteRead'
</code></pre>

<p>I have a Ubuntu 14.10 system.</p>

<p>How can I fix this problem?</p>
","<p>While <a href=""https://stackoverflow.com/a/27341847/2854723"">this previous answer</a> might be the reason, this snipped worked for me as a solution (in <code>Ubuntu 14.04</code>):</p>

<p>First remove the package from the package manager:</p>

<pre class=""lang-none prettyprint-override""><code># apt-get remove python-pip
</code></pre>

<p>And then install the latest version by side:</p>

<pre class=""lang-none prettyprint-override""><code># easy_install pip
</code></pre>

<p>(thanks to @Aufziehvogel, @JunchaoGu)</p>
","27425458"
"Calling C/C++ from Python?","254081","","<p>What would be the quickest way to construct a Python binding to a C or C++ library?</p>

<p>(I am using Windows if this matters.)</p>
","<p>You should have a look at <a href=""http://www.boost.org/doc/libs/1_49_0/libs/python/doc/"" rel=""noreferrer"">Boost.Python</a>. Here is the short introduction taken from their website:</p>

<blockquote>
  <p>The Boost Python Library is a framework for interfacing Python and
  C++. It allows you to quickly and seamlessly expose C++ classes
  functions and objects to Python, and vice-versa, using no special
  tools -- just your C++ compiler. It is designed to wrap C++ interfaces
  non-intrusively, so that you should not have to change the C++ code at
  all in order to wrap it, making Boost.Python ideal for exposing
  3rd-party libraries to Python. The library's use of advanced
  metaprogramming techniques simplifies its syntax for users, so that
  wrapping code takes on the look of a kind of declarative interface
  definition language (IDL).</p>
</blockquote>
","145436"
"How do I capture SIGINT in Python?","253827","","<p>I'm working on a python script that starts several processes and database connections. Every now and then I want to kill the script with a <kbd>Ctrl</kbd>+<kbd>C</kbd> signal, and I'd like to do some cleanup.</p>

<p>In Perl I'd do this:</p>

<pre class=""lang-perl prettyprint-override""><code>$SIG{'INT'} = 'exit_gracefully';

sub exit_gracefully {
    print ""Caught ^C \n"";
    exit (0);
}
</code></pre>

<p>How do I do the analogue of this in Python?</p>
","<p>Register your handler with <code>signal.signal</code> like this:</p>

<pre><code>#!/usr/bin/env python
import signal
import sys
def signal_handler(signal, frame):
        print('You pressed Ctrl+C!')
        sys.exit(0)
signal.signal(signal.SIGINT, signal_handler)
print('Press Ctrl+C')
signal.pause()
</code></pre>

<p>Code adapted from <a href=""http://www.linuxjournal.com/article/3946"" rel=""noreferrer"">here</a>.</p>

<p>More documentation on <code>signal</code> can be found <a href=""http://docs.python.org/library/signal.html"" rel=""noreferrer"">here</a>. </p>
","1112350"
"How to start a background process in Python?","253540","","<p>I'm trying to port a shell script to the much more readable python version. The original shell script starts several processes (utilities, monitors, etc.) in the background with ""&amp;"". How can I achieve the same effect in python? I'd like these processes not to die when the python scripts complete. I am sure it's related to the concept of a daemon somehow, but I couldn't find how to do this easily.</p>
","<p><strong>Note</strong>: This answer is less current than it was when posted in 2009. Using the <code>subprocess</code> module shown in other answers is now recommended <a href=""https://docs.python.org/2/library/os.html?highlight=os#os.spawnl"" rel=""noreferrer"">in the docs</a></p>

<blockquote>
  <p>(Note that the subprocess module provides more powerful facilities for spawning new processes and retrieving their results; using that module is preferable to using these functions.)</p>
</blockquote>

<hr>

<p>If you want your process to start in the background you can either use <code>system()</code> and call it in the same way your shell script did, or you can <code>spawn</code> it:</p>

<pre><code>import os
os.spawnl(os.P_DETACH, 'some_long_running_command')
</code></pre>

<p>(or, alternatively, you may try the less portable <code>os.P_NOWAIT</code> flag).</p>

<p>See the <a href=""https://docs.python.org/2/library/os.html#os.spawnl"" rel=""noreferrer"">documentation here</a>.  </p>
","1196122"
"Print list without brackets in a single row","253346","","<p>I have a list in Python
e.g.</p>

<pre><code>names = [""Sam"", ""Peter"", ""James"", ""Julian"", ""Ann""]
</code></pre>

<p>I want to print the array in a single line without the normal "" []</p>

<pre><code>names = [""Sam"", ""Peter"", ""James"", ""Julian"", ""Ann""]
print (names)
</code></pre>

<p>Will give the output as;</p>

<pre><code>[""Sam"", ""Peter"", ""James"", ""Julian"", ""Ann""]
</code></pre>

<p>That is not the format I want instead I want it to be like this;</p>

<pre><code>Sam, Peter, James, Julian, Ann
</code></pre>

<p>Note: It must be in a single row.</p>
","<pre><code>print ', '.join(names)
</code></pre>

<p>This, like it sounds, just takes all the elements of the list and joins them with <code>', '</code>.</p>
","11178075"
"Import Error: No module named numpy","253230","","<p>I have a very similar question to <a href=""https://stackoverflow.com/questions/1517129/python-how-do-i-install-scipy-on-64-bit-windows"">this question</a>, but still one step behind. I have only one version of Python 3 installed on my Windows 7 (<em>sorry</em>) 64-bit system.</p>

<p>I installed numpy following this <a href=""http://sourceforge.net/projects/numpy/files/NumPy/1.3.0/numpy-1.3.0.win-amd64-py2.6.msi/download?use_mirror=ufpr"" rel=""noreferrer"">link</a> - as suggested in the question. The installation went fine but when I execute </p>

<pre><code>import numpy
</code></pre>

<p>I got the following error:</p>

<blockquote>
  <p>Import error: No module named numpy</p>
</blockquote>

<p>I know this is probably a super basic question, but I'm still learning.</p>

<p>Thanks</p>
","<p><a href=""http://sourceforge.net/projects/numpy/files//NumPy/1.5.0/NOTES.txt/view"" rel=""noreferrer"">Support for Python 3 was added in NumPy version 1.5.0</a>, so to begin with, you must download/install a newer version of NumPy.</p>
","7818845"
"How do I get the day of week given a date in Python?","252814","","<p>I want to find out the following:
given a date (<code>datetime</code> object), what is the corresponding day of the week.</p>

<p>For instance Sunday is the first day, Monday: second day.. and so on</p>

<p>And then if the input is something like today's date.</p>

<h2>Example</h2>

<pre><code>&gt;&gt;&gt; today = datetime.datetime(2017, 10, 20)
&gt;&gt;&gt; today.get_weekday()  # what I look for
</code></pre>

<p>The output is maybe <code>6</code> (since its Friday)</p>
","<p>Use <code>weekday()</code> (<a href=""http://docs.python.org/library/datetime.html#datetime.date.weekday"">docs</a>):</p>

<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; datetime.datetime.today()
datetime.datetime(2012, 3, 23, 23, 24, 55, 173504)
&gt;&gt;&gt; datetime.datetime.today().weekday()
4
</code></pre>

<p>From the documentation:</p>

<blockquote>
  <p>Return the day of the week as an integer, where Monday is 0 and Sunday is 6.</p>
</blockquote>
","9847269"
"Python: How to ignore an exception and proceed?","252737","","<p>I have a try...except block in my code and When an exception is throw. I really just want to continue with the code because in that case, everything is still able to run just fine. The problem is if you leave the except: block empty or with a #do nothing, it gives you a syntax error. I can't use continue because its not in a loop. Is there a keyword i can use that tells the code to just keep going?</p>
","<pre><code>except:
    pass
</code></pre>
","574734"
"List to array conversion","252194","","<p>I have a list in python and I want to convert it to an array to be able to use <code>ravel()</code> function.</p>
","<p>Use <a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.asarray.html"" rel=""noreferrer""><code>numpy.asarray</code></a>:</p>

<pre><code>import numpy as np
myarray = np.asarray(mylist)
</code></pre>
","15868531"
"UnicodeDecodeError: 'ascii' codec can't decode byte 0xef in position 1","251364","","<p>I'm having a few issues trying to encode a string to UTF-8. I've tried numerous things, including using <code>string.encode('utf-8')</code> and <code>unicode(string)</code>, but I get the error:</p>

<blockquote>
  <p>UnicodeDecodeError: 'ascii' codec can't decode byte 0xef in position 1: ordinal not in range(128)</p>
</blockquote>

<p>This is my string:</p>

<pre><code>(｡･ω･｡)ﾉ
</code></pre>

<p>I don't see what's going wrong, any idea?</p>

<p>Edit: The problem is that printing the string as it is does not show properly. Also, this error when I try to convert it:</p>

<pre><code>Python 2.7.1+ (r271:86832, Apr 11 2011, 18:13:53)
[GCC 4.5.2] on linux2
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
&gt;&gt;&gt; s = '(\xef\xbd\xa1\xef\xbd\xa5\xcf\x89\xef\xbd\xa5\xef\xbd\xa1)\xef\xbe\x89'
&gt;&gt;&gt; s1 = s.decode('utf-8')
&gt;&gt;&gt; print s1
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
UnicodeEncodeError: 'ascii' codec can't encode characters in position 1-5: ordinal not in range(128)
</code></pre>
","<p>This is to do with the encoding of your terminal not being set to UTF-8.  Here is my terminal</p>

<pre><code>$ echo $LANG
en_GB.UTF-8
$ python
Python 2.7.3 (default, Apr 20 2012, 22:39:59) 
[GCC 4.6.3] on linux2
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
&gt;&gt;&gt; s = '(\xef\xbd\xa1\xef\xbd\xa5\xcf\x89\xef\xbd\xa5\xef\xbd\xa1)\xef\xbe\x89'
&gt;&gt;&gt; s1 = s.decode('utf-8')
&gt;&gt;&gt; print s1
(｡･ω･｡)ﾉ
&gt;&gt;&gt; 
</code></pre>

<p>On my terminal the example works with the above, but if I get rid of the <code>LANG</code> setting then it won't work</p>

<pre><code>$ unset LANG
$ python
Python 2.7.3 (default, Apr 20 2012, 22:39:59) 
[GCC 4.6.3] on linux2
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
&gt;&gt;&gt; s = '(\xef\xbd\xa1\xef\xbd\xa5\xcf\x89\xef\xbd\xa5\xef\xbd\xa1)\xef\xbe\x89'
&gt;&gt;&gt; s1 = s.decode('utf-8')
&gt;&gt;&gt; print s1
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
UnicodeEncodeError: 'ascii' codec can't encode characters in position 1-5: ordinal not in range(128)
&gt;&gt;&gt; 
</code></pre>

<p>Consult the docs for your linux variant to discover how to make this change permanent.</p>
","10563157"
"How can I format a decimal to always show 2 decimal places?","250785","","<p>I want to display:</p>

<p><code>49</code> as <code>49.00</code></p>

<p>and:</p>

<p><code>54.9</code> as <code>54.90</code></p>

<p>Regardless of the length of the decimal or whether there are are any decimal places, I would like to display a <code>Decimal</code> with 2 decimal places, and I'd like to do it in an efficient way. The purpose is to display money values.</p>

<p>eg, <code>4898489.00</code></p>
","<p>I suppose you're probably using the <a href=""https://docs.python.org/2/library/decimal.html#decimal-objects"" rel=""noreferrer"" title=""Decimal objects""><code>Decimal()</code></a> objects from the <a href=""https://docs.python.org/2/library/decimal.html"" rel=""noreferrer"" title=""decimal — Decimal fixed point and floating point arithmetic""><code>decimal</code></a> module? (If you need exactly two digits of precision beyond the decimal point with arbitrarily large numbers, you definitely should be, and that's what your question's title suggests...)</p>

<p>If so, the <a href=""https://docs.python.org/2/library/decimal.html#decimal-faq"" rel=""noreferrer"" title=""Decimal FAQ""><em>Decimal FAQ</em></a> section of the docs has a question/answer pair which may be useful for you:</p>

<blockquote>
  <p>Q. In a fixed-point application with two decimal places, some inputs have many places and need to be rounded. Others are not supposed to have excess digits and need to be validated. What methods should be used?</p>
  
  <p>A. The quantize() method rounds to a fixed number of decimal places. If the Inexact trap is set, it is also useful for validation:</p>
</blockquote>

<pre><code>&gt;&gt;&gt; TWOPLACES = Decimal(10) ** -2       # same as Decimal('0.01')
&gt;&gt;&gt; # Round to two places
&gt;&gt;&gt; Decimal('3.214').quantize(TWOPLACES)
Decimal('3.21')
&gt;&gt;&gt; # Validate that a number does not exceed two places
&gt;&gt;&gt; Decimal('3.21').quantize(TWOPLACES, context=Context(traps=[Inexact]))
Decimal('3.21')
&gt;&gt;&gt; Decimal('3.214').quantize(TWOPLACES, context=Context(traps=[Inexact]))
Traceback (most recent call last):
   ...
Inexact: None
</code></pre>

<p>The next question reads</p>

<blockquote>
  <p>Q. Once I have valid two place inputs, how do I maintain that invariant throughout an application?</p>
</blockquote>

<p>If you need the answer to that (along with lots of other useful information), see <a href=""https://docs.python.org/2/library/decimal.html#decimal-objects"" rel=""noreferrer"" title=""Decimal objects""><em>the aforementioned section of the docs</em></a>. Also, if you keep your <code>Decimal</code>s with two digits of precision beyond the decimal point (meaning as much precision as is necessary to keep all digits to the left of the decimal point and two to the right of it and no more...), then converting them to strings with <code>str</code> will work fine:</p>

<pre><code>str(Decimal('10'))
# -&gt; '10'
str(Decimal('10.00'))
# -&gt; '10.00'
str(Decimal('10.000'))
# -&gt; '10.000'
</code></pre>
","1995846"
"Get the last 4 characters of a string","250688","","<p>I have the following string: <code>""aaaabbbb""</code></p>

<p>How can I get the last four characters and store them in a string using Python?</p>
","<p>Like this:</p>

<pre><code>&gt;&gt;&gt;mystr = ""abcdefghijkl""
&gt;&gt;&gt;mystr[-4:]
'ijkl'
</code></pre>

<p>This slices the string's last 4 characters. The ""-"" before the 4 signals it starts from the end. Since it's before the "":"", it'll be the start of the string. If it were after the "":"", the string would end in 4 chars before actual end.</p>

<p>See the Python docs for more information in slicing.</p>
","7983848"
"Error when creating a new text file with python?","250544","","<p>This function doesn't work and raises an error. Do I need to change any arguments or parameters?  </p>

<pre><code>import sys

def write():
    print('Creating new text file') 

    name = input('Enter name of text file: ')+'.txt'  # Name of text file coerced with +.txt

    try:
        file = open(name,'r+')   # Trying to create a new file or open one
        file.close()

    except:
        print('Something went wrong! Can\'t tell what?')
        sys.exit(0) # quit Python

write()
</code></pre>
","<p>If the file does not exists, <code>open(name,'r+')</code> will fail.</p>

<p>You can use <code>open(name, 'w')</code>, which creates the file if the file does not exist, but it will truncate the existing file.</p>

<p>Alternatively, you can use <code>open(name, 'a')</code>; this will create the file if the file does not exist, but will not truncate the existing file.</p>
","18533704"
"How to drop a list of rows from Pandas dataframe?","250057","","<p>I have a dataframe df :</p>

<pre><code>&gt;&gt;&gt; df
                  sales  discount  net_sales    cogs
STK_ID RPT_Date                                     
600141 20060331   2.709       NaN      2.709   2.245
       20060630   6.590       NaN      6.590   5.291
       20060930  10.103       NaN     10.103   7.981
       20061231  15.915       NaN     15.915  12.686
       20070331   3.196       NaN      3.196   2.710
       20070630   7.907       NaN      7.907   6.459
</code></pre>

<p>Then I want to drop rows with certain sequence numbers which indicated in a list, suppose here is <code>[1,2,4],</code> then left:</p>

<pre><code>                  sales  discount  net_sales    cogs
STK_ID RPT_Date                                     
600141 20060331   2.709       NaN      2.709   2.245
       20061231  15.915       NaN     15.915  12.686
       20070630   7.907       NaN      7.907   6.459
</code></pre>

<p>How or what function can do that ?</p>
","<p>Use <a href=""http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.drop.html"">DataFrame.drop</a> and pass it a Series of index labels:</p>

<pre><code>In [65]: df
Out[65]: 
       one  two
one      1    4
two      2    3
three    3    2
four     4    1


In [66]: df.drop(df.index[[1,3]])
Out[66]: 
       one  two
one      1    4
three    3    2
</code></pre>
","14661768"
"How to know/change current directory in Python shell?","249840","","<p>I am using Python 3.2 on Windows 7.  When I open the Python shell, how can I know what the current directory is and how can I change it to another directory where my modules are?</p>
","<p>You can use the <code>os</code> module.</p>

<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; os.getcwd()
'/home/user'
&gt;&gt;&gt; os.chdir(""/tmp/"")
&gt;&gt;&gt; os.getcwd()
'/tmp'
</code></pre>

<p>But if it's about finding other modules: You can set an environment variable called <code>PYTHONPATH</code>, under Linux would be like</p>

<pre><code>export PYTHONPATH=/path/to/my/library:$PYTHONPATH
</code></pre>

<p>Then, the interpreter searches also at this place for <code>import</code>ed modules. I guess the name would be the same under Windows, but don't know how to change.</p>

<p><strong>edit</strong></p>

<p>Under Windows:</p>

<pre><code>set PYTHONPATH=%PYTHONPATH%;C:\My_python_lib
</code></pre>

<p>(taken from <a href=""http://docs.python.org/using/windows.html"" rel=""noreferrer"">http://docs.python.org/using/windows.html</a>)</p>

<p><strong>edit 2</strong></p>

<p>... and even better: use <code>virtualenv</code> and <code>virtualenv_wrapper</code>, this will allow you to create a development environment where you can add module paths as you like (<code>add2virtualenv</code>) without polluting your installation or ""normal"" working environment.</p>

<p><a href=""http://virtualenvwrapper.readthedocs.org/en/latest/command_ref.html"" rel=""noreferrer"">http://virtualenvwrapper.readthedocs.org/en/latest/command_ref.html</a></p>
","8248430"
"How do I check whether an int is between the two numbers?","248650","","<p>I'm using 2.3 IDLE and I'm having problems.</p>

<p>I need to check whether a number is between two other numbers, 10000 and 30000:</p>

<pre><code>if number &gt;= 10000 and number &gt;= 30000:
    print (""you have to pay 5% taxes"")
</code></pre>

<p>It's not working too well.</p>
","<pre><code>if 10000 &lt;= number &lt;= 30000:
    pass
</code></pre>
","13628825"
"Matplotlib make tick labels font size smaller","248648","","<p>In a matplotlib figure, how can I make the font size for the tick labels using <code>ax1.set_xticklabels()</code> smaller?</p>

<p>Further, how can one rotate it from horizontal to vertical?</p>
","<p>Please note that newer versions of MPL have a shortcut for this task. An example is shown in the other answer to this question: <a href=""https://stackoverflow.com/a/11386056/42346"">https://stackoverflow.com/a/11386056/42346</a></p>

<p>The code below is for illustrative purposes and may not necessarily be optimized.</p>

<pre><code>import matplotlib.pyplot as plt
import numpy as np

def xticklabels_example():
    fig = plt.figure() 

    x = np.arange(20)
    y1 = np.cos(x)
    y2 = (x**2)
    y3 = (x**3)
    yn = (y1,y2,y3)
    COLORS = ('b','g','k')

    for i,y in enumerate(yn):
        ax = fig.add_subplot(len(yn),1,i+1)

        ax.plot(x, y, ls='solid', color=COLORS[i]) 

        if i != len(yn) - 1:
            # all but last 
            ax.set_xticklabels( () )
        else:
            for tick in ax.xaxis.get_major_ticks():
                tick.label.set_fontsize(14) 
                # specify integer or one of preset strings, e.g.
                #tick.label.set_fontsize('x-small') 
                tick.label.set_rotation('vertical')

    fig.suptitle('Matplotlib xticklabels Example')
    plt.show()

if __name__ == '__main__':
    xticklabels_example()
</code></pre>

<p><img src=""https://i.stack.imgur.com/lRp5U.png"" alt=""enter image description here""></p>
","6390584"
"Making a request to a RESTful API using python","248446","","<p>I have a RESTful API that I have exposed using an implementation of Elasticsearch on an EC2 instance to index a corpus of content. I can query the search by running the following from my terminal (MacOSX):</p>

<pre><code>curl -XGET 'http://ES_search_demo.com/document/record/_search?pretty=true' -d '{
  ""query"": {
    ""bool"": {
      ""must"": [
        {
          ""text"": {
            ""record.document"": ""SOME_JOURNAL""
          }
        },
        {
          ""text"": {
            ""record.articleTitle"": ""farmers""
          }
        }
      ],
      ""must_not"": [],
      ""should"": []
    }
  },
  ""from"": 0,
  ""size"": 50,
  ""sort"": [],
  ""facets"": {}
}'
</code></pre>

<p>How do I turn above into a API request using <code>python/requests</code> or <code>python/urllib2</code> (not sure which one to go for - have been using urllib2, but hear that requests is better...)? Do I pass as a header or otherwise?</p>
","<p>Using <a href=""http://docs.python-requests.org/en/latest/"" rel=""noreferrer"">requests</a>:</p>



<pre><code>import requests
url = 'http://ES_search_demo.com/document/record/_search?pretty=true'
data = '''{
  ""query"": {
    ""bool"": {
      ""must"": [
        {
          ""text"": {
            ""record.document"": ""SOME_JOURNAL""
          }
        },
        {
          ""text"": {
            ""record.articleTitle"": ""farmers""
          }
        }
      ],
      ""must_not"": [],
      ""should"": []
    }
  },
  ""from"": 0,
  ""size"": 50,
  ""sort"": [],
  ""facets"": {}
}'''
response = requests.post(url, data=data)
</code></pre>

<p>Depending on what kind of response your API returns, you will then probably want to look at <code>response.text</code> or <code>response.json()</code> (or possibly inspect <code>response.status_code</code> first). See the quickstart docs <a href=""http://docs.python-requests.org/en/latest/user/quickstart/"" rel=""noreferrer"">here</a>, especially <a href=""http://docs.python-requests.org/en/latest/user/quickstart/#more-complicated-post-requests"" rel=""noreferrer"">this section</a>.</p>
","17306347"
"Python string.join(list) on object array rather than string array","248428","","<p>In Python, I can do:</p>

<pre><code>&gt;&gt;&gt; list = ['a', 'b', 'c']
&gt;&gt;&gt; ', '.join(list)
'a, b, c'
</code></pre>

<p>Is there any easy way to do the same when I have a list of objects?</p>

<pre><code>&gt;&gt;&gt; class Obj:
...     def __str__(self):
...         return 'name'
...
&gt;&gt;&gt; list = [Obj(), Obj(), Obj()]
&gt;&gt;&gt; ', '.join(list)
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
TypeError: sequence item 0: expected string, instance found
</code></pre>

<p>Or do I have to resort to a for loop?</p>
","<p>You could use a list comprehension or a generator expression instead:</p>

<pre><code>', '.join([str(x) for x in list])  # list comprehension
', '.join(str(x) for x in list)    # generator expression
</code></pre>
","497773"
"Python Create unix timestamp five minutes in the future","248186","","<p>I have to create an ""Expires"" value 5 minutes in the future, but I have to supply it in UNIX Timestamp format.  I have this so far, but it seems like a hack.</p>

<pre><code>def expires():
    '''return a UNIX style timestamp representing 5 minutes from now'''
    epoch = datetime.datetime(1970, 1, 1)
    seconds_in_a_day = 60 * 60 * 24
    five_minutes = datetime.timedelta(seconds=5*60)
    five_minutes_from_now = datetime.datetime.now() + five_minutes
    since_epoch = five_minutes_from_now - epoch
    return since_epoch.days * seconds_in_a_day + since_epoch.seconds
</code></pre>

<p>Is there a module or function that does the timestamp conversion for me?</p>
","<p>Just found this, and its even shorter.</p>

<pre><code>import time
def expires():
    '''return a UNIX style timestamp representing 5 minutes from now'''
    return int(time.time()+300)
</code></pre>
","2776392"
"Append dictionary to a dictionary?","247813","","<p>I have two existing dictionaries, and I wish to 'append' one of them to the other. By that I mean that the key,values of the other dictionary should be made into the first dictionary. For example:</p>

<pre><code>orig = {
   'A': 1,
   'B': 2,
   'C': 3,
}

extra = {
   'D': 4,
   'E': 5,
}

dest = # something here involving orig and extra

print dest
{
   'A': 1,
   'B': 2,
   'C': 3,
   'D': 4,
   'E': 5
}
</code></pre>

<p>I think this all can be achieved through a <code>for</code> loop (maybe?), but is there some method of dictionaries or any other module that saves this job for me? The actual dictionaries I'm using are really big...</p>
","<p>You can do</p>

<pre><code>orig.update(extra)
</code></pre>

<p>or, if you don't want <code>orig</code> to be modified, make a copy first:</p>

<pre><code>dest = dict(orig)  # or orig.copy()
dest.update(extra)
</code></pre>

<p>Note that if extra and orig have overlapping keys, the final value will be taken from extra. For example,</p>

<pre><code>&gt;&gt;&gt; d1 = {1: 1, 2: 2}
&gt;&gt;&gt; d2 = {2: 'ha!', 3: 3}
&gt;&gt;&gt; d1.update(d2)
&gt;&gt;&gt; d1
{1: 1, 2: 'ha!', 3: 3}
</code></pre>
","8930969"
"Build a Basic Python Iterator","247572","","<p>How would one create an iterative function (or iterator object) in python?</p>
","<p>Iterator objects in python conform to the iterator protocol, which basically means they provide two methods: <code>__iter__()</code>  and  <code>next()</code>.  The <code>__iter__</code> returns the iterator object and is implicitly called at the start of loops.  The <code>next()</code> method returns the next value and is implicitly called at each loop increment.  <code>next()</code> raises a StopIteration exception when there are no more value to return, which is implicitly captured by looping constructs to stop iterating.</p>

<p>Here's a simple example of a counter:</p>

<pre><code>class Counter:
    def __init__(self, low, high):
        self.current = low
        self.high = high

    def __iter__(self):
        return self

    def next(self): # Python 3: def __next__(self)
        if self.current &gt; self.high:
            raise StopIteration
        else:
            self.current += 1
            return self.current - 1


for c in Counter(3, 8):
    print c
</code></pre>

<p>This will print:</p>

<pre><code>3
4
5
6
7
8
</code></pre>

<p>This is easier to write using a generator, as covered in a previous answer:</p>

<pre><code>def counter(low, high):
    current = low
    while current &lt;= high:
        yield current
        current += 1

for c in counter(3, 8):
    print c
</code></pre>

<p>The printed output will be the same.  Under the hood, the generator object supports the iterator protocol and does something roughly similar to the class Counter.</p>

<p>David Mertz's article, <a href=""https://www.ibm.com/developerworks/library/l-pycon/"" rel=""noreferrer"">Iterators and Simple Generators</a>, is a pretty good introduction. </p>
","24377"
"Proper way to use **kwargs in Python","247419","","<p>What is the proper way to use <code>**kwargs</code> in Python when it comes to default values?</p>

<p><code>kwargs</code> returns a dictionary, but what is the best way to set default values, or is there one?  Should I just access it as a dictionary?  Use get function?  </p>

<pre><code>class ExampleClass:
    def __init__(self, **kwargs):
        self.val = kwargs['val']
        self.val2 = kwargs.get('val2')
</code></pre>

<p>A simple question, but one that I can't find good resources on.  People do it different ways in code that I've seen and it's hard to know what to use.</p>
","<p>You can pass a default value to <code>get()</code> for keys that are not in the dictionary:</p>

<pre><code>self.val2 = kwargs.get('val2',""default value"")
</code></pre>

<p>However, if you plan on using a particular argument with a particular default value, why not use named arguments in the first place?</p>

<pre><code>def __init__(self, val2=""default value"", **kwargs):
</code></pre>
","1098556"
"mkdir -p functionality in Python","247204","","<p>Is there a way to get functionality similar to <code>mkdir -p</code> on the shell from within Python.  I am looking for a solution other than a system call.  I am sure the code is less than 20 lines, and I am wondering if someone has already written it?</p>
","<p><code>mkdir -p</code> functionality as follows:</p>

<pre><code>import errno    
import os


def mkdir_p(path):
    try:
        os.makedirs(path)
    except OSError as exc:  # Python &gt;2.5
        if exc.errno == errno.EEXIST and os.path.isdir(path):
            pass
        else:
            raise
</code></pre>

<h3>Update</h3>

<p>For Python ≥ 3.2, <code>os.makedirs</code> has an <a href=""http://docs.python.org/3/library/os.html?highlight=makedirs#os.makedirs"" rel=""noreferrer"">optional third argument</a> <code>exist_ok</code> that, when true, enables the <code>mkdir -p</code> functionality —<em>unless</em> <code>mode</code> is provided and the existing directory has different permissions than the intended ones; in that case, <code>OSError</code> is raised as previously.</p>

<h3>Update 2</h3>

<p>For Python ≥ 3.5, there is also <a href=""https://docs.python.org/3.6/library/pathlib.html#pathlib.Path.mkdir"" rel=""noreferrer""><code>pathlib.Path.mkdir</code></a>:</p>

<pre><code>import pathlib

pathlib.Path(""/tmp/path/to/desired/directory"").mkdir(parents=True, exist_ok=True)
</code></pre>

<p>The <code>exist_ok</code> parameter was added in Python 3.5.</p>
","600612"
"How to install python3 version of package via pip on Ubuntu?","246806","","<p>I have both <code>python2.7</code> and <code>python3.2</code> installed in <code>Ubuntu 12.04</code>.<br>
The symbolic link <code>python</code> links to <code>python2.7</code>.</p>

<p>When I type:</p>

<pre><code>sudo pip install package-name
</code></pre>

<p>It will default install <code>python2</code> version of <code>package-name</code>.</p>

<p>Some package supports both <code>python2</code> and <code>python3</code>.<br>
How to install <code>python3</code> version of <code>package-name</code> via <code>pip</code>?</p>
","<p>You may want to build a <code>virtualenv</code> of python3, then install packages of python3 after activating the virtualenv. So your system won't be messed up :)</p>

<p>This could be something like:</p>

<pre><code>virtualenv -p /usr/bin/python3 py3env
source py3env/bin/activate
pip install package-name
</code></pre>
","10763461"
"ImportError: DLL load failed: %1 is not a valid Win32 application. But the DLL's are there","246672","","<p>I have a situation very much like the one at <a href=""https://stackoverflow.com/questions/14629818/importerror-dll-load-failed-1-is-not-a-valid-win32-application"">ImportError: DLL load failed: %1 is not a valid Win32 application</a>, but the answer there isn't working for me.</p>

<p>My Python code says:</p>

<pre><code>import cv2
</code></pre>

<p>But that line throws the error shown in the title of this question.</p>

<p>I have OpenCV installed in <code>C:\lib\opencv</code> on this 64-bit machine. I'm using 64-bit Python.</p>

<p>My PYTHONPATH variable: <code>PYTHONPATH=C:\lib\opencv\build\python\2.7</code>. This folder contains <code>cv2.pyd</code> and that's all.</p>

<p>My PATH variable: <code>Path=%OPENCV_DIR%\bin;...</code> This folder contains 39 DLL files such as <code>opencv_core246d.dll</code>.</p>

<p>OPENCV_DIR has this value: <code>OPENCV_DIR=C:\lib\opencv\build\x64\vc11</code>.</p>

<p>The solution at <a href=""https://stackoverflow.com/questions/14629818/importerror-dll-load-failed-1-is-not-a-valid-win32-application"">ImportError: DLL load failed: %1 is not a valid Win32 application</a> says to add ""the new opencv binaries path (<code>C:\opencv\build\bin\Release</code>) to the Windows PATH environment variable"". But as shown above, I already have the OpenCV binaries folder (<code>C:\lib\opencv\build\x64\vc11\bin</code>) in my PATH. And my OpenCV installation doesn't have any Release folders (except for an empty one under build/java).</p>

<p>Any ideas as to what's going wrong? Can I tell Python to verbosely trace the loading process? Exactly what DLL's is it looking for?</p>

<p>Thanks,
Lars</p>

<h1>EDIT:</h1>

<p>I just noticed that, according to <a href=""http://www.dependencywalker.com/"" rel=""noreferrer"">http://www.dependencywalker.com/</a>, the <code>cv2.pyd</code> in <code>C:\lib\opencv\build\python\2.7</code> is 32-bit, whereas the machine and the Python I'm running are 64-bit. Could that be the problem? And if so, where can I find a 64-bit version of cv2.pyd?</p>
","<p><a href=""http://www.lfd.uci.edu/~gohlke/pythonlibs/"">Unofficial Windows Binaries for Python Extension Packages</a></p>

<p>you can find any python libs from here</p>
","19042026"
"Find all occurrences of a substring in Python","245766","","<p>Python has <code>string.find()</code> and <code>string.rfind()</code> to get the index of a substring in string.</p>

<p>I wonder, maybe there is something like <code>string.find_all()</code> which can return all founded indexes (not only first from beginning or first from end)?</p>

<p>For example:</p>

<pre><code>string = ""test test test test""

print string.find('test') # 0
print string.rfind('test') # 15

#that's the goal
print string.find_all('test') # [0,5,10,15]
</code></pre>
","<p>There is no simple built-in string function that does what you're looking for, but you could use the more powerful <a href=""http://www.regular-expressions.info/"" rel=""noreferrer"">regular expressions</a>:</p>

<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; [m.start() for m in re.finditer('test', 'test test test test')]
[0, 5, 10, 15]
</code></pre>

<p>If you want to find overlapping matches, <a href=""http://www.regular-expressions.info/lookaround.html"" rel=""noreferrer"">lookahead</a> will do that:</p>

<pre><code>&gt;&gt;&gt; [m.start() for m in re.finditer('(?=tt)', 'ttt')]
[0, 1]
</code></pre>

<p>If you want a reverse find-all without overlaps, you can combine positive and negative lookahead into an expression like this:</p>

<pre><code>&gt;&gt;&gt; search = 'tt'
&gt;&gt;&gt; [m.start() for m in re.finditer('(?=%s)(?!.{1,%d}%s)' % (search, len(search)-1, search), 'ttt')]
[1]
</code></pre>

<p><a href=""http://docs.python.org/library/re.html#re.finditer"" rel=""noreferrer""><code>re.finditer</code></a> returns a <a href=""http://wiki.python.org/moin/Generators"" rel=""noreferrer"">generator</a>, so you could change the <code>[]</code> in the above to <code>()</code> to get a generator instead of a list which will be more efficient if you're only iterating through the results once.</p>
","4664889"
"Getting ""Error loading MySQLdb module: No module named MySQLdb"" - have tried previously posted solutions","245608","","<p>This is a much discussed issue for OSX 10.6 users, but I haven't been able to find a solution that works. Here's my setup:</p>

<p>Python 2.6.1 64bit
Django 1.2.1
MySQL 5.1.47 osx10.6 64bit</p>

<p>I create a virtualenvwrapper with --no-site-packages, then installed Django. When I activate the virtualenv and run python manage.py syncdb, I get this error:</p>

<pre><code>Traceback (most recent call last):
File ""manage.py"", line 11, in &lt;module&gt;
  execute_manager(settings)
File ""/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/core/management/__init__.py"", line 438, in execute_manager
  utility.execute()
File ""/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/core/management/__init__.py"", line 379, in execute
  self.fetch_command(subcommand).run_from_argv(self.argv)
File ""/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/core/management/__init__.py"", line 257, in fetch_command
  klass = load_command_class(app_name, subcommand)
File ""/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/core/management/__init__.py"", line 67, in load_command_class
  module = import_module('%s.management.commands.%s' % (app_name, name))
File ""/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/utils/importlib.py"", line 35, in import_module
  __import__(name)
File ""/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/core/management/commands/syncdb.py"", line 7, in &lt;module&gt;
from django.core.management.sql import custom_sql_for_model, emit_post_sync_signal
File ""/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/core/management/sql.py"", line 5, in &lt;module&gt;
from django.contrib.contenttypes import generic
File ""/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/contrib/contenttypes/generic.py"", line 6, in &lt;module&gt;
  from django.db import connection
File ""/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/db/__init__.py"", line 75, in &lt;module&gt;
  connection = connections[DEFAULT_DB_ALIAS]
File ""/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/db/utils.py"", line 91, in __getitem__
  backend = load_backend(db['ENGINE'])
File ""/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/db/utils.py"", line 32, in load_backend
  return import_module('.base', backend_name)
File ""/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/utils/importlib.py"", line 35, in import_module
  __import__(name)
File ""/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/db/backends/mysql/base.py"", line 14, in &lt;module&gt;
  raise ImproperlyConfigured(""Error loading MySQLdb module: %s"" % e)
django.core.exceptions.ImproperlyConfigured: Error loading MySQLdb module: No module named MySQLdb
</code></pre>

<p>I've also installed the <a href=""http://sourceforge.net/projects/mysql-python/files/"" rel=""noreferrer"">MySQL for Python</a> adapter, but to no avail (maybe I installed it improperly?). </p>

<p>Anyone dealt with this before?</p>
","<p>This issue was the result of an incomplete / incorrect installation of the MySQL for Python adapter. Specifically, I had to edit the path to the mysql_config file to point to /usr/local/mysql/bin/mysql_config - discussed in greater detail in this article: <a href=""http://dakrauth.com/blog/entry/python-and-django-setup-mac-os-x-leopard/"" rel=""noreferrer"">http://dakrauth.com/blog/entry/python-and-django-setup-mac-os-x-leopard/</a></p>
","3782998"
"What is the meaning of a single- and a double-underscore before an object name?","245002","","<p>I want to clear this up once and for all. Can someone please explain the exact meaning of having leading underscores before an object's name in Python? Also explain the difference between a single and a double leading underscore. Also, does that meaning stay the same whether the object in question is a variable, a function, a method, etc?</p>
","<h2>Single Underscore</h2>

<p>Names, in a class, with a leading underscore are simply to indicate to other programmers that the attribute or method is intended to be private.  However, nothing special is done with the name itself.</p>

<p>To quote <a href=""http://www.python.org/dev/peps/pep-0008/"" rel=""noreferrer"">PEP-8</a>:</p>

<blockquote>
  <p>_single_leading_underscore: weak ""internal use"" indicator. E.g. <code>from M import *</code> does not import objects whose name starts with an underscore.</p>
</blockquote>

<h2>Double Underscore (Name Mangling)</h2>

<p>From <a href=""http://docs.python.org/tutorial/classes.html#private-variables-and-class-local-references"" rel=""noreferrer"">the Python docs</a>:</p>

<blockquote>
  <p>Any identifier of the form <code>__spam</code> (at least two leading underscores, at most one trailing underscore) is textually replaced with <code>_classname__spam</code>, where <code>classname</code> is the current class name with leading underscore(s) stripped. This mangling is done without regard to the syntactic position of the identifier, so it can be used to define class-private instance and class variables, methods, variables stored in globals, and even variables stored in instances. private to this class on instances of other classes. </p>
</blockquote>

<p>And a warning from the same page:</p>

<blockquote>
  <p>Name mangling is intended to give classes an easy way to define “private” instance variables and methods, without having to worry about instance variables defined by derived classes, or mucking with instance variables by code outside the class. Note that the mangling rules are designed mostly to avoid accidents; it still is possible for a determined soul to access or modify a variable that is considered private.</p>
</blockquote>

<h2>Example</h2>

<pre><code>&gt;&gt;&gt; class MyClass():
...     def __init__(self):
...             self.__superprivate = ""Hello""
...             self._semiprivate = "", world!""
...
&gt;&gt;&gt; mc = MyClass()
&gt;&gt;&gt; print mc.__superprivate
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
AttributeError: myClass instance has no attribute '__superprivate'
&gt;&gt;&gt; print mc._semiprivate
, world!
&gt;&gt;&gt; print mc.__dict__
{'_MyClass__superprivate': 'Hello', '_semiprivate': ', world!'}
</code></pre>
","1301369"
"How to do relative imports in Python?","244883","","<p>Imagine this directory structure:</p>

<pre><code>app/
   __init__.py
   sub1/
      __init__.py
      mod1.py
   sub2/
      __init__.py
      mod2.py
</code></pre>

<p>I'm coding <code>mod1</code>, and I need to import something from <code>mod2</code>. How should I do it?  </p>

<p>I tried <code>from ..sub2 import mod2</code> but I'm getting an ""Attempted relative import in non-package"".</p>

<p>I googled around but found only ""<code>sys.path</code> manipulation"" hacks. Isn't there a clean way?  </p>

<hr>

<p>Edit: all my <code>__init__.py</code>'s are currently empty  </p>

<p>Edit2: I'm trying to do this because sub2 contains classes that are shared across sub packages (<code>sub1</code>, <code>subX</code>, etc.).</p>

<p>Edit3: The behaviour I'm looking for is the same as described in <a href=""http://www.python.org/dev/peps/pep-0366/"" rel=""noreferrer"">PEP 366</a> (thanks John B)</p>
","<p>Everyone seems to want to tell you what you should be doing rather than just answering the question.</p>

<p>The problem is that you're running the module as '__main__' by passing the mod1.py as an argument to the interpreter.</p>

<p>From <a href=""http://www.python.org/dev/peps/pep-0328/"" rel=""noreferrer"">PEP 328</a>:</p>

<blockquote>
  <p>Relative imports use a module's __name__ attribute to determine that module's position in the package hierarchy. If the module's name does not contain any package information (e.g. it is set to '__main__') then relative imports are resolved as if the module were a top level module, regardless of where the module is actually located on the file system.</p>
</blockquote>

<p>In Python 2.6, they're adding the ability to reference modules relative to the main module.  <a href=""http://python.org/dev/peps/pep-0366/"" rel=""noreferrer"">PEP 366</a> describes the change.</p>

<p><strong>Update</strong>: According to Nick Coghlan, the recommended alternative is to run the module inside the package using the -m switch.</p>
","73149"
"How to check if a value exists in a dictionary (python)","244856","","<p>I have the following dictionary in python: </p>

<pre><code>d = {'1': 'one', '3': 'three', '2': 'two', '5': 'five', '4': 'four'}
</code></pre>

<p>I need a way to find if a value such as ""one"" or ""two"" exists in this dictionary.</p>

<p>For example, if I wanted to know if the index ""1"" existed I would simply have to type: </p>

<pre><code>""1"" in d
</code></pre>

<p>And then python would tell me if that is true or false, however I need to do that same exact thing except to find if a value exists.</p>
","<pre><code>&gt;&gt;&gt; d = {'1': 'one', '3': 'three', '2': 'two', '5': 'five', '4': 'four'}
&gt;&gt;&gt; 'one' in d.values()
True
</code></pre>

<p>Out of curiosity, some comparative timing:</p>

<pre><code>&gt;&gt;&gt; T(lambda : 'one' in d.itervalues()).repeat()
[0.28107285499572754, 0.29107213020324707, 0.27941107749938965]
&gt;&gt;&gt; T(lambda : 'one' in d.values()).repeat()
[0.38303399085998535, 0.37257885932922363, 0.37096405029296875]
&gt;&gt;&gt; T(lambda : 'one' in d.viewvalues()).repeat()
[0.32004380226135254, 0.31716084480285645, 0.3171098232269287]
</code></pre>

<p><strong>EDIT:</strong> And in case you wonder why... the reason is that each of the above returns a different type of object, which may or may not be well suited for lookup operations:</p>

<pre><code>&gt;&gt;&gt; type(d.viewvalues())
&lt;type 'dict_values'&gt;
&gt;&gt;&gt; type(d.values())
&lt;type 'list'&gt;
&gt;&gt;&gt; type(d.itervalues())
&lt;type 'dictionary-valueiterator'&gt;
</code></pre>

<p><strong>EDIT2:</strong> As per request in comments...</p>

<pre><code>&gt;&gt;&gt; T(lambda : 'four' in d.itervalues()).repeat()
[0.41178202629089355, 0.3959040641784668, 0.3970959186553955]
&gt;&gt;&gt; T(lambda : 'four' in d.values()).repeat()
[0.4631338119506836, 0.43541407585144043, 0.4359898567199707]
&gt;&gt;&gt; T(lambda : 'four' in d.viewvalues()).repeat()
[0.43414998054504395, 0.4213531017303467, 0.41684913635253906]
</code></pre>
","8214998"
"Exit codes in Python","244844","","<p>I got a message saying <code>script xyz.py returned exit code 0</code>. What does this mean?</p>

<p>What do the exit codes in Python mean? How many are there? Which ones are important?</p>
","<p>What you're looking for in the script is calls to <a href=""https://docs.python.org/2/library/sys.html#sys.exit"" rel=""noreferrer""><code>sys.exit()</code></a>.  The argument to that method is returned to the environment as the exit code.</p>

<p>It's fairly likely that the script is never calling the exit method, and that 0 is the default exit code.</p>
","285326"
"Python Dictionary Comprehension","244323","","<p>Is it possible to create a dictionary comprehension in Python (for the keys)?</p>

<p>Without list comprehensions, you can use something like this:</p>

<pre><code>l = []
for n in range(1, 11):
    l.append(n)
</code></pre>

<p>We can shorten this to a list comprehension: <code>l = [n for n in range(1, 11)]</code>.</p>

<p>However, say I want to set a dictionary's keys to the same value.
I can do:</p>

<pre><code>d = {}
for n in range(1, 11):
     d[n] = True # same value for each
</code></pre>

<p>I've tried this:</p>

<pre><code>d = {}
d[i for i in range(1, 11)] = True
</code></pre>

<p>However, I get a <code>SyntaxError</code> on the <code>for</code>.</p>

<p>In addition (I don't need this part, but just wondering), can you set a dictionary's keys to a bunch of different values, like this:</p>

<pre><code>d = {}
for n in range(1, 11):
    d[n] = n
</code></pre>

<p>Is this possible with a dictionary comprehension?</p>

<pre><code>d = {}
d[i for i in range(1, 11)] = [x for x in range(1, 11)]
</code></pre>

<p>This also raises a <code>SyntaxError</code> on the <code>for</code>.</p>
","<p>There are <a href=""https://www.python.org/dev/peps/pep-0274/"" rel=""noreferrer"">dictionary comprehensions in Python 2.7+</a>, but they don't work quite the way you're trying.  Like a list comprehension, they create a <em>new</em> dictionary; you can't use them to add keys to an existing dictionary.  Also, you have to specify the keys and values, although of course you can specify a dummy value if you like.</p>

<pre><code>&gt;&gt;&gt; d = {n: n**2 for n in range(5)}
&gt;&gt;&gt; print d
{0: 0, 1: 1, 2: 4, 3: 9, 4: 16}
</code></pre>

<p>If you want to set them all to True:</p>

<pre><code>&gt;&gt;&gt; d = {n: True for n in range(5)}
&gt;&gt;&gt; print d
{0: True, 1: True, 2: True, 3: True, 4: True}
</code></pre>

<p>What you seem to be asking for is a way to set multiple keys at once on an existing dictionary.  There's no direct shortcut for that.  You can either loop like you already showed, or you could use a dictionary comprehension to create a new dict with the new values, and then do <code>oldDict.update(newDict)</code> to merge the new values into the old dict.</p>
","14507637"
"Python ValueError: too many values to unpack","244067","","<p>I am getting that exception from this code:</p>

<pre><code>class Transaction:
    def __init__ (self):
        self.materials = {}

    def add_material (self, m):
        self.materials[m.type + m.purity] = m

    def serialize (self):
        ser_str = 'transaction_start\n'

        for k, m in self.materials:
            ser_str += m.serialize ()

        sert += 'transaction_end\n'
        return ser_str
</code></pre>

<p>The <code>for</code> line is the one throwing the exception. The <code>m</code>s are <code>Material</code> objects. Anybody have any ideas why?</p>
","<p><code>self.materials</code> is a <a href=""http://www.python.org/doc//current/library/stdtypes.html#mapping-types-dict"" rel=""noreferrer""><code>dict</code></a> and by default you are iterating over just the keys (which are strings).</p>

<p>Since <code>self.materials</code> has more than two keys<a href=""https://stackoverflow.com/questions/7053551/python-valueerror-too-many-values-to-unpack/7053615#comment34696354_7053615"">*</a>, they can't be unpacked into the <a href=""http://www.python.org/doc//current/library/functions.html#tuple"" rel=""noreferrer""><code>tuple</code></a> ""<code>k, m</code>"", hence the <a href=""http://docs.python.org/2/library/exceptions.html#exceptions.ValueError"" rel=""noreferrer""><code>ValueError</code></a> <a href=""http://docs.python.org/2/library/exceptions.html"" rel=""noreferrer"">exception</a> is raised.</p>

<p>In Python 2.<em>x</em>, to iterate over the keys and the values (the <a href=""http://www.python.org/doc//current/library/functions.html#tuple"" rel=""noreferrer""><code>tuple</code></a> ""<code>k, m</code>""), we use <a href=""http://www.python.org/doc//current/library/stdtypes.html#dict.iteritems"" rel=""noreferrer""><code>self.materials.iteritems()</code></a>.</p>

<p>However, since you're throwing the key away anyway, you may as well simply iterate over the dictionary's values:</p>

<pre><code>for m in self.materials.itervalues():
</code></pre>

<p>In Python 3.<em>x</em>, prefer <a href=""http://docs.python.org/3/library/stdtypes.html#dict.values"" rel=""noreferrer""><code>dict.values()</code></a> (which returns a <a href=""http://docs.python.org/3/library/stdtypes.html#dict-views"" rel=""noreferrer"">dictionary view object</a>):</p>

<pre><code>for m in self.materials.values():
</code></pre>
","7053615"
"Check if a given key already exists in a dictionary and increment it","243612","","<p>Given a dictionary, how can I find out if a given key in that dictionary has already been set to a non-None value?</p>

<p>I.e., I want to do this:</p>

<pre><code>my_dict = {}

if (my_dict[key] != None):
  my_dict[key] = 1
else:
  my_dict[key] += 1
</code></pre>

<p>I.e., I want to increment the value if there's already one there, or set it to 1 otherwise.</p>
","<p>You are looking for <a href=""http://docs.python.org/library/collections.html#defaultdict"" rel=""noreferrer""><code>collections.defaultdict</code></a> (available for Python 2.5+). This</p>

<pre><code>from collections import defaultdict

my_dict = defaultdict(int)
my_dict[key] += 1
</code></pre>

<p>will do what you want.</p>

<p>For regular Python <code>dict</code>s, if there is no value for a given key, you will <em>not</em> get <code>None</code> when accessing the dict -- a <code>KeyError</code> will be raised. So if you want to use a regular <code>dict</code>, instead of your code you would use</p>

<pre><code>if key in my_dict:
    my_dict[key] += 1
else:
    my_dict[key] = 1
</code></pre>
","473108"
"Assign output of os.system to a variable and prevent it from being displayed on the screen","243467","","<p>I want to assign the output of a command I run using <code>os.system</code> to a variable and prevent it from being output to the screen. But, in the below code ,the output is sent to the screen and the value printed for <code>var</code> is 0, which I guess signifies whether the command ran successfully or not. Is there any way to assign the command output to the variable and also stop it from being displayed on the screen?</p>

<pre><code>var = os.system(""cat /etc/services"")
print var #Prints 0
</code></pre>
","<p>From ""<a href=""https://stackoverflow.com/questions/1410976/equivalent-of-backticks-in-python"">Equivalent of Bash Backticks in Python</a>"", which I asked a long time ago, what you may want to use is <code>popen</code>:</p>

<pre><code>os.popen('cat /etc/services').read()
</code></pre>

<hr>

<p>I'm told that <code>subprocess</code> is a much better way to solve this, so here's the corresponding code:</p>

<pre><code>import subprocess

proc = subprocess.Popen([""cat"", ""/etc/services""], stdout=subprocess.PIPE, shell=True)
(out, err) = proc.communicate()
print ""program output:"", out
</code></pre>
","3503909"
"What is the common header format of Python files?","243277","","<p>I came across the following header format for Python source files in a document about Python coding guidelines:</p>

<pre><code>#!/usr/bin/env python

""""""Foobar.py: Description of what foobar does.""""""

__author__      = ""Barack Obama""
__copyright__   = ""Copyright 2009, Planet Earth""
</code></pre>

<p>Is this the standard format of headers in the Python world?
What other fields/information can I put in the header?
Python gurus share your guidelines for good Python source headers :-)</p>
","<p>Its all metadata for the <code>Foobar</code> module.</p>

<p>The first one is the <code>docstring</code> of the module, that is already explained in <a href=""https://stackoverflow.com/questions/1523427/python-what-is-the-common-header-format/1523435#1523435"">Peter's answer</a>.</p>

<blockquote>
  <h2><a href=""http://web.archive.org/web/20111010053227/http://jaynes.colorado.edu/PythonGuidelines.html#module_formatting"" rel=""noreferrer"">How do I organize my modules (source files)? (Archive)</a></h2>
  
  <p><strong>The first line of each file shoud be <code>#!/usr/bin/env python</code>.</strong> This makes it possible to run the file as a script invoking the interpreter implicitly, e.g. in a CGI context.</p>
  
  <p><strong><em>Next should be the docstring with a description.</em></strong> If the description is long, the first line should be a short summary that makes sense on its own, separated from the rest by a newline.</p>
  
  <p><strong>All code, including import statements, should follow the docstring.</strong> Otherwise, the docstring will not be recognized by the interpreter, and you will not have access to it in interactive sessions (i.e. through <code>obj.__doc__</code>) or when generating documentation with automated tools.</p>
  
  <p><strong>Import built-in modules first, followed by third-party modules, followed by any changes to the path and your own modules.</strong> Especially, additions to the path and names of your modules are likely to change rapidly: keeping them in one place makes them easier to find.</p>
  
  <p><strong>Next should be authorship information.</strong> This information should follow this format:</p>

<pre><code>__author__ = ""Rob Knight, Gavin Huttley, and Peter Maxwell""
__copyright__ = ""Copyright 2007, The Cogent Project""
__credits__ = [""Rob Knight"", ""Peter Maxwell"", ""Gavin Huttley"",
                    ""Matthew Wakefield""]
__license__ = ""GPL""
__version__ = ""1.0.1""
__maintainer__ = ""Rob Knight""
__email__ = ""rob@spot.colorado.edu""
__status__ = ""Production""
</code></pre>
  
  <p>Status should typically be one of ""Prototype"", ""Development"", or ""Production"". <code>__maintainer__</code> should be the person who will fix bugs and make improvements if imported. <code>__credits__</code> differs from <code>__author__</code> in that <code>__credits__</code> includes people who reported bug fixes, made suggestions, etc. but did not actually write the code.</p>
</blockquote>

<p><a href=""http://epydoc.sourceforge.net/manual-fields.html#module-metadata-variables"" rel=""noreferrer"">Here</a> you have more information, listing <code>__author__</code>, <code>__authors__</code>, <code>__contact__</code>, <code>__copyright__</code>, <code>__license__</code>, <code>__deprecated__</code>, <code>__date__</code> and <code>__version__</code> as recognized metadata.</p>
","1523456"
"How do I abort the execution of a Python script?","243263","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/73663/terminating-a-python-script"">Terminating a Python script</a>  </p>
</blockquote>



<p>I have a simple Python script that I want to stop executing if a condition is met.</p>

<p>For example:</p>

<pre><code>done = True
if done:
    # quit/stop/exit
else:
    # do other stuff
</code></pre>

<p>Essentially, I am looking for something that behaves equivalently to the 'return' keyword in the body of a function which allows the flow of the code to exit the function and not execute the remaining code.</p>
","<p>To exit a script you can use,</p>

<pre><code>import sys
sys.exit()
</code></pre>

<p>You can also provide an exit status value, usually an integer.</p>

<pre><code>import sys
sys.exit(0)
</code></pre>

<p>Exits with zero, which is generally interpreted as success.  Non-zero codes are usually treated as errors.  The default is to exit with zero.</p>

<pre><code>import sys
sys.exit(""aa! errors!"")
</code></pre>

<p>Prints ""aa! errors!"" and exits with a status code of 1.</p>

<p>There is also an _exit() function in the os module.  The <a href=""http://www.python.org/doc/2.5.2/lib/module-sys.html"" rel=""noreferrer"">sys.exit()</a> function raises a SystemExit exception to exit the program, so try statements and cleanup code can execute.  The os._exit() version doesn't do this.  It just ends the program without doing any cleanup or flushing output buffers, so it shouldn't normally be used.  </p>

<p>The <a href=""http://www.python.org/doc/2.5.2/lib/os-process.html"" rel=""noreferrer"">Python docs</a> indicate that os._exit() is the normal way to end a child process created with a call to os.fork(), so it does have a use in certain circumstances.</p>
","179608"
"What is the best (idiomatic) way to check the type of a Python variable?","243018","","<p>I need to know if a variable in Python is a string or a dict.  Is there anything wrong with the following code?</p>

<pre><code>if type(x) == type(str()):
    do_something_with_a_string(x)
elif type(x) == type(dict()):
    do_somethting_with_a_dict(x)
else:
    raise ValueError
</code></pre>

<p><strong>Update</strong>: I accepted avisser's answer (though I will change my mind if someone explains why <code>isinstance</code> is preferred over <code>type(x) is</code>).</p>

<p>But thanks to nakedfanatic for reminding me that it's often cleaner to use a dict (as a case statement) than an if/elif/else series.</p>

<p>Let me elaborate on my use case.  If a variable is a string, I need to put it in a list.  If it's a dict, I need a list of the unique values.  Here's what I came up with:</p>

<pre><code>def value_list(x):
    cases = {str: lambda t: [t],
             dict: lambda t: list(set(t.values()))}
    try:
        return cases[type(x)](x)
    except KeyError:
        return None
</code></pre>

<p>If <code>isinstance</code> is preferred, how would you write this <code>value_list()</code> function?</p>
","<p>What happens if somebody passes a unicode string to your function? Or a class derived from dict? Or a class implementing a dict-like interface? Following code covers first two cases. If you are using Python 2.6 you might want to use <code>collections.Mapping</code> instead of <code>dict</code> as per the <a href=""http://www.python.org/dev/peps/pep-3119/"" rel=""noreferrer"">ABC PEP</a>.</p>

<pre><code>def value_list(x):
    if isinstance(x, dict):
        return list(set(x.values()))
    elif isinstance(x, basestring):
        return [x]
    else:
        return None
</code></pre>
","379447"
"Append integer to beginning of list in Python","242986","","<p>I have an integer and a list. I would like to make a new list of them beginning with the variable and ending with the list.
Writing <code>a + list</code> I get errors. The compiler handles <code>a</code> as integer, thus I cannot use append, or extend either. 
How would you do this?</p>
","<pre><code>&gt;&gt;&gt; a = 5
&gt;&gt;&gt; li = [1, 2, 3]
&gt;&gt;&gt; [a] + li  # Don't use 'list' as variable name.
[5, 1, 2, 3]
</code></pre>
","17911094"
"Shell Script: Execute a python program from within a shell script","242716","","<p>I've tried googling the answer but with no luck.</p>

<p>I need to use my works supercomputer server, but for my python script to run, it must be executed via a shell script.</p>

<p>For example I want <code>job.sh</code> to execute <code>python_script.py</code></p>

<p>How can this be accomplished?</p>
","<p>Just make sure the python executable is in your PATH environment variable then add in your script</p>

<pre><code>python path/to/the/python_script.py
</code></pre>

<p>Details:</p>

<ul>
<li>In the file job.sh, put this</li>
</ul>

<blockquote>
<pre><code>#!/bin/sh
python python_script.py
</code></pre>
</blockquote>

<ul>
<li>Execute this command to make the script runnable for you : <code>chmod u+x job.sh</code></li>
<li>Run it : <code>./job.sh</code></li>
</ul>
","4377147"
"How can I represent an infinite number in Python?","242615","","<p>How can I represent an infinite number in python? No matter which number you enter in the program, no number should be greater than this representation of infinity.</p>
","<p>In Python, you can do:</p>

<pre><code>test = float(""inf"")
</code></pre>

<p>In Python 3.5, you can do:</p>

<pre><code>import math
test = math.inf
</code></pre>

<p>And then:</p>

<pre><code>test &gt; 1
test &gt; 10000
test &gt; x
</code></pre>

<p>Will always be true. Unless of course, as pointed out, x is also infinity or ""nan"" (""not a number"").</p>

<p>Additionally (Python 2.x ONLY), in a comparison to <code>Ellipsis</code>, <code>float(inf)</code> is lesser, e.g:</p>

<pre><code>float('inf') &lt; Ellipsis
</code></pre>

<p>would return true.</p>
","7781273"
"TypeError: 'str' object is not callable (Python)","242450","","<p><strong>Code:</strong></p>

<pre><code>import urllib2 as u
import os as o
inn = 'dword.txt'
w = open(inn)
z = w.readline()
b = w.readline()
c = w.readline()
x = w.readline()
m = w.readline()
def Dict(Let, Mod):
    global str
    inn = 'dword.txt'
    den = 'definitions.txt'

    print 'reading definitions...'

    dell =open(den, 'w')

    print 'getting source code...'
    f = u.urlopen('http://dictionary.reference.com/browse/' + Let)
    a = f.read(800)

    print 'writing source code to file...'
    f = open(""dic1.txt"", ""w"")
    f.write(a)
    f.close()

    j = open('defs.txt', 'w')

    print 'finding definition is source code'
    for line in open(""dic1.txt""):
        if '&lt;meta name=""description"" content=' in line:
           j.write(line)

    j.close()

    te = open('defs.txt', 'r').read().split()
    sto = open('remove.txt', 'r').read().split()

    print 'skimming down the definition...'
    mar = []
    for t in te:
        if t.lower() in sto:
            mar.append('')
        else: 
            mar.append(t)
    print mar
    str = str(mar)
    str = ''.join([ c for c in str if c not in ("","", ""'"", '[', ']', '')])

    defin = open(den, Mod)
    defin.write(str)
    defin.write('                 ')
    defin.close()

    print 'cleaning up...'
    o.system('del dic1.txt')
    o.system('del defs.txt')
Dict(z, 'w')
Dict(b, 'a')
Dict(c, 'a')
Dict(x, 'a')
Dict(m, 'a')
print 'all of the definitions are in definitions.txt'
</code></pre>

<p>The first <code>Dict(z, 'w')</code> works and then the second time around it comes up with an error:</p>

<pre><code>Traceback (most recent call last):
  File ""C:\Users\test.py"", line 64, in &lt;module&gt;
    Dict(b, 'a')
  File ""C:\Users\test.py"", line 52, in Dict
    str = str(mar)
TypeError: 'str' object is not callable
</code></pre>

<p>Does anyone know why this is?</p>

<p>@Greg Hewgill: </p>

<p>I've already tried that and I get the error:</p>

<pre><code>Traceback (most recent call last):
 File ""C:\Users\test.py"", line 63, in &lt;module&gt;
    Dict(z, 'w')
  File ""C:\Users\test.py"", line 53, in Dict
   strr = ''.join([ c for c in str if c not in ("","", ""'"", '[', ']', '')])
TypeError: 'type' object is not iterable
</code></pre>
","<p>This is the problem:</p>

<pre><code>global str

str = str(mar)
</code></pre>

<p>You are redefining what <code>str()</code> means. <code>str</code> is the built-in Python name of the string type, and you don't want to change it. </p>

<p>Use a different name for the local variable, and remove the <code>global</code> statement.</p>
","6039623"
"How should I read a file line-by-line in Python?","241674","","<p>In pre-historic times (Python 1.4) we did:</p>

<pre><code>fp = open('filename.txt')
while 1:
    line = fp.readline()
    if not line:
        break
    print line
</code></pre>

<p>after Python 2.1, we did:</p>

<pre><code>for line in open('filename.txt').xreadlines():
    print line
</code></pre>

<p>before we got the convenient iterator protocol in Python 2.3, and could do:</p>

<pre><code>for line in open('filename.txt'):
    print line
</code></pre>

<p>I've seen some examples using the more verbose:</p>

<pre><code>with open('filename.txt') as fp:
    for line in fp:
        print line
</code></pre>

<p>is this the preferred method going forwards?</p>

<p>[edit] I get that the with statement ensures closing of the file... but why isn't that included in the iterator protocol for file objects?</p>
","<p>There is exactly one reason why the following is prefered:</p>

<pre><code>with open('filename.txt') as fp:
    for line in fp:
        print line
</code></pre>

<p>We are all spoiled by CPython's relatively deterministic reference-counting scheme for garbage collection.  Other, hypothetical implementations of Python will not necessarily close the file ""quickly enough"" without the <code>with</code> block if they use some other scheme to reclaim memory.</p>

<p>In such an implementation, you might get a ""too many files open"" error from the OS if your code opens files faster than the garbage collector calls finalizers on orphaned file handles.  The usual workaround is to trigger the GC immediately, but this is a nasty hack and it has to be done by <strong>every</strong> function that could encounter the error, including those in libraries.  What a nightmare.</p>

<p>Or you could just use the <code>with</code> block.</p>

<h2>Bonus Question</h2>

<p>(Stop reading now if are only interested in the objective aspects of the question.)</p>

<blockquote>
  <p>Why isn't that included in the iterator protocol for file objects?</p>
</blockquote>

<p>This is a subjective question about API design, so I have a subjective answer in two parts.</p>

<p>On a gut level, this feels wrong, because it makes iterator protocol do two separate things—iterate over lines <em>and</em> close the file handle—and it's often a bad idea to make a simple-looking function do two actions.  In this case, it feels especially bad because iterators relate in a quasi-functional, value-based way to the contents of a file, but managing file handles is a completely separate task.  Squashing both, invisibly, into one action, is surprising to humans who read the code and makes it more difficult to reason about program behavior.</p>

<p>Other languages have essentially come to the same conclusion.  Haskell briefly flirted with so-called ""lazy IO"" which allows you to iterate over a file and have it automatically closed when you get to the end of the stream, but it's almost universally discouraged to use lazy IO in Haskell these days, and Haskell users have mostly moved to more explicit resource management like Conduit which behaves more like the <code>with</code> block in Python.</p>

<p>On a technical level, there are some things you may want to do with a file handle in Python which would not work as well if iteration closed the file handle.  For example, suppose I need to iterate over the file twice:</p>

<pre><code>with open('filename.txt') as fp:
    for line in fp:
        ...
    fp.seek(0)
    for line in fp:
        ...
</code></pre>

<p>While this is a less common use case, consider the fact that I might have just added the three lines of code at the bottom to an existing code base which originally had the top three lines.  If iteration closed the file, I wouldn't be able to do that.  So keeping iteration and resource management separate makes it easier to compose chunks of code into a larger, working Python program.</p>

<p>Composability is one of the most important usability features of a language or API.</p>
","11555509"
"How do I calculate number of days between two dates using Python?","241513","","<p>If I have two dates (ex. <code>'8/18/2008'</code> and <code>'9/26/2008'</code>) what is the best way to get the number of days between the two dates?</p>
","<p>If you have two date objects, you can just subtract them.</p>

<pre><code>from datetime import date

d0 = date(2008, 8, 18)
d1 = date(2008, 9, 26)
delta = d0 - d1
print delta.days
</code></pre>

<p>The relevant section of the docs:
<a href=""https://docs.python.org/library/datetime.html"" rel=""noreferrer"">https://docs.python.org/library/datetime.html</a></p>
","151211"
"How to delete the contents of a folder in Python?","241470","","<p>How can I delete the contents of a local folder in Python?</p>

<p>The current project is for Windows, but I would like to see *nix also.</p>
","<p>Updated to only delete files and to used the os.path.join() method suggested in the comments. If you also want to remove subdirectories, uncomment the elif statement.</p>

<pre><code>import os, shutil
folder = '/path/to/folder'
for the_file in os.listdir(folder):
    file_path = os.path.join(folder, the_file)
    try:
        if os.path.isfile(file_path):
            os.unlink(file_path)
        #elif os.path.isdir(file_path): shutil.rmtree(file_path)
    except Exception as e:
        print(e)
</code></pre>
","185941"
"In Python how should I test if a variable is None, True or False","241454","","<p>I have a function that can return one of three things:</p>

<ul>
<li>success (<code>True</code>)</li>
<li>failure (<code>False</code>)</li>
<li>error reading/parsing stream (<code>None</code>)</li>
</ul>

<p>My question is, if I'm not supposed to test against <code>True</code> or <code>False</code>, how should I see what the result is. Below is how I'm currently doing it:</p>

<pre><code>result = simulate(open(""myfile""))
if result == None:
    print ""error parsing stream""
elif result == True: # shouldn't do this
    print ""result pass""
else:
    print ""result fail""
</code></pre>

<p>is it really as simple as removing the <code>== True</code> part or should I add a tri-bool data-type. I do not want the <code>simulate</code> function to throw an exception as all I want the outer program to do with an error is log it and continue. </p>
","<p>Don't fear the Exception!  Having your program just log and continue is as easy as:</p>

<pre><code>try:
    result = simulate(open(""myfile""))
except SimulationException as sim_exc:
    print ""error parsing stream"", sim_exc
else:
    if result:
        print ""result pass""
    else:
        print ""result fail""

# execution continues from here, regardless of exception or not
</code></pre>

<p>And now you can have a much richer type of notification from the simulate method as to what exactly went wrong, in case you find error/no-error not to be informative enough.</p>
","2020704"
"split elements of a list in python","241242","","<p>I know this is a pretty basic question, but I'm new to python and can't figure out how to resolve it.</p>

<p>I have a list:</p>

<pre><code>list = ['element1\t0238.94', 'element2\t2.3904', 'element3\t0139847']
</code></pre>

<p>and I want to delete the '\t' and everything after. I was thinking to split each element at the '\t' so that I could delete every other element of the list. However, when I try to do <code>list[0:].split('\t')</code> I get AttributeError: 'list' object has no attribute 'split'. I also tried making the whole list into a string, but that brought on a whole other slew of problems. Any suggestions would be appreciated. </p>
","<p>Something like:</p>

<pre><code>&gt;&gt;&gt; l = ['element1\t0238.94', 'element2\t2.3904', 'element3\t0139847']
&gt;&gt;&gt; [i.split('\t', 1)[0] for i in l]
['element1', 'element2', 'element3']
</code></pre>
","6696059"
"Convert a python dict to a string and back","239898","","<p>I am writing a program that stores data in a dictionary object, but this data needs to be saved at some point during the program execution and loaded back into the dictionary object when the program is run again.
How would I convert a dictionary object into a string that can be written to a file and loaded back into a dictionary object? This will hopefully support dictionaries containing dictionaries.</p>
","<p><a href=""https://docs.python.org/3/library/json.html"" rel=""nofollow noreferrer"">The json module</a> is a good solution here. It has the advantages over pickle that it only produces plain text output, and is cross-platform and cross-version.</p>
","4547331"
"Dump a NumPy array into a csv file","239893","","<p>Is there a way to dump a NumPy array into a CSV file? I have a 2D NumPy array and need to dump it in human-readable format.</p>
","<p><a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.savetxt.html"" rel=""noreferrer""><code>numpy.savetxt</code></a> saves an array to a text file.</p>

<pre><code>import numpy
a = numpy.asarray([ [1,2,3], [4,5,6], [7,8,9] ])
numpy.savetxt(""foo.csv"", a, delimiter="","")
</code></pre>
","6081043"
"pip: dealing with multiple Python versions?","239846","","<p>Is there any way to make <code>pip</code> play well with multiple versions of Python? For example, I want to use <code>pip</code> to explicitly install things to either my site 2.5 installation or my site 2.6 installation.</p>

<p>For example, with <code>easy_install</code>, I use <code>easy_install-2.{5,6}</code>.</p>

<p>And, yes — I know about virtualenv, and no — it's not a solution to this particular problem.</p>
","<p>Since version 0.8, Pip supports <code>pip-{version}</code>. You can use it the same as <code>easy_install-{version}</code>:</p>

<pre><code>$ pip-2.5 install myfoopackage
$ pip-2.6 install otherpackage
$ pip-2.7 install mybarpackage
</code></pre>

<hr>

<p><strong>EDIT</strong>: pip changed its schema to use <code>pipVERSION</code> instead of <code>pip-VERSION</code> in version 1.5. You should use the following if you have <code>pip &gt;= 1.5</code>:</p>

<pre><code>$ pip2.6 install otherpackage
$ pip2.7 install mybarpackage
</code></pre>

<p>Check <a href=""https://github.com/pypa/pip/pull/1053"" rel=""noreferrer"">https://github.com/pypa/pip/pull/1053</a> for more details</p>

<hr>

<p>References:</p>

<ul>
<li><a href=""https://github.com/pypa/pip/issues/200"" rel=""noreferrer"">https://github.com/pypa/pip/issues/200</a></li>
<li><a href=""http://www.pip-installer.org/docs/pip/en/0.8.3/news.html#id4"" rel=""noreferrer"">http://www.pip-installer.org/docs/pip/en/0.8.3/news.html#id4</a></li>
</ul>
","4910393"
"Get HTML Source of WebElement in Selenium WebDriver using Python","239820","","<p>I'm using the Python bindings to run Selenium WebDriver.</p>

<pre><code>from selenium import webdriver
wd = webdriver.Firefox()
</code></pre>

<p>I know I can grab a webelement like so...</p>

<pre><code>elem = wd.find_element_by_css_selector('#my-id')
</code></pre>

<p>And I know I can get the full page source with...</p>

<pre><code>wd.page_source
</code></pre>

<p>But is there anyway to get the ""element source""?</p>

<pre><code>elem.source   # &lt;-- returns the HTML as a string
</code></pre>

<p>The selenium webdriver docs for Python are basically non-existent and I don't see anything in the code that seems to enable that functionality.</p>

<p>Any thoughts on the best way to access the HTML of an element (and its children)?</p>
","<p>You can read <code>innerHTML</code> attribute to get source of the <em>content</em> of the element or <code>outerHTML</code> for source <em>with</em> the current element.</p>

<p>Python:</p>

<pre><code>element.get_attribute('innerHTML')
</code></pre>

<p>Java:</p>

<pre><code>elem.getAttribute(""innerHTML"");
</code></pre>

<p>C#:</p>

<pre><code>element.GetAttribute(""innerHTML"");
</code></pre>

<p>Ruby:</p>

<pre><code>element.attribute(""innerHTML"")
</code></pre>

<p>JS:</p>

<pre><code>element.getAttribute('innerHTML');
</code></pre>

<p>PHP:</p>

<pre><code>$elem.getAttribute('innerHTML');
</code></pre>

<p>Tested and works with the <code>ChromeDriver</code>.</p>
","8575709"
"How to declare array of zeros in python (or an array of a certain size)","239674","","<p>I am trying to build a histogram of counts... so I create buckets.
I know I could just go through and append a bunch of zeros i.e something along these lines:</p>

<pre><code>buckets = []
for i in xrange(0,100):
    buckets.append(0)
</code></pre>

<p>Is there a  more elegant way to do it? I feel like there should be a way to just declare an array of a certain size.</p>

<p>I know numpy has <code>numpy.zeros</code> but I want the more general solution</p>
","<pre><code>buckets = [0] * 100
</code></pre>
","4056782"
"Find which version of package is installed with pip","239025","","<p>Using pip, is it possible to figure out which version of a package is currently installed?</p>

<p>I know about <code>pip install XYZ --upgrade</code> but I am wondering if there is anything like <code>pip info XYZ</code>.  If not what would be the best way to tell what version I am currently using.</p>
","<p>As of <a href=""https://github.com/pypa/pip/blob/1.3/CHANGES.txt#L54"" rel=""noreferrer"">pip 1.3</a>, there is a <code>pip show</code> command.</p>

<pre><code>$ pip show Jinja2
---
Name: Jinja2
Version: 2.7.3
Location: /path/to/virtualenv/lib/python2.7/site-packages
Requires: markupsafe
</code></pre>

<p>In older versions, <code>pip freeze</code> and <code>grep</code> should do the job nicely.</p>

<pre><code>$ pip freeze | grep Jinja2
Jinja2==2.7.3
</code></pre>
","10215100"
"How can I check for Python version in a program that uses new language features?","238655","","<p>If I have a Python script that requires at least a particular
version of Python, what is the correct way to fail gracefully
when an earlier version of Python is used to launch the script?</p>

<p>How do I get control early enough to issue an error message
and exit?</p>

<p>For example, I have a program that uses the ternery operator (new in 2.5) and ""with"" blocks
(new in 2.6).  I wrote a simple little interpreter-version
checker routine which is the first thing the script would
call ... except it doesn't get that far. Instead, the
script fails during python compilation, before my routines
are even called. Thus the user of the script sees some very
obscure synax error tracebacks - which pretty much require
an expert to deduce that it is simply the case of running
the wrong version of Python.</p>

<p>I know how to check the version of Python. The issue is that some syntax is illegal in older versions of Python. Consider this program:</p>

<pre><code>import sys
if sys.version_info &lt; (2, 4):
    raise ""must use python 2.5 or greater""
else:
    # syntax error in 2.4, ok in 2.5
    x = 1 if True else 2
    print x
</code></pre>

<p>When run under 2.4, I want this result</p>

<pre><code>$ ~/bin/python2.4 tern.py 
must use python 2.5 or greater
</code></pre>

<p>and not this result:</p>

<pre><code>$ ~/bin/python2.4 tern.py 
  File ""tern.py"", line 5
    x = 1 if True else 2
           ^
SyntaxError: invalid syntax
</code></pre>

<p>(Channeling for a coworker.)</p>
","<p>You can test using <code>eval</code>:</p>

<pre><code>try:
  eval(""1 if True else 2"")
except SyntaxError:
  # doesn't have ternary
</code></pre>

<p>Also, <code>with</code> <em>is</em> available in Python 2.5, just add <code>from __future__ import with_statement</code>.</p>

<p>EDIT: to get control early enough, you could split it into different <code>.py</code> files and check compatibility in the main file before importing (e.g. in <code>__init__.py</code> in a package):</p>

<pre><code># __init__.py

# Check compatibility
try:
  eval(""1 if True else 2"")
except SyntaxError:
  raise ImportError(""requires ternary support"")

# import from another module
from impl import *
</code></pre>
","446061"
"How do I convert local time to UTC in Python?","238300","","<p>How do I convert a datetime <em>string in local time</em> to a <em>string in UTC time</em>?</p>

<p>I'm sure I've done this before, but can't find it and SO will hopefully help me (and others) do that in future.</p>

<p><strong>Clarification</strong>:  For example, if I have <code>2008-09-17 14:02:00</code> in my local timezone (<code>+10</code>), I'd like to generate a string with the equivalent <code>UTC</code> time: <code>2008-09-17 04:02:00</code>.</p>

<p>Also, from <a href=""http://lucumr.pocoo.org/2011/7/15/eppur-si-muove/"" rel=""noreferrer"">http://lucumr.pocoo.org/2011/7/15/eppur-si-muove/</a>, note that in general this isn't possible as with DST and other issues there is no unique conversion from local time to UTC time.</p>
","<p>Thanks @rofly, the full conversion from string to string is as follows:</p>

<pre><code>time.strftime(""%Y-%m-%d %H:%M:%S"", 
              time.gmtime(time.mktime(time.strptime(""2008-09-17 14:04:00"", 
                                                    ""%Y-%m-%d %H:%M:%S""))))
</code></pre>

<p>My summary of the <code>time</code>/<code>calendar</code> functions:</p>

<p><code>time.strptime</code><br>
string --> tuple (no timezone applied, so matches string)</p>

<p><code>time.mktime</code><br>
local time tuple --> seconds since epoch (always local time)</p>

<p><code>time.gmtime</code><br>
seconds since epoch --> tuple in UTC</p>

<p>and </p>

<p><code>calendar.timegm</code><br>
tuple in UTC --> seconds since epoch</p>

<p><code>time.localtime</code><br>
seconds since epoch --> tuple in local timezone</p>
","79913"
"Set value for particular cell in pandas DataFrame","238170","","<p><br>
I've created a pandas DataFrame</p>

<pre><code>df=DataFrame(index=['A','B','C'], columns=['x','y'])
</code></pre>

<p>and got this</p>

<pre>
    x    y
A  NaN  NaN
B  NaN  NaN
C  NaN  NaN
</pre>

<p><br>
Then I want to assign value to particular cell, for example for row 'C' and column 'x'.
I've expected to get such result:</p>

<pre>
    x    y
A  NaN  NaN
B  NaN  NaN
C  10  NaN
</pre>

<p>with this code:</p>

<pre><code>df.xs('C')['x']=10
</code></pre>

<p>but contents of <b>df</b> haven't changed. It's again only Nan's in dataframe. </p>

<p>Any suggestions?</p>
","<p><a href=""https://stackoverflow.com/a/24517695/190597"">RukTech's answer</a>, <code>df.set_value('C', 'x', 10)</code>, is far and away faster than the options I've suggested below. However, it has been <a href=""https://github.com/pandas-dev/pandas/issues/15269"" rel=""noreferrer""><strong>slated for deprecation</strong></a>.</p>

<p>Going forward, the <a href=""https://github.com/pandas-dev/pandas/issues/15269#issuecomment-276382712"" rel=""noreferrer"">recommended method is <code>.iat/.at</code></a>.</p>

<hr>

<p><strong>Why <code>df.xs('C')['x']=10</code> does not work:</strong></p>

<p><code>df.xs('C')</code> by default, returns a new dataframe <a href=""http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.xs.html#pandas.DataFrame.xsY"" rel=""noreferrer"">with a copy</a> of the data, so </p>

<pre><code>df.xs('C')['x']=10
</code></pre>

<p>modifies this new dataframe only.</p>

<p><code>df['x']</code> returns a view of the <code>df</code> dataframe, so </p>

<pre><code>df['x']['C'] = 10
</code></pre>

<p>modifies <code>df</code> itself.</p>

<p><strong>Warning</strong>: It is sometimes difficult to predict if an operation returns a copy or a view. For this reason the <a href=""http://pandas.pydata.org/pandas-docs/stable/indexing.html#returning-a-view-versus-a-copy"" rel=""noreferrer"">docs recommend avoiding assignments with ""chained indexing""</a>.  </p>

<hr>

<p>So the recommended alternative is</p>

<pre><code>df.at['C', 'x'] = 10
</code></pre>

<p>which <em>does</em> modify <code>df</code>.</p>

<hr>

<pre><code>In [18]: %timeit df.set_value('C', 'x', 10)
100000 loops, best of 3: 2.9 µs per loop

In [20]: %timeit df['x']['C'] = 10
100000 loops, best of 3: 6.31 µs per loop

In [81]: %timeit df.at['C', 'x'] = 10
100000 loops, best of 3: 9.2 µs per loop
</code></pre>
","13842286"
"How to install lxml on Ubuntu","237780","","<p>I'm having difficulty installing lxml with easy_install on Ubuntu 11.</p>

<p>When I type <code>$ easy_install lxml</code> I get:</p>

<pre><code>Searching for lxml
Reading http://pypi.python.org/simple/lxml/
Reading http://codespeak.net/lxml
Best match: lxml 2.3
Downloading http://lxml.de/files/lxml-2.3.tgz
Processing lxml-2.3.tgz
Running lxml-2.3/setup.py -q bdist_egg --dist-dir /tmp/easy_install-7UdQOZ/lxml-2.3/egg-dist-tmp-GacQGy
Building lxml version 2.3.
Building without Cython.
ERROR: /bin/sh: xslt-config: not found

** make sure the development packages of libxml2 and libxslt are installed **

Using build configuration of libxslt 
In file included from src/lxml/lxml.etree.c:227:0:
src/lxml/etree_defs.h:9:31: fatal error: libxml/xmlversion.h: No such file or directory
compilation terminated.
</code></pre>

<p>It seems that <code>libxslt</code> or <code>libxml2</code> is not installed. I've tried following the instructions at <a href=""http://www.techsww.com/tutorials/libraries/libxslt/installation/installing_libxslt_on_ubuntu_linux.php"" rel=""noreferrer"">http://www.techsww.com/tutorials/libraries/libxslt/installation/installing_libxslt_on_ubuntu_linux.php</a> and <a href=""http://www.techsww.com/tutorials/libraries/libxml/installation/installing_libxml_on_ubuntu_linux.php"" rel=""noreferrer"">http://www.techsww.com/tutorials/libraries/libxml/installation/installing_libxml_on_ubuntu_linux.php</a> with no success.</p>

<p>If I try <code>wget ftp://xmlsoft.org/libxml2/libxml2-sources-2.6.27.tar.gz</code> I get</p>

<pre><code>&lt;successful connection info&gt;
==&gt; SYST ... done.    ==&gt; PWD ... done.
==&gt; TYPE I ... done.  ==&gt; CWD (1) /libxml2 ... done.
==&gt; SIZE libxml2-sources-2.6.27.tar.gz ... done.
==&gt; PASV ... done.    ==&gt; RETR libxml2-sources-2.6.27.tar.gz ... 
No such file `libxml2-sources-2.6.27.tar.gz'.
</code></pre>

<p>If I try the other first, I'll get to <code>./configure --prefix=/usr/local/libxslt --with-libxml-prefix=/usr/local/libxml2</code> and that will fail eventually with:</p>

<pre><code>checking for libxml libraries &gt;= 2.6.27... configure: error: Could not find libxml2 anywhere, check ftp://xmlsoft.org/.
</code></pre>

<p>I've tried both versions <code>2.6.27</code> and <code>2.6.29</code> of <code>libxml2</code> with no difference.</p>

<p>Leaving no stone unturned, I have successfully done <code>sudo apt-get install libxml2-dev</code>, but this changes nothing.</p>
","<p>Since you're on Ubuntu, don't bother with those source packages. Just install those development packages using apt-get.</p>

<pre><code>apt-get install libxml2-dev libxslt1-dev python-dev
</code></pre>

<p>If you're happy with a possibly older version of lxml altogether though, you could try</p>

<pre><code>apt-get install python-lxml
</code></pre>

<p>and be done with it. :)</p>
","6504860"
"Best way to format integer as string with leading zeros?","237739","","<p>I need to add leading zeros to integer to make a string with defined quantity of digits ($cnt).
What the best way to translate this simple function from PHP to Python:</p>

<pre><code>function add_nulls($int, $cnt=2) {
    $int = intval($int);
    for($i=0; $i&lt;($cnt-strlen($int)); $i++)
        $nulls .= '0';
    return $nulls.$int;
}
</code></pre>

<p>Is there a function that can do this?</p>
","<p>You can use the <code>zfill()</code> method to pad a string with zeros:</p>

<pre><code>In [3]: str(1).zfill(2)
Out[3]: '01'
</code></pre>
","733478"
"ValueError: could not convert string to float: id","237212","","<p>I'm running the following python script:</p>

<pre><code>#!/usr/bin/python

import os,sys
from scipy import stats
import numpy as np

f=open('data2.txt', 'r').readlines()
N=len(f)-1
for i in range(0,N):
    w=f[i].split()
    l1=w[1:8]
    l2=w[8:15]
    list1=[float(x) for x in l1]
    list2=[float(x) for x in l2]
    result=stats.ttest_ind(list1,list2)
    print result[1]
</code></pre>

<p>However I got the errors like:</p>

<pre><code>ValueError: could not convert string to float: id
</code></pre>

<p>I'm confused by this.
When I try this for only one line in interactive section, instead of for loop using script:</p>

<pre><code>&gt;&gt;&gt; from scipy import stats
&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; f=open('data2.txt','r').readlines()
&gt;&gt;&gt; w=f[1].split()
&gt;&gt;&gt; l1=w[1:8]
&gt;&gt;&gt; l2=w[8:15]
&gt;&gt;&gt; list1=[float(x) for x in l1]
&gt;&gt;&gt; list1
[5.3209183842, 4.6422726719, 4.3788135547, 5.9299061614, 5.9331108706, 5.0287087832, 4.57...]
</code></pre>

<p>I works well.</p>

<p>Can anyone explain a little bit about this?
thx</p>
","<p>Obviously some of your lines don't have valid float data, specifically some line have text <code>id</code> which can't be converted to float. </p>

<p>When you try it in interactive prompt you are trying only first line, so best way is to print the line where you are getting this error and you will know the wrong line e.g.</p>

<pre><code>#!/usr/bin/python

import os,sys
from scipy import stats
import numpy as np

f=open('data2.txt', 'r').readlines()
N=len(f)-1
for i in range(0,N):
    w=f[i].split()
    l1=w[1:8]
    l2=w[8:15]
    try:
        list1=[float(x) for x in l1]
        list2=[float(x) for x in l2]
    except ValueError,e:
        print ""error"",e,""on line"",i
    result=stats.ttest_ind(list1,list2)
    print result[1]
</code></pre>
","8420179"
"python print end=' '","236983","","<p>I have this python script where I need to run <code>gdal_retile.py</code></p>

<p>but I get an exception on this line:</p>

<pre><code>if Verbose:
   print(""Building internam Index for %d tile(s) ..."" % len(inputTiles), end=' ')
</code></pre>

<p>The <code>end=''</code> is invalid syntax. I am curious as to why, and what the author probably meant to do. </p>

<p>I'm new to python if you haven't already guessed.</p>

<hr>

<p>I think the root cause of the problem is that these imports are failing
and therefore one must contain this import <code>from __future__ import print_function</code></p>

<pre><code>try: 
   from osgeo import gdal
   from osgeo import ogr
   from osgeo import osr
   from osgeo.gdalconst import *
except:
   import gdal
   import ogr
   import osr
   from gdalconst import *
</code></pre>
","<p>Are you sure you are using Python 3.x? The syntax isn't available in Python 2.x because <code>print</code> is still a statement.</p>

<pre><code>print(""foo"" % bar, end="" "")
</code></pre>

<p>in Python 2.x is identical to</p>

<pre><code>print (""foo"" % bar, end="" "")
</code></pre>

<p>or</p>

<pre><code>print ""foo"" % bar, end="" ""
</code></pre>

<p>i.e. as a call to print with a tuple as argument.</p>

<p>That's obviously bad syntax (literals don't take keyword arguments). In Python 3.x <code>print</code> is an actual function, so it takes keyword arguments, too.</p>

<p>The correct idiom in Python 2.x for <code>end="" ""</code> is:</p>

<pre><code>print ""foo"" % bar,
</code></pre>

<p>(note the final comma, this makes it end the line with a space rather than a linebreak)</p>

<p>If you want more control over the output, consider using <code>sys.stdout</code> directly. This won't do any special magic with the output.</p>

<p>Of course in somewhat recent versions of Python 2.x (2.5 should have it, not sure about 2.4), you can use the <code>__future__</code> module to enable it in your script file:</p>

<pre><code>from __future__ import print_function
</code></pre>

<p>The same goes with <code>unicode_literals</code> and some other nice things (<code>with_statement</code>, for example). This won't work in really old versions (i.e. created before the feature was introduced) of Python 2.x, though.</p>
","2456292"
"How is returning the output of a function different from printing it?","236689","","<p>In my previous <a href=""https://stackoverflow.com/questions/746774/basic-python-quick-question-regarding-calling-a-function"">question</a>, Andrew Jaffe writes: </p>

<blockquote>
  <p>In addition to all of the other hints and tips, I think you're missing something crucial: your functions actually need to return something.
  When you create <code>autoparts()</code> or <code>splittext()</code>, the idea is that this will be a function that you can call, and it can (and should) give something back.
  Once you figure out the output that you want your function to have, you need to put it in a <code>return</code> statement.</p>
</blockquote>

<pre><code>def autoparts():
    parts_dict = {}
    list_of_parts = open('list_of_parts.txt', 'r')

    for line in list_of_parts:
        k, v = line.split()
        parts_dict[k] = v

    print(parts_dict)

&gt;&gt;&gt; autoparts()
{'part A': 1, 'part B': 2, ...}
</code></pre>

<p>This function creates a dictionary, but it does not return something.  However, since I added the <code>print</code>, the output of the function is shown when I run the function.  What is the difference between <code>return</code>ing something and <code>print</code>ing it?</p>
","<p>Print simply prints out the structure to your output device (normally the console). Nothing more. To return it from your function, you would do:</p>

<pre><code>def autoparts():
  parts_dict = {}
  list_of_parts = open('list_of_parts.txt', 'r')
  for line in list_of_parts:
        k, v = line.split()
        parts_dict[k] = v
  return parts_dict
</code></pre>

<p>Why return? Well if you don't, that dictionary dies (gets garbage collected) and is no longer accessible as soon as this function call ends. If you return the value, you can do other stuff with it. Such as:</p>

<pre><code>my_auto_parts = autoparts() 
print my_auto_parts['engine']
</code></pre>

<p>See what happened? autoparts() was called and it returned the parts_dict and we stored it into the my_auto_parts variable. Now we can use this variable to access the dictionary object and it continues to live even though the function call is over. We then printed out the object in the dictionary with the key 'engine'.</p>

<p>For a good tutorial, check out <a href=""http://www.diveintopython.net/"" rel=""nofollow noreferrer"">dive into python</a>. It's free and very easy to follow.</p>
","750148"
"What does Python's eval() do? ","236263","","<p>In the book that I am reading on Python, it keeps using the code <code>eval(input('blah'))</code> </p>

<p>I read the documentation, and I understand it, but I still do not see how it changes the <code>input()</code> function. </p>

<p>What does it do? Can someone explain?</p>
","<p>The eval function lets a python program run python code within itself.</p>

<p>eval example (interactive shell):</p>

<pre><code>&gt;&gt;&gt; x = 1
&gt;&gt;&gt; eval('x + 1')
2
&gt;&gt;&gt; eval('x')
1
</code></pre>
","9383764"
"Create List of Single Item Repeated n Times in Python","236152","","<p>I know a list comprehension will do this, but I was wondering if there is an even shorter (and more Pythonic?) approach.</p>

<p>I want to create a series of lists, all of varying length. Each list will contain the same element e, repeated n times (where n = length of the list). How do I create the lists, without doing</p>

<pre><code>[e for number in xrange(n)]
</code></pre>

<p>for each list?</p>
","<p>You can also write:</p>

<pre><code>[e] * n
</code></pre>

<p>You should note that if e is for example an empty list you get a list with n references to the same list, not n independent empty lists. </p>

<p><strong>Performance testing</strong></p>

<p>At first glance it <em>seems</em> that repeat is the fastest way to create a list with n identical elements:</p>

<pre><code>&gt;&gt;&gt; timeit.timeit('itertools.repeat(0, 10)', 'import itertools', number = 1000000)
0.37095273281943264
&gt;&gt;&gt; timeit.timeit('[0] * 10', 'import itertools', number = 1000000)
0.5577236771712819
</code></pre>

<p>But wait - it's not a fair test...</p>

<pre><code>&gt;&gt;&gt; itertools.repeat(0, 10)
repeat(0, 10)  # Not a list!!!
</code></pre>

<p>The function <code>itertools.repeat</code> doesn't actually create the list, it just creates an object that can be used to create a list if you wish! Let's try that again, but converting to a list:</p>

<pre><code>&gt;&gt;&gt; timeit.timeit('list(itertools.repeat(0, 10))', 'import itertools', number = 1000000)
1.7508119747063233
</code></pre>

<p>So if you want a list, use <code>[e] * n</code>. If you want to generate the elements lazily, use <code>repeat</code>.</p>
","3459131"
"How to Execute a Python File in Notepad ++?","235855","","<p>I prefer using Notepad ++ for developing,</p>

<p>How do I execute the files in Python through Notepad++?</p>
","<p><em>I would go for option three.</em></p>

<ul>
<li><p><strong>First option:</strong> (Not safe)</p>

<blockquote>
  <p>The code opens “HKEY_CURRENT_USER\Software\Python\PythonCore”, if the key exists it will get the path from the first child key of this key.</p>
</blockquote>

<p>Check if this key exists, and if does not, you could try creating it.</p></li>
<li><p><strong>Second option:</strong></p>

<p>Use a batch script that runs the Python script and then create a shortcut to that from Notepad++.</p>

<p>As explained here: <a href=""http://it-ride.blogspot.com/2009/08/notepad-and-python.html"" rel=""noreferrer"">http://it-ride.blogspot.com/2009/08/notepad-and-python.html</a></p></li>
<li><p><strong>Third option:</strong> (The easiest one)</p>

<p>Open Notepad++. On the menu go to: Run -> Run.. (F5). Type in:</p>

<pre><code>C:\Python26\python.exe ""$(FULL_CURRENT_PATH)""
</code></pre>

<p><strong><em>Note: If you have Python 3.1: type in Python31 instead of Python26</em></strong></p>

<p><strong><em>Note: Add -i if you want the command line window to stay open after the script has finished</em></strong></p>

<p>Now, instead of pressing run, press save to create a shortcut for it.</p></li>
</ul>
","1702605"
"Install a Python package into a different directory using pip?","235773","","<p>I know the obvious answer is to use virtualenv and virtualenvwrapper, but for various reasons I can't/don't want to do that.</p>

<p>So how do I modify the command</p>

<pre><code>pip install package_name
</code></pre>

<p>to make <code>pip</code> install the package somewhere other than the default <code>site-packages</code>?</p>
","<p>Use:</p>

<pre><code>pip install --install-option=""--prefix=$PREFIX_PATH"" package_name
</code></pre>

<p>You might also want to use <code>--ignore-installed</code> to force all dependencies to be reinstalled using this new prefix.  You can use <code>--install-option</code> to multiple times to add any of the options you can use with <code>python setup.py install</code> (<code>--prefix</code> is probably what you want, but there are a bunch more options you could use).</p>
","2916320"
"Remove all occurrences of a value from a list?","235522","","<p>In Python <code>remove()</code> will remove the first occurrence of value in a list.</p>

<p>How to remove all occurrences of a value from a list, without sorting the list?</p>

<p>This is what I have in mind.</p>

<pre><code>&gt;&gt;&gt; x = [1, 2, 3, 4, 2, 2, 3]
&gt;&gt;&gt; def remove_values_from_list(the_list, val):
        while val in the_list:
            the_list.remove(val)
&gt;&gt;&gt; remove_values_from_list(x, 2)
&gt;&gt;&gt; x
[1, 3, 4, 3]
</code></pre>
","<p>Functional approach:</p>

<p><strong>2.x</strong></p>

<pre><code>&gt;&gt;&gt; x = [1,2,3,2,2,2,3,4]
&gt;&gt;&gt; filter(lambda a: a != 2, x)
[1, 3, 3, 4]
</code></pre>

<p><strong>3.x</strong></p>

<pre><code>&gt;&gt;&gt; x = [1,2,3,2,2,2,3,4]
&gt;&gt;&gt; list(filter((2).__ne__, x))
[1, 3, 3, 4]
</code></pre>

<p>or </p>

<pre><code>&gt;&gt;&gt; x = [1,2,3,2,2,2,3,4]
&gt;&gt;&gt; list(filter(lambda a: a != 2, x))
[1, 3, 3, 4]
</code></pre>
","1157160"
"What is the most efficient way to loop through dataframes with pandas?","235450","","<p>I want to perform my own complex operations on financial data in dataframes in a sequential manner.</p>

<p>For example I am using the following MSFT CSV file taken from <a href=""http://finance.yahoo.com/q/hp?s=MSFT"">Yahoo Finance</a>:</p>

<pre><code>Date,Open,High,Low,Close,Volume,Adj Close
2011-10-19,27.37,27.47,27.01,27.13,42880000,27.13
2011-10-18,26.94,27.40,26.80,27.31,52487900,27.31
2011-10-17,27.11,27.42,26.85,26.98,39433400,26.98
2011-10-14,27.31,27.50,27.02,27.27,50947700,27.27

....
</code></pre>

<p>I then do the following:</p>

<pre><code>#!/usr/bin/env python
from pandas import *

df = read_csv('table.csv')

for i, row in enumerate(df.values):
    date = df.index[i]
    open, high, low, close, adjclose = row
    #now perform analysis on open/close based on date, etc..
</code></pre>

<p>Is that the most efficient way? Given the focus on speed in pandas, I would assume there must be some special function to iterate through the  values in a manner that one also retrieves the index (possibly through a generator to be memory efficient)? <code>df.iteritems</code> unfortunately only iterates column by column.</p>
","<p>The newest versions of pandas now include a built-in function for iterating over rows. </p>

<pre><code>for index, row in df.iterrows():

    # do some logic here
</code></pre>

<p>Or, if you want it faster use <code>itertuples()</code></p>

<p>But, unutbu's suggestion to use numpy functions to avoid iterating over rows will produce the fastest code. </p>
","11617194"
"Python Linked List","234895","","<p>What's the easiest way to use a linked list in python? In scheme, a linked list is defined simply by <code>'(1 2 3 4 5)</code>. Python's lists, <code>[1, 2, 3, 4, 5]</code>, and tuples, <code>(1, 2, 3, 4, 5)</code>, are not, in fact, linked lists, and linked lists have some nice properties such as constant-time concatenation, and being able to reference separate parts of them. Make them immutable and they are really easy to work with!</p>
","<p>Here is some list functions based on <a href=""https://stackoverflow.com/questions/280243/python-linked-list#280284"">Martin v. Löwis's representation</a>:</p>

<pre><code>cons   = lambda el, lst: (el, lst)
mklist = lambda *args: reduce(lambda lst, el: cons(el, lst), reversed(args), None)
car = lambda lst: lst[0] if lst else lst
cdr = lambda lst: lst[1] if lst else lst
nth = lambda n, lst: nth(n-1, cdr(lst)) if n &gt; 0 else car(lst)
length  = lambda lst, count=0: length(cdr(lst), count+1) if lst else count
begin   = lambda *args: args[-1]
display = lambda lst: begin(w(""%s "" % car(lst)), display(cdr(lst))) if lst else w(""nil\n"")
</code></pre>

<p>where <code>w = sys.stdout.write</code></p>

<p>Although doubly linked lists are famously used in Raymond Hettinger's <a href=""http://code.activestate.com/recipes/576694-orderedset/"" rel=""noreferrer"">ordered set recipe</a>, singly linked lists have no practical value in Python.</p>

<p>I've <em>never</em> used a singly linked list in Python for any problem except educational. </p>

<p>Thomas Watnedal <a href=""https://stackoverflow.com/questions/280243/python-linked-list#280280"">suggested</a> a good educational resource <a href=""http://greenteapress.com/thinkpython/html/chap17.html"" rel=""noreferrer"">How to Think Like a Computer Scientist, Chapter 17: Linked lists</a>:</p>

<p>A linked list is either: </p>

<ul>
<li>the empty list, represented by None, or </li>
<li><p>a node that contains a cargo object and a reference to a linked list.</p>

<pre><code>class Node: 
  def __init__(self, cargo=None, next=None): 
    self.car = cargo 
    self.cdr = next    
  def __str__(self): 
    return str(self.car)

def display(lst):
  if lst:
    w(""%s "" % lst)
    display(lst.cdr)
  else:
    w(""nil\n"")
</code></pre></li>
</ul>
","283630"
"Public free web services for testing soap client","234583","","<p>Are there any publicly available <a href=""http://en.wikipedia.org/wiki/SOAP_(protocol)"" rel=""noreferrer"">SOAP 1.2</a>/<a href=""http://en.wikipedia.org/wiki/Web_Services_Description_Language"" rel=""noreferrer"">WSDL 2.0</a> compliant free web services for testing a Python based soap client library (e.g. <a href=""http://pywebsvcs.sourceforge.net/"" rel=""noreferrer"">Zolera SOAP Infrastructure</a>)? </p>

<p>So far, it appears to me that <a href=""http://www.google.com/apis/"" rel=""noreferrer"">Google Web API</a> may be the only option.</p>

<p>Otherwise, how can one test a <a href=""http://en.wikipedia.org/wiki/SOAP_(protocol)"" rel=""noreferrer"">SOAP 1.2</a> compliant client library?</p>
","<p>There is a bunch on here:</p>

<p><a href=""http://www.webservicex.net/WS/wscatlist.aspx"" rel=""noreferrer"">http://www.webservicex.net/WS/wscatlist.aspx</a></p>

<p>Just google for ""Free WebService"" or ""Open WebService"" and you'll find tons of open SOAP endpoints.</p>

<p>Remember, you can get a WSDL from any ASMX endpoint by adding ?WSDL to the url.</p>
","311661"
"Is there a portable way to get the current username in Python?","234243","","<p>Is there a portable way to get the current user's username in Python (i.e., one that works under both Linux and Windows, at least).  It would work like <code>os.getuid</code>:</p>

<pre><code>&gt;&gt;&gt; os.getuid()
42
&gt;&gt;&gt; os.getusername()
'slartibartfast'
</code></pre>

<p>I googled around and was surprised not to find a definitive answer (although perhaps I was just googling poorly).  The <a href=""http://www.python.org/doc/2.5.2/lib/module-pwd.html"" rel=""noreferrer"">pwd</a> module provides a relatively easy way to achieve this under, say, Linux, but it is not present on Windows.  Some of the search results suggested that getting the username under Windows can be complicated in certain circumstances (e.g., running as a Windows service), although I haven't verified that.</p>
","<p>Look at <a href=""http://docs.python.org/library/getpass.html"" rel=""noreferrer"">getpass</a> module</p>

<pre><code>import getpass
getpass.getuser()
'kostya'
</code></pre>

<p>Availability: Unix, Windows</p>

<hr>

<p>p.s. Per comment below ""<em>this function looks at the values of various environment variables to determine the user name. Therefore, this function should not be relied on for access control purposes (or possibly any other purpose, since it allows any user to impersonate any other).</em>""</p>
","842096"
"Understanding the main method of python","233971","","<p>I am new to Python, but I have experience in other OOPS languages. My course does not explain the main method in python. </p>

<p>Please tell me how main method works in python ? I am confused because I am trying to compare it to Java. </p>

<pre><code>def main():
# display some lines

if __name__ == ""__main__"": main()
</code></pre>

<p>How is main executed and why do I need this strange if to execute main. My code is terminated without output when I remove the if.</p>

<p>The minimal code - </p>

<pre><code>class AnimalActions:
    def quack(self): return self.strings['quack']
    def bark(self): return self.strings['bark']

class Duck(AnimalActions):
    strings = dict(
        quack = ""Quaaaaak!"",
        bark = ""The duck cannot bark."",
    )


class Dog(AnimalActions):
    strings = dict(
        quack = ""The dog cannot quack."",
        bark = ""Arf!"",
    )

def in_the_doghouse(dog):
    print(dog.bark())

def in_the_forest(duck):
    print(duck.quack())

def main():
    donald = Duck()
    fido = Dog()

    print(""- In the forest:"")
    for o in ( donald, fido ):
        in_the_forest(o)

    print(""- In the doghouse:"")
    for o in ( donald, fido ):
        in_the_doghouse(o)

if __name__ == ""__main__"": main()
</code></pre>
","<p>The Python approach to ""main"" is almost unique to the language(*).</p>

<p>The semantics are a bit subtle.  The <code>__name__</code> identifier is bound to the name of any module as it's being imported.  However, when a file is being executed then <code>__name__</code> is set to <code>""__main__""</code> (the literal string: <code>__main__</code>).</p>

<p>This is almost always used to separate the portion of code which should be executed from the portions of code which define functionality.  So Python code often contains a line like:</p>

<pre><code>#!/usr/bin/env python
from __future__ import print_function
import this, that, other, stuff
class SomeObject(object):
    pass

def some_function(*args,**kwargs):
    pass

if __name__ == '__main__':
    print(""This only executes when %s is executed rather than imported"" % __file__)
</code></pre>

<p>Using this convention one can have a file define classes and functions for use in other programs, and also include code to evaluate only when the file is called as a standalone script.</p>

<p>It's important to understand that all of the code above the <code>if __name__</code> line is being executed, evaluated, in both cases.  It's evaluated by the interpreter when the file is imported or when it's executed.  If you put a <code>print</code> statement before the <code>if __name__</code> line then it will print output every time any other code attempts to import that as a module.  (Of course, this would be <strong>anti-social</strong>. Don't do that).</p>

<p>I, personally, like these semantics.  It encourages programmers to separate functionality (definitions) from function (execution) and encourages re-use.</p>

<p>Ideally almost every Python module can do something useful if called from the command line.  In many cases this is used for managing unit tests.  If a particular file defines functionality which is only useful in the context of other components of a system then one can still use <code>__name__ == ""__main__""</code> to isolate a block of code which calls a suite of unit tests that apply to this module.</p>

<p>(If you're not going to have any such functionality nor unit tests than it's best to ensure that the file mode is NOT executable).</p>

<p>Summary: <code>if __name__ == '__main__':</code> has two primary use cases:</p>

<ul>
<li>Allow a module to provide functionality for import into other code while also providing useful semantics as a standalone script (a command line wrapper around the functionality)</li>
<li>Allow a module to define a suite of unit tests which are stored with (in the same file as) the code to be tested and which can be executed independently of the rest of the codebase.</li>
</ul>

<p>It's fairly common to <code>def main(*args)</code> and have <code>if __name__ == '__main__':</code> simply call <code>main(*sys.argv[1:])</code> if you want to define main in a manner that's similar to some other programming languages.  If your .py file is primarily intended to be used as a module in other code then you might <code>def test_module()</code> and calling <code>test_module()</code> in your <code>if __name__ == '__main__:'</code> suite.</p>

<ul>
<li>(Ruby also implements a similar feature <code>if __file__ == $0</code>).</li>
</ul>
","22493194"
"Check if string matches pattern","233290","","<p>How do I check if a string matches this pattern?</p>

<p>Uppercase letter, number(s), uppercase letter, number(s)...</p>

<p>Example, These would match:</p>

<pre><code>A1B2
B10L1
C1N200J1
</code></pre>

<p>These wouldn't ('^' points to problem)</p>

<pre><code>a1B2
^
A10B
   ^
AB400
^
</code></pre>
","<pre><code>import re
pattern = re.compile(""^([A-Z][0-9]+)+$"")
pattern.match(string)
</code></pre>
","12595082"
"Append a NumPy array to a NumPy array","232884","","<p>I have a numpy_array. Something like <code>[ a b c ]</code>.</p>

<p>And then I want to append it into another NumPy array (just like we create a list of lists). How do we create an array of NumPy arrays containing NumPy arrays?</p>

<p>I tried to do the following without any luck</p>

<pre><code>&gt;&gt;&gt; M = np.array([])
&gt;&gt;&gt; M
array([], dtype=float64)
&gt;&gt;&gt; M.append(a,axis=0)
Traceback (most recent call last):
 File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
AttributeError: 'numpy.ndarray' object has no attribute 'append'
&gt;&gt;&gt; a
array([1, 2, 3])
</code></pre>
","<pre><code>In [1]: import numpy as np

In [2]: a = np.array([[1, 2, 3], [4, 5, 6]])

In [3]: b = np.array([[9, 8, 7], [6, 5, 4]])

In [4]: np.concatenate((a, b))
Out[4]: 
array([[1, 2, 3],
       [4, 5, 6],
       [9, 8, 7],
       [6, 5, 4]])
</code></pre>

<p>or this:</p>

<pre><code>In [1]: a = np.array([1, 2, 3])

In [2]: b = np.array([4, 5, 6])

In [3]: np.vstack((a, b))
Out[3]: 
array([[1, 2, 3],
       [4, 5, 6]])
</code></pre>
","9775378"
"Should I put #! (shebang) in Python scripts, and what form should it take?","232772","","<p>Should I put the shebang in my Python scripts? In what form?</p>

<pre class=""lang-none prettyprint-override""><code>#!/usr/bin/env python 
</code></pre>

<p>or</p>

<pre class=""lang-none prettyprint-override""><code>#!/usr/local/bin/python
</code></pre>

<p>Are these equally portable? Which form is used most?</p>

<p><strong><em>Note:</em></strong> the <a href=""https://github.com/facebook/tornado"" rel=""noreferrer"">tornado</a> project uses the shebang. On the other hand the <a href=""https://www.djangoproject.com/"" rel=""noreferrer"">Django</a> project doesn't.</p>
","<p>The shebang line in any script determines the script's ability to be executed like an standalone executable without typing <code>python</code> beforehand in the terminal or when double clicking it in a file manager (when configured properly). It isn't necessary but generally put there so when someone sees the file opened in an editor, they immediately know what they're looking at. However, which shebang line you use <strong>IS</strong> important.</p>

<p><strong>Correct</strong> usage for Python 3 scripts is:</p>



<pre class=""lang-none prettyprint-override""><code>#!/usr/bin/env python3
</code></pre>

<p>This defaults to version 3.latest. For Python 2.7.latest use <code>python2</code> in place of <code>python3</code>.</p>

<p>The following <strong>should NOT be used</strong> (except for the rare case that you are writing code which is compatible with both Python 2.x and 3.x):</p>

<pre class=""lang-none prettyprint-override""><code>#!/usr/bin/env python
</code></pre>

<p>The reason for these recommendations, given in <a href=""https://www.python.org/dev/peps/pep-0394/#recommendation"" rel=""noreferrer"" title=""PEP 394"">PEP 394</a>, is that <code>python</code> can refer either to <code>python2</code> or <code>python3</code> on different systems. It currently refers to <code>python2</code> on most distributions, but that is likely to change at some point.</p>

<p><strong>Also, DO NOT Use:</strong></p>

<pre class=""lang-none prettyprint-override""><code>#!/usr/local/bin/python
</code></pre>

<blockquote>
  <p>""python may be installed at /usr/bin/python or /bin/python in those
  cases, the above #! will fail.""</p>
</blockquote>

<p>--<a href=""https://mail.python.org/pipermail/tutor/2007-June/054816.html"" rel=""noreferrer"">""#!/usr/bin/env python"" vs ""#!/usr/local/bin/python""</a></p>
","19305076"
"What is the correct syntax for 'else if'?","232104","","<p>I'm a new Python programmer who is making the leap from 2.6.4 to 3.1.1. Everything has gone fine until I tried to use the 'else if' statement. The interpreter gives me a syntax error after the 'if' in 'else if' for a reason I can't seem to figure out.</p>

<pre><code>def function(a):
    if a == '1':
        print ('1a')
    else if a == '2'
        print ('2a')
    else print ('3a')

function(input('input:'))
</code></pre>

<p>I'm probably missing something very simple; however, I haven't been able to find the answer on my own. </p>
","<p>In python ""else if"" is spelled ""elif"".<br>
Also, you need a colon after the <code>elif</code> and the <code>else</code>.</p>

<p>Simple answer to a simple question. I had the same problem, when I first started (in the last couple of weeks).</p>

<p>So your code should read:</p>

<pre><code>def function(a):
    if a == '1':
        print('1a')
    elif a == '2':
        print('2a')
    else:
        print('3a')

function(input('input:'))
</code></pre>
","2395167"
"Python 2.7: Print to File","232044","","<p>Why does trying to print directly to a file instead of <code>sys.stdout</code> produce the following syntax error:</p>

<pre><code>Python 2.7.2+ (default, Oct  4 2011, 20:06:09)
[GCC 4.6.1] on linux2
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
&gt;&gt;&gt; f1=open('./testfile', 'w+')
&gt;&gt;&gt; print('This is a test', file=f1)
  File ""&lt;stdin&gt;"", line 1
    print('This is a test', file=f1)
                            ^
SyntaxError: invalid syntax
</code></pre>

<p>From help(__builtins__) I have the following info:</p>

<pre><code>print(...)
    print(value, ..., sep=' ', end='\n', file=sys.stdout)

    Prints the values to a stream, or to sys.stdout by default.
    Optional keyword arguments:
    file: a file-like object (stream); defaults to the current sys.stdout.
    sep:  string inserted between values, default a space.
    end:  string appended after the last value, default a newline.
</code></pre>

<p>So what would be the right syntax to change the standard stream print writes to?</p>

<p>I know that there are different maybe better ways to write to file but I really don't get why this should be a syntax error...</p>

<p>A nice explanation would be appreciated!</p>
","<p>If you want to use the <code>print</code> function in Python 2, you have to import from <code>__future__</code>:</p>

<pre><code>from __future__ import print_function
</code></pre>

<p>But you can have the same effect without using the function, too:</p>

<pre><code>print &gt;&gt;f1, 'This is a test'
</code></pre>
","9316160"
"real-time plotting in while loop with matplotlib","231992","","<p>I am trying to plot some data from a camera in real time using OpenCV. However the real-time plotting (using matplotlib) doesn't seem to be working.</p>

<p>I've isolated the problem into this simple example:</p>

<pre><code>fig=plt.figure()
plt.axis([0,1000,0,1])

i=0
x=list()
y=list()

while i &lt;1000:
    temp_y=np.random.random()
    x.append(i)
    y.append(temp_y)
    plt.scatter(i,temp_y)
    i+=1
    plt.show()
</code></pre>

<p>I would expect this example to plot 1000 points individually. What actually happens is that the window pops up with the first point showing (ok with that), then waits for the loop to finish before it populates the rest of the graph.</p>

<p>Any thoughts why I am not seeing points populated one at a time?</p>
","<p>Here's the working version of the code in question (requires at least version Matplotlib 1.1.0 from 2011-11-14):</p>

<pre><code>import numpy as np
import matplotlib.pyplot as plt

plt.axis([0, 10, 0, 1])
plt.ion()

for i in range(10):
    y = np.random.random()
    plt.scatter(i, y)
    plt.pause(0.05)

while True:
    plt.pause(0.05)
</code></pre>

<p>Note some of the changes: </p>

<ol>
<li>Call <code>plt.ion()</code> in order to enable interactive plotting. <code>plt.show(block=False)</code> is no longer available.</li>
<li>Call <code>plt.pause(0.05)</code> to both draw the new data and it runs the GUI's event loop (allowing for mouse interaction).</li>
</ol>

<p>The while loop at the end is to keep the window up after all data is plotted.</p>
","15720891"
"How do I loop through a list by twos?","230645","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/434287/what-is-the-most-pythonic-way-to-iterate-over-a-list-in-chunks"">What is the most &ldquo;pythonic&rdquo; way to iterate over a list in chunks?</a>  </p>
</blockquote>



<p>I want to loop through a Python list and process 2 list items at a time. Something like this in another language:</p>

<pre><code>for(int i = 0; i &lt; list.length(); i+=2)
{
   // do something with list[i] and list[i + 1]
}
</code></pre>

<p>What's the best way to accomplish this?</p>
","<p>You can use for in range with a step size of 2:</p>

<p><strong>Python 2</strong></p>

<pre><code>for i in xrange(0,10,2):
  print(i)
</code></pre>

<p><strong>Python 3</strong></p>

<pre><code>for i in range(0,10,2):
  print(i)
</code></pre>

<p><strong>Note:</strong> Use xrange in Python 2 instead of range because it is more efficient as it generates an iterable object, and not the whole list.  </p>
","2990152"
"Is there a ""do ... until"" in Python?","230421","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/743164"">Emulate a do-while loop in Python?</a></p>
</blockquote>

<p>Is there a</p>

<pre><code>do until x:
    ...
</code></pre>

<p>in Python, or a nice way to implement such a looping construct?</p>
","<p><a href=""http://www.daniweb.com/forums/thread39804.html#"" rel=""noreferrer"">There is no do-while loop in Python.</a></p>

<p>This is a similar construct, taken from the link above.</p>

<pre><code> while True:
     do_something()
     if condition():
        break
</code></pre>
","1662176"
"Convert from ASCII string encoded in Hex to plain ASCII?","229984","","<p>How can I convert from hex to plain ASCII in Python?</p>

<p>Note that, for example, I want to convert ""0x7061756c"" to ""paul"".</p>
","<p>A slightly simpler solution:</p>

<pre><code>&gt;&gt;&gt; ""7061756c"".decode(""hex"")
'paul'
</code></pre>
","9641622"
"How can I replace all the NaN values with Zero's in a column of a pandas dataframe","229907","","<p>I have a dataframe as below</p>

<pre><code>      itm Date                  Amount 
67    420 2012-09-30 00:00:00   65211
68    421 2012-09-09 00:00:00   29424
69    421 2012-09-16 00:00:00   29877
70    421 2012-09-23 00:00:00   30990
71    421 2012-09-30 00:00:00   61303
72    485 2012-09-09 00:00:00   71781
73    485 2012-09-16 00:00:00     NaN
74    485 2012-09-23 00:00:00   11072
75    485 2012-09-30 00:00:00  113702
76    489 2012-09-09 00:00:00   64731
77    489 2012-09-16 00:00:00     NaN
</code></pre>

<p>when I try to .apply a function to the Amount column I get the following error.</p>

<pre><code>ValueError: cannot convert float NaN to integer
</code></pre>

<p>I have tried applying a function using .isnan from the Math Module
I have tried the pandas .replace attribute
I tried the .sparse data attribute from pandas 0.9
I have also tried if NaN == NaN statement in a function.
I have also looked at this article <a href=""https://stackoverflow.com/questions/8161836/how-do-i-replace-na-values-with-zeros-in-r"">How do I replace NA values with zeros in an R dataframe?</a> whilst looking at some other articles. 
All the methods I have tried have not worked or do not recognise NaN.
Any Hints or solutions would be appreciated. </p>
","<p>I believe <code>DataFrame.fillna()</code> will do this for you.</p>

<p>Link to Docs for <a href=""http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.fillna.html"" rel=""noreferrer"">a dataframe</a> and for <a href=""http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.fillna.html"" rel=""noreferrer"">a Series</a>. </p>

<p>Example: </p>

<pre><code>In [7]: df
Out[7]: 
          0         1
0       NaN       NaN
1 -0.494375  0.570994
2       NaN       NaN
3  1.876360 -0.229738
4       NaN       NaN

In [8]: df.fillna(0)
Out[8]: 
          0         1
0  0.000000  0.000000
1 -0.494375  0.570994
2  0.000000  0.000000
3  1.876360 -0.229738
4  0.000000  0.000000
</code></pre>

<p>To fill the NaNs in only one column, select just that column. in this case I'm using inplace=True to actually change the contents of df. </p>

<pre><code>In [12]: df[1].fillna(0, inplace=True)
Out[12]: 
0    0.000000
1    0.570994
2    0.000000
3   -0.229738
4    0.000000
Name: 1

In [13]: df
Out[13]: 
          0         1
0       NaN  0.000000
1 -0.494375  0.570994
2       NaN  0.000000
3  1.876360 -0.229738
4       NaN  0.000000
</code></pre>
","13295801"
"How can I explicitly free memory in Python?","229795","","<p>I wrote a Python program that acts on a large input file to create a few million objects representing triangles.  The algorithm is:</p>

<ol>
<li>read an input file</li>
<li>process the file and create a list of triangles, represented by their vertices</li>
<li>output the vertices in the OFF format: a list of vertices followed by a list of triangles.  The triangles are represented by indices into the list of vertices</li>
</ol>

<p>The requirement of OFF that I print out the complete list of vertices before I print out the triangles means that I have to hold the list of triangles in memory before I write the output to file.  In the meanwhile I'm getting memory errors because of the sizes of the lists.  </p>

<p>What is the best way to tell Python that I no longer need some of the data, and it can be freed?</p>
","<p>According to <a href=""http://docs.python.org/library/gc.html"" rel=""noreferrer"">Python Official Documentation</a>, you can force the Garbage Collector to release unreferenced memory with <code>gc.collect()</code></p>
","1316793"
"Can a variable number of arguments be passed to a function?","229684","","<p>In a similar way to using varargs in C or C++:</p>

<pre><code>fn(a, b)
fn(a, b, c, d, ...)
</code></pre>
","<p>Yes.</p>

<p>This is simple and works if you disregard keyword arguments:</p>

<pre><code>def manyArgs(*arg):
  print ""I was called with"", len(arg), ""arguments:"", arg

&gt;&gt;&gt; manyArgs(1)
I was called with 1 arguments: (1,)
&gt;&gt;&gt; manyArgs(1, 2,3)
I was called with 3 arguments: (1, 2, 3)
</code></pre>

<p>As you can see, Python will give you a single tuple with all the arguments.</p>

<p>For keyword arguments you need to accept those as a separate actual argument, as shown in <a href=""https://stackoverflow.com/a/919720/28169"">Skurmedel's answer</a>.</p>
","919684"
"Pythonic way to check if a file exists?","229304","","<p>Which is the preferred way to check if a file exists and if not create it?</p>
","<p>To check if a path is an existing file:</p>

<p><a href=""http://docs.python.org/library/os.path.html#os.path.isfile"" rel=""noreferrer""><code>os.path.isfile(path)</code></a></p>

<blockquote>
  <p>Return <code>True</code> if <em>path</em> is an existing
  regular file. This follows symbolic
  links, so both <code>islink()</code> and
  <code>isfile()</code> can be true for the same
  path.</p>
</blockquote>
","2259387"
"Python List vs. Array - when to use?","229040","","<p>If you are creating a 1d array, you can implement it as a List, or else use the 'array' module in the standard library.  I have always used Lists for 1d arrays.</p>

<p>What is the reason or circumstance where I would want to use the array module instead?</p>

<p>Is it for performance and memory optimization, or am I missing something obvious?</p>
","<p>Basically, Python lists are very flexible and can hold completely heterogeneous, arbitrary data, and they can be appended to very efficiently, in <a href=""http://en.wikipedia.org/wiki/Dynamic_array#Geometric_expansion_and_amortized_cost"" rel=""noreferrer"">amortized constant time</a>.  If you need to shrink and grow your array time-efficiently and without hassle, they are the way to go.  But they use <strong>a lot more space than C arrays</strong>.</p>

<p>The <code>array.array</code> type, on the other hand, is just a thin wrapper on C arrays.  It can hold only homogeneous data, all of the same type, and so it uses only <code>sizeof(one object) * length</code> bytes of memory.  Mostly, you should use it when you need to expose a C array to an extension or a system call (for example, <code>ioctl</code> or <code>fctnl</code>).  It's also a good way to represent a <strong>mutable</strong> string (<code>array('B', bytes)</code>) until that actually becomes available in Python 3.0.</p>

<p>However, if you want to do <strong>math</strong> on a homogeneous array of numeric data, then you're much better off using NumPy, which can automatically vectorize operations on complex multi-dimensional arrays.</p>

<p><strong>To make a long story short</strong>: <code>array.array</code> is useful when you need a homogeneous C array of data for reasons <em>other than doing math</em>.</p>
","176589"
"Different ways of clearing lists","228744","","<p>Is there any reason to do anything more complicated than one of these two lines when you want to clear a list in Python?</p>

<pre><code>old_list = []
old_list = list()
</code></pre>

<p>The reason I ask is that I just saw this in some running code:</p>

<pre><code>del old_list[ 0:len(old_list) ]
</code></pre>
","<p>Clearing a list in place will affect all other references of the same list.</p>

<p>For example, this method doesn't affect other references:</p>

<pre><code>&gt;&gt;&gt; a = [1, 2, 3]
&gt;&gt;&gt; b = a
&gt;&gt;&gt; a = []
&gt;&gt;&gt; print(a)
[]
&gt;&gt;&gt; print(b)
[1, 2, 3]
</code></pre>

<p>But this one does:</p>

<pre><code>&gt;&gt;&gt; a = [1, 2, 3]
&gt;&gt;&gt; b = a
&gt;&gt;&gt; del a[:]      # equivalent to   del a[0:len(a)]
&gt;&gt;&gt; print(a)
[]
&gt;&gt;&gt; print(b)
[]
&gt;&gt;&gt; a is b
True
</code></pre>

<p>You could also do:</p>

<pre><code>&gt;&gt;&gt; a[:] = []
</code></pre>
","850831"
"How to send an email with Gmail as provider using Python?","228621","","<p>I am trying to send email (Gmail) using python, but I am getting following error.</p>

<pre><code>Traceback (most recent call last):  
File ""emailSend.py"", line 14, in &lt;module&gt;  
server.login(username,password)  
File ""/usr/lib/python2.5/smtplib.py"", line 554, in login  
raise SMTPException(""SMTP AUTH extension not supported by server."")  
smtplib.SMTPException: SMTP AUTH extension not supported by server.
</code></pre>

<p>The Python script is the following.</p>

<pre><code>import smtplib
fromaddr = 'user_me@gmail.com'
toaddrs  = 'user_you@gmail.com'
msg = 'Why,Oh why!'
username = 'user_me@gmail.com'
password = 'pwd'
server = smtplib.SMTP('smtp.gmail.com:587')
server.starttls()
server.login(username,password)
server.sendmail(fromaddr, toaddrs, msg)
server.quit()
</code></pre>
","<p>You need to say <code>EHLO</code> before just running straight into <code>STARTTLS</code>:</p>

<pre><code>server = smtplib.SMTP('smtp.gmail.com:587')
server.ehlo()
server.starttls()
</code></pre>

<hr>

<p>Also you should really create <code>From:</code>, <code>To:</code> and <code>Subject:</code> message headers, separated from the message body by a blank line and use <code>CRLF</code> as EOL markers.</p>

<p>E.g.</p>

<pre><code>msg = ""\r\n"".join([
  ""From: user_me@gmail.com"",
  ""To: user_you@gmail.com"",
  ""Subject: Just a message"",
  """",
  ""Why, oh why""
  ])
</code></pre>
","10147497"
"How do I print the key-value pairs of a dictionary in python","228107","","<p>I want to output my key value pairs from a python dictionary as such:</p>

<pre><code>key1 \t value1
key2 \t value2
</code></pre>

<p>I thought I could maybe do it like this:</p>

<pre><code>for i in d:
    print d.keys(i), d.values(i)
</code></pre>

<p>but obviously that's not how it goes as the <code>keys()</code> and <code>values()</code> don't take an argument...</p>

<p>Thanks.</p>
","<p>Your existing code just needs a little tweak. <code>i</code> <em>is</em> the key, so you would just need to use it:</p>

<pre><code>for i in d:
    print i, d[i]
</code></pre>

<p>You can also get an iterator that contains both keys and values. In Python 2, <code>d.items()</code> returns a list of (key, value) tuples, while <code>d.iteritems()</code> returns an iterator that provides the same:</p>

<pre><code>for k, v in d.iteritems():
    print k, v
</code></pre>

<p>In Python 3, <code>d.items()</code> returns the iterator; to get a list, you need to pass the iterator to <code>list()</code> yourself.</p>

<pre><code>for k, v in d.items():
    print(k, v)
</code></pre>
","26660785"
"Print a list in reverse order with range()?","228023","","<p>How can you produce the following list with <code>range()</code> in Python?</p>

<pre><code>[9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
</code></pre>
","<p>use <code>reversed()</code> function:</p>

<pre><code>reversed(range(10))
</code></pre>

<p>It's much more meaningful. </p>

<p><strong>Update:</strong></p>

<p>If you want it to be a list (as btk pointed out):</p>

<pre><code>list(reversed(range(10)))
</code></pre>

<p>Update:</p>

<p>If you want to use only <code>range</code> to achieve the same result, you can use all its parameters. <code>range(start, stop, step)</code></p>

<p>For example, to generate a list <code>[5,4,3,2,1,0]</code>, you can use the following:</p>

<pre><code>range(5, -1, -1)
</code></pre>

<p>It may be less intuitive but as the comments mention, this is more efficient and the right usage of range for reversed list.</p>
","7286465"
"Converting a Pandas GroupBy object to DataFrame","227611","","<p>I'm starting with input data like this</p>

<pre><code>df1 = pandas.DataFrame( { 
    ""Name"" : [""Alice"", ""Bob"", ""Mallory"", ""Mallory"", ""Bob"" , ""Mallory""] , 
    ""City"" : [""Seattle"", ""Seattle"", ""Portland"", ""Seattle"", ""Seattle"", ""Portland""] } )
</code></pre>

<p>Which when printed appears as this:</p>

<pre><code>   City     Name
0   Seattle    Alice
1   Seattle      Bob
2  Portland  Mallory
3   Seattle  Mallory
4   Seattle      Bob
5  Portland  Mallory
</code></pre>

<p>Grouping is simple enough:</p>

<pre><code>g1 = df1.groupby( [ ""Name"", ""City""] ).count()
</code></pre>

<p>and printing yields a <code>GroupBy</code> object:</p>

<pre><code>                  City  Name
Name    City
Alice   Seattle      1     1
Bob     Seattle      2     2
Mallory Portland     2     2
        Seattle      1     1
</code></pre>

<p>But what I want eventually is another DataFrame object that contains all the rows in the GroupBy object. In other words I want to get the following result:</p>

<pre><code>                  City  Name
Name    City
Alice   Seattle      1     1
Bob     Seattle      2     2
Mallory Portland     2     2
Mallory Seattle      1     1
</code></pre>

<p>I can't quite see how to accomplish this in the pandas documentation. Any hints would be welcome.</p>
","<p><code>g1</code> here <em>is</em> a DataFrame. It has a hierarchical index, though:</p>

<pre><code>In [19]: type(g1)
Out[19]: pandas.core.frame.DataFrame

In [20]: g1.index
Out[20]: 
MultiIndex([('Alice', 'Seattle'), ('Bob', 'Seattle'), ('Mallory', 'Portland'),
       ('Mallory', 'Seattle')], dtype=object)
</code></pre>

<p>Perhaps you want something like this?</p>

<pre><code>In [21]: g1.add_suffix('_Count').reset_index()
Out[21]: 
      Name      City  City_Count  Name_Count
0    Alice   Seattle           1           1
1      Bob   Seattle           2           2
2  Mallory  Portland           2           2
3  Mallory   Seattle           1           1
</code></pre>

<p>Or something like:</p>

<pre><code>In [36]: DataFrame({'count' : df1.groupby( [ ""Name"", ""City""] ).size()}).reset_index()
Out[36]: 
      Name      City  count
0    Alice   Seattle      1
1      Bob   Seattle      2
2  Mallory  Portland      2
3  Mallory   Seattle      1
</code></pre>
","10374456"
"Python date string to date object","227581","","<p>How do I convert a string to a date object in python? </p>

<p>The string would be: <code>""24052010""</code> (corresponding to the format: <code>""%d%m%Y""</code>)</p>

<p>I <strong>don't</strong> want a datetime.datetime object, but rather a datetime.date</p>
","<p>You can use <a href=""http://docs.python.org/library/datetime.html#strftime-and-strptime-behavior"" rel=""noreferrer""><code>strptime</code></a> in the <a href=""http://docs.python.org/library/datetime.html"" rel=""noreferrer""><code>datetime</code></a> package of Python:</p>

<pre><code>&gt;&gt;&gt; datetime.datetime.strptime('24052010', ""%d%m%Y"").date()
datetime.date(2010, 5, 24)
</code></pre>
","2803877"
"How to compare two dates?","227178","","<p>How would I compare two dates to see which is later, using Python?</p>

<p>For example, I want to check if the current date is past the last date in this list I am creating, of holiday dates, so that it will send an email automatically, telling the admin to update the holiday.txt file.</p>
","<p>Use the <code>datetime</code> method and the operator <code>&lt;</code> and its kin.</p>

<pre><code>&gt;&gt;&gt; from datetime import datetime
&gt;&gt;&gt; past = datetime.now()
&gt;&gt;&gt; present = datetime.now()
&gt;&gt;&gt; past &lt; present
True
&gt;&gt;&gt; datetime(3000, 1, 1) &lt; present
False
&gt;&gt;&gt; present - datetime(2000, 4, 4)
datetime.timedelta(4242, 75703, 762105)
</code></pre>
","8142411"
"How to overcome ""datetime.datetime not JSON serializable""?","227135","","<p>I have a basic dict as follows:</p>

<pre><code>sample = {}
sample['title'] = ""String""
sample['somedate'] = somedatetimehere
</code></pre>

<p>When I try to do <code>jsonify(sample)</code> I get:</p>

<p><code>TypeError: datetime.datetime(2012, 8, 8, 21, 46, 24, 862000) is not JSON serializable</code></p>

<p>What can I do such that my dictionary sample can overcome the error above?</p>

<p>Note: Though it may not be relevant, the dictionaries are generated from the retrieval of records out of mongodb where when I print out <code>str(sample['somedate'])</code>, the output is <code>2012-08-08 21:46:24.862000</code>.</p>
","<p>As you are using mongoengine (per comments) and pymongo is a dependency, pymongo has built-in utilities to help with json serialization:<br>
<a href=""http://api.mongodb.org/python/1.10.1/api/bson/json_util.html"" rel=""noreferrer"">http://api.mongodb.org/python/1.10.1/api/bson/json_util.html</a></p>

<p>Example usage (serialization):</p>

<pre><code>from bson import json_util
import json

json.dumps(anObject, default=json_util.default)
</code></pre>

<p>Example usage (deserialization):</p>

<pre><code>json.loads(aJsonString, object_hook=json_util.object_hook)
</code></pre>
","11875813"
"Call a function with argument list in python","226744","","<p>I'm trying to call a function inside another function in python, but can't find the right syntax. What I want to do is something like this:</p>

<pre><code>def wrapper(func, args):
    func(args)

def func1(x):
    print(x)

def func2(x, y, z):
    return x+y+z

wrapper(func1, [x])
wrapper(func2, [x, y, z])
</code></pre>

<p>In this case first call will work, and second won't.
What I want to modify is the wrapper function and not the called functions.</p>
","<p>To expand a little on the other answers:</p>

<p>In the line:</p>

<pre><code>def wrapper(func, *args):
</code></pre>

<p>The * next to <code>args</code> means ""take the rest of the parameters given and put them in a list called <code>args</code>"". </p>

<p>In the line:</p>

<pre><code>    func(*args)
</code></pre>

<p>The * next to <code>args</code> here means ""take this list called args and 'unwrap' it into the rest of the parameters.</p>

<p>So you can do the following:</p>

<pre><code>def wrapper1(func, *args): # with star
    func(*args)

def wrapper2(func, args): # without star
    func(*args)

def func2(x, y, z):
    print x+y+z

wrapper1(func2, 1, 2, 3)
wrapper2(func2, [1, 2, 3])
</code></pre>

<p>In <code>wrapper2</code>, the list is passed explicitly, but in both wrappers <code>args</code> contains the list <code>[1,2,3]</code>.</p>
","817296"
"UnicodeDecodeError, invalid continuation byte","226703","","<p>Why is the below item failing? and why does it succeed with ""latin-1"" codec?</p>

<pre><code>o = ""a test of \xe9 char"" #I want this to remain a string as this is what I am receiving
v = o.decode(""utf-8"")
</code></pre>

<p>results in:</p>

<pre><code> Traceback (most recent call last):  
 File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;  
 File ""C:\Python27\lib\encodings\utf_8.py"",
 line 16, in decode
     return codecs.utf_8_decode(input, errors, True) UnicodeDecodeError:
 'utf8' codec can't decode byte 0xe9 in position 10: invalid continuation byte
</code></pre>
","<p>In binary, 0xE9 looks like <code>1110 1001</code>. If you read about <a href=""http://en.wikipedia.org/wiki/UTF-8#Design"" rel=""noreferrer"">UTF-8 on Wikipedia</a>, you’ll see that such a byte must be followed by two of the form <code>10xx xxxx</code>. So, for example:</p>

<pre><code>&gt;&gt;&gt; b'\xe9\x80\x80'.decode('utf-8')
u'\u9000'
</code></pre>

<p>But that’s just the mechanical cause of the exception. In this case, you have a string that is almost certainly encoded in latin 1. You can see how UTF-8 and latin 1 look different:</p>

<pre><code>&gt;&gt;&gt; u'\xe9'.encode('utf-8')
b'\xc3\xa9'
&gt;&gt;&gt; u'\xe9'.encode('latin-1')
b'\xe9'
</code></pre>

<p>(Note, I'm using a mix of Python 2 and 3 representation here. The input is valid in any version of Python, but your Python interpreter is unlikely to actually show both unicode and byte strings in this way.)</p>
","5552623"
"Printing Lists as Tabular Data","226679","","<p>I am quite new to Python and I am now struggling with formatting my data nicely for printed output.</p>

<p>I have one list that is used for two headings, and a matrix that should be the contents of the table. Like so:</p>

<pre><code>teams_list = [""Man Utd"", ""Man City"", ""T Hotspur""]
data = np.array([[1, 2, 1],
                 [0, 1, 0],
                 [2, 4, 2]])
</code></pre>

<p>Note that the heading names are not necessarily the same lengths. The data entries are all integers, though.</p>

<p>Now, I want to represent this in a table format, something like this:</p>

<pre><code>            Man Utd   Man City   T Hotspur
  Man Utd         1          0           0
 Man City         1          1           0
T Hotspur         0          1           2
</code></pre>

<p>I have a hunch that there must be a data structure for this, but I cannot find it. I have tried using a dictionary and formatting the printing, I have tried for-loops with indentation and I have tried printing as strings.</p>

<p>I am sure there must be a very simple way to do this, but I am probably missing it due to lack of experience.</p>
","<p>Some ad-hoc code for Python 2.7:</p>

<pre><code>row_format =""{:&gt;15}"" * (len(teams_list) + 1)
print row_format.format("""", *teams_list)
for team, row in zip(teams_list, data):
    print row_format.format(team, *row)
</code></pre>

<p>This relies on <a href=""http://docs.python.org/py3k/library/stdtypes.html#str.format"" rel=""noreferrer""><code>str.format()</code></a> and the <a href=""http://docs.python.org/py3k/library/string.html#formatspec"" rel=""noreferrer"">Format Specification Mini-Language</a>.</p>
","9536084"
"Use a list of values to select rows from a pandas dataframe","226196","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/12065885/how-to-filter-the-dataframe-rows-of-pandas-by-within-in"">how to filter the dataframe rows of pandas by &ldquo;within&rdquo;/&ldquo;in&rdquo;?</a>  </p>
</blockquote>



<p>Lets say I have the following pandas dataframe:</p>

<pre><code>df = DataFrame({'A' : [5,6,3,4], 'B' : [1,2,3, 5]})
df

     A   B
0    5   1
1    6   2
2    3   3
3    4   5
</code></pre>

<p>I can subset based on a specific value:</p>

<pre><code>x = df[df['A'] == 3]
x

     A   B
2    3   3
</code></pre>

<p>But how can I subset based on a list of values? - something like this:</p>

<pre><code>list_of_values = [3,6]

y = df[df['A'] in list_of_values]
</code></pre>
","<p>This is indeed a duplicate of <a href=""https://stackoverflow.com/questions/12065885/how-to-filter-the-dataframe-rows-of-pandas-by-within-in"">how to filter the dataframe rows of pandas by ""within""/""in""?</a>, translating the response to your example gives:</p>

<pre><code>In [5]: df = DataFrame({'A' : [5,6,3,4], 'B' : [1,2,3, 5]})

In [6]: df
Out[6]:
   A  B
0  5  1
1  6  2
2  3  3
3  4  5

In [7]: df[df['A'].isin([3, 6])]
Out[7]:
   A  B
1  6  2
2  3  3
</code></pre>
","12098586"
"Extracting text from HTML file using Python","225576","","<p>I'd like to extract the text from an HTML file using Python.  I want essentially the same output I would get if I copied the text from a browser and pasted it into notepad.  </p>

<p>I'd like something more robust than using regular expressions that may fail on poorly formed HTML.  I've seen many people recommend Beautiful Soup, but I've had a few problems using it.  For one, it picked up unwanted text, such as JavaScript source.  Also, it did not interpret HTML entities.  For example, I would expect &amp;#39; in HTML source to be converted to an apostrophe in text, just as if I'd pasted the browser content into notepad.</p>

<p><strong>Update</strong> <code>html2text</code> looks promising. It handles HTML entities correctly and ignores JavaScript.  However, it does not exactly produce plain text; it produces markdown that would then have to be turned into plain text. It comes with no examples or documentation, but the code looks clean.</p>

<hr>

<p>Related questions:</p>

<ul>
<li><a href=""https://stackoverflow.com/questions/37486/filter-out-html-tags-and-resolve-entities-in-python"">Filter out HTML tags and resolve entities in python</a></li>
<li><a href=""https://stackoverflow.com/questions/57708/convert-xmlhtml-entities-into-unicode-string-in-python"">Convert XML/HTML Entities into Unicode String in Python</a></li>
</ul>
","<p><a href=""http://www.aaronsw.com/2002/html2text/"" rel=""noreferrer"">html2text</a> is a Python program that does a pretty good job at this.</p>
","328389"
"How to print the full NumPy array?","225483","","<p>When I print a numpy array, I get a truncated representation, but I want the full array. </p>

<p>Is there any way to do this?</p>

<p><strong>Examples:</strong></p>

<pre><code>&gt;&gt;&gt; numpy.arange(10000)
array([   0,    1,    2, ..., 9997, 9998, 9999])
&gt;&gt;&gt; numpy.arange(10000).reshape(250,40)
array([[   0,    1,    2, ...,   37,   38,   39],
       [  40,   41,   42, ...,   77,   78,   79],
       [  80,   81,   82, ...,  117,  118,  119],
       ..., 
       [9880, 9881, 9882, ..., 9917, 9918, 9919],
       [9920, 9921, 9922, ..., 9957, 9958, 9959],
       [9960, 9961, 9962, ..., 9997, 9998, 9999]])
</code></pre>
","<p>To clarify on Reed's reply</p>

<pre><code>import numpy
numpy.set_printoptions(threshold=numpy.nan)
</code></pre>

<p>Note that the reply as given above works with an initial 'from numpy import *', which is not advisable. 
This also works for me</p>

<pre><code>numpy.set_printoptions(threshold='nan')
</code></pre>

<p>For full documentation, see <a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.set_printoptions.html"" rel=""noreferrer"">http://docs.scipy.org/doc/numpy/reference/generated/numpy.set_printoptions.html</a>. </p>
","1988024"
"Convert a Python list with strings all to lowercase or uppercase","225286","","<p>I have a python list variable that contains strings. Is there a python function that can convert all the strings in one pass to lowercase and vice versa, uppercase?</p>
","<p>It can be done with list comprehensions. These basically take the form of <code>[function-of-item for item in some-list]</code>. For example, to create a new list where all the items are lower-cased (or upper-cased in the second snippet), you would use:</p>

<pre><code>&gt;&gt;&gt; [x.lower() for x in [""A"",""B"",""C""]]
['a', 'b', 'c']

&gt;&gt;&gt; [x.upper() for x in [""a"",""b"",""c""]]
['A', 'B', 'C']
</code></pre>

<p>You can also use the <code>map</code> function:</p>

<pre><code>&gt;&gt;&gt; map(lambda x:x.lower(),[""A"",""B"",""C""])
['a', 'b', 'c']
&gt;&gt;&gt; map(lambda x:x.upper(),[""a"",""b"",""c""])
['A', 'B', 'C']
</code></pre>
","1801676"
"TypeError: Missing 1 required positional argument: 'self'","225137","","<p>I am new to python and have hit a wall. I followed several tutorials but cant get past the error:</p>

<pre><code>Traceback (most recent call last):
  File ""C:\Users\Dom\Desktop\test\test.py"", line 7, in &lt;module&gt;
    p = Pump.getPumps()
TypeError: getPumps() missing 1 required positional argument: 'self'
</code></pre>

<p>I examined several tutorials but there doesn't seem to be anything different from my code. The only thing I can think of is that python 3.3 requires different syntax.</p>

<p>main scipt:</p>

<pre><code># test script

from lib.pump import Pump

print (""THIS IS A TEST OF PYTHON"") # this prints

p = Pump.getPumps()

print (p)
</code></pre>

<p>Pump class:</p>

<pre><code>import pymysql

class Pump:

    def __init__(self):
        print (""init"") # never prints


    def getPumps(self):
                # Open database connection
                # some stuff here that never gets executed because of error
</code></pre>

<p>If I understand correctly ""self"" is passed to the constructor and methods automatically. What am I doing wrong here?</p>

<p>I am using windows 8 with python 3.3.2</p>
","<p>You need to instantiate a class instance here.</p>

<p>Use</p>

<pre><code>p = Pump()
p.getPumps()
</code></pre>

<p>Small example - </p>

<pre><code>&gt;&gt;&gt; class TestClass:
        def __init__(self):
            print ""in init""
        def testFunc(self):
            print ""in Test Func""


&gt;&gt;&gt; testInstance = TestClass()
in init
&gt;&gt;&gt; testInstance.testFunc()
in Test Func
</code></pre>
","17534363"
"How to round a floating point number up to certain decimal place?","225120","","<p>Suppose I am having <code>8.8333333333333339</code> and I want to convert it to <code>8.84</code>, how can I accomplish this in python? <code>round(8.8333333333333339, 2)</code> gives <code>8.83</code> and not <code>8.84</code>. I am new to python or programming in general.</p>

<p>I don't want to print it as a string, the result will be further used. For more information on the problem please check <a href=""http://openbookproject.net/pybiblio/practice/wilson/loan.php"" rel=""noreferrer""><em>Tim Wilson's Python Programming Tips: Loan and payment calculator</em></a>.</p>
","<p><code>8.833333333339</code> (or <code>8.833333333333334</code>, the result of <code>106.00/12</code>) properly rounded to two decimal places is <code>8.83</code>. Mathematically it sounds like what you want is a <a href=""http://en.wikipedia.org/wiki/Floor_and_ceiling_functions"" rel=""noreferrer"">ceiling function</a>. The one in Python's <code>math</code> module is named <a href=""http://docs.python.org/library/math.html?highlight=ceil#math.ceil"" rel=""noreferrer""><code>ceil</code></a>:</p>

<pre><code>import math

v = 8.8333333333333339
print(math.ceil(v*100)/100)  # -&gt; 8.84
</code></pre>

<p>Respectively, the floor and ceiling functions generally map a real number to the largest previous or smallest following integer which has zero decimal places — so to use them for 2 decimal places the number is first multiplied by 10<sup>2</sup> (or 100) to shift the decimal point and is then divided by it afterwards to compensate.</p>

<p>If you don't want to use the <code>math</code> module for some reason, you can use this (minimally tested) implementation I just wrote:</p>

<pre><code>def ceiling(x):
    n = int(x)
    return n if n-1 &lt; x &lt;= n else n+1
</code></pre>

<h3><em>How this applies to the linked <a href=""http://openbookproject.net/pybiblio/practice/wilson/loan.php"" rel=""noreferrer"">loan and payment calculator problem</a></em></h3>

<p><a href=""https://i.stack.imgur.com/5AuhV.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/5AuhV.png"" alt=""screenshot of loan calculator output""></a></p>

<p>From the sample output it appears that they <strong><em>rounded up</em></strong> the monthly payment, which is what many call the effect of the ceiling function. This means that each month a little more than <sup>1</sup>&frasl;<sub>12</sub> of the total amount is being paid. That made the final payment a little smaller than usual — leaving a remaining unpaid balance of only <code>8.76</code>.</p>

<p>It would have been equally valid to use normal rounding producing a monthly payment of <code>8.83</code> and a slightly higher final payment of <code>8.87</code>. However, in the real world people generally don't like to have their payments go up, so rounding up each payment is the common practice — it also returns the money to the lender more quickly.</p>
","4519044"
"Python module for converting PDF to text","224924","","<p>Which are the best Python modules to convert PDF files into text? </p>
","<p>Try PDFMiner.  It can extract text from PDF files as HTML, SGML or ""Tagged PDF"" format.</p>

<p><a href=""http://www.unixuser.org/~euske/python/pdfminer/index.html"" rel=""nofollow noreferrer"">http://www.unixuser.org/~euske/python/pdfminer/index.html</a></p>

<p>The Tagged PDF format seems to be the cleanest, and stripping out the XML tags leaves just the bare text.</p>

<p>A Python 3 version is available under:</p>

<ul>
<li><a href=""https://github.com/pdfminer/pdfminer.six"" rel=""nofollow noreferrer"">https://github.com/pdfminer/pdfminer.six</a></li>
</ul>
","25689"
"Retrieving the output of subprocess.call()","224757","","<p>How can I get the output of a process run using <code>subprocess.call()</code>?</p>

<p>Passing a <code>StringIO.StringIO</code> object to <code>stdout</code> gives this error:</p>

<pre><code>Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
  File ""/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/subprocess.py"", line 444, in call
    return Popen(*popenargs, **kwargs).wait()
  File ""/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/subprocess.py"", line 588, in __init__
    errread, errwrite) = self._get_handles(stdin, stdout, stderr)
  File ""/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/subprocess.py"", line 945, in _get_handles
    c2pwrite = stdout.fileno()
AttributeError: StringIO instance has no attribute 'fileno'
&gt;&gt;&gt; 
</code></pre>
","<p>Output from <code>subprocess.call()</code> should only be redirected to files.</p>

<p>You should use <code>subprocess.Popen()</code> instead. Then you can pass <code>subprocess.PIPE</code> for the stderr, stdout, and/or stdin parameters and read from the pipes by using the <code>communicate()</code> method:</p>

<pre><code>from subprocess import Popen, PIPE

p = Popen(['program', 'arg1'], stdin=PIPE, stdout=PIPE, stderr=PIPE)
output, err = p.communicate(b""input data that is passed to subprocess' stdin"")
rc = p.returncode
</code></pre>

<p>The reasoning is that the file-like object used by <code>subprocess.call()</code> must have a real file descriptor, and thus implement the <code>fileno()</code> method. Just using any file-like object won't do the trick.</p>

<p>See <a href=""http://docs.python.org/library/subprocess.html#replacing-shell-pipeline"" rel=""noreferrer"">here</a> for more info.</p>
","1996540"
"django import error - No module named core.management","223942","","<p>Ok, I see plenty of these errors around. I have tried everything I know to do and have yet to figure this out.</p>

<p>I am working on a development server running python 2.5 and Django 1.3. Django 1.3 was installed using python setup.py install after unpacking the tar.gz download.</p>

<p>All works well, I seldom have the need to run <code>manage.py</code> but am trying to use the new staticfiles app and am running into problems.</p>

<pre><code>python manage.py collectstatic
Traceback (most recent call last):
  File ""manage.py"", line 2, in &lt;module&gt;
    from django.core.management import execute_manager
ImportError: No module named core.management
</code></pre>

<p>Ok, so I have <code>PATH</code> issue.</p>

<p>From <a href=""http://docs.djangoproject.com/en/dev//topics/install/#finding-site-packages"" rel=""noreferrer"">Django install</a> I double check my <code>site-packages</code> directory.</p>

<pre><code>python -c ""from distutils.sysconfig import get_python_lib; print get_python_lib()""
/usr/lib/python2.5/site-packages
</code></pre>

<p>Ok, let's check out what I have, echo $PYTHON_PATH was empty, so I set it</p>

<pre><code>export PYTHON_PATH=/usr/lib/python2.5/site-packages/django
</code></pre>

<p>Still no luck. Lets check what sys.path has to say</p>

<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; print sys.path
['', '/usr/lib/python2.5', '/usr/lib/python2.5/plat-linux2', '/usr/lib/python2.5/lib-tk', '/usr/lib/python2.5/lib-dynload', '/usr/local/lib/python2.5/site-packages', '/usr/lib/python2.5/site-packages', '/usr/lib/python2.5/site-packages/PIL', '/usr/lib/python2.5/site-packages/django', '/var/lib/python-support/python2.5']
</code></pre>

<p>path is there, I even created /usr/lib/python2.5/site-packages/django.pth with contents</p>

<pre><code>cat /usr/lib/python2.5/site-packages/django.pth 
/usr/lib/python2.5/site-packages/django/
</code></pre>

<p>Anyone got an clues to what is going on here? </p>

<p>I found a symlink further up the path that was getting in the way, but no on to a new error.</p>

<pre><code>python manage.py collectstatic
Traceback (most recent call last):
  File ""manage.py"", line 14, in &lt;module&gt;
    execute_manager(settings)
  File ""/usr/lib/python2.5/site-packages/django/core/management/__init__.py"", line 438, in execute_manager
    utility.execute()
  File ""/usr/lib/python2.5/site-packages/django/core/management/__init__.py"", line 349, in execute
    version=get_version(),
  File ""/usr/lib/python2.5/site-packages/django/__init__.py"", line 12, in get_version
    from django.utils.version import get_svn_revision
ImportError: No module named utils.version
</code></pre>

<p>I also tried creating a new project to see if there were any issues there and get the same utils.version error.</p>

<p>Side node: Unode from #django helped me a bit, set up virtualenv on same machine and got past the errors so still not sure what is up with this actual install here, but it seems to not be in the django projects but in the django/python install.</p>
","<p>As known this was a path issue.</p>

<p>the base of my custom packages shared a name with a directory set in a /etc/profile. The packages were in a different location however for the webserver. So I removed the offending entries from my $PYTHONPATH and was good to go!</p>

<p>Thanks for the help.</p>
","6059969"
"python: list vs tuple, when to use each?","223926","","<p>In Python, when should you use lists and when tuples?</p>

<p>Sometimes you don't have a choice, for example if you have</p>

<pre><code>""hello %s you are %s years old"" % x
</code></pre>

<p>then x must be a tuple.</p>

<p>But if I am the one who designs the API and gets to choose the data types, then what are the guidelines?</p>
","<p>There's a strong culture of tuples being for heterogeneous collections, similar to what you'd use <code>struct</code>s for in C, and lists being for homogeneous collections, similar to what you'd use arrays for.  But I've never quite squared this with the mutability issue mentioned in the other answers.  Mutability has teeth to it (you actually can't change a tuple), while homogeneity is not enforced, and so seems to be a much less interesting distinction.</p>
","1708610"
"Counting array elements in Python","223874","","<p>How can I count the number of elements in an array, because contrary to logic array.count(string) does not count all the elements in the array, it just searches for the number of occurrences of string.</p>
","<p>The method len() returns the number of elements in the list.</p>

<p>Syntax:</p>

<pre><code>len(myArray)
</code></pre>

<p>Eg:</p>

<pre><code>myArray = [1, 2, 3]
len(myArray)
</code></pre>

<p>Output:</p>

<pre><code>3
</code></pre>

<p></p>
","187463"
"Python 3: ImportError ""No Module named Setuptools""","223079","","<p>I'm having troubles with installing packages in Python 3.</p>

<p>I have always installed packages with <code>setup.py install</code> command. But now when I try to install ansicolors package I get:</p>

<blockquote>
  <p>importerror ""No Module named Setuptools""</p>
</blockquote>

<p>I have no idea what to do because I haven't have Setuptools never and still I have installed many packages with <code>setup.py install</code> command without setuptools and now I should get setuptools.</p>

<p>I can't even install setuptools because I have python 3.3 and setuptools doesn't support python 3. </p>

<p>Why my install command doesn't work anymore?</p>
","<p>Your <code>setup.py</code> file needs <code>setuptools</code>. Many of the Python packages use <code>distutils</code> for the distribution, but some use <code>setuptools</code>, a more complete package. <a href=""https://stackoverflow.com/questions/6344076/differences-between-distribute-distutils-and-setuptools"">Here</a> is a question about the differences between them.</p>

<p><s>Regarding Python 3.3, you should install <a href=""http://pypi.python.org/pypi/distribute"" rel=""noreferrer""><code>distribute</code></a> instead. It is a more recent package that works in the same way as <code>setuptools</code> (it's even called <code>setuptools</code> internally).</s></p>

<p><strong>UPDATE (Oct 2014):</strong> Distribute has been merged with setuptools 0.7, so just get setuptools for both Python 2.7 and 3.x</p>

<p>To install this on Debian:</p>

<pre><code>sudo apt-get install python-setuptools
</code></pre>

<p>For Python 3.x</p>

<pre><code>sudo apt-get install python3-setuptools
</code></pre>
","14426553"
"Split a string by a delimiter in python","223047","","<p>How to split this string where $$TEXT$$ is the delimiter.</p>

<pre><code>  1.MATCHES$$TEXT$$STRING  
  2.MATCHES $$TEXT$$ STRING   
</code></pre>
","<p><code>string.split('$$TEXT$$')</code> ?</p>

<pre><code>&gt;&gt;&gt; a=""1.MATCHES$$TEXT$$STRING""
&gt;&gt;&gt; a.split(""$$TEXT$$"")
['1.MATCHES', 'STRING']

&gt;&gt;&gt; a=""2.MATCHES $$TEXT$$ STRING""
&gt;&gt;&gt; a.split(""$$TEXT$$"")
['2.MATCHES ', ' STRING']
</code></pre>

<p>and:</p>

<pre><code>&gt;&gt;&gt; [x.strip() for x in ""2.MATCHES $$TEXT$$ STRING"".split(""$$TEXT$$"")]
['2.MATCHES', 'STRING']
</code></pre>
","3475270"
"ValueError: invalid literal for int () with base 10","223041","","<p>I wrote a program to solve <code>y = a^x</code> and then project it on a graph. The problem is that whenever <code>a &lt; 1</code> I get the error: </p>

<blockquote>
  <p>ValueError: invalid literal for int () with base 10.</p>
</blockquote>

<p>Any suggestions? </p>

<p>Here's the traceback:</p>

<pre><code>Traceback (most recent call last): 
   File ""C:\Users\kasutaja\Desktop\EksponentfunktsioonTEST - koopia.py"", line 13, in &lt;module&gt; 
   if int(a) &lt; 0: 
ValueError: invalid literal for int() with base 10: '0.3' 
</code></pre>

<p>The problem arises every time I put a number that is smaller than one, but larger than 0. For this example it was 0.3 .</p>

<p>This is my code:</p>

<pre><code>#  y = a^x

import time
import math
import sys
import os
import subprocess
import matplotlib.pyplot as plt
print (""y = a^x"")
print ("""")
a = input (""Enter 'a' "")
print ("""")
if int(a) &lt; 0:
    print (""'a' is negative, no solution"")
elif int(a) == 1:
    print (""'a' is equal with 1, no solution"")
else:
    fig = plt.figure ()
    x = [-2,-1.75,-1.5,-1.25,-1,-0.75,-0.5,-0.25,0,0.25,0.5,0.75,1,1.25,1.5,1.75,2]
    y = [int(a)**(-2),int(a)**(-1.75),int(a)**(-1.5),int(a)**(-1.25),
            int(a)**(-1),int(a)**(-0.75),int(a)**(-0.5),int(a)**(-0.25),
            int(a)**(0),int(a)**(0.25),int(a)**(0.5),int(a)**(0.75),
            int(a)**1,int(a)**(1.25),int(a)**(1.5),int(a)**(1.75), int(a)**(2)]


    ax = fig.add_subplot(1,1,1)
    ax.set_title('y = a**x')
    ax.plot(x,y)
    ax.spines['left'].set_position('zero')
    ax.spines['right'].set_color('none')
    ax.spines['bottom'].set_position('zero')
    ax.spines['top'].set_color('none')
    ax.spines['left'].set_smart_bounds(True)
    ax.spines['bottom'].set_smart_bounds(True)
    ax.xaxis.set_ticks_position('bottom')
    ax.yaxis.set_ticks_position('left')


    plt.savefig(""graph.png"")
    subprocess.Popen('explorer ""C:\\Users\\kasutaja\\desktop\\graph.png""')

def restart_program(): 
    python = sys.executable
    os.execl(python, python, * sys.argv)

if __name__ == ""__main__"":
    answer = input(""Restart program? "")
    if answer.strip() in ""YES yes Yes y Y"".split():
        restart_program()
    else:
        os.remove(""C:\\Users\\kasutaja\\desktop\\graph.png"")
</code></pre>
","<h1>Answer:</h1>

<p>Your traceback is telling you that <code>int()</code> takes integers, you are trying to give a decimal, so you need to use <code>float()</code>:</p>

<pre><code>a = float(a)
</code></pre>

<p>This should work as expected:</p>

<pre><code>&gt;&gt;&gt; int(input(""Type a number: ""))
Type a number: 0.3
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
ValueError: invalid literal for int() with base 10: '0.3'
&gt;&gt;&gt; float(input(""Type a number: ""))
Type a number: 0.3
0.3
</code></pre>

<p>Computers store numbers in a variety of different ways. Python has two main ones. Integers, which store whole numbers (ℤ), and floating point numbers, which store real numbers (ℝ). You need to use the right one based on what you require.</p>

<p>(As a note, Python is pretty good at abstracting this away from you, most other language also have double precision floating point numbers, for instance, but you don't need to worry about that. Since 3.0, Python will also automatically convert integers to floats if you divide them, so it's actually very easy to work with.)</p>

<h1>Previous guess at answer before we had the traceback:</h1>

<p>Your problem is that whatever you are typing is can't be converted into a number. This could be caused by a lot of things, for example:</p>

<pre><code>&gt;&gt;&gt; int(input(""Type a number: ""))
Type a number: -1
-1
&gt;&gt;&gt; int(input(""Type a number: ""))
Type a number: - 1
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
ValueError: invalid literal for int() with base 10: '- 1'
</code></pre>

<p>Adding a space between the <code>-</code> and <code>1</code> will cause the string not to be parsed correctly into a number. This is, of course, just an example, and you will have to tell us what input you are giving for us to be able to say for sure what the issue is.</p>

<h1>Advice on  code style:</h1>

<pre><code>y = [int(a)**(-2),int(a)**(-1.75),int(a)**(-1.5),int(a)**(-1.25),
            int(a)**(-1),int(a)**(-0.75),int(a)**(-0.5),int(a)**(-0.25),
            int(a)**(0),int(a)**(0.25),int(a)**(0.5),int(a)**(0.75),
            int(a)**1,int(a)**(1.25),int(a)**(1.5),int(a)**(1.75), int(a)**(2)]
</code></pre>

<p>This is an example of a really bad coding habit. Where you are copying something again and again something is wrong. Firstly, you use <code>int(a)</code> a ton of times, wherever you do this, you should instead assign the value to a variable, and use that instead, avoiding typing (and forcing the computer to calculate) the value again and again:</p>

<pre><code>a = int(a)
</code></pre>

<p>In this example I assign the value back to <code>a</code>, overwriting the old value with the new one we want to use.</p>

<pre><code>y = [a**i for i in x]
</code></pre>

<p>This code produces the same result as the monster above, without the masses of writing out the same thing again and again. It's a simple <a href=""http://www.youtube.com/watch?v=pShL9DCSIUw"" rel=""nofollow noreferrer"">list comprehension</a>. This also means that if you edit <code>x</code>, you don't need to do anything to <code>y</code>, it will naturally update to suit.</p>

<p>Also note that <a href=""http://www.python.org/dev/peps/pep-0008/"" rel=""nofollow noreferrer"">PEP-8, the Python style guide</a>, <a href=""http://www.python.org/dev/peps/pep-0008/#pet-peeves"" rel=""nofollow noreferrer"">suggests strongly that you don't leave spaces between an identifier and the brackets when making a function call</a>.</p>
","13861656"
"ImportError: No module named PIL","222224","","<p>I use this command in the shell to install PIL:</p>

<pre><code>easy_install PIL
</code></pre>

<p>then I run <code>python</code> and type this: <code>import PIL</code>. But I get this error:</p>

<pre><code>Traceback (most recent call last):
  File ""&lt;console&gt;"", line 1, in &lt;module&gt;
ImportError: No module named PIL
</code></pre>

<p>I've never had such problem, what do you think?</p>
","<p>You must do</p>

<pre><code>import Image
</code></pre>

<p>instead of <code>import PIL</code> (PIL is in fact not imported this way).  Since <code>import Image</code> works for you, this means that you have in fact installed PIL.</p>

<p>Having a different name for the library and the Python module is unusual, but this is what was chosen for PIL.</p>

<p>You can get more information about how to use this module from the <a href=""http://effbot.org/imagingbook/introduction.htm"" rel=""noreferrer"">official tutorial</a>.</p>

<p><strong>PS</strong>: On <em>some</em> installs, <code>import PIL</code> <em>does</em> work, which adds to the confusion. This is confirmed by an <a href=""http://effbot.org/imagingbook/image.htm"" rel=""noreferrer"">example from the documentation</a>, as @JanneKarila found out, and also by some more recent versions of the MacPorts PIL package (1.1.7).</p>
","8864020"
"What is the Python equivalent of static variables inside a function?","222061","","<p>What is the idiomatic Python equivalent of this C/C++ code?</p>

<pre><code>void foo()
{
    static int counter = 0;
    counter++;
    printf(""counter is %d\n"", counter);
}
</code></pre>

<p>specifically, how does one implement the static member at the function level, as opposed to the class level? And does placing the function into a class change anything?</p>
","<p>A bit reversed, but this should work:</p>

<pre><code>def foo():
    foo.counter += 1
    print ""Counter is %d"" % foo.counter
foo.counter = 0
</code></pre>

<p>If you want the counter initialization code at the top instead of the bottom, you can create a decorator:</p>

<pre><code>def static_var(varname, value):
    def decorate(func):
        setattr(func, varname, value)
        return func
    return decorate
</code></pre>

<p>Then use the code like this:</p>

<pre><code>@static_var(""counter"", 0)
def foo():
    foo.counter += 1
    print ""Counter is %d"" % foo.counter
</code></pre>

<p>It'll still require you to use the <code>foo.</code> prefix, unfortunately.</p>

<hr>

<p>EDIT (thanks to <a href=""https://stackoverflow.com/questions/279561/what-is-the-python-equivalent-of-static-variables-inside-a-function/279586#comment41067162_279586"">ony</a>): This looks even nicer:</p>

<pre><code>def static_vars(**kwargs):
    def decorate(func):
        for k in kwargs:
            setattr(func, k, kwargs[k])
        return func
    return decorate

@static_vars(counter=0)
def foo():
    foo.counter += 1
    print ""Counter is %d"" % foo.counter
</code></pre>
","279586"
"How do I convert datetime to date (in Python)?","221537","","<p>How do I convert a <code>datetime.datetime</code> object (for example, the return value of <code>datetime.datetime.now())</code> to a <code>datetime.date object</code> in Python?</p>
","<p>Use the <code>date()</code> method:</p>

<pre><code>datetime.datetime.now().date()
</code></pre>
","3743240"
"What's the difference between raw_input() and input() in python3.x?","221526","","<p>What is the difference between <code>raw_input()</code> and <code>input()</code> in python3.x ?</p>
","<p>The difference is that <code>raw_input()</code> does not exist in Python 3.x, while <code>input()</code> does.  Actually, the old <code>raw_input()</code> has been renamed to <code>input()</code>, and the old <code>input()</code> is gone, but can easily be simulated by using <code>eval(input())</code>.  (Remember that <code>eval()</code> is evil, so if try to use safer ways of parsing your input if possible.)</p>
","4915366"
"How do I find the time difference between two datetime objects in python?","221357","","<p>How do I tell the time difference in minutes between two <code>datetime</code> objects?</p>
","<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; a = datetime.datetime.now()
&gt;&gt;&gt; b = datetime.datetime.now()
&gt;&gt;&gt; c = b - a
datetime.timedelta(0, 8, 562000)
&gt;&gt;&gt; divmod(c.days * 86400 + c.seconds, 60)
(0, 8)      # 0 minutes, 8 seconds
</code></pre>
","1345852"
"if else in a list comprehension","221232","","<p>I have a list <code>l</code>:</p>

<pre><code>l = [22, 13, 45, 50, 98, 69, 43, 44, 1]
</code></pre>

<p>For numbers above 45 inclusive, I would like to add 1; and for numbers less than it, 5.</p>

<p>I tried</p>

<pre><code>[x+1 for x in l if x &gt;= 45 else x+5]
</code></pre>

<p>But it gives me a syntax error. How can I achieve an <code>if</code> &ndash; <code>else</code> like this in a list comprehension?</p>
","<pre><code>&gt;&gt;&gt; l = [22, 13, 45, 50, 98, 69, 43, 44, 1]
&gt;&gt;&gt; [x+1 if x &gt;= 45 else x+5 for x in l]
[27, 18, 46, 51, 99, 70, 48, 49, 6]
</code></pre>

<p>Do-something if <code>&lt;condition&gt;</code>, else do-something else.</p>
","4406399"
"Recommendations of Python REST (web services) framework?","220982","","<p>Is there a list somewhere of recommendations of different Python-based REST frameworks for use on the serverside to write your own RESTful APIs? Preferably with pros and cons.</p>

<p>Please feel free to add recommendations here. :)</p>
","<p>Something to be careful about when designing a RESTful API is the conflation of GET and POST, as if they were the same thing. It's easy to make this mistake with <a href=""http://www.djangoproject.com/"" rel=""noreferrer"">Django</a>'s <a href=""https://docs.djangoproject.com/en/dev/topics/http/views/"" rel=""noreferrer"">function-based views</a> and <a href=""http://www.cherrypy.org/"" rel=""noreferrer"">CherryPy</a>'s default dispatcher, although both frameworks now provide a way around this problem (<a href=""https://docs.djangoproject.com/en/dev/topics/class-based-views/"" rel=""noreferrer"">class-based views</a> and <a href=""http://docs.cherrypy.org/dev/refman/_cpdispatch.html#cherrypy._cpdispatch.MethodDispatcher"" rel=""noreferrer"">MethodDispatcher</a>, respectively).</p>

<p><a href=""http://en.wikipedia.org/wiki/Representational_State_Transfer#RESTful_web_services"" rel=""noreferrer"">HTTP-verbs are very important</a> in REST, and unless you're very careful about this, you'll end up falling into a <a href=""http://www.infoq.com/articles/rest-anti-patterns"" rel=""noreferrer"">REST anti-pattern</a>.</p>

<p>Some frameworks that get it right are <a href=""http://webpy.org/"" rel=""noreferrer"">web.py</a>, <a href=""http://flask.pocoo.org"" rel=""noreferrer"">Flask</a> and <a href=""http://bottlepy.org"" rel=""noreferrer"">Bottle</a>. When combined with the <a href=""https://github.com/martinblech/mimerender"" rel=""noreferrer"">mimerender</a> library (full disclosure: I wrote it), they allow you to write nice RESTful webservices:</p>

<pre><code>import web
import json
from mimerender import mimerender

render_xml = lambda message: '&lt;message&gt;%s&lt;/message&gt;'%message
render_json = lambda **args: json.dumps(args)
render_html = lambda message: '&lt;html&gt;&lt;body&gt;%s&lt;/body&gt;&lt;/html&gt;'%message
render_txt = lambda message: message

urls = (
    '/(.*)', 'greet'
)
app = web.application(urls, globals())

class greet:
    @mimerender(
        default = 'html',
        html = render_html,
        xml  = render_xml,
        json = render_json,
        txt  = render_txt
    )
    def GET(self, name):
        if not name: 
            name = 'world'
        return {'message': 'Hello, ' + name + '!'}

if __name__ == ""__main__"":
    app.run()
</code></pre>

<p>The service's logic is implemented only once, and the correct representation selection (Accept header) + dispatch to the proper render function (or template) is done in a tidy, transparent way.</p>

<pre><code>$ curl localhost:8080/x
&lt;html&gt;&lt;body&gt;Hello, x!&lt;/body&gt;&lt;/html&gt;

$ curl -H ""Accept: application/html"" localhost:8080/x
&lt;html&gt;&lt;body&gt;Hello, x!&lt;/body&gt;&lt;/html&gt;

$ curl -H ""Accept: application/xml"" localhost:8080/x
&lt;message&gt;Hello, x!&lt;/message&gt;

$ curl -H ""Accept: application/json"" localhost:8080/x
{'message':'Hello, x!'}

$ curl -H ""Accept: text/plain"" localhost:8080/x
Hello, x!
</code></pre>

<p><strong>Update (April 2012)</strong>: added information about Django's class-based views, CherryPy's MethodDispatcher and Flask and Bottle frameworks. Neither existed back when the question was asked.</p>
","920181"
"What is the standard Python docstring format?","220637","","<p>I have seen a few different styles of writing docstrings in Python, is there an official or ""agreed-upon"" style?</p>
","<h1>Formats</h1>

<p>Python docstrings can be written following several formats as the other posts showed. However the default Sphinx docstring format was not mentioned and is based on <strong>reStructuredText (reST)</strong>. You can get some information about the main formats in <a href=""http://daouzli.com/blog/docstring.html"">that tuto</a>.</p>

<p>Note that the reST is recommended by the <a href=""https://www.python.org/dev/peps/pep-0287"">PEP 287</a></p>

<p>There follows the main used formats for docstrings.</p>

<h2>- Epytext</h2>

<p>Historically a <strong>javadoc</strong> like style was prevalent, so it was taken as a base for <a href=""http://epydoc.sourceforge.net"">Epydoc</a> (with the called <code>Epytext</code> format) to generate documentation.</p>

<p>Example:</p>

<pre><code>""""""
This is a javadoc style.

@param param1: this is a first param
@param param2: this is a second param
@return: this is a description of what is returned
@raise keyError: raises an exception
""""""
</code></pre>

<h2>- reST</h2>

<p>Nowadays, the probably more prevalent format is the <strong>reStructuredText</strong> (reST) format that is used by <a href=""http://sphinx-doc.org"">Sphinx</a> to generate documentation.
Note: it is used by default in JetBrains PyCharm (type triple quotes after defining a method and hit enter). It is also used by default as output format in Pyment.</p>

<p>Example:</p>

<pre><code>""""""
This is a reST style.

:param param1: this is a first param
:param param2: this is a second param
:returns: this is a description of what is returned
:raises keyError: raises an exception
""""""
</code></pre>

<h2>- Google</h2>

<p>Google has their own <a href=""https://google.github.io/styleguide/pyguide.html?showone=Comments#Comments"">format</a> that is often used. It also can be interpreted by Sphinx. </p>

<p>Example:</p>

<pre><code>""""""
This is an example of Google style.

Args:
    param1: This is the first param.
    param2: This is a second param.

Returns:
    This is a description of what is returned.

Raises:
    KeyError: Raises an exception.
""""""
</code></pre>

<p>Even <a href=""http://www.sphinx-doc.org/en/stable/ext/example_google.html"">more examples</a></p>

<h2>- Numpydoc</h2>

<p>Note that Numpy recommend to follow their own <a href=""https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt"">numpydoc</a> based on Google format and usable by Sphinx.</p>

<pre><code>""""""
My numpydoc description of a kind
of very exhautive numpydoc format docstring.

Parameters
----------
first : array_like
    the 1st param name `first`
second :
    the 2nd param
third : {'value', 'other'}, optional
    the 3rd param, by default 'value'

Returns
-------
string
    a value in a string

Raises
------
KeyError
    when a key error
OtherError
    when an other error
""""""
</code></pre>

<h1>Converting/Generating</h1>

<p>It is possible to use a tool like <a href=""https://github.com/dadadel/pyment"">Pyment</a> to automatically generate docstrings to a Python project not yet documented, or to convert existing docstrings (can be mixing several formats) from a format to an other one.</p>

<p>Note: The examples are taken from the <a href=""https://github.com/dadadel/pyment/blob/master/doc/pyment.rst"">Pyment documentation</a></p>
","24385103"
"How to get a value from a cell of a dataframe?","220250","","<p>I have constructed a condition that extract exactly one row from my data frame:</p>

<pre><code>d2 = df[(df['l_ext']==l_ext) &amp; (df['item']==item) &amp; (df['wn']==wn) &amp; (df['wd']==1)]
</code></pre>

<p>Now I would like to take a value from a particular column:</p>

<pre><code>val = d2['col_name']
</code></pre>

<p>But as a result I get a data frame that contains one row and one column (<em>i.e.</em> one cell). It is not what I need. I need one value (one float number). How can I do it in pandas?</p>
","<p>If you have a DataFrame with only one row, then access the first (only) row as a Series using <code>iloc</code>, and then the value using the column name:</p>

<pre><code>In [3]: sub_df
Out[3]:
          A         B
2 -0.133653 -0.030854

In [4]: sub_df.iloc[0]
Out[4]:
A   -0.133653
B   -0.030854
Name: 2, dtype: float64

In [5]: sub_df.iloc[0]['A']
Out[5]: -0.13365288513107493
</code></pre>
","16729808"
"Concatenating string and integer in python","219818","","<p>In python say you have</p>

<pre><code>s = ""string""
i = 0
print s+i
</code></pre>

<p>will give you error
so you write</p>

<pre><code>print s+str(i) 
</code></pre>

<p>to not get error.</p>

<p>I think this is quite a clumsy way to handle int and string concatenation.
Even Java does not need explicit casting to String to do this sort
of concatenation.
Is there a better way to do this sort of concatenation i.e without explicit casting in Python?</p>
","<p>Modern string formatting:</p>

<pre><code>""{} and {}"".format(""string"", 1)
</code></pre>
","11559122"
"How to remove specific element in an array using python","219690","","<p>I'm new to Python and want to write something that removes a specific element in an array. I know that I have to <code>for</code> loop through the array to find the element that matches the content, but Python for loops are a bit funny. </p>

<p>lets say that I have an array of emails and I want to get rid of the element that matches some email string.</p>

<p>I'd actually like to use the for loop structure because I need to use the same index for other arrays as well. </p>

<p>Here is the code that I have:</p>

<pre><code>for index, item in emails:
    if emails[index] == 'something@something.com':
         emails.pop(index)
         otherarray.pop(index)
</code></pre>
","<p>You don't need to iterate the array. Just:</p>

<pre><code>&gt;&gt;&gt; x = ['ala@ala.com', 'bala@bala.com']
&gt;&gt;&gt; x
['ala@ala.com', 'bala@bala.com']
&gt;&gt;&gt; x.remove('ala@ala.com')
&gt;&gt;&gt; x
['bala@bala.com']
</code></pre>

<p>This will remove the first occurence that matches the string.</p>

<p>EDIT: After your edit, you still don't need to iterate over. Just do:</p>

<pre><code>index = initial_list.index(item1)
initial_list.remove(item1)
other_list.remove(other_list[index])   
</code></pre>
","7118295"
"How to print number with commas as thousands separators?","219176","","<p>I am trying to print an integer in <em>Python 2.6.1</em> with commas as thousands separators. For example, I want to show the number <code>1234567</code> as <code>1,234,567</code>. How would I go about doing this? I have seen many examples on Google, but I am looking for the simplest practical way.</p>

<p>It does not need to be locale-specific to decide between periods and commas. I would prefer something as simple as reasonably possible.</p>
","<p>For Python ≥ 2.7:</p>

<pre><code>""{:,}"".format(value)
</code></pre>

<p>Per <a href=""https://docs.python.org/library/string.html#format-specification-mini-language"">Format Specification Mini-Language</a>,</p>

<blockquote>
  <p>The <code>','</code> option signals the use of a comma for a thousands separator. For a locale aware separator, use the <code>'n'</code> integer presentation type instead.</p>
</blockquote>
","10742904"
"Python: list of lists","219033","","<p>Running the code</p>

<pre><code>listoflists = []
list = []
for i in range(0,10):
    list.append(i)
    if len(list)&gt;3:
        list.remove(list[0])
        listoflists.append((list, list[0]))
print listoflists
</code></pre>

<p>returns</p>

<pre><code>[([7, 8, 9], 0), ([7, 8, 9], 0), ([7, 8, 9], 0), ([7, 8, 9], 1), ([7, 8, 9], 2), ([7, 8, 9], 3), ([7, 8, 9], 4), ([7, 8, 9], 5), ([7, 8, 9], 6), ([7, 8, 9], 7)]
</code></pre>

<p>so somehow the first argument of each tuple (list) is being updated each time in the list of lists, but the second argument list[0] is not. Can someone explain what's going on here and suggest a way to fix this? I'd like to output</p>

<pre><code>[([0],0), ([0,1],0), ...
</code></pre>
","<p>Lists are a mutable type - in order to create a copy (rather than just passing the same list around), you need to do so explicitly:</p>

<pre><code>    listoflists.append((list[:], list[0]))
</code></pre>

<p>However, <code>list</code> is already the name of a Python built-in - it'd be better not to use that name for your variable. Here's a version that doesn't use <code>list</code> as a variable name, and makes a copy:</p>

<pre><code>listoflists = []
a_list = []
for i in range(0,10):
    a_list.append(i)
    if len(a_list)&gt;3:
        a_list.remove(a_list[0])
        listoflists.append((list(a_list), a_list[0]))
print listoflists
</code></pre>

<hr>

<p>Note that I demonstrated two different ways to make a copy of a list above: <code>[:]</code> and <code>list()</code>.</p>

<p>The first, <code>[:]</code>, is creating a <em>slice</em> (normally often used for getting just part of a list), which happens to contain the entire list, and thus is effectively a copy of the list.</p>

<p>The second, <code>list()</code>, is using the actual <code>list</code> <em>type constructor</em> to create a new list which has contents equal to the first list. (I didn't use it in the first example because you were overwriting that name in your code - which is a good example of why you don't want to do that!)</p>
","11487104"
"What exactly do ""u"" and ""r"" string flags do, and what are raw string literals?","218907","","<p>While asking <a href=""https://stackoverflow.com/questions/2081622/python-raw-strings-and-unicode-how-to-use-web-for-input-as-regexp-patterns"">this question</a>, I realized I didn't know much about raw strings. For somebody claiming to be a Django trainer, this sucks.</p>

<p>I know what an encoding is, and I know what <code>u</code> alone does since I get what is Unicode.</p>

<p>But what does <code>r</code> do exactly? What kind of string does it result in?</p>

<p>And above all, what the heck does <code>ur</code> do?</p>

<p>Finally, is there any reliable way to go back from a Unicode string to a simple raw string?</p>

<p>Ah, and by the way, if your system and your text editor charset are set to UTF-8, does <code>u</code> actually do anything?</p>
","<p>There's not really any ""raw <em>string</em>""; there are raw <em>string literals</em>, which are exactly the string literals marked by an <code>'r'</code> before the opening quote.</p>

<p>A ""raw string literal"" is a slightly different syntax for a string literal, in which a backslash, <code>\</code>, is taken as meaning ""just a backslash"" (except when it comes right before a quote that would otherwise terminate the literal) -- no ""escape sequences"" to represent newlines, tabs, backspaces, form-feeds, and so on.  In normal string literals, each backslash must be doubled up to avoid being taken as the start of an escape sequence.</p>

<p>This syntax variant exists mostly because the syntax of regular expression patterns is heavy with backslashes (but never at the end, so the ""except"" clause above doesn't matter) and it looks a bit better when you avoid doubling up each of them -- that's all.  It also gained some popularity to express native Windows file paths (with backslashes instead of regular slashes like on other platforms), but that's very rarely needed (since normal slashes mostly work fine on Windows too) and imperfect (due to the ""except"" clause above).</p>

<p><code>r'...'</code> is a byte string (in Python 2.*), <code>ur'...'</code> is a Unicode string (again, in Python 2.*), and any of the other three kinds of quoting also produces exactly the same types of strings (so for example <code>r'...'</code>, <code>r'''...'''</code>, <code>r""...""</code>, <code>r""""""...""""""</code> are all byte strings, and so on).</p>

<p>Not sure what you mean by ""going <em>back</em>"" - there is no intrinsically back and forward directions, because there's no raw string <strong>type</strong>, it's just an alternative syntax to express perfectly normal string objects, byte or unicode as they may be.</p>

<p>And yes, in Python 2.*, <code>u'...'</code> <strong>is</strong> of course always distinct from just <code>'...'</code> -- the former is a unicode string, the latter is a byte string. What encoding the literal might be expressed in is a completely orthogonal issue.</p>

<p>E.g., consider (Python 2.6):</p>

<pre><code>&gt;&gt;&gt; sys.getsizeof('ciao')
28
&gt;&gt;&gt; sys.getsizeof(u'ciao')
34
</code></pre>

<p>The Unicode object of course takes more memory space (very small difference for a very short string, obviously ;-).</p>
","2081708"
"Two dimensional array in python","218444","","<p>I want to know how to declare a two dimensional array in Python.</p>

<pre><code>arr = [[]]

arr[0].append(""aa1"")
arr[0].append(""aa2"")
arr[1].append(""bb1"")
arr[1].append(""bb2"")
arr[1].append(""bb3"")
</code></pre>

<p>The first two assignments work fine. But when I try to do, arr[1].append(""bb1""), I get the following error,</p>

<p>IndexError: list index out of range.</p>

<p>Am I doing anything silly in trying to declare the 2-D array</p>

<p>[edit]:
but i do not know the no. of elements in the array (both rows and columns). </p>
","<p>You do not ""declare"" arrays or anything else in python. You simply assign to a (new) variable. If you want a multidimensional array, simply add a new array as an array element.</p>

<pre><code>arr = []
arr.append([])
arr[0].append('aa1')
arr[0].append('aa2')
</code></pre>

<p>or</p>

<pre><code>arr = []
arr.append(['aa1', 'aa2'])
</code></pre>
","8183168"
"How do I translate a ISO 8601 datetime string into a Python datetime object?","218217","","<p>I'm getting a datetime string in a format like ""2009-05-28T16:15:00"" (this is ISO 8601, I believe) one hack-ish option seems to be to parse the string using <code>time.strptime</code> and passing the first 6 elements of the touple into the datetime constructor, like:</p>

<pre><code>datetime.datetime(*time.strptime(""2007-03-04T21:08:12"", ""%Y-%m-%dT%H:%M:%S"")[:6])
</code></pre>

<p>I haven't been able to find a ""cleaner"" way of doing this, is there one?</p>
","<p>I prefer using the <a href=""https://pypi.python.org/pypi/python-dateutil/2.6.0"" rel=""noreferrer"">dateutil</a> library for timezone handling and generally solid date parsing. If you were to get an ISO 8601 string like: 2010-05-08T23:41:54.000Z you'd have a fun time parsing that with strptime, especially if you didn't know up front whether or not the timezone was included. pyiso8601 has a couple of issues (check their tracker) that I ran into during my usage and it hasn't been updated in a few years. dateutil, by contrast, has been active and worked for me: </p>

<pre><code>import dateutil.parser
yourdate = dateutil.parser.parse(datestring)
</code></pre>
","3908349"
"Pretty printing XML in Python","218004","","<p>What is the best way (or even the various ways) to pretty print xml in Python?</p>
","<pre><code>import xml.dom.minidom

xml = xml.dom.minidom.parse(xml_fname) # or xml.dom.minidom.parseString(xml_string)
pretty_xml_as_string = xml.toprettyxml()
</code></pre>
","1206856"
"Python 3: UnboundLocalError: local variable referenced before assignment","217854","","<p>The following code gives the error <code>UnboundLocalError: local variable 'Var1' referenced before assignment</code>:</p>

<pre><code>Var1 = 1
Var2 = 0
def function(): 
    if Var2 == 0 and Var1 &gt; 0:
        print(""Result One"")
    elif Var2 == 1 and Var1 &gt; 0:
        print(""Result Two"")
    elif Var1 &lt; 1:
        print(""Result Three"")
    Var1 =- 1
function()
</code></pre>

<p>How can I fix this? Thanks for any help!</p>
","<p>You can fix this by passing parameters rather than relying on Globals</p>

<pre><code>def function(Var1, Var2): 
    if Var2 == 0 and Var1 &gt; 0:
        print(""Result One"")
    elif Var2 == 1 and Var1 &gt; 0:
        print(""Result Two"")
    elif Var1 &lt; 1:
        print(""Result Three"")
    return Var1 - 1
function(1, 1)
</code></pre>
","10851939"
"Python - IOError: [Errno 13] Permission denied:","217686","","<p>I'm getting <code>IOError: [Errno 13] Permission denied</code> and I don't know what is wrong wit this code.</p>

<p>I'm trying to read a file given an absolute path (meaning only <code>file.asm</code>),</p>

<p>and a relative path (meaning <code>/.../file.asm</code>), and I want the program to write the file to whatever path is given - if it is absolute, it should write it to the current dir; otherwise, to the path given.</p>

<p>the code:</p>

<pre><code>#call to main function
if __name__ == '__main__':
    assem(sys.argv[1])


import sys

def assem(myFile):
    from myParser import Parser
    import code
    from symbolTable import SymbolTable

    table=SymbolTable()

    # max size of each word
    WORD_SIZE = 16
    # rom address to save to
    rom_addrs = 0
    # variable address to save to
    var_addrs = 16

    # new addition
    if (myFile[-4:] == "".asm""):
        newFile = myFile[:4]+"".hack""

    output = open(newFile, 'w') &lt;==== ERROR
</code></pre>

<p>the error given:</p>

<pre><code>IOError: [Errno 13] Permission denied: '/Use.hack'
</code></pre>

<p>the way I execute the code : </p>

<pre><code>python assembler.py Users/***/Desktop/University/Add.asm 
</code></pre>

<p>What am I doing wrong here?</p>
","<p>It looks like you're trying to replace the extension with the following code:</p>

<pre><code>if (myFile[-4:] == "".asm""):
    newFile = myFile[:4]+"".hack""
</code></pre>

<p>However, you appear to have the array indexes mixed up. Try the following:</p>

<pre><code>if (myFile[-4:] == "".asm""):
    newFile = myFile[:-4]+"".hack""
</code></pre>

<p>Note the use of <code>-4</code> instead of just <code>4</code> in the second line of code. This explains why your program is trying to create <code>/Use.hack</code>, which is the <em>first</em> four characters of your file name (<code>/Use</code>), with <code>.hack</code> appended to it.</p>
","10575888"
"How do I calculate the date six months from the current date using the datetime Python module?","217671","","<p>I am using the datetime Python module.  I am looking to calculate the date 6 months from the current date. Could someone give me a little help doing this?</p>

<p>The reason I want to generate a date 6 months from the current date is to produce a Review Date.  If the user enters data into the system it will have a review date of 6 months from the date they entered the data.  </p>
","<pre><code>import datetime
print (datetime.date.today() + datetime.timedelta(6*365/12)).isoformat()
</code></pre>
","546356"
"Convert datetime object to a String of date only in Python","217668","","<p>I see a lot on converting a <code>datetime</code> string to an <code>datetime</code> object in Python, but I want to go the other way.<br>
I've got <code>datetime.datetime(2012, 2, 23, 0, 0)</code> and I would like to convert it to string like <code>'2/23/2012'</code>.</p>
","<p>You can use <a href=""http://docs.python.org/2/library/time.html#time.strftime"" rel=""noreferrer"">strftime</a> to help you format your date.</p>

<p>E.g.,</p>

<pre><code>import datetime
t = datetime.datetime(2012, 2, 23, 0, 0)
t.strftime('%m/%d/%Y')
</code></pre>

<p>will yield:</p>

<pre><code>'02/23/2012'
</code></pre>

<p>More information about formatting see <a href=""http://docs.python.org/library/datetime.html#strftime-strptime-behavior"" rel=""noreferrer"">here</a></p>
","10624968"
"How do I do a not equal in Django queryset filtering?","216935","","<p>In Django model QuerySets, I see that there is a <code>__gt</code> and <code>__lt</code> for comparitive values, but is there a <code>__ne</code>/<code>!=</code>/<code>&lt;&gt;</code> (<strong>not equals</strong>?)</p>

<p>I want to filter out using a not equals:</p>

<p>Example:</p>

<pre><code>Model:
    bool a;
    int x;
</code></pre>

<p>I want</p>

<pre><code>results = Model.objects.exclude(a=true, x!=5)
</code></pre>

<p>The <code>!=</code> is not correct syntax. I tried <code>__ne</code>, <code>&lt;&gt;</code>.</p>

<p>I ended up using:</p>

<pre><code>results = Model.objects.exclude(a=true, x__lt=5).exclude(a=true, x__gt=5)
</code></pre>
","<p>Maybe <a href=""http://docs.djangoproject.com/en/dev/topics/db/queries/#complex-lookups-with-q-objects"" rel=""noreferrer"">Q objects</a> could be of help for this problem. I've never used them but it seems they can be negated and combined much like normal python expressions.</p>

<p>Update: I Just tried it out, it seems to work pretty well:</p>

<pre><code>&gt;&gt;&gt; from myapp.models import Entry
&gt;&gt;&gt; from django.db.models import Q

&gt;&gt;&gt; Entry.objects.filter(~Q(id = 3))

[&lt;Entry: Entry object&gt;, &lt;Entry: Entry object&gt;, &lt;Entry: Entry object&gt;, ...]
</code></pre>
","1154977"
"Using python map and other functional tools","216878","","<p>This is quite n00bish, but I'm trying to learn/understand functional programming in python. The following code:</p>

<pre><code>foos = [1.0,2.0,3.0,4.0,5.0]
bars = [1,2,3]

def maptest(foo, bar):
    print foo, bar

map(maptest, foos, bars)
</code></pre>

<p>produces:</p>

<pre><code>1.0 1
2.0 2
3.0 3
4.0 None
5.0 None
</code></pre>

<p><strong>Q. Is there a way to use map or any other functional tools in python to produce the following without loops etc.</strong></p>

<pre><code>1.0 [1,2,3]
2.0 [1,2,3]
3.0 [1,2,3]
4.0 [1,2,3]
5.0 [1,2,3]
</code></pre>

<p><strong>Just as a side note how would the implementation change if there is a dependency between foo and bar. e.g.</strong></p>

<pre><code>foos = [1.0,2.0,3.0,4.0,5.0]
bars = [1,2,3,4,5]
</code></pre>

<p><strong>and print:</strong></p>

<pre><code>1.0 [2,3,4,5]
2.0 [1,3,4,5]
3.0 [1,2,4,5]
...
</code></pre>

<p><strong>P.S: I know how to do it naively using if, loops and/or generators, but I'd like to learn how to achieve the same using functional tools. Is it just a case of adding an if statement to maptest or apply another filter map to bars internally within maptest?</strong></p>
","<p>The easiest way would be not to pass <code>bars</code> through the different functions, but to access it directly from <code>maptest</code>:</p>

<pre><code>foos = [1.0,2.0,3.0,4.0,5.0]
bars = [1,2,3]

def maptest(foo):
    print foo, bars

map(maptest, foos)
</code></pre>

<p>With your original <code>maptest</code> function you could also use a lambda function in <code>map</code>:</p>

<pre><code>map((lambda foo: maptest(foo, bars)), foos)
</code></pre>
","672198"
"""Too many values to unpack"" Exception","216119","","<p>I'm working on a project in Django and I've just started trying to extend the User model in order to make user profiles. </p>

<p>Unfortunately, I've run into a problem: Every time I try to get the user's profile inside of a template (<code>user.get_template.lastIP</code>, for example), I get the following error:</p>

<pre>
Environment:

Request Method: GET
Request URL: http://localhost:8000/
Django Version: 1.1
Python Version: 2.6.1

Template error:
In template /path/to/base.tpl, error at line 19
   Caught an exception while rendering: too many values to unpack

19 :                Hello, {{user.username}} ({{ user.get_profile.rep}}). How's it goin? Logout


Exception Type: TemplateSyntaxError at /
Exception Value: Caught an exception while rendering: too many values to unpack

</pre>

<p>Any ideas as to what's going on or what I'm doing wrong?</p>
","<p>That exception means that you are trying to unpack a tuple, but the tuple has too many values with respect to the number of target variables. For example: this work, and prints 1, then 2, then 3</p>

<pre><code>def returnATupleWithThreeValues():
    return (1,2,3)
a,b,c = returnATupleWithThreeValues()
print a
print b
print c
</code></pre>

<p>But this raises your error</p>

<pre><code>def returnATupleWithThreeValues():
    return (1,2,3)
a,b = returnATupleWithThreeValues()
print a
print b
</code></pre>

<p>raises</p>

<pre><code>Traceback (most recent call last):
  File ""c.py"", line 3, in ?
    a,b = returnATupleWithThreeValues()
ValueError: too many values to unpack
</code></pre>

<p>Now, the reason why this happens in your case, I don't know, but maybe this answer will point you in the right direction.</p>
","1479796"
"Writing to CSV with Python adds blank lines","215974","","<p>I am trying to write to CSV file but there are blank rows in between. How can I remove the blank rows?</p>

<pre><code>import csv
b = open('test.csv', 'w')
a = csv.writer(b)
data = [['Me', 'You'],\
        ['293', '219'],\
        ['54', '13']]
a.writerows(data)
b.close()
</code></pre>
","<p>The way you use the <code>csv</code> module changed in Python 3 in several respects <a href=""http://docs.python.org/dev/library/csv.html#csv.writer"" rel=""noreferrer"">(docs)</a>, at least with respect to how you need to open the file.  Anyway, something like</p>

<pre><code>import csv
with open('test.csv', 'w', newline='') as fp:
    a = csv.writer(fp, delimiter=',')
    data = [['Me', 'You'],
            ['293', '219'],
            ['54', '13']]
    a.writerows(data)
</code></pre>

<p>should work.</p>
","14693848"
"How to write a Python module?","215717","","<p>I've been making Python scripts for simple tasks at work and never really bothered packaging them for others to use. Now I have been assigned to make a Python wrapper for a REST API. I have absolutely no idea on how to start and I need help.</p>

<p><strong>What I have:</strong></p>

<p>(Just want to be specific as possible) I have the <a href=""http://www.pythonforbeginners.com/basics/how-to-use-python-virtualenv/"" rel=""noreferrer"">virtualenv</a> ready, it's also <a href=""https://github.com/yowmamasita/pyfirefly"" rel=""noreferrer"">up in github</a>, the .gitignore file for python is there as well, plus, the <a href=""http://www.python-requests.org/en/latest/"" rel=""noreferrer"">requests library</a> for interacting with the REST API. That's it.</p>

<p>Here's the current directory tree</p>

<pre><code>.
├── bin
│   └── /the usual stuff/
├── include
│   └── /the usual stuff/
├── lib
│   └── python2.7
│       └── /the usual stuff/
├── local
│   └── /the usual stuff/
└── README.md

27 directories, 280 files
</code></pre>

<p>I don't even know where to put the .py files, if I ever make one.</p>

<p><strong>What I wanted to do:</strong></p>

<p>Make a python module install-able with ""pip install ...""</p>

<p>If possible, I want a general step by step process on writing Python modules.</p>
","<p>A module is a file containing Python definitions and statements. The file name is the module name with the suffix <code>.py</code></p>

<p>create <code>hello.py</code> then write the following function as its content:</p>

<pre><code>def helloworld():
   print ""hello""
</code></pre>

<p>Then you can import <code>hello</code>:</p>

<pre><code>&gt;&gt;&gt; import hello
&gt;&gt;&gt; hello.helloworld()
'hello'
&gt;&gt;&gt;
</code></pre>

<p>To group many <code>.py</code> files put them in a folder. Any folder with an <code>__init__.py</code> is considered a module by python and you can call them a package</p>

<pre><code>|-HelloModule
  |_ __init__.py
  |_ hellomodule.py
</code></pre>

<p>You can go about with the import statement on your module the usual way.</p>

<p>For more information, see <a href=""http://docs.python.org/2/tutorial/modules.html#packages"">6.4. Packages</a>.</p>
","15747198"
"Why does ""pip install"" inside Python raise a SyntaxError?","215349","","<p>I'm trying to use pip to install a package.  I try to run <code>pip install</code> from the Python shell, but I get a <code>SyntaxError</code>.  Why do I get this error?  How do I use pip to install the package?</p>

<pre><code>&gt;&gt;&gt; pip install selenium
              ^
SyntaxError: invalid syntax
</code></pre>
","<p>pip is run from the command line, not the Python interpreter. It is a program that <strong>installs</strong> modules, so you can use them from Python. Once you have installed the module, then you can open the Python shell and do <code>import selenium</code>.</p>

<p>The Python shell is not a command line, it is an interactive interpreter. You type Python code into it, not commands.</p>
","8548165"
"How to convert a string to a list in Python?","215149","","<p>How do you convert a string into a list?</p>

<p>Say the string is like <code>text = ""a,b,c""</code>. After the conversion, <code>text == ['a', 'b', 'c']</code> and hopefully <code>text[0] == 'a'</code>, <code>text[1] == 'b'</code>?</p>
","<p>Like this:</p>

<pre><code>&gt;&gt;&gt; text = 'a,b,c'
&gt;&gt;&gt; text = text.split(',')
&gt;&gt;&gt; text
[ 'a', 'b', 'c' ]
</code></pre>

<p>Alternatively, you can use <code>eval()</code> if you trust the string to be safe:</p>

<pre><code>&gt;&gt;&gt; text = 'a,b,c'
&gt;&gt;&gt; text = eval('[' + text + ']')
</code></pre>
","5387227"
"Python Remove last 3 characters of a string","215038","","<p>I'm trying to remove the last 3 characters from a string in python, I don't know what these characters are so I can't use <code>rstrip</code>, I also need to remove any white space and convert to upper-case</p>

<p>an example would be:</p>

<pre><code>foo = ""Bs12 3ab""
foo.replace("" "", """").rstrip(foo[-3:]).upper()
</code></pre>

<p>This works and gives me BS12 which is what I want, however if the last 4th &amp; 3rd characters are the same I loose both eg if <code>foo = ""BS11 1AA""</code> I just get <code>'BS'</code></p>

<p>examples of <code>foo</code> could be:</p>

<pre><code>BS1 1AB
bs11ab
BS111ab
</code></pre>

<p>The string could be 6 or 7 characters and I need to drop the last 3 (assuming no white space)</p>

<p>Any tips?</p>
","<p>It doesn't work as you expect because strip is character based. You need to do this instead:</p>

<pre><code>foo = foo.replace(' ', '')[:-3].upper()
</code></pre>
","1798490"
"Saving a Numpy array as an image","214627","","<p>I have a matrix in the type of a Numpy array.  How would I write it to disk it as an image?  Any format works (png, jpeg, bmp...).  One important constraint is that PIL is not present.</p>
","<p>You can use <a href=""https://github.com/drj11/pypng/"" rel=""noreferrer"">PyPNG</a>. It's a pure Python (no dependencies) open source PNG encoder/decoder and it <a href=""http://packages.python.org/pypng/ex.html#numpy"" rel=""noreferrer"">supports</a> writing NumPy arrays as images.</p>
","902774"
"read subprocess stdout line by line","214615","","<p>My python script uses subprocess to call a linux utility that is very noisy.  I want to store all of the output to a log file and show some of it to the user.  I thought the following would work, but the output doesn't show up in my application until the utility has produced a significant amount of output.</p>

<pre><code>#fake_utility.py, just generates lots of output over time
import time
i = 0
while True:
   print hex(i)*512
   i += 1
   time.sleep(0.5)

#filters output
import subprocess
proc = subprocess.Popen(['python','fake_utility.py'],stdout=subprocess.PIPE)
for line in proc.stdout:
   #the real code does filtering here
   print ""test:"", line.rstrip()
</code></pre>

<p>The behavior I really want is for the filter script to print each line as it is received from the subprocess.  Sorta like what <a href=""http://unixhelp.ed.ac.uk/CGI/man-cgi?tee"" rel=""noreferrer""><code>tee</code></a> does but with python code.</p>

<p>What am I missing?  Is this even possible?</p>

<hr>

<p><strong>Update:</strong></p>

<p>If a <code>sys.stdout.flush()</code> is added to fake_utility.py, the code has the desired behavior in python 3.1.  I'm using python 2.6.  You would think that using <code>proc.stdout.xreadlines()</code> would work the same as py3k, but it doesn't.</p>

<hr>

<p><strong>Update 2:</strong></p>

<p>Here is the minimal working code.</p>

<pre><code>#fake_utility.py, just generates lots of output over time
import sys, time
for i in range(10):
   print i
   sys.stdout.flush()
   time.sleep(0.5)

#display out put line by line
import subprocess
proc = subprocess.Popen(['python','fake_utility.py'],stdout=subprocess.PIPE)
#works in python 3.0+
#for line in proc.stdout:
for line in iter(proc.stdout.readline,''):
   print line.rstrip()
</code></pre>
","<p>It's been a long time since I last worked with Python, but I think the problem is with the statement <code>for line in proc.stdout</code>, which reads the entire input before iterating over it. The solution is to use <code>readline()</code> instead:</p>

<pre><code>#filters output
import subprocess
proc = subprocess.Popen(['python','fake_utility.py'],stdout=subprocess.PIPE)
while True:
  line = proc.stdout.readline()
  if line != '':
    #the real code does filtering here
    print ""test:"", line.rstrip()
  else:
    break
</code></pre>

<p>Of course you still have to deal with the subprocess' buffering.</p>

<p>Note: <a href=""http://docs.python.org/library/stdtypes.html#file.next"" rel=""noreferrer"">according to the documentation</a> the solution with an iterator should be equivalent to using <code>readline()</code>, except for the read-ahead buffer, but (or exactly because of this) the proposed change did produce different results for me (Python 2.5 on Windows XP).</p>
","2813530"
"What is the best project structure for a Python application?","214547","","<p>Imagine that you want to develop a non-trivial end-user desktop (not web) application in Python. What is the best way to structure the project's folder hierarchy?</p>

<p>Desirable features are ease of maintenance, IDE-friendliness, suitability for source control branching/merging, and easy generation of install packages.</p>

<p>In particular:</p>

<ol>
<li>Where do you put the source?</li>
<li>Where do you put application startup scripts?</li>
<li>Where do you put the IDE project cruft?</li>
<li>Where do you put the unit/acceptance tests?</li>
<li>Where do you put non-Python data such as config files?</li>
<li>Where do you put non-Python sources such as C++ for pyd/so binary extension modules?</li>
</ol>
","<p>Doesn't too much matter.  Whatever makes you happy will work.  There aren't a lot of silly rules because Python projects can be simple.</p>

<ul>
<li><code>/scripts</code> or <code>/bin</code> for that kind of command-line interface stuff</li>
<li><code>/tests</code> for your tests</li>
<li><code>/lib</code> for your C-language libraries</li>
<li><code>/doc</code> for most documentation</li>
<li><code>/apidoc</code> for the Epydoc-generated API docs.</li>
</ul>

<p>And the top-level directory can contain README's, Config's and whatnot.</p>

<p>The hard choice is whether or not to use a <code>/src</code> tree.  Python doesn't have a distinction between <code>/src</code>, <code>/lib</code>, and <code>/bin</code> like Java or C has.</p>

<p>Since a top-level <code>/src</code> directory is seen by some as meaningless, your top-level directory can be the top-level architecture of your application.</p>

<ul>
<li><code>/foo</code></li>
<li><code>/bar</code></li>
<li><code>/baz</code></li>
</ul>

<p>I recommend putting all of this under the ""name-of-my-product"" directory.  So, if you're writing an application named <code>quux</code>, the directory that contains all this stuff is named  <code>/quux</code>.</p>

<p>Another project's <code>PYTHONPATH</code>, then, can include <code>/path/to/quux/foo</code> to reuse the <code>QUUX.foo</code> module.  </p>

<p>In my case, since I use Komodo Edit, my IDE cuft is a single .KPF file.  I actually put that in the top-level <code>/quux</code> directory, and omit adding it to SVN.</p>
","193181"
"python exception message capturing","214213","","<pre><code>import ftplib
import urllib2
import os
import logging
logger = logging.getLogger('ftpuploader')
hdlr = logging.FileHandler('ftplog.log')
formatter = logging.Formatter('%(asctime)s %(levelname)s %(message)s')
hdlr.setFormatter(formatter)
logger.addHandler(hdlr)
logger.setLevel(logging.INFO)
FTPADDR = ""some ftp address""

def upload_to_ftp(con, filepath):
    try:
        f = open(filepath,'rb')                # file to send
        con.storbinary('STOR '+ filepath, f)         # Send the file
        f.close()                                # Close file and FTP
        logger.info('File successfully uploaded to '+ FTPADDR)
    except, e:
        logger.error('Failed to upload to ftp: '+ str(e))
</code></pre>

<p>This doesn't seem to work, I get syntax error, what is the proper way of doing this for logging all kind of exceptions to a file</p>
","<p>You have to define which type of exception you want to catch. So write <code>except Exception, e:</code> instead of <code>except, e:</code> for a general exception (that will be logged anyway).</p>

<p>Other possibility is to write your whole try/except code this way:</p>

<pre><code>try:
    with open(filepath,'rb') as f:
        con.storbinary('STOR '+ filepath, f)
    logger.info('File successfully uploaded to '+ FTPADDR)
except Exception, e:
    logger.error('Failed to upload to ftp: '+ str(e))
</code></pre>
","4690655"
"Setting different color for each series in scatter plot on matplotlib","213941","","<p>Suppose I have three data sets:</p>

<pre><code>X = [1,2,3,4]
Y1 = [4,8,12,16]
Y2 = [1,4,9,16]
</code></pre>

<p>I can scatter plot this:</p>

<pre><code>from matplotlib import pyplot as plt
plt.scatter(X,Y1,color='red')
plt.scatter(X,Y2,color='blue')
plt.show()
</code></pre>

<p>How can I do this with 10 sets? </p>

<p>I searched for this and could find any reference to what I'm asking.</p>

<p><strong>Edit: clarifying (hopefully) my question</strong>  </p>

<p>If I call scatter multiple times, I can only set the same color on each scatter. Also, I know I can set a color array manually but I'm sure there is a better way to do this. 
My question is then, ""How can I automatically scatter-plot my several data sets, each with a different color. </p>

<p>If that helps, I can easily assign a unique number to each data set. </p>
","<p>I don't know what you mean by 'manually'.  You can choose a colourmap and make a colour array easily enough:</p>

<pre><code>import numpy as np
import matplotlib.pyplot as plt
import matplotlib.cm as cm

x = np.arange(10)
ys = [i+x+(i*x)**2 for i in range(10)]

colors = cm.rainbow(np.linspace(0, 1, len(ys)))
for y, c in zip(ys, colors):
    plt.scatter(x, y, color=c)
</code></pre>

<p>or make your own colour cycler using <code>itertools.cycle</code> and specifying the colours you want to loop over, using <code>next</code> to get the one you want.  For example (I'm too lazy to type out ten colours):</p>

<pre><code>colors = itertools.cycle([""r"", ""b"", ""g""])
for y in ys:
    plt.scatter(x, y, color=next(colors))
</code></pre>

<p>Come to think of it, maybe it's cleaner not to use <code>zip</code> with the first one too:</p>

<pre><code>colors = iter(cm.rainbow(np.linspace(0, 1, len(ys))))
for y in ys:
    plt.scatter(x, y, color=next(colors))
</code></pre>

<p>[PS: I really hate that I have to drop the 'u' when working with matplotlib..]</p>
","12236808"
"How to get string objects instead of Unicode from JSON?","213758","","<p>I'm using <strong>Python 2</strong> to parse JSON from <strong>ASCII encoded</strong> text files. </p>

<p>When loading these files with either <a href=""https://docs.python.org/2/library/json.html"" rel=""nofollow noreferrer""><code>json</code></a> or  <a href=""https://pypi.python.org/pypi/simplejson/"" rel=""nofollow noreferrer""><code>simplejson</code></a>, all my string values are cast to Unicode objects instead of string objects. The problem is, I have to use the data with some libraries that only accept string objects. I <em>can't change the libraries</em> nor update them.</p>

<p>Is it possible to get string objects instead of Unicode ones?</p>

<h1>Example</h1>

<pre><code>>>> import json
>>> original_list = ['a', 'b']
>>> json_list = json.dumps(original_list)
>>> json_list
'[""a"", ""b""]'
>>> new_list = json.loads(json_list)
>>> new_list
[u'a', u'b']  # I want these to be of type `str`, not `unicode`</code></pre>

<h1>Update</h1>

<p>This question was asked <em>a long time ago</em>, when I was stuck with <strong>Python 2</strong>. One easy and clean solution for today is to use a recent version of Python — i.e. <strong>Python 3</strong> and forward.</p>
","<h3>A solution with <code>object_hook</code></h3>

<pre><code>import json

def json_load_byteified(file_handle):
    return _byteify(
        json.load(file_handle, object_hook=_byteify),
        ignore_dicts=True
    )

def json_loads_byteified(json_text):
    return _byteify(
        json.loads(json_text, object_hook=_byteify),
        ignore_dicts=True
    )

def _byteify(data, ignore_dicts = False):
    # if this is a unicode string, return its string representation
    if isinstance(data, unicode):
        return data.encode('utf-8')
    # if this is a list of values, return list of byteified values
    if isinstance(data, list):
        return [ _byteify(item, ignore_dicts=True) for item in data ]
    # if this is a dictionary, return dictionary of byteified keys and values
    # but only if we haven't already byteified it
    if isinstance(data, dict) and not ignore_dicts:
        return {
            _byteify(key, ignore_dicts=True): _byteify(value, ignore_dicts=True)
            for key, value in data.iteritems()
        }
    # if it's anything else, return it in its original form
    return data
</code></pre>

<p>Example usage:</p>

<pre><code>>>> <b><i>json_loads_byteified('{""Hello"": ""World""}')</i></b>
{'Hello': 'World'}
>>> <b><i>json_loads_byteified('""I am a top-level string""')</i></b>
'I am a top-level string'
>>> <b><i>json_loads_byteified('7')</i></b>
7
>>> <b><i>json_loads_byteified('[""I am inside a list""]')</i></b>
['I am inside a list']
>>> <b><i>json_loads_byteified('[[[[[[[[""I am inside a big nest of lists""]]]]]]]]')</i></b>
[[[[[[[['I am inside a big nest of lists']]]]]]]]
>>> <b><i>json_loads_byteified('{""foo"": ""bar"", ""things"": [7, {""qux"": ""baz"", ""moo"": {""cow"": [""milk""]}}]}')</i></b>
{'things': [7, {'qux': 'baz', 'moo': {'cow': ['milk']}}], 'foo': 'bar'}
>>> <b><i>json_load_byteified(open('somefile.json'))</i></b>
{'more json': 'from a file'}</code></pre>

<h3>How does this work and why would I use it?</h3>

<p><a href=""https://stackoverflow.com/a/13105359/1709587"">Mark Amery's function</a> is shorter and clearer than these ones, so what's the point of them? Why would you want to use them?</p>

<p>Purely for <strong>performance</strong>. Mark's answer decodes the JSON text fully first with unicode strings, then recurses through the entire decoded value to convert all strings to byte strings. This has a couple of undesirable effects:</p>

<ul>
<li>A copy of the entire decoded structure gets created in memory</li>
<li>If your JSON object is <em>really</em> deeply nested (500 levels or more) then you'll hit Python's maximum recursion depth</li>
</ul>

<p>This answer mitigates both of those performance issues by using the <code>object_hook</code> parameter of <code>json.load</code> and <code>json.loads</code>. From <a href=""https://docs.python.org/2/library/json.html#json.load"" rel=""noreferrer"">the docs</a>:</p>

<blockquote>
  <p><code>object_hook</code> is an optional function that will be called with the result of any object literal decoded (a <code>dict</code>). The return value of object_hook will be used instead of the <code>dict</code>. This feature can be used to implement custom decoders</p>
</blockquote>

<p>Since dictionaries nested many levels deep in other dictionaries get passed to <code>object_hook</code> <em>as they're decoded</em>, we can byteify any strings or lists inside them at that point and avoid the need for deep recursion later.</p>

<p>Mark's answer isn't suitable for use as an <code>object_hook</code> as it stands, because it recurses into nested dictionaries. We prevent that recursion in this answer with the <code>ignore_dicts</code> parameter to <code>_byteify</code>, which gets passed to it at all times <em>except</em> when <code>object_hook</code> passes it a new <code>dict</code> to byteify. The <code>ignore_dicts</code> flag tells <code>_byteify</code> to ignore <code>dict</code>s since they already been byteified.</p>

<p>Finally, our implementations of <code>json_load_byteified</code> and <code>json_loads_byteified</code> call <code>_byteify</code> (with <code>ignore_dicts=True</code>) on the result returned from <code>json.load</code> or <code>json.loads</code> to handle the case where the JSON text being decoded doesn't have a <code>dict</code> at the top level.</p>
","33571117"
"Append values to a set in Python","213631","","<p>I have a set like this:</p>

<pre><code>keep = set(generic_drugs_mapping[drug] for drug in drug_input)
</code></pre>

<p>How do I add values <code>[0,1,2,3,4,5,6,7,8,9,10]</code> into this set?</p>
","<pre><code>keep.update(yoursequenceofvalues)
</code></pre>

<p>e.g, <code>keep.update(xrange(11))</code> for your specific example.  Or, if you <em>have</em> to produce the values in a loop for some other reason,</p>

<pre><code>for ...whatever...:
  onemorevalue = ...whatever...
  keep.add(onemorevalue)
</code></pre>

<p>But, of course, doing it in bulk with a single <code>.update</code> call is faster and handier, when otherwise feasible.</p>
","3392370"
"Why dict.get(key) instead of dict[key]?","213052","","<p>Today, I came across the <code>dict</code> method <code>get</code> which, given a key in the dictionary, returns the associated value.</p>

<p>For what purpose is this function useful? If I wanted to find a value associated with a key in a dictionary, I can just do <code>dict[key]</code>, and it returns the same thing:</p>

<pre><code>dictionary = {""Name"": ""Harry"", ""Age"": 17}
dictionary[""Name""]
dictionary.get(""Name"")
</code></pre>
","<p>It allows you to provide a default value if the key is missing:</p>

<pre><code>dictionary.get(""bogus"", default_value)
</code></pre>

<p>returns <code>default_value</code> (whatever you choose it to be), whereas</p>

<pre><code>dictionary[""bogus""]
</code></pre>

<p>would raise a <code>KeyError</code>.  </p>

<p>If omitted, <code>default_value</code> is <code>None</code>, such that</p>

<pre><code>dictionary.get(""bogus"")  # &lt;-- No default specified -- defaults to None
</code></pre>

<p>returns <code>None</code> just like </p>

<pre><code>dictionary.get(""bogus"", None)
</code></pre>

<p>would. </p>
","11041421"
"'too many values to unpack', iterating over a dict. key=>string, value=>list","213049","","<p>I am getting the <code>'too many values to unpack'</code> error. Any idea how I can fix this?</p>

<pre><code>first_names = ['foo', 'bar']
last_names = ['gravy', 'snowman']

fields = {
    'first_names': first_names,
    'last_name': last_names,
}        

for field, possible_values in fields:  # error happens on this line              
</code></pre>
","<p>You need to use something like <a href=""http://docs.python.org/library/stdtypes.html#dict.iteritems"" rel=""noreferrer"">iteritems</a>.</p>

<pre><code>for field, possible_values in fields.iteritems():
    print field, possible_values
</code></pre>

<p>See <a href=""https://stackoverflow.com/a/3294899/1489538"">this answer</a> for more information on iterating through dictionaries, such as using <code>items()</code>, across python versions.</p>

<p><b>EDIT</b><br>
Since <b>Python 3</b> iteritems() is <a href=""https://docs.python.org/3/whatsnew/3.0.html"" rel=""noreferrer"">no longer supported</a>. Use items() instead.</p>

<pre><code>for field, possible_values in fields.items():
    print(field, possible_values)
</code></pre>
","5466625"
"UnicodeDecodeError: 'utf8' codec can't decode byte 0xa5 in position 0: invalid start byte","212950","","<p>I am using <code>Python-2.6 CGI</code> scripts but found this error in server log while doing <code>json.dumps()</code>,</p>

<pre><code>Traceback (most recent call last):
  File ""/etc/mongodb/server/cgi-bin/getstats.py"", line 135, in &lt;module&gt;
    print json.dumps(​​__get​data())
  File ""/usr/lib/python2.7/json/__init__.py"", line 231, in dumps
    return _default_encoder.encode(obj)
  File ""/usr/lib/python2.7/json/encoder.py"", line 201, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File ""/usr/lib/python2.7/json/encoder.py"", line 264, in iterencode
    return _iterencode(o, 0)
UnicodeDecodeError: 'utf8' codec can't decode byte 0xa5 in position 0: invalid start byte
</code></pre>

<p>​Here ,</p>

<p><code>​__get​data()</code> function returns <code>dictionary {}</code> .</p>

<p>Before posting this question I have referred <strong><a href=""https://stackoverflow.com/questions/6180521/unicodedecodeerror-utf8-codec-cant-decode-bytes-in-position-3-6-invalid-dat"">this</a></strong> of question os SO.</p>

<hr>

<h2>UPDATES</h2>

<p>Following line is hurting JSON encoder,</p>

<pre><code>now = datetime.datetime.now()
now = datetime.datetime.strftime(now, '%Y-%m-%dT%H:%M:%S.%fZ')
print json.dumps({'current_time': now}) // this is the culprit
</code></pre>

<p>I got a temporary fix for it</p>

<pre><code>print json.dumps( {'old_time': now.encode('ISO-8859-1').strip() })
</code></pre>

<p>But I am not sure is it correct way to do it.</p>
","<p>The error is because there is some non-ascii character in the dictionary and it can't be encoded/decoded. One simple way to avoid this error is to encode such strings with <code>encode()</code> function as follows (if <code>a</code> is the string with non-ascii character):</p>

<pre><code>a.encode('utf-8').strip()
</code></pre>
","22216798"
"How to convert a set to a list in python?","212602","","<p>I am trying to convert a set to a list in Python 2.6. I'm using this syntax:</p>

<pre><code>first_list = [1,2,3,4]
my_set=set(first_list)
my_list = list(my_set)
</code></pre>

<p>However, I get the following stack trace:</p>

<pre><code>Traceback (most recent call last):
  File ""&lt;console&gt;"", line 1, in &lt;module&gt;
TypeError: 'set' object is not callable
</code></pre>

<p>How can I fix this?</p>
","<p>It is already a list</p>

<pre><code>type(my_set)
&gt;&gt;&gt; &lt;type 'list'&gt;
</code></pre>

<p>Do you want something like </p>

<pre><code>my_set = set([1,2,3,4])
my_list = list(my_set)
print my_list
&gt;&gt; [1, 2, 3, 4]
</code></pre>

<p>EDIT : 
Output of your last comment</p>

<pre><code>&gt;&gt;&gt; my_list = [1,2,3,4]
&gt;&gt;&gt; my_set = set(my_list)
&gt;&gt;&gt; my_new_list = list(my_set)
&gt;&gt;&gt; print my_new_list
[1, 2, 3, 4]
</code></pre>

<p>I'm wondering if you did something like this : </p>

<pre><code>&gt;&gt;&gt; set=set()
&gt;&gt;&gt; set([1,2])
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
TypeError: 'set' object is not callable
</code></pre>
","6594009"
"How to break out of multiple loops in Python?","212465","","<p>Given the following code (that doesn't work):</p>

<pre><code>while True:
    #snip: print out current state
    while True:
        ok = get_input(""Is this ok? (y/n)"")
        if ok == ""y"" or ok == ""Y"": break 2 #this doesn't work :(
        if ok == ""n"" or ok == ""N"": break
    #do more processing with menus and stuff
</code></pre>

<p>Is there a way to make this work? Or do I have do one check to break out of the input loop, then another, more limited, check in the outside loop to break out all together if the user is satisfied?</p>

<p><strong>Edit-FYI:</strong> get_input is a short function I wrote that supports showing a prompt and default values and all that fanciness and returns <code>stdin.readline().strip()</code></p>
","<p>My first instinct would be to refactor the nested loop into a function and use <code>return</code> to break out. </p>
","189685"
"Most efficient way to reverse a numpy array","212309","","<p>Believe it or not, after profiling my current code, the repetitive operation of numpy array reversion ate a giant chunk of the running time. What I have right now is the common view-based method:</p>

<pre><code>reversed_arr = arr[::-1]
</code></pre>

<p>Is there any other way to do it more efficiently, or is it just an illusion from my obsession with unrealistic numpy performance?</p>
","<p>When you create <code>reversed_arr</code> you are creating a view into the original array.  You can then change the original array, and the view will update to reflect the changes.</p>

<p>Are you re-creating the view more often than you need to?  You should be able to do something like this:</p>

<pre><code>arr = np.array(some_sequence)
reversed_arr = arr[::-1]

do_something(arr)
look_at(reversed_arr)
do_something_else(arr)
look_at(reversed_arr)
</code></pre>

<p>I'm not a numpy expert, but this seems like it would be the fastest way to do things in numpy.  If this is what you are already doing, I don't think you can improve on it.</p>

<p>P.S. Great discussion of numpy views here:</p>

<p><a href=""https://stackoverflow.com/questions/4370745/view-onto-a-numpy-array"">View onto a numpy array?</a></p>
","6771620"
"Python: TypeError: cannot concatenate 'str' and 'int' objects","212273","","<p>I have this python program that adds strings to integers:</p>

<pre><code>a = raw_input(""Enter a: "")
b = raw_input(""Enter b: "")
print ""a + b as strings: "" + a + b
a = int(a)
b = int(b)
c = a + b
str(c)
print ""a + b as integers: "" + c
</code></pre>

<p>I get this error:</p>

<pre><code>Python: TypeError: cannot concatenate 'str' and 'int' objects
</code></pre>

<p>How can I add strings to integers?</p>
","<p>There are two ways to fix the problem which is caused by the last <code>print</code> statement. </p>

<p>You can assign the result of the <code>str(c)</code> call to <code>c</code> as correctly shown by @jamylak and then concatenate all of the strings, or you can replace the last <code>print</code> simply with this:</p>

<pre><code>print ""a + b as integers: "", c  # note the comma here
</code></pre>

<p>in which case </p>

<pre><code>str(c)
</code></pre>

<p>isn't necessary and can be deleted.</p>

<p>Output of sample run:</p>

<pre><code>Enter a: 3
Enter b: 7
a + b as strings:  37
a + b as integers:  10
</code></pre>

<p>with:</p>

<pre><code>a = raw_input(""Enter a: "")
b = raw_input(""Enter b: "")
print ""a + b as strings: "" + a + b  # + everywhere is ok since all are strings
a = int(a)
b = int(b)
c = a + b
print ""a + b as integers: "", c
</code></pre>
","11844131"
"How do I keep Python print from adding newlines or spaces?","212230","","<p>In python, if I say</p>

<pre><code>print 'h'
</code></pre>

<p>I get the letter h and a newline.  If I say </p>

<pre><code>print 'h',
</code></pre>

<p>I get the letter h and no newline.  If I say</p>

<pre><code>print 'h',
print 'm',
</code></pre>

<p>I get the letter h, a space, and the letter m.  How can I prevent Python from printing the space?</p>

<p>The print statements are different iterations of the same loop so I can't just use the + operator.</p>
","<p>You can use:</p>

<pre><code>sys.stdout.write('h')
sys.stdout.write('m')
</code></pre>
","255154"
"How can I parse a YAML file in Python","212199","","<p>How can I parse a YAML file in Python?</p>
","<p>The easiest and pureist method without relying on C headers is PyYaml:</p>

<pre><code>#!/usr/bin/env python

import yaml

with open(""example.yaml"", 'r') as stream:
    try:
        print(yaml.load(stream))
    except yaml.YAMLError as exc:
        print(exc)
</code></pre>

<p>Err.. that's it... how many lines of code would that take me in Java... any ideas? : ) more info here:</p>

<p><a href=""http://pyyaml.org/wiki/PyYAMLDocumentation"" rel=""noreferrer"">http://pyyaml.org/wiki/PyYAMLDocumentation</a></p>
","1774043"
"CURL alternative in Python","211658","","<p>I have a cURL call that I use in PHP:</p>

<blockquote>
  <p>curl -i -H 'Accept: application/xml' -u login:key ""<a href=""https://app.streamsend.com/emails"" rel=""noreferrer"">https://app.streamsend.com/emails</a>""</p>
</blockquote>

<p>I need a way to do the same thing in Python. Is there an alternative to cURL in Python. I know of urllib but I'm a Python noob and have no idea how to use it.</p>
","<pre><code>import urllib2

manager = urllib2.HTTPPasswordMgrWithDefaultRealm()
manager.add_password(None, 'https://app.streamsend.com/emails', 'login', 'key')
handler = urllib2.HTTPBasicAuthHandler(manager)

director = urllib2.OpenerDirector()
director.add_handler(handler)

req = urllib2.Request('https://app.streamsend.com/emails', headers = {'Accept' : 'application/xml'})

result = director.open(req)
# result.read() will contain the data
# result.info() will contain the HTTP headers

# To get say the content-length header
length = result.info()['Content-Length']
</code></pre>

<p>Your cURL call using urllib2 instead. Completely untested.</p>
","2668139"
"What does the 'b' character do in front of a string literal?","211424","","<p>Apparently, the following is valid syntax</p>

<pre><code>my_string = b'The string'
</code></pre>

<p>I would like to know:</p>

<ol>
<li>What does this <code>b</code> character in front of the string mean?</li>
<li>What are the effects of using it?</li>
<li>What are appropriate situations to use it?</li>
</ol>

<p>I found a <a href=""https://stackoverflow.com/q/4749442/346561"">related question</a> right here on SO, but that question is about PHP though, and it states the <code>b</code> is used to indicate the string is binary, as opposed to Unicode, which was needed for code to be compatible from version of PHP &lt; 6, when migrating to PHP 6. I don't think this applies to Python.</p>

<p>I did find <a href=""http://docs.python.org/tutorial/introduction.html#unicode-strings"" rel=""nofollow noreferrer"">this documentation</a> on the Python site about using a <code>u</code> character in the same syntax to specify a string as Unicode. Unfortunately, it doesn't mention the <strong>b</strong> character anywhere in that document.</p>

<p>Also, just out of curiosity, are there more symbols than the <code>b</code> and <code>u</code> that do other things?</p>
","<p>To quote <a href=""https://docs.python.org/2/reference/lexical_analysis.html#string-literals"">the Python 2.x documentation</a>:</p>

<blockquote>
  <p>A prefix of 'b' or 'B' is ignored in
  Python 2; it indicates that the
  literal should become a bytes literal
  in Python 3 (e.g. when code is
  automatically converted with 2to3). A
  'u' or 'b' prefix may be followed by
  an 'r' prefix.</p>
</blockquote>

<p>The <a href=""https://docs.python.org/3.3/reference/lexical_analysis.html#string-literals"">Python 3.3 documentation</a> states:</p>

<blockquote>
  <p>Bytes literals are always prefixed with 'b' or 'B'; they produce an instance of the bytes type instead of the str type. They may only contain ASCII characters; bytes with a numeric value of 128 or greater must be expressed with escapes.</p>
</blockquote>
","6269785"
"python and sys.argv","211301","","<pre><code>if len(sys.argv) &lt; 2:
    sys.stderr.write('Usage: sys.argv[0] ')
    sys.exit(1)


if not os.path.exists(sys.argv[1]):
    sys.stderr.write('ERROR: Database sys.argv[1] was not found!')
    sys.exit(1)
</code></pre>

<p>This is a portion of code I'm working on. The first part I'm trying to say if the user doesn't type <code>python programname something</code> then it will exit.</p>

<p>The second part I'm trying to see if the database exists. On both places I'm unsure if I have the correct way to write out the sys.argv's by stderr or not.</p>
","<p>BTW you can pass the error message directly to sys.exit:</p>

<pre><code>if len(sys.argv) &lt; 2:
    sys.exit('Usage: %s database-name' % sys.argv[0])

if not os.path.exists(sys.argv[1]):
    sys.exit('ERROR: Database %s was not found!' % sys.argv[1])
</code></pre>
","984145"
"How can I convert a datetime object to milliseconds since epoch (unix time) in Python?","210705","","<p>I have a Python <code>datetime</code> object that I want to convert to unix time, or seconds/milliseconds since the 1970 epoch.</p>

<p>How do I do this?</p>
","<p>It appears to me that the simplest way to do this is</p>

<pre><code>import datetime

epoch = datetime.datetime.utcfromtimestamp(0)

def unix_time_millis(dt):
    return (dt - epoch).total_seconds() * 1000.0
</code></pre>
","11111177"
"In Python, what does it mean if an object is subscriptable or not?","210669","","<p>Which types of objects fall into the domain of ""subscriptable""?</p>
","<p>It basically means that the object implements the <code>__getitem__()</code> method. In other words, it describes objects that are ""containers"", meaning they contain other objects. This includes lists, tuples, and dictionaries.</p>
","216980"
"How do you create a daemon in Python?","210565","","<p><a href=""http://www.google.co.uk/search?q=python+daemon"" rel=""noreferrer"">Searching on Google</a> reveals x2 code snippets. The first result is to <a href=""http://code.activestate.com/recipes/278731/"" rel=""noreferrer"">this code recipe</a> which has a lot of documentation and explanation, along with some useful discussion underneath. </p>

<p>However, <a href=""http://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python/"" rel=""noreferrer"">another code sample</a>, whilst not containing so much documentation, includes sample code for passing commands such as start, stop and restart. It also creates a PID file which can be handy for checking if the daemon is already running etc.</p>

<p>These samples both explain how to create the daemon. Are there any additional things that need to be considered? Is one sample better than the other, and why?</p>
","<p>Sander Marechal's <a href=""http://web.archive.org/web/20131017130434/http://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python/"" rel=""noreferrer"">code sample</a> is superior to the original, which was originally posted in 2004.  I once contributed a daemonizer for Pyro, but would probably use Sander's code if I had to do it over.</p>
","473702"
"sys.argv[1] meaning in script","210447","","<p>I'm currently teaching myself Python and was just wondering (In reference to my example below) in simplified terms what the sys.argv[1] represents. Is it simply asking for an input?</p>

<pre><code>#!/usr/bin/python3.1

# import modules used here -- sys is a very standard one
import sys

# Gather our code in a main() function
def main():
  print ('Hello there', sys.argv[1])
  # Command line args are in sys.argv[1], sys.argv[2] ..
  # sys.argv[0] is the script name itself and can be ignored

# Standard boilerplate to call the main() function to begin
# the program.
if __name__ == '__main__':
  main()
</code></pre>
","<p><em>I would like to note that previous answers made many assumptions about the user's knowledge. This answer attempts to answer the question at a more tutorial level.</em></p>

<p>For every invocation of Python, <code>sys.argv</code> is automatically a list of strings representing the arguments (as separated by spaces) on the command-line. The name comes from the <a href=""http://www.crasseux.com/books/ctutorial/argc-and-argv.html"" rel=""noreferrer"">C programming convention</a> in which argv and argc represent the command line arguments.</p>

<p>You'll want to learn more about lists and strings as you're familiarizing yourself with Python, but it the meantime, here are a few things to know.</p>

<p>You can simply create a script that prints the arguments as they're represented. It also prints the number of arguments, using the <code>len</code> function on the list.</p>

<pre><code>from __future__ import print_function
import sys
print(sys.argv, len(sys.argv))
</code></pre>

<p>The script requires Python 2.6 or later. If you call this script <code>print_args.py</code>, you can invoke it with different arguments to see what happens.</p>

<pre><code>&gt; python print_args.py
['print_args.py'] 1

&gt; python print_args.py foo and bar
['print_args.py', 'foo', 'and', 'bar'] 4

&gt; python print_args.py ""foo and bar""
['print_args.py', 'foo and bar'] 2

&gt; python print_args.py ""foo and bar"" and baz
['print_args.py', 'foo and bar', 'and', 'baz'] 4
</code></pre>

<p>As you can see, the command-line arguments include the script name but not the interpreter name. In this sense, Python treats the script <em>as</em> the executable. If you need to know the name of the executable (python in this case), you can use <code>sys.executable</code>.</p>

<p>You can see from the examples that it is possible to receive arguments that do contain spaces if the user invoked the script with arguments encapsulated in quotes, so what you get is the list of arguments as supplied by the user.</p>

<p>Now in your Python code, you can use this list of strings as input to your program. Since lists are indexed by zero-based integers, you can get the individual items using the list[0] syntax. For example, to get the script name:</p>

<pre><code>script_name = sys.argv[0] # this will always work.
</code></pre>

<p>Although that's interesting to know, you rarely need to know your script name. To get the first argument after the script for a filename, you could do the following:</p>

<pre><code>filename = sys.argv[1]
</code></pre>

<p>This is a very common usage, but note that it will fail with an IndexError if no argument was supplied.</p>

<p>Also, Python lets you reference a slice of a list, so to get <em>another list</em> of just the user-supplied arguments (but without the script name), you can do</p>

<pre><code>user_args = sys.argv[1:] # get everything after the script name
</code></pre>

<p>Additionally, Python allows you to assign a sequence of items (including lists) to variable names. So if you expect the user to always supply two arguments, you can assign those arguments (as strings) to two variables:</p>

<pre><code>user_args = sys.argv[1:]
fun, games = user_args # len(user_args) had better be 2
</code></pre>

<p>So, in final answer to your specific question, <code>sys.argv[1]</code> represents the first command-line argument (as a <code>string</code>) supplied to the script in question. It will not prompt for input, but it will fail with an IndexError if no arguments are supplied on the command-line following the script name.</p>
","4118133"
"Remove all special characters, punctuation and spaces from string","210441","","<p>I need to remove all special characters, punctuation and spaces from a string so that I only have letters and numbers.</p>
","<p>This can be done without <code>regex</code>:</p>

<pre><code>&gt;&gt;&gt; string = ""Special $#! characters   spaces 888323""
&gt;&gt;&gt; ''.join(e for e in string if e.isalnum())
'Specialcharactersspaces888323'
</code></pre>

<p>You can use <code>str.isalnum</code>:</p>

<blockquote>
<pre><code>S.isalnum() -&gt; bool

Return True if all characters in S are alphanumeric
and there is at least one character in S, False otherwise.
</code></pre>
</blockquote>

<p>If you insist on using <code>regex</code>, other solutions will do fine. However note that if it can be done without using a regular expression, that's the best way to go about it.</p>
","5843560"
"Generating an MD5 checksum of a file","210247","","<p>Is there any simple way of generating (and checking) MD5 checksums of a list of files in Python? (I have a small program I'm working on, and I'd like to confirm the checksums of the files).</p>
","<p>You can use <a href=""http://docs.python.org/library/hashlib.html"" rel=""noreferrer"">hashlib.md5()</a></p>

<p>Note that sometimes you won't be able to fit the whole file in memory. In that case, you'll have to read chunks of 4096 bytes sequentially and feed them to the Md5 function:</p>

<pre><code>def md5(fname):
    hash_md5 = hashlib.md5()
    with open(fname, ""rb"") as f:
        for chunk in iter(lambda: f.read(4096), b""""):
            hash_md5.update(chunk)
    return hash_md5.hexdigest()
</code></pre>
","3431838"
"How to check if a variable is equal to one string or another string?","210031","","<pre><code>if var is 'stringone' or 'stringtwo':
    dosomething()
</code></pre>

<p>This does not work! I have a variable and I need it to do something when it is either of the values, but it will not enter the if statement. In Java <code>if (var == ""stringone"" || ""stringtwo"")</code> works. How do I write this in Python?</p>
","<p>This does not do what you expect:</p>

<pre><code>if var is 'stringone' or 'stringtwo':
    dosomething()
</code></pre>

<p>It is the same as:</p>

<pre><code>if (var is 'stringone') or 'stringtwo':
    dosomething()
</code></pre>

<p>Which is always true, since <code>'stringtwo</code> is considered a ""true"" value.</p>

<p>There are two alternatives:</p>

<pre><code>if var in ('stringone', 'stringtwo'):
    dosomething()
</code></pre>

<p>Or you can write separate equality tests,</p>

<pre><code>if var == 'stringone' or var == 'stringtwo':
    dosomething()
</code></pre>

<p>Don't use <code>is</code>, because <code>is</code> compares object identity.  You might get away with it sometimes because Python interns a lot of strings, just like you might get away with it in Java because Java interns a lot of strings.  But don't use <code>is</code> unless you really want object identity.</p>

<pre><code>&gt;&gt;&gt; 'a' + 'b' == 'ab'
True
&gt;&gt;&gt; 'a' + 'b' is 'abc'[:2]
False # but could be True
&gt;&gt;&gt; 'a' + 'b' is 'ab'
True  # but could be False
</code></pre>
","12774319"
"TypeError: 'list' object is not callable while trying to access a list","209217","","<p>I am trying to run this code where I have a list of lists. I need to add to inner lists, but I get the error </p>

<pre><code>TypeError: 'list' object is not callable.
</code></pre>

<p>Can anyone tell me what am I doing wrong here.</p>

<pre><code>def createlists():
    global maxchar
    global minchar
    global worddict
    global wordlists

    for i in range(minchar, maxchar + 1):
        wordlists.insert(i, list())
    #add data to list now
    for words in worddict.keys():
        print words
        print  wordlists(len(words)) # &lt;--- Error here.
        (wordlists(len(words))).append(words)  # &lt;-- Error here too
        print ""adding word "" + words + "" at "" + str(wordlists(len(words)))
    print wordlists(5)
</code></pre>
","<p>For accessing the elements of a list you need to use the square brackets (<code>[]</code>) and not the parenthesis (<code>()</code>).</p>

<p>Instead of:</p>

<pre><code>print  wordlists(len(words))
</code></pre>

<p>you need to use:</p>

<pre><code>print worldlists[len(words)]
</code></pre>

<p>And instead of:</p>

<pre><code>(wordlists(len(words))).append(words)
</code></pre>

<p>you need to use:</p>

<pre><code>worldlists[len(words)].append(words)
</code></pre>
","5735943"
"Converting Epoch time into the datetime","209180","","<p>I am getting a response from the rest is an Epoch time format like</p>

<pre><code>start_time = 1234566
end_time = 1234578
</code></pre>

<p>I want to convert that epoch seconds in MySQL format time so that I could store the differences in my MySQL database.</p>

<p>I tried:</p>

<pre><code>&gt;&gt;&gt; import time
&gt;&gt;&gt; time.gmtime(123456)
time.struct_time(tm_year=1970, tm_mon=1, tm_mday=2, tm_hour=10, tm_min=17, tm_sec=36, tm_wday=4, tm_yday=2, tm_isdst=0)
</code></pre>

<p>The above result is not what I am expecting. I want it be like </p>

<pre><code>2012-09-12 21:00:00
</code></pre>

<p>Please suggest how can I achieve this?</p>

<p>Also,
Why I am getting <code>TypeError: a float is required</code> for</p>

<pre class=""lang-none prettyprint-override""><code>&gt;&gt;&gt; getbbb_class.end_time = 1347516459425
&gt;&gt;&gt; mend = time.gmtime(getbbb_class.end_time).tm_hour
Traceback (most recent call last):
  ...
TypeError: a float is required
</code></pre>
","<p>To convert your time value (float or int) to a formatted string, use:</p>

<pre><code>time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(1347517370))
</code></pre>
","12400584"
"Pandas - how to get the data frame index as an array","209177","","<p>Do you know how to get the index column of an dataframe as an array? I have a list of accession numbers in the ""Accession"" column of a CSV file, which I imported into Pandas, and during the import, I set the index to the ""Accession"" column. Now, I need the ""Accession"" column to be a set of labels in a later step, but I don't know how to extract it standalone.</p>
","<p>You should use the <code>values</code> attribute:</p>

<pre><code>In [1]: df = pd.DataFrame(index=['a', 'b'])

In [2]: df.index.values
Out[2]: array(['a', 'b'], dtype=object)
</code></pre>

<p><em>This accesses how the data is already stored, so there's no need for a conversion.<br>
Note: This attribute is also available for many other pandas' objects.</em></p>
","17242374"
"Python AttributeError: 'module' object has no attribute 'Serial'","208825","","<p>I'm trying to access a serial port with Python 2.6 on my Raspberry Pi running Debian.
My script named <code>serial.py</code> tries to import pySerial:</p>

<pre><code>import serial
ser = serial.Serial('/dev/ttyAMA0', 9600)
ser.write(""hello world!"")
</code></pre>

<p>For some reason it refuses to establish the serial connection with this error:</p>

<pre><code>AttributeError: 'module' object has no attribute 'Serial'
</code></pre>

<p>When I try to type the same code in the interactive Python interpreter it still doesn't work.</p>

<p>Strangely, it used to work about a couple hours ago.</p>

<p>What could be the problem? I've tried to fix this for a while, installing pySerial again, rewriting my code, double-checking the serial port, etc.</p>

<p>Thanks in advance!</p>
","<p>You're importing the module, not the class. So, you must write:
<code>from serial import serial</code></p>
","11404052"
"Python loop counter in a for loop","208110","","<p>In my example code below, is the counter = 0 really required, or is there a better, more Python, way to get access to a loop counter? I saw a few PEPs related to loop counters, but they were either deferred or rejected (<a href=""http://www.python.org/dev/peps/pep-0212/"" rel=""noreferrer"">PEP 212</a> and <a href=""http://www.python.org/dev/peps/pep-0281/"" rel=""noreferrer"">PEP 281</a>).</p>

<p>This is a simplified example of my problem. In my real application this is done with graphics and the whole menu has to be repainted each frame. But this demonstrates it in a simple text way that is easy to reproduce.</p>

<p>Maybe I should also add that I'm using Python 2.5, although I'm still interested if there is a way specific to 2.6 or higher.</p>

<pre><code># Draw all the options, but highlight the selected index
def draw_menu(options, selected_index):
    counter = 0
    for option in options:
        if counter == selected_index:
            print "" [*] %s"" % option
        else:
            print "" [ ] %s"" % option
        counter += 1


options = ['Option 0', 'Option 1', 'Option 2', 'Option 3']

draw_menu(option, 2) # Draw menu with ""Option2"" selected
</code></pre>

<p>When run, it outputs:</p>

<pre><code> [ ] Option 0
 [ ] Option 1
 [*] Option 2
 [ ] Option 3
</code></pre>
","<p><strong>Use <a href=""http://docs.python.org/library/functions.html#enumerate"" rel=""noreferrer""><code>enumerate()</code></a> like so:</strong></p>

<pre><code>def draw_menu(options, selected_index):
    for counter, option in enumerate(options):
        if counter == selected_index:
            print "" [*] %s"" % option
        else:
            print "" [ ] %s"" % option    

options = ['Option 0', 'Option 1', 'Option 2', 'Option 3']
draw_menu(options, 2)
</code></pre>

<p><strong>Note</strong>: You can optionally put parenthesis around <code>counter, option</code>, like <code>(counter, option)</code>, if you want, but they're extraneous and not normally included.</p>
","1185557"
"'python' is not recognized as an internal or external command","207820","","<p>So I have recently installed Python Version 2.7.5 and I have made a little loop thing with it but the problem is, when I go to cmd and type <code>python testloop.py</code> I get the error: </p>

<blockquote>
  <p>'python' is not recognized as an internal or external command</p>
</blockquote>

<p>I have tried setting the path but no avail.</p>

<p>Here is my path:</p>

<blockquote>
  <p>C:\Program Files\Python27</p>
</blockquote>

<p>As you can see, this is where my Python is installed. I don't know what else to do. Can someone help?</p>
","<p>You need to add that folder to your Windows Path:</p>

<p><a href=""https://docs.python.org/2/using/windows.html"" rel=""noreferrer"">https://docs.python.org/2/using/windows.html</a> Taken from this question.</p>
","17953148"
"Windows Scipy Install: No Lapack/Blas Resources Found","207705","","<p>I am trying to install python and a series of packages onto a 64bit windows 7 desktop. I have installed Python 3.4, have Microsoft Visual Studio C++ installed, and have successfully installed numpy, pandas and a few others. I am getting the following error when trying to install scipy;</p>

<pre><code>numpy.distutils.system_info.NotFoundError: no lapack/blas resources found
</code></pre>

<p>I am using pip install offline, the install command I am using is;</p>

<pre><code>pip install --no-index --find-links=""S:\python\scipy 0.15.0"" scipy
</code></pre>

<p>I have read the posts on here about requiring a compiler which if I understand correctly is the VS C++ compiler. I am using the 2010 version as I am using Python 3.4. This has worked for other packages.</p>

<p>Do I have to use the window binary or is there a way I can get pip install to work?</p>

<p>Many thanks for the help</p>
","<p>The solution to the absence of BLAS/LAPACK libraries for SciPy installations on Windows 7 64-bit is described here:</p>

<p><a href=""http://www.scipy.org/scipylib/building/windows.html"" rel=""noreferrer"">http://www.scipy.org/scipylib/building/windows.html</a></p>

<p>Installing Anaconda is much easier, but you still don't get Intel MKL or GPU support without paying for it (they are in the MKL Optimizations and Accelerate add-ons for Anaconda - I'm not sure if they use PLASMA and MAGMA either). With MKL optimization, numpy has outperformed IDL on large matrix computations by 10-fold. MATLAB uses the Intel MKL library internally and supports GPU computing, so one might as well use that for the price if they're a student ($50 for MATLAB + $10 for the Parallel Computing Toolbox). If you get the free trial of Intel Parallel Studio, it comes with the MKL library, as well as C++ and FORTRAN compilers that will come in handy if you want to install BLAS and LAPACK from MKL or ATLAS on Windows:</p>

<p><a href=""http://icl.cs.utk.edu/lapack-for-windows/lapack/"" rel=""noreferrer"">http://icl.cs.utk.edu/lapack-for-windows/lapack/</a></p>

<p>Parallel Studio also comes with the Intel MPI library, useful for cluster computing applications and their latest Xeon processsors. While the process of building BLAS and LAPACK with MKL optimization is not trivial, the benefits of doing so for Python and R are quite large, as described in this Intel webinar:</p>

<p><a href=""https://software.intel.com/en-us/articles/powered-by-mkl-accelerating-numpy-and-scipy-performance-with-intel-mkl-python"" rel=""noreferrer"">https://software.intel.com/en-us/articles/powered-by-mkl-accelerating-numpy-and-scipy-performance-with-intel-mkl-python</a></p>

<p>Anaconda and Enthought have built businesses out of making this functionality and a few other things easier to deploy. However, it is freely available to those willing to do a little work (and a little learning).</p>

<p>For those who use R, you can now get MKL optimized BLAS and LAPACK for free with <a href=""http://www.revolutionanalytics.com/revolution-r-open"" rel=""noreferrer"">R Open</a> from Revolution Analytics.</p>

<p>EDIT: Anaconda Python now ships with MKL optimization, as well as support for a number of other Intel library optimizations through the Intel Python distribution. However, GPU support for Anaconda in the Accelerate library (formerly known as NumbaPro) is still over $10k USD! The best alternatives for that are probably PyCUDA and scikit-cuda, as copperhead (essentially a free version of Anaconda Accelerate) unfortunately ceased development five years ago. It can be found <a href=""https://github.com/bryancatanzaro/copperhead"" rel=""noreferrer"">here</a> if anybody wants to pick up where they left off.</p>
","29860484"
"How to calculate the angle between a line and the horizontal axis?","207418","","<p>In a programming language (Python, C#, etc) I need to determine how to calculate the angle between a line and the horizontal axis?</p>

<p>I think an image describes best what I want:</p>

<p><img src=""https://i.stack.imgur.com/HUKbR.png"" alt=""no words can describe this""></p>

<p>Given (P1<sub>x</sub>,P1<sub>y</sub>) and (P2<sub>x</sub>,P2<sub>y</sub>) what is the best way to calculate this angle? The origin is in the topleft and only the positive quadrant is used.</p>
","<p>First find the difference between the start point and the end point (here, this is more of a directed line segment, not a ""line"", since lines extend infinitely and don't start at a particular point).</p>

<pre><code>deltaY = P2_y - P1_y
deltaX = P2_x - P1_x
</code></pre>

<p>Then calculate the angle (which runs from the positive X axis at <code>P1</code> to the positive Y axis at <code>P1</code>).</p>

<pre><code>angleInDegrees = arctan(deltaY / deltaX) * 180 / PI
</code></pre>

<p>But <code>arctan</code> may not be ideal, because dividing the differences this way will erase the distinction needed to distinguish which quadrant the angle is in (see below). Use the following instead if your language includes an <code>atan2</code> function:</p>

<pre><code>angleInDegrees = atan2(deltaY, deltaX) * 180 / PI
</code></pre>

<p>EDIT (Feb. 22, 2017): In general, however, calling <code>atan2(deltaY,deltaX)</code> just to get the proper angle for <code>cos</code> and <code>sin</code> may be inelegant. In those cases, you can often do the following instead:</p>

<ol>
<li>Treat <code>(deltaX, deltaY)</code> as a vector.</li>
<li>Normalize that vector to a unit vector. To do so, divide <code>deltaX</code> and <code>deltaY</code> by the vector's length (<code>sqrt(deltaX*deltaX+deltaY*deltaY)</code>), unless the length is 0.</li>
<li>After that, <code>deltaX</code> will now be the cosine of the angle between the vector and the horizontal axis (in the direction from the positive X to the positive Y axis at <code>P1</code>).</li>
<li>And <code>deltaY</code> will now be the sine of that angle.</li>
<li>If the vector's length is 0, it won't have an angle between it and the horizontal axis (so it won't have a meaningful sine and cosine).</li>
</ol>

<p>EDIT (Feb. 28, 2017): Even without normalizing <code>(deltaX, deltaY)</code>:</p>

<ul>
<li>The sign of <code>deltaX</code> will tell you whether the cosine described in step 3 is positive or negative.</li>
<li>The sign of <code>deltaY</code> will tell you whether the sine described in step 4 is positive or negative.</li>
<li>The signs of <code>deltaX</code> and <code>deltaY</code> will tell you which quadrant the angle is in, in relation to the positive X axis at <code>P1</code>:

<ul>
<li><code>+deltaX</code>, <code>+deltaY</code>: 0 to 90 degrees.</li>
<li><code>-deltaX</code>, <code>+deltaY</code>: 90 to 180 degrees.</li>
<li><code>-deltaX</code>, <code>-deltaY</code>: 180 to 270 degrees (-180 to -90 degrees).</li>
<li><code>+deltaX</code>, <code>-deltaY</code>: 270 to 360 degrees (-90 to 0 degrees).</li>
</ul></li>
</ul>

<hr>

<p><strong>An implementation in Python using radians (provided on July 19, 2015 by Eric Leschinski, who edited my answer):</strong></p>

<pre><code>from math import *
def angle_trunc(a):
    while a &lt; 0.0:
        a += pi * 2
    return a

def getAngleBetweenPoints(x_orig, y_orig, x_landmark, y_landmark):
    deltaY = y_landmark - y_orig
    deltaX = x_landmark - x_orig
    return angle_trunc(atan2(deltaY, deltaX))

angle = getAngleBetweenPoints(5, 2, 1,4)
assert angle &gt;= 0, ""angle must be &gt;= 0""
angle = getAngleBetweenPoints(1, 1, 2, 1)
assert angle == 0, ""expecting angle to be 0""
angle = getAngleBetweenPoints(2, 1, 1, 1)
assert abs(pi - angle) &lt;= 0.01, ""expecting angle to be pi, it is: "" + str(angle)
angle = getAngleBetweenPoints(2, 1, 2, 3)
assert abs(angle - pi/2) &lt;= 0.01, ""expecting angle to be pi/2, it is: "" + str(angle)
angle = getAngleBetweenPoints(2, 1, 2, 0)
assert abs(angle - (pi+pi/2)) &lt;= 0.01, ""expecting angle to be pi+pi/2, it is: "" + str(angle)
angle = getAngleBetweenPoints(1, 1, 2, 2)
assert abs(angle - (pi/4)) &lt;= 0.01, ""expecting angle to be pi/4, it is: "" + str(angle)
angle = getAngleBetweenPoints(-1, -1, -2, -2)
assert abs(angle - (pi+pi/4)) &lt;= 0.01, ""expecting angle to be pi+pi/4, it is: "" + str(angle)
angle = getAngleBetweenPoints(-1, -1, -1, 2)
assert abs(angle - (pi/2)) &lt;= 0.01, ""expecting angle to be pi/2, it is: "" + str(angle)
</code></pre>

<p>All tests pass. See <a href=""https://en.wikipedia.org/wiki/Unit_circle"" rel=""noreferrer"">https://en.wikipedia.org/wiki/Unit_circle</a></p>
","7586218"
"Python dictionary from an object's fields","207316","","<p>Do you know if there is a built-in function to build a dictionary from an arbitrary object? I'd like to do something like this:</p>

<pre><code>&gt;&gt;&gt; class Foo:
...     bar = 'hello'
...     baz = 'world'
...
&gt;&gt;&gt; f = Foo()
&gt;&gt;&gt; props(f)
{ 'bar' : 'hello', 'baz' : 'world' }
</code></pre>

<p><strong>NOTE:</strong> It should not include methods. Only fields.</p>
","<p>Note that best practice in Python 2.7 is to use <em><a href=""https://www.python.org/doc/newstyle/"" rel=""noreferrer"">new-style</a></em> classes (not needed with Python 3), i.e.</p>

<pre><code>class Foo(object):
   ...
</code></pre>

<p>Also, there's a difference between an 'object' and a 'class'. To build a dictionary from an arbitrary <em>object</em>, it's sufficient to use <code>__dict__</code>. Usually, you'll declare your methods at class level and your attributes at instance level, so <code>__dict__</code> should be fine. For example:</p>

<pre class=""lang-python prettyprint-override""><code>&gt;&gt;&gt; class A(object):
...   def __init__(self):
...     self.b = 1
...     self.c = 2
...   def do_nothing(self):
...     pass
...
&gt;&gt;&gt; a = A()
&gt;&gt;&gt; a.__dict__
{'c': 2, 'b': 1}
</code></pre>

<p>A better approach (suggested by <a href=""https://stackoverflow.com/users/409638/robert"">robert</a> in comments) is the builtin <a href=""https://docs.python.org/3/library/functions.html#vars"" rel=""noreferrer""><code>vars</code></a> function:</p>

<pre class=""lang-python prettyprint-override""><code>&gt;&gt;&gt; vars(a)
{'c': 2, 'b': 1}
</code></pre>

<p>Alternatively, depending on what you want to do, it might be nice to inherit from <code>dict</code>. Then your class is <em>already</em> a dictionary, and if you want you can override <code>getattr</code> and/or <code>setattr</code> to call through and set the dict. For example:</p>

<pre><code>class Foo(dict):
    def __init__(self):
        pass
    def __getattr__(self, attr):
        return self[attr]

    # etc...
</code></pre>
","62680"
"How to use PYTHONPATH","207258","","<p>How can I make any use of PYTHONPATH? When I try to run a script in the path the file is not
found. When I cd to the directory holding the script the script runs. So what good is the
PYTHONPATH?</p>

<pre><code>$ echo $PYTHONPATH
:/home/randy/lib/python

$ tree -L 1 '/home/randy/lib/python' 
/home/randy/lib/python
├── gbmx_html.py
├── gbmx.py
├── __init__.py
├── __pycache__
├── scripts
└── yesno.py

$ python gbmx.py -h
python: can't open file 'gbmx.py': [Errno 2] No such file or directory

$ cd '/home/randy/lib/python'
</code></pre>

<p>After cd to the file directory it runs ..</p>

<pre><code>$ python gbmx.py -h
usage: gbmx.py [-h] [-b]
</code></pre>

<p>Why can I not make any use of the PYTHONPATH?</p>
","<p>I think you're a little confused. PYTHONPATH sets the search path for <strong>importing</strong> python modules, not for executing them like you're trying.</p>

<blockquote>
  <p>PYTHONPATH Augment the default search path for module files. The
  format is the same as the shell’s PATH: one or more directory
  pathnames separated by os.pathsep (e.g. colons on Unix or semicolons
  on Windows). Non-existent directories are silently ignored.</p>
  
  <p>In addition to normal directories, individual PYTHONPATH entries may
  refer to zipfiles containing pure Python modules (in either source or
  compiled form). Extension modules cannot be imported from zipfiles.</p>
  
  <p>The default search path is installation dependent, but generally
  begins with prefix/lib/pythonversion (see PYTHONHOME above). It is
  always appended to PYTHONPATH.</p>
  
  <p>An additional directory will be inserted in the search path in front
  of PYTHONPATH as described above under Interface options. The search
  path can be manipulated from within a Python program as the variable
  sys.path.</p>
</blockquote>

<p><a href=""http://docs.python.org/2/using/cmdline.html#envvar-PYTHONPATH"" rel=""noreferrer"">http://docs.python.org/2/using/cmdline.html#envvar-PYTHONPATH</a></p>

<p>What you're looking for is PATH. </p>

<pre><code>export PATH=$PATH:/home/randy/lib/python 
</code></pre>

<p>However, to run your python script as a program, you also need to set a <a href=""http://en.wikipedia.org/wiki/Shebang_%28Unix%29"" rel=""noreferrer"">shebang</a> for Python in the first line. Something like this should work:</p>

<pre><code>#!/usr/bin/env python
</code></pre>

<p>And give execution privileges to it:</p>

<pre><code>chmod +x /home/randy/lib/python/gbmx.py
</code></pre>

<p>Then you should be able to simply run <code>gmbx.py</code> from anywhere.</p>
","19917565"
"Python: Checking if a 'Dictionary' is empty doesn't seem to work","207198","","<p>I am trying to check if a dictionary is empty but it doesn't behave properly. It just skips it and displays <strong>ONLINE</strong> without anything except of display the message. Any ideas why ?</p>

<pre><code> def isEmpty(self, dictionary):
   for element in dictionary:
     if element:
       return True
     return False

 def onMessage(self, socket, message):
  if self.isEmpty(self.users) == False:
     socket.send(""Nobody is online, please use REGISTER command"" \
                 "" in order to register into the server"")
  else:
     socket.send(""ONLINE "" + ' ' .join(self.users.keys())) 
</code></pre>
","<p>Empty dictionaries <a href=""https://docs.python.org/2/library/stdtypes.html#truth-value-testing"" rel=""noreferrer"">evaluate to <code>False</code></a> in Python:</p>

<pre><code>&gt;&gt;&gt; dct = {}
&gt;&gt;&gt; bool(dct)
False
&gt;&gt;&gt; not dct
True
&gt;&gt;&gt;
</code></pre>

<p>Thus, your <code>isEmpty</code> function is unnecessary.  All you need to do is:</p>

<pre><code>def onMessage(self, socket, message):
    if not self.users:
        socket.send(""Nobody is online, please use REGISTER command"" \
                    "" in order to register into the server"")
    else:
        socket.send(""ONLINE "" + ' ' .join(self.users.keys()))
</code></pre>
","23177452"
"When is del useful in python?","206922","","<p>I can't really think of any reason why python needs the <code>del</code> keyword (and most languages seem to not have a similar keyword).  For instance, rather than deleting a variable, one could just assign <code>None</code> to it.  And when deleting from a dictionary, a <code>del</code> method could be added.</p>

<p>Is there any reason to keep <code>del</code> in python, or is it a vestige of Python's pre-garbage collection days?</p>
","<p>Firstly, you can del other things besides local variables</p>

<pre><code>del list_item[4]
del dictionary[""alpha""]
</code></pre>

<p>Both of which should be clearly useful. Secondly, using <code>del</code> on a local variable makes the intent clearer.  Compare:</p>

<pre><code>del foo
</code></pre>

<p>to</p>

<pre><code>foo = None
</code></pre>

<p>I know in the case of <code>del foo</code> that the intent is to remove the variable from scope. It's not clear that <code>foo = None</code> is doing that. If somebody just assigned <code>foo = None</code> I might think it was dead code. But I instantly know what somebody who codes <code>del foo</code> was trying to do.</p>
","6147100"
"Python - How do I pass a string into subprocess.Popen (using the stdin argument)?","206861","","<p>If I do the following:</p>

<pre><code>import subprocess
from cStringIO import StringIO
subprocess.Popen(['grep','f'],stdout=subprocess.PIPE,stdin=StringIO('one\ntwo\nthree\nfour\nfive\nsix\n')).communicate()[0]
</code></pre>

<p>I get:</p>

<pre><code>Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in ?
  File ""/build/toolchain/mac32/python-2.4.3/lib/python2.4/subprocess.py"", line 533, in __init__
    (p2cread, p2cwrite,
  File ""/build/toolchain/mac32/python-2.4.3/lib/python2.4/subprocess.py"", line 830, in _get_handles
    p2cread = stdin.fileno()
AttributeError: 'cStringIO.StringI' object has no attribute 'fileno'
</code></pre>

<p>Apparently a cStringIO.StringIO object doesn't quack close enough to a file duck to suit subprocess.Popen.  How do I work around this?</p>
","<p><a href=""https://docs.python.org/3/library/subprocess.html?highlight=subprocess#subprocess.Popen.communicate"" rel=""noreferrer""><code>Popen.communicate()</code></a> documentation:</p>

<blockquote>
  <p>Note that if you want to send data to
  the process’s stdin, you need to
  create the Popen object with
  stdin=PIPE. Similarly, to get anything
  other than None in the result tuple,
  you need to give stdout=PIPE and/or
  stderr=PIPE too.</p>
  
  <p><strong>Replacing os.popen*</strong></p>
</blockquote>

<pre><code>    pipe = os.popen(cmd, 'w', bufsize)
    # ==&gt;
    pipe = Popen(cmd, shell=True, bufsize=bufsize, stdin=PIPE).stdin
</code></pre>

<blockquote>
  <p><strong>Warning</strong> Use communicate() rather than
  stdin.write(), stdout.read() or
  stderr.read() to avoid deadlocks due
  to any of the other OS pipe buffers
  filling up and blocking the child
  process.</p>
</blockquote>

<p>So your example could be written as follows:</p>

<pre><code>from subprocess import Popen, PIPE, STDOUT

p = Popen(['grep', 'f'], stdout=PIPE, stdin=PIPE, stderr=STDOUT)    
grep_stdout = p.communicate(input=b'one\ntwo\nthree\nfour\nfive\nsix\n')[0]
print(grep_stdout.decode())
# -&gt; four
# -&gt; five
# -&gt;
</code></pre>

<hr>

<p>On the current Python 3 version, you could use <a href=""https://docs.python.org/3/library/subprocess.html#subprocess.run"" rel=""noreferrer""><code>subprocess.run</code></a>, to pass input as a string to an external command and get its exit status, and its output as a string back in one call:</p>

<pre><code>#!/usr/bin/env python3
from subprocess import run, PIPE

p = run(['grep', 'f'], stdout=PIPE,
        input='one\ntwo\nthree\nfour\nfive\nsix\n', encoding='ascii')
print(p.returncode)
# -&gt; 0
print(p.stdout)
# -&gt; four
# -&gt; five
# -&gt; 
</code></pre>
","165662"
"How to count the frequency of the elements in a list?","206153","","<p>I'm a python newbie, so please bear with me.</p>

<p>I need to find the frequency of elements in a list</p>

<pre><code>a = [1,1,1,1,2,2,2,2,3,3,4,5,5]
</code></pre>

<p>output-></p>

<pre><code>b = [4,4,2,1,2]
</code></pre>

<p>Also I want to remove the duplicates from a</p>

<pre><code>a = [1,2,3,4,5]
</code></pre>
","<p>Since the list is ordered you can do this:</p>

<pre><code>a = [1,1,1,1,2,2,2,2,3,3,4,5,5]
from itertools import groupby
[len(list(group)) for key, group in groupby(a)]
</code></pre>

<p>Output:</p>

<pre><code>[4, 4, 2, 1, 2]
</code></pre>
","2161801"
"Why am I getting ""IndentationError: expected an indented block""?","206099","","<pre><code>if len(trashed_files) == 0 :
    print ""No files trashed from current dir ('%s')"" % os.path.realpath(os.curdir)
else :
    index=raw_input(""What file to restore [0..%d]: "" % (len(trashed_files)-1))
    if index == ""*"" :
        for tfile in trashed_files :
            try:
                tfile.restore()
            except IOError, e:
                import sys
                print &gt;&gt; sys.stderr, str(e)
                sys.exit(1)
    elif index == """" :
        print ""Exiting""
    else :
        index = int(index)
        try:
            trashed_files[index].restore()
        except IOError, e:
            import sys
            print &gt;&gt; sys.stderr, str(e)
            sys.exit(1)
</code></pre>

<p>I am getting:</p>

<pre><code>        elif index == """" :
        ^
    IndentationError: expected an indented block
</code></pre>
","<p>As the error message indicates, you have an indentation error. It is probably caused by a mix of tabs and spaces.</p>
","4446372"
"How can I iterate over files in a given directory?","205964","","<p>I need to iterate through all <code>.asm</code> files inside a given directory and do some actions on them. </p>

<p>How can this be done in a efficient way?</p>
","<p>Original answer:</p>

<pre><code>for filename in os.listdir(directory):
    if filename.endswith("".asm"") or filename.endswith("".py""): 
        # print(os.path.join(directory, filename))
        continue
    else:
        continue
</code></pre>

<p>Python 3.6 version of the above answer, using <a href=""https://docs.python.org/3.6/library/os.html"" rel=""noreferrer""><code>os</code></a> - assuming that you have the directory path as a <code>str</code> object in a variable called <code>directory_in_str</code>:</p>

<pre><code>directory = os.fsencode(directory_in_str)

for file in os.listdir(directory):
    filename = os.fsdecode(file)
    if filename.endswith("".asm"") or filename.endswith("".py""): 
        # print(os.path.join(directory, filename))
        continue
    else:
        continue
</code></pre>

<p>Or recursively, using <a href=""https://docs.python.org/3.6/library/pathlib.html"" rel=""noreferrer""><code>pathlib</code></a>:</p>

<pre><code>from pathlib import Path

pathlist = Path(directory_in_str).glob('**/*.asm')
for path in pathlist:
    # because path is object not string
    path_in_str = str(path)
    # print(path_in_str)
</code></pre>
","10378012"
"How can I install packages in my $HOME folder with pip?","205872","","<p>Is it possible? When installing <a href=""http://pip.readthedocs.org/en/latest/installing.html"" rel=""noreferrer""><code>pip</code></a>, install the python packages inside my <code>$HOME</code> folder. (for example, I want to install <code>mercurial</code>, using <code>pip</code>, but inside <code>$HOME</code> instead of <code>/usr/local</code>)</p>

<p>I'm with a mac machine and just thought about this possibility, instead of ""polluting"" my <code>/usr/local</code>, I would use my <code>$HOME</code> instead.</p>

<p><a href=""http://www.python.org/dev/peps/pep-0370/"" rel=""noreferrer"">PEP370</a> is exactly about this. Is just creating a <code>˜/.local</code> and do a <code>pip install package</code> enough to make these packages to be installed only at my $HOME folder?</p>
","<p>While you can use a <code>virtualenv</code>, you don't need to.  The trick is passing the PEP370 <code>--user</code> argument to the <code>setup.py</code> script.  With the latest version of <code>pip</code>, one way to do it is:</p>

<pre><code>pip install --user mercurial
</code></pre>

<p>This should result in the <code>hg</code> script being installed in <code>$HOME/.local/bin/hg</code> and the rest of the hg package in <code>$HOME/.local/lib/pythonx.y/site-packages/</code>.</p>

<p>Note, that the above is true for Python 2.6.  There has been a <a href=""http://bugs.python.org/issue7175"" rel=""noreferrer"">bit of controversy</a> among the Python core developers about what is the appropriate directory location on Mac OS X for PEP370-style <code>user</code> installations.  In Python 2.7 and 3.2, the location on Mac OS X was changed from <code>$HOME/.local</code> to <code>$HOME/Library/Python</code>.  This might change in a future release.  But, for now, on 2.7 (and 3.2, if <code>hg</code> were supported on Python 3), the above locations will be <code>$HOME/Library/Python/x.y/bin/hg</code> and <code>$HOME/Library/Python/x.y/lib/python/site-packages</code>.</p>
","7143496"
"Hiding axis text in matplotlib plots","205849","","<p>I'm trying to plot a figure without tickmarks or numbers on either of the axes (I use axes in the traditional sense, not the matplotlib nomenclature!). An issue I have come across is where matplotlib adjusts the x(y)ticklabels by subtracting a value N, then adds N at the end of the axis.</p>

<p>This may be vague, but the following simplified example highlights the issue, with '6.18' being the offending value of N:</p>

<pre><code>import matplotlib.pyplot as plt
import random
prefix = 6.18

rx = [prefix+(0.001*random.random()) for i in arange(100)]
ry = [prefix+(0.001*random.random()) for i in arange(100)]
plt.plot(rx,ry,'ko')

frame1 = plt.gca()
for xlabel_i in frame1.axes.get_xticklabels():
    xlabel_i.set_visible(False)
    xlabel_i.set_fontsize(0.0)
for xlabel_i in frame1.axes.get_yticklabels():
    xlabel_i.set_fontsize(0.0)
    xlabel_i.set_visible(False)
for tick in frame1.axes.get_xticklines():
    tick.set_visible(False)
for tick in frame1.axes.get_yticklines():
    tick.set_visible(False)

plt.show()
</code></pre>

<p>The three things I would like to know are:</p>

<ol>
<li><p>How to turn off this behaviour in the first place (although in most cases it is useful, it is not always!) I have looked through <code>matplotlib.axis.XAxis</code> and cannot find anything appropriate</p></li>
<li><p>How can I make N disappear (i.e. <code>X.set_visible(False)</code>)</p></li>
<li><p>Is there a better way to do the above anyway? My final plot would be 4x4 subplots in a figure, if that is relevant.</p></li>
</ol>
","<p>Instead of hiding each element, you can hide the whole axis:</p>

<pre><code>frame1.axes().get_xaxis().set_visible(False)
frame1.axes().get_yaxis().set_visible(False)
</code></pre>

<p>Or, you can set the ticks to an empty list:</p>

<pre><code>frame1.axes().get_xaxis().set_ticks([])
frame1.axes().get_yaxis().set_ticks([])
</code></pre>

<p>In this second option, you can still use <code>plt.xlabel()</code> and <code>plt.ylabel()</code> to add labels to the axes.</p>
","2176591"
"Converting JSON String to Dictionary Not List","205625","","<p>I am trying to pass in a JSON file and convert the data into a dictionary.</p>

<p>So far, this is what I have done:</p>

<pre><code>import json
json1_file = open('json1')
json1_str = json1_file.read()
json1_data = json.loads(json1_str)
</code></pre>

<p>I'm expecting <code>json1_data</code> to be a <code>dict</code> type but it actually comes out as a <code>list</code> type when I check it with <code>type(json1_data)</code>. </p>

<p>What am I missing? I need this to be a dictionary so I can access one of the keys. </p>
","<p>Your JSON is an array with a single object inside, so when you read it in you get a list with a dictionary inside. You can access your dictionary by accessing item 0 in the list, as shown below:</p>

<pre><code>json1_data = json.loads(json1_str)[0]
</code></pre>

<p>Now you can access the data stored in <em>datapoints</em> just as you were expecting:</p>

<pre><code>datapoints = json1_data['datapoints']
</code></pre>

<hr>

<blockquote>
  <p>I have one more question if anyone can bite: I am trying to take the average of the first elements in these datapoints(i.e. datapoints[0][0]). Just to list them, I tried doing datapoints[0:5][0] but all I get is the first datapoint with both elements as opposed to wanting to get the first 5 datapoints containing only the first element. Is there a way to do this? </p>
</blockquote>

<p><code>datapoints[0:5][0]</code> doesn't do what you're expecting. <code>datapoints[0:5]</code> returns a new list slice containing just the first 5 elements, and then adding <code>[0]</code> on the end of it will take just the first element <em>from that resulting list slice</em>. What you need to use to get the result you want is a <a href=""http://docs.python.org/2/tutorial/datastructures.html#list-comprehensions"">list comprehension</a>:</p>

<pre><code>[p[0] for p in datapoints[0:5]]
</code></pre>

<p>Here's a simple way to calculate the mean:</p>

<pre><code>sum(p[0] for p in datapoints[0:5])/5. # Result is 35.8
</code></pre>

<p>If you're willing to install <a href=""http://www.numpy.org/"">NumPy</a>, then it's even easier:</p>

<pre><code>import numpy
json1_file = open('json1')
json1_str = json1_file.read()
json1_data = json.loads(json1_str)[0]
datapoints = numpy.array(json1_data['datapoints'])
avg = datapoints[0:5,0].mean()
# avg is now 35.8
</code></pre>

<p>Using the <code>,</code> operator with the slicing syntax for NumPy's arrays has the behavior you were originally expecting with the list slices.</p>
","19483437"
"Test a String for a Substring?","205267","","<p>Is there an easy way to test a Python string ""xxxxABCDyyyy"" to see if ""ABCD"" is contained within it?</p>
","<pre><code>if ""ABCD"" in ""xxxxABCDyyyy"":
    # whatever
</code></pre>
","5473023"
"Alphabet range python","205242","","<p>Instead of making a list of alphabet like this:</p>

<pre><code>alpha = ['a', 'b', 'c', 'd'.........'z']
</code></pre>

<p>Is there any way that we can group it to a range or something? For example, for numbers it can be grouped using <code>range()</code></p>

<pre><code>range(1, 10)
</code></pre>
","<pre><code>&gt;&gt;&gt; import string
&gt;&gt;&gt; string.ascii_lowercase
'abcdefghijklmnopqrstuvwxyz'
</code></pre>

<p>If you really need a list:</p>

<pre><code>&gt;&gt;&gt; list(string.ascii_lowercase)
['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
</code></pre>

<p>And to do it with <code>range</code></p>

<pre><code>&gt;&gt;&gt; list(map(chr, range(97, 123))) #or list(map(chr, range(ord('a'), ord('z')+1)))
['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
</code></pre>

<p>Other helpful <code>string</code> module features:</p>

<pre><code>&gt;&gt;&gt; help(string) # on Python 3
....
DATA
    ascii_letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
    ascii_lowercase = 'abcdefghijklmnopqrstuvwxyz'
    ascii_uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
    digits = '0123456789'
    hexdigits = '0123456789abcdefABCDEF'
    octdigits = '01234567'
    printable = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!""#$%&amp;\'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~ \t\n\r\x0b\x0c'
    punctuation = '!""#$%&amp;\'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~'
    whitespace = ' \t\n\r\x0b\x0c'
</code></pre>
","16060908"
"Python: Get the first character of the first string in a list?","205118","","<p>How would I get the first character from the first string in a list in Python?  </p>

<p>It seems that I could use <code>mylist[0][1:]</code> but that does not give me the first character.</p>

<pre><code>&gt;&gt;&gt; mylist = []
&gt;&gt;&gt; mylist.append(""asdf"")
&gt;&gt;&gt; mylist.append(""jkl;"")
&gt;&gt;&gt; mylist[0][1:]
'sdf'
</code></pre>
","<p>You almost had it right. The simplest way is</p>

<pre><code>mylist[0][0]   # get the first character from the first item in the list
</code></pre>

<p>but</p>

<pre><code>mylist[0][:1]  # get up to the first character in the first item in the list
</code></pre>

<p>would also work. </p>

<p>You want to <strong>end</strong> after the first character (character zero), not <strong>start</strong> after the first character (character zero), which is what the code in your question means.</p>
","7108131"
"How to ""properly"" print a list?","205081","","<p>So I have a list:</p>

<p><code>['x', 3, 'b']</code></p>

<p>And I want the output to be:</p>

<p><code>[x, 3, b]</code></p>

<p>How can I do this in python?</p>

<p>If I do <code>str(['x', 3, 'b'])</code>, I get one with quotes, but I don't want quotes.</p>
","<pre><code>mylist = ['x', 3, 'b']
print '[%s]' % ', '.join(map(str, mylist))
</code></pre>
","5445983"
"How to create a GUID/UUID in Python","205069","","<p>How do I create a GUID in Python that is platform independent? I hear there is a method using ActivePython on Windows but it's Windows only because it uses COM. Is there a method using plain Python?</p>
","<p>""The uuid module, in Python 2.5 and up,  provides RFC compliant UUID
generation. See the module docs and the RFC for details.""</p>

<p>Docs:</p>

<ul>
<li>Python 2: <a href=""http://docs.python.org/2/library/uuid.html"" rel=""noreferrer"">http://docs.python.org/2/library/uuid.html</a></li>
<li>Python 3:
<a href=""https://docs.python.org/3/library/uuid.html"" rel=""noreferrer"">https://docs.python.org/3/library/uuid.html</a></li>
</ul>

<p>Example (working on 2 and 3):</p>

<pre><code>&gt;&gt;&gt; import uuid
&gt;&gt;&gt; uuid.uuid4()
UUID('bd65600d-8669-4903-8a14-af88203add38')
&gt;&gt;&gt; str(uuid.uuid4())
'f50ec0b7-f960-400d-91f0-c42a6d44e3d0'
&gt;&gt;&gt; uuid.uuid4().hex
'9fe2c4e93f654fdbb24c02b15259716c'
</code></pre>

<p><a href=""http://code.activestate.com/lists/python-list/72693/"" rel=""noreferrer"">http://code.activestate.com/lists/python-list/72693/</a></p>
","534847"
"How to change legend size with matplotlib.pyplot","204901","","<p>Simple question here:  I'm trying to get the size of my legend using <code>matplotlib.pyplot</code> to be smaller (i.e., the text to be smaller). The code I'm using goes something like this:</p>

<pre><code>plot.figure()
plot.scatter(k, sum_cf, color='black', label='Sum of Cause Fractions')
plot.scatter(k, data[:, 0],  color='b', label='Dis 1: cf = .6, var = .2')
plot.scatter(k, data[:, 1],  color='r',  label='Dis 2: cf = .2, var = .1')
plot.scatter(k, data[:, 2],  color='g', label='Dis 3: cf = .1, var = .01')
plot.legend(loc=2)
</code></pre>
","<p>You can set an individual font size for the legend by adjusting the <code>prop</code> keyword. </p>

<pre><code>plot.legend(loc=2, prop={'size': 6})
</code></pre>

<p>This takes a dictionary of keywords corresponding to <code>matplotlib.font_manager.FontProperties</code> properties. See the <a href=""http://matplotlib.sourceforge.net/api/pyplot_api.html#matplotlib.pyplot.legend"" rel=""noreferrer"">documentation for legend</a>:</p>

<blockquote>
  <p>Keyword arguments:</p>

<pre><code>prop: [ None | FontProperties | dict ]
    A matplotlib.font_manager.FontProperties instance. If prop is a 
    dictionary, a new instance will be created with prop. If None, use
    rc settings.
</code></pre>
</blockquote>

<p>It is also possible, as of version <a href=""http://matplotlib.org/api/legend_api.html#matplotlib.legend.Legend"" rel=""noreferrer"">1.2.1</a>, to use the keyword <code>fontsize</code>.</p>
","7125157"
"python open built-in function: difference between modes a, a+, w, w+, and r+?","204763","","<p>In the python built-in <a href=""http://docs.python.org/library/functions.html#open"" rel=""noreferrer"">open</a> function, what is the exact difference between the modes w, a, w+, a+, and r+?</p>

<p>In particular, the documentation implies that all of these will allow writing to the file, and says that it opens the files for ""appending"", ""writing"", and ""updating"" specifically, but does not define what these terms mean.</p>
","<p>The opening modes are exactly the same that C <strong><code>fopen()</code></strong> std library function.</p>

<p><a href=""http://www.manpagez.com/man/3/fopen/"" rel=""noreferrer"">The BSD <code>fopen</code> manpage</a> defines them as follows:</p>

<pre class=""lang-none prettyprint-override""><code> The argument mode points to a string beginning with one of the following
 sequences (Additional characters may follow these sequences.):

 ``r''   Open text file for reading.  The stream is positioned at the
         beginning of the file.

 ``r+''  Open for reading and writing.  The stream is positioned at the
         beginning of the file.

 ``w''   Truncate file to zero length or create text file for writing.
         The stream is positioned at the beginning of the file.

 ``w+''  Open for reading and writing.  The file is created if it does not
         exist, otherwise it is truncated.  The stream is positioned at
         the beginning of the file.

 ``a''   Open for writing.  The file is created if it does not exist.  The
         stream is positioned at the end of the file.  Subsequent writes
         to the file will always end up at the then current end of file,
         irrespective of any intervening fseek(3) or similar.

 ``a+''  Open for reading and writing.  The file is created if it does not
         exist.  The stream is positioned at the end of the file.  Subse-
         quent writes to the file will always end up at the then current
         end of file, irrespective of any intervening fseek(3) or similar.
</code></pre>
","1466036"
"How do I determine if my python shell is executing in 32bit or 64bit mode on OS X?","204741","","<p>I need a way to tell what mode the shell is in from within the shell.  </p>

<p>I've tried looking at the <a href=""http://docs.python.org/library/platform.html"" rel=""noreferrer"">platform</a> module but it seems only to tell you about ""about the bit architecture and the linkage format used for the executable"": the binary is compiled as 64bit though (I'm running on OS X 10.6) so it seems to always report 64bit even though I'm using the methods <a href=""https://developer.apple.com/mac/library/documentation/Darwin/Reference/ManPages/man1/python.1.html"" rel=""noreferrer"">described here</a> to force 32bit mode).</p>
","<p>UPDATED:
One way is to look at <code>sys.maxsize</code> as documented <a href=""http://docs.python.org/library/platform.html#cross-platform"" rel=""noreferrer"">here</a>:</p>

<pre><code>$ python-32 -c 'import sys;print(""%x"" % sys.maxsize, sys.maxsize &gt; 2**32)'
('7fffffff', False)
$ python-64 -c 'import sys;print(""%x"" % sys.maxsize, sys.maxsize &gt; 2**32)'
('7fffffffffffffff', True)
</code></pre>

<p><code>sys.maxsize</code> was introduced in Python 2.6.  If you need a test for older systems, this slightly more complicated test should work on all Python 2 and 3 releases:</p>

<pre><code>$ python-32 -c 'import struct;print( 8 * struct.calcsize(""P""))'
32
$ python-64 -c 'import struct;print( 8 * struct.calcsize(""P""))'
64
</code></pre>

<p>BTW, you might be tempted to use <code>platform.architecture()</code> for this.  Unfortunately, its results are not always reliable, <a href=""http://docs.python.org/library/platform.html#platform.architecture"" rel=""noreferrer"">particularly in the case of OS X universal binaries</a>.</p>

<pre><code>$ arch -x86_64 /usr/bin/python2.6 -c 'import sys,platform; print platform.architecture()[0], sys.maxsize &gt; 2**32'
64bit True
$ arch -i386 /usr/bin/python2.6 -c 'import sys,platform; print platform.architecture()[0], sys.maxsize &gt; 2**32'
64bit False
</code></pre>
","1405971"
"Python - 'ascii' codec can't decode byte","204514","","<p>I'm really confused. I tried to encode but the error said <code>can't decode...</code>. </p>

<pre><code>&gt;&gt;&gt; ""你好"".encode(""utf8"")
Traceback (most recent call last):
File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
UnicodeDecodeError: 'ascii' codec can't decode byte 0xe4 in position 0: ordinal not in range(128)
</code></pre>

<p>I know how to avoid the error with ""u"" prefix on the string. I'm just wondering why the error is ""can't decode"" when encode was called.  What is Python doing under the hood?</p>
","<pre><code>""你好"".encode('utf-8')
</code></pre>

<p><code>encode</code> converts a unicode object to a <code>string</code> object. But here you have invoked it on a <code>string</code> object (because you don't have the u). So python has to convert the <code>string</code> to a <code>unicode</code> object first. So it does the equivalent of</p>

<pre><code>""你好"".decode().encode('utf-8')
</code></pre>

<p>But the decode fails because the string isn't valid ascii. That's why you get a complaint about not being able to decode.</p>
","9644206"
"Sending HTML email using Python","204438","","<p>How can I send the HTML content in an email using Python? I can send simple text.</p>
","<p>From <a href=""http://docs.python.org/library/email-examples.html#id4"" rel=""noreferrer"">Python v2.6.2 documentation - 19.1.11. email: Examples</a>:</p>

<blockquote>
  <p>Here’s an example of how to create an HTML message with an alternative plain text version:</p>
</blockquote>

<pre class=""lang-python prettyprint-override""><code>#! /usr/bin/python

import smtplib

from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

# me == my email address
# you == recipient's email address
me = ""my@email.com""
you = ""your@email.com""

# Create message container - the correct MIME type is multipart/alternative.
msg = MIMEMultipart('alternative')
msg['Subject'] = ""Link""
msg['From'] = me
msg['To'] = you

# Create the body of the message (a plain-text and an HTML version).
text = ""Hi!\nHow are you?\nHere is the link you wanted:\nhttp://www.python.org""
html = """"""\
&lt;html&gt;
  &lt;head&gt;&lt;/head&gt;
  &lt;body&gt;
    &lt;p&gt;Hi!&lt;br&gt;
       How are you?&lt;br&gt;
       Here is the &lt;a href=""http://www.python.org""&gt;link&lt;/a&gt; you wanted.
    &lt;/p&gt;
  &lt;/body&gt;
&lt;/html&gt;
""""""

# Record the MIME types of both parts - text/plain and text/html.
part1 = MIMEText(text, 'plain')
part2 = MIMEText(html, 'html')

# Attach parts into message container.
# According to RFC 2046, the last part of a multipart message, in this case
# the HTML message, is best and preferred.
msg.attach(part1)
msg.attach(part2)

# Send the message via local SMTP server.
s = smtplib.SMTP('localhost')
# sendmail function takes 3 arguments: sender's address, recipient's address
# and message to send - here it is sent as one string.
s.sendmail(me, you, msg.as_string())
s.quit()
</code></pre>
","882770"
"How do I remove/delete a virtualenv?","204189","","<p>I created an environment with the following command: <code>virtualenv venv --distribute</code></p>

<p>I cannot remove it with the following command: <code>rmvirtualenv venv</code> -
<strong>This is part of <a href=""http://virtualenvwrapper.readthedocs.io/en/latest/command_ref.html#rmvirtualenv"" rel=""noreferrer"">virtualenvwrapper</a> as mentioned in <a href=""https://stackoverflow.com/a/18624789/452708"">answer below for virtualenvwrapper</a></strong></p>

<p>I do an <code>ls</code>on my current directory and I still see venv</p>

<p>The only way I can remove it seems to be: <code>sudo rm -rf venv</code></p>

<p>Note that the environment is not active. I'm running Ubuntu 11.10. Any ideas? I've tried rebooting my system to no avail.</p>
","<p>That's it! There is no command for deleting your virtual environment. Simply deactivate it and rid your application of its artifacts by recursively removing it.</p>
","11005505"
"clear terminal in python","203979","","<p>Does any standard ""comes with batteries"" method exist to clear the terminal screen from a python script, or do I have to go curses (the libraries, not the words) ?</p>
","<p>What about escape sequences?</p>

<pre><code>print(chr(27) + ""[2J"")
</code></pre>
","2084521"
"Perform commands over ssh with Python","203943","","<p>I'm writing a script to automate some command line commands in Python. At the moment I'm doing calls thus:</p>

<pre><code>cmd = ""some unix command""
retcode = subprocess.call(cmd,shell=True)
</code></pre>

<p>However I need to run some commands on a remote machine. Manually, I would log in using ssh and then run the commands. How would I automate this in Python? I need to log in with a (known) password to the remote machine, so I can't just use <code>cmd = ssh user@remotehost</code>, I'm wondering if there's a module I should be using?</p>
","<p>I will refer you to <a href=""http://www.paramiko.org/"" rel=""noreferrer"">paramiko</a></p>

<p>see <a href=""https://stackoverflow.com/questions/373639/running-interactive-commands-in-paramiko"">this question</a></p>

<pre><code>ssh = paramiko.SSHClient()
ssh.connect(server, username=username, password=password)
ssh_stdin, ssh_stdout, ssh_stderr = ssh.exec_command(cmd_to_execute)
</code></pre>
","3586168"
"Installing SciPy and NumPy using pip","203869","","<p>I'm trying to create required libraries in a package I'm distributing. It requires both the <a href=""http://en.wikipedia.org/wiki/SciPy"">SciPy</a> and <a href=""http://en.wikipedia.org/wiki/NumPy"">NumPy</a> libraries.
While developing, I installed both using</p>

<pre><code>apt-get install scipy
</code></pre>

<p>which installed SciPy 0.9.0 and NumPy 1.5.1, and it worked fine.</p>

<p>I would like to do the same using <code>pip install</code> - in order to be able to specify dependencies in a setup.py of my own package.</p>

<p>The problem is, when I try:</p>

<pre><code>pip install 'numpy==1.5.1'
</code></pre>

<p>it works fine.</p>

<p>But then</p>

<pre><code>pip install 'scipy==0.9.0'
</code></pre>

<p>fails miserably, with</p>

<pre><code>raise self.notfounderror(self.notfounderror.__doc__)

numpy.distutils.system_info.BlasNotFoundError:

Blas (http://www.netlib.org/blas/) libraries not found.

Directories to search for the libraries can be specified in the

numpy/distutils/site.cfg file (section [blas]) or by setting

the BLAS environment variable.
</code></pre>

<p>How do I get it to work?</p>
","<p>I am assuming Linux experience in my answer; I found that there are three prerequisites to getting <code>pip install scipy</code> to proceed nicely.</p>

<p>Go here: <a href=""http://www.scipy.org/Installing_SciPy/BuildingGeneral"">Installing SciPY</a></p>

<p>Follow the instructions to download, build and export the env variable for <a href=""http://en.wikipedia.org/wiki/Basic_Linear_Algebra_Subprograms"">BLAS</a> and then <a href=""http://en.wikipedia.org/wiki/LAPACK"">LAPACK</a>. Be careful to not just blindly cut'n'paste the shell commands - there will be a few lines you need to select depending on your architecture, etc., and you'll need to fix/add the correct directories that it incorrectly assumes as well.</p>

<p>The third thing you may need is to <strong>yum install numpy-f2py</strong> or the equivalent.</p>

<p>Oh, yes and lastly, you may need to <strong>yum install gcc-gfortran</strong> as the libraries above are <a href=""http://en.wikipedia.org/wiki/Fortran"">Fortran</a> source.</p>
","14639949"
"How to convert JSON data into a Python object","203843","","<p>I want to use Python to convert JSON data into a Python object.</p>

<p>I receive JSON data objects from the Facebook API, which I want to store in my database.  </p>

<p>My current View in Django (Python) (<code>request.POST</code> contains the JSON):</p>

<pre><code>response = request.POST
user = FbApiUser(user_id = response['id'])
user.name = response['name']
user.username = response['username']
user.save()
</code></pre>

<ul>
<li><p>This works fine, but how do I handle complex JSON data objects?   </p></li>
<li><p>Wouldn't it be much better if I could somehow convert this JSON object into a Python object for easy use?</p></li>
</ul>
","<p>You can do it in one line, using <code>namedtuple</code> and <code>object_hook</code>:</p>

<pre><code>import json
from collections import namedtuple

data = '{""name"": ""John Smith"", ""hometown"": {""name"": ""New York"", ""id"": 123}}'

# Parse JSON into an object with attributes corresponding to dict keys.
x = json.loads(data, object_hook=lambda d: namedtuple('X', d.keys())(*d.values()))
print x.name, x.hometown.name, x.hometown.id
</code></pre>

<p>or, to reuse this easily:</p>

<pre><code>def _json_object_hook(d): return namedtuple('X', d.keys())(*d.values())
def json2obj(data): return json.loads(data, object_hook=_json_object_hook)

x = json2obj(data)
</code></pre>

<p>If you want it to handle keys that aren't good attribute names, check out <code>namedtuple</code>'s <a href=""http://docs.python.org/2/library/collections.html#collections.namedtuple"" rel=""noreferrer""><code>rename</code> parameter</a>.</p>
","15882054"
"Python Error: ""ValueError: need more than 1 value to unpack""","203669","","<p>In Python, when I run this code:</p>

<pre><code>from sys import argv

script, user_name =argv
prompt = '&gt;'

print ""Hi %s, I'm the %s script."" % (user_name, script)
</code></pre>

<p>I get this error:</p>

<pre><code>Traceback (most recent call last):  
script, user_name =argv  
ValueError: need more than 1 value to unpack
</code></pre>

<p>What does that error mean?</p>
","<p>Probably you didn't provide an argument on the command line. In that case, <code>sys.argv</code> only contains one value, but it would have to have two in order to provide values for both <code>user_name</code> and <code>script</code>.</p>
","2814150"
"Converting NumPy array into Python List structure?","203632","","<p>How do I convert a <a href=""http://en.wikipedia.org/wiki/NumPy"" rel=""noreferrer"">NumPy</a> array to a Python List (for example <code>[[1,2,3],[4,5,6]]</code> ), and do it reasonably fast?</p>
","<p>Use <a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.tolist.html"" rel=""noreferrer""><code>tolist()</code></a>:</p>

<pre><code>import numpy as np
&gt;&gt;&gt; np.array([[1,2,3],[4,5,6]]).tolist()
[[1, 2, 3], [4, 5, 6]]
</code></pre>

<p>Note that this converts the values from whatever numpy type they may have (e.g. np.int32 or np.float32) to the ""nearest compatible Python type"" (in a list). If you want to preserve the numpy data types, you could call list() on your array instead, and you'll end up with a list of <a href=""https://docs.scipy.org/doc/numpy-1.10.0/reference/arrays.scalars.html"" rel=""noreferrer"">numpy scalars</a>. (Thanks to Mr_and_Mrs_D for pointing that out in a comment.)</p>
","1966210"
"Convert string date to timestamp in Python","203044","","<p>How to convert a string in the format <code>""%d/%m/%Y""</code> to timestamp?</p>

<pre><code>""01/12/2011"" -&gt; 1322697600
</code></pre>
","<pre><code>&gt;&gt;&gt; import time
&gt;&gt;&gt; import datetime
&gt;&gt;&gt; s = ""01/12/2011""
&gt;&gt;&gt; time.mktime(datetime.datetime.strptime(s, ""%d/%m/%Y"").timetuple())
1322697600.0
</code></pre>
","9637908"
"Convert datetime to Unix timestamp and convert it back in python","202840","","<p>I have <code>dt = datetime(2013,9,1,11)</code>, and I would like to get a Unix timestamp of this datetime object.</p>

<p>When I do <code>dt - datetime(1970,1,1)).total_seconds()</code> I got the timestamp <code>1378033200</code>.</p>

<p>When converting it back using <code>datetime.fromtimestamp</code> I got <code>datetime.datetime(2013, 9, 1, 6, 0)</code>.</p>

<p>The hour doesn't match. What did I miss here?</p>
","<p>What you missed here is timezones.</p>

<p>Presumably you've five hours off UTC, so 2013-09-01T11:00:00 local and 2013-09-01T06:00:00Z are the same time.</p>

<p>You need to read the top of the <a href=""http://docs.python.org/3.3/library/datetime.html""><code>datetime</code></a> docs, which explain about timezones and ""naive"" and ""aware"" objects.</p>

<p>If your original naive datetime was UTC, the way to recover it is to use <a href=""http://docs.python.org/3.3/library/datetime.html#datetime.datetime.utcfromtimestamp""><code>utcfromtimestamp</code></a> instead of <code>fromtimestamp</code>.</p>

<p>On the other hand, if your original naive datetime was local, you shouldn't have subtracted a UTC timestamp from it in the first place; use <code>datetime.fromtimestamp(0)</code> instead.</p>

<p>Or, if you had an aware datetime object, you need to either use a local (aware) epoch on both sides, or explicitly convert to and from UTC.</p>

<p>If you have, or can upgrade to, Python 3.3 or later, you can avoid all of these problems by just using the <a href=""http://docs.python.org/3.3/library/datetime.html#datetime.datetime.timestamp""><code>timestamp</code></a> method instead of trying to figure out how to do it yourself. And even if you don't, you may want to consider <a href=""http://hg.python.org/cpython/file/3.3/Lib/datetime.py#l1428"">borrowing its source code</a>.</p>

<p>(And if you can wait for Python 3.4, it looks like <a href=""http://www.python.org/dev/peps/pep-0431/"">PEP 341</a> is likely to make it into the final release, which means all of the stuff J.F. Sebastian and I were talking about in the comments should be doable with just the stdlib, and working the same way on both Unix and Windows.)</p>
","19801806"
"How to determine whether a substring is in a different string","202612","","<p>I have a sub-string:</p>

<pre><code>substring = ""please help me out""
</code></pre>

<p>I have another string:</p>

<pre><code>string = ""please help me out so that I could solve this""
</code></pre>

<p>How do I find if <code>substring</code> is a subset of <code>string</code> using Python?</p>
","<p>with <code>in</code>: <code>substring in string</code>:</p>

<pre><code>&gt;&gt;&gt; substring = ""please help me out""
&gt;&gt;&gt; string = ""please help me out so that I could solve this""
&gt;&gt;&gt; substring in string
True
</code></pre>
","7361274"
"Removing pip's cache?","202598","","<p>I need to install psycopg2 v2.4.1 specifically. I accidentally did:</p>

<pre><code> pip install psycopg2
</code></pre>

<p>Instead of:</p>

<pre><code> pip install psycopg2==2.4.1
</code></pre>

<p>That installs 2.4.4 instead of the earlier version. </p>

<p>Now even after I pip uninstall psycopg2 and attempt to reinstall with the correct version, it appears that pip is re-using the cache it downloaded the first time.</p>

<p>How can I force pip to clear out its download cache and use the specific version I'm including in the command?</p>
","<p>If using pip 6.0 or newer, try adding the <a href=""https://pip.pypa.io/en/stable/reference/pip_install/#caching"" rel=""noreferrer""><code>--no-cache-dir</code> option</a>.</p>

<p>If using pip older than pip 6.0, upgrade it with <code>pip install -U pip</code>.  </p>
","9510610"
"Python reverse / invert a mapping","202565","","<p>Given a dictionary like so:</p>

<pre><code>my_map = { 'a': 1, 'b':2 }
</code></pre>

<p>How can one invert this map to get:</p>

<pre><code>inv_map = { 1: 'a', 2: 'b' }
</code></pre>

<p><strong>EDITOR NOTE: <code>map</code> changed to <code>my_map</code> to avoid conflicts with the built-in function, <code>map</code>. Some comments may be affected below.</strong></p>
","<p>For Python 2.7.x</p>

<pre><code>inv_map = {v: k for k, v in my_map.iteritems()}
</code></pre>

<p>For Python 3+:</p>

<pre><code>inv_map = {v: k for k, v in my_map.items()}
</code></pre>
","483833"
"Create empty file using python","202261","","<p>I'd like to create a file with path <code>x</code> using python. I've been using <code>os.system(y)</code> where <code>y = 'touch %s' % (x)</code>. I've looked for a non-directory version of <code>os.mkdir</code>, but I haven't been able to find anything. Is there a tool like this to create a file without opening it, or using system or popen/subprocess?</p>
","<p><strike>There is no way to create a file without opening it</strike> There is <code>os.mknod(""newfile.txt"")</code> (<em>but it requires root privileges on OSX</em>). The system call to create a file is actually <code>open()</code> with the <code>O_CREAT</code> flag. So no matter how, you'll always open the file.</p>

<p>So the easiest way to simply create a file without truncating it in case it exists is this:</p>

<pre><code>open(x, 'a').close()
</code></pre>

<p>Actually you could omit the <code>.close()</code> since the refcounting GC of CPython will close it immediately after the <code>open()</code> statement finished - but it's cleaner to do it explicitely and relying on CPython-specific behaviour is not good either.</p>

<p>In case you want <code>touch</code>'s behaviour (i.e. update the mtime in case the file exists):</p>

<pre><code>import os
def touch(path):
    with open(path, 'a'):
        os.utime(path, None)
</code></pre>

<p>You could extend this to also create any directories in the path that do not exist:</p>

<pre><code>basedir = os.path.dirname(path)
if not os.path.exists(basedir):
    os.makedirs(basedir)
</code></pre>
","12654798"
"Convert Python dict into a dataframe","202082","","<p>I have a Python dictionary like the following:</p>

<pre><code>{u'2012-06-08': 388,
 u'2012-06-09': 388,
 u'2012-06-10': 388,
 u'2012-06-11': 389,
 u'2012-06-12': 389,
 u'2012-06-13': 389,
 u'2012-06-14': 389,
 u'2012-06-15': 389,
 u'2012-06-16': 389,
 u'2012-06-17': 389,
 u'2012-06-18': 390,
 u'2012-06-19': 390,
 u'2012-06-20': 390,
 u'2012-06-21': 390,
 u'2012-06-22': 390,
 u'2012-06-23': 390,
 u'2012-06-24': 390,
 u'2012-06-25': 391,
 u'2012-06-26': 391,
 u'2012-06-27': 391,
 u'2012-06-28': 391,
 u'2012-06-29': 391,
 u'2012-06-30': 391,
 u'2012-07-01': 391,
 u'2012-07-02': 392,
 u'2012-07-03': 392,
 u'2012-07-04': 392,
 u'2012-07-05': 392,
 u'2012-07-06': 392}
</code></pre>

<p>The keys are <a href=""http://en.wikipedia.org/wiki/Unicode"" rel=""noreferrer"">Unicode</a> dates and the values are integers. I would like to convert this into a pandas dataframe by having the dates and their corresponding values as two separate columns. Example: col1: Dates col2: DateValue (the dates are still Unicode and datevalues are still integers)</p>

<pre><code>     Date         DateValue
0    2012-07-01    391
1    2012-07-02    392
2    2012-07-03    392
.    2012-07-04    392
.    ...           ...
.    ...           ...
</code></pre>

<p>Any help in this direction would be much appreciated. I am unable to find resources on the pandas docs to help me with this.</p>

<p>I know one solution might be to convert each key-value pair in this dict, into a dict so the entire structure becomes a dict of dicts, and then we can add each row individually to the dataframe. But I want to know if there is an easier way and a more direct way to do this.</p>

<p>So far I have tried converting the dict into a series object but this doesn't seem to maintain the relationship between the columns:</p>

<pre><code>s  = Series(my_dict,index=my_dict.keys())
</code></pre>
","<p>The error here, is since calling the DataFrame constructor with scalar values (where it expects values to be a list/dict/... i.e. have multiple columns):</p>

<pre><code>pd.DataFrame(d)
ValueError: If using all scalar values, you must must pass an index
</code></pre>

<p>You could take the items from the dictionary (i.e. the key-value pairs):</p>

<pre><code>In [11]: pd.DataFrame(d.items())  # or list(d.items()) in python 3
Out[11]:
             0    1
0   2012-07-02  392
1   2012-07-06  392
2   2012-06-29  391
3   2012-06-28  391
...

In [12]: pd.DataFrame(d.items(), columns=['Date', 'DateValue'])
Out[12]:
          Date  DateValue
0   2012-07-02        392
1   2012-07-06        392
2   2012-06-29        391
</code></pre>

<p>But I think it makes more sense to pass the Series constructor:</p>

<pre><code>In [21]: s = pd.Series(d, name='DateValue')
Out[21]:
2012-06-08    388
2012-06-09    388
2012-06-10    388

In [22]: s.index.name = 'Date'

In [23]: s.reset_index()
Out[23]:
          Date  DateValue
0   2012-06-08        388
1   2012-06-09        388
2   2012-06-10        388
</code></pre>
","18837389"
"Counting the Number of keywords in a dictionary in python","201578","","<p>I have a list of words in a dictionary with the value = the repetition of the keyword but I only want a list of distinct words so I wanted to count the number of keywords. Is there a way to count the number of keywords or is there another way I should look for distinct words?</p>
","<pre><code>len(yourdict.keys())
</code></pre>

<p>or just</p>

<pre><code>len(yourdict)
</code></pre>

<p>If you like to count unique words in the file, you could just use <a href=""http://docs.python.org/library/sets.html#module-sets"" rel=""noreferrer""><code>set</code></a> and do like</p>

<pre><code>len(set(open(yourdictfile).read().split()))
</code></pre>
","2212442"
"What are the differences between the urllib, urllib2, and requests module?","201550","","<p>In Python, what are the differences between the <code>urllib</code>, <code>urllib2</code>, and <a href=""http://docs.python-requests.org/en/latest/index.html"" rel=""noreferrer""><code>requests</code></a> module? Why are there three? They seem to do the same thing...</p>
","<p>I know its been said already, but I'd highly recommend the Requests python package:
<a href=""http://docs.python-requests.org/en/latest/index.html"" rel=""noreferrer"">http://docs.python-requests.org/en/latest/index.html</a></p>

<p>If you've used languages other than python, you're probably thinking urllib and urllib2 are easy to use, not much code, and highly capable, that's how I used to think.  But the Requests package is so unbelievably useful and short that everyone should be using it.</p>

<p>First, it supports a fully restful API, and is as easy as:</p>

<pre><code>import requests
...

resp = requests.get('http://www.mywebsite.com/user')
resp = requests.post('http://www.mywebsite.com/user')
resp = requests.put('http://www.mywebsite.com/user/put')
resp = requests.delete('http://www.mywebsite.com/user/delete')
</code></pre>

<p>Regardless of whether GET/POST you never have to encode parameters again, it simply takes a dictionary as an argument and is good to go.</p>

<pre><code>userdata = {""firstname"": ""John"", ""lastname"": ""Doe"", ""password"": ""jdoe123""}
resp = requests.post('http://www.mywebsite.com/user', data=userdata)
</code></pre>

<p>Plus it even has a built in json decoder (again, i know json.loads() isn't a lot more to write, but this sure is convenient):</p>

<pre><code>resp.json()
</code></pre>

<p>Or if your response data is just text, use:</p>

<pre><code>resp.text
</code></pre>

<p>This is just the tip of the iceberg. This is the list of features from the requests site:</p>

<ul>
<li>International Domains and URLs</li>
<li>Keep-Alive &amp; Connection Pooling</li>
<li>Sessions with Cookie Persistence</li>
<li>Browser-style SSL Verification</li>
<li>Basic/Digest Authentication</li>
<li>Elegant Key/Value Cookies</li>
<li>Automatic Decompression</li>
<li>Unicode Response Bodies</li>
<li>Multipart File Uploads</li>
<li>Connection Timeouts</li>
<li>.netrc support</li>
<li>List item</li>
<li>Python 2.6—3.4</li>
<li>Thread-safe.</li>
</ul>
","14804320"
"Adding 5 days to a date in Python","201508","","<p>I have a date <code>""10/10/11(m-d-y)""</code> and I want to add 5 days to it using a Python script. Please consider a general solution that works on the month ends also.</p>

<p>I am using following code:</p>

<pre><code>import re
from datetime import datetime

StartDate = ""10/10/11""

Date = datetime.strptime(StartDate, ""%m/%d/%y"")
</code></pre>

<p><code>print Date</code> -> is printing <code>'2011-10-10 00:00:00'</code></p>

<p>Now I want to add 5 days to this date. I used the following code:</p>

<pre><code>EndDate = Date.today()+timedelta(days=10)
</code></pre>

<p>Which returned this error:</p>

<pre><code>name 'timedelta' is not defined
</code></pre>
","<p>The previous answers are correct but it's generally a better practice to do:</p>

<pre><code>import datetime
</code></pre>

<p>Then you'll have, using <a href=""https://docs.python.org/2/library/datetime.html#datetime.timedelta"" rel=""noreferrer""><code>datetime.timedelta</code></a>:</p>

<pre><code>date_1 = datetime.datetime.strptime(start_date, ""%m/%d/%y"")

end_date = date_1 + datetime.timedelta(days=10)
</code></pre>
","6871482"
"Is there a difference between `==` and `is` in Python?","201400","","<p>My <a href=""http://en.wiktionary.org/wiki/Google-fu"" rel=""noreferrer"">Google-fu</a> has failed me.</p>

<p>In Python, are the following two tests for equality equivalent (ha!)?</p>

<pre><code>n = 5
# Test one.
if n == 5:
    print 'Yay!'

# Test two.
if n is 5:
    print 'Yay!'
</code></pre>

<p>Does this hold true for objects where you would be comparing instances (a <code>list</code> say)?</p>

<p>Okay, so this kind of answers my question:</p>

<pre><code>L = []
L.append(1)
if L == [1]:
    print 'Yay!'
# Holds true, but...

if L is [1]:
    print 'Yay!'
# Doesn't.
</code></pre>

<p>So <code>==</code> tests value where <code>is</code> tests to see if they are the same object?</p>
","<p><code>is</code> will return <code>True</code> if two variables point to the same object, <code>==</code> if the objects referred to by the variables are equal.</p>

<pre><code>&gt;&gt;&gt; a = [1, 2, 3]
&gt;&gt;&gt; b = a
&gt;&gt;&gt; b is a 
True
&gt;&gt;&gt; b == a
True
&gt;&gt;&gt; b = a[:]
&gt;&gt;&gt; b is a
False
&gt;&gt;&gt; b == a
True
</code></pre>

<p>In your case, the second test only works because Python caches small integer objects, which is an implementation detail. For larger integers, this does not work:</p>

<pre><code>&gt;&gt;&gt; 1000 is 10**3
False
&gt;&gt;&gt; 1000 == 10**3
True
</code></pre>

<p>The same holds true for string literals:</p>

<pre><code>&gt;&gt;&gt; ""a"" is ""a""
True
&gt;&gt;&gt; ""aa"" is ""a"" * 2
True
&gt;&gt;&gt; x = ""a""
&gt;&gt;&gt; ""aa"" is x * 2
False
&gt;&gt;&gt; ""aa"" is intern(x*2)
True
</code></pre>

<p>Please see <a href=""https://stackoverflow.com/questions/26595/is-there-any-difference-between-foo-is-none-and-foo-none"">this question</a> as well.</p>
","133024"
"How to convert a Python datetime object to seconds","201110","","<p>Apologies for the simple question... I'm new to Python... I have searched around and nothing seems to be working.</p>

<p>I have a bunch of datetime objects and I want to calculate the number of seconds since a fixed time in the past for each one (for example since January 1, 1970).  </p>

<pre><code>import datetime
t = datetime.datetime(2009, 10, 21, 0, 0)
</code></pre>

<p>This seems to be only differentiating between dates that have different days:</p>

<pre><code>t.toordinal()
</code></pre>

<p>Any help is much appreciated.</p>
","<p>For the special date of January 1, 1970 there are multiple options.</p>

<p>For any other starting date you need to get the difference between the two dates in seconds. Subtracting two dates gives a <code>timedelta</code> object, which as of Python 2.7 has a <code>total_seconds()</code> function.</p>

<pre><code>&gt;&gt;&gt; (t-datetime.datetime(1970,1,1)).total_seconds()
1256083200.0
</code></pre>

<p>The starting date is usually specified in UTC, so for proper results the <code>datetime</code> you feed into this formula should be in UTC as well. If your <code>datetime</code> isn't in UTC already, you'll need to convert it before you use it, or attach a <code>tzinfo</code> class that has the proper offset.</p>

<p>As noted in the comments, if you have a <code>tzinfo</code> attached to your <code>datetime</code> then you'll need one on the starting date as well or the subtraction will fail; for the example above I would add <code>tzinfo=pytz.utc</code> if using Python 2 or <code>tzinfo=timezone.utc</code> if using Python 3.</p>
","7852969"
"How do I check if a string is unicode or ascii?","200955","","<p>What do I have to do in Python to figure out which encoding?</p>
","<p>In Python 3, all strings are sequences of Unicode characters. There is a <code>bytes</code> type that holds raw bytes.</p>

<p>In Python 2, a string may be of type <code>str</code> or of type <code>unicode</code>. You can tell which using code something like this:</p>

<pre><code>def whatisthis(s):
    if isinstance(s, str):
        print ""ordinary string""
    elif isinstance(s, unicode):
        print ""unicode string""
    else:
        print ""not a string""
</code></pre>
","4987414"
"Should you always favor xrange() over range()?","200928","","<p>Why or why not?</p>
","<p>For performance, especially when you're iterating over a large range, <code>xrange()</code> is usually better.  However, there are still a few cases why you might prefer <code>range()</code>:</p>

<ul>
<li><p>In python 3, <code>range()</code> does what <code>xrange()</code> used to do and <code>xrange()</code> does not exist.  If you want to write code that will run on both Python 2 and Python 3, you can't use <code>xrange()</code>.</p></li>
<li><p><code>range()</code> can actually be faster in some cases - eg. if iterating over the same sequence multiple times.  <code>xrange()</code> has to reconstruct the integer object every time, but <code>range()</code> will have real integer objects.  (It will always perform worse in terms of memory however)</p></li>
<li><p><code>xrange()</code> isn't usable in all cases where a real list is needed.  For instance, it doesn't support slices, or any list methods.</p></li>
</ul>

<p>[Edit] There are a couple of posts mentioning how <code>range()</code> will be upgraded by the 2to3 tool.  For the record, here's the output of running the tool on some sample usages of <code>range()</code> and <code>xrange()</code></p>

<pre><code>RefactoringTool: Skipping implicit fixer: buffer
RefactoringTool: Skipping implicit fixer: idioms
RefactoringTool: Skipping implicit fixer: ws_comma
--- range_test.py (original)
+++ range_test.py (refactored)
@@ -1,7 +1,7 @@

 for x in range(20):
-    a=range(20)
+    a=list(range(20))
     b=list(range(20))
     c=[x for x in range(20)]
     d=(x for x in range(20))
-    e=xrange(20)
+    e=range(20)
</code></pre>

<p>As you can see, when used in a for loop or comprehension, or where already wrapped with list(), range is left unchanged.</p>
","135114"
"Asking the user for input until they give a valid response","200825","","<p>I am writing a program that must accept input from the user.</p>

<pre><code>#note: Python 2.7 users should use `raw_input`, the equivalent of 3.X's `input`
age = int(input(""Please enter your age: ""))
if age &gt;= 18: 
    print(""You are able to vote in the United States!"")
else:
    print(""You are not able to vote in the United States."")
</code></pre>

<p>This works as expected if the user enters sensible data. </p>

<pre class=""lang-none prettyprint-override""><code>C:\Python\Projects&gt; canyouvote.py
Please enter your age: 23
You are able to vote in the United States!
</code></pre>

<p>But if they make a mistake, then it crashes:</p>

<pre class=""lang-none prettyprint-override""><code>C:\Python\Projects&gt; canyouvote.py
Please enter your age: dickety six
Traceback (most recent call last):
  File ""canyouvote.py"", line 1, in &lt;module&gt;
    age = int(input(""Please enter your age: ""))
ValueError: invalid literal for int() with base 10: 'dickety six'
</code></pre>

<p>Instead of crashing, I would like it to try getting the input again. Like this:</p>

<pre class=""lang-none prettyprint-override""><code>C:\Python\Projects&gt; canyouvote.py
Please enter your age: dickety six
Sorry, I didn't understand that.
Please enter your age: 26
You are able to vote in the United States!
</code></pre>

<p>How can I accomplish this? What if I also wanted to reject values like <code>-1</code>, which is a valid <code>int</code>, but nonsensical in this context?</p>
","<p>The simplest way to accomplish this would be to put the <code>input</code> method in a while loop. Use <a href=""https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops""><code>continue</code></a> when you get bad input, and <code>break</code> out of the loop when you're satisfied.</p>

<h2>When Your Input Might Raise an Exception</h2>

<p>Use <a href=""https://docs.python.org/3/tutorial/errors.html#handling-exceptions"">try and catch</a> to detect when the user enters data that can't be parsed.</p>

<pre><code>while True:
    try:
        # Note: Python 2.x users should use raw_input, the equivalent of 3.x's input
        age = int(input(""Please enter your age: ""))
    except ValueError:
        print(""Sorry, I didn't understand that."")
        #better try again... Return to the start of the loop
        continue
    else:
        #age was successfully parsed!
        #we're ready to exit the loop.
        break
if age &gt;= 18: 
    print(""You are able to vote in the United States!"")
else:
    print(""You are not able to vote in the United States."")
</code></pre>

<h2>Implementing Your Own Validation Rules</h2>

<p>If you want to reject values that Python can successfully parse, you can add your own validation logic.</p>

<pre><code>while True:
    data = input(""Please enter a loud message (must be all caps): "")
    if not data.isupper():
        print(""Sorry, your response was not loud enough."")
        continue
    else:
        #we're happy with the value given.
        #we're ready to exit the loop.
        break

while True:
    data = input(""Pick an answer from A to D:"")
    if data.lower() not in ('a', 'b', 'c', 'd'):
        print(""Not an appropriate choice."")
    else:
        break
</code></pre>

<h2>Combining Exception Handling and Custom Validation</h2>

<p>Both of the above techniques can be combined into one loop.</p>

<pre><code>while True:
    try:
        age = int(input(""Please enter your age: ""))
    except ValueError:
        print(""Sorry, I didn't understand that."")
        continue

    if age &lt; 0:
        print(""Sorry, your response must not be negative."")
        continue
    else:
        #age was successfully parsed, and we're happy with its value.
        #we're ready to exit the loop.
        break
if age &gt;= 18: 
    print(""You are able to vote in the United States!"")
else:
    print(""You are not able to vote in the United States."")
</code></pre>

<h2>Encapsulating it All in a Function</h2>

<p>If you need to ask your user for a lot of different values, it might be useful to put this code in a function, so you don't have to retype it every time.</p>

<pre><code>def get_non_negative_int(prompt):
    while True:
        try:
            value = int(input(prompt))
        except ValueError:
            print(""Sorry, I didn't understand that."")
            continue

        if value &lt; 0:
            print(""Sorry, your response must not be negative."")
            continue
        else:
            break
    return value

age = get_non_negative_int(""Please enter your age: "")
kids = get_non_negative_int(""Please enter the number of children you have: "")
salary = get_non_negative_int(""Please enter your yearly earnings, in dollars: "")
</code></pre>

<h3>Putting it all together</h3>

<p>You can extend this idea to make a very generic input function:</p>

<pre><code>def sanitised_input(prompt, type_=None, min_=None, max_=None, range_=None):
    if min_ is not None and max_ is not None and max_ &lt; min_:
        raise ValueError(""min_ must be less than or equal to max_."")
    while True:
        ui = input(prompt)
        if type_ is not None:
            try:
                ui = type_(ui)
            except ValueError:
                print(""Input type must be {0}."".format(type_.__name__))
                continue
        if max_ is not None and ui &gt; max_:
            print(""Input must be less than or equal to {0}."".format(max_))
        elif min_ is not None and ui &lt; min_:
            print(""Input must be greater than or equal to {0}."".format(min_))
        elif range_ is not None and ui not in range_:
            if isinstance(range_, range):
                template = ""Input must be between {0.start} and {0.stop}.""
                print(template.format(range_))
            else:
                template = ""Input must be {0}.""
                if len(range_) == 1:
                    print(template.format(*range_))
                else:
                    print(template.format("" or "".join(("", "".join(map(str,
                                                                     range_[:-1])),
                                                       str(range_[-1])))))
        else:
            return ui
</code></pre>

<p>With usage such as:</p>

<pre><code>age = sanitised_input(""Enter your age: "", int, 1, 101)
answer = sanitised_input(""Enter your answer"", str.lower, range_=('a', 'b', 'c', 'd'))
</code></pre>

<h2>Common Pitfalls, and Why you Should Avoid Them</h2>

<h3>The Redundant Use of Redundant <code>input</code> Statements</h3>

<p>This method works but is generally considered poor style:</p>

<pre><code>data = input(""Please enter a loud message (must be all caps): "")
while not data.isupper():
    print(""Sorry, your response was not loud enough."")
    data = input(""Please enter a loud message (must be all caps): "")
</code></pre>

<p>It might look attractive initially because it's shorter than the <code>while True</code> method, but it violates the <a href=""http://en.wikipedia.org/wiki/Don%27t_repeat_yourself"">Don't Repeat Yourself</a> principle of software development. This increases the likelihood of bugs in your system. What if you want to backport to 2.7 by changing <code>input</code> to <code>raw_input</code>, but accidentally change only the first <code>input</code> above? It's a <code>SyntaxError</code> just waiting to happen.</p>

<h3>Recursion Will Blow Your Stack</h3>

<p>If you've just learned about recursion, you might be tempted to use it in <code>get_non_negative_int</code> so you can dispose of the while loop.</p>

<pre><code>def get_non_negative_int(prompt):
    try:
        value = int(input(prompt))
    except ValueError:
        print(""Sorry, I didn't understand that."")
        return get_non_negative_int(prompt)

    if value &lt; 0:
        print(""Sorry, your response must not be negative."")
        return get_non_negative_int(prompt)
    else:
        return value
</code></pre>

<p>This appears to work fine most of the time, but if the user enters invalid data enough times, the script will terminate with a <code>RuntimeError: maximum recursion depth exceeded</code>. You may think ""no fool would make 1000 mistakes in a row"", but you're underestimating the ingenuity of fools!</p>
","23294659"
"How to count number of rows in a group in pandas group by object?","200820","","<p>I have a data frame <code>df</code> and I use several columns from it to <code>groupby</code>:</p>

<pre><code>df['col1','col2','col3','col4'].groupby(['col1','col2']).mean()
</code></pre>

<p>In the above way I almost get the table (data frame) that I need. What is missing is an additional column that contains number of rows in each group. In other words, I have mean but I also would like to know how many number were used to get these means. For example in the first group there are 8 values and in the second one 10 and so on.</p>
","<p>On <code>groupby</code> object, the <code>agg</code> function can take a list to <a href=""http://pandas.pydata.org/pandas-docs/stable/groupby.html#applying-multiple-functions-at-once"">apply several aggregation methods</a> at once. This should give you the result you need:</p>

<pre><code>df[['col1', 'col2', 'col3', 'col4']].groupby(['col1', 'col2']).agg(['mean', 'count'])
</code></pre>
","19385591"
"ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()","200789","","<p>I just discovered a logical bug in my code which was causing all sorts of problems. I was inadvertently doing a <strong>bitwise AND</strong> instead of a <strong>logical AND</strong>.</p>

<p>I changed the code from:</p>

<pre><code>r = mlab.csv2rec(datafile, delimiter=',', names=COL_HEADERS)
mask = ((r[""dt""] &gt;= startdate) &amp; (r[""dt""] &lt;= enddate))
selected = r[mask]
</code></pre>

<p>TO:</p>

<pre><code>r = mlab.csv2rec(datafile, delimiter=',', names=COL_HEADERS)
mask = ((r[""dt""] &gt;= startdate) and (r[""dt""] &lt;= enddate))
selected = r[mask]
</code></pre>

<p>To my surprise, I got the rather cryptic error message:</p>

<blockquote>
  <p>ValueError: The truth value of an array with more than one element is
  ambiguous. Use a.any() or a.all()</p>
</blockquote>

<p>Why was a similar error not emitted when I use a bitwise operation - and how do I fix this?</p>
","<p><code>r</code> is a numpy (rec)array. So <code>r[""dt""] &gt;= startdate</code> is also a (boolean)
array. For numpy arrays the <code>&amp;</code> operation returns the bitwise-and of the two
boolean arrays.</p>

<p>The NumPy developers felt there was no one commonly understood way to evaluate
an array in boolean context: it could mean <code>True</code> if <em>any</em> element is
<code>True</code>, or it could mean <code>True</code> if <em>all</em> elements are <code>True</code>, or <code>True</code> if the array has non-zero length, just to name three possibilities.</p>

<p>Since different users might have different needs and different assumptions, the
NumPy developers refused to guess and instead decided to raise a ValueError
whenever one tries to evaluate an array in boolean context. Applying <code>and</code> to
two numpy arrays causes the two arrays to be evaluated in boolean context (by
calling <code>__bool__</code> in Python3 or <code>__nonzero__</code> in Python2).</p>

<p>Your original code </p>

<pre><code>mask = ((r[""dt""] &gt;= startdate) &amp; (r[""dt""] &lt;= enddate))
selected = r[mask]
</code></pre>

<p>looks correct. However, if you do want <code>and</code>, then instead of <code>a and b</code> use <code>(a-b).any()</code> or <code>(a-b).all()</code>.</p>
","10063039"
"Python pandas: check if any value is NaN in DataFrame","200788","","<p>In python pandas, what's the best way to check whether a DataFrame has one (or more) NaN values?</p>

<p>I know about the function <code>pd.isnan</code>, but this returns a DataFrame of booleans for each element. <a href=""https://stackoverflow.com/questions/27754891/python-nan-value-in-pandas"">This post</a> right here doesn't exactly answer my question either.</p>
","<p><a href=""https://stackoverflow.com/users/1567452/jwilner"">jwilner</a>'s response is spot on. I was exploring to see if there's a faster option, since in my experience, summing flat arrays is (strangely) faster than counting. This code seems faster:</p>

<pre><code>df.isnull().values.any()
</code></pre>

<p>For example:</p>

<pre><code>In [2]: df = pd.DataFrame(np.random.randn(1000,1000))

In [3]: df[df &gt; 0.9] = pd.np.nan

In [4]: %timeit df.isnull().any().any()
100 loops, best of 3: 14.7 ms per loop

In [5]: %timeit df.isnull().values.sum()
100 loops, best of 3: 2.15 ms per loop

In [6]: %timeit df.isnull().sum().sum()
100 loops, best of 3: 18 ms per loop

In [7]: %timeit df.isnull().values.any()
1000 loops, best of 3: 948 µs per loop
</code></pre>

<p><code>df.isnull().sum().sum()</code> is a bit slower, but of course, has additional information -- the number of <code>NaNs</code>.</p>
","29530601"
"Writing unit tests in Python: How do I start?","200687","","<p>I completed my first proper project in Python and now my task is to write tests for it.</p>

<p>Since this is the first time I did a project, this is the first time I would be writing tests for it.</p>

<p>The question is, <em>how</em> do I start? I have absolutely no idea. Can anyone point me to some documentation/ tutorial/ link/ book that I can use to start with writing tests (and I guess unit testing in particular)</p>

<p>Any advice will be welcomed on this topic. </p>
","<p><a href=""http://www.onlamp.com/pub/a/python/2004/12/02/tdd_pyunit.html"" rel=""noreferrer"">This is a tutorial for test-driven development in Python</a>. Now, like Justin said, it's better to write your tests before or during coding, and that's how this tutorial assumes you're working, but I still think you'll find it helpful.</p>

<p><a href=""http://onlamp.com/pub/a/python/2005/02/03/tdd_pyunit2.html"" rel=""noreferrer"">And here's part 2</a>.</p>
","3371287"
"What is the python keyword ""with"" used for?","200569","","<p>What is the python keyword ""with"" used for?</p>

<p>Example from: <a href=""http://docs.python.org/tutorial/inputoutput.html"" rel=""noreferrer"">http://docs.python.org/tutorial/inputoutput.html</a></p>

<pre><code>&gt;&gt;&gt; with open('/tmp/workfile', 'r') as f:
...     read_data = f.read()
&gt;&gt;&gt; f.closed
True
</code></pre>
","<p>In python the <code>with</code> keyword is used when working with unmanaged resources (like file streams). It is similar to the <code>using</code> statement in VB.NET and C#. It allows you to ensure that a resource is ""cleaned up"" when the code that uses it finishes running, even if exceptions are thrown. It provides 'syntactic sugar' for <code>try/finally</code> blocks. </p>

<p>From <a href=""http://docs.python.org/whatsnew/2.6.html#pep-343-the-with-statement"" rel=""noreferrer"">Python Docs</a>: </p>

<blockquote>
  <p>The <code>with</code> statement clarifies code that previously would use <code>try...finally</code> blocks to ensure that clean-up code is executed. In this section, I’ll discuss the statement as it will commonly be used. In the next section, I’ll examine the implementation details and show how to write objects for use with this statement.</p>
  
  <p>The <code>with</code> statement is a control-flow structure whose basic structure is:</p>

<pre><code>with expression [as variable]:
    with-block
</code></pre>
  
  <p>The expression is evaluated, and it should result in an object that supports the context management protocol (that is, has <code>__enter__()</code> and <code>__exit__()</code> methods).</p>
</blockquote>

<p><em>Update</em> fixed VB callout per Scott Wisniewski's comment. I was indeed confusing <code>with</code> with <code>using</code>.</p>
","1369553"
"Encrypt & Decrypt using PyCrypto AES 256","200540","","<p>I'm trying to build two functions using PyCrypto that accept two parameters: the message and the key, and then encrypt/decrypt the message.</p>

<p>I found several links on the web to help me out, but each one of them has flaws:</p>

<p><a href=""http://www.codekoala.com/blog/2009/aes-encryption-python-using-pycrypto/"" rel=""noreferrer"">This one at codekoala</a> uses os.urandom, which is discouraged by PyCrypto.</p>

<p>Moreover, the key I give to the function is not guaranteed to have the exact length expected. What can I do to make that happen ?</p>

<p>Also, there are several modes, which one is recommended? I don't know what to use :/</p>

<p>Finally, what exactly is the IV? Can I provide a different IV for encrypting and decrypting, or will this return in a different result?</p>

<p>Here's what I've done so far:</p>

<pre><code>from Crypto import Random
from Crypto.Cipher import AES
import base64

BLOCK_SIZE=32

def encrypt(message, passphrase):
    # passphrase MUST be 16, 24 or 32 bytes long, how can I do that ?
    IV = Random.new().read(BLOCK_SIZE)
    aes = AES.new(passphrase, AES.MODE_CFB, IV)
    return base64.b64encode(aes.encrypt(message))

def decrypt(encrypted, passphrase):
    IV = Random.new().read(BLOCK_SIZE)
    aes = AES.new(passphrase, AES.MODE_CFB, IV)
    return aes.decrypt(base64.b64decode(encrypted))
</code></pre>
","<p>Here is my implementation and works for me with some fixes and enhances the alignment of the key and secret phrase with 32 bytes and iv to 16 bytes:</p>

<pre><code>import base64
import hashlib
from Crypto import Random
from Crypto.Cipher import AES

class AESCipher(object):

    def __init__(self, key): 
        self.bs = 32
        self.key = hashlib.sha256(key.encode()).digest()

    def encrypt(self, raw):
        raw = self._pad(raw)
        iv = Random.new().read(AES.block_size)
        cipher = AES.new(self.key, AES.MODE_CBC, iv)
        return base64.b64encode(iv + cipher.encrypt(raw))

    def decrypt(self, enc):
        enc = base64.b64decode(enc)
        iv = enc[:AES.block_size]
        cipher = AES.new(self.key, AES.MODE_CBC, iv)
        return self._unpad(cipher.decrypt(enc[AES.block_size:])).decode('utf-8')

    def _pad(self, s):
        return s + (self.bs - len(s) % self.bs) * chr(self.bs - len(s) % self.bs)

    @staticmethod
    def _unpad(s):
        return s[:-ord(s[len(s)-1:])]
</code></pre>
","21928790"
"How to calc square root in python?","200395","","<p>Why does python give the ""wrong"" answer?   </p>

<pre><code>x= 16

sqrt= x**(.5)
returns 4

sqrt= x**(1/2)
returns 1
</code></pre>

<p>Yes, I know <code>import math</code> and use <code>sqrt</code>. But I'm looking for an answer to the above.</p>
","<p><code>sqrt=x**(1/2)</code> is doing integer division. <code>1/2 == 0</code>.</p>

<p>So you're computing x<sup>(1/2)</sup> in the first instance, x<sup>(0)</sup> in the second.</p>

<p><sub>So it's not wrong, it's the right answer to a different question.</sub></p>
","9595150"
"Is there a way to perform ""if"" in python's lambda","200202","","<p>In <strong>python 2.6</strong>, I want to do:</p>

<pre><code>f = lambda x: if x==2 print x else raise Exception()
f(2) #should print ""2""
f(3) #should throw an exception
</code></pre>

<p>This clearly isn't the syntax. Is it possible to perform an <code>if</code> in <code>lambda</code> and if so how to do it?</p>

<p>thanks</p>
","<p>The syntax you're looking for:</p>

<pre><code>lambda x: True if x % 2 == 0 else False
</code></pre>

<p>But you can't use <code>print</code> or <code>raise</code> in a lambda.</p>
","1585396"
"How do I execute a string containing Python code in Python?","199612","","<p>How do I execute a string containing Python code in Python?</p>
","<p>In the example a string is executed as code using the exec function.</p>

<pre><code>import sys
import StringIO

# create file-like string to capture output
codeOut = StringIO.StringIO()
codeErr = StringIO.StringIO()

code = """"""
def f(x):
    x = x + 1
    return x

print 'This is my output.'
""""""

# capture output and errors
sys.stdout = codeOut
sys.stderr = codeErr

exec code

# restore stdout and stderr
sys.stdout = sys.__stdout__
sys.stderr = sys.__stderr__

print f(4)

s = codeErr.getvalue()

print ""error:\n%s\n"" % s

s = codeOut.getvalue()

print ""output:\n%s"" % s

codeOut.close()
codeErr.close()
</code></pre>
","701810"
"HTTP requests and JSON parsing in Python","199554","","<p>I want to dynamically query Google Maps through the Google Directions API. As an example, this request calculates the route from Chicago, IL to Los Angeles, CA via two waypoints in Joplin, MO and Oklahoma City, OK:</p>

<p><a href=""http://maps.googleapis.com/maps/api/directions/json?origin=Chicago,IL&amp;destination=Los+Angeles,CA&amp;waypoints=Joplin,MO|Oklahoma+City,OK&amp;sensor=false"" rel=""noreferrer"">http://maps.googleapis.com/maps/api/directions/json?origin=Chicago,IL&amp;destination=Los+Angeles,CA&amp;waypoints=Joplin,MO|Oklahoma+City,OK&amp;sensor=false</a></p>

<p>It returns a result <a href=""https://developers.google.com/maps/documentation/directions/intro?csw=1#Waypoints"" rel=""noreferrer"">in the JSON format</a>.</p>

<p>How can I do this in Python? I want to send such a request, receive the result and parse it.</p>
","<p>I recommend using the awesome <a href=""http://docs.python-requests.org/en/latest/index.html"" rel=""noreferrer"">requests</a> library:</p>

<pre><code>import json, requests

url = 'http://maps.googleapis.com/maps/api/directions/json'

params = dict(
    origin='Chicago,IL',
    destination='Los+Angeles,CA',
    waypoints='Joplin,MO|Oklahoma+City,OK',
    sensor='false'
)

resp = requests.get(url=url, params=params)
data = json.loads(resp.text)
</code></pre>
","6386366"
"How do I install PyCrypto on Windows?","199365","","<p>I've read every other google source and SO thread, with nothing working.</p>

<p><code>Python 2.7.3 32bit</code> installed on <code>Windows 7 64bit</code>. Download, extracting, and then trying to install PyCrypto results in <code>""Unable to find vcvarsall.bat"".</code></p>

<p>So I install MinGW and tack that on the install line as the compiler of choice. But then I get the error <code>""RuntimeError: chmod error"".</code></p>

<p>How in the world do I get around this? I've tried using pip, which gives the same result. I found a prebuilt PyCrypto 2.3 binary and installed that, but it's nowhere to be found on the system (not working).</p>

<p>Any ideas?</p>
","<p>If you don't already have a C/C++ development environment installed that is compatible with the Visual Studio binaries distributed by Python.org, then you should stick to installing only pure Python packages or packages for which a Windows binary is available.</p>

<p>Fortunately, there are PyCrypto binaries available for Windows:
<a href=""http://www.voidspace.org.uk/python/modules.shtml#pycrypto"" rel=""noreferrer"">http://www.voidspace.org.uk/python/modules.shtml#pycrypto</a></p>

<p><strong>UPDATE:</strong><br>
As @Udi suggests in the comment below, the following command also installs <code>pycrypto</code> and can be used in <code>virtualenv</code> as well:</p>

<pre><code>easy_install http://www.voidspace.org.uk/python/pycrypto-2.6.1/pycrypto-2.6.1.win32-py2.7.exe
</code></pre>

<p>Notice to choose the relevant link for your setup from <a href=""http://www.voidspace.org.uk/python/pycrypto-2.6.1/"" rel=""noreferrer"">this list</a></p>

<p>If you're looking for builds for Python 3.5, see <a href=""https://stackoverflow.com/q/32800336/4565685"">PyCrypto on python 3.5</a></p>
","11405769"
"Python Pandas: Get index of rows which column matches certain value","199316","","<p>Given a DataFrame with a column ""BoolCol"", we want to find the indexes of the DataFrame in which the values for ""BoolCol"" == True</p>

<p>I currently have the iterating way to do it, which works perfectly:</p>

<pre><code>for i in range(100,3000):
    if df.iloc[i]['BoolCol']== True:
         print i,df.iloc[i]['BoolCol']
</code></pre>

<p>But this is not the correct panda's way to do it.
After some research, I am currently using this code:</p>

<pre><code>df[df['BoolCol'] == True].index.tolist()
</code></pre>

<p>This one gives me a list of indexes, but they dont match, when I check them by doing:</p>

<pre><code>df.iloc[i]['BoolCol']
</code></pre>

<p>The result is actually False!!</p>

<p>Which would be the correct Pandas way to do this?</p>
","<p><code>df.iloc[i]</code> returns the <code>ith</code> row of <code>df</code>. <code>i</code> does not refer to the index label, <code>i</code> is a 0-based index.</p>

<p>In contrast, <strong>the attribute <code>index</code> returns actual index labels</strong>, not numeric row-indices:</p>

<pre><code>df.index[df['BoolCol'] == True].tolist()
</code></pre>

<p>or equivalently,</p>

<pre><code>df.index[df['BoolCol']].tolist()
</code></pre>

<p>You can see the difference quite clearly by playing with a DataFrame with
an ""unusual"" index:</p>

<pre><code>df = pd.DataFrame({'BoolCol': [True, False, False, True, True]},
       index=[10,20,30,40,50])

In [53]: df
Out[53]: 
   BoolCol
10    True
20   False
30   False
40    True
50    True

[5 rows x 1 columns]

In [54]: df.index[df['BoolCol']].tolist()
Out[54]: [10, 40, 50]
</code></pre>

<hr>

<p><strong>If you want to use the index</strong>, </p>

<pre><code>In [56]: idx = df.index[df['BoolCol']]

In [57]: idx
Out[57]: Int64Index([10, 40, 50], dtype='int64')
</code></pre>

<p><strong>then you can select the rows using <code>loc</code> instead of <code>iloc</code></strong>:</p>

<pre><code>In [58]: df.loc[idx]
Out[58]: 
   BoolCol
10    True
40    True
50    True

[3 rows x 1 columns]
</code></pre>

<hr>

<p>Note that <strong><code>loc</code> can also accept boolean arrays</strong>:</p>

<pre><code>In [55]: df.loc[df['BoolCol']]
Out[55]: 
   BoolCol
10    True
40    True
50    True

[3 rows x 1 columns]
</code></pre>

<hr>

<p><strong>If you have a boolean array, <code>mask</code>, and need ordinal index values, you can compute them using <code>np.flatnonzero</code></strong>:</p>

<pre><code>In [110]: np.flatnonzero(df['BoolCol'])
Out[112]: array([0, 3, 4])
</code></pre>

<p>Use <code>df.iloc</code> to select rows by ordinal index:</p>

<pre><code>In [113]: df.iloc[np.flatnonzero(df['BoolCol'])]
Out[113]: 
   BoolCol
10    True
40    True
50    True
</code></pre>
","21800319"
"Dynamic module import in Python","198886","","<p>I'm writing a Python application that takes as a command as an argument, for example:</p>

<pre><code>$ python myapp.py command1
</code></pre>

<p>I want the application to be extensible, that is, to be able to add new modules that implement new commands without having to change the main application source. The tree looks something like:</p>

<pre><code>myapp/
    __init__.py
    commands/
        __init__.py
        command1.py
        command2.py
    foo.py
    bar.py
</code></pre>

<p>So I want the application to find the available command modules at runtime and execute the appropriate one.</p>

<p>Currently this is implemented something like:</p>

<pre><code>command = sys.argv[1]
try:
    command_module = __import__(""myapp.commands.%s"" % command, fromlist=[""myapp.commands""])
except ImportError:
    # Display error message

command_module.run()
</code></pre>

<p>This works just fine, I'm just wondering if there is possibly a more idiomatic way to accomplish what we are doing with this code.</p>

<p>Note that I specifically don't want to get in to using eggs or extension points. This is not an open-source project and I don't expect there to be ""plugins"". The point is to simplify the main application code and remove the need to modify it each time a new command module is added.</p>
","<p>With Python older than 2.7/3.1, that's pretty much how you do it. For newer versions, see <code>importlib.import_module</code> <a href=""https://docs.python.org/2/library/importlib.html#importlib.import_module"" rel=""noreferrer"">for 2.7+</a> and <a href=""https://docs.python.org/3.1/library/importlib.html#importlib.import_module"" rel=""noreferrer"">for 3.1+</a>.</p>

<p>You can use <code>exec</code> if you want to as well.</p>

<p>Note you can import a list of modules by doing this:</p>

<pre><code>&gt;&gt;&gt; moduleNames = ['sys', 'os', 're', 'unittest'] 
&gt;&gt;&gt; moduleNames
['sys', 'os', 're', 'unittest']
&gt;&gt;&gt; modules = map(__import__, moduleNames)
</code></pre>

<p>Ripped straight from <a href=""http://www.diveintopython.net/functional_programming/dynamic_import.html"" rel=""noreferrer"">Dive Into Python</a>.</p>
","301146"
"How to send an email with Python?","198842","","<p>This code works and sends me an email just fine:  </p>

<pre><code>import smtplib
#SERVER = ""localhost""

FROM = 'monty@python.com'

TO = [""jon@mycompany.com""] # must be a list

SUBJECT = ""Hello!""

TEXT = ""This message was sent with Python's smtplib.""

# Prepare actual message

message = """"""\
From: %s
To: %s
Subject: %s

%s
"""""" % (FROM, "", "".join(TO), SUBJECT, TEXT)

# Send the mail

server = smtplib.SMTP('myserver')
server.sendmail(FROM, TO, message)
server.quit()
</code></pre>

<p>However if I try to wrap it in a function like this:</p>

<pre><code>def sendMail(FROM,TO,SUBJECT,TEXT,SERVER):
    import smtplib
    """"""this is some test documentation in the function""""""
    message = """"""\
        From: %s
        To: %s
        Subject: %s
        %s
        """""" % (FROM, "", "".join(TO), SUBJECT, TEXT)
    # Send the mail
    server = smtplib.SMTP(SERVER)
    server.sendmail(FROM, TO, message)
    server.quit()
</code></pre>

<p>and call it I get the following errors:  </p>

<pre><code> Traceback (most recent call last):
  File ""C:/Python31/mailtest1.py"", line 8, in &lt;module&gt;
    sendmail.sendMail(sender,recipients,subject,body,server)
  File ""C:/Python31\sendmail.py"", line 13, in sendMail
    server.sendmail(FROM, TO, message)
  File ""C:\Python31\lib\smtplib.py"", line 720, in sendmail
    self.rset()
  File ""C:\Python31\lib\smtplib.py"", line 444, in rset
    return self.docmd(""rset"")
  File ""C:\Python31\lib\smtplib.py"", line 368, in docmd
    return self.getreply()
  File ""C:\Python31\lib\smtplib.py"", line 345, in getreply
    raise SMTPServerDisconnected(""Connection unexpectedly closed"")
smtplib.SMTPServerDisconnected: Connection unexpectedly closed
</code></pre>

<p>Can anyone help me understand why?  </p>
","<p>I recommend that you use the standard packages <a href=""https://docs.python.org/3/library/email.html"" rel=""noreferrer""><code>email</code></a> and <a href=""https://docs.python.org/3/library/smtplib.html"" rel=""noreferrer""><code>smtplib</code></a> together to send email. Please look at the following example (reproduced from the <a href=""https://docs.python.org/3/library/email.examples.html"" rel=""noreferrer"">Python documentation</a>). Notice that if you follow this approach, the ""simple"" task is indeed simple, and the more complex tasks (like attaching binary objects or sending plain/HTML multipart messages) are accomplished very rapidly.</p>

<pre><code># Import smtplib for the actual sending function
import smtplib

# Import the email modules we'll need
from email.mime.text import MIMEText

# Open a plain text file for reading.  For this example, assume that
# the text file contains only ASCII characters.
with open(textfile, 'rb') as fp:
    # Create a text/plain message
    msg = MIMEText(fp.read())

# me == the sender's email address
# you == the recipient's email address
msg['Subject'] = 'The contents of %s' % textfile
msg['From'] = me
msg['To'] = you

# Send the message via our own SMTP server, but don't include the
# envelope header.
s = smtplib.SMTP('localhost')
s.sendmail(me, [you], msg.as_string())
s.quit()
</code></pre>

<p>For sending email to multiple destinations, you can also follow the example in the <a href=""https://docs.python.org/3/library/email.examples.html"" rel=""noreferrer"">Python documentation</a>:</p>

<pre><code># Import smtplib for the actual sending function
import smtplib

# Here are the email package modules we'll need
from email.mime.image import MIMEImage
from email.mime.multipart import MIMEMultipart

# Create the container (outer) email message.
msg = MIMEMultipart()
msg['Subject'] = 'Our family reunion'
# me == the sender's email address
# family = the list of all recipients' email addresses
msg['From'] = me
msg['To'] = ', '.join(family)
msg.preamble = 'Our family reunion'

# Assume we know that the image files are all in PNG format
for file in pngfiles:
    # Open the files in binary mode.  Let the MIMEImage class automatically
    # guess the specific image type.
    with open(file, 'rb') as fp:
        img = MIMEImage(fp.read())
    msg.attach(img)

# Send the email via our own SMTP server.
s = smtplib.SMTP('localhost')
s.sendmail(me, family, msg.as_string())
s.quit()
</code></pre>

<p>As you can see, the header <code>To</code> in the <code>MIMEText</code> object must be a string consisting of email addresses separated by commas. On the other hand, the second argument to the <code>sendmail</code> function must be a list of strings (each string is an email address).</p>

<p>So, if you have three email addresses: <code>person1@example.com</code>, <code>person2@example.com</code>, and <code>person3@example.com</code>, you can do as follows (obvious sections omitted):</p>

<pre><code>to = [""person1@example.com"", ""person2@example.com"", ""person3@example.com""]
msg['To'] = "","".join(to)
s.sendmail(me, to, msg.as_string())
</code></pre>

<p>the <code>"""","""".join(to)</code> part makes a single string out of the list, separated by commas.</p>

<p>From your questions I gather that you have not gone through <a href=""https://docs.python.org/3/tutorial/index.html"" rel=""noreferrer"">the Python tutorial</a> - it is a MUST if you want to get anywhere in Python - the documentation is mostly excellent for the standard library.</p>
","6270987"
"What is the standard way to add N seconds to datetime.time in Python?","198789","","<p>Given a <code>datetime.time</code> value in Python, is there a standard way to add an integer number of seconds to it, so that <code>11:34:59</code> + 3 = <code>11:35:02</code>, for example?</p>

<p>These obvious ideas don't work:</p>

<pre><code>&gt;&gt;&gt; datetime.time(11, 34, 59) + 3
TypeError: unsupported operand type(s) for +: 'datetime.time' and 'int'
&gt;&gt;&gt; datetime.time(11, 34, 59) + datetime.timedelta(0, 3)
TypeError: unsupported operand type(s) for +: 'datetime.time' and 'datetime.timedelta'
&gt;&gt;&gt; datetime.time(11, 34, 59) + datetime.time(0, 0, 3)
TypeError: unsupported operand type(s) for +: 'datetime.time' and 'datetime.time'
</code></pre>

<p>In the end I have written functions like this:</p>

<pre><code>def add_secs_to_time(timeval, secs_to_add):
    secs = timeval.hour * 3600 + timeval.minute * 60 + timeval.second
    secs += secs_to_add
    return datetime.time(secs // 3600, (secs % 3600) // 60, secs % 60)
</code></pre>

<p>I can't help thinking that I'm missing an easier way to do this though.</p>

<h3>Related</h3>

<ul>
<li><a href=""https://stackoverflow.com/questions/656297/python-time-timedelta-equivalent"">python time + timedelta equivalent</a></li>
</ul>
","<p>You can use full <code>datetime</code> variables with <code>timedelta</code>, and by providing a dummy date then using <code>time</code> to just get the time value.</p>

<p>For example:</p>

<pre><code>import datetime
a = datetime.datetime(100,1,1,11,34,59)
b = a + datetime.timedelta(0,3) # days, seconds, then other fields.
print a.time()
print b.time()
</code></pre>

<p>results in the two values, three seconds apart:</p>

<pre><code>11:34:59
11:35:02
</code></pre>

<p>You could also opt for the more readable</p>

<pre><code>b = a + datetime.timedelta(seconds=3)
</code></pre>

<p>if you're so inclined.</p>

<hr>

<p>If you're after a function that can do this, you can look into using <code>addSecs</code> below:</p>

<pre><code>import datetime

def addSecs(tm, secs):
    fulldate = datetime.datetime(100, 1, 1, tm.hour, tm.minute, tm.second)
    fulldate = fulldate + datetime.timedelta(seconds=secs)
    return fulldate.time()

a = datetime.datetime.now().time()
b = addSecs(a, 300)
print a
print b
</code></pre>

<p>This outputs:</p>

<pre><code> 09:11:55.775695
 09:16:55
</code></pre>
","100345"
"Modify tick label text","198626","","<p>I want to make some modifications to a few selected tick labels in a plot.</p>

<p>For example, if I do: </p>

<pre><code>label = axes.yaxis.get_major_ticks()[2].label
label.set_fontsize(size)
label.set_rotation('vertical')
</code></pre>

<p>the font size and the orientation of the tick label is changed. </p>

<p>However, if try:</p>

<pre><code>label.set_text('Foo')
</code></pre>

<p>the tick label is <em>not</em> modified. Also if I do:</p>

<pre><code>print label.get_text()
</code></pre>

<p>nothing is printed.</p>

<p>Here's some more strangeness. When I tried this:</p>

<pre><code> from pylab import *
 axes = figure().add_subplot(111)
 t = arange(0.0, 2.0, 0.01)
 s = sin(2*pi*t)
 axes.plot(t, s)
 for ticklabel in axes.get_xticklabels():
     print ticklabel.get_text()
</code></pre>

<p>Only empty strings are printed, but the plot contains ticks labeled as '0.0', '0.5', '1.0', '1.5', and '2.0'.</p>
","<p>Caveat: Unless the ticklabels are already set to a string (as is usually the case in e.g. a boxplot), this will not work with any version of matplotlib newer than <code>1.1.0</code>.  If you're working from the current github master, this won't work.  I'm not sure what the problem is yet...  It may be an unintended change, or it may not be...</p>

<p>Normally, you'd do something along these lines:</p>

<pre><code>import matplotlib.pyplot as plt

fig, ax = plt.subplots()

# We need to draw the canvas, otherwise the labels won't be positioned and 
# won't have values yet.
fig.canvas.draw()

labels = [item.get_text() for item in ax.get_xticklabels()]
labels[1] = 'Testing'

ax.set_xticklabels(labels)

plt.show()
</code></pre>

<p><img src=""https://i.stack.imgur.com/5m900.png"" alt=""enter image description here""></p>

<p>To understand the reason why you need to jump through so many hoops, you need to understand a bit more about how matplotlib is structured.</p>

<p>Matplotlib deliberately avoids doing ""static"" positioning of ticks, etc, unless it's explicitly told to.  The assumption is that you'll want to interact with the plot, and so the bounds of the plot, ticks, ticklabels, etc will be dynamically changing.</p>

<p>Therefore, you can't just set the text of a given tick label.  By default, it's re-set by the axis's Locator and Formatter every time the plot is drawn.</p>

<p>However, if the Locators and Formatters are set to be static (<code>FixedLocator</code> and <code>FixedFormatter</code>, respectively), then the tick labels stay the same.</p>

<p>This is what <code>set_*ticklabels</code> or <code>ax.*axis.set_ticklabels</code> does. </p>

<p>Hopefully that makes it slighly more clear as to why changing an individual tick label is a bit convoluted.</p>

<p>Often, what you actually want to do is just annotate a certain position.  In that case, look into <code>annotate</code>, instead. </p>
","11250884"
"Get a list of numbers as input from the user","198294","","<p>I tried to use <code>raw_input()</code> to get a list of numbers, however with the code</p>

<pre><code>numbers = raw_input()
print len(numbers)
</code></pre>

<p>the input <code>[1,2,3]</code> gives a result of <code>7</code>, so I guess it interprets the input as if it were a string. Is there any direct way to make a list out of it? Maybe I could use <code>re.findall</code> to extract the integers, but if possible, I would prefer to use a more Pythonic solution.</p>
","<p>In Python 3.x, use this.</p>

<pre><code>a = [int(x) for x in input().split()]
</code></pre>

<h2>Example</h2>

<pre><code>&gt;&gt;&gt; a = [int(x) for x in input().split()]
3 4 5
&gt;&gt;&gt; a
[3, 4, 5]
&gt;&gt;&gt; 
</code></pre>
","28165771"
"python convert list to dictionary","197908","","<pre><code>l = [""a"", ""b"", ""c"", ""d"", ""e""]
</code></pre>

<p>I want to convert this list to a dictionary like:</p>

<pre><code>d = {""a"": ""b"", ""c"": ""d"", ""e"": """"}
</code></pre>

<p>So basically, the evens will be keys whereas the odds will be values. I know that I can do it in a ""non-pythonic"" way such as a for loop with if statements but I believe that there should be a more ""pythonic"" way to accomplish this. So, I appreciate any help :) </p>
","<p>Using the usual <a href=""http://docs.python.org/library/itertools.html#recipes"" rel=""noreferrer"">grouper recipe</a>, you could do:</p>

<p><strong>Python 2:</strong></p>

<pre><code>d = dict(itertools.izip_longest(*[iter(l)] * 2, fillvalue=""""))
</code></pre>

<p><strong>Python 3:</strong></p>

<pre><code>d = dict(itertools.zip_longest(*[iter(l)] * 2, fillvalue=""""))
</code></pre>
","6900977"
"unbound method f() must be called with fibo_ instance as first argument (got classobj instance instead)","197899","","<p>In Python, I'm trying to run a method in a class and I get an error:</p>

<pre><code>Traceback (most recent call last):
  File ""C:\Users\domenico\Desktop\py\main.py"", line 8, in &lt;module&gt;
    fibo.f()
  TypeError: unbound method f() must be called with fibo instance 
  as first argument (got nothing instead)
</code></pre>

<p>Code: (swineflu.py)</p>

<pre><code>class fibo:
    a=0
    b=0

    def f(self,a=0):
        print fibo.b+a
        b=a;
        return self(a+1)
</code></pre>

<p>Script main.py</p>

<pre><code>import swineflu

f = swineflu
fibo = f.fibo

fibo.f()            #TypeError is thrown here
</code></pre>

<p>What does this error mean? What is causing this error? </p>
","<p>OK, first of all, you don't have to get a reference to the module into a different name; you already have a reference (from the <code>import</code>) and you can just use it.  If you want a different name just use <code>import swineflu as f</code>.</p>

<p>Second, you are getting a reference to the class rather than instantiating the class.</p>

<p>So this should be:</p>

<pre><code>import swineflu

fibo = swineflu.fibo()  # get an instance of the class
fibo.f()                # call the method f of the instance
</code></pre>

<p>A <em>bound method</em> is one that is attached to an instance of an object. An <em>unbound method</em> is, of course, one that is <em>not</em> attached to an instance. The error usually means you are calling the method on the class rather than on an instance, which is exactly what was happening in this case because you hadn't instantiated the class.</p>
","4473245"
"How can I create a simple message box in Python?","197870","","<p>I'm looking for the same effect as <code>alert()</code> in JavaScript.</p>

<p>I wrote a simple web-based interpreter this afternoon using Twisted.web. You basically submit a block of Python code through a form, and the client comes and grabs it and executes it. I want to be able to make a simple popup message, without having to re-write a whole bunch of boilerplate wxPython or TkInter code every time (since the code gets submitted through a form and then disappears).</p>

<p>I've tried tkMessageBox:</p>

<pre><code>import tkMessageBox
tkMessageBox.showinfo(title=""Greetings"", message=""Hello World!"")
</code></pre>

<p>but this opens another window in the background with a tk icon. I don't want this. I was looking for some simple wxPython code but it always required setting up a class and entering an app loop etc. Is there no simple, catch-free way of making a message box in Python?</p>
","<p>You could use an import and single line code like this:</p>

<pre><code>import ctypes  # An included library with Python install.   
ctypes.windll.user32.MessageBoxW(0, ""Your text"", ""Your title"", 1)
</code></pre>

<p>Or define a function (Mbox) like so:</p>

<pre><code>import ctypes  # An included library with Python install.
def Mbox(title, text, style):
    return ctypes.windll.user32.MessageBoxW(0, text, title, style)
Mbox('Your title', 'Your text', 1)
</code></pre>

<p>Note the styles are as follows:</p>

<pre><code>##  Styles:
##  0 : OK
##  1 : OK | Cancel
##  2 : Abort | Retry | Ignore
##  3 : Yes | No | Cancel
##  4 : Yes | No
##  5 : Retry | No 
##  6 : Cancel | Try Again | Continue
</code></pre>

<p>Have fun!</p>

<p>Note: edited to use <code>MessageBoxW</code> instead of <code>MessageBoxA</code></p>
","15275420"
"Write to UTF-8 file in Python","197818","","<p>I'm really confused with the <code>codecs.open function</code>. When I do:</p>

<pre><code>file = codecs.open(""temp"", ""w"", ""utf-8"")
file.write(codecs.BOM_UTF8)
file.close()
</code></pre>

<p>It gives me the error</p>

<blockquote>
  <p>UnicodeDecodeError: 'ascii' codec can't decode byte 0xef in position
  0: ordinal not in range(128)</p>
</blockquote>

<p>If I do:</p>

<pre><code>file = open(""temp"", ""w"")
file.write(codecs.BOM_UTF8)
file.close()
</code></pre>

<p>It works fine.</p>

<p><strong>Question</strong> is why does the first method fail? And how do I insert the bom?</p>

<p>If the second method is the correct way of doing it, what the point of using <code>codecs.open(filename, ""w"", ""utf-8"")</code>?</p>
","<p>I believe the problem is that <a href=""https://docs.python.org/library/codecs.html#codecs.BOM_UTF8"" rel=""noreferrer""><code>codecs.BOM_UTF8</code></a> is a byte string, not a Unicode string. I suspect the file handler is trying to guess what you really mean based on ""I'm meant to be writing Unicode as UTF-8-encoded text, but you've given me a byte string!""</p>

<p>Try writing the Unicode string for the byte order mark (i.e. Unicode U+FEFF) directly, so that the file just encodes that as UTF-8:</p>

<pre><code>import codecs

file = codecs.open(""lol"", ""w"", ""utf-8"")
file.write(u'\ufeff')
file.close()
</code></pre>

<p>(That seems to give the right answer - a file with bytes EF BB BF.)</p>

<p>EDIT: S. Lott's <a href=""https://stackoverflow.com/a/934203/12892"">suggestion</a> of using ""utf-8-sig"" as the encoding is a better one than explicitly writing the BOM yourself, but I'll leave this answer here as it explains what was going wrong before.</p>
","934173"
"Is there a simple, elegant way to define singletons?","197590","","<p>There seem to be many ways to define <a href=""http://en.wikipedia.org/wiki/Singleton_pattern"" rel=""noreferrer"">singletons</a> in Python. Is there a consensus opinion on Stack&nbsp;Overflow?</p>
","<p>I don't really see the need, as a module with functions (and not a class) would serve well as a singleton. All its variables would be bound to the module, which could not be instantiated repeatedly anyway. </p>

<p>If you do wish to use a class, there is no way of creating private classes or private constructors in Python, so you can't protect against multiple instantiations, other than just via convention in use of your API. I would still just put methods in a module, and consider the module as the singleton.</p>
","31887"
"join list of lists in python","197570","","<p>Is the a short syntax for joining a list of lists into a single list( or iterator) in python?</p>

<p>For example I have a list as follows and I want to iterate over a,b and c.  </p>

<pre><code>x = [[""a"",""b""], [""c""]]
</code></pre>

<p>The best I can come up with is as follows.</p>

<pre><code>result = []
[ result.extend(el) for el in x] 

for el in result:
  print el
</code></pre>
","<pre><code>import itertools
a = [[""a"",""b""], [""c""]]
print list(itertools.chain.from_iterable(a))
</code></pre>
","716482"
"How to deal with SettingWithCopyWarning in Pandas?","197376","","<h2>Background</h2>

<p>I just upgraded my Pandas from 0.11 to 0.13.0rc1. Now, the application is popping out many new warnings. One of them like this:</p>

<pre><code>E:\FinReporter\FM_EXT.py:449: SettingWithCopyWarning: A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_index,col_indexer] = value instead
  quote_df['TVol']   = quote_df['TVol']/TVOL_SCALE
</code></pre>

<p>I want to know what exactly it means?  Do I need to change something?</p>

<p>How should I suspend the warning if I insist to use <code>quote_df['TVol']   = quote_df['TVol']/TVOL_SCALE</code>?</p>

<h2>The function that gives errors</h2>

<pre><code>def _decode_stock_quote(list_of_150_stk_str):
    """"""decode the webpage and return dataframe""""""

    from cStringIO import StringIO

    str_of_all = """".join(list_of_150_stk_str)

    quote_df = pd.read_csv(StringIO(str_of_all), sep=',', names=list('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefg')) #dtype={'A': object, 'B': object, 'C': np.float64}
    quote_df.rename(columns={'A':'STK', 'B':'TOpen', 'C':'TPCLOSE', 'D':'TPrice', 'E':'THigh', 'F':'TLow', 'I':'TVol', 'J':'TAmt', 'e':'TDate', 'f':'TTime'}, inplace=True)
    quote_df = quote_df.ix[:,[0,3,2,1,4,5,8,9,30,31]]
    quote_df['TClose'] = quote_df['TPrice']
    quote_df['RT']     = 100 * (quote_df['TPrice']/quote_df['TPCLOSE'] - 1)
    quote_df['TVol']   = quote_df['TVol']/TVOL_SCALE
    quote_df['TAmt']   = quote_df['TAmt']/TAMT_SCALE
    quote_df['STK_ID'] = quote_df['STK'].str.slice(13,19)
    quote_df['STK_Name'] = quote_df['STK'].str.slice(21,30)#.decode('gb2312')
    quote_df['TDate']  = quote_df.TDate.map(lambda x: x[0:4]+x[5:7]+x[8:10])

    return quote_df
</code></pre>

<h2>More error messages</h2>

<pre><code>E:\FinReporter\FM_EXT.py:449: SettingWithCopyWarning: A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_index,col_indexer] = value instead
  quote_df['TVol']   = quote_df['TVol']/TVOL_SCALE
E:\FinReporter\FM_EXT.py:450: SettingWithCopyWarning: A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_index,col_indexer] = value instead
  quote_df['TAmt']   = quote_df['TAmt']/TAMT_SCALE
E:\FinReporter\FM_EXT.py:453: SettingWithCopyWarning: A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_index,col_indexer] = value instead
  quote_df['TDate']  = quote_df.TDate.map(lambda x: x[0:4]+x[5:7]+x[8:10])
</code></pre>
","<p>From what I gather, <code>SettingWithCopyWarning</code> was created to flag potentially confusing ""chained"" assignments, such as the following, which don't always work as expected, particularly when the first selection returns a <em>copy</em>.  [see <a href=""https://github.com/pydata/pandas/pull/5390"" rel=""noreferrer"">GH5390</a> and <a href=""https://github.com/pydata/pandas/issues/5597"" rel=""noreferrer"">GH5597</a> for background discussion.]</p>

<pre><code>df[df['A'] &gt; 2]['B'] = new_val  # new_val not set in df
</code></pre>

<p>The warning offers a suggestion to rewrite as follows:</p>

<pre><code>df.loc[df['A'] &gt; 2, 'B'] = new_val
</code></pre>

<p>However, this doesn't fit your usage, which is equivalent to:</p>

<pre><code>df = df[df['A'] &gt; 2]
df['B'] = new_val
</code></pre>

<p>While it's clear that you don't care about writes making it back to the original frame (since you overwrote the reference to it), unfortunately this pattern can not be differentiated from the first chained assignment example, hence the (false positive) warning.  The potential for false positives is addressed in the <a href=""http://pandas.pydata.org/pandas-docs/dev/indexing.html#returning-a-view-versus-a-copy"" rel=""noreferrer"">docs on indexing</a>, if you'd like to read further.  You can safely disable this new warning with the following assignment.</p>

<pre><code>pd.options.mode.chained_assignment = None  # default='warn'
</code></pre>
","20627316"
"Sort a list of tuples by 2nd item (integer value)","197292","","<p>I have a list of tuples that looks something like this:</p>

<pre><code>[('abc', 121),('abc', 231),('abc', 148), ('abc',221)]
</code></pre>

<p>I want to sort this list in ascending order by the integer value inside the tuples. Is it possible?</p>
","<p>Try using the <code>key</code> keyword with <code>sorted()</code>.</p>

<pre><code>sorted([('abc', 121),('abc', 231),('abc', 148), ('abc',221)], key=lambda x: x[1])
</code></pre>

<p><code>key</code> should be a function that identifies how to retrieve the comparable element from your data structure.  In your case, it is the second element of the tuple, so we access <code>[1]</code>.</p>

<p>For optimization, see jamylak's response using <code>itemgetter(1)</code>, which is essentially a faster version of <code>lambda x: x[1]</code>.</p>
","10695161"
"How can I selectively escape percent (%) in Python strings?","197224","","<p>I have the following code</p>

<pre><code>test = ""have it break.""
selectiveEscape = ""Print percent % in sentence and not %s"" % test

print(selectiveEscape)
</code></pre>

<p>I would like to get the output:</p>

<pre><code>Print percent % in sentence and not have it break.
</code></pre>

<p>What actually happens:</p>

<pre><code>    selectiveEscape = ""Use percent % in sentence and not %s"" % test
TypeError: %d format: a number is required, not str
</code></pre>
","<pre><code>&gt;&gt;&gt; test = ""have it break.""
&gt;&gt;&gt; selectiveEscape = ""Print percent %% in sentence and not %s"" % test
&gt;&gt;&gt; print selectiveEscape
Print percent % in sentence and not have it break.
</code></pre>
","10678240"
"What is the maximum recursion depth in Python, and how to increase it?","197093","","<p>I have this tail recursive function here:</p>

<pre><code>def fib(n, sum):
    if n &lt; 1:
        return sum
    else:
        return fib(n-1, sum+n)

c = 998
print(fib(c, 0))
</code></pre>

<p>It works up to n=997, then it just breaks and spits a ""maximum recursion depth exceeded in comparison"" <code>RuntimeError</code>. Is this just a stack overflow? Is there a way to get around it?</p>
","<p>It is a guard against a stack overflow, yes. Python (or rather, the CPython implementation) doesn't optimize tail recursion, and unbridled recursion causes stack overflows. You can change the recursion limit with <a href=""http://docs.python.org/library/sys.html#sys.setrecursionlimit"" rel=""noreferrer""><code>sys.setrecursionlimit</code></a>, but doing so is dangerous -- the standard limit is a little conservative, but Python stackframes can be quite big.</p>

<p>Python isn't a functional language and tail recursion is not a particularly efficient technique. Rewriting the algorithm iteratively, if possible, is generally a better idea.</p>
","3323013"
"How to normalize an array in NumPy?","197000","","<p>I would like to have the norm of one NumPy array. More specifically, I am looking for an equivalent version of this function</p>

<pre><code>def normalize(v):
    norm = np.linalg.norm(v)
    if norm == 0: 
       return v
    return v / norm
</code></pre>

<p>Is there something like that in <code>skearn</code> or <code>numpy</code>?</p>

<p>This function works in a situation where <code>v</code> is the 0 vector.</p>
","<p>If you're using scikit-learn you can use <a href=""http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.normalize.html#sklearn.preprocessing.normalize"" rel=""noreferrer""><code>sklearn.preprocessing.normalize</code></a>:</p>

<pre><code>import numpy as np
from sklearn.preprocessing import normalize

x = np.random.rand(1000)*10
norm1 = x / np.linalg.norm(x)
norm2 = normalize(x[:,np.newaxis], axis=0).ravel()
print np.all(norm1 == norm2)
# True
</code></pre>
","21031303"
"How to download image using requests","196575","","<p>I'm trying to download and save an image from the web using python's <code>requests</code> module.</p>

<p>Here is the (working) code I used:</p>

<pre><code>img = urllib2.urlopen(settings.STATICMAP_URL.format(**data))
with open(path, 'w') as f:
    f.write(img.read())
</code></pre>

<p>Here is the new (non-working) code using <code>requests</code>:</p>

<pre><code>r = requests.get(settings.STATICMAP_URL.format(**data))
if r.status_code == 200:
    img = r.raw.read()
    with open(path, 'w') as f:
        f.write(img)
</code></pre>

<p>Can you help me on what attribute from the response to use from <code>requests</code>?</p>
","<p>You can either use the <a href=""http://docs.python-requests.org/en/latest/api/#requests.Response.raw""><code>response.raw</code> file object</a>, or iterate over the response.</p>

<p>To use the <code>response.raw</code> file-like object will not, by default, decode compressed responses (with GZIP or deflate). You can force it to decompress for you anyway by setting the <code>decode_content</code> attribute to <code>True</code> (<code>requests</code> sets it to <code>False</code> to control decoding itself). You can then use <a href=""https://docs.python.org/2/library/shutil.html#shutil.copyfileobj""><code>shutil.copyfileobj()</code></a> to have Python stream the data to a file object:</p>

<pre><code>import requests
import shutil

r = requests.get(settings.STATICMAP_URL.format(**data), stream=True)
if r.status_code == 200:
    with open(path, 'wb') as f:
        r.raw.decode_content = True
        shutil.copyfileobj(r.raw, f)        
</code></pre>

<p>To iterate over the response use a loop; iterating like this ensures that data is decompressed by this stage:</p>

<pre><code>r = requests.get(settings.STATICMAP_URL.format(**data), stream=True)
if r.status_code == 200:
    with open(path, 'wb') as f:
        for chunk in r:
            f.write(chunk)
</code></pre>

<p>This'll read the data in 128 byte chunks; if you feel another chunk size works better, use the <a href=""http://docs.python-requests.org/en/latest/api/#requests.Response.iter_content""><code>Response.iter_content()</code> method</a> with a custom chunk size:</p>

<pre><code>r = requests.get(settings.STATICMAP_URL.format(**data), stream=True)
if r.status_code == 200:
    with open(path, 'wb') as f:
        for chunk in r.iter_content(1024):
            f.write(chunk)
</code></pre>

<p>Note that you need to open the destination file in binary mode to ensure python doesn't try and translate newlines for you. We also set <code>stream=True</code> so that <code>requests</code> doesn't download the whole image into memory first.</p>
","13137873"
"How to get the home directory in Python?","196233","","<p>I need to get the location of the home directory of the current logged-on user. Currently, I've been using the following on Linux:</p>

<pre><code>os.getenv(""HOME"")
</code></pre>

<p>However, this does not work on Windows. What is the correct cross-platform way to do this?</p>
","<p>You want to use <a href=""http://docs.python.org/library/os.path.html?highlight=os.path#os.path.expanduser"" rel=""noreferrer"">os.path.expanduser</a>. This will ensure it works on all platforms</p>

<pre><code>from os.path import expanduser
home = expanduser(""~"")
</code></pre>

<p>If you're on Python 3.5+ you can use <a href=""https://docs.python.org/3/library/pathlib.html#pathlib.Path.home"" rel=""noreferrer"">pathlib.Path.home()</a>:</p>

<pre><code>from pathlib import Path
home = str(Path.home())
</code></pre>
","4028943"
"How do I write a ""tab"" in Python?","196051","","<p>Let's say I have a file. How do I write ""hello"" TAB ""alex""?</p>
","<p>This is the code:</p>

<pre><code>f = open(filename, 'w')
f.write(""hello\talex"")
</code></pre>

<p>The \t inside the string is the escape sequence for the horizontal tabulation.</p>
","4488596"
"Pythonic way to combine FOR loop and IF statement","196013","","<p>I know how to use both for loops and if statements on separate lines, such as:</p>

<pre><code>&gt;&gt;&gt; a = [2,3,4,5,6,7,8,9,0]
... xyz = [0,12,4,6,242,7,9]
... for x in xyz:
...     if x in a:
...         print(x)
0,4,6,7,9
</code></pre>

<p>And I know I can use a list comprehension to combine these when the statements are simple, such as:</p>

<pre><code>print([x for x in xyz if x in a])
</code></pre>

<p>But what I can't find is a good example anywhere (to copy and learn from) demonstrating a complex set of commands (not just ""print x"") that occur following a combination of a for loop and some if statements. Something that I would expect looks like:</p>

<pre><code>for x in xyz if x not in a:
    print(x...)
</code></pre>

<p>Is this just not the way python is supposed to work?</p>
","<p>You can use <a href=""http://www.python.org/dev/peps/pep-0289/"" rel=""noreferrer"">generator expressions</a> like this:</p>

<pre><code>gen = (x for x in xyz if x not in a)

for x in gen:
    print x
</code></pre>
","6981771"
"How can I make one python file run another?","195864","","<p>How can I make one python file to run another?  </p>

<p>For example I have two <em>.py files</em>.  I want one file to be run, and then have it run the other <em>.py file</em>.</p>
","<p>There are more than a few ways. I'll list them in order of inverted preference (<em>i.e.</em>, best first, worst last):</p>

<ol>
<li><strong>Treat it like a module:</strong> <code>import file</code>. This is good because it's secure, fast, and maintainable. Code gets reused as it's supposed to be done. Most Python libraries run using multiple methods stretched over lots of files. Highly recommended. Note that if your file is called <code>file.py</code>, your <code>import</code> should <em>not</em> include the <code>.py</code> extension at the end.</li>
<li><strong>The infamous (and unsafe) <a href=""http://docs.python.org/library/functions.html#execfile"" rel=""noreferrer"">exec</a> command:</strong> <code>execfile('file.py')</code>. Insecure, hacky, usually the wrong answer. Avoid where possible.</li>
<li><strong>Spawn a shell process:</strong> <code>os.system('python file.py')</code>. Use when desperate.</li>
</ol>
","7975511"
"What are ""named tuples"" in Python?","195806","","<p>Reading the <a href=""http://docs.python.org/py3k/whatsnew/3.1.html#new-improved-and-deprecated-modules"" rel=""noreferrer"">changes in Python 3.1</a>, I found something... unexpected:</p>

<blockquote>
  <p>The sys.version_info tuple is now a <strong>named tuple</strong>:</p>
</blockquote>

<p>I never heard about named tuples before, and I thought elements could either be indexed by numbers (like in tuples and lists) or by keys (like in dicts). I never expected they could be indexed both ways.</p>

<p>Thus, my questions are:</p>

<ul>
<li>What are named tuples?</li>
<li>How to use them?</li>
<li>Why/when should I use named tuples instead of normal tuples?</li>
<li>Why/when should I use normal tuples instead of named tuples?</li>
<li>Is there any kind of ""named list"" (a mutable version of the named tuple)?</li>
</ul>
","<p>Named tuples are basically easy-to-create, lightweight object types.  Named tuple instances can be referenced using object-like variable dereferencing or the standard tuple syntax.  They can be used similarly to <code>struct</code> or other common record types, except that they are immutable.  They were added in Python 2.6 and Python 3.0, although there is a <a href=""http://code.activestate.com/recipes/500261/"" rel=""noreferrer"">recipe for implementation in Python 2.4</a>.</p>

<p>For example, it is common to represent a point as a tuple <code>(x, y)</code>.  This leads to code like the following:</p>

<pre><code>pt1 = (1.0, 5.0)
pt2 = (2.5, 1.5)

from math import sqrt
line_length = sqrt((pt1[0]-pt2[0])**2 + (pt1[1]-pt2[1])**2)
</code></pre>

<p>Using a named tuple it becomes more readable:</p>

<pre><code>from collections import namedtuple
Point = namedtuple('Point', 'x y')
pt1 = Point(1.0, 5.0)
pt2 = Point(2.5, 1.5)

from math import sqrt
line_length = sqrt((pt1.x-pt2.x)**2 + (pt1.y-pt2.y)**2)
</code></pre>

<p>However, named tuples are still backwards compatible with normal tuples, so the following will still work:</p>

<pre><code>Point = namedtuple('Point', 'x y')
pt1 = Point(1.0, 5.0)
pt2 = Point(2.5, 1.5)

from math import sqrt
# use index referencing
line_length = sqrt((pt1[0]-pt2[0])**2 + (pt1[1]-pt2[1])**2)
 # use tuple unpacking
x1, y1 = pt1
</code></pre>

<p>Thus, <strong>you should use named tuples instead of tuples anywhere you think object notation will make your code more pythonic and more easily readable</strong>.  I personally have started using them to represent very simple value types, particularly when passing them as parameters to functions.  It makes the functions more readable, without seeing the context of the tuple packing.</p>

<p>Furthermore, <strong>you can also replace ordinary <em>immutable</em> classes that have no functions</strong>, only fields with them.  You can even use your named tuple types as base classes:</p>

<pre><code>class Point(namedtuple('Point', 'x y')):
    [...]
</code></pre>

<p>However, as with tuples, attributes in named tuples are immutable:</p>

<pre><code>&gt;&gt;&gt; Point = namedtuple('Point', 'x y')
&gt;&gt;&gt; pt1 = Point(1.0, 5.0)
&gt;&gt;&gt; pt1.x = 2.0
AttributeError: can't set attribute
</code></pre>

<p>If you want to be able change the values, you need another type.  There is a handy recipe for <a href=""http://code.activestate.com/recipes/576555/"" rel=""noreferrer"">mutable recordtypes</a> which allow you to set new values to attributes.</p>

<pre><code>&gt;&gt;&gt; from rcdtype import *
&gt;&gt;&gt; Point = recordtype('Point', 'x y')
&gt;&gt;&gt; pt1 = Point(1.0, 5.0)
&gt;&gt;&gt; pt1 = Point(1.0, 5.0)
&gt;&gt;&gt; pt1.x = 2.0
&gt;&gt;&gt; print(pt1[0])
    2.0
</code></pre>

<p>I am not aware of any form of ""named list"" that lets you add new fields, however.  You may just want to use a dictionary in this situation. Named tuples can be converted to dictionaries using <code>pt1._asdict()</code> which returns <code>{'x': 1.0, 'y': 5.0}</code> and can be operated upon with all the usual dictionary functions.  </p>

<p>As already noted, you should <a href=""http://docs.python.org/py3k/library/collections.html?highlight=namedtuple#collections.namedtuple"" rel=""noreferrer"">check the documentation</a> for more information from which these examples were constructed.</p>
","2970722"
"Python NameError: global name 'NAME' is not not defined! (But it is defined)","195713","","<p>This is my Python code:</p>

<pre><code>import es, popuplib, cmdlib

info = es.AddonInfo() 
info['name']        = ""bilbodog Vaaben Menu"" 
info['version']     = ""1.1"" 
info['author']      = ""bilbodog"" 
info['url']         = """" 
info['description'] = ""En vaaben menu der kan give vaaben til spillere"" 
def load():
    es.regclientcmd('bm_version', 'bm/bm_version')
    cmdlib.registerSayCommand('!wpa', sendBmMenu, 'Send BM Menu')
    es.msg('#multi', '#green[bilbodog Vaaben Menu] #defaultblev loaded!')

global bilbodog, bilbodogSelf, bilbodogOther, bilbodogSelf2, bilbodogSelf3, bilbodogSelf4, bilbodogSelf5, bilbodogSelf6, bilbodogSelf7, bilbodogSelf8, bilbodogSelf9, bilbodogOther2, bilbodogOther3, bilbodogOther4, bilbodogOther5, bilbodogOther6, bilbodogOther7, bilbodogOther8, bilbodogOther9, bilbodogadmins

bilbodogadmins = ('STEAM_0:1:25150824', 'STEAM_ID_LAN', 'STEAM_ID_PENDING')
bilbodog = popuplib.create('bilbodog')
bilbodog.addline('---------------bilbodog Vaaben Menu---------------')
bilbodog.addline('Weapon Menu - Hvem vil De give et vaaben?')
bilbodog.addline('-&gt;1. Mig selv')
bilbodog.addline('-&gt;2. Andre spillere')
bilbodog.addline('------------------------------')
bilbodog.addline('0 Luk')
bilbodog.menuselect = bilbodogscript
bilbodogSelf = popuplib.create('bilbodogSelf')
bilbodogSelf.addline('---------------bilbodog Vaaben Menu---------------')
bilbodogSelf.addline('Weapon Menu - Mig selv')
bilbodogSelf.addline('-&gt;1. Haandpistoler')
bilbodogSelf.addline('-&gt;2. Stormgevaerer')
bilbodogSelf.addline('-&gt;3. Haglgevaerer')
bilbodogSelf.addline('-&gt;4. Maskinepistoler')
bilbodogSelf.addline('-&gt;5. Sniper Vaaben')
bilbodogSelf.addline('-&gt;6. Maskingevaer')
bilbodogSelf.addline('-&gt;7. Udstyr')
bilbodogSelf.addline('-&gt;8. Vaaben Saet')
bilbodogSelf.addline('------------------------------')
bilbodogSelf.addline('0 Luk')
bilbodogSelf.menuselect = bilbodogSelfscript
bilbodogSelf2 = popuplib.create('bilbodogSelf2')
bilbodogSelf2.addline('---------------bilbodog Vaaben Menu---------------')
bilbodogSelf2.addline('Weapon Menu - Mig selv - Haandpistoler')
bilbodogSelf2.addline('-&gt;1.G18')
bilbodogSelf2.addline('-&gt;2.USP45')
bilbodogSelf2.addline('-&gt;3.P228')
bilbodogSelf2.addline('-&gt;4.Desert Eagle')
bilbodogSelf2.addline('-&gt;5.Five-Seven')
bilbodogSelf2.addline('-&gt;6.Dual Elite')
bilbodogSelf2.addline('------------------------------')
bilbodogSelf2.addline('-&gt;8.Tilbage')
bilbodogSelf2.addline('0.Luk')
bilbodogSelf2.menuselect = bilbodogSelf2script
# ...SNIP...
bilbodogSelf9 = popuplib.create('bilbodogSelf9')
bilbodogSelf9.addline('---------------bilbodog Vaaben Menu---------------')
bilbodogSelf9.addline('Weapon Menu - Mig selv - Udstyr')
bilbodogSelf9.addline('-&gt;1.M4A1, Deagle, Nades, Armor')
bilbodogSelf9.addline('-&gt;2.M4A1, Elite, Nades, Armor')
bilbodogSelf9.addline('-&gt;3.AK47, Deagle, Nades, Armor')
bilbodogSelf9.addline('-&gt;4.AK47, Elite, Nades, Armor')
bilbodogSelf9.addline('-&gt;5.AWP, Deagle, Nades, Armor')
bilbodogSelf9.addline('-&gt;6.AWP, Elite, Nades, Armor')
bilbodogSelf9.addline('------------------------------')
bilbodogSelf9.addline('-&gt;8.Tilbage')
bilbodogSelf9.addline('0.Luk')
bilbodogSelf9.menuselect = bilbodogSelf9script

bilbodogOther = popuplib.create('bilbodogOther')
bilbodogOther.addline('---------------bilbodog Vaaben Menu---------------')
bilbodogOther.addline('Weapon Menu - Andre spillere')
bilbodogOther.addline('-&gt;1. Haandpistoler')
bilbodogOther.addline('-&gt;2. Stormgevaerer')
bilbodogOther.addline('-&gt;3. Haglgevaerer')
bilbodogOther.addline('-&gt;4. Maskinepistoler')
bilbodogOther.addline('-&gt;5. Sniper Vaaben')
bilbodogOther.addline('-&gt;6. Maskingevaer')
bilbodogOther.addline('-&gt;7. Udstyr')
bilbodogOther.addline('-&gt;8. Vaaben Saet')
bilbodogOther.addline('------------------------------')
bilbodogOther.addline('0 Luk')
bilbodogOther.menuselect = bilbodogOtherscript
bilbodogOther2 = popuplib.create('bilbodogOther2')
bilbodogOther2.addline('---------------bilbodog Vaaben Menu---------------')
bilbodogOther2.addline('Weapon Menu - Andre spillere - Haandpistoler')
bilbodogOther2.addline('-&gt;1.G18')
bilbodogOther2.addline('-&gt;2.USP45')
bilbodogOther2.addline('-&gt;3.P228')
bilbodogOther2.addline('-&gt;4.Desert Eagle')
bilbodogOther2.addline('-&gt;5.Five-Seven')
bilbodogOther2.addline('-&gt;6.Dual Elite')
bilbodogOther2.addline('------------------------------')
bilbodogOther2.addline('-&gt;8.Tilbage')
bilbodogOther2.addline('0.Luk')
bilbodogOther2.menuselect = bilbodogOther2script
# ...SNIP...
bilbodogOther9 = popuplib.create('bilbodogOther9')
bilbodogOther9.addline('---------------bilbodog Vaaben Menu---------------')
bilbodogOther9.addline('Weapon Menu - Andre spillere - Udstyr')
bilbodogOther9.addline('-&gt;1.M4A1, Deagle, Nades, Armor')
bilbodogOther9.addline('-&gt;2.M4A1, Elite, Nades, Armor')
bilbodogOther9.addline('-&gt;3.AK47, Deagle, Nades, Armor')
bilbodogOther9.addline('-&gt;4.AK47, Elite, Nades, Armor')
bilbodogOther9.addline('-&gt;5.AWP, Deagle, Nades, Armor')
bilbodogOther9.addline('-&gt;6.AWP, Elite, Nades, Armor')
bilbodogOther9.addline('------------------------------')
bilbodogOther9.addline('-&gt;8.Tilbage')
bilbodogOther9.addline('0.Luk')
bilbodogOther9.menuselect = bilbodogOther9script

def sendBmMenu(userid, args):
    steam = es.getplayersteamid(userid)
    if steam in bilbodogadmins:
        bilbodog.send(userid)
    else:
        es.tell(event_var['userid'], '#multi', '#greenDe har ikke adgang til denne kommando!') 

def bilbodogscript(userid, choice, popupid):
   if choice == 1:
           bilbodogSelf.send(userid)
   elif choice == 2:
           bilbodogOther.send(userid)

def bilbodogSelfscript(userid, choice, popupid):
    if choice == 1:
        bilbodogSelf2.send(userid)
    elif choice == 2:
        bilbodogSelf3.send(userid)
    elif choice == 3:
        bilbodogSelf4.send(userid)
    elif choice == 4:
        bilbodogSelf5.send(userid)
    elif choice == 5:
        bilbodogSelf6.send(userid)
    elif choice == 6:
        bilbodogSelf7.send(userid)
    elif choice == 7:
        bilbodogSelf8.send(userid)
    elif choice == 8:
        bilbodogSelf9.send(userid)

def bilbodogOtherscript(userid, choice, popupid):
    if choice == 1:
        bilbodogOther2.send(userid)
    elif choice == 2:
        bilbodogOther3.send(userid)
    elif choice == 3:
        bilbodogOther4.send(userid)
    elif choice == 4:
        bilbodogOther5.send(userid)
    elif choice == 5:
        bilbodogOther6.send(userid)
    elif choice == 6:
        bilbodogOther7.send(userid)
    elif choice == 7:
        bilbodogOther8.send(userid)
    elif choice == 8:
        bilbodogOther9.send(userid)

def bm_version():
    es.msg('#multi', '#green[bilbodog Vaaben Menu] #defaultVersion 1.0')
    es.msg('#multi', '#green[bilbodog Vaaben Menu] #defaultLavet af bilbodog')

def unload():
    cmdlib.unregisterSayCommand('!wpa')
</code></pre>

<p>I get an error:</p>

<pre><code>NameError: global name 'bilbodogOther' is not not defined
</code></pre>

<p>And the error is going on right here:</p>

<pre><code>def bilbodogscript(userid, choice, popupid):
   if choice == 1:
           bilbodogSelf.send(userid)
   elif choice == 2:
           bilbodogOther.send(userid)
</code></pre>

<p>But I don't understand it, what does it mean?</p>
","<p>When you do:</p>

<pre><code>global  bilbodog
print bilbodog
</code></pre>

<p>You have this error:</p>

<pre><code>Traceback (most recent call last):
  File ""D:\Documents and Settings\My Documents\StackOverflow\test.py"", line 2, in &lt;module&gt;
    print bilbodog
NameError: global name 'bilbodog' is not defined
</code></pre>

<p>Instead when you define your variables correctly:</p>

<pre><code>global  bilbodog
bilbodog = 15 #Here you give a value to bilbodog (even None)
print bilbodog
</code></pre>

<p>It does work !!!</p>

<p>But if you want to do it in a pythonic way:</p>

<pre><code>def definition():
    global bilbodog
    bilbodog = 15 #Here you give a value to bilbodog (even None)

def test():
    print bilbodog

if __name__ == '__main__':
    definition()
    test()
</code></pre>

<p>So, when you do <code>bilbodog.menuselect = bilbodogscript</code> I think you try to execute <code>bilbodogscript()</code> whereas <code>bilbodog</code> is not yet defined.
The problem is that with this line you should first have this error:</p>

<pre><code>Traceback (most recent call last):
  File ""D:\Documents and Settings\My Documents\StackOverflow\test.py"", line 3, in &lt;module&gt;
    bilbodog.menuselect = bilbodogscript
NameError: name 'bilbodogscript' is not defined
</code></pre>
","11297548"
"how to convert a string date into datetime format in python?","195364","","<p>How do I convert a a string of datetime into datetime format in python so that it can be compared with another date?</p>

<pre><code>string_date = ""2013-09-28 20:30:55.78200""
abc = datetime.datetime.now()

if abc  &gt; string_date :
    print True
</code></pre>
","<p>The particular format for <code>strptime</code>:</p>

<pre><code>datetime.datetime.strptime(string_date, ""%Y-%m-%d %H:%M:%S.%f"")
#&gt;&gt;&gt; datetime.datetime(2013, 9, 28, 20, 30, 55, 782000)
</code></pre>
","19068355"
"How do I get the parent directory in Python?","195137","","<p>Could someone tell me how to get the parent directory of a path in Python in a cross platform way. E.g.</p>

<pre><code>C:\Program Files ---&gt; C:\
</code></pre>

<p>and</p>

<pre><code>C:\ ---&gt; C:\
</code></pre>

<p>If the directory doesn't have a parent directory, it returns the directory itself. The question might seem simple but I couldn't dig it up through Google.</p>
","<p>Try this:</p>

<pre><code>import os.path
print os.path.abspath(os.path.join(yourpath, os.pardir))
</code></pre>

<p>where <code>yourpath</code> is the path you want the parent for.</p>
","2860193"
"How to get the size of a string in Python?","195124","","<p>For example, I get a string:</p>

<pre><code>str = ""please answer my question""
</code></pre>

<p>I want to write it to a file.</p>

<p>But I need to know the size of the string before writing the string to the file. What function can I use to calculate the size of the string?</p>
","<p>If you are talking about the length of the string, you can use <a href=""https://docs.python.org/2/library/functions.html#len""><code>len()</code></a>:</p>

<pre><code>&gt;&gt;&gt; s = 'please answer my question'
&gt;&gt;&gt; len(s)  # number of characters in s
25
</code></pre>

<p>If you need the size of the string in bytes, you need <a href=""http://docs.python.org/library/sys.html#sys.getsizeof""><code>sys.getsizeof()</code></a>:</p>

<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; sys.getsizeof(s)
58
</code></pre>

<p>Also, don't call your string <code>str</code>. It shadows the built-in <a href=""https://docs.python.org/2/library/functions.html#str""><code>str()</code></a> function.</p>
","4967619"
"List of zeros in python","195024","","<p>How can I create a <code>list</code> which contains only zeros? I want to be able to create a zeros <code>list</code> for each <code>int</code> in <code>range(10)</code></p>

<p>For example, if the <code>int</code> in the range was <code>4</code> I will get:</p>

<pre><code>[0,0,0,0]
</code></pre>

<p>and for <code>7</code>:</p>

<pre><code>[0,0,0,0,0,0,0]
</code></pre>
","<pre><code>#add code here to figure out the number of 0's you need, naming the variable n.
listofzeros = [0] * n
</code></pre>

<p>if you prefer to put it in the function, just drop in that code and add <code>return listofzeros</code></p>

<p>Which would look like this:</p>

<pre><code>def zerolistmaker(n):
    listofzeros = [0] * n
    return listofzeros
</code></pre>

<p>sample output:</p>

<pre><code>&gt;&gt;&gt; zerolistmaker(4)
[0, 0, 0, 0]
&gt;&gt;&gt; zerolistmaker(5)
[0, 0, 0, 0, 0]
&gt;&gt;&gt; zerolistmaker(15)
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
&gt;&gt;&gt; 
</code></pre>
","8528626"
"What is the Python 3 equivalent of ""python -m SimpleHTTPServer""","194944","","<p>What is the Python 3 equivalent of <code>python -m SimpleHTTPServer</code>?</p>
","<p>From <a href=""https://docs.python.org/2/library/simplehttpserver.html"">the docs</a>:</p>

<blockquote>
  <p>The <code>SimpleHTTPServer</code> module has been merged into <code>http.server</code> in Python 3.0. The 2to3 tool will automatically adapt imports when converting your sources to 3.0.</p>
</blockquote>

<p>So, your command is <code>python3 -m http.server</code>.</p>
","7943768"
"Comparing two dictionaries in Python","194724","","<p>I have two dictionaries, but for simplification, I will take these two:</p>

<pre><code>&gt;&gt;&gt; x = dict(a=1, b=2)
&gt;&gt;&gt; y = dict(a=2, b=2)
</code></pre>

<p>Now, I want to compare whether each <code>key, value</code> pair in <code>x</code> has the same corresponding value in <code>y</code>. So I wrote this:</p>

<pre><code>&gt;&gt;&gt; for x_values, y_values in zip(x.iteritems(), y.iteritems()):
        if x_values == y_values:
            print 'Ok', x_values, y_values
        else:
            print 'Not', x_values, y_values
</code></pre>

<p>And it works since a <code>tuple</code> is returned and then compared for equality.</p>

<p>My questions:</p>

<p>Is this correct? Is there a <em>better</em> way to do this? Better not in speed, I am talking about code elegance.</p>

<p>UPDATE: I forgot to mention that I have to check how many <code>key, value</code> pairs are equal. </p>
","<p>If you want to know how many values match in both the dictionaries, you should have said that :) </p>

<p>Maybe something like this:</p>

<pre><code>shared_items = set(x.items()) &amp; set(y.items())
print len(shared_items)
</code></pre>
","4527978"
"Best way to remove an item from a Python dictionary?","194574","","<p>What is the best way to remove an item from a dictionary when the item's key is unknown?  Here's a simple approach:</p>

<pre><code>for key, item in some_dict.items():
    if item is item_to_remove:
        del some_dict[key]
</code></pre>

<p>Are there better ways?  Is there anything wrong with mutating (deleting items) from the dictionary while iterating it?</p>
","<p>Be aware that you're currently testing for object identity (<code>is</code> only returns <code>True</code> if both operands are represented by the same object in memory - this is not always the case with two object that compare equal with <code>==</code>). If you are doing this on purpose, then you could rewrite your code as</p>

<pre><code>some_dict = {key: value for key, value in some_dict.items() 
             if value is not value_to_remove}
</code></pre>

<p>But this may not do what you want:</p>

<pre><code>&gt;&gt;&gt; some_dict = {1: ""Hello"", 2: ""Goodbye"", 3: ""You say yes"", 4: ""I say no""}
&gt;&gt;&gt; value_to_remove = ""You say yes""
&gt;&gt;&gt; some_dict = {key: value for key, value in some_dict.items() if value is not value_to_remove}
&gt;&gt;&gt; some_dict
{1: 'Hello', 2: 'Goodbye', 3: 'You say yes', 4: 'I say no'}
&gt;&gt;&gt; some_dict = {key: value for key, value in some_dict.items() if value != value_to_remove}
&gt;&gt;&gt; some_dict
{1: 'Hello', 2: 'Goodbye', 4: 'I say no'}
</code></pre>

<p>So you probably want <code>!=</code> instead of <code>is not</code>.</p>
","5447509"
"Basic http file downloading and saving to disk in python?","194498","","<p>I'm new to Python and I've been going through the Q&amp;A on this site, for an answer to my question. However, I'm a beginner and I find it difficult to understand some of the solutions. I need a very basic solution.</p>

<p>Could someone please explain a simple solution to 'Downloading a file through http' and 'Saving it to disk, in Windows', to me?</p>

<p>I'm not sure how to use shutil and os modules, either.</p>

<p>The file I want to download is under 500 MB and is an .gz archive file.If someone can explain how to extract the archive and utilise the files in it also, that would be great!</p>

<p>Here's a partial solution, that I wrote from various answers combined:</p>

<pre><code>import requests
import os
import shutil

global dump

def download_file():
    global dump
    url = ""http://randomsite.com/file.gz""
    file = requests.get(url, stream=True)
    dump = file.raw

def save_file():
    global dump
    location = os.path.abspath(""D:\folder\file.gz"")
    with open(""file.gz"", 'wb') as location:
        shutil.copyfileobj(dump, location)
    del dump
</code></pre>

<p>Could someone point out errors (beginner level) and explain any easier methods to do this?</p>

<p>Thanks!</p>
","<p>A clean way to download a file is:</p>

<pre><code>import urllib

testfile = urllib.URLopener()
testfile.retrieve(""http://randomsite.com/file.gz"", ""file.gz"")
</code></pre>

<p>This downloads a file from a website and names it <code>file.gz</code>. This is one of my favorite solutions, from <a href=""https://stackoverflow.com/questions/3042757/downloading-a-picture-via-urllib-and-python"">Downloading a picture via urllib and python</a>.</p>

<p>This example uses the <code>urllib</code> library, and it  will directly retrieve the file form a source.</p>
","19602990"
"Python try-else","194259","","<p>What is the intended use of the optional <code>else</code> clause of the <code>try</code> statement?</p>
","<p>The statements in the <code>else</code> block are executed if execution falls off the bottom of the <code>try</code> - if there was no exception. Honestly, I've never found a need.</p>

<p>However, <a href=""http://docs.python.org/tutorial/errors.html#handling-exceptions"" rel=""noreferrer"">Handling Exceptions</a> notes:</p>

<blockquote>
  <p>The use of the else clause is better
  than adding additional code to the try
  clause because it avoids accidentally
  catching an exception that wasn’t
  raised by the code being protected by
  the try ... except statement.</p>
</blockquote>

<p>So, if you have a method that could, for example, throw an <code>IOError</code>, and you want to catch exceptions it raises, but there's something else you want to do if the first operation succeeds, and you <em>don't</em> want to catch an IOError from that operation, you might write something like this:</p>

<pre><code>    try:
        operation_that_can_throw_ioerror()
    except IOError:
        handle_the_exception_somehow()
    else:
         # we don't want to catch the IOError if it's raised
        another_operation_that_can_throw_ioerror()
    finally:
        something_we_always_need_to_do()
</code></pre>

<p>If you just put <code>another_operation_that_can_throw_ioerror()</code> after <code>operation_that_can_throw_ioerror</code>, the <code>except</code> would catch the second call's errors. And if you put it after the whole <code>try</code> block, it'll always be run, and not until after the <code>finally</code>. The <code>else</code> lets you make sure</p>

<ol>
<li>the second operation's only run if there's no exception,</li>
<li>it's run before the <code>finally</code> block, and</li>
<li>any <code>IOError</code>s it raises aren't caught here</li>
</ol>
","855764"
"How to get char from string by index?","194196","","<p>Lets say I have a string that consists of x unknown chars. How could I get char nr. 13 or char nr. x-14?</p>
","<p>First make sure the required number is <strong>a valid index</strong> for the string from beginning or end , then you can simply use array subscript notation.
use <code>len(s)</code> to get string length  </p>

<pre><code>&gt;&gt;&gt; s = ""python""
&gt;&gt;&gt; s[3]
'h'
&gt;&gt;&gt; s[6]
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
IndexError: string index out of range
&gt;&gt;&gt; s[0]
'p'
&gt;&gt;&gt; s[-1]
'n'
&gt;&gt;&gt; s[-6]
'p'
&gt;&gt;&gt; s[-7]
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
IndexError: string index out of range
&gt;&gt;&gt; 
</code></pre>
","8848336"
"How to ""test"" NoneType in python?","194016","","<p>I have a method that sometimes returns a NoneType value. So how can I question a variable that is a NoneType? I need to use <strong><em>if</em></strong> method, for example</p>

<pre><code>if not new:
    new = '#'
</code></pre>

<p>I know that is the wrong way and I hope you understand what I meant.</p>
","<blockquote>
  <p>So how can I question a variable that is a NoneType?</p>
</blockquote>

<p>Use <code>is</code> operator, like this</p>

<pre><code>if variable is None:
</code></pre>

<p><strong>Why this works?</strong></p>

<p>Since <a href=""https://docs.python.org/2/library/constants.html#None""><code>None</code></a> is the sole singleton object of <a href=""https://docs.python.org/2/library/types.html#types.NoneType""><code>NoneType</code></a> in Python, we can use <code>is</code> operator to check if a variable has <code>None</code> in it or not.</p>

<p>Quoting from <a href=""https://docs.python.org/2/reference/expressions.html#is""><code>is</code> docs</a>,</p>

<blockquote>
  <p>The operators <code>is</code> and <code>is not</code> test for object identity: <code>x is y</code> is true if and only if <code>x</code> and <code>y</code> are the same object. <code>x is not y</code> yields the inverse truth value.</p>
</blockquote>

<p>Since there can be only one instance of <code>None</code>, <code>is</code> would be the preferred way to check <code>None</code>.</p>

<hr>

<p><strong>Hear it from the horse's mouth</strong></p>

<p>Quoting <a href=""https://www.python.org/dev/peps/pep-0008/#programming-recommendations"">Python's Coding Style Guidelines - PEP-008</a> (jointly defined by Guido himself),</p>

<blockquote>
  <p>Comparisons to singletons like <strong><code>None</code> should always be done with <code>is</code> or <code>is not</code></strong>, <strong>never the equality operators</strong>.</p>
</blockquote>
","23086405"
"How do I import modules in pycharm?","193532","","<p>In <em>PyCharm</em>, I've added the Python environment <code>/usr/bin/python</code>. However,</p>

<pre><code>from gnuradio import gr
</code></pre>

<p>fails as an <em>undefined reference</em>. However, it works fine in the Python interpreter from the command line. </p>

<p>GNURadio works fine with python outside of Pycharm. Everything is installed and configured how I want it.</p>

<p>Gnuradio is located at <code>/usr/local/lib/python2.7/site-packages/gnuradio</code></p>

<p>Also:</p>

<blockquote>
  <p>PYTHONPATH=/usr/local/lib/python2.7/site-packages:/usr/local/lib/python2.7/site-packages/gnuradio</p>
</blockquote>
","<h2>Adding a Path</h2>

<p>Go into Settings -> Project Settings -> Project Interpreter.</p>

<p>Then press configure interpreter, and navigate to the ""Paths"" tab.</p>

<p><img src=""https://i.imgur.com/Q5pcWDX.jpg"" alt=""pycharm path tab""></p>

<p>Press the + button in the Paths area.  You can put the path to the module you'd like it to recognize. </p>

<h3>But I don't know the path..</h3>

<p>Open the python interpreter where you can import the module.</p>

<pre><code>&gt;&gt; import gnuradio
&gt;&gt; gnuradio.__file__
""path/to/gnuradio""
</code></pre>

<p>Most commonly you'll have a folder structure like this:</p>

<pre><code>foobarbaz/
  gnuradio/
    __init__.py
    other_file.py
</code></pre>

<p>You want to add foobarbaz to the path here.</p>
","19885882"
"Printing without newline (print 'a',) prints a space, how to remove?","193238","","<p>I have this code:</p>

<pre><code>&gt;&gt;&gt; for i in xrange(20):
...     print 'a',
... 
a a a a a a a a a a a a a a a a a a a a
</code></pre>

<p>I want to output <code>'a'</code>, without <code>' '</code> like this:</p>

<pre><code>aaaaaaaaaaaaaaaaaaaa
</code></pre>

<p>Is it possible?</p>
","<p>There are a number of ways of achieving your result. If you're just wanting a solution for your case, use <a href=""http://docs.python.org/library/stdtypes.html#typesseq"" rel=""nofollow noreferrer"">string multiplication</a> as <a href=""https://stackoverflow.com/questions/4499073/print-python-whithout-n/4499087#4499087"">@Ant</a> mentions. This is only going to work if each of your <code>print</code> statements prints the same string. Note that it works for multiplication of any length string (e.g. <code>'foo' * 20</code> works).</p>

<pre><code>&gt;&gt;&gt; print 'a' * 20
aaaaaaaaaaaaaaaaaaaa
</code></pre>

<p>If you want to do this in general, build up a string and then print it once. This will consume a bit of memory for the string, but only make a single call to <code>print</code>. Note that string concatenation using <code>+=</code> is now linear in the size of the string you're concatenating so this will be fast.</p>

<pre><code>&gt;&gt;&gt; for i in xrange(20):
...     s += 'a'
... 
&gt;&gt;&gt; print s
aaaaaaaaaaaaaaaaaaaa
</code></pre>

<p>Or you can do it more directly using <a href=""http://docs.python.org/library/sys.html#sys.stdout"" rel=""nofollow noreferrer"">sys.stdout</a>.<a href=""http://docs.python.org/library/stdtypes.html#file.write"" rel=""nofollow noreferrer"">write()</a>, which <code>print</code> is a wrapper around. This will write only the raw string you give it, without any formatting. Note that no newline is printed even at the end of the 20 <code>a</code>s.</p>

<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; for i in xrange(20):
...     sys.stdout.write('a')
... 
aaaaaaaaaaaaaaaaaaaa&gt;&gt;&gt; 
</code></pre>

<p>Python 3 changes the <code>print</code> statement into a <a href=""http://docs.python.org/library/functions.html#print"" rel=""nofollow noreferrer"">print() function</a>, which allows you to set an <code>end</code> parameter. You can use it in >=2.6 by importing from <code>__future__</code>. I'd avoid this in any serious 2.x code though, as it will be a little confusing for those who have never used 3.x. However, it should give you a taste of some of the goodness 3.x brings.</p>

<pre><code>&gt;&gt;&gt; from __future__ import print_function
&gt;&gt;&gt; for i in xrange(20):
...     print('a', end='')
... 
aaaaaaaaaaaaaaaaaaaa&gt;&gt;&gt; 
</code></pre>
","4499172"
"Difference between exit() and sys.exit() in Python","193212","","<p>In Python, there are two similarly-named functions, <code>exit()</code> and <code>sys.exit()</code>. What's the difference and when should I use one over the other?</p>
","<p><a href=""http://docs.python.org/library/constants.html#exit"" rel=""noreferrer""><code>exit</code></a> is a helper for the interactive shell - <a href=""http://docs.python.org/library/sys.html#sys.exit"" rel=""noreferrer""><code>sys.exit</code></a> is intended for use in programs.</p>

<blockquote>
  <p>The site module (which is imported automatically during startup, except if the -S command-line option is given) adds several constants to the built-in namespace <em>(e.g. <code>exit</code>)</em>. <strong>They are useful for the interactive interpreter shell and should not be used in programs</strong>.</p>
</blockquote>

<hr>

<p>Technically, they do mostly the same: raising <a href=""https://docs.python.org/3/library/exceptions.html#SystemExit"" rel=""noreferrer""><code>SystemExit</code></a>. <code>sys.exit</code> does so in <a href=""https://github.com/python-git/python/blob/715a6e5035bb21ac49382772076ec4c630d6e960/Python/sysmodule.c#L206"" rel=""noreferrer""><em>sysmodule.c</em></a>:</p>

<pre class=""lang-c prettyprint-override""><code>static PyObject *
sys_exit(PyObject *self, PyObject *args)
{
    PyObject *exit_code = 0;
    if (!PyArg_UnpackTuple(args, ""exit"", 0, 1, &amp;exit_code))
        return NULL;
    /* Raise SystemExit so callers may catch it or clean up. */
    PyErr_SetObject(PyExc_SystemExit, exit_code);
   return NULL;
}
</code></pre>

<p>While <code>exit</code> is defined in <a href=""https://github.com/python-git/python/blob/715a6e5035bb21ac49382772076ec4c630d6e960/Lib/site.py#L322"" rel=""noreferrer""><em>site.py</em></a>:</p>

<pre><code>class Quitter(object):
    def __init__(self, name):
        self.name = name
    def __repr__(self):
        return 'Use %s() or %s to exit' % (self.name, eof)
    def __call__(self, code=None):
        # Shells like IDLE catch the SystemExit, but listen when their
        # stdin wrapper is closed.
        try:
            sys.stdin.close()
        except:
            pass
        raise SystemExit(code)
__builtin__.quit = Quitter('quit')
__builtin__.exit = Quitter('exit')
</code></pre>

<hr>

<p>Note that there is a third exit option, namely <a href=""http://docs.python.org/library/os.html#os._exit"" rel=""noreferrer"">os._exit</a>, which exits without calling cleanup handlers, flushing stdio buffers, etc. (and which  should normally only be used in the child process after a <code>fork()</code>).</p>
","6501134"
"Installing MySQL-python","193126","","<p>I got the below failure while trying to get MySQL-python installed on my Ubuntu/Linux Box.From the below it seem like the issue is <code>sh: mysql_config: not found</code>
Could someone advice me on what to do?</p>

<pre><code>rmicro@ubuntu:~$ pip install MySQL-python
Downloading/unpacking MySQL-python
  Downloading MySQL-python-1.2.3.tar.gz (70Kb): 70Kb downloaded
  Running setup.py egg_info for package MySQL-python
    sh: mysql_config: not found
    Traceback (most recent call last):
      File ""&lt;string&gt;"", line 14, in &lt;module&gt;
      File ""/home/rmicro/build/MySQL-python/setup.py"", line 15, in &lt;module&gt;
        metadata, options = get_config()
      File ""setup_posix.py"", line 43, in get_config
        libs = mysql_config(""libs_r"")
      File ""setup_posix.py"", line 24, in mysql_config
        raise EnvironmentError(""%s not found"" % (mysql_config.path,))
    EnvironmentError: mysql_config not found
    Complete output from command python setup.py egg_info:
    sh: mysql_config: not found

Traceback (most recent call last):
  File ""&lt;string&gt;"", line 14, in &lt;module&gt;
  File ""/home/rmicro/build/MySQL-python/setup.py"", line 15, in &lt;module&gt;
    metadata, options = get_config()
  File ""setup_posix.py"", line 43, in get_config
    libs = mysql_config(""libs_r"")
  File ""setup_posix.py"", line 24, in mysql_config
    raise EnvironmentError(""%s not found"" % (mysql_config.path,))
EnvironmentError: mysql_config not found

----------------------------------------
Command python setup.py egg_info failed with error code 1
</code></pre>
","<p>On Ubuntu it is advised to use the distributions repository. So installing python-mysqldb should be straight forward:</p>

<pre><code>sudo apt-get install python-mysqldb
</code></pre>

<p>If you actually want to use pip to install, which is as mentioned before not the suggested path but possible, please have a look at this previously asked question and answer: <a href=""https://stackoverflow.com/questions/5178292/pip-install-mysql-python-show-error"">pip install mysql-python fails with EnvironmentError: mysql_config not found</a></p>

<p>Here is a very comprehensive guide by the developer: <a href=""http://mysql-python.blogspot.no/2012/11/is-mysqldb-hard-to-install.html"" rel=""noreferrer"">http://mysql-python.blogspot.no/2012/11/is-mysqldb-hard-to-install.html</a></p>

<p>To get all the prerequisites for python-mysqld to install it using pip (which you will want to do if you are using virtualenv), run this:</p>

<pre><code>sudo apt-get install build-essential python-dev libmysqlclient-dev
</code></pre>
","7461662"
"Find and replace string values in Python list","193063","","<p>I got this list:</p>

<pre><code>words = ['how', 'much', 'is[br]', 'the', 'fish[br]', 'no', 'really']
</code></pre>

<p>What I would like is to replace <code>[br]</code> with some fantastic value similar to <code>&amp;lt;br /&amp;gt;</code> and thus getting a new list:</p>

<pre><code>words = ['how', 'much', 'is&lt;br /&gt;', 'the', 'fish&lt;br /&gt;', 'no', 'really']
</code></pre>
","<p><code>words = [w.replace('[br]', '&lt;br /&gt;') for w in words]</code></p>

<p>called <a href=""http://docs.python.org/tutorial/datastructures.html#list-comprehensions"" rel=""noreferrer"">List Comprehensions</a></p>
","3136703"
"How can I insert data into a MySQL database?","192829","","<p>I want to insert the integers 188 and 90 in my MySQL database, but the following code doesn't work:</p>

<pre><code>import MySQLdb
conn = MySQLdb.connect(host= ""localhost"",
                  user=""root"",
                  passwd=""newpassword"",
                  db=""engy1"")
x = conn.cursor()
x.execute(""SELECT *  FROM anooog1"")
x.execute ("" INSERT INTO anooog1 VALUES ('%s','%s') "", (188,90))
row = x.fetchall()
</code></pre>

<p>Why doesn't it work?</p>
","<pre><code>#Server Connection to MySQL:

import MySQLdb
conn = MySQLdb.connect(host= ""localhost"",
                  user=""root"",
                  passwd=""newpassword"",
                  db=""engy1"")
x = conn.cursor()

try:
   x.execute(""""""INSERT INTO anooog1 VALUES (%s,%s)"""""",(188,90))
   conn.commit()
except:
   conn.rollback()

conn.close()
</code></pre>

<p><strong>edit</strong> working for me:</p>

<pre><code>&gt;&gt;&gt; import MySQLdb
&gt;&gt;&gt; #connect to db
... db = MySQLdb.connect(""localhost"",""root"",""password"",""testdb"" )
&gt;&gt;&gt; 
&gt;&gt;&gt; #setup cursor
... cursor = db.cursor()
&gt;&gt;&gt; 
&gt;&gt;&gt; #create anooog1 table
... cursor.execute(""DROP TABLE IF EXISTS anooog1"")
__main__:2: Warning: Unknown table 'anooog1'
0L
&gt;&gt;&gt; 
&gt;&gt;&gt; sql = """"""CREATE TABLE anooog1 (
...          COL1 INT,  
...          COL2 INT )""""""
&gt;&gt;&gt; cursor.execute(sql)
0L
&gt;&gt;&gt; 
&gt;&gt;&gt; #insert to table
... try:
...     cursor.execute(""""""INSERT INTO anooog1 VALUES (%s,%s)"""""",(188,90))
...     db.commit()
... except:     
...     db.rollback()
... 
1L
&gt;&gt;&gt; #show table
... cursor.execute(""""""SELECT * FROM anooog1;"""""")
1L
&gt;&gt;&gt; print cursor.fetchall()
((188L, 90L),)
&gt;&gt;&gt; 
&gt;&gt;&gt; db.close()
</code></pre>

<p>table in mysql;</p>

<pre><code>mysql&gt; use testdb;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&gt; SELECT * FROM anooog1;
+------+------+
| COL1 | COL2 |
+------+------+
|  188 |   90 |
+------+------+
1 row in set (0.00 sec)

mysql&gt; 
</code></pre>
","5687856"
"How to send email attachments?","192484","","<p>I am having problems understanding how to email an attachment using Python. I have successfully emailed simple messages with the <code>smtplib</code>. Could someone please explain how to send an attachment in an email. I know there are other posts online but as a Python beginner I find them hard to understand. </p>
","<p>Here's another, adapted from <a href=""http://snippets.dzone.com/posts/show/2038"" rel=""noreferrer"">here</a>:</p>

<pre><code>import smtplib
from os.path import basename
from email.mime.application import MIMEApplication
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.utils import COMMASPACE, formatdate


def send_mail(send_from, send_to, subject, text, files=None,
              server=""127.0.0.1""):
    assert isinstance(send_to, list)

    msg = MIMEMultipart()
    msg['From'] = send_from
    msg['To'] = COMMASPACE.join(send_to)
    msg['Date'] = formatdate(localtime=True)
    msg['Subject'] = subject

    msg.attach(MIMEText(text))

    for f in files or []:
        with open(f, ""rb"") as fil:
            part = MIMEApplication(
                fil.read(),
                Name=basename(f)
            )
        # After the file is closed
        part['Content-Disposition'] = 'attachment; filename=""%s""' % basename(f)
        msg.attach(part)


    smtp = smtplib.SMTP(server)
    smtp.sendmail(send_from, send_to, msg.as_string())
    smtp.close()
</code></pre>

<p>It's much the same as the first example... But it should be easier to drop in.</p>
","3363254"
"`from ... import` vs `import .`","192262","","<p>I'm wondering if there's any difference between the code fragment</p>

<pre><code>from urllib import request
</code></pre>

<p>and the fragment</p>

<pre><code>import urllib.request
</code></pre>

<p>or if they are interchangeable. If they are interchangeable, which is the ""standard""/""preferred"" syntax (if there is one)?</p>

<p>Thanks!</p>
","<p>It depends on how you want to access the import when you refer to it.</p>

<pre><code>from urllib import request
# access request directly.
mine = request()

import urllib.request
# used as urllib.request
mine = urllib.request()
</code></pre>

<p>You can also alias things yourself when you import for simplicity or to avoid masking built ins:</p>

<pre><code>from os import open as open_
# lets you use os.open without destroying the 
# built in open() which returns file handles.
</code></pre>
","9439518"
"Initialise a list to a specific length in Python","192245","","<p>How do I initialise a list with 10 times a default value in Python?</p>

<p>I'm searching for a good-looking way to initialize a empty list with a specific range. 
So make a list that contains 10 zeros or something to be sure that my list has a specific length.</p>
","<p>If the ""default value"" you want is immutable, @eduffy's suggestion, e.g. <code>[0]*10</code>, is good enough.</p>

<p>But if you want, say, a list of ten <code>dict</code>s, do <em>not</em> use <code>[{}]*10</code> -- that would give you a list with the <strong>same</strong> initially-empty <code>dict</code> ten times, <strong>not</strong> ten distinct ones. Rather, use <code>[{} for i in range(10)]</code> or similar constructs, to construct ten separate <code>dict</code>s to make up your list.</p>
","983727"
"How to remove specific elements in a numpy array","192100","","<p>How can I remove some specific elements from a numpy array? Say I have</p>

<pre><code>import numpy as np

a = np.array([1,2,3,4,5,6,7,8,9])
</code></pre>

<p>I then want to remove <code>3,4,7</code> from <code>a</code>. All I know is the index of the values (<code>index=[2,3,6]</code>).</p>
","<p>Use <a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.delete.html"" rel=""noreferrer"">numpy.delete()</a> - returns a <em>new</em> array with sub-arrays along an axis deleted</p>

<pre><code>numpy.delete(a, index)
</code></pre>

<p>For your specific question:</p>

<pre><code>import numpy as np

a = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])
index = [2, 3, 6]

new_a = np.delete(a, index)

print(new_a) #Prints `[1, 2, 5, 6, 8, 9]`
</code></pre>

<p>Note that <code>numpy.delete()</code> returns a new array since <a href=""http://docs.scipy.org/doc/numpy/reference/arrays.scalars.html"" rel=""noreferrer"">array scalars</a> are immutable, similar to strings in Python, so each time a change is made to it, a new object is created. I.e., to quote the <code>delete()</code> <a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.delete.html"" rel=""noreferrer"">docs</a>:</p>

<blockquote>
  <p>""A <em>copy</em> of arr with the elements specified by obj removed. <em>Note that
  delete does not occur in-place</em>...""</p>
</blockquote>

<p>If the code I post has output, it is the result of running the code.</p>
","10996196"
"Summing elements in a list","192078","","<p>Here is my code, I need to sum an undefined number of elements in the list. How to do this?</p>

<pre><code>l = raw_input()
l = l.split(' ')
l.pop(0)
</code></pre>

<p>My input: <code>3 5 4 9</code>
After input I delete first element via <code>l.pop(0)</code>.
After <code>.split(' ')</code> my list is <code>['5', '4', '9']</code> and I need to sum all elements in this list.</p>

<p>In this case the sum is 18. Please notice that number of elements is not defined.</p>
","<p>You can sum numbers in a list simply with the <a href=""http://docs.python.org/library/functions.html#sum"" rel=""noreferrer"">sum()</a> built-in:</p>

<pre><code>sum(your_list)
</code></pre>

<p>It will sum as many number items as you have. Example:</p>

<pre><code>my_list = range(10, 17)
my_list
[10, 11, 12, 13, 14, 15, 16]

sum(my_list)
91
</code></pre>

<p><strong>For your specific case</strong>:</p>

<p>For your data convert the numbers into <code>int</code> first and then sum the numbers:</p>

<pre><code>data = ['5', '4', '9']

sum(int(i) for i in data)
18
</code></pre>

<p>This will work for <strong>undefined</strong> number of elements in your list (as long as they are ""numbers"")</p>

<p>Thanks for @senderle's comment re conversion in case the data is in string format.</p>
","11344839"
"Why is __init__() always called after __new__()?","192073","","<p>I'm just trying to streamline one of my classes and have introduced some functionality in the same style as the <a href=""https://en.wikipedia.org/wiki/Flyweight_pattern"" rel=""noreferrer"">flyweight design pattern</a>.</p>

<p>However, I'm a bit confused as to why <code>__init__</code> is always called after <code>__new__</code>. I wasn't expecting this. Can anyone tell me why this is happening and how I can implement this functionality otherwise? (Apart from putting the implementation into the <code>__new__</code> which feels quite hacky.)</p>

<p>Here's an example:</p>

<pre><code>class A(object):
    _dict = dict()

    def __new__(cls):
        if 'key' in A._dict:
            print ""EXISTS""
            return A._dict['key']
        else:
            print ""NEW""
            return super(A, cls).__new__(cls)

    def __init__(self):
        print ""INIT""
        A._dict['key'] = self
        print """"

a1 = A()
a2 = A()
a3 = A()
</code></pre>

<p>Outputs:</p>

<pre><code>NEW
INIT

EXISTS
INIT

EXISTS
INIT
</code></pre>

<p>Why?</p>
","<blockquote>
  <p>Use <strong>__new__</strong> when you need to control
  the creation of a new instance. Use
  <strong>__init__</strong> when you need to control initialization of a new instance.</p>
  
  <p><strong>__new__</strong> is the first step of instance creation.  It's called first, and is
  responsible for returning a new
  instance of your class.  In contrast,
  <strong>__init__</strong> doesn't return anything; it's only responsible for initializing the
  instance after it's been created.</p>
  
  <p>In general, you shouldn't need to
  override <strong>__new__</strong> unless you're
  subclassing an immutable type like
  str, int, unicode or tuple.</p>
</blockquote>

<p>From: <a href=""http://mail.python.org/pipermail/tutor/2008-April/061426.html"" rel=""noreferrer"">http://mail.python.org/pipermail/tutor/2008-April/061426.html</a></p>

<p>You should consider that what you are trying to do is usually done with a <a href=""http://en.wikipedia.org/wiki/Factory_object"" rel=""noreferrer"">Factory</a> and that's the best way to do it. Using <strong>__new__</strong> is not a good clean solution so please consider the usage of a factory. Here you have <a href=""http://code.activestate.com/recipes/86900/"" rel=""noreferrer"">a good factory example</a>.</p>
","674369"
"How do you test that a Python function throws an exception?","192070","","<p>How does one write a unittest that fails only if a function doesn't throw an expected exception?</p>
","<p>Use <a href=""http://docs.python.org/library/unittest.html#unittest.TestCase.assertRaises"" rel=""noreferrer""><code>TestCase.assertRaises</code></a> (or <code>TestCase.failUnlessRaises</code>) from the unittest module, for example:</p>

<pre><code>import mymod

class MyTestCase(unittest.TestCase):
    def test1(self):
        self.assertRaises(SomeCoolException, mymod.myfunc)
</code></pre>
","129522"
"Checking whether a string starts with XXXX","192069","","<p>I would like to know how to check whether a string starts with ""hello"" in Python.</p>

<p>In Bash I usually do:</p>

<pre><code>if [[ ""$string"" =~ ^hello ]]; then
 do something here
fi
</code></pre>

<p>How do I achieve the same in Python?</p>
","<pre><code>aString = ""hello world""
aString.startswith(""hello"")
</code></pre>
","8802889"
"How can I use a DLL file from Python?","192068","","<p>What is the easiest way to use a DLL file from within Python?</p>

<p>Specifically, how can this be done <em>without</em> writing any additional wrapper C++ code to expose the functionality to Python?</p>

<p>Native Python functionality is strongly preferred over using a third-party library.</p>
","<p>For ease of use, <a href=""http://docs.python.org/library/ctypes.html"" rel=""noreferrer"">ctypes</a> is the way to go.</p>

<p>The following example of ctypes is from actual code I've written (in Python 2.5).  This has been, by far, the easiest way I've found for doing what you ask.</p>

<pre><code>import ctypes

# Load DLL into memory.

hllDll = ctypes.WinDLL (""c:\\PComm\\ehlapi32.dll"")

# Set up prototype and parameters for the desired function call.
# HLLAPI

hllApiProto = ctypes.WINFUNCTYPE (
    ctypes.c_int,      # Return type.
    ctypes.c_void_p,   # Parameters 1 ...
    ctypes.c_void_p,
    ctypes.c_void_p,
    ctypes.c_void_p)   # ... thru 4.
hllApiParams = (1, ""p1"", 0), (1, ""p2"", 0), (1, ""p3"",0), (1, ""p4"",0),

# Actually map the call (""HLLAPI(...)"") to a Python name.

hllApi = hllApiProto ((""HLLAPI"", hllDll), hllApiParams)

# This is how you can actually call the DLL function.
# Set up the variables and call the Python name with them.

p1 = ctypes.c_int (1)
p2 = ctypes.c_char_p (sessionVar)
p3 = ctypes.c_int (1)
p4 = ctypes.c_int (0)
hllApi (ctypes.byref (p1), p2, ctypes.byref (p3), ctypes.byref (p4))
</code></pre>

<p>The <code>ctypes</code> stuff has all the C-type data types (<code>int</code>, <code>char</code>, <code>short</code>, <code>void*</code>, and so on) and can pass by value or reference.  It can also return specific data types although my example doesn't do that (the HLL API returns values by modifying a variable passed by reference).</p>

<hr>

<p>In terms of the specific example shown above, IBM's EHLLAPI is a fairly consistent interface.</p>

<p>All calls pass four void pointers (EHLLAPI sends the return code back through the fourth parameter, a pointer to an <code>int</code> so, while I specify <code>int</code> as the return type, I can safely ignore it) as per IBM's documentation <a href=""http://publib.boulder.ibm.com/infocenter/pcomhelp/v5r9/index.jsp?topic=/com.ibm.pcomm.doc/books/html/emulator_programming08.htm"" rel=""noreferrer"">here</a>. In other words, the C variant of the function would be:</p>

<pre><code>int hllApi (void *p1, void *p2, void *p3, void *p4)
</code></pre>

<p>This makes for a single, simple <code>ctypes</code> function able to do anything the EHLLAPI library provides, but it's likely that other libraries will need a separate <code>ctypes</code> function set up per library function.</p>

<p>The return value from <code>WINFUNCTYPE</code> is a function prototype but you still have to set up more  parameter information (over and above the types). Each tuple in <code>hllApiParams</code> has a parameter ""direction"" (1 = input, 2 = output and so on), a parameter name and a default value - see the <code>ctypes</code> doco for details</p>

<p>Once you have the prototype and parameter information, you can create a Python ""callable"" <code>hllApi</code> with which to call the function. You simply create the needed variable (<code>p1</code> through <code>p4</code> in my case) and call the function with them.</p>
","252473"
"Short Description of the Scoping Rules?","191944","","<p>What <strong>exactly</strong> are the Python scoping rules?</p>

<p>If I have some code:</p>

<pre><code>code1
class Foo:
   code2
   def spam.....
      code3
      for code4..:
       code5
       x()
</code></pre>

<p>Where is <em>x</em> found?  Some possible choices include the list above:</p>

<ol>
<li>In the enclosing source file</li>
<li>In the class namespace</li>
<li>In the function definition</li>
<li>In the for loop index variable</li>
<li>Inside the for loop</li>
</ol>

<p>Also there is the context during execution, when the function spam is passed somewhere else.  And maybe lambda functions pass a bit differently?</p>

<p>There must be a simple reference or algorithm somewhere.  It's a confusing world for intermediate Python programmers.</p>
","<p>Actually, a concise rule for Python Scope resolution, from <a href=""http://rads.stackoverflow.com/amzn/click/0596513984"" rel=""noreferrer"">Learning Python, 3rd. Ed.</a>. (These rules are specific to variable names, not attributes. If you reference it without a period, these rules apply)</p>

<p>LEGB Rule.</p>

<p><strong>L</strong>, Local — Names assigned in any way within a function (<code>def</code> or <code>lambda</code>)), and not declared global in that function.</p>

<p><strong>E</strong>, Enclosing-function locals — Name in the local scope of any and all statically enclosing functions (<code>def</code> or <code>lambda</code>), from inner to outer.</p>

<p><strong>G</strong>, Global (module) — Names assigned at the top-level of a module file, or by executing a <code>global</code> statement in a <code>def</code> within the file.</p>

<p><strong>B</strong>, Built-in (Python) — Names preassigned in the built-in names module : <code>open</code>,<code>range</code>,<code>SyntaxError</code>,...</p>

<p>So, in the case of</p>

<pre><code>code1
class Foo:
   code2
   def spam.....
      code3
      for code4..:
       code5
       x()
</code></pre>

<p>The for loop does not have its own namespace. In LEGB order, the scopes would be </p>

<p>L : local, in <code>def spam</code> (in <code>code3</code>, <code>code 4</code>, <code>code5</code>).</p>

<p>E : Enclosed function, any enclosing functions (if the whole example were in another <code>def</code>)</p>

<p>G : Global. Were there any <code>x</code> declared globally in the module (<code>code1</code>)?</p>

<p>B : Any builtin <code>x</code> in Python.</p>

<p><code>x</code> will never be found in <code>code2</code> (even in cases where you might expect it would, see <a href=""https://stackoverflow.com/a/23471004/2810305"">Antti's answer</a> or <a href=""https://stackoverflow.com/q/13905741/2810305"">here</a>).</p>
","292502"
"Converting between datetime, Timestamp and datetime64","191898","","<p>How do I convert a <code>numpy.datetime64</code> object to a <code>datetime.datetime</code> (or <code>Timestamp</code>)?</p>

<p>In the following code, I create a datetime, timestamp and datetime64 objects.</p>

<pre><code>import datetime
import numpy as np
import pandas as pd
dt = datetime.datetime(2012, 5, 1)
# A strange way to extract a Timestamp object, there's surely a better way?
ts = pd.DatetimeIndex([dt])[0]
dt64 = np.datetime64(dt)

In [7]: dt
Out[7]: datetime.datetime(2012, 5, 1, 0, 0)

In [8]: ts
Out[8]: &lt;Timestamp: 2012-05-01 00:00:00&gt;

In [9]: dt64
Out[9]: numpy.datetime64('2012-05-01T01:00:00.000000+0100')
</code></pre>

<p><em>Note: it's easy to get the datetime from the Timestamp:</em></p>

<pre><code>In [10]: ts.to_datetime()
Out[10]: datetime.datetime(2012, 5, 1, 0, 0)
</code></pre>

<p>But how do we extract the <code>datetime</code> or <code>Timestamp</code> from a <code>numpy.datetime64</code> (<code>dt64</code>)?</p>

<p>.</p>

<p>Update: a somewhat nasty example in my dataset (perhaps the motivating example) seems to be:</p>

<pre><code>dt64 = numpy.datetime64('2002-06-28T01:00:00.000000000+0100')
</code></pre>

<p>which should be <code>datetime.datetime(2002, 6, 28, 1, 0)</code>, and not a long (!) (<code>1025222400000000000L</code>)...</p>
","<p>To convert <code>numpy.datetime64</code> to datetime object that represents time in UTC on <code>numpy-1.8</code>:</p>

<pre><code>&gt;&gt;&gt; from datetime import datetime
&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; dt = datetime.utcnow()
&gt;&gt;&gt; dt
datetime.datetime(2012, 12, 4, 19, 51, 25, 362455)
&gt;&gt;&gt; dt64 = np.datetime64(dt)
&gt;&gt;&gt; ts = (dt64 - np.datetime64('1970-01-01T00:00:00Z')) / np.timedelta64(1, 's')
&gt;&gt;&gt; ts
1354650685.3624549
&gt;&gt;&gt; datetime.utcfromtimestamp(ts)
datetime.datetime(2012, 12, 4, 19, 51, 25, 362455)
&gt;&gt;&gt; np.__version__
'1.8.0.dev-7b75899'
</code></pre>

<p>The above example assumes that a naive datetime object is interpreted by <code>np.datetime64</code> as time in UTC.</p>

<hr>

<p>To convert datetime to np.datetime64 and back (<code>numpy-1.6</code>):</p>

<pre><code>&gt;&gt;&gt; np.datetime64(datetime.utcnow()).astype(datetime)
datetime.datetime(2012, 12, 4, 13, 34, 52, 827542)
</code></pre>

<p>It works both on a single np.datetime64 object and a numpy array of np.datetime64.</p>

<p>Think of np.datetime64 the same way you would about np.int8, np.int16, etc and apply the same methods to convert beetween Python objects such as int, datetime and corresponding numpy objects.</p>

<p>Your ""nasty example"" works correctly:</p>

<pre><code>&gt;&gt;&gt; from datetime import datetime
&gt;&gt;&gt; import numpy 
&gt;&gt;&gt; numpy.datetime64('2002-06-28T01:00:00.000000000+0100').astype(datetime)
datetime.datetime(2002, 6, 28, 0, 0)
&gt;&gt;&gt; numpy.__version__
'1.6.2' # current version available via pip install numpy
</code></pre>

<p>I can reproduce the <code>long</code> value on <code>numpy-1.8.0</code> installed as:</p>

<pre><code>pip install git+https://github.com/numpy/numpy.git#egg=numpy-dev
</code></pre>

<p>The same example:</p>

<pre><code>&gt;&gt;&gt; from datetime import datetime
&gt;&gt;&gt; import numpy
&gt;&gt;&gt; numpy.datetime64('2002-06-28T01:00:00.000000000+0100').astype(datetime)
1025222400000000000L
&gt;&gt;&gt; numpy.__version__
'1.8.0.dev-7b75899'
</code></pre>

<p>It returns <code>long</code> because for <code>numpy.datetime64</code> type <code>.astype(datetime)</code> is equivalent to <code>.astype(object)</code> that returns Python integer (<code>long</code>) on <code>numpy-1.8</code>. </p>

<p>To get datetime object you could:</p>

<pre><code>&gt;&gt;&gt; dt64.dtype
dtype('&lt;M8[ns]')
&gt;&gt;&gt; ns = 1e-9 # number of seconds in a nanosecond
&gt;&gt;&gt; datetime.utcfromtimestamp(dt64.astype(int) * ns)
datetime.datetime(2002, 6, 28, 0, 0)
</code></pre>

<p>To get datetime64 that uses seconds directly:</p>

<pre><code>&gt;&gt;&gt; dt64 = numpy.datetime64('2002-06-28T01:00:00.000000000+0100', 's')
&gt;&gt;&gt; dt64.dtype
dtype('&lt;M8[s]')
&gt;&gt;&gt; datetime.utcfromtimestamp(dt64.astype(int))
datetime.datetime(2002, 6, 28, 0, 0)
</code></pre>

<p>The <a href=""http://docs.scipy.org/doc/numpy-dev/reference/arrays.datetime.html"">numpy docs</a> say that the datetime API is experimental and may change in future numpy versions.</p>
","13704307"
"Numpy - add row to array","191749","","<p>How does one add rows to a numpy array?</p>

<p>I have an array A:</p>

<pre><code>A = array([[0, 1, 2], [0, 2, 0]])
</code></pre>

<p>I wish to add rows to this array from another array X if the first element of each row in X meets a specific condition.</p>

<p>Numpy arrays do not have a method 'append' like that of lists, or so it seems.</p>

<p>If A and X were lists I would merely do:</p>

<pre><code>for i in X:
    if i[0] &lt; 3:
        A.append(i)
</code></pre>

<p>Is there a <em>numpythonic</em> way to do the equivalent?</p>

<p>Thanks,
S ;-)</p>
","<p>What is <code>X</code>? If it is a 2D-array, how can you then compare its row to a number: <code>i &lt; 3</code>?</p>

<p>EDIT after OP's comment:</p>

<pre><code>A = array([[0, 1, 2], [0, 2, 0]])
X = array([[0, 1, 2], [1, 2, 0], [2, 1, 2], [3, 2, 0]])
</code></pre>

<p>add to <code>A</code> all rows from <code>X</code> where the first element <code>&lt; 3</code>:</p>

<pre><code>A = vstack((A, X[X[:,0] &lt; 3]))

# returns: 
array([[0, 1, 2],
       [0, 2, 0],
       [0, 1, 2],
       [1, 2, 0],
       [2, 1, 2]])
</code></pre>
","3881487"
"Python: TypeError: unhashable type: 'list'","191734","","<p>I'm trying to take a file that looks like this</p>

<pre><code>AAA x 111
AAB x 111
AAA x 112
AAC x 123
...
</code></pre>

<p>And use a dictionary to so that the output looks like this</p>

<pre><code>{AAA: ['111', '112'], AAB: ['111'], AAC: [123], ...}
</code></pre>

<p>This is what I've tried</p>

<pre><code>file = open(""filename.txt"", ""r"") 
readline = file.readline().rstrip()
while readline!= """":
    list = []
    list = readline.split("" "")
    j = list.index(""x"")
    k = list[0:j]
    v = list[j + 1:]
    d = {}
    if k not in d == False:
        d[k] = []
    d[k].append(v)
    readline = file.readline().rstrip()
</code></pre>

<p>I keep getting a TypeError: unhashable type: 'list'. I know that Keys in a dictionary can't be lists but I'm trying to make my value into a list not the key. I'm wondering if I made a mistake somewhere.</p>

<p>Thank you to everyone that helped me with my last question.</p>
","<p>As indicated by the other answers, the error is to due to <code>k = list[0:j]</code>, where your key is converted to a list. One thing you could try is reworking your code to take advantage of the <code>split</code> function:</p>

<pre><code># Using with ensures that the file is properly closed when you're done
with open('filename.txt', 'rb') as f:
  d = {}
  # Here we use readlines() to split the file into a list where each element is a line
  for line in f.readlines():
    # Now we split the file on `x`, since the part before the x will be
    # the key and the part after the value
    line = line.split('x')
    # Take the line parts and strip out the spaces, assigning them to the variables
    # Once you get a bit more comfortable, this works as well:
    # key, value = [x.strip() for x in line] 
    key = line[0].strip()
    value = line[1].strip()
    # Now we check if the dictionary contains the key; if so, append the new value,
    # and if not, make a new list that contains the current value
    # (For future reference, this is a great place for a defaultdict :)
    if key in d:
      d[key].append(value)
    else:
      d[key] = [value]

print d
# {'AAA': ['111', '112'], 'AAC': ['123'], 'AAB': ['111']}
</code></pre>

<p>Note that if you are using Python 3.x, you'll have to make a minor adjustment to get it work properly. If you open the file with <code>rb</code>, you'll need to use <code>line = line.split(b'x')</code> (which makes sure you are splitting the byte with the proper type of string). You can also open the file using <code>with open('filename.txt', 'rU') as f:</code> (or even <code>with open('filename.txt', 'r') as f:</code>) and it should work fine.</p>
","13675403"
"Convert base-2 binary number string to int","191469","","<p>I'd simply like to convert a base-2 binary number string into an int, something like this:</p>

<pre><code>&gt;&gt;&gt; '11111111'.fromBinaryToInt()
255
</code></pre>

<p>Is there a way to do this in Python? </p>
","<p>You use the built-in <code>int</code> function, and pass it the base of the input number, i.e. <code>2</code> for a binary number:</p>

<pre><code>&gt;&gt;&gt; int('11111111', 2)
255
</code></pre>

<p>Here is documentation for <a href=""https://docs.python.org/2/library/functions.html#int"" rel=""noreferrer"">python2</a>, and for <a href=""https://docs.python.org/3.6/library/functions.html#int"" rel=""noreferrer"">python3</a>.</p>
","8928256"
"How do I protect Python code?","191324","","<p>I am developing a piece of software in Python that will be distributed to my employer's customers. My employer wants to limit the usage of the software with a time restricted license file.</p>

<p>If we distribute the .py files or even .pyc files it will be easy to (decompile and) remove the code that checks the license file.</p>

<p>Another aspect is that my employer does not want the code to be read by our customers, fearing that the code may be stolen or at least the ""novel ideas"".</p>

<p>Is there a good way to handle this problem? Preferably with an off-the-shelf solution.</p>

<p>The software will run on Linux systems (so I don't think py2exe will do the trick).</p>
","<p>Python, being a byte-code-compiled interpreted language, is very difficult to lock down.  Even if you use a exe-packager like <a href=""http://py2exe.org"" rel=""noreferrer"">py2exe</a>, the layout of the executable is well-known, and the Python byte-codes are well understood.</p>

<p>Usually in cases like this, you have to make a tradeoff.  How important is it really to protect the code?  Are there real secrets in there (such as a key for symmetric encryption of bank transfers), or are you just being paranoid?  Choose the language that lets you develop the best product quickest, and be realistic about how valuable your novel ideas are.</p>

<p>If you decide you really need to enforce the license check securely, write it as a small C extension so that the license check code can be extra-hard (but not impossible!) to reverse engineer, and leave the bulk of your code in Python.</p>
","261645"
"What SOAP client libraries exist for Python, and where is the documentation for them?","191308","","<p>I've never used <a href=""http://en.wikipedia.org/wiki/SOAP"" rel=""noreferrer"">SOAP</a> before and I'm sort of new to Python.  I'm doing this to get myself acquainted with both technologies.  I've installed <a href=""http://trac.optio.webfactional.com/wiki/soaplib"" rel=""noreferrer"">SOAPlib</a> and I've tried to read their <a href=""http://trac.optio.webfactional.com/wiki/Client"" rel=""noreferrer"">Client</a> documentation, but I don't understand it too well.  Is there anything else I can look into which is more suited for being a SOAP Client library for Python?</p>

<p>Edit: Just in case it helps, I'm using Python 2.6.</p>
","<p><strong><em>Update (2016):</em></strong></p>

<p>If you only need SOAP client, there is well maintained library called <a href=""http://docs.python-zeep.org/en/latest/"" rel=""noreferrer"">zeep</a>. It supports both Python 2 and 3 :)</p>

<hr>

<p><strong><em>Update:</em></strong></p>

<p>Additionally to what is mentioned above, I will refer to <a href=""https://wiki.python.org/moin/WebServices#SOAP"" rel=""noreferrer"">Python WebServices</a> page which is always up-to-date with all actively maintained and recommended modules to <strong>SOAP</strong> and all other webservice types.</p>

<hr>

<p>Unfortunately, at the moment, I don't think there is a ""best"" Python SOAP library. Each of the mainstream ones available has its own pros and cons.</p>

<p>Older libraries:</p>

<ul>
<li><p><a href=""http://soapy.sourceforge.net"" rel=""noreferrer"">SOAPy</a>: Was the ""best,"" but no longer maintained. Does not work on Python 2.5+</p></li>
<li><p><a href=""http://pywebsvcs.sourceforge.net"" rel=""noreferrer"">ZSI</a>: Very painful to use, and development is slow. Has a module called ""SOAPpy"", which is different than SOAPy (above).</p></li>
</ul>

<p>""Newer"" libraries:</p>

<ul>
<li><p><a href=""https://fedorahosted.org/suds"" rel=""noreferrer"">SUDS</a>: Very Pythonic, and easy to create WSDL-consuming SOAP clients. Creating SOAP servers is a little bit more difficult. (This package does not work with python3.)</p></li>
<li><p><a href=""https://github.com/arskom/spyne"" rel=""noreferrer"">spyne</a>: Creating servers is easy, creating clients a little bit more challenging. Documentation is somewhat lacking.</p></li>
<li><p><a href=""http://pypi.python.org/pypi/ladon"" rel=""noreferrer"">ladon</a>: Creating servers is much like in soaplib (using a decorator). Ladon exposes more interfaces than SOAP at the same time without extra user code needed.</p></li>
<li><p><a href=""http://code.google.com/p/pysimplesoap/"" rel=""noreferrer"">pysimplesoap</a>: very lightweight but useful for both client and server - includes a web2py server integration that ships with web2py.</p></li>
<li><a href=""https://github.com/kiorky/SOAPpy"" rel=""noreferrer"">SOAPpy</a>: Distinct from the abandoned SOAPpy that's hosted at the ZSI link above, this version was actually maintained until 2011, now it seems to be abandoned too.</li>
<li><a href=""http://www.python.org/pypi/soaplib"" rel=""noreferrer"">soaplib</a>: Easy to use python library for writing and calling soap web services. Webservices written with soaplib are simple, lightweight, work well with other SOAP implementations, and can be deployed as WSGI applications.</li>
<li><a href=""https://bitbucket.org/sboz/osa"" rel=""noreferrer"">osa</a>: A fast/slim easy to use SOAP python client library.</li>
</ul>

<p>Of the above, I've only used SUDS personally, and I liked it a lot.</p>
","206964"
"What do the python file extensions, .pyc .pyd .pyo stand for?","190728","","<p>What do these python file extensions mean?</p>

<ul>
<li>.pyc</li>
<li>.pyd</li>
<li>.pyo</li>
</ul>

<p>What are the differences between them and how are they generated from a *.py file?</p>
","<ol>
<li><code>.py</code>: This is normally the input source code that you've written.</li>
<li><code>.pyc</code>: This is the compiled bytecode. If you import a module, python will build a <code>*.pyc</code> file that contains the bytecode to make importing it again later easier (and faster).</li>
<li><code>.pyo</code>: This is a <code>*.pyc</code> file that was created while optimizations (<code>-O</code>) was on.</li>
<li><code>.pyd</code>: This is basically a windows dll file. <a href=""http://docs.python.org/faq/windows.html#is-a-pyd-file-the-same-as-a-dll"">http://docs.python.org/faq/windows.html#is-a-pyd-file-the-same-as-a-dll</a></li>
</ol>

<p>Also for some further discussion on <code>.pyc</code> vs <code>.pyo</code>, take a look at: <a href=""http://www.network-theory.co.uk/docs/pytut/CompiledPythonfiles.html"">http://www.network-theory.co.uk/docs/pytut/CompiledPythonfiles.html</a> (I've copied the important part below)</p>

<blockquote>
  <ul>
  <li>When the Python interpreter is invoked with the -O flag, optimized code is generated and stored in ‘.pyo’ files. The optimizer currently doesn't help much; it only removes assert statements. When -O is used, all bytecode is optimized; .pyc files are ignored and .py files are compiled to optimized bytecode.</li>
  <li>Passing two -O flags to the Python interpreter (-OO) will cause the bytecode compiler to perform optimizations that could in some rare cases result in malfunctioning programs. Currently only <code>__doc__</code> strings are removed from the bytecode, resulting in more compact ‘.pyo’ files. Since some programs may rely on having these available, you should only use this option if you know what you're doing.</li>
  <li>A program doesn't run any faster when it is read from a ‘.pyc’ or ‘.pyo’ file than when it is read from a ‘.py’ file; the only thing that's faster about ‘.pyc’ or ‘.pyo’ files is the speed with which they are loaded.</li>
  <li>When a script is run by giving its name on the command line, the bytecode for the script is never written to a ‘.pyc’ or ‘.pyo’ file. Thus, the startup time of a script may be reduced by moving most of its code to a module and having a small bootstrap script that imports that module. It is also possible to name a ‘.pyc’ or ‘.pyo’ file directly on the command line.</li>
  </ul>
</blockquote>
","8822377"
"How to set xlim and ylim for a subplot in matplotlib","190687","","<p>I would like to limit the X and Y axis in matplotlib but for a speific subplot. As I can see
subplot figure itself doesn't have any axis property. I want for example to change only the limits for the second plot!</p>

<pre><code>import matplotlib.pyplot as plt
fig=plt.subplot(131)
plt.scatter([1,2],[3,4])
fig=plt.subplot(132)
plt.scatter([10,20],[30,40])
fig=plt.subplot(133)
plt.scatter([15,23],[35,43])
plt.show()
</code></pre>
","<p>You should learn a bit of the OO interface to matplotlib, not just the state machine interface.  Almost all of the <code>plt.*</code> function are thin wrappers that basically do <code>gca().*</code>.</p>

<p><a href=""http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.subplot"" rel=""noreferrer""><code>plt.subplot</code></a> returns an <a href=""http://matplotlib.org/api/axes_api.html"" rel=""noreferrer""><code>axes</code></a> object.  Once you have a reference to the axes object you can plot directly to it, change its limits, etc.</p>

<pre><code>import matplotlib.pyplot as plt

ax1 = plt.subplot(131)
ax1.scatter([1, 2], [3, 4])
ax1.set_xlim([0, 5])
ax1.set_ylim([0, 5])


ax2 = plt.subplot(132)
ax2.scatter([1, 2],[3, 4])
ax2.set_xlim([0, 5])
ax2.set_ylim([0, 5])
</code></pre>

<p>and so on for as many axes as you want.</p>

<p>or better, wrap it all up in a loop:</p>

<pre><code>import matplotlib.pyplot as plt

DATA_x = ([1, 2],
          [2, 3],
          [3, 4])

DATA_y = DATA_x[::-1]

XLIMS = [[0, 10]] * 3
YLIMS = [[0, 10]] * 3

for j, (x, y, xlim, ylim) in enumerate(zip(DATA_x, DATA_y, XLIMS, YLIMS)):
    ax = plt.subplot(1, 3, j + 1)
    ax.scatter(x, y)
    ax.set_xlim(xlim)
    ax.set_ylim(ylim)
</code></pre>
","15858264"
"How to convert seconds to hours, minutes and seconds?","189955","","<p>I have a function that returns information in seconds, but I need to store that information in hours:minutes:seconds. </p>

<p>Is there an easy way to convert the seconds to this format in python?</p>
","<p>By using the <a href=""http://docs.python.org/library/functions.html#divmod"" rel=""noreferrer""><code>divmod()</code></a> function, which does only a single division to produce both the quotient and the remainder, you can have the result very quickly with only two mathematical operations:</p>

<pre><code>m, s = divmod(seconds, 60)
h, m = divmod(m, 60)
print ""%d:%02d:%02d"" % (h, m, s)
</code></pre>
","775075"
"How to completely remove Python from a Windows machine?","189930","","<p>I installed both Python 2.7 and Python 2.6.5. I don't know what went wrong, but nothing related to Python seems to work any more. e.g. ""setup.py install"" for certain packages don't recognize the ""install"" parameter and other odd phenomena...</p>

<p>I would like to completely remove Python from my system.<br>
I tried running the 2.7 and 2.6 msi files and choosing remove Python and then running only 2.6 and reinstalling it. Still stuff don't work.</p>

<p>How do I completely remove Python - from everything? (!)</p>

<p>I would not like to reinstall my entire machine just because of the Python install...</p>
","<p>You will also have to look in your system path. Python puts itself there and does not remove itself: <a href=""http://www.computerhope.com/issues/ch000549.htm"" rel=""noreferrer"">http://www.computerhope.com/issues/ch000549.htm</a></p>

<p>Your problems probably started because your python path is pointing to the wrong one.</p>
","3515928"
"Return JSON response from Flask view","189865","","<p>I have a function that analyzes a CSV file with Pandas and produces a dict with summary information. I want to return the results as a response from a Flask view. How do I return a JSON response?</p>

<pre><code>@app.route(""/summary"")
def summary():
    d = make_summary()
    # send it back as json
</code></pre>
","<p>Pass the summary data to the <a href=""http://flask.pocoo.org/docs/latest/api/#flask.json.jsonify"" rel=""noreferrer""><code>jsonify</code></a> function, which returns a JSON response.</p>

<pre><code>from flask import jsonify

@app.route('/summary')
def summary():
    d = make_summary()
    return jsonify(d)
</code></pre>

<p>As of Flask 0.11, you can pass any JSON-serializable type, not just dict, as the top level object.</p>
","13089975"
"Run certain code every n seconds","189797","","<p>Is there a way to, for example, print <code>Hello World!</code> every n seconds?
For example, the program would go through whatever code I had, then once it had been 5 seconds (with <code>time.sleep()</code>) it would execute that code. I would be using this to update a file though, not print Hello World.</p>

<p>For example:</p>

<pre><code>startrepeat(""print('Hello World')"", .01) # Repeats print('Hello World') ever .01 seconds

for i in range(5):
    print(i)

&gt;&gt; Hello World!
&gt;&gt; 0
&gt;&gt; 1
&gt;&gt; 2
&gt;&gt; Hello World!
&gt;&gt; 3
&gt;&gt; Hello World!
&gt;&gt; 4
</code></pre>
","<pre><code>import threading

def printit():
  threading.Timer(5.0, printit).start()
  print ""Hello, World!""

printit()

# continue with the rest of your code
</code></pre>
","3393759"
"Using module 'subprocess' with timeout","189765","","<p>Here's the Python code to run an arbitrary command returning its <code>stdout</code> data, or raise an exception on non-zero exit codes:</p>

<pre><code>proc = subprocess.Popen(
    cmd,
    stderr=subprocess.STDOUT,  # Merge stdout and stderr
    stdout=subprocess.PIPE,
    shell=True)
</code></pre>

<p><code>communicate</code> is used to wait for the process to exit:</p>

<pre><code>stdoutdata, stderrdata = proc.communicate()
</code></pre>

<p>The <code>subprocess</code> module does not support timeout--ability to kill a process running for more than X number of seconds--therefore, <code>communicate</code> may take forever to run.</p>

<p>What is the <strong>simplest</strong> way to implement timeouts in a Python program meant to run on Windows and Linux?</p>
","<p>In Python 3.3+:</p>

<pre><code>from subprocess import STDOUT, check_output

output = check_output(cmd, stderr=STDOUT, timeout=seconds)
</code></pre>

<p><code>output</code> is a byte string that contains command's merged stdout, stderr data. </p>

<p>This code raises <code>CalledProcessError</code> on non-zero exit status as specified in the question's text unlike <code>proc.communicate()</code> method.</p>

<p>I've removed <code>shell=True</code> because it is often used unnecessarily. You can  always add it back if <code>cmd</code> indeed requires it. If you add <code>shell=True</code> i.e., if the child process spawns its own descendants; <code>check_output()</code> can return much later than the timeout indicates, see <a href=""https://stackoverflow.com/q/36952245/4279"">Subprocess timeout failure</a>.</p>

<p>The timeout feature is available on Python 2.x via the <a href=""http://pypi.python.org/pypi/subprocess32/"" rel=""noreferrer""><code>subprocess32</code></a> backport of the 3.2+ subprocess module.</p>
","12698328"
"How do I get list of methods in a Python class?","189591","","<p>I want to iterate through the methods in a class, or handle class or instance objects differently based on the methods present. How do I get a list of class methods?</p>

<p>Also see:</p>

<ul>
<li><a href=""https://stackoverflow.com/questions/1280787/how-can-i-list-the-methods-in-a-python-2-5-module"">How can I list the methods in a
Python 2.5 module?</a> </li>
<li><a href=""https://stackoverflow.com/questions/928990/looping-over-a-python-ironpython-object-methods"">Looping over
a Python / IronPython Object
Methods</a> </li>
<li><a href=""https://stackoverflow.com/questions/34439/finding-the-methods-an-object-has"">Finding the methods an
object has</a> </li>
<li><a href=""https://stackoverflow.com/questions/1006169/how-do-i-look-inside-a-python-object"">How do I look inside
a Python object?</a> </li>
<li><a href=""https://stackoverflow.com/questions/546337/how-do-i-perform-introspection-on-an-object-in-python-2-x"">How Do I
Perform Introspection on an Object in
Python 2.x?</a> </li>
<li><a href=""https://stackoverflow.com/questions/191010/how-to-get-a-complete-list-of-objects-methods-and-attributes"">How to get a
complete list of object’s methods and
attributes?</a> </li>
<li><a href=""https://stackoverflow.com/questions/955533/finding-out-which-functions-are-available-from-a-class-instance-in-python"">Finding out which
functions are available from a class
instance in python?</a></li>
</ul>
","<p>An example (listing the methods of the <code>optparse.OptionParser</code> class):</p>

<pre><code>&gt;&gt;&gt; from optparse import OptionParser
&gt;&gt;&gt; import inspect
&gt;&gt;&gt; inspect.getmembers(OptionParser, predicate=inspect.ismethod)
[([('__init__', &lt;unbound method OptionParser.__init__&gt;),
...
 ('add_option', &lt;unbound method OptionParser.add_option&gt;),
 ('add_option_group', &lt;unbound method OptionParser.add_option_group&gt;),
 ('add_options', &lt;unbound method OptionParser.add_options&gt;),
 ('check_values', &lt;unbound method OptionParser.check_values&gt;),
 ('destroy', &lt;unbound method OptionParser.destroy&gt;),
 ('disable_interspersed_args',
  &lt;unbound method OptionParser.disable_interspersed_args&gt;),
 ('enable_interspersed_args',
  &lt;unbound method OptionParser.enable_interspersed_args&gt;),
 ('error', &lt;unbound method OptionParser.error&gt;),
 ('exit', &lt;unbound method OptionParser.exit&gt;),
 ('expand_prog_name', &lt;unbound method OptionParser.expand_prog_name&gt;),
 ...
 ]
</code></pre>

<p>Notice that <code>getmembers</code> returns a list of 2-tuples. The first item is the name of the member, the second item is the value.</p>

<p>You can also pass an instance to <code>getmembers</code>:</p>

<pre><code>&gt;&gt;&gt; parser = OptionParser()
&gt;&gt;&gt; inspect.getmembers(parser, predicate=inspect.ismethod)
...
</code></pre>
","1911287"
"How to take column-slices of dataframe in pandas","189428","","<p>I load a some machine learning data from a csv file. The first 2 columns are observations and the remaining columns are features.</p>

<p>Currently, I do the following :</p>

<pre><code>data = pandas.read_csv('mydata.csv')
</code></pre>

<p>which gives something like:</p>

<pre><code>data = pandas.DataFrame(np.random.rand(10,5), columns = list('abcde'))
</code></pre>

<p>I'd like to slice this dataframe in two dataframes: one containing the columns <code>a</code> and <code>b</code> and one containing the columns <code>c</code>, <code>d</code> and <code>e</code>.</p>

<p>It is not possible to write something like </p>

<pre><code>observations = data[:'c']
features = data['c':]
</code></pre>

<p>I'm not sure what the best method is. Do I need a <code>pd.Panel</code>?</p>

<p>By the way, I find dataframe indexing pretty inconsistent: <code>data['a']</code> is permitted, but <code>data[0]</code> is not. On the other side, <code>data['a':]</code> is not permitted but <code>data[0:]</code> is.
Is there a practical reason for this? This is really confusing if columns are indexed by Int, given that <code>data[0] != data[0:1]</code></p>
","<h1>2017 Answer - pandas 0.20: .ix is deprecated. Use .loc</h1>

<p>See the <a href=""https://pandas.pydata.org/pandas-docs/stable/indexing.html#ix-indexer-is-deprecated"" rel=""noreferrer"">deprecation in the docs</a></p>

<p><code>.loc</code> uses label based indexing to select both rows and columns. The labels being the values of the index or the columns. Slicing with <code>.loc</code> includes the last element. </p>

<blockquote>
  <p>Let's assume we have a DataFrame with the following columns:<br>
  <code>foo</code>, <code>bar</code>, <code>quz</code>, <code>ant</code>, <code>cat</code>, <code>sat</code>, <code>dat</code>.</p>
</blockquote>

<pre><code># selects all rows and all columns beginning at 'foo' up to and including 'sat'
df.loc[:, 'foo':'sat']
# foo bar quz ant cat sat
</code></pre>

<p><code>.loc</code> accepts the same slice notation that Python lists do for both row and columns. Slice notation being <code>start:stop:step</code></p>

<pre><code># slice from 'foo' to 'cat' by every 2nd column
df.loc[:, 'foo':'cat':2]
# foo quz cat

# slice from the beginning to 'bar'
df.loc[:, :'bar']
# foo bar

# slice from 'quz' to the end by 3
df.loc[:, 'quz'::3]
# quz sat

# attempt from 'sat' to 'bar'
df.loc[:, 'sat':'bar']
# no columns returned

# slice from 'sat' to 'bar'
df.loc[:, 'sat':'bar':-1]
sat cat ant quz bar

# slice notation is syntatic sugar for the slice function
# slice from 'quz' to the end by 2 with slice function
df.loc[:, slice('quz',None, 2)]
# quz cat dat

# select specific columns with a list
# select columns foo, bar and dat
df.loc[:, ['foo','bar','dat']]
# foo bar dat
</code></pre>

<p>You can slice by rows and columns. For instance, if you have 5 rows with labels <code>v</code>, <code>w</code>, <code>x</code>, <code>y</code>, <code>z</code></p>

<pre><code># slice from 'w' to 'y' and 'foo' to 'ant' by 3
df.loc['w':'y', 'foo':'ant':3]
#    foo ant
# w
# x
# y
</code></pre>
","44736467"
"Python, print all floats to 2 decimal places in output","188972","","<p>I need to output 4 different floats to two decimal places.</p>

<p>This is what I have:</p>

<pre><code>print '%.2f' % var1,'kg =','%.2f' % var2,'lb =','%.2f' % var3,'gal =','%.2f' % var4,'l'
</code></pre>

<p>Which is very unclean, and looks bad. Is there a way to make any float in that out put '%.2f'? </p>

<p>Note: Using Python 2.6.</p>
","<p>Well I would atleast clean it up as follows:</p>

<pre><code>print ""%.2f kg = %.2f lb = %.2f gal = %.2f l"" % (var1, var2, var3, var4)
</code></pre>
","2075141"
"Transposing a NumPy array","188935","","<p>I use Python and NumPy and have some problems with ""transpose"":</p>

<pre><code>a=array([5,4])
print a
print a.T
</code></pre>

<p>Invoking <code>a.T</code> is not transposing the array.  If <code>a</code> is for example <code>[[],[]]</code> then it transposes correctly, but I need the transpose of <code>[...,...,...]</code>.</p>
","<p>It's working exactly as it's supposed to. The transpose of a <em>1D</em> array is still a <em>1D</em> array!  (If you're used to matlab, it fundamentally doesn't have a concept of a 1D array. Matlab's ""1D"" arrays are 2D.)</p>

<p>If you want to turn your 1D vector into a 2D array and then transpose it, just slice it with <code>np.newaxis</code> (or <code>None</code>, they're the same, <code>newaxis</code> is just more readable).</p>

<pre><code>import numpy as np
a = np.array([5,4])[np.newaxis]
print a
print a.T
</code></pre>

<p>Generally speaking though, you don't ever need to worry about this. Adding the extra dimension is usually not what you want, if you're just doing it out of habit.  Numpy will automatically broadcast a 1D array when doing various calculations. There's usually no need to distinguish between a row vector and a column vector (neither of which are <em>vectors</em>. They're both 2D!) when you just want a vector.</p>
","5954747"
"How to add items into a numpy array","188483","","<p>I need to accomplish the following task:</p>

<p>from:</p>

<pre><code>a = array([[1,3,4],[1,2,3]...[1,2,1]])
</code></pre>

<p>(add one element to each row) to:</p>

<pre><code>a = array([[1,3,4,x],[1,2,3,x]...[1,2,1,x]])
</code></pre>

<p>I have tried doing stuff like a[n] = array([1,3,4,x])</p>

<p>but numpy complained of shape mismatch. I tried iterating through <code>a</code> and appending element x to each item, but the changes are not reflected.</p>

<p>Any ideas on how I can accomplish this?</p>
","<p>Appending data to an existing array is a natural thing to want to do for anyone with python experience.  However, if you find yourself regularly appending to large arrays, you'll quickly discover that NumPy doesn't easily or efficiently do this the way a python <code>list</code> will.  You'll find that every ""append"" action requires re-allocation of the array memory and short-term doubling of memory requirements.  So, the more general solution to the problem is to try to allocate arrays to be as large as the final output of your algorithm.  Then perform all your operations on sub-sets (<a href=""http://docs.scipy.org/doc/numpy/user/basics.indexing.html#other-indexing-options"" rel=""noreferrer"">slices</a>) of that array.  Array creation and destruction should ideally be minimized.</p>

<p>That said, It's often unavoidable and the functions that do this are:</p>

<p>for 2-D arrays:</p>

<ul>
<li><a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.hstack.html"" rel=""noreferrer"">np.hstack</a> </li>
<li><a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.vstack.html"" rel=""noreferrer"">np.vstack</a></li>
<li><a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.column_stack.html"" rel=""noreferrer"">np.column_stack</a></li>
<li><a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.ma.row_stack.html"" rel=""noreferrer"">np.row_stack</a></li>
</ul>

<p>for 3-D arrays (the above plus):</p>

<ul>
<li><a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.dstack.html"" rel=""noreferrer"">np.dstack</a></li>
</ul>

<p>for N-D arrays:</p>

<ul>
<li><a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.concatenate.html"" rel=""noreferrer"">np.concatenate</a></li>
</ul>
","5068182"
"Python read a single character from the user","188483","","<p>Is there a way of reading one single character from the user input? For instance, they press one key at the terminal and it is returned (sort of like <code>getch()</code>). I know there's a function in Windows for it, but I'd like something that is cross-platform.</p>
","<p>Here's a link to a site that says how you can read a single character in Windows, Linux and OSX: <a href=""http://code.activestate.com/recipes/134892/"" rel=""noreferrer"">http://code.activestate.com/recipes/134892/</a></p>

<pre><code>class _Getch:
    """"""Gets a single character from standard input.  Does not echo to the
screen.""""""
    def __init__(self):
        try:
            self.impl = _GetchWindows()
        except ImportError:
            self.impl = _GetchUnix()

    def __call__(self): return self.impl()


class _GetchUnix:
    def __init__(self):
        import tty, sys

    def __call__(self):
        import sys, tty, termios
        fd = sys.stdin.fileno()
        old_settings = termios.tcgetattr(fd)
        try:
            tty.setraw(sys.stdin.fileno())
            ch = sys.stdin.read(1)
        finally:
            termios.tcsetattr(fd, termios.TCSADRAIN, old_settings)
        return ch


class _GetchWindows:
    def __init__(self):
        import msvcrt

    def __call__(self):
        import msvcrt
        return msvcrt.getch()


getch = _Getch()
</code></pre>
","510364"
"How to find out whether a file is at its `eof`?","188291","","<pre><code>fp = open(""a.txt"")
#do many things with fp

c = fp.read()
if c is None:
    print 'fp is at the eof'
</code></pre>

<p>Besides the above method, any other way to find out whether is fp is already at the eof?</p>
","<p><code>fp.read()</code> reads up to the end of the file, so after it's successfully finished you know the file is at EOF; there's no need to check. If it cannot reach EOF it will raise an exception.</p>

<p>When reading a file in chunks rather than with <code>read()</code>, you know you've hit EOF when <code>read</code> returns less than the number of bytes you requested. In that case, the following <code>read</code> call will return the empty string (not <code>None</code>). The following loop reads a file in chunks; it will call <code>read</code> at most once too many.</p>

<pre><code>assert n &gt; 0
while True:
    chunk = fp.read(n)
    if chunk == '':
        break
    process(chunk)
</code></pre>

<p>Or, shorter:</p>

<pre><code>for chunk in iter(lambda: fp.read(n), ''):
    process(chunk)
</code></pre>
","10140333"
"How to use ""raise"" keyword in Python","188083","","<p>I have read the official definition of ""raise"", but I still don't quite understand what it does. </p>

<p>In simplest terms, what is ""raise""?</p>

<p>Example usage would help.</p>
","<p>It has 2 purposes.</p>

<p><a href=""https://stackoverflow.com/a/13957849/20862"">yentup has given the first one.</a></p>

<blockquote>
  <p>It's used for raising your own errors.</p>

<pre><code>if something:
    raise Exception('My error!')
</code></pre>
</blockquote>

<p>The second is to reraise the <em>current</em> exception in an exception handler, so that it can be handled further up the call stack.</p>

<pre><code>try:
  generate_exception()
except SomeException as e:
  if not can_handle(e):
    raise
  handle_exception(e)
</code></pre>
","13957915"
"Selecting with complex criteria from pandas.DataFrame","187967","","<p>For example I have simple DF:</p>

<pre><code>import pandas as pd
from random import randint

df = pd.DataFrame({'A': [randint(1, 9) for x in xrange(10)],
                   'B': [randint(1, 9)*10 for x in xrange(10)],
                   'C': [randint(1, 9)*100 for x in xrange(10)]})
</code></pre>

<p>Can I select values from 'A' for which corresponding values for 'B' will be greater than 50, and for 'C' - not equal 900, using methods and idioms of Pandas?</p>
","<p>Sure!  Setup:</p>

<pre><code>&gt;&gt;&gt; import pandas as pd
&gt;&gt;&gt; from random import randint
&gt;&gt;&gt; df = pd.DataFrame({'A': [randint(1, 9) for x in xrange(10)],
                   'B': [randint(1, 9)*10 for x in xrange(10)],
                   'C': [randint(1, 9)*100 for x in xrange(10)]})
&gt;&gt;&gt; df
   A   B    C
0  9  40  300
1  9  70  700
2  5  70  900
3  8  80  900
4  7  50  200
5  9  30  900
6  2  80  700
7  2  80  400
8  5  80  300
9  7  70  800
</code></pre>

<p>We can apply column operations and get boolean Series objects:</p>

<pre><code>&gt;&gt;&gt; df[""B""] &gt; 50
0    False
1     True
2     True
3     True
4    False
5    False
6     True
7     True
8     True
9     True
Name: B
&gt;&gt;&gt; (df[""B""] &gt; 50) &amp; (df[""C""] == 900)
0    False
1    False
2     True
3     True
4    False
5    False
6    False
7    False
8    False
9    False
</code></pre>

<p>[Update, to switch to new-style <code>.loc</code>]:</p>

<p>And then we can use these to index into the object.  For read access, you can chain indices:</p>

<pre><code>&gt;&gt;&gt; df[""A""][(df[""B""] &gt; 50) &amp; (df[""C""] == 900)]
2    5
3    8
Name: A, dtype: int64
</code></pre>

<p>but you can get yourself into trouble because of the difference between a view and a copy doing this for write access.  You can use <code>.loc</code> instead:</p>

<pre><code>&gt;&gt;&gt; df.loc[(df[""B""] &gt; 50) &amp; (df[""C""] == 900), ""A""]
2    5
3    8
Name: A, dtype: int64
&gt;&gt;&gt; df.loc[(df[""B""] &gt; 50) &amp; (df[""C""] == 900), ""A""].values
array([5, 8], dtype=int64)
&gt;&gt;&gt; df.loc[(df[""B""] &gt; 50) &amp; (df[""C""] == 900), ""A""] *= 1000
&gt;&gt;&gt; df
      A   B    C
0     9  40  300
1     9  70  700
2  5000  70  900
3  8000  80  900
4     7  50  200
5     9  30  900
6     2  80  700
7     2  80  400
8     5  80  300
9     7  70  800
</code></pre>

<p>Note that I accidentally did <code>== 900</code> and not <code>!= 900</code>, or <code>~(df[""C""] == 900)</code>, but I'm too lazy to fix it. Exercise for the reader. :^)</p>
","15315507"
"How to include external Python code to use in other files?","187562","","<p>If you have a collection of methods in a file, is there a way to include those files in another file, but call them without any prefix (i.e. file prefix)?</p>

<p>So if I have:</p>

<pre><code>[Math.py]
def Calculate ( num )
</code></pre>

<p>How do I call it like this:</p>

<pre><code>[Tool.py]
using Math.py

for i in range ( 5 ) :
    Calculate ( i )
</code></pre>
","<p>You will need to import the other file as a module like this:</p>

<pre><code>import Math
</code></pre>

<p>If you don't want to prefix your <code>Calculate</code> function with the module name then do this:</p>

<pre><code>from Math import Calculate
</code></pre>

<p>If you want to import all members of a module then do this:</p>

<pre><code>from Math import *
</code></pre>

<p><strong>Edit:</strong> <a href=""http://www.diveintopython.net/object_oriented_framework/importing_modules.html"" rel=""noreferrer"">Here is a good chapter</a> from <a href=""http://www.diveintopython.net/"" rel=""noreferrer"">Dive Into Python</a> that goes a bit more in depth on this topic.</p>
","714890"
"Test if a variable is a list or tuple","187210","","<p>In python, what's the best way to test if a variable contains a list or a tuple? (ie. a collection)</p>

<p>Is isinstance as evil as suggested here? <a href=""http://www.canonical.org/~kragen/isinstance/"" rel=""noreferrer"">http://www.canonical.org/~kragen/isinstance/</a></p>

<p>Update : the most common reason I want to distinguish a list from a string is when I have some indefinitely deep nested tree / data-structure of lists of lists of lists of strings etc. which I'm exploring with a recursive algorithm and I need to know when I've hit the ""leaf"" nodes.</p>
","<p>Go ahead and use <code>isinstance</code> if you need it.  It is somewhat evil, as it excludes custom sequences, iterators, and other things that you might actually need.  However, sometimes you need to behave differently if someone, for instance, passes a string.  My preference there would be to explicitly check for <code>str</code> or <code>unicode</code> like so:</p>

<pre><code>import types
isinstance(var, types.StringTypes)
</code></pre>

<p>N.B. Don't mistake <code>types.StringType</code> for <code>types.StringTypes</code>.  The latter incorporates <code>str</code> and <code>unicode</code> objects.</p>

<p>The <code>types</code> module is considered by many to be obsolete in favor of just checking directly against the object's type, so if you'd rather not use the above, you can alternatively check explicitly against <code>str</code> and <code>unicode</code>, like this:</p>

<pre><code>isinstance(var, (str, unicode)):
</code></pre>

<p><strong>Edit:</strong></p>

<p>Better still is:</p>

<pre><code>isinstance(var, basestring)
</code></pre>

<p><strong>End edit</strong></p>

<p>After either of these, you can fall back to behaving as if you're getting a normal sequence, letting non-sequences raise appropriate exceptions.</p>

<p>See the thing that's ""evil"" about type checking is not that you might want to behave differently for a certain type of object, it's that you artificially restrict your function from doing the right thing with unexpected object types that would otherwise do the right thing.  If you have a final fallback that is not type-checked, you remove this restriction.  It should be noted that too much type checking is a code smell that indicates that you might want to do some refactoring, but that doesn't necessarily mean you should avoid it from the getgo.</p>
","2185198"
"Selenium using Python - Geckodriver executable needs to be in PATH","187167","","<p>I'm new to programming and started with <code>Python</code> about 2 months ago and am going over Sweigart's <em>Automate the Boring Stuff with Python</em> text. I'm using IDLE and already installed the selenium module and the Firefox browser.
Whenever I tried to run the webdriver function, I get this:</p>

<pre><code>from selenium import webdriver
browser = webdriver.Firefox()
</code></pre>

<p>Exception :-</p>

<pre><code>Exception ignored in: &lt;bound method Service.__del__ of &lt;selenium.webdriver.firefox.service.Service object at 0x00000249C0DA1080&gt;&gt;
Traceback (most recent call last):
  File ""C:\Python\Python35\lib\site-packages\selenium\webdriver\common\service.py"", line 163, in __del__
    self.stop()
  File ""C:\Python\Python35\lib\site-packages\selenium\webdriver\common\service.py"", line 135, in stop
    if self.process is None:
AttributeError: 'Service' object has no attribute 'process'
Exception ignored in: &lt;bound method Service.__del__ of &lt;selenium.webdriver.firefox.service.Service object at 0x00000249C0E08128&gt;&gt;
Traceback (most recent call last):
  File ""C:\Python\Python35\lib\site-packages\selenium\webdriver\common\service.py"", line 163, in __del__
    self.stop()
  File ""C:\Python\Python35\lib\site-packages\selenium\webdriver\common\service.py"", line 135, in stop
    if self.process is None:
AttributeError: 'Service' object has no attribute 'process'
Traceback (most recent call last):
  File ""C:\Python\Python35\lib\site-packages\selenium\webdriver\common\service.py"", line 64, in start
    stdout=self.log_file, stderr=self.log_file)
  File ""C:\Python\Python35\lib\subprocess.py"", line 947, in __init__
    restore_signals, start_new_session)
  File ""C:\Python\Python35\lib\subprocess.py"", line 1224, in _execute_child
    startupinfo)
FileNotFoundError: [WinError 2] The system cannot find the file specified

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""&lt;pyshell#11&gt;"", line 1, in &lt;module&gt;
    browser = webdriver.Firefox()
  File ""C:\Python\Python35\lib\site-packages\selenium\webdriver\firefox\webdriver.py"", line 135, in __init__
    self.service.start()
  File ""C:\Python\Python35\lib\site-packages\selenium\webdriver\common\service.py"", line 71, in start
    os.path.basename(self.path), self.start_error_message)
selenium.common.exceptions.WebDriverException: Message: 'geckodriver' executable needs to be in PATH. 
</code></pre>

<p>I think I need to set the path for <code>geckodriver</code> but not sure how, so can anyone tell me how would I do this?</p>
","<blockquote>
  <p>selenium.common.exceptions.WebDriverException: Message: 'geckodriver' executable needs to be in PATH. </p>
</blockquote>

<p><a href=""https://github.com/mozilla/geckodriver/releases"">First of all you will need to download latest executable geckodriver from here to run latest firefox using selenium</a></p>

<p>Actually The Selenium client bindings tries to locate the <code>geckodriver</code> executable from the system <code>PATH</code>. You will need to add the directory containing the executable to the system path.</p>

<ul>
<li><p>On Unix systems you can do the following to append it to your system’s search path, if you’re using a bash-compatible shell:</p>

<pre><code>export PATH=$PATH:/path/to/directory/of/executable/downloaded/in/previous/step
</code></pre></li>
<li><p>On Windows you will need to update the <strong>Path system variable to add the full directory path to the executable geckodriver</strong> <a href=""https://www.google.co.in/amp/www.howtogeek.com/118594/how-to-edit-your-system-path-for-easy-command-line-access/amp/?client=ms-android-motorola"">manually</a> or <a href=""https://www.windows-commandline.com/set-path-command-line/"">command line</a><strong>(don't forget to restart your system after adding executable geckodriver into system PATH to take effect)</strong>.  The principle is the same as on Unix. </p></li>
</ul>

<p>Now you can run your code same as you're doing as below :-</p>

<pre><code>from selenium import webdriver

browser = webdriver.Firefox()
</code></pre>

<blockquote>
  <p>selenium.common.exceptions.WebDriverException: Message: Expected browser binary location, but unable to find binary in default location, no 'moz:firefoxOptions.binary' capability provided, and no binary flag set on the command line</p>
</blockquote>

<p>Exception clearly states you have installed firefox some other location while Selenium is trying to find firefox and launch from default location but it couldn't find. You need to provide explicitly firefox installed binary location to launch firefox as below :-</p>

<pre><code>from selenium import webdriver
from selenium.webdriver.firefox.firefox_binary import FirefoxBinary

binary = FirefoxBinary('path/to/installed firefox binary')
browser = webdriver.Firefox(firefox_binary=binary)
</code></pre>
","40208762"
"Controlling mouse with Python","187004","","<p>How does one control the mouse cursor in Python, i.e. move it to certain position and click, under Windows?</p>
","<p>Tested on WinXP, Python 2.6 after installing <a href=""http://sourceforge.net/projects/pywin32/files/"" rel=""noreferrer"">pywin32</a> (pywin32-214.win32-py2.6.exe in my case):</p>

<pre><code>import win32api, win32con
def click(x,y):
    win32api.SetCursorPos((x,y))
    win32api.mouse_event(win32con.MOUSEEVENTF_LEFTDOWN,x,y,0,0)
    win32api.mouse_event(win32con.MOUSEEVENTF_LEFTUP,x,y,0,0)
click(10,10)
</code></pre>
","1181538"
"How to print like printf in python3?","186961","","<p>In python 2 i used</p>

<pre><code>print ""a=%d,b=%d"" % (f(x,n),g(x,n))
</code></pre>

<p>Ive tried</p>

<pre><code>print(""a=%d,b=%d"") % (f(x,n),g(x,n))
</code></pre>
","<p>In Python2, <code>print</code> was a keyword which introduced a statement:</p>

<pre><code>print ""Hi""
</code></pre>

<p>In Python3, <code>print</code> is a function which may be invoked:</p>

<pre><code>print (""Hi"")
</code></pre>

<p>In both versions, <code>%</code> is an operator which requires a string on the left-hand side and a value or a tuple of values or a mapping object (like <code>dict</code>) on the right-hand side.</p>

<p>So, your line ought to look like this:</p>

<pre><code>print(""a=%d,b=%d"" % (f(x,n),g(x,n)))
</code></pre>

<p>Also, the recommendation for Python3 and newer is to use <code>{}</code>-style formatting instead of <code>%</code>-style formatting:</p>

<pre><code>print('a={:d}, b={:d}'.format(f(x,n),g(x,n)))
</code></pre>
","19457247"
"How does Python's super() work with multiple inheritance?","186932","","<p>I'm pretty much new in Python object oriented programming and I have trouble
understanding the <code>super()</code> function (new style classes) especially when it comes to multiple inheritance.</p>

<p>For example if you have something like:</p>

<pre><code>class First(object):
    def __init__(self):
        print ""first""

class Second(object):
    def __init__(self):
        print ""second""

class Third(First, Second):
    def __init__(self):
        super(Third, self).__init__()
        print ""that's it""
</code></pre>

<p>What I don't get is: will the <code>Third()</code> class inherit both constructor methods? If yes, then which one will be run with super() and why?</p>

<p>And what if you want to run the other one? I know it has something to do with Python method resolution order (<a href=""http://en.wikipedia.org/wiki/C3_linearization"" rel=""noreferrer"">MRO</a>). </p>
","<p>This is detailed with a reasonable amount of detail by Guido himself in his blog post <a href=""http://python-history.blogspot.com/2010/06/method-resolution-order.html"" rel=""noreferrer"">Method Resolution Order</a> (including two earlier attempts).</p>

<p>In your example, <code>Third()</code> will call <code>First.__init__</code>. Python looks for each attribute in the class's parents as they are listed left to right. In this case we are looking for <code>__init__</code>. So, if you define</p>

<pre><code>class Third(First, Second):
    ...
</code></pre>

<p>Python will start by looking at <code>First</code>, and, if <code>First</code> doesn't have the attribute, then it will look at <code>Second</code>.</p>

<p>This situation becomes more complex when inheritance starts crossing paths (for example if <code>First</code> inherited from <code>Second</code>). Read the link above for more details, but, in a nutshell, Python will try to maintain the order in which each class appears on the inheritance list, starting with the child class itself.</p>

<p>So, for instance, if you had:</p>

<pre><code>class First(object):
    def __init__(self):
        print ""first""

class Second(First):
    def __init__(self):
        print ""second""

class Third(First):
    def __init__(self):
        print ""third""

class Fourth(Second, Third):
    def __init__(self):
        super(Fourth, self).__init__()
        print ""that's it""
</code></pre>

<p>the MRO would be <code>[Fourth, Second, Third, First].</code></p>

<p>By the way: if Python cannot find a coherent method resolution order, it'll raise an exception, instead of falling back to a behaviour which might surprise the user.</p>

<p>Edited to add example of an ambiguous MRO:</p>

<pre><code>class First(object):
    def __init__(self):
        print ""first""

class Second(First):
    def __init__(self):
        print ""second""

class Third(First, Second):
    def __init__(self):
        print ""third""
</code></pre>

<p>Should <code>Third</code>'s MRO be <code>[First, Second]</code> or <code>[Second, First]</code>? There's no obvious expectation, and Python will raise an error:</p>

<pre><code>TypeError: Error when calling the metaclass bases
    Cannot create a consistent method resolution order (MRO) for bases Second, First
</code></pre>

<p><strong>Edit:</strong> I see several people arguing that the examples above lack <code>super()</code> calls, so let me explain: The point of the examples is to show how the MRO is constructed. They are <strong>not</strong> intended to print ""first\nsecond\third"" or whatever. You can – and should, of course, play around with the example, add <code>super()</code> calls, see what happens, and gain a deeper understanding of Python's inheritance model. But my goal here is to keep it simple and show how the MRO is built. And it is built as I explained:</p>

<pre><code>&gt;&gt;&gt; Fourth.__mro__
(&lt;class '__main__.Fourth'&gt;,
 &lt;class '__main__.Second'&gt;, &lt;class '__main__.Third'&gt;,
 &lt;class '__main__.First'&gt;,
 &lt;type 'object'&gt;)
</code></pre>
","3277407"
"How to create PDF files in Python","186742","","<p>I'm working on a project which takes some images from user and then creates a PDF file which contains all of these images.</p>

<p>Is there any way or any tool to do this in Python? E.g. to create a PDF file (or eps, ps) from image1 + image 2 + image 3 -> PDF file?</p>
","<p>I suggest <a href=""https://github.com/mstamy2/PyPDF2"" rel=""noreferrer"">pyPdf</a>. It works really nice. I also wrote a blog post some while ago, you can find it <a href=""http://ssscripting.wordpress.com/2009/08/16/get-your-job-done-faster-with-pypdf/"" rel=""noreferrer"">here</a>.</p>
","2252756"
"""Large data"" work flows using pandas","186704","","<p>I have tried to puzzle out an answer to this question for many months while learning pandas.  I use SAS for my day-to-day work and it is great for it's out-of-core support.  However, SAS is horrible as a piece of software for numerous other reasons.</p>

<p>One day I hope to replace my use of SAS with python and pandas, but I currently lack an out-of-core workflow for large datasets.  I'm not talking about ""big data"" that requires a distributed network, but rather files too large to fit in memory but small enough to fit on a hard-drive.</p>

<p>My first thought is to use <code>HDFStore</code> to hold large datasets on disk and pull only the pieces I need into dataframes for analysis.  Others have mentioned MongoDB as an easier to use alternative.  My question is this:</p>

<p>What are some best-practice workflows for accomplishing the following:</p>

<ol>
<li>Loading flat files into a permanent, on-disk database structure</li>
<li>Querying that database to retrieve data to feed into a pandas data structure</li>
<li>Updating the database after manipulating pieces in pandas</li>
</ol>

<p>Real-world examples would be much appreciated, especially from anyone who uses pandas on ""large data"".</p>

<p>Edit -- an example of how I would like this to work:</p>

<ol>
<li>Iteratively import a large flat-file and store it in a permanent, on-disk database structure.  These files are typically too large to fit in memory.</li>
<li>In order to use Pandas, I would like to read subsets of this data (usually just a few columns at a time) that can fit in memory.</li>
<li>I would create new columns by performing various operations on the selected columns.</li>
<li>I would then have to append these new columns into the database structure.</li>
</ol>

<p>I am trying to find a best-practice way of performing these steps. Reading links about pandas and pytables it seems that appending a new column could be a problem.</p>

<p>Edit -- Responding to Jeff's questions specifically:</p>

<ol>
<li>I am building consumer credit risk models. The kinds of data include phone, SSN and address characteristics; property values; derogatory information like criminal records, bankruptcies, etc... The datasets I use every day have nearly 1,000 to 2,000 fields on average of mixed data types: continuous, nominal and ordinal variables of both numeric and character data.  I rarely append rows, but I do perform many operations that create new columns.</li>
<li>Typical operations involve combining several columns using conditional logic into a new, compound column. For example, <code>if var1 &gt; 2 then newvar = 'A' elif var2 = 4 then newvar = 'B'</code>.  The result of these operations is a new column for every record in my dataset.</li>
<li>Finally, I would like to append these new columns into the on-disk data structure.  I would repeat step 2, exploring the data with crosstabs and descriptive statistics trying to find interesting, intuitive relationships to model.</li>
<li>A typical project file is usually about 1GB.  Files are organized into such a manner where a row consists of a record of consumer data.  Each row has the same number of columns for every record.  This will always be the case.</li>
<li>It's pretty rare that I would subset by rows when creating a new column.  However, it's pretty common for me to subset on rows when creating reports or generating descriptive statistics.  For example, I might want to create a simple frequency for a specific line of business, say Retail credit cards.  To do this, I would select only those records where the line of business = retail in addition to whichever columns I want to report on.  When creating new columns, however, I would pull all rows of data and only the columns I need for the operations.</li>
<li>The modeling process requires that I analyze every column, look for interesting relationships with some outcome variable, and create new compound columns that describe those relationships.  The columns that I explore are usually done in small sets.  For example, I will focus on a set of say 20 columns just dealing with property values and observe how they relate to defaulting on a loan.  Once those are explored and new columns are created, I then move on to another group of columns, say college education, and repeat the process.  What I'm doing is creating candidate variables that explain the relationship between my data and some outcome.  At the very end of this process, I apply some learning techniques that create an equation out of those compound columns.</li>
</ol>

<p>It is rare that I would ever add rows to the dataset.  I will nearly always be creating new columns (variables or features in statistics/machine learning parlance).</p>
","<p>I routinely use tens of gigabytes of data in just this fashion
e.g. I have tables on disk that I read via queries, create data and append back.</p>

<p>It's worth reading <a href=""http://pandas-docs.github.io/pandas-docs-travis/io.html#hdf5-pytables"">the docs</a> and <a href=""https://groups.google.com/forum/m/?fromgroups#!topic/pydata/cmw1F3OFJSc"">late in this thread</a> for several suggestions for how to store your data.</p>

<p>Details which will affect how you store your data, like:<br>
<em>Give as much detail as you can; and I can help you develop a structure.</em></p>

<ol>
<li>Size of data, # of rows, columns, types of columns; are you appending
rows, or just columns? </li>
<li>What will typical operations look like. E.g. do a query on columns to select a bunch of rows and specific columns, then do an operation (in-memory), create new columns, save these.<br>
(Giving a toy example could enable us to offer more specific recommendations.)</li>
<li>After that processing, then what do you do? Is step 2 ad hoc, or repeatable?</li>
<li>Input flat files: how many, rough total size in Gb. How are these organized e.g. by records? Does each one contains different fields, or do they have some records per file with all of the fields in each file?</li>
<li>Do you ever select subsets of rows (records) based on criteria (e.g. select the rows with field A > 5)? and then do something, or do you just select fields A, B, C with all of the records (and then do something)?</li>
<li>Do you 'work on' all of your columns (in groups), or are there a good proportion that you may only use for reports (e.g. you want to keep the data around, but don't need to pull in that column explicity until final results time)?</li>
</ol>

<h2>Solution</h2>

<p><em>Ensure you have <a href=""http://pandas.pydata.org/getpandas.html"">pandas at least <code>0.10.1</code></a> installed.</em></p>

<p>Read <a href=""http://pandas-docs.github.io/pandas-docs-travis/io.html#iterating-through-files-chunk-by-chunk"">iterating files chunk-by-chunk</a> and <a href=""http://pandas-docs.github.io/pandas-docs-travis/io.html#multiple-table-queries"">multiple table queries</a>.</p>

<p>Since pytables is optimized to operate on row-wise (which is what you query on), we will create a table for each group of fields. This way it's easy to select a small group of fields (which will work with a big table, but it's more efficient to do it this way... I think I may be able to fix this limitation in the future... this is more intuitive anyhow):<br>
(The following is pseudocode.)</p>

<pre><code>import numpy as np
import pandas as pd

# create a store
store = pd.HDFStore('mystore.h5')

# this is the key to your storage:
#    this maps your fields to a specific group, and defines 
#    what you want to have as data_columns.
#    you might want to create a nice class wrapping this
#    (as you will want to have this map and its inversion)  
group_map = dict(
    A = dict(fields = ['field_1','field_2',.....], dc = ['field_1',....,'field_5']),
    B = dict(fields = ['field_10',......        ], dc = ['field_10']),
    .....
    REPORTING_ONLY = dict(fields = ['field_1000','field_1001',...], dc = []),

)

group_map_inverted = dict()
for g, v in group_map.items():
    group_map_inverted.update(dict([ (f,g) for f in v['fields'] ]))
</code></pre>

<p>Reading in the files and creating the storage (essentially doing what <code>append_to_multiple</code> does):</p>

<pre><code>for f in files:
   # read in the file, additional options hmay be necessary here
   # the chunksize is not strictly necessary, you may be able to slurp each 
   # file into memory in which case just eliminate this part of the loop 
   # (you can also change chunksize if necessary)
   for chunk in pd.read_table(f, chunksize=50000):
       # we are going to append to each table by group
       # we are not going to create indexes at this time
       # but we *ARE* going to create (some) data_columns

       # figure out the field groupings
       for g, v in group_map.items():
             # create the frame for this group
             frame = chunk.reindex(columns = v['fields'], copy = False)    

             # append it
             store.append(g, frame, index=False, data_columns = v['dc'])
</code></pre>

<p>Now you have all of the tables in the file (actually you could store them in separate files if you wish, you would prob have to add the filename to the group_map, but probably this isn't necessary).</p>

<p>This is how you get columns and create new ones:</p>

<pre><code>frame = store.select(group_that_I_want)
# you can optionally specify:
# columns = a list of the columns IN THAT GROUP (if you wanted to
#     select only say 3 out of the 20 columns in this sub-table)
# and a where clause if you want a subset of the rows

# do calculations on this frame
new_frame = cool_function_on_frame(frame)

# to 'add columns', create a new group (you probably want to
# limit the columns in this new_group to be only NEW ones
# (e.g. so you don't overlap from the other tables)
# add this info to the group_map
store.append(new_group, new_frame.reindex(columns = new_columns_created, copy = False), data_columns = new_columns_created)
</code></pre>

<p>When you are ready for post_processing:</p>

<pre><code># This may be a bit tricky; and depends what you are actually doing.
# I may need to modify this function to be a bit more general:
report_data = store.select_as_multiple([groups_1,groups_2,.....], where =['field_1&gt;0', 'field_1000=foo'], selector = group_1)
</code></pre>

<p>About data_columns, you don't actually need to define <strong>ANY</strong> data_columns; they allow you to sub-select rows based on the column. E.g. something like:</p>

<pre><code>store.select(group, where = ['field_1000=foo', 'field_1001&gt;0'])
</code></pre>

<p>They may be most interesting to you in the final report generation stage (essentially a data column is segregated from other columns, which might impact efficiency somewhat if you define a lot).</p>

<p>You also might want to:</p>

<ul>
<li>create a function which takes a list of fields, looks up the groups in the groups_map, then selects these and concatenates the results so you get the resulting frame (this is essentially what select_as_multiple does). <em>This way the structure would be pretty transparent to you.</em></li>
<li>indexes on certain data columns (makes row-subsetting much faster).</li>
<li>enable compression.</li>
</ul>

<p>Let me know when you have questions!</p>
","14268804"
"Why use pip over easy_install?","186627","","<p>A <a href=""http://twitter.com/jperras/statuses/18160589493"" rel=""noreferrer"">tweet</a> reads: </p>

<blockquote>
  <p>Don't use easy_install, unless you
  like stabbing yourself in the face.
  Use pip.</p>
</blockquote>

<p>Why use pip over easy_install? Doesn't the <a href=""http://mail.python.org/pipermail/catalog-sig/2010-June/002985.html"" rel=""noreferrer"">fault lie with PyPI and package authors mostly</a>? If an author uploads crap source tarball (eg: missing files, no setup.py) to PyPI, then both pip and easy_install will fail. Other than cosmetic differences, why do Python people (like in the above tweet) seem to <strong>strongly</strong> favor pip over easy_install?</p>

<p>(Let's assume that we're talking about easy_install from the Distribute package, that is maintained by the community)</p>
","<p>Many of the answers here are out of date for 2015 (although <a href=""https://stackoverflow.com/a/3220572/908494"">the initially accepted one from Daniel Roseman</a> is not). Here's the current state of things:</p>

<ul>
<li>Binary packages are now distributed as wheels (<code>.whl</code> files)—not just on PyPI, but in third-party repositories like <a href=""http://www.lfd.uci.edu/~gohlke/pythonlibs/"" rel=""noreferrer"">Christoph Gohlke's Extension Packages for Windows</a>. <code>pip</code> can handle wheels; <code>easy_install</code> cannot.</li>
<li>Virtual environments (which come built-in with 3.4, or can be added to 2.6+/3.1+ with <a href=""https://pypi.python.org/pypi/virtualenv"" rel=""noreferrer""><code>virtualenv</code></a>) have become a very important and prominent tool (and recommended in <a href=""https://docs.python.org/3/installing/index.html"" rel=""noreferrer"">the official docs</a>); they include <code>pip</code> out of the box, but don't even work properly with <code>easy_install</code>.</li>
<li>The <code>distribute</code> package that included <code>easy_install</code> is no longer maintained. Its improvements over <code>setuptools</code> got merged back into <code>setuptools</code>. Trying to install <code>distribute</code> will just install <code>setuptools</code> instead.</li>
<li><code>easy_install</code> itself is only quasi-maintained.</li>
<li>All of the cases where <code>pip</code> used to be inferior to <code>easy_install</code>—installing from an unpacked source tree, from a DVCS repo, etc.—are long-gone; you can <code>pip install .</code>, <code>pip install git+https://</code>.</li>
<li><code>pip</code> comes with the official Python 2.7 and 3.4+ packages from python.org, and a <code>pip</code> bootstrap is included by default if you build from source.</li>
<li>The various incomplete bits of documentation on installing, using, and building packages have been replaced by the <a href=""https://packaging.python.org/"" rel=""noreferrer"">Python Packaging User Guide</a>. Python's own documentation on <a href=""https://docs.python.org/3/installing/index.html"" rel=""noreferrer"">Installing Python Modules</a> now defers to this user guide, and explicitly calls out <code>pip</code> as ""the preferred installer program"".</li>
<li>Other new features have been added to <code>pip</code> over the years that will never be in <code>easy_install</code>. For example, <code>pip</code> makes it easy to clone your site-packages by building a requirements file and then installing it with a single command on each side. Or to convert your requirements file to a local repo to use for in-house development. And so on.</li>
</ul>

<p>The only good reason that I know of to use <code>easy_install</code> in 2015 is the special case of using Apple's pre-installed Python versions with OS X 10.5-10.8. Since 10.5, Apple has included <code>easy_install</code>, but as of 10.10 they still don't include <code>pip</code>. With 10.9+, you should still just use <code>get-pip.py</code>, but for 10.5-10.8, this has some problems, so it's easier to <code>sudo easy_install pip</code>. (In general, <code>easy_install pip</code> is a bad idea; it's only for OS X 10.5-10.8 that you want to do this.) Also, 10.5-10.8 include <code>readline</code> in a way that <code>easy_install</code> knows how to kludge around but <code>pip</code> doesn't, so you also want to <code>sudo easy_install readline</code> if you want to upgrade that.</p>
","30408520"
"Invalid syntax when using ""print""?","186374","","<p>I'm learning Python and can't even write the first example:</p>

<pre><code>print 2 ** 100
</code></pre>

<p>this gives <code>SyntaxError: invalid syntax</code></p>

<p>pointing at the 2.</p>

<p>Why is this? I'm using version 3.1</p>
","<p>That is because in Python 3, they have replaced the <code>print</code> <em>statement</em> with the <code>print</code> <em>function</em>.</p>

<p>The syntax is now more or less the same as before, but it requires parens:</p>

<p>From the ""<a href=""http://docs.python.org/3.0/whatsnew/3.0.html"" rel=""noreferrer"">what's new in python 3</a>"" docs:</p>

<pre><code>Old: print ""The answer is"", 2*2
New: print(""The answer is"", 2*2)

Old: print x,           # Trailing comma suppresses newline
New: print(x, end="" "")  # Appends a space instead of a newline

Old: print              # Prints a newline
New: print()            # You must call the function!

Old: print &gt;&gt;sys.stderr, ""fatal error""
New: print(""fatal error"", file=sys.stderr)

Old: print (x, y)       # prints repr((x, y))
New: print((x, y))      # Not the same as print(x, y)!
</code></pre>
","937516"
"What is the best way to repeatedly execute a function every x seconds in Python?","186364","","<p>I want to repeatedly execute a function in Python every 60 seconds forever (just like an <a href=""http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSTimer_Class/Reference/NSTimer.html"" rel=""noreferrer"">NSTimer</a> in Objective C). This code will run as a daemon and is effectively like calling the python script every minute using a cron, but without requiring that to be set up by the user.</p>

<p>In <a href=""https://stackoverflow.com/questions/373335/suggestions-for-a-cron-like-scheduler-in-python"">this question about a cron implemented in Python</a>, the solution appears to effectively just <a href=""http://docs.python.org/library/time.html#time.sleep"" rel=""noreferrer"">sleep()</a> for x seconds. I don't need such advanced functionality so perhaps something like this would work</p>

<pre><code>while True:
    # Code executed here
    time.sleep(60)
</code></pre>

<p>Are there any foreseeable problems with this code?</p>
","<p>Use the <a href=""http://docs.python.org/library/sched.html"" rel=""noreferrer"">sched</a> module, which implements a general purpose event scheduler.</p>

<pre><code>import sched, time
s = sched.scheduler(time.time, time.sleep)
def do_something(sc): 
    print ""Doing stuff...""
    # do your stuff
    s.enter(60, 1, do_something, (sc,))

s.enter(60, 1, do_something, (s,))
s.run()
</code></pre>
","474543"
"pip install from git repo branch","186354","","<p>Trying to <code>pip</code> install a repo's specific branch. Google tells me to  </p>

<blockquote>
  <p>pip install <a href=""https://github.com/user/repo.git@branch"" rel=""noreferrer"">https://github.com/user/repo.git@branch</a></p>
</blockquote>

<p>The branch's name is <code>issue/34/oscar-0.6</code> so I did <code>pip  install https://github.com/tangentlabs/django-oscar-paypal.git@/issue/34/oscar-0.6</code> but its returning a 404.</p>

<p>How do I install this branch?</p>
","<p>Prepend the url prefix <code>git+</code> (See <a href=""https://pip.pypa.io/en/stable/reference/pip_install/#vcs-support"">VCS Support</a>):</p>

<pre><code>pip install git+https://github.com/tangentlabs/django-oscar-paypal.git@issue/34/oscar-0.6
</code></pre>

<p>And specify the branch name without the leading <code>/</code>.</p>
","20101940"
"String.strip() in Python","186307","","<p>While learning about python, I came upon this code, which takes a text file, splits each line into an array, and inserts it into a custom dictionary, where the array[0] is the key and array[1] is the value:</p>

<pre><code>my_dict = {}

infile = open(""file.txt"")
for line in infile:
    #line = line.strip() 
    #parts = [p.strip() for p in line.split(""\t"")]
    parts = [p for p in line.split(""\t"")]
    my_dict[parts[0]] = parts[1]
    print line

for key in my_dict:
    print ""key: "" + key + ""\t"" + ""value "" + my_dict[key]
</code></pre>

<p>I ran the program with the commented lines off and on and I got the same result. (of course replacing the second commented line with the line below it).It seems to me that doing a strip() is optional. Is it better practice to leave it in?</p>
","<p>If you can comment out code and your program still works, then yes, that code was optional.</p>

<p><code>.strip()</code> removes <em>all</em> whitespace at the start and end, including spaces, tabs, newlines and carriage returns. Leaving it in doesn't do any harm, and allows your program to deal with unexpected extra whitespace inserted into the file.</p>

<p>For example, by using <code>.strip()</code>, the following two lines in a file would lead to the same end result:</p>

<pre><code> foo\tbar \n
foo\tbar\n
</code></pre>

<p>I'd say leave it in.</p>
","13013812"
"How do you check whether a number is divisible by another number (Python)?","186285","","<p>I need to test whether each number from 1 to 1000 is a multiple of 3 or a multiple of 5. The way I thought I'd do this would be to divide the number by 3, and if the result is an integer then it would be a multiple of 3. Same with 5. </p>

<p>How do I test whether the number is an integer?</p>

<p>here is my current code:</p>

<pre><code>n = 0
s = 0

while (n &lt; 1001):
    x = n/3
    if isinstance(x, (int, long)):
        print 'Multiple of 3!'
        s = s + n
    if False:
        y = n/5
        if isinstance(y, (int, long)):
            s = s + n

    print 'Number: '
    print n
    print 'Sum:'
    print s
    n = n + 1
</code></pre>
","<p>You do this using the modulus operator, <code>%</code></p>

<pre><code>n % k == 0
</code></pre>

<p>evaluates true if and only if <code>n</code> is an exact multiple of <code>k</code>. In elementary maths this is known as the remainder from a division.</p>

<p>In your current approach you perform a division and the result will be either</p>

<ul>
<li>always an integer if you use integer division, or</li>
<li>always a float if you use floating point division.</li>
</ul>

<p>It's just the wrong way to go about testing divisibility.</p>
","8002234"
"Breaking out of nested loops","186073","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/189645/how-to-break-out-of-multiple-loops-in-python"">How to break out of multiple loops in Python?</a>  </p>
</blockquote>



<p>Is there an easier way to break out of nested loops than throwing an exception? (In Perl, you can give labels to each loop and at least continue an outer loop.)  </p>

<pre><code>for x in range(10):
    for y in range(10):
        print x*y
        if x*y &gt; 50:
            ""break both loops""
</code></pre>

<p>I.e., is there a nicer way than:</p>

<pre><code>class BreakIt(Exception): pass

try:
    for x in range(10):
        for y in range(10):
            print x*y
            if x*y &gt; 50:
                raise BreakIt
except BreakIt:
    pass
</code></pre>
","<p>It has at least been suggested, but also <a href=""http://www.python.org/dev/peps/pep-3136/"" rel=""noreferrer"">rejected</a>. I don't think there is another way, short of repeating the test or re-organizing the code. It is sometimes a bit annoying.</p>

<p>In the <a href=""http://mail.python.org/pipermail/python-3000/2007-July/008663.html"" rel=""noreferrer"">rejection message</a>, Mr van Rossum mentions using <code>return</code>, which is really sensible and something I need to remember personally. :)</p>
","653517"
"What is a Python equivalent of PHP's var_dump()?","185607","","<p>When debugging in PHP, I frequently find it useful to simply stick a <a href=""http://php.net/var-dump"" rel=""noreferrer"">var_dump()</a> in my code to show me what a variable is, what its value is, and the same for anything that it contains.</p>

<p>What is a good Python equivalent for this?</p>
","<p>To display a value nicely, you can use the <a href=""http://docs.python.org/library/pprint.html"" rel=""noreferrer"">pprint</a> module. The easiest way to dump all variables with it is to do</p>

<pre><code>from pprint import pprint

pprint(globals())
pprint(locals())
</code></pre>

<p>If you are running in CGI, a useful debugging feature is the <a href=""http://docs.python.org/library/cgitb.html"" rel=""noreferrer"">cgitb</a> module, which displays the value of local variables as part of the traceback.</p>
","383953"
"Relative imports in Python 3","185567","","<p>I want to import a function from another file in the same directory.</p>

<p>Sometimes it works for me with <code>from .mymodule import myfunction</code> but sometimes I get a:</p>

<pre class=""lang-none prettyprint-override""><code>SystemError: Parent module '' not loaded, cannot perform relative import
</code></pre>

<p>Sometimes it works with <code>from mymodule import myfunction</code>, but sometimes I also get a:</p>

<pre class=""lang-none prettyprint-override""><code>SystemError: Parent module '' not loaded, cannot perform relative import
</code></pre>

<p>I don't understand the logic here, and I couldn't find any explanation. This looks completely random.</p>

<p>Could someone explain to me what's the logic behind all this?</p>
","<blockquote>
  <p>unfortunately, this module needs to be inside the package, and it also
  needs to be runnable as a script, sometimes. Any idea how I could
  achieve that?</p>
</blockquote>

<p>It's quite common to have a layout like this...</p>

<pre><code>main.py
mypackage/
    __init__.py
    mymodule.py
    myothermodule.py
</code></pre>

<p>...with a <code>mymodule.py</code> like this...</p>

<pre><code>#!/usr/bin/env python3

# Exported function
def as_int(a):
    return int(a)

# Test function for module  
def _test():
    assert as_int('1') == 1

if __name__ == '__main__':
    _test()
</code></pre>

<p>...a <code>myothermodule.py</code> like this...</p>

<pre><code>#!/usr/bin/env python3

from .mymodule import as_int

# Exported function
def add(a, b):
    return as_int(a) + as_int(b)

# Test function for module  
def _test():
    assert add('1', '1') == 2

if __name__ == '__main__':
    _test()
</code></pre>

<p>...and a <code>main.py</code> like this...</p>

<pre><code>#!/usr/bin/env python3

from mypackage.myothermodule import add

def main():
    print(add('1', '1'))

if __name__ == '__main__':
    main()
</code></pre>

<p>...which works fine when you run <code>main.py</code> or <code>mypackage/mymodule.py</code>, but fails with <code>mypackage/myothermodule.py</code>, due to the relative import...</p>

<pre><code>from .mymodule import as_int
</code></pre>

<p>The way you're supposed to run it is...</p>

<pre><code>python3 -m mypackage.myothermodule
</code></pre>

<p>...but it's somewhat verbose, and doesn't mix well with a shebang line like <code>#!/usr/bin/env python3</code>.</p>

<p>The simplest fix for this case, assuming the name <code>mymodule</code> is globally unique, would be to avoid using relative imports, and just use...</p>

<pre><code>from mymodule import as_int
</code></pre>

<p>...although, if it's not unique, or your package structure is more complex, you'll need to include the directory containing your package directory in <code>PYTHONPATH</code>, and do it like this...</p>

<pre><code>from mypackage.mymodule import as_int
</code></pre>

<p>...or if you want it to work ""out of the box"", you can frob the <code>PYTHONPATH</code> in code first with this...</p>

<pre><code>import sys
import os

PACKAGE_PARENT = '..'
SCRIPT_DIR = os.path.dirname(os.path.realpath(os.path.join(os.getcwd(), os.path.expanduser(__file__))))
sys.path.append(os.path.normpath(os.path.join(SCRIPT_DIR, PACKAGE_PARENT)))

from mypackage.mymodule import as_int
</code></pre>

<p>It's kind of a pain, but there's a clue as to why in <a href=""http://mail.python.org/pipermail/python-3000/2007-April/006793.html"" rel=""noreferrer"">an email</a> written by a certain Guido van Rossum...</p>

<blockquote>
  <p>I'm -1 on this and on any other proposed twiddlings of the <code>__main__</code>
  machinery. The only use case seems to be running scripts that happen
  to be living inside a module's directory, which I've always seen as an
  antipattern. To make me change my mind you'd have to convince me that
  it isn't.</p>
</blockquote>

<p>Whether running scripts inside a package is an antipattern or not is subjective, but personally I find it really useful in a package I have which contains some custom wxPython widgets, so I can run the script for any of the source files to display a <code>wx.Frame</code> containing only that widget for testing purposes.</p>
","16985066"
"Python: create object and add attributes to it","185327","","<p>I want to create a dynamic object (inside another object) in Python and then add attributes to it.</p>

<p>I tried:</p>

<pre><code>obj = someobject
obj.a = object()
setattr(obj.a, 'somefield', 'somevalue')
</code></pre>

<p>but this didn't work.</p>

<p>Any ideas?</p>

<p><em>edit:</em></p>

<p>I am setting the attributes from a <code>for</code> loop which loops through a list of values, e.g.</p>

<pre><code>params = ['attr1', 'attr2', 'attr3']
obj = someobject
obj.a = object()

for p in params:
   obj.a.p # where p comes from for loop variable
</code></pre>

<p>In the above example I would get <code>obj.a.attr1</code>, <code>obj.a.attr2</code>, <code>obj.a.attr3</code>.  </p>

<p>I used the <code>setattr</code> function because I didn't know how to do <code>obj.a.NAME</code> from a <code>for</code> loop.</p>

<p>How would I set the attribute based on the value of <code>p</code> in the example above?</p>
","<p>You could use my ancient <a href=""http://code.activestate.com/recipes/52308-the-simple-but-handy-collector-of-a-bunch-of-named/?in=user-97991"" rel=""noreferrer"">Bunch</a> recipe, but if you don't want to make a ""bunch class"", a very simple one already exists in Python -- all functions can have arbitrary attributes (including lambda functions).  So, the following works:</p>

<pre><code>obj = someobject
obj.a = lambda: None
setattr(obj.a, 'somefield', 'somevalue')
</code></pre>

<p>Whether the loss of clarity compared to the venerable <code>Bunch</code> recipe is OK, is a style decision I will of course leave up to you.</p>
","2827734"
"Measuring elapsed time with the Time module","185154","","<p>With the Time module in python is it possible to measure elapsed time? If so, how do I do that? </p>

<p>I need to do this so that if the cursor has been in a widget for a certain duration an event happens.  </p>
","<pre><code>start_time = time.time()
# your code
elapsed_time = time.time() - start_time
</code></pre>

<p>You can also write simple decorator to simplify measurement of execution time of various functions:</p>

<pre><code>import time
from functools import wraps

PROF_DATA = {}

def profile(fn):
    @wraps(fn)
    def with_profiling(*args, **kwargs):
        start_time = time.time()

        ret = fn(*args, **kwargs)

        elapsed_time = time.time() - start_time

        if fn.__name__ not in PROF_DATA:
            PROF_DATA[fn.__name__] = [0, []]
        PROF_DATA[fn.__name__][0] += 1
        PROF_DATA[fn.__name__][1].append(elapsed_time)

        return ret

    return with_profiling

def print_prof_data():
    for fname, data in PROF_DATA.items():
        max_time = max(data[1])
        avg_time = sum(data[1]) / len(data[1])
        print ""Function %s called %d times. "" % (fname, data[0]),
        print 'Execution time max: %.3f, average: %.3f' % (max_time, avg_time)

def clear_prof_data():
    global PROF_DATA
    PROF_DATA = {}
</code></pre>

<p>Usage:</p>

<pre><code>@profile
def your_function(...):
    ...
</code></pre>

<p>You can profile more then one function simultaneously. Then to print measurements just call the print_prof_data():</p>
","3620972"
"UnicodeEncodeError: 'ascii' codec can't encode character u'\xef' in position 0: ordinal not in range(128)","185062","","<p>I want to parse my XML document. So I have stored my XML document as below</p>

<pre><code>class XMLdocs(db.Expando):  
   id = db.IntegerProperty()    
   name=db.StringProperty()  
   content=db.BlobProperty()  
</code></pre>

<p>Now my below is my code</p>

<pre><code>parser = make_parser()     
curHandler = BasketBallHandler()  
parser.setContentHandler(curHandler)  
for q in XMLdocs.all():  
        parser.parse(StringIO.StringIO(q.content))
</code></pre>

<p>I am getting below error</p>

<pre><code>'ascii' codec can't encode character u'\xef' in position 0: ordinal not in range(128)
Traceback (most recent call last):  
  File ""/base/python_runtime/python_lib/versions/1/google/appengine/ext/webapp/__init__.py"", line 517, in __call__
    handler.post(*groups)   
  File ""/base/data/home/apps/parsepython/1.348669006354245654/mapreduce/base_handler.py"", line 59, in post
    self.handle()   
  File ""/base/data/home/apps/parsepython/1.348669006354245654/mapreduce/handlers.py"", line 168, in handle
    scan_aborted = not self.process_entity(entity, ctx)   
  File ""/base/data/home/apps/parsepython/1.348669006354245654/mapreduce/handlers.py"", line 233, in process_entity
    handler(entity)   
  File ""/base/data/home/apps/parsepython/1.348669006354245654/parseXML.py"", line 71, in process
    parser.parse(StringIO.StringIO(q.content))   
  File ""/base/python_runtime/python_dist/lib/python2.5/xml/sax/expatreader.py"", line 107, in parse
    xmlreader.IncrementalParser.parse(self, source)   
  File ""/base/python_runtime/python_dist/lib/python2.5/xml/sax/xmlreader.py"", line 123, in parse
    self.feed(buffer)  
  File ""/base/python_runtime/python_dist/lib/python2.5/xml/sax/expatreader.py"", line 207, in feed
    self._parser.Parse(data, isFinal)   
  File ""/base/data/home/apps/parsepython/1.348669006354245654/parseXML.py"", line 136, in characters   
    print ch   
UnicodeEncodeError: 'ascii' codec can't encode character u'\xef' in position 0: ordinal not in range(128)   
</code></pre>
","<p>It seems you are hitting a UTF-8 byte order mark (BOM). Try using this unicode string with BOM extracted out:</p>

<pre><code>import codecs

content = unicode(q.content.strip(codecs.BOM_UTF8), 'utf-8')
parser.parse(StringIO.StringIO(content))
</code></pre>

<p>I used <code>strip</code> instead of <code>lstrip</code> because in your case you had multiple occurences of BOM, possibly due to concatenated file contents.</p>
","5141671"
"Iterating through a JSON object","184592","","<p>I am trying to iterate through a JSON object to import data, i.e. title and link. I can't seem to get to the content that is past the <code>:</code>. </p>

<p><strong>JSON:</strong> </p>

<pre><code>[
    {
        ""title"": ""Baby (Feat. Ludacris) - Justin Bieber"",
        ""description"": ""Baby (Feat. Ludacris) by Justin Bieber on Grooveshark"",
        ""link"": ""http://listen.grooveshark.com/s/Baby+Feat+Ludacris+/2Bqvdq"",
        ""pubDate"": ""Wed, 28 Apr 2010 02:37:53 -0400"",
        ""pubTime"": 1272436673,
        ""TinyLink"": ""http://tinysong.com/d3wI"",
        ""SongID"": ""24447862"",
        ""SongName"": ""Baby (Feat. Ludacris)"",
        ""ArtistID"": ""1118876"",
        ""ArtistName"": ""Justin Bieber"",
        ""AlbumID"": ""4104002"",
        ""AlbumName"": ""My World (Part II);\nhttp://tinysong.com/gQsw"",
        ""LongLink"": ""11578982"",
        ""GroovesharkLink"": ""11578982"",
        ""Link"": ""http://tinysong.com/d3wI""
    },
    {
        ""title"": ""Feel Good Inc - Gorillaz"",
        ""description"": ""Feel Good Inc by Gorillaz on Grooveshark"",
        ""link"": ""http://listen.grooveshark.com/s/Feel+Good+Inc/1UksmI"",
        ""pubDate"": ""Wed, 28 Apr 2010 02:25:30 -0400"",
        ""pubTime"": 1272435930
    }
]
</code></pre>

<p>I tried using a dictionary:</p>

<pre><code>def getLastSong(user,limit):
    base_url = 'http://gsuser.com/lastSong/'
    user_url = base_url + str(user) + '/' + str(limit) + ""/""
    raw = urllib.urlopen(user_url)
    json_raw= raw.readlines()
    json_object = json.loads(json_raw[0])

    #filtering and making it look good.
    gsongs = []
    print json_object
    for song in json_object[0]:   
        print song
</code></pre>

<p>This code only prints the information before <code>:</code>.
(<em>ignore the Justin Bieber track</em> :))</p>
","<p>Your loading of the JSON data is a little fragile. Instead of:</p>

<pre><code>json_raw= raw.readlines()
json_object = json.loads(json_raw[0])
</code></pre>

<p>you should really just do:</p>

<pre><code>json_object = json.load(raw)
</code></pre>

<p>You shouldn't think of what you get as a ""JSON object"". What you have is a list. The list contains two dicts. The dicts contain various key/value pairs, all strings. When you do <code>json_object[0]</code>, you're asking for the first dict in the list. When you iterate over that, with <code>for song in json_object[0]:</code>, you iterate over the keys of the dict. Because that's what you get when you iterate over the dict. If you want to access the value associated with the key in that dict, you would use, for example, <code>json_object[0][song]</code>.</p>

<p>None of this is specific to JSON. It's just basic Python types, with their basic operations as covered in any tutorial.</p>
","2733844"
"How to write a multidimensional array to a text file?","184460","","<p>In another question, other users offered some help if I could supply the array I was having trouble with. However, I even fail at a basic I/O task, such as writing an array to a file.</p>

<p><strong>Can anyone explain what kind of loop I would need to write a 4x11x14 numpy array to file?</strong></p>

<p>This array consist of four 11 x 14 arrays, so I should format it with a nice newline, to make the reading of the file easier on others.</p>

<p><strong>Edit</strong>: So I've tried the numpy.savetxt function. Strangely, it gives the following error:</p>

<pre><code>TypeError: float argument required, not numpy.ndarray
</code></pre>

<p>I assume that this is because the function doesn't work with multidimensional arrays? Any solutions as I would like them within one file?</p>
","<p>If you want to write it to disk so that it will be easy to read back in as a numpy array, look into <a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.save.html"" rel=""noreferrer""><code>numpy.save</code></a>.  Pickling it will work fine, as well, but it's less efficient for large arrays (which yours isn't, so either is perfectly fine).</p>

<p>If you want it to be human readable, look into <a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.savetxt.html"" rel=""noreferrer""><code>numpy.savetxt</code></a>.</p>

<p><strong>Edit:</strong>  So, it seems like <code>savetxt</code> isn't quite as great an option for arrays with >2 dimensions... But just to draw everything out to it's full conclusion:</p>

<p>I just realized that <code>numpy.savetxt</code> chokes on ndarrays with more than 2 dimensions... This is probably by design, as there's no inherently defined way to indicate additional dimensions in a text file.</p>

<p>E.g. This (a 2D array) works fine</p>

<pre><code>import numpy as np
x = np.arange(20).reshape((4,5))
np.savetxt('test.txt', x)
</code></pre>

<p>While the same thing would fail (with a rather uninformative error: <code>TypeError: float argument required, not numpy.ndarray</code>) for a 3D array:</p>

<pre><code>import numpy as np
x = np.arange(200).reshape((4,5,10))
np.savetxt('test.txt', x)
</code></pre>

<p>One workaround is just to break the 3D (or greater) array into 2D slices. E.g.</p>

<pre><code>x = np.arange(200).reshape((4,5,10))
with file('test.txt', 'w') as outfile:
    for slice_2d in x:
        np.savetxt(outfile, slice_2d)
</code></pre>

<p>However, our goal is to be clearly human readable, while still being easily read back in with <code>numpy.loadtxt</code>. Therefore, we can be a bit more verbose, and differentiate the slices using commented out lines. By default, <code>numpy.loadtxt</code> will ignore any lines that start with <code>#</code> (or whichever character is specified by the <code>comments</code> kwarg).  (This looks more verbose than it actually is...)</p>

<pre><code>import numpy as np

# Generate some test data
data = np.arange(200).reshape((4,5,10))

# Write the array to disk
with file('test.txt', 'w') as outfile:
    # I'm writing a header here just for the sake of readability
    # Any line starting with ""#"" will be ignored by numpy.loadtxt
    outfile.write('# Array shape: {0}\n'.format(data.shape))

    # Iterating through a ndimensional array produces slices along
    # the last axis. This is equivalent to data[i,:,:] in this case
    for data_slice in data:

        # The formatting string indicates that I'm writing out
        # the values in left-justified columns 7 characters in width
        # with 2 decimal places.  
        np.savetxt(outfile, data_slice, fmt='%-7.2f')

        # Writing out a break to indicate different slices...
        outfile.write('# New slice\n')
</code></pre>

<p>This yields:</p>

<pre><code># Array shape: (4, 5, 10)
0.00    1.00    2.00    3.00    4.00    5.00    6.00    7.00    8.00    9.00   
10.00   11.00   12.00   13.00   14.00   15.00   16.00   17.00   18.00   19.00  
20.00   21.00   22.00   23.00   24.00   25.00   26.00   27.00   28.00   29.00  
30.00   31.00   32.00   33.00   34.00   35.00   36.00   37.00   38.00   39.00  
40.00   41.00   42.00   43.00   44.00   45.00   46.00   47.00   48.00   49.00  
# New slice
50.00   51.00   52.00   53.00   54.00   55.00   56.00   57.00   58.00   59.00  
60.00   61.00   62.00   63.00   64.00   65.00   66.00   67.00   68.00   69.00  
70.00   71.00   72.00   73.00   74.00   75.00   76.00   77.00   78.00   79.00  
80.00   81.00   82.00   83.00   84.00   85.00   86.00   87.00   88.00   89.00  
90.00   91.00   92.00   93.00   94.00   95.00   96.00   97.00   98.00   99.00  
# New slice
100.00  101.00  102.00  103.00  104.00  105.00  106.00  107.00  108.00  109.00 
110.00  111.00  112.00  113.00  114.00  115.00  116.00  117.00  118.00  119.00 
120.00  121.00  122.00  123.00  124.00  125.00  126.00  127.00  128.00  129.00 
130.00  131.00  132.00  133.00  134.00  135.00  136.00  137.00  138.00  139.00 
140.00  141.00  142.00  143.00  144.00  145.00  146.00  147.00  148.00  149.00 
# New slice
150.00  151.00  152.00  153.00  154.00  155.00  156.00  157.00  158.00  159.00 
160.00  161.00  162.00  163.00  164.00  165.00  166.00  167.00  168.00  169.00 
170.00  171.00  172.00  173.00  174.00  175.00  176.00  177.00  178.00  179.00 
180.00  181.00  182.00  183.00  184.00  185.00  186.00  187.00  188.00  189.00 
190.00  191.00  192.00  193.00  194.00  195.00  196.00  197.00  198.00  199.00 
# New slice
</code></pre>

<p>Reading it back in is very easy, as long as we know the shape of the original array. We can just do <code>numpy.loadtxt('test.txt').reshape((4,5,10))</code>.  As an example (You can do this in one line, I'm just being verbose to clarify things):</p>

<pre><code># Read the array from disk
new_data = np.loadtxt('test.txt')

# Note that this returned a 2D array!
print new_data.shape

# However, going back to 3D is easy if we know the 
# original shape of the array
new_data = new_data.reshape((4,5,10))

# Just to check that they're the same...
assert np.all(new_data == data)
</code></pre>
","3685339"
"How to retrieve an element from a set without removing it?","184240","","<p>Suppose the following:</p>

<pre><code>&gt;&gt;&gt;s = set([1, 2, 3])
</code></pre>

<p>How do I get a value (any value) out of s without doing s.pop()? I want to leave the item in the set until I am sure I can remove it - something I can only be sure of after an asynchronous call to another host.</p>

<p>Quick and dirty:</p>

<pre><code>&gt;&gt;&gt;elem = s.pop()
&gt;&gt;&gt;s.add(elem)
</code></pre>

<p>But do you know of a better way? Ideally in constant time.</p>
","<p>Two options that don't require copying the whole set:</p>

<pre><code>for e in s:
    break
# e is now an element from s
</code></pre>

<p>Or...</p>

<pre><code>e = next(iter(s))
</code></pre>

<p>But in general, sets don't support indexing or slicing.</p>
","59841"
"What is the preferred syntax for initializing a dict: curly brace literals {} or the dict() function?","184122","","<p>I'm putting in some effort to learn Python, and I am paying close attention to common coding standards.  This may seem like a pointlessly nit-picky question, but I am trying to focus on best-practices as I learn, so I don't have to unlearn any 'bad' habits.</p>

<p>I see two common methods for initializing a dict:</p>

<pre><code>a = {
    'a': 'value',
    'another': 'value',
}

b = dict( 
    a='value',
    another='value',
)
</code></pre>

<p>Which is considered to be ""more pythonic""?  Which do you use? Why?</p>
","<p>Curly braces. Passing keyword arguments into <code>dict()</code>, though it works beautifully in a lot of scenarios, can only initialize a map if the keys are valid Python identifiers.</p>

<p>In other words it cannot do:</p>

<pre><code>a = {'import': 'trade', 1: 7.8}
</code></pre>
","2853739"
"Python 3 ImportError: No module named 'ConfigParser'","183931","","<p>I am trying to <code>pip install</code> the <code>MySQL-python</code> package, but I get an <code>ImportError</code>.</p>

<pre><code>Jans-MacBook-Pro:~ jan$ /Library/Frameworks/Python.framework/Versions/3.3/bin/pip-3.3 install MySQL-python
Downloading/unpacking MySQL-python
  Running setup.py egg_info for package MySQL-python
    Traceback (most recent call last):
      File ""&lt;string&gt;"", line 16, in &lt;module&gt;
      File ""/var/folders/lf/myf7bjr57_jg7_5c4014bh640000gn/T/pip-build/MySQL-python/setup.py"", line 14, in &lt;module&gt;
        from setup_posix import get_config
      File ""./setup_posix.py"", line 2, in &lt;module&gt;
        from ConfigParser import SafeConfigParser
    ImportError: No module named 'ConfigParser'
    Complete output from command python setup.py egg_info:
    Traceback (most recent call last):

  File ""&lt;string&gt;"", line 16, in &lt;module&gt;

  File ""/var/folders/lf/myf7bjr57_jg7_5c4014bh640000gn/T/pip-build/MySQL-python/setup.py"", line 14, in &lt;module&gt;

    from setup_posix import get_config

  File ""./setup_posix.py"", line 2, in &lt;module&gt;

    from ConfigParser import SafeConfigParser

ImportError: No module named 'ConfigParser'

----------------------------------------
Command python setup.py egg_info failed with error code 1 in /var/folders/lf/myf7bjr57_jg7_5c4014bh640000gn/T/pip-build/MySQL-python
Storing complete log in /Users/jan/.pip/pip.log
Jans-MacBook-Pro:~ jan$ 
</code></pre>

<p>Any ideas?</p>
","<p>In Python 3, <a href=""https://docs.python.org/2/library/configparser.html""><code>ConfigParser</code></a> has been renamed to <a href=""https://docs.python.org/3/library/configparser.html""><code>configparser</code></a> for PEP 8 compliance. It looks like the package you are installing does not support Python 3.</p>
","14087705"
"Python in Xcode 4+?","183790","","<p>How does one create a Python friendly environment in Xcode 4, 5, 6 or 7?</p>
","<p>I figured it out! The steps make it look like it will take more effort than it actually does.</p>

<p>These instructions are for creating a project from scratch. If you have existing Python scripts that you wish to include in this project, you will obviously need to slightly deviate from these instructions.</p>

<p>If you find that these instructions no longer work or are unclear due to changes in Xcode updates, please let me know. I will make the necessary corrections.</p>

<ol>
<li>Open Xcode. The instructions for either are the same.</li>
<li>In the menu bar, click “File” → “New” → “New Project…”.</li>
<li>Select “Other” in the left pane, then ""External Build System"" in the right page, and next click ""Next"".</li>
<li>Enter the product name, organization name, or organization identifier.</li>
<li>For the “Build Tool” field, type in <kbd>/usr/local/bin/python3</kbd> for Python 3 or <kbd>/usr/bin/python</kbd> for Python 2 and then click “Next”. Note that this assumes you have the symbolic link (that is setup by default) that resolves to the Python executable. If you are unsure as to where your Python executables are, enter either of these commands into Terminal: <kbd>which python3</kbd> and <kbd>which python</kbd>.</li>
<li>Click “Next”.</li>
<li>Choose where to save it and click “Create”.</li>
<li>In the menu bar, click “File” → “New” → “New File…”.</li>
<li>Select “Other” under “OS X”.</li>
<li>Select “Empty” and click “Next”.</li>
<li>Navigate to the project folder (it will not work, otherwise), enter the name of the Python file (including the “.py” extension), and click “Create”.</li>
<li>In the menu bar, click “Product” → “Scheme” → “Edit Scheme…”.</li>
<li>Click “Run” in the left pane.</li>
<li>In the “Info” tab, click the “Executable” field and then click “Other…”.</li>
<li>Navigate to the executable from Step 5. You might need to use <kbd>⇧⌘G</kbd> to type in the directory if it is hidden.</li>
<li>Select the executable and click ""Choose"".</li>
<li>Uncheck “Debug executable”. If you skip this step, Xcode will try to debug the Python executable itself. I am unaware of a way to integrate an external debugging tool into Xcode.</li>
<li>Click the “+” icon under “Arguments Passed On Launch”. You might have to expand that section by clicking on the triangle pointing to the right.</li>
<li>Type in <kbd>$(SRCROOT)/</kbd> (or <kbd>$(SOURCE_ROOT)/</kbd>) and then the name of the Python file you want to test. Remember, the Python program must be in the project folder. Otherwise, you will have to type out the full path (or relative path if it's in a subfolder of the project folder) here. If there are spaces anywhere in the full path, you must include quotation marks at the beginning and end of this.</li>
<li>Click “Close”.</li>
</ol>

<p>Note that if you open the ""Utilities"" panel, with the ""Show the File inspector"" tab active, the file type is automatically set to ""Default - Python script"". Feel free to look through all the file type options it has, to gain an idea as to what all it is capable of doing. The method above can be applied to any interpreted language. As of right now, I have yet to figure out exactly how to get it to work with Java; then again, I haven't done too much research. Surely there is some documentation floating around on the web about all of this.</p>

<h2>Running without administrative privileges:</h2>

<p>If you do not have administrative privileges or are not in the Developer group, you can still use Xcode for Python programming (but you still won't be able to develop in languages that require compiling). Instead of using the play button, in the menu bar, click ""Product"" → ""Perform Action"" → ""Run Without Building"" or simply use the keyboard shortcut <kbd>^⌘R</kbd>.</p>

<h2>Other Notes:</h2>

<p>To change the text encoding, line endings, and/or indentation settings, open the ""Utilities"" panel and click ""Show the File inspector"" tab active. There, you will find these settings.</p>

<p>For more information about Xcode's build settings, there is no better source than <a href=""https://developer.apple.com/library/mac/documentation/DeveloperTools/Reference/XcodeBuildSettingRef/0-Introduction/introduction.html"" rel=""noreferrer"">this</a>. I'd be interested in hearing from somebody who got this to work with unsupported compiled languages. This process should work for any other interpreted language. Just be sure to change Step 5 and Step 16 accordingly.</p>
","5438416"
"Why is there no xrange function in Python3?","183518","","<p>Recently I started using Python3 and it's lack of xrange hurts.</p>

<p>Simple example:</p>

<p><strong>1)</strong> Python2:</p>

<pre><code>from time import time as t
def count():
  st = t()
  [x for x in xrange(10000000) if x%4 == 0]
  et = t()
  print et-st
count()
</code></pre>

<p><strong>2)</strong> Python3:</p>

<pre><code>from time import time as t

def xrange(x):

    return iter(range(x))

def count():
    st = t()
    [x for x in xrange(10000000) if x%4 == 0]
    et = t()
    print (et-st)
count()
</code></pre>

<p>The results are, respectively:</p>

<p><strong>1)</strong> 1.53888392448
<strong>2)</strong> 3.215819835662842</p>

<p>Why is that? I mean, why xrange's been removed? It's such a great tool to learn. For the beginners, just like myself, like we all were at some point. Why remove it? Can somebody point me to the proper PEP, I can't find it.</p>

<p>Cheers.</p>
","<p>Some performance measurements, using <code>timeit</code> instead of trying to do it manually with <code>time</code>.</p>

<p>First, Apple 2.7.2 64-bit:</p>

<pre><code>In [37]: %timeit collections.deque((x for x in xrange(10000000) if x%4 == 0), maxlen=0)
1 loops, best of 3: 1.05 s per loop
</code></pre>

<p>Now, python.org 3.3.0 64-bit:</p>

<pre><code>In [83]: %timeit collections.deque((x for x in range(10000000) if x%4 == 0), maxlen=0)
1 loops, best of 3: 1.32 s per loop

In [84]: %timeit collections.deque((x for x in xrange(10000000) if x%4 == 0), maxlen=0)
1 loops, best of 3: 1.31 s per loop

In [85]: %timeit collections.deque((x for x in iter(range(10000000)) if x%4 == 0), maxlen=0) 
1 loops, best of 3: 1.33 s per loop
</code></pre>

<p>Apparently, 3.x <code>range</code> really is a bit slower than 2.x <code>xrange</code>. And the OP's <code>xrange</code> function has nothing to do with it. (Not surprising, as a one-time call to the <code>__iter__</code> slot isn't likely to be visible among 10000000 calls to whatever happens in the loop, but someone brought it up as a possibility.)</p>

<p>But it's only 30% slower. How did the OP get 2x as slow? Well, if I repeat the same tests with 32-bit Python, I get 1.58 vs. 3.12. So my guess is that this is yet another of those cases where 3.x has been optimized for 64-bit performance in ways that hurt 32-bit.</p>

<p>But does it really matter? Check this out, with 3.3.0 64-bit again:</p>

<pre><code>In [86]: %timeit [x for x in range(10000000) if x%4 == 0]
1 loops, best of 3: 3.65 s per loop
</code></pre>

<p>So, building the <code>list</code> takes more than twice as long than the entire iteration. </p>

<p>And as for ""consumes much more resources than Python 2.6+"", from my tests, it looks like a 3.x <code>range</code> is exactly the same size as a 2.x <code>xrange</code>—and, even if it were 10x as big, building the unnecessary list is still about 10000000x more of a problem than anything the range iteration could possibly do.</p>

<p>And what about an explicit <code>for</code> loop instead of the C loop inside <code>deque</code>?</p>

<pre><code>In [87]: def consume(x):
   ....:     for i in x:
   ....:         pass
In [88]: %timeit consume(x for x in range(10000000) if x%4 == 0)
1 loops, best of 3: 1.85 s per loop
</code></pre>

<p>So, almost as much time wasted in the <code>for</code> statement as in the actual work of iterating the <code>range</code>.</p>

<p>If you're worried about optimizing the iteration of a range object, you're probably looking in the wrong place.</p>

<hr>

<p>Meanwhile, you keep asking why <code>xrange</code> was removed, no matter how many times people tell you the same thing, but I'll repeat it again: It was not removed: it was renamed to <code>range</code>, and the 2.x <code>range</code> is what was removed.</p>

<p>Here's some proof that the 3.3 <code>range</code> object is a direct descendant of the 2.x <code>xrange</code> object (and not of the 2.x <code>range</code> function): the source to <a href=""http://hg.python.org/cpython/file/3.3/Objects/rangeobject.c"" rel=""noreferrer"">3.3 <code>range</code></a> and <a href=""http://hg.python.org/cpython/file/2.7/Objects/rangeobject.c"" rel=""noreferrer"">2.7 <code>xrange</code></a>. You can even see the <a href=""http://hg.python.org/cpython/diff/a6eb6acfe04a/Objects/rangeobject.c"" rel=""noreferrer"">change history</a> (linked to, I believe, the change that replaced the last instance of the string ""xrange"" anywhere in the file).</p>

<p>So, why is it slower?</p>

<p>Well, for one, they've added a lot of new features. For another, they've done all kinds of changes all over the place (especially inside iteration) that have minor side effects. And there'd been a lot of work to dramatically optimize various important cases, even if it sometimes slightly pessimizes less important cases. Add this all up, and I'm not surprised that iterating a <code>range</code> as fast as possible is now a bit slower. It's one of those less-important cases that nobody would ever care enough to focus on. No one is likely to ever have a real-life use case where this performance difference is the hotspot in their code.</p>
","15014576"
"python encoding utf-8","183409","","<p>I am doing some scripts in python. I create a string that I save in a file. This string got lot of data, coming from the arborescence and filenames of a directory.
According to convmv, all my arborescence is in UTF-8.</p>

<p>I want to keep everything in UTF-8 because I will save it in MySQL after.
For now, in MySQL, which is in UTF-8, I got some problem with some characters (like é or è - I'am French).</p>

<p>I want that python always use string as UTF-8. I read some informations on the internet and i did like this.</p>

<p>My script begin with this :</p>

<pre><code> #!/usr/bin/python
 # -*- coding: utf-8 -*-
 def createIndex():
     import codecs
     toUtf8=codecs.getencoder('UTF8')
     #lot of operations &amp; building indexSTR the string who matter
     findex=open('config/index/music_vibration_'+date+'.index','a')
     findex.write(codecs.BOM_UTF8)
     findex.write(toUtf8(indexSTR)) #this bugs!
</code></pre>

<p>And when I execute, here is the answer : <code>UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2171: ordinal not in range(128)</code></p>

<p>Edit:
I see, in my file, the accent are nicely written. After creating this file, I read it and I write it into MySQL.
But I dont understand why, but I got problem with encoding.
My MySQL database is in utf8, or seems to be SQL query <code>SHOW variables LIKE 'char%'</code> returns me only utf8 or binary.</p>

<p>My function looks like this : </p>

<pre><code>#!/usr/bin/python
# -*- coding: utf-8 -*-

def saveIndex(index,date):
    import MySQLdb as mdb
    import codecs

    sql = mdb.connect('localhost','admin','*******','music_vibration')
    sql.charset=""utf8""
    findex=open('config/index/'+index,'r')
    lines=findex.readlines()
    for line in lines:
        if line.find('#artiste') != -1:
            artiste=line.split('[:::]')
            artiste=artiste[1].replace('\n','')

            c=sql.cursor()
            c.execute('SELECT COUNT(id) AS nbr FROM artistes WHERE nom=""'+artiste+'""')
            nbr=c.fetchone()
            if nbr[0]==0:
                c=sql.cursor()
                iArt+=1
                c.execute('INSERT INTO artistes(nom,status,path) VALUES(""'+artiste+'"",99,""'+artiste+'/"")'.encode('utf8')
</code></pre>

<p>And artiste who are nicely displayed in the file writes bad into the BDD.
What is the problem ?</p>
","<p>You don't need to encode data that is <em>already</em> encoded. When you try to do that, Python will first try to <em>decode</em> it to <code>unicode</code> before it can encode it back to UTF-8. That is what is failing here:</p>

<pre><code>&gt;&gt;&gt; data = u'\u00c3'            # Unicode data
&gt;&gt;&gt; data = data.encode('utf8')  # encoded to UTF-8
&gt;&gt;&gt; data
'\xc3\x83'
&gt;&gt;&gt; data.encode('utf8')         # Try to *re*-encode it
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 0: ordinal not in range(128)
</code></pre>

<p>Just write your data directly to the file, there is <em>no</em> need to encode already-encoded data.</p>

<p>If you instead build up <code>unicode</code> values instead, you would indeed have to encode those to be writable to a file. You'd want to use <a href=""http://docs.python.org/2/library/codecs.html"" rel=""noreferrer""><code>codecs.open()</code></a> instead, which returns a file object that will encode unicode values to UTF-8 for you.</p>

<p>You also <em>really</em> don't want to write out the UTF-8 BOM, <em>unless</em> you <em>have</em> to support Microsoft tools that cannot read UTF-8 otherwise (such as MS Notepad).</p>

<p>For your MySQL insert problem, you need to do two things:</p>

<ul>
<li><p>Add <code>charset='utf8'</code> to your <code>MySQLdb.connect()</code> call.</p></li>
<li><p>Use <code>unicode</code> objects, not <code>str</code> objects when querying or inserting, but <em>use sql parameters</em> so the MySQL connector can do the right thing for you:</p>

<pre><code>artiste = artiste.decode('utf8')  # it is already UTF8, decode to unicode

c.execute('SELECT COUNT(id) AS nbr FROM artistes WHERE nom=%s', (artiste,))

# ...

c.execute('INSERT INTO artistes(nom,status,path) VALUES(%s, 99, %s)', (artiste, artiste + u'/'))
</code></pre></li>
</ul>

<p>It may actually work better if you used <code>codecs.open()</code> to decode the contents automatically instead:</p>

<pre><code>import codecs

sql = mdb.connect('localhost','admin','ugo&amp;(-@F','music_vibration', charset='utf8')

with codecs.open('config/index/'+index, 'r', 'utf8') as findex:
    for line in findex:
        if u'#artiste' not in line:
            continue

        artiste=line.split(u'[:::]')[1].strip()

    cursor = sql.cursor()
    cursor.execute('SELECT COUNT(id) AS nbr FROM artistes WHERE nom=%s', (artiste,))
    if not cursor.fetchone()[0]:
        cursor = sql.cursor()
        cursor.execute('INSERT INTO artistes(nom,status,path) VALUES(%s, 99, %s)', (artiste, artiste + u'/'))
        artists_inserted += 1
</code></pre>

<p>You may want to brush up on Unicode and UTF-8 and encodings. I can recommend the following articles:</p>

<ul>
<li><p>The <a href=""http://docs.python.org/2/howto/unicode.html"" rel=""noreferrer"">Python Unicode HOWTO</a></p></li>
<li><p><a href=""http://nedbatchelder.com/text/unipain.html"" rel=""noreferrer"">Pragmatic Unicode</a> by Ned Batchelder</p></li>
<li><p><a href=""http://joelonsoftware.com/articles/Unicode.html"" rel=""noreferrer"">The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!)</a> by Joel Spolsky</p></li>
</ul>
","15092535"
"run a python script in terminal without the python command","183400","","<p>I have a python script let's name it script1.py. I can run it in the terminal this way:</p>

<pre><code>python /path/script1.py
...
</code></pre>

<p>but I want to run like a command-line program:</p>

<pre><code>arbitraryname
...
</code></pre>

<p>how can i do it ?</p>
","<p>You use a <a href=""http://en.wikipedia.org/wiki/Shebang_(Unix)"" rel=""noreferrer"">shebang line</a> at the start of your script:</p>

<pre><code>#!/usr/bin/env python
</code></pre>

<p>make the file executable:</p>

<pre><code>chmod +x arbitraryname
</code></pre>

<p>and put it in a directory on your PATH (can be a symlink):</p>

<pre><code>cd ~/bin/
ln -s ~/some/path/to/myscript/arbitraryname
</code></pre>
","15587911"
"How to find elements by class","183335","","<p>I'm having trouble parsing html elements with ""class"" attribute using Beautifulsoup. The code looks like this</p>

<pre><code>soup = BeautifulSoup(sdata)
mydivs = soup.findAll('div')
for div in mydivs: 
    if (div[""class""]==""stylelistrow""):
        print div
</code></pre>

<p>I get an error on the same line ""after"" the script finishes. </p>

<pre><code>File ""./beautifulcoding.py"", line 130, in getlanguage
  if (div[""class""]==""stylelistrow""):
File ""/usr/local/lib/python2.6/dist-packages/BeautifulSoup.py"", line 599, in __getitem__
   return self._getAttrMap()[key]
KeyError: 'class'
</code></pre>

<p>How do I get rid or this error?</p>
","<p>You can refine your search to only find those divs with a given class using BS3:</p>

<pre class=""lang-py prettyprint-override""><code>mydivs = soup.findAll(""div"", {""class"": ""stylelistrow""})
</code></pre>
","5041056"
"What is a mixin, and why are they useful?","183301","","<p>In ""<a href=""http://rads.stackoverflow.com/amzn/click/0596009259"" rel=""noreferrer"">Programming Python</a>"", Mark Lutz mentions ""mixins"". I'm from a C/C++/C# background and I have not heard the term before. What is a mixin? </p>

<p>Reading between the lines of <a href=""http://books.google.com/books?id=5zYVUIl7F0QC&amp;pg=RA1-PA584&amp;lpg=RA1-PA584&amp;dq=programming+python+guimixin&amp;source=bl&amp;ots=HU833giXzH&amp;sig=jwLpxSp4m_VbOYQ897UDkGNx_2U&amp;hl=en&amp;ei=x8iRSaTTF5iq-ganpbGPCw&amp;sa=X&amp;oi=book_result&amp;resnum=3&amp;ct=result"" rel=""noreferrer"">this example</a> (which I've linked to because it's quite long), I'm presuming it's a case of using multiple inheritance to extend a class as opposed to 'proper' subclassing. Is this right? </p>

<p>Why would I want to do that rather than put the new functionality into a subclass? For that matter, why would a mixin/multiple inheritance approach be better than using composition?</p>

<p>What separates a mixin from multiple inheritance? Is it just a matter of semantics?</p>
","<p>A mixin is a special kind of multiple inheritance.  There are two main situations where mixins are used:</p>

<ol>
<li>You want to provide a lot of optional features for a class.</li>
<li>You want to use one particular feature in a lot of different classes.</li>
</ol>

<p>For an example of number one, consider <a href=""http://werkzeug.pocoo.org/docs/wrappers/"" rel=""noreferrer"">werkzeug's request and response system</a>.  I can make a plain old request object by saying:</p>

<pre><code>from werkzeug import BaseRequest

class Request(BaseRequest):
    pass
</code></pre>

<p>If I want to add accept header support, I would make that</p>

<pre><code>from werkzeug import BaseRequest, AcceptMixin

class Request(BaseRequest, AcceptMixin):
    pass
</code></pre>

<p>If I wanted to make a request object that supports accept headers, etags, authentication, and user agent support, I could do this:</p>

<pre><code>from werkzeug import BaseRequest, AcceptMixin, ETagRequestMixin, UserAgentMixin, AuthenticationMixin

class Request(BaseRequest, AcceptMixin, ETagRequestMixin, UserAgentMixin, AuthenticationMixin):
    pass
</code></pre>

<p>The difference is subtle, but in the above examples, the mixin classes weren't made to stand on their own.  In more traditional multiple inheritance, the <code>AuthenticationMixin</code> (for example) would probably be something more like <code>Authenticator</code>.  That is, the class would probably be designed to stand on its own.</p>
","547714"
"Writing a dict to txt file and reading it back?","183025","","<p>I am trying to write a dictionary to a txt file. Then read the dict values by typing the keys with <code>raw_input</code>. I feel like I am just missing one step but I have been looking for a while now.</p>

<p>I get this error</p>

<pre class=""lang-none prettyprint-override""><code>File ""name.py"", line 24, in reading
    print whip[name]
TypeError: string indices must be integers, not str
</code></pre>

<p>My code:</p>

<pre><code>#!/usr/bin/env python
from sys import exit

class Person(object):
    def __init__(self):
        self.name = """"
        self.address = """"
        self.phone = """"
        self.age = """"
        self.whip = {}

    def writing(self):
        self.whip[p.name] = p.age, p.address, p.phone
        target = open('deed.txt', 'a')
        target.write(str(self.whip))
        print self.whip

    def reading(self):
        self.whip = open('deed.txt', 'r').read()
        name = raw_input(""&gt; "")
        if name in self.whip:
            print self.whip[name]

p = Person()

while True:
    print ""Type:\n\t*read to read data base\n\t*write to write to data base\n\t*exit to exit""
    action = raw_input(""\n&gt; "")
    if ""write"" in action:
        p.name = raw_input(""Name?\n&gt; "")
        p.phone = raw_input(""Phone Number?\n&gt; "")
        p.age = raw_input(""Age?\n&gt; "")
        p.address = raw_input(""Address?\n&gt;"")
        p.writing()
    elif ""read"" in action:
        p.reading()
    elif ""exit"" in action:
        exit(0)
</code></pre>
","<p>Your code is <em>almost right</em>!  You are right, you are just missing one step.  When you read in the file, you are reading it as a string; but you want to turn the string back into a dictionary.</p>

<p>The error message you saw was because <code>self.whip</code> was a string, not a dictionary.</p>

<p>I first wrote that you could just feed the string into <code>dict()</code> but that doesn't work!  You need to do something else.</p>

<h2>Example</h2>

<p>Here is the simplest way: feed the string into <code>eval()</code>.  Like so:</p>

<pre><code>def reading(self):
    s = open('deed.txt', 'r').read()
    self.whip = eval(s)
</code></pre>

<p>You can do it in one line, but I think it looks messy this way:</p>

<pre><code>def reading(self):
    self.whip = eval(open('deed.txt', 'r').read())
</code></pre>

<p>But <code>eval()</code> is sometimes not recommended.  The problem is that <code>eval()</code> will evaluate <em>any</em> string, and if someone tricked you into running a really tricky string, something bad might happen.  In this case, you are just running <code>eval()</code> on your own file, so it should be okay.</p>

<p>But because <code>eval()</code> is useful, someone made an alternative to it that is safer.  This is called <code>literal_eval</code> and you get it from a Python module called <code>ast</code>.</p>

<pre><code>import ast

def reading(self):
    s = open('deed.txt', 'r').read()
    self.whip = ast.literal_eval(s)
</code></pre>

<p><code>ast.literal_eval()</code> will only evaluate strings that turn into the basic Python types, so there is no way that a tricky string can do something bad on your computer.</p>

<h2>EDIT</h2>

<p>Actually, best practice in Python is to use a <code>with</code> statement to make sure the file gets properly closed.  Rewriting the above to use a <code>with</code> statement:</p>

<pre><code>import ast

def reading(self):
    with open('deed.txt', 'r') as f:
        s = f.read()
        self.whip = ast.literal_eval(s)
</code></pre>

<p>In the most popular Python, known as ""CPython"", you usually don't need the <code>with</code> statement as the built-in ""garbage collection"" features will figure out that you are done with the file and will close it for you.  But other Python implementations, like ""Jython"" (Python for the Java VM) or ""PyPy"" (a really cool experimental system with just-in-time code optimization) might not figure out to close the file for you.  It's good to get in the habit of using <code>with</code>, and I think it makes the code pretty easy to understand.</p>
","11027069"
"get list of pandas dataframe columns based on data type","183024","","<p>If I have a dataframe with the following columns: </p>

<pre><code>1. NAME                                     object
2. On_Time                                      object
3. On_Budget                                    object
4. %actual_hr                                  float64
5. Baseline Start Date                  datetime64[ns]
6. Forecast Start Date                  datetime64[ns] 
</code></pre>

<p>I would like to be able to say: here is a dataframe, give me a list of the columns which are of type Object or of type DateTime?</p>

<p>I have a function which converts numbers (Float64) to two decimal places, and I would like to use this list of dataframe columns, of a particular type, and run it through this function to convert them all to 2dp.</p>

<p>Maybe:</p>

<pre><code>For c in col_list: if c.dtype = ""Something""
list[]
List.append(c)?
</code></pre>
","<p>If you want a list of columns of a certain type, you can use <code>groupby</code>:</p>

<pre><code>&gt;&gt;&gt; df = pd.DataFrame([[1, 2.3456, 'c', 'd', 78]], columns=list(""ABCDE""))
&gt;&gt;&gt; df
   A       B  C  D   E
0  1  2.3456  c  d  78

[1 rows x 5 columns]
&gt;&gt;&gt; df.dtypes
A      int64
B    float64
C     object
D     object
E      int64
dtype: object
&gt;&gt;&gt; g = df.columns.to_series().groupby(df.dtypes).groups
&gt;&gt;&gt; g
{dtype('int64'): ['A', 'E'], dtype('float64'): ['B'], dtype('O'): ['C', 'D']}
&gt;&gt;&gt; {k.name: v for k, v in g.items()}
{'object': ['C', 'D'], 'int64': ['A', 'E'], 'float64': ['B']}
</code></pre>
","22475141"
"Finding what methods a Python object has","182960","","<p>Given a Python object of any kind, is there an easy way to get the list of all methods that this object has?</p>

<p>Or,</p>

<p>if this is not possible, is there at least an easy way to check if it has a particular method other than simply checking if an error occurs when the method is called?</p>
","<p>It appears you can use this code, replacing 'object' with the object you're interested in:-</p>

<pre><code>[method_name for method_name in dir(object)
 if callable(getattr(object, method_name))]
</code></pre>

<p>I discovered it at <a href=""http://www.diveintopython.net/power_of_introspection/index.html"" rel=""noreferrer"">this site</a>, hopefully that should provide some further detail!</p>
","34452"
"How to make a Python script run like a service or daemon in Linux","182892","","<p>I have written a Python script that checks a certain e-mail address and passes new e-mails to an external program.  How can I get this script to execute 24/7, such as turning it into daemon or service in Linux.  Would I also need a loop that never ends in the program, or can it be done by just having the code re executed multiple times?</p>
","<p>You have two options here.</p>

<ol>
<li><p>Make a proper <strong>cron job</strong> that calls your script.  Cron is a common name for a GNU/Linux daemon that periodically launches scripts according to a schedule you set.  You add your script into a crontab or place a symlink to it into a special directory and the daemon handles the job of launching it in the background.  You can <a href=""http://en.wikipedia.org/wiki/Cron"" rel=""noreferrer"">read more</a> at wikipedia.  There is a variety of different cron daemons, but your GNU/Linux system should have it already installed.</p></li>
<li><p>Use some kind of <strong>python approach</strong> (a library, for example) for your script to be able to daemonize itself.  Yes, it will require a simple event loop (where your events are timer triggering, possibly, provided by sleep function).</p></li>
</ol>

<p>I wouldn't recommend you to choose 2., because you're in fact repeating cron functionality.  The Linux system paradigm is to let multiple simple tools interact and solve your problems.  Unless there are additional reasons why you should make a daemon (in addition to trigger periodically), choose the other approach.</p>

<p>Also, if you use daemonize with a loop and a crash happens, noone will check the mail after that (as pointed out by <a href=""https://stackoverflow.com/users/93988/ivan-nevostruev"">Ivan Nevostruev</a> in comments to <a href=""https://stackoverflow.com/questions/1603109/how-to-make-a-python-script-run-like-a-service-or-daemon-in-linux/1603146#1603146"">this</a> answer).  While if the script is added as a cron job, it will just trigger again.</p>
","1603138"
"Convert a string to integer with decimal in Python","182538","","<p>I have a string in the format: 'nn.nnnnn' in Python, and I'd like to convert it to an integer.</p>

<p>Direct conversion fails:</p>

<pre><code>&gt;&gt;&gt; s = '23.45678'
&gt;&gt;&gt; i = int(s)
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
ValueError: invalid literal for int() with base 10: '23.45678'
</code></pre>

<p>I can convert it to a decimal by using:</p>

<pre><code>&gt;&gt;&gt; from decimal import *
&gt;&gt;&gt; d = Decimal(s)
&gt;&gt;&gt; print d
23.45678
</code></pre>

<p>I could also split on '.', then subtract the decimal from zero, then add that to the whole number ... yuck.</p>

<p>But I'd prefer to have it as an int, without unnecessary type conversions or maneuvering.</p>
","<p>How about this?</p>

<pre><code>&gt;&gt;&gt; s = '23.45678'
&gt;&gt;&gt; int(float(s))
23
</code></pre>

<p>Or...</p>

<pre><code>&gt;&gt;&gt; int(Decimal(s))
23
</code></pre>

<p>Or...</p>

<pre><code>&gt;&gt;&gt; int(s.split('.')[0])
23
</code></pre>

<p>I doubt it's going to get much simpler than that, I'm afraid. Just accept it and move on.</p>
","1094721"
"How to get current CPU and RAM usage in Python?","182507","","<p>What's your preferred way of getting current system status (current CPU, RAM, free disk space, etc.) in Python? Bonus points for *nix and Windows platforms.</p>

<p>There seems to be a few possible ways of extracting that from my search:</p>

<ol>
<li><p>Using a library such as <a href=""http://www.psychofx.com/psi/trac/wiki/"">PSI</a> (that currently seems not actively developed and not supported on multiple platform) or something like <a href=""http://www.i-scream.org/pystatgrab/"">pystatgrab</a> (again no activity since 2007 it seems and no support for Windows).</p></li>
<li><p>Using platform specific code such as using a <code>os.popen(""ps"")</code> or similar for the *nix systems and <code>MEMORYSTATUS</code> in <code>ctypes.windll.kernel32</code> (see <a href=""http://code.activestate.com/recipes/511491/"">this recipe on ActiveState</a>) for the Windows platform. One could put a Python class together with all those code snippets.</p></li>
</ol>

<p>It's not that those methods are bad but is there already a well-supported, multi-platform way of doing the same thing?</p>
","<p><a href=""https://pypi.python.org/pypi/psutil"" rel=""noreferrer"">The psutil library</a> will give you some system information (CPU / Memory usage) on a variety of platforms:</p>

<blockquote>
  <p>psutil is a module providing an interface for retrieving information on running processes and system utilization (CPU, memory) in a portable way by using Python, implementing many functionalities offered by tools like ps, top  and Windows task manager.</p>
  
  <p>It currently supports Linux, Windows, OSX, Sun Solaris, FreeBSD, OpenBSD and NetBSD, both 32-bit and 64-bit architectures, with Python versions from 2.6 to 3.5 (users of Python 2.4 and 2.5 may use 2.1.3 version).</p>
</blockquote>
","2468983"
"iterating row by row through a pandas dataframe","182405","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/7837722/what-is-the-most-efficient-way-to-loop-through-dataframes-with-pandas"">What is the most efficient way to loop through dataframes with pandas?</a>  </p>
</blockquote>



<p>I'm looking to iterate row by row through a pandas <code>DataFrame</code>.  The way I'm doing it so far is as follows:</p>

<pre><code>for i in df.index:
    do_something(df.ix[i])
</code></pre>

<p>Is there a more performant and/or more idiomatic way to do this?  I know about apply, but sometimes it's more convenient to use a for loop.  Thanks in advance.</p>
","<p>You should use <a href=""http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.iterrows.html""><code>df.iterrows()</code></a>. Though iterating row-by-row is not especially efficient since Series objects have to be created.</p>
","10739432"
"Deleting a specific line in a file (python)","182150","","<p>Lets say I have a text file full of nicknames, how can I delete a specific nickname from that file?</p>
","<p>Assuming your file is in the format of one nickname per line, use this.</p>

<p>First, open the file:</p>

<pre><code>f = open(""yourfile.txt"",""r"")
</code></pre>

<p>Next, get all your lines from the file:</p>

<pre><code>lines = f.readlines()
</code></pre>

<p>Now you can close the file:</p>

<pre><code>f.close()
</code></pre>

<p>And reopen it in write mode:</p>

<pre><code>f = open(""yourfile.txt"",""w"")
</code></pre>

<p>Then, write your lines back, except the line you want to delete. You might want to change the <code>""\n""</code> to whatever line ending your file uses.</p>

<pre><code>for line in lines:
  if line!=""nickname_to_delete""+""\n"":
    f.write(line)
</code></pre>

<p>At the end, close the file again.</p>

<pre><code>f.close()
</code></pre>
","4710090"
"Reading a file without newlines","182018","","<p>In Python, calling</p>

<pre><code>temp = open(filename,'r').readlines()
</code></pre>

<p>results in a list in which each element is a line in the file. Its a little stupid but still: <code>readlines()</code> also writes newline character to each element, something I do not wish to happen. How can I avoid it? </p>
","<p>You can read the whole file and split lines using <a href=""https://docs.python.org/2/library/stdtypes.html#str.splitlines"" rel=""noreferrer""><code>str.splitlines</code></a>:</p>

<pre><code>temp = file.read().splitlines()
</code></pre>

<p>Or you can strip the newline by hand:</p>

<pre><code>temp = [line[:-1] for line in file]
</code></pre>

<p><strong>Note:</strong> this last solution only works if the file ends with a newline, otherwise the last line will lose a character.</p>

<p>This assumption is true in most cases (especially for files created by text editors, which often <em>do</em> add an ending newline anyway).</p>

<p>If you want to avoid this you can add a newline at the end of file:</p>

<pre><code>with open(the_file, 'r+') as f:
    f.seek(-1, 2)  # go at the end of the file
    if f.read(1) != '\n':
        # add missing newline if not already present
        f.write('\n')
        f.flush()
        f.seek(0)
    lines = [line[:-1] for line in f]
</code></pre>

<p>Or a simpler alternative is to <code>strip</code> the newline instead:</p>

<pre><code>[line.rstrip('\n') for line in file]
</code></pre>

<p>Or even, although pretty unreadable:</p>

<pre><code>[line[:-(line[-1] == '\n') or len(line)+1] for line in file]
</code></pre>

<p>Which exploits the fact that the return value of <code>or</code> isn't a boolean, but the object that was evaluated true or false.</p>

<hr>

<p>The <code>readlines</code> method is actually equivalent to:</p>

<pre><code>def readlines(self):
    lines = []
    for line in iter(self.readline, ''):
        lines.append(line)
    return lines

# or equivalently

def readlines(self):
    lines = []
    while True:
        line = self.readline()
        if not line:
            break
        lines.append(line)
    return lines
</code></pre>

<p>Since <code>readline()</code> keeps the newline also <code>readlines()</code> keeps it.</p>

<p><strong>Note:</strong> for symmetry to <code>readlines()</code> the <a href=""https://docs.python.org/3/library/io.html#io.IOBase.writelines"" rel=""noreferrer""><code>writelines()</code></a> method does <em>not</em> add ending newlines, so <code>f2.writelines(f.readlines())</code> produces an exact copy of <code>f</code> in <code>f2</code>.</p>
","12330535"
"Disable output buffering","181877","","<p>Is output buffering enabled by default in Python's interpreter for <code>sys.stdout</code>?</p>

<p>If the answer is positive, what are all the ways to disable it?</p>

<p>Suggestions so far:</p>

<ol>
<li>Use the <code>-u</code> command line switch</li>
<li>Wrap <code>sys.stdout</code> in an object that flushes after every write</li>
<li>Set <code>PYTHONUNBUFFERED</code> env var</li>
<li><code>sys.stdout = os.fdopen(sys.stdout.fileno(), 'w', 0)</code></li>
</ol>

<p>Is there any other way to set some global flag in <code>sys</code>/<code>sys.stdout</code> programmatically during execution?</p>
","<p>From <a href=""http://mail.python.org/pipermail/tutor/2003-November/026645.html"" rel=""noreferrer"">Magnus Lycka answer on a mailing list</a>:</p>

<blockquote>
  <p>You can skip buffering for a whole
  python process using ""python -u"" 
  (or#!/usr/bin/env python -u etc) or by
  setting the environment variable
  PYTHONUNBUFFERED.</p>
  
  <p>You could also replace sys.stdout with
  some other stream like wrapper which
  does a flush after every call.</p>

<pre><code>class Unbuffered(object):
   def __init__(self, stream):
       self.stream = stream
   def write(self, data):
       self.stream.write(data)
       self.stream.flush()
   def writelines(self, datas):
       self.stream.writelines(datas)
       self.stream.flush()
   def __getattr__(self, attr):
       return getattr(self.stream, attr)

import sys
sys.stdout = Unbuffered(sys.stdout)
print 'Hello'
</code></pre>
</blockquote>
","107717"
"How do I send a POST request as a JSON?","181660","","<pre><code>data = {
        'ids': [12, 3, 4, 5, 6 , ...]
    }
    urllib2.urlopen(""http://abc.com/api/posts/create"",urllib.urlencode(data))
</code></pre>

<p>I want to send a POST request, but one of the fields should be a list of numbers. How can I do that ? (JSON?)</p>
","<p>If your server is expecting the POST request to be json, then you would need to add a header, and also serialize the data for your request...</p>

<pre><code>import json
import urllib2

data = {
        'ids': [12, 3, 4, 5, 6]
}

req = urllib2.Request('http://example.com/api/posts/create')
req.add_header('Content-Type', 'application/json')

response = urllib2.urlopen(req, json.dumps(data))
</code></pre>

<p>If you don't specify the header, it will be the default <code>application/x-www-form-urlencoded</code> type.</p>
","9746432"
"Why are there no ++ and --​ operators in Python?","181565","","<p>Why are there no <code>++</code> and <code>--</code> operators in Python?</p>
","<p>It's not because it doesn't make sense; it makes perfect sense to define ""x++"" as ""x += 1, evaluating to the previous binding of x"".</p>

<p>If you want to know the original reason, you'll have to either wade through old Python mailing lists or ask somebody who was there (eg. Guido), but it's easy enough to justify after the fact:</p>

<p>Simple increment and decrement aren't needed as much as in other languages.  You don't write things like <code>for(int i = 0; i &lt; 10; ++i)</code> in Python very often; instead you do things like <code>for i in range(0, 10)</code>.</p>

<p>Since it's not needed nearly as often, there's much less reason to give it its own special syntax; when you do need to increment, <code>+=</code> is usually just fine.</p>

<p>It's not a decision of whether it makes sense, or whether it can be done--it does, and it can.  It's a question of whether the benefit is worth adding to the core syntax of the language.  Remember, this is <em>four</em> operators--postinc, postdec, preinc, predec, and each of these would need to have its own class overloads; they all need to be specified, and tested; it would add opcodes to the language (implying a larger, and therefore slower, VM engine); every class that supports a logical increment would need to implement them (on top of <code>+=</code> and <code>-=</code>).</p>

<p>This is all redundant with <code>+=</code> and <code>-=</code>, so it would become a net loss.</p>
","3654936"
"initialize a numpy array","181246","","<p>Is there way to initialize a numpy array of a shape and add to it? I will explain what I need with a list example. If I want to create a list of objects generated in a loop, I can do:</p>

<pre><code>a = []
for i in range(5):
    a.append(i)
</code></pre>

<p>I want to do something similar with a numpy array. I know about vstack, concatenate etc. However, it seems these require two numpy arrays as inputs. What I need is:</p>

<pre><code>big_array # Initially empty. This is where I don't know what to specify
for i in range(5):
    array i of shape = (2,4) created.
    add to big_array
</code></pre>

<p>The <code>big_array</code> should have a shape <code>(10,4)</code>. How to do this?</p>

<hr>

<p><strong>EDIT:</strong></p>

<p>I want to add the following clarification. I am aware that I can define <code>big_array = numpy.zeros((10,4))</code> and then fill it up. However, this requires specifying the size of big_array in advance. I know the size in this case, but what if I do not? When we use the <code>.append</code> function for extending the list in python, we don't need to know its final size in advance. I am wondering if something similar exists for creating a bigger array from smaller arrays, starting with an empty array.</p>
","<blockquote>
  <p><a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.zeros.html""><code>numpy.zeros</code></a></p>
  
  <p>Return a new array of given shape and
  type, filled with zeros.</p>
</blockquote>

<p>or</p>

<blockquote>
  <p><a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.ones.html""><code>numpy.ones</code></a></p>
  
  <p>Return a new array of given shape and
  type, filled with ones.</p>
</blockquote>

<p>or</p>

<blockquote>
  <p><a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.empty.html#numpy.empty""><code>numpy.empty</code></a></p>
  
  <p>Return a new array of given shape and
  type, without initializing entries.</p>
</blockquote>

<hr>

<p>However, the mentality in which we construct an array by appending elements to a list is not much used in numpy, because it's less efficient (numpy datatypes are much closer to the underlying C arrays). Instead, you should preallocate the array to the size that you need it to be, and then fill in the rows. You can use <code>numpy.append</code> if you must, though.</p>
","4535387"
"How to find all occurrences of an element in a list?","181088","","<p><a href=""https://docs.python.org/2/tutorial/datastructures.html#more-on-lists"" rel=""noreferrer""><code>index()</code></a> will just give the first occurrence of an item in a list. Is there a neat trick which returns all indices in a list?</p>
","<p>You can use a list comprehension:</p>

<pre><code>indices = [i for i, x in enumerate(my_list) if x == ""whatever""]
</code></pre>
","6294205"
"Python using enumerate inside list comprehension","181015","","<p>Lets suppose I have a list like this:</p>

<pre><code>mylist = [""a"",""b"",""c"",""d""]
</code></pre>

<p>To get the values printed along with their index I can use Python's <code>enumerate</code> function like this</p>

<pre><code>&gt;&gt;&gt; for i,j in enumerate(mylist):
...     print i,j
...
0 a
1 b
2 c
3 d
&gt;&gt;&gt;
</code></pre>

<p>Now, when I try to use it inside a <code>list comprehension</code> it gives me this error</p>

<pre><code>&gt;&gt;&gt; [i,j for i,j in enumerate(mylist)]
  File ""&lt;stdin&gt;"", line 1
    [i,j for i,j in enumerate(mylist)]
           ^
SyntaxError: invalid syntax
</code></pre>

<p>So, my question is: what is the correct way of using enumerate inside list comprehension?</p>
","<p>Try this:</p>

<pre><code>[(i, j) for i, j in enumerate(mylist)]
</code></pre>

<p>You need to put <code>i,j</code> inside a tuple for the list comprehension to work. Alternatively, given that <code>enumerate()</code> <em>already</em> returns a tuple, you can return it directly without unpacking it first:</p>

<pre><code>[pair for pair in enumerate(mylist)]
</code></pre>

<p>Either way, the result that gets returned is as expected:</p>

<pre><code>&gt; [(0, 'a'), (1, 'b'), (2, 'c'), (3, 'd')]
</code></pre>
","10777287"
"Multiprocessing vs Threading Python","180993","","<p>I am trying to understand the advantages of <a href=""http://docs.python.org/library/multiprocessing"" rel=""noreferrer"">multiprocessing</a> over <a href=""http://docs.python.org/library/threading"" rel=""noreferrer"">threading</a>. I know that <strong>multiprocessing</strong> gets around the Global Interpreter Lock, but what other advantages are there, and can <strong>threading</strong> not do the same thing?</p>
","<p>The <code>threading</code> module uses threads, the <code>multiprocessing</code> module uses processes. The difference is that threads run in the same memory space, while processes have separate memory. This makes it a bit harder to share objects between processes with multiprocessing. Since threads use the same memory, precautions have to be taken or two threads will write to the same memory at the same time. This is what the global interpreter lock is for.</p>

<p>Spawning processes is a bit slower than spawning threads. Once they are running, there is not much difference.</p>
","3044626"
"How do you extract a JAR in a UNIX filesystem with a single command and specify its target directory using the JAR command?","180825","","<p>I am creating a Python script within which I am executing UNIX system commands. I have a
war archive named Binaries.war which is within an ear archive named Portal.ear</p>

<p>The Portal ear file resides in, say /home/foo/bar/</p>

<pre><code>jar xf /home/foo/bar/Portal.ear Binaries.war
</code></pre>

<p>Will extract the Binaries.war file out of the /home/foo/bar/Portal.ear archive into the current directory I am running the script from.</p>

<p>How do you specify a target directory to be extracted to using just one command? 
I would like to do something like this to extract Binaries.war into the directory /home/foo/bar/baz </p>

<pre><code>jar xf /home/foo/bar/Portal.ear Binaries.war [into target directory /home/foo/bar/baz]
</code></pre>

<p>I searched the the JAR man page for options and can't seem to find a simple way to do this. Of course I can extract the archive into my current directory and then move it using mv but I'd like to do this in one shot and not shuffle directories and files around.</p>
","<p>If your jar file already has an absolute pathname as shown, it is particularly easy:</p>

<pre><code>cd /where/you/want/it; jar xf /path/to/jarfile.jar
</code></pre>

<p>That is, you have the shell executed by Python change directory for you and then run the extraction.</p>

<p>If your jar file does not already have an absolute pathname, then you have to convert the relative name to absolute (by prefixing it with the path of the current directory) so that <code>jar</code> can find it after the change of directory.</p>

<p>The only issues left to worry about are things like blanks in the path names.</p>
","1079803"
"How to pretty-printing a numpy.array without scientific notation and with given precision?","180819","","<p>I'm curious, whether there is any way to print formatted numpy.arrays, e.g., in the way similar to this:</p>

<pre><code>x = 1.23456
print '%.3f' % x
</code></pre>

<p>If I want to print the numpy.array of floats, it prints several decimals, often in 'scientific' format, which is rather hard to read even for low-dimensional arrays. However, numpy.array apparently has to be printed as a string, i.e., with %s. Is there any solution for this purpose? </p>
","<p>You can use <code>set_printoptions</code> to set the precision of the output:</p>

<pre><code>import numpy as np
x=np.random.random(10)
print(x)
# [ 0.07837821  0.48002108  0.41274116  0.82993414  0.77610352  0.1023732
#   0.51303098  0.4617183   0.33487207  0.71162095]

np.set_printoptions(precision=3)
print(x)
# [ 0.078  0.48   0.413  0.83   0.776  0.102  0.513  0.462  0.335  0.712]
</code></pre>

<p>And <code>suppress</code> suppresses the use of scientific notation for small numbers:</p>

<pre><code>y=np.array([1.5e-10,1.5,1500])
print(y)
# [  1.500e-10   1.500e+00   1.500e+03]
np.set_printoptions(suppress=True)
print(y)
# [    0.      1.5  1500. ]
</code></pre>

<p>See the <a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.set_printoptions.html"" rel=""noreferrer"">docs for set_printoptions</a> for other options.</p>

<hr>

<p><strong>To apply print options locally</strong>, you could use a <a href=""http://docs.python.org/2/library/contextlib.html#contextlib.contextmanager"" rel=""noreferrer"">contextmanager</a>:</p>

<pre><code>import numpy as np
import contextlib

@contextlib.contextmanager
def printoptions(*args, **kwargs):
    original = np.get_printoptions()
    np.set_printoptions(*args, **kwargs)
    try:
        yield
    finally: 
        np.set_printoptions(**original)
</code></pre>

<p>For example, inside the <code>with-suite</code> <code>precision=3</code> and <code>suppress=True</code> are set:</p>

<pre><code>x = np.random.random(10)
with printoptions(precision=3, suppress=True):
    print(x)
    # [ 0.073  0.461  0.689  0.754  0.624  0.901  0.049  0.582  0.557  0.348]
</code></pre>

<p>But outside the <code>with-suite</code> the print options are back to default settings:</p>

<pre><code>print(x)    
# [ 0.07334334  0.46132615  0.68935231  0.75379645  0.62424021  0.90115836
#   0.04879837  0.58207504  0.55694118  0.34768638]
</code></pre>

<hr>

<p><strong>To prevent zeros from being stripped from the end of floats:</strong></p>

<p><code>np.set_printoptions</code> now has a <code>formatter</code> parameter which allows you to specify a format function for each type.</p>

<pre><code>np.set_printoptions(formatter={'float': '{: 0.3f}'.format})
print(x)
</code></pre>

<p>which prints</p>

<pre><code>[ 0.078  0.480  0.413  0.830  0.776  0.102  0.513  0.462  0.335  0.712]
</code></pre>

<p>instead of </p>

<pre><code>[ 0.078  0.48   0.413  0.83   0.776  0.102  0.513  0.462  0.335  0.712]
</code></pre>
","2891805"
"Set Colorbar Range in matplotlib","180681","","<p>I have the following code:</p>

<pre><code>import matplotlib.pyplot as plt

cdict = {
  'red'  :  ( (0.0, 0.25, .25), (0.02, .59, .59), (1., 1., 1.)),
  'green':  ( (0.0, 0.0, 0.0), (0.02, .45, .45), (1., .97, .97)),
  'blue' :  ( (0.0, 1.0, 1.0), (0.02, .75, .75), (1., 0.45, 0.45))
}

cm = m.colors.LinearSegmentedColormap('my_colormap', cdict, 1024)

plt.clf()
plt.pcolor(X, Y, v, cmap=cm)
plt.loglog()
plt.xlabel('X Axis')
plt.ylabel('Y Axis')

plt.colorbar()
plt.show()
</code></pre>

<p>So this produces a graph of the values 'v' on the axes X vs Y, using the specified colormap. The X and Y axes are perfect, but the colormap spreads between the min and max of v. I would like to force the colormap to range between 0 and 1.</p>

<p>I thought of using:</p>

<pre><code>plt.axis(...)
</code></pre>

<p>To set the ranges of the axes, but this only takes arguments for the min and max of X and Y, not the colormap.</p>

<p><strong>Edit:</strong></p>

<p>For clarity, let's say I have one graph whose values range (0 ... 0.3), and another graph whose values (0.2 ... 0.8).</p>

<p>In both graphs, I will want the range of the colorbar to be (0 ... 1). In both graphs, I want this range of colour to be identical using the full range of cdict above (so 0.25 in both graphs will be the same colour). In the first graph, all colours between 0.3 and 1.0 won't feature in the graph, but will in the colourbar key at the side. In the other, all colours between 0 and 0.2, and between 0.8 and 1 will not feature in the graph, but will in the colourbar at the side.</p>
","<p>Using <code>vmin</code> and <code>vmax</code> forces the range for the colors.  Here's an example:</p>

<p><a href=""https://i.stack.imgur.com/orLmA.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/orLmA.png"" alt=""enter image description here""></a></p>

<pre><code>import matplotlib as m
import matplotlib.pyplot as plt
import numpy as np

cdict = {
  'red'  :  ( (0.0, 0.25, .25), (0.02, .59, .59), (1., 1., 1.)),
  'green':  ( (0.0, 0.0, 0.0), (0.02, .45, .45), (1., .97, .97)),
  'blue' :  ( (0.0, 1.0, 1.0), (0.02, .75, .75), (1., 0.45, 0.45))
}

cm = m.colors.LinearSegmentedColormap('my_colormap', cdict, 1024)

x = np.arange(0, 10, .1)
y = np.arange(0, 10, .1)
X, Y = np.meshgrid(x,y)

data = 2*( np.sin(X) + np.sin(3*Y) )

def do_plot(n, f, title):
    #plt.clf()
    plt.subplot(1, 3, n)
    plt.pcolor(X, Y, f(data), cmap=cm, vmin=-4, vmax=4)
    plt.title(title)
    plt.colorbar()

plt.figure()
do_plot(1, lambda x:x, ""all"")
do_plot(2, lambda x:np.clip(x, -4, 0), ""&lt;0"")
do_plot(3, lambda x:np.clip(x, 0, 4), ""&gt;0"")
plt.show()
</code></pre>
","3376734"
"Running Python on Windows for Node.js dependencies","180236","","<p>I am getting into a Node.js codebase which requires that I download a few dependencies via NPM, namely jQuery.</p>

<p>In attempting to run <code>npm install jquery</code>, I keep getting this error:</p>

<pre><code>Your environment has been set up for using Node.js 0.8.21 (x64) and NPM

C:\Users\Matt Cashatt&gt;npm install jquery
npm http GET https://registry.npmjs.org/jquery
npm http 304 https://registry.npmjs.org/jquery
npm http GET https://registry.npmjs.org/jsdom
npm http GET https://registry.npmjs.org/xmlhttprequest
npm http GET https://registry.npmjs.org/htmlparser/1.7.6
npm http GET https://registry.npmjs.org/location/0.0.1
npm http GET https://registry.npmjs.org/navigator
npm http GET https://registry.npmjs.org/contextify
npm http 304 https://registry.npmjs.org/htmlparser/1.7.6
npm http 304 https://registry.npmjs.org/xmlhttprequest
npm http 304 https://registry.npmjs.org/location/0.0.1
npm http 304 https://registry.npmjs.org/navigator
npm http 304 https://registry.npmjs.org/jsdom
npm http 304 https://registry.npmjs.org/contextify
npm http GET https://registry.npmjs.org/bindings
npm http GET https://registry.npmjs.org/cssom
npm http GET https://registry.npmjs.org/cssstyle
npm http GET https://registry.npmjs.org/request
npm http 304 https://registry.npmjs.org/bindings

&gt; contextify@0.1.4 install C:\Users\Matt Cashatt\node_modules\jquery\node_module
s\contextify
&gt; node-gyp rebuild


C:\Users\Matt Cashatt\node_modules\jquery\node_modules\contextify&gt;node ""C:\Progr
am Files\nodejs\node_modules\npm\bin\node-gyp-bin\\..\..\node_modules\node-gyp\b
in\node-gyp.js"" rebuild
npm http 304 https://registry.npmjs.org/cssstyle
npm http 304 https://registry.npmjs.org/cssom
npm http 304 https://registry.npmjs.org/request
gyp ERR! configure error
gyp ERR! stack Error: Can't find Python executable ""python"", you can set the PYT
HON env variable.
gyp ERR! stack     at failNoPython (C:\Program Files\nodejs\node_modules\npm\nod
e_modules\node-gyp\lib\configure.js:113:14)
gyp ERR! stack     at C:\Program Files\nodejs\node_modules\npm\node_modules\node
-gyp\lib\configure.js:82:11
gyp ERR! stack     at Object.oncomplete (fs.js:297:15)
gyp ERR! System Windows_NT 6.1.7601
gyp ERR! command ""node"" ""C:\\Program Files\\nodejs\\node_modules\\npm\\node_modu
les\\node-gyp\\bin\\node-gyp.js"" ""rebuild""
gyp ERR! cwd C:\Users\Matt Cashatt\node_modules\jquery\node_modules\contextify
gyp ERR! node -v v0.8.21
gyp ERR! node-gyp -v v0.8.4
gyp ERR! not ok
npm ERR! error rolling back Error: ENOTEMPTY, rmdir 'C:\Users\Matt Cashatt\node_
modules\jquery\node_modules\jsdom\node_modules\request\tests'
npm ERR! error rolling back  jquery@1.8.3 { [Error: ENOTEMPTY, rmdir 'C:\Users\M
att Cashatt\node_modules\jquery\node_modules\jsdom\node_modules\request\tests']
npm ERR! error rolling back   errno: 53,
npm ERR! error rolling back   code: 'ENOTEMPTY',
npm ERR! error rolling back   path: 'C:\\Users\\Matt Cashatt\\node_modules\\jque
ry\\node_modules\\jsdom\\node_modules\\request\\tests' }
npm ERR! contextify@0.1.4 install: `node-gyp rebuild`
npm ERR! `cmd ""/c"" ""node-gyp rebuild""` failed with 1
npm ERR!
npm ERR! Failed at the contextify@0.1.4 install script.
npm ERR! This is most likely a problem with the contextify package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     node-gyp rebuild
npm ERR! You can get their info via:
npm ERR!     npm owner ls contextify
npm ERR! There is likely additional logging output above.

npm ERR! System Windows_NT 6.1.7601
npm ERR! command ""C:\\Program Files\\nodejs\\\\node.exe"" ""C:\\Program Files\\nod
ejs\\node_modules\\npm\\bin\\npm-cli.js"" ""install"" ""jquery""
npm ERR! cwd C:\Users\Matt Cashatt
npm ERR! node -v v0.8.21
npm ERR! npm -v 1.2.11
npm ERR! code ELIFECYCLE
npm ERR! Error: ENOENT, lstat 'C:\Users\Matt Cashatt\node_modules\jquery\node_mo
dules\jsdom\node_modules\request\tests\test-pipes.js'
npm ERR! If you need help, you may report this log at:
npm ERR!     &lt;http://github.com/isaacs/npm/issues&gt;
npm ERR! or email it to:
npm ERR!     &lt;npm-@googlegroups.com&gt;

npm ERR! System Windows_NT 6.1.7601
npm ERR! command ""C:\\Program Files\\nodejs\\\\node.exe"" ""C:\\Program Files\\nod
ejs\\node_modules\\npm\\bin\\npm-cli.js"" ""install"" ""jquery""
npm ERR! cwd C:\Users\Matt Cashatt
npm ERR! node -v v0.8.21
npm ERR! npm -v 1.2.11
npm ERR! path C:\Users\Matt Cashatt\node_modules\jquery\node_modules\jsdom\node_
modules\request\tests\test-pipes.js
npm ERR! fstream_path C:\Users\Matt Cashatt\node_modules\jquery\node_modules\jsd
om\node_modules\request\tests\test-pipes.js
npm ERR! fstream_type File
npm ERR! fstream_class FileWriter
npm ERR! code ENOENT
npm ERR! errno 34
npm ERR! fstream_stack C:\Program Files\nodejs\node_modules\npm\node_modules\fst
ream\lib\writer.js:284:26
npm ERR! fstream_stack Object.oncomplete (fs.js:297:15)
npm ERR!
npm ERR! Additional logging details can be found in:
npm ERR!     C:\Users\Matt Cashatt\npm-debug.log
npm ERR! not ok code 0

C:\Users\Matt Cashatt&gt;
</code></pre>

<p>It looks like the failure is due to a missing Python installation.  Well, I have installed Python, set the variable, and rebooted and still the error.</p>

<p>Any clue as to what I am missing?</p>
","<p>Your problem is that you <em>didn't</em> set the environment variable.</p>

<p>The error clearly says this:</p>

<pre><code>gyp ERR! stack Error: Can't find Python executable ""python"", you can set the PYTHON env variable.
</code></pre>

<p>And in your comment, you say you did this:</p>

<pre><code>set PYTHONPATH=%PYTHONPATH%;C:\My_python_lib
</code></pre>

<p>That's nice, but that doesn't set the <code>PYTHON</code> variable, it sets the <code>PYTHONPATH</code> variable.</p>

<hr>

<p>Meanwhile, just using the <code>set</code> command only affects the current <code>cmd</code> session. If you reboot after that, as you say you did, you end up with a whole new <code>cmd</code> session that doesn't have that variable set in it.</p>

<p>There are a few ways to set environment variables permanently—the easiest is in the System Control Panel in XP, which is of course different in Vista, different again in 7, and different again in 8, but you can google for it.</p>

<p>Alternatively, just do the <code>set</code> right before the <code>npm</code> command, without rebooting in between.</p>

<hr>

<p>You can test whether you've done things right by doing the exact same thing the config script is trying to do: Before running <code>npm</code>, try running <code>%PYTHON%</code>. If you've done it right, you'll get a Python interpreter (which you can immediately quit). If you get an error, you haven't done it right.</p>

<hr>

<p>There are two problems with this:</p>

<pre><code>set PYTHON=%PYTHON%;D:\Python
</code></pre>

<p>First, you're setting <code>PYTHON</code> to <code>;D:\Python</code>. That extra semicolon is fine for a semicolon-separated list of paths, like <code>PATH</code> or <code>PYTHONPATH</code>, but not for a single value like <code>PYTHON</code>. And likewise, adding a new value to the existing value is what you want when you want to add another path to a list of paths, but not for a single value. So, you just want <code>set PYTHON=D:\Python</code>.</p>

<p>Second, <code>D:\Python</code> is not the path to your Python interpreter. It's something like <code>D:\Python\Python.exe</code>, or <code>D:\Python\bin\Python.exe</code>. Find the right path, make sure it works on its own (e.g., type <code>D:\Python\bin\Python.exe</code> and make sure you get a Python interpreter), then set the variable and use it.</p>

<hr>

<p>So:</p>

<pre><code>set PYTHON=D:\Python\bin\Python.exe
</code></pre>

<p>Or, if you want to make it permanent, do the equivalent in the Control Panel.</p>
","15126180"
"Remove all line breaks from a long string of text","179839","","<p>Basically, I'm asking the user to input a string of text into the console, but the string is very long and includes many line breaks.  How would I take the user's string and delete all line breaks to make it a single line of text.  My method for acquiring the string is very simple.</p>

<pre><code>string = raw_input(""Please enter string: "")
</code></pre>

<p>Is there a different way I should be grabbing the string from the user?  I'm running Python 2.7.4 on a Mac.</p>

<p>P.S. Clearly I'm a noob, so even if a solution isn't the most efficient, the one that uses the most simple syntax would be appreciated.</p>
","<p>How do you enter line breaks with <code>raw_input</code>? But, once you have a string with some characters in it you want to get rid of, just <code>replace</code> them.</p>

<pre><code>&gt;&gt;&gt; mystr = raw_input('please enter string: ')
please enter string: hello world, how do i enter line breaks?
&gt;&gt;&gt; # pressing enter didn't work...
...
&gt;&gt;&gt; mystr
'hello world, how do i enter line breaks?'
&gt;&gt;&gt; mystr.replace(' ', '')
'helloworld,howdoienterlinebreaks?'
&gt;&gt;&gt;
</code></pre>

<p>In the example above, I replaced all spaces. The string <code>'\n'</code> represents newlines. And <code>\r</code> represents carriage returns (if you're on windows, you might be getting these and a second <code>replace</code> will handle them for you!).</p>

<p>basically:</p>

<pre><code># you probably want to use a space ' ' to replace `\n`
mystring = mystring.replace('\n', ' ').replace('\r', '')
</code></pre>

<p>Note also, that it is a bad idea to call your variable <code>string</code>, as this shadows the module <code>string</code>. Another name I'd avoid but would love to use sometimes: <code>file</code>. For the same reason.</p>
","16566356"
"Could not find a version that satisfies the requirement <package>","179522","","<p>I'm installing several Python packages in Ubuntu 12.04 using the following <code>requirements.txt</code> file:</p>

<pre><code>numpy&gt;=1.8.2,&lt;2.0.0
matplotlib&gt;=1.3.1,&lt;2.0.0
scipy&gt;=0.14.0,&lt;1.0.0
astroML&gt;=0.2,&lt;1.0
scikit-learn&gt;=0.14.1,&lt;1.0.0
rpy2&gt;=2.4.3,&lt;3.0.0
</code></pre>

<p>and these two commands:</p>

<pre><code>$ pip install --download=/tmp -r requirements.txt
$ pip install --user --no-index --find-links=/tmp -r requirements.txt
</code></pre>

<p>(the first one downloads the packages and the second one installs them).</p>

<p>The process is frequently stopped with the error:</p>

<pre><code>  Could not find a version that satisfies the requirement &lt;package&gt; (from matplotlib&lt;2.0.0,&gt;=1.3.1-&gt;-r requirements.txt (line 2)) (from versions: )
No matching distribution found for &lt;package&gt; (from matplotlib&lt;2.0.0,&gt;=1.3.1-&gt;-r requirements.txt (line 2))
</code></pre>

<p>which I fix manually with:</p>

<pre><code>pip install --user &lt;package&gt;
</code></pre>

<p>and then run the second <code>pip install</code> command again.</p>

<p>But that only works for <em>that</em> particular package. When I run the second <code>pip install</code> command again, the process is stopped now complaining about <em>another</em> required package and I need to repeat the process again, ie: install the new required package manually (with the command above) and then run the second <code>pip install</code> command.</p>

<p>So far I've had to manually install <code>six</code>, <code>pytz</code>, <code>nose</code>, and now it's complaining about needing <code>mock</code>.</p>

<p>Is there a way to tell <code>pip</code> to automatically install <em>all</em> needed dependencies so I don't have to do it manually one by one?</p>

<p><strong>Add</strong>: This only happens in Ubuntu 12.04 BTW. In Ubuntu 14.04 the <code>pip install</code> commands applied on the <code>requirements.txt</code> file work without issues.</p>
","<p>This approach (having all dependencies in a directory and not downloading from an index) only works when the directory contains all packages. The directory should therefore contain all dependencies but also all packages that those dependencies depend on (e.g., <code>six</code>, <code>pytz</code> etc).</p>

<p>You should therefore manually include these in <code>requirements.txt</code> (so that the first step downloads them explicitly) or you should install all packages using PyPI and then <code>pip freeze &gt; requirements.txt</code> to store the list of all packages needed.</p>
","32302448"
"Text Progress Bar in the Console","179440","","<p>Is there a good way to do the following?</p>

<p>I wrote a simple console app to upload and download files from an FTP server using the ftplib.</p>

<p>Each time some data chunks are downloaded, I want to update a text progress bar, even if it's just a number.</p>

<p>But I don't want to erase all the text that's been printed to the console. (Doing a ""clear"" and then printing the updated percentage.)</p>
","<p>Here's an aggregate of many of the answers below that I use regularly. </p>

<pre><code># Print iterations progress
def printProgressBar (iteration, total, prefix = '', suffix = '', decimals = 1, length = 100, fill = '█'):
    """"""
    Call in a loop to create terminal progress bar
    @params:
        iteration   - Required  : current iteration (Int)
        total       - Required  : total iterations (Int)
        prefix      - Optional  : prefix string (Str)
        suffix      - Optional  : suffix string (Str)
        decimals    - Optional  : positive number of decimals in percent complete (Int)
        length      - Optional  : character length of bar (Int)
        fill        - Optional  : bar fill character (Str)
    """"""
    percent = (""{0:."" + str(decimals) + ""f}"").format(100 * (iteration / float(total)))
    filledLength = int(length * iteration // total)
    bar = fill * filledLength + '-' * (length - filledLength)
    print('\r%s |%s| %s%% %s' % (prefix, bar, percent, suffix), end = '\r')
    # Print New Line on Complete
    if iteration == total: 
        print()

# 
# Sample Usage
# 

from time import sleep

# A List of Items
items = list(range(0, 57))
l = len(items)

# Initial call to print 0% progress
printProgressBar(0, l, prefix = 'Progress:', suffix = 'Complete', length = 50)
for i, item in enumerate(items):
    # Do stuff...
    sleep(0.1)
    # Update Progress Bar
    printProgressBar(i + 1, l, prefix = 'Progress:', suffix = 'Complete', length = 50)

# Sample Output
Progress: |█████████████████████████████████████████████-----| 90.0% Complete
</code></pre>
","34325723"
"Getting a map() to return a list in Python 3.x","179057","","<p>I'm trying to map a list into hex, and then use the list elsewhere. In python 2.6, this was easy:</p>

<p><strong>A:</strong> Python 2.6:</p>

<pre><code>&gt;&gt;&gt; map(chr, [66, 53, 0, 94])
['B', '5', '\x00', '^']
</code></pre>

<p>However, on Python 3.1, the above returns a map object.</p>

<p><strong>B:</strong> Python 3.1:</p>

<pre><code>&gt;&gt;&gt; map(chr, [66, 53, 0, 94])
&lt;map object at 0x00AF5570&gt;
</code></pre>

<p>How do I retrieve the mapped list (as in <strong>A</strong> above) on Python 3.x? </p>

<p>Alternatively, is there a better way of doing this? My initial list object has around 45 items and id like to convert them to hex.</p>
","<p>Do this:</p>

<pre><code>list(map(chr,[66,53,0,94]))
</code></pre>

<p>In Python 3+, many processes that iterate over iterables return iterators themselves.  In most cases, this ends up saving memory, and should make things go faster.   </p>

<p>If all you're going to do is iterate over this list eventually, there's no need to even convert it to a list, because you can still iterate over the <code>map</code> object like so:</p>

<pre><code># Prints ""ABCD""
for ch in map(chr,[65,66,67,68]):
    print(ch)
</code></pre>
","1303354"
"filename.whl is not supported wheel on this platform","178953","","<p>I would like to install <code>scipy-0.15.1-cp33-none-win_amd64.whl</code> that I have saved to local drive. I am using:</p>

<pre><code>pip 6.0.8 from C:\Python27\Lib\site-packages
python 2.7.9 (default, Dec 10 2014, 12:28:03) [MSC v.1500 64 bit (AMD64)]
</code></pre>

<p>when I run:</p>

<pre><code>pip install scipy-0.15.1-cp33-none-win_amd64.whl
</code></pre>

<p>I get the following error:</p>

<pre><code>scipy-0.15.1-cp33-none-win_amd64.whl is not supported wheel on this platform
</code></pre>

<p>I would like to know what the problem is?</p>
","<p><code>cp33</code> means <code>CPython 3.3</code> you need <code>scipy‑0.15.1‑cp27‑none‑win_amd64.whl</code> instead.</p>
","28568118"
"""Unicode Error ""unicodeescape"" codec can't decode bytes... Cannot open text files in Python 3","178912","","<p>I am using python 3.1, on a windows 7 machines. Russian is the default system language, and utf-8 is the default encoding.</p>

<p>Looking at the answer to a <a href=""https://stackoverflow.com/questions/778096/problem-opening-a-text-document-unicode-error"">previous question</a>, I have attempting using the ""codecs"" module to give me a little luck. Here's a few examples:</p>

<pre><code>&gt;&gt;&gt; g = codecs.open(""C:\Users\Eric\Desktop\beeline.txt"", ""r"", encoding=""utf-8"")
SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 2-4: truncated \UXXXXXXXX escape (&lt;pyshell#39&gt;, line 1)
&gt;&gt;&gt; g = codecs.open(""C:\Users\Eric\Desktop\Site.txt"", ""r"", encoding=""utf-8"")
SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 2-4: truncated \UXXXXXXXX escape (&lt;pyshell#40&gt;, line 1)
&gt;&gt;&gt; g = codecs.open(""C:\Python31\Notes.txt"", ""r"", encoding=""utf-8"")
SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 11-12: malformed \N character escape (&lt;pyshell#41&gt;, line 1)
&gt;&gt;&gt; g = codecs.open(""C:\Users\Eric\Desktop\Site.txt"", ""r"", encoding=""utf-8"")
SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 2-4: truncated \UXXXXXXXX escape (&lt;pyshell#44&gt;, line 1)
</code></pre>

<p>My last idea was, I thought it might have been the fact that windows ""translates"" a few folders, such as the ""users"" folder, into Russian (though typing ""users"" is still the correct path), so I tried it in the Python31 folder. Still, no luck. Any ideas?</p>
","<p>The problem is with the string</p>

<pre><code>""C:\Users\Eric\Desktop\beeline.txt""
</code></pre>

<p>Here, <code>\U</code> starts an eight-character Unicode escape, such as '\U00014321`. In your code, the escape is followed by the character 's', which is invalid.</p>

<p>You either need to duplicate all backslashes, or prefix the string with <code>r</code> (to produce a raw string).</p>
","1347854"
"Check if item is in an array / list","178614","","<p>If I've got an array of strings, can I check to see if a string is in the array without doing a <code>for</code> loop?  Specifically, I'm looking for a way to do it within an <code>if</code> statement, so something like this:</p>

<pre><code>if [check that item is in array]:
</code></pre>
","<p>Assuming you mean ""list"" where you say ""array"", you can do</p>

<pre><code>if item in my_list:
    # whatever
</code></pre>
","11251732"
"TypeError: expected a character buffer object - while trying to save integer to textfile","178588","","<p>I'm trying to make a <em>very</em> simple 'counter' that is supposed to keep track of how many times my program has been executed.</p>

<p>First, I have a textfile that only includes one character: <code>0</code></p>

<p>Then I open the file, parse it as an <code>int</code>, add <code>1</code> to the value, and then try to return it to the textfile:</p>

<pre><code>f = open('testfile.txt', 'r+')
x = f.read()
y = int(x) + 1
print(y)
f.write(y)
f.close()
</code></pre>

<p>I'd like to have <code>y</code> overwrite the value in the textfile, and then close it.  <br><br>
But all I get is <code>TypeError: expected a character buffer object</code>.</p>

<h3>Edit:</h3>

<p>Trying to parse <code>y</code> as a string:</p>

<pre><code>f.write(str(y))
</code></pre>

<p>gives</p>

<pre><code>IOError: [Errno 0] Error
</code></pre>
","<p>Have you checked the docstring of <code>write()</code>? It says:</p>

<blockquote>
  <p>write(str) -> None.  Write string str to file.</p>
  
  <p>Note that due to buffering, flush() or close() may be needed before
  the file on disk reflects the data written.</p>
</blockquote>

<p>So you need to convert <code>y</code> to <code>str</code> first.</p>

<p>Also note that the string will be written at the current position which will be at the end of the file, because you'll already have read the old value. Use <code>f.seek(0)</code> to get to the beginning of the file.`</p>

<p>Edit: As for the <code>IOError</code>, <a href=""http://bugs.python.org/issue3207"">this issue</a> seems related. A cite from there:</p>

<blockquote>
  <p>For the modes where both read and writing (or appending) are allowed
  (those which include a ""+"" sign), the stream should be flushed (fflush)
  or repositioned (fseek, fsetpos, rewind) between either a reading
  operation followed by a writing operation or a writing operation
  followed by a reading operation.</p>
</blockquote>

<p>So, I suggest you try <code>f.seek(0)</code> and maybe the problem goes away.</p>
","9787008"
"How to call a shell script from python code?","178305","","<p>how to call a shell script from python code?</p>
","<p>The <a href=""http://docs.python.org/library/subprocess.html"" rel=""noreferrer"">subprocess</a> module will help you out. </p>

<p>Blatantly trivial example:</p>

<pre><code>&gt;&gt;&gt; import subprocess
&gt;&gt;&gt; subprocess.call(['./test.sh']) # Thanks @Jim Dennis for suggesting the []
0 
&gt;&gt;&gt; 
</code></pre>

<p>Where <code>test.sh</code> is a simple shell script and <code>0</code> is its return value for this run.</p>
","3777308"
"convert a string of bytes into an int (python)","177860","","<p>How can I convert a string of bytes into an int in python? </p>

<p>Say like this: <code>'y\xcc\xa6\xbb'</code></p>

<p>I came up with a clever/stupid way of doing it:</p>

<pre><code>sum(ord(c) &lt;&lt; (i * 8) for i, c in enumerate('y\xcc\xa6\xbb'[::-1]))
</code></pre>

<p>I know there has to be something builtin or in the standard library that does this more simply...</p>

<p>This is different from <a href=""https://stackoverflow.com/questions/209513/convert-hex-string-to-int-in-python"">converting a string of hex digits</a> for which you can use int(xxx, 16), but instead I want to convert a string of actual byte values.</p>

<p>UPDATE:</p>

<p>I kind of like James' answer a little better because it doesn't require importing another module, but Greg's method is faster:</p>

<pre><code>&gt;&gt;&gt; from timeit import Timer
&gt;&gt;&gt; Timer('struct.unpack(""&lt;L"", ""y\xcc\xa6\xbb"")[0]', 'import struct').timeit()
0.36242198944091797
&gt;&gt;&gt; Timer(""int('y\xcc\xa6\xbb'.encode('hex'), 16)"").timeit()
1.1432669162750244
</code></pre>

<p>My hacky method:</p>

<pre><code>&gt;&gt;&gt; Timer(""sum(ord(c) &lt;&lt; (i * 8) for i, c in enumerate('y\xcc\xa6\xbb'[::-1]))"").timeit()
2.8819329738616943
</code></pre>

<p>FURTHER UPDATE:</p>

<p>Someone asked in comments what's the problem with importing another module. Well, importing a module isn't necessarily cheap, take a look:</p>

<pre><code>&gt;&gt;&gt; Timer(""""""import struct\nstruct.unpack(""&gt;L"", ""y\xcc\xa6\xbb"")[0]"""""").timeit()
0.98822188377380371
</code></pre>

<p>Including the cost of importing the module negates almost all of the advantage that this method has. I believe that this will only include the expense of importing it once for the entire benchmark run; look what happens when I force it to reload every time:</p>

<pre><code>&gt;&gt;&gt; Timer(""""""reload(struct)\nstruct.unpack(""&gt;L"", ""y\xcc\xa6\xbb"")[0]"""""", 'import struct').timeit()
68.474128007888794
</code></pre>

<p>Needless to say, if you're doing a lot of executions of this method per one import than this becomes proportionally less of an issue. It's also probably i/o cost rather than cpu so it may depend on the capacity and load characteristics of the particular machine.</p>
","<p>You can also use the <a href=""https://docs.python.org/3.6/library/struct.html"" rel=""noreferrer"">struct</a> module to do this:</p>

<pre><code>&gt;&gt;&gt; struct.unpack(""&lt;L"", ""y\xcc\xa6\xbb"")[0]
3148270713L
</code></pre>
","444610"
"Setting Django up to use MySQL","177808","","<p>I want to move away from PHP a little and learn Python. In order to do web development with Python I'll need a framework to help with templating and other things. </p>

<p>I have a non-production server that I use to test all of web development stuff on. It is a Debian 7.1 LAMP stack that runs MariaDB instead of the common MySQL-server package.</p>

<p>Yesterday I installed Django and created my first project called <em>firstweb</em>. I have not changed any settings yet.</p>

<p>Here is my first big piece of confusion. In the tutorial I followed the guy installed Django, started his first project, restarted Apache, and Django just worked from then on. He went to his browser and went to the Django default page with no problems.</p>

<p>Me however, I have to cd into my firstweb folder and run</p>

<pre><code>python manage.py runserver myip:port
</code></pre>

<p>And it works. No problem. But I'm wondering if it is supposed to work like this, and if this will cause problems down the line?</p>

<p>My <strong>second question</strong> is that I want to set it up so it uses my MySQL database. I go into my settings.py under /firstweb/firstweb and I see ENGINE and NAME but I'm not sure what to put here.</p>

<p>And then in the USER, PASSWORD, and HOST areas is this my database and its credentials? If I am using <em>localhost</em> can I just put <em>localhost</em> in the HOST area?</p>
","<p><a href=""https://docs.djangoproject.com/en/dev/ref/databases/#mysql-notes"" rel=""noreferrer"">MySQL support</a> is simple to add. In your <code>DATABASES</code> dictionary, you will have an entry like this:</p>

<pre><code>DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', 
        'NAME': 'DB_NAME',
        'USER': 'DB_USER',
        'PASSWORD': 'DB_PASSWORD',
        'HOST': 'localhost',   # Or an IP Address that your DB is hosted on
        'PORT': '3306',
    }
}
</code></pre>

<p>You also have the option of utilizing MySQL <a href=""https://docs.djangoproject.com/en/1.7/ref/databases/#connecting-to-the-database"" rel=""noreferrer"">option files</a>, as of Django 1.7. You can accomplish this by setting your <code>DATABASES</code> array like so:</p>

<pre><code>DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'OPTIONS': {
            'read_default_file': '/path/to/my.cnf',
        },
    }
}
</code></pre>

<p>You also need to create the <code>/path/to/my.cnf</code> file with similar settings from above</p>

<pre><code>[client]
database = DB_NAME
host = localhost
user = DB_USER
password = DB_PASSWORD
default-character-set = utf8
</code></pre>

<p>With this new method of connecting in Django 1.7, it is important to know the order connections are established:</p>

<pre class=""lang-none prettyprint-override""><code>1. OPTIONS.
2. NAME, USER, PASSWORD, HOST, PORT
3. MySQL option files.
</code></pre>

<blockquote>
  <p>In other words, if you set the name of the database in OPTIONS, this will take precedence over NAME, which would override anything in a MySQL option file.</p>
</blockquote>

<hr>

<p>If you are just testing your application on your local machine, you can use</p>

<pre><code>python manage.py runserver
</code></pre>

<p>Adding the <code>ip:port</code> argument allows machines other than your own to access your development application. Once you are ready to deploy your application, I recommend taking a look at the chapter on <a href=""http://www.djangobook.com/en/2.0/chapter12.html"" rel=""noreferrer"">Deploying Django</a> on the <a href=""http://www.djangobook.com/en/2.0/index.html"" rel=""noreferrer"">djangobook</a></p>

<p>Mysql default character set is often not utf-8, therefore make sure to create your database using this sql:  </p>

<pre><code>CREATE DATABASE mydatabase CHARACTER SET utf8 COLLATE utf8_bin
</code></pre>

<p>If you are using <a href=""http://dev.mysql.com/doc/connector-python/en/connector-python-django-backend.html"" rel=""noreferrer"">Oracle's MySQL connector</a> your <code>ENGINE</code> line should look like this:</p>

<pre><code>'ENGINE': 'mysql.connector.django',
</code></pre>
","19189930"
"simple argparse example wanted: 1 argument, 3 results","177806","","<p>The <a href=""http://docs.python.org/library/argparse.html"" rel=""noreferrer"">documentation</a> for the <a href=""http://www.doughellmann.com/PyMOTW/argparse/"" rel=""noreferrer"">argparse python module</a>, while excellent I'm sure, is too much for my tiny beginner brain to grasp right now. I don't need to do math on the command line or meddle with formatting lines on the screen or change option characters. All I want to do is <em>""if arg is A, do this, if B do that, if none of the above show help and quit""</em>.</p>
","<p>My understanding of the original question is two-fold. First, in terms of the simplest possible argparse example, I'm surprised that I haven't seen it here. Of course, to be dead-simple, it's also all overhead with little power, but it might get you started.</p>

<pre><code>import argparse

parser = argparse.ArgumentParser()
parser.add_argument(""a"")
args = parser.parse_args()

if args.a == 'magic.name':
    print 'You nailed it!'
</code></pre>

<p>But this positional argument is now required. If you leave it out when invoking this program, you'll get an error about missing arguments. This leads me to the second part of the original question. Matt Wilkie seems to want a single <strong>optional</strong> argument without a named label (the --option labels). My suggestion would be to modify the code above as follows:</p>

<pre><code>...
parser.add_argument(""a"", nargs='?', default=""check_string_for_empty"")
...
if args.a == 'check_string_for_empty':
    print 'I can tell that no argument was given and I can deal with that here.'
elif args.a == 'magic.name':
    print 'You nailed it!'
else:
    print args.a
</code></pre>

<p>There may well be a more elegant solution, but this works and is minimalist.</p>
","22045954"
"Print new output on same line","177673","","<p>I want to print the looped output to the screen on the same line.</p>

<p>How do I this in the simplest way for Python 3.x</p>

<p>I know this question has been asked for Python 2.7 by using a comma at the end of the line i.e. print I, but I can't find a solution for Python 3.x.</p>

<pre><code>i = 0 
while i &lt;10:
     i += 1 
     ## print (i) # python 2.7 would be print i,
     print (i) # python 2.7 would be 'print i,'
</code></pre>

<p>Screen output.</p>

<pre><code>1
2
3
4
5
6
7
8
9
10
</code></pre>

<hr>

<p>What I want to print is: </p>

<pre><code>12345678910
</code></pre>

<p>New readers visit this link aswell <a href=""http://docs.python.org/release/3.0.1/whatsnew/3.0.html"" rel=""noreferrer"">http://docs.python.org/release/3.0.1/whatsnew/3.0.html</a></p>
","<p>From <code>help(print)</code>:</p>

<pre><code>Help on built-in function print in module builtins:

print(...)
    print(value, ..., sep=' ', end='\n', file=sys.stdout)

    Prints the values to a stream, or to sys.stdout by default.
    Optional keyword arguments:
    file: a file-like object (stream); defaults to the current sys.stdout.
    sep:  string inserted between values, default a space.
    end:  string appended after the last value, default a newline.
</code></pre>

<p>You can use the <code>end</code> keyword:</p>

<pre><code>&gt;&gt;&gt; for i in range(1, 11):
...     print(i, end='')
... 
12345678910&gt;&gt;&gt; 
</code></pre>

<p>Note that you'll have to <code>print()</code> the final newline yourself.  BTW, you won't get ""12345678910"" in Python 2 with the trailing comma, you'll get <code>1 2 3 4 5 6 7 8 9 10</code> instead.</p>
","12032234"
"Matplotlib plots: removing axis, legends and white spaces","177495","","<p>I'm new to Python and Matplotlib, I would like to simply apply colormap to an image and write the resulting image, without using axes, labels, titles or anything usually automatically added by matplotlib. Here is what I did:</p>

<pre><code>def make_image(inputname,outputname):
    data = mpimg.imread(inputname)[:,:,0]
    fig = plt.imshow(data)
    fig.set_cmap('hot')
    fig.axes.get_xaxis().set_visible(False)
    fig.axes.get_yaxis().set_visible(False)
    plt.savefig(outputname)
</code></pre>

<p>It successfully removes the axis of the figure, but the figure saved presents a white padding and a frame around the actual image.
How can I remove them (at least the white padding)? Thanks</p>
","<p>I think that the command <code>axis('off')</code> takes care of one of the problems more succinctly than changing each axis and the border separately. It still leaves the white space around the border however. Adding <code>bbox_inches='tight'</code> to the <code>savefig</code> command almost gets you there, you can see in the example below that the white space left is much smaller, but still present.</p>

<pre><code>from numpy import random
import matplotlib.pyplot as plt

data = random.random((5,5))
img = plt.imshow(data, interpolation='nearest')
img.set_cmap('hot')
plt.axis('off')
plt.savefig(""test.png"", bbox_inches='tight')
</code></pre>

<p><img src=""https://i.stack.imgur.com/4ZMuW.png"" alt=""enter image description here""></p>
","9295472"
"What is the difference between Python's re.search and re.match?","177422","","<p>What is the difference between the <code>search()</code> and <code>match()</code> functions in the <a href=""http://docs.python.org/2/library/re.html"" rel=""noreferrer"">Python <code>re</code> module</a>?</p>

<p>I've read the <a href=""http://www.python.org/doc/2.5.2/lib/matching-searching.html"" rel=""noreferrer"">documentation</a> (<a href=""http://docs.python.org/2/library/re.html?highlight=matching%20searching#search-vs-match"" rel=""noreferrer"">current documentation</a>), but I never seem to remember it.  I keep having to look it up and re-learn it.  I'm hoping that someone will answer it clearly with examples so that (perhaps) it will stick in my head.  Or at least I'll have a better place to return with my question and it will take less time to re-learn it.</p>
","<p><code>re.match</code> is anchored at the beginning of the string. That has nothing to do with newlines, so it is not the same as using <code>^</code> in the pattern.</p>

<p>As the <a href=""http://docs.python.org/2/library/re.html#re.match"" rel=""noreferrer"">re.match documentation</a> says:</p>

<blockquote>
  <p>If zero or more characters at the
  <strong>beginning of string</strong> match the regular expression pattern, return a
  corresponding <code>MatchObject</code> instance.
  Return <code>None</code> if the string does not
  match the pattern; note that this is
  different from a zero-length match.</p>
  
  <p>Note: If you want to locate a match
  anywhere in string, use <code>search()</code>
  instead.</p>
</blockquote>

<p><code>re.search</code> searches the entire string, as <a href=""http://docs.python.org/2/library/re.html#re.search"" rel=""noreferrer"">the documentation says</a>:</p>

<blockquote>
  <p><strong>Scan through string</strong> looking for a
  location where the regular expression
  pattern produces a match, and return a
  corresponding <code>MatchObject</code> instance.
  Return <code>None</code> if no position in the
  string matches the pattern; note that
  this is different from finding a
  zero-length match at some point in the
  string.</p>
</blockquote>

<p>So if you need to match at the beginning of the string, or to match the entire string use <code>match</code>. It is faster. Otherwise use <code>search</code>.</p>

<p>The documentation has a <a href=""http://docs.python.org/2/library/re.html#search-vs-match"" rel=""noreferrer"">specific section for <code>match</code> vs. <code>search</code></a> that also covers multiline strings:</p>

<blockquote>
  <p>Python offers two different primitive
  operations based on regular
  expressions: <code>match</code> checks for a match
  <strong>only at the beginning</strong> of the string,
  while <code>search</code> checks for a match
  <strong>anywhere</strong> in the string (this is what
  Perl does by default).</p>
  
  <p>Note that <code>match</code> may differ from <code>search</code>
  even when using a regular expression
  beginning with <code>'^'</code>: <code>'^'</code> matches only
  at the start of the string, or in
  <code>MULTILINE</code> mode also immediately
  following a newline. The “<code>match</code>”
  operation succeeds <em>only if the pattern
  matches at the <strong>start</strong> of the string</em>
  regardless of mode, or at the starting
  position given by the optional <code>pos</code>
  argument regardless of whether a
  newline precedes it.</p>
</blockquote>

<p>Now, enough talk. Time to see some example code:</p>

<pre><code># example code:
string_with_newlines = """"""something
someotherthing""""""

import re

print re.match('some', string_with_newlines) # matches
print re.match('someother', 
               string_with_newlines) # won't match
print re.match('^someother', string_with_newlines, 
               re.MULTILINE) # also won't match
print re.search('someother', 
                string_with_newlines) # finds something
print re.search('^someother', string_with_newlines, 
                re.MULTILINE) # also finds something

m = re.compile('thing$', re.MULTILINE)

print m.match(string_with_newlines) # no match
print m.match(string_with_newlines, pos=4) # matches
print m.search(string_with_newlines, 
               re.MULTILINE) # also matches
</code></pre>
","180993"
"Get a filtered list of files in a directory","177365","","<p>I am trying to get a list of files in a directory using Python, but I do not want a list of ALL the files.</p>

<p>What I essentially want is the ability to do something like the following but using Python and not executing ls.</p>

<pre><code>ls 145592*.jpg
</code></pre>

<p>If there is no built-in method for this, I am currently thinking of writing a for loop to iterate through the results of an <code>os.listdir()</code> and to append all the matching files to a new list.</p>

<p>However, there are a lot of files in that directory and therefore I am hoping there is a more efficient method (or a built-in method).</p>
","<p><a href=""http://docs.python.org/library/glob.html#glob.glob"" rel=""noreferrer""><code>glob.glob('145592*.jpg')</code></a></p>
","2225582"
"Pandas: How to use apply function to multiple columns","177309","","<p>I have some problems with the Pandas apply function, when using multiple columns with the following dataframe</p>

<pre><code>df = DataFrame ({'a' : np.random.randn(6),
             'b' : ['foo', 'bar'] * 3,
             'c' : np.random.randn(6)})
</code></pre>

<p>and the following function</p>

<pre><code>def my_test(a, b):
    return a % b
</code></pre>

<p>When I try to apply this function with :</p>

<pre><code>df['Value'] = df.apply(lambda row: my_test(row[a], row[c]), axis=1)
</code></pre>

<p>I get the error message:</p>

<pre><code>NameError: (""global name 'a' is not defined"", u'occurred at index 0')
</code></pre>

<p>I do not understand this message, I defined the name properly. </p>

<p>I would highly appreciate any help on this issue</p>

<p>Update</p>

<p>Thanks for your help. I made indeed some syntax mistakes with the code, the index should be put ''. However I have still the same issue using a more complex function such as:</p>

<pre><code>def my_test(a):
    cum_diff = 0
    for ix in df.index():
        cum_diff = cum_diff + (a - df['a'][ix])
    return cum_diff 
</code></pre>

<p>Thank you</p>
","<p>Seems you forgot the <code>''</code> of your string.</p>

<pre><code>In [43]: df['Value'] = df.apply(lambda row: my_test(row['a'], row['c']), axis=1)

In [44]: df
Out[44]:
                    a    b         c     Value
          0 -1.674308  foo  0.343801  0.044698
          1 -2.163236  bar -2.046438 -0.116798
          2 -0.199115  foo -0.458050 -0.199115
          3  0.918646  bar -0.007185 -0.001006
          4  1.336830  foo  0.534292  0.268245
          5  0.976844  bar -0.773630 -0.570417
</code></pre>

<p>BTW, in my opinion, following way is more elegant:</p>

<pre><code>In [53]: def my_test2(row):
....:     return row['a'] % row['c']
....:     

In [54]: df['Value'] = df.apply(my_test2, axis=1)
</code></pre>
","16354730"
"Find an element in a list of tuples","177281","","<p>I have a list 'a'</p>

<pre><code>a= [(1,2),(1,4),(3,5),(5,7)]
</code></pre>

<p>I need to find all the tuples for a particular number. say for 1 it will be</p>

<pre><code>result = [(1,2),(1,4)]
</code></pre>

<p>How do I do that?</p>
","<p>If you just want the first number to match you can do it like this:</p>

<pre><code>[item for item in a if item[0] == 1]
</code></pre>

<p>If you are just searching for tuples with 1 in them:</p>

<pre><code>[item for item in a if 1 in item]
</code></pre>
","2191707"
"Joining a list that has Integer values with Python","177272","","<p>I need to join a list of items.  Many  of the items in the list are integer values returned  from a function. ie:</p>

<pre><code>myList.append(munfunc()) 
</code></pre>

<p>How should I convert the returned result to a string in order to join it with the list?</p>

<p>Do I need to do the following for every integer value:</p>

<pre><code>myList.append(str(myfunc()) 
</code></pre>

<p>Is there a more Pythonic way to solve casting problems?</p>
","<p>Calling <code>str(...)</code> is the Pythonic way to convert something to a string.</p>

<p>You might want to consider why you want a list of strings. You could instead keep it as a list of integers and only convert the integers to strings when you need to display them. For example, if you have a list of integers then you can do this:</p>

<pre><code>print ', '.join(str(x) for x in list_of_ints)
</code></pre>
","3590168"
"Stripping everything but alphanumeric chars from a string in Python","177067","","<p>What is the best way to strip all non alphanumeric characters from a string, using Python?</p>

<p>The solutions presented in the <a href=""https://stackoverflow.com/questions/840948"">PHP variant of this question</a> will probably work with some minor adjustments, but don't seem very 'pythonic' to me.</p>

<p>For the record, I don't just want to strip periods and commas  (and other punctuation), but also quotes, brackets, etc.</p>
","<p>I just timed some functions out of curiosity.  In these tests I'm removing non-alphanumeric characters from the string <code>string.printable</code> (part of the built-in <code>string</code> module).</p>

<pre><code>$ python -m timeit -s \
     ""import string"" \
     ""''.join(ch for ch in string.printable if ch.isalnum())"" 
10000 loops, best of 3: 57.6 usec per loop

$ python -m timeit -s \
    ""import string"" \
    ""filter(str.isalnum, string.printable)""                 
10000 loops, best of 3: 37.9 usec per loop

$ python -m timeit -s \
    ""import re, string"" \
    ""re.sub('[\W_]', '', string.printable)""
10000 loops, best of 3: 27.5 usec per loop

$ python -m timeit -s \
    ""import re, string"" \
    ""re.sub('[\W_]+', '', string.printable)""                
100000 loops, best of 3: 15 usec per loop

$ python -m timeit -s \
    ""import re, string; pattern = re.compile('[\W_]+')"" \
    ""pattern.sub('', string.printable)"" 
100000 loops, best of 3: 11.2 usec per loop
</code></pre>
","1277047"
"Python class inherits object","177044","","<p>Is there any reason for a class declaration to inherit from <code>object</code>?</p>

<p>I just found some code that does this and I can't find a good reason why.</p>

<pre><code>class MyClass(object):
    # class code follows...
</code></pre>
","<blockquote>
  <h3>Is there any reason for a class declaration to inherit from <code>object</code>?</h3>
</blockquote>

<p>In Python 3, apart from compatibility between Python 2 and 3, <em>no</em>. In Python 2, <em>many reasons</em>. </p>

<hr>

<h3>Python 2.x story:</h3>

<p>In Python 2.x (from 2.2 onwards) there's two styles of classes depending on the presence or absence of a <a href=""https://docs.python.org/3/library/stdtypes.html"" rel=""noreferrer"">built-in type</a> as a base-class:</p>

<ol>
<li><p><strong>""classic"" style</strong> classes: they have <strong>no</strong> built-in type as a base class:</p>

<pre><code>&gt;&gt;&gt; class ClassicSpam:      # no base class
...     pass
&gt;&gt;&gt; ClassicSpam.__bases__
()
</code></pre></li>
<li><p><strong>""new"" style</strong> classes: they have a built-in type as a base class meaning that, directly or indirectly, they have <code>object</code> as a base class:</p>

<pre><code>&gt;&gt;&gt; class NewSpam(object):           # directly inherit from object
...    pass
&gt;&gt;&gt; NewSpam.__bases__
(&lt;type 'object'&gt;,)
&gt;&gt;&gt; class IntSpam(int):              # indirectly inherit from object...
...    pass
&gt;&gt;&gt; IntSpam.__bases__
(&lt;type 'int'&gt;,) 
&gt;&gt;&gt; IntSpam.__bases__[0].__bases__   # ... because int inherits from object  
(&lt;type 'object'&gt;,)
</code></pre></li>
</ol>

<p>Without a doubt, when writing a class you'll <em>always</em> want to go for new-style classes. The perks of doing so are numerous, to list some of them:</p>

<ul>
<li><p><a href=""https://docs.python.org/3/howto/descriptor.html"" rel=""noreferrer"">Support for descriptors</a>. Specifically, the following constructs are made possible with descriptors: </p>

<ol>
<li><a href=""https://docs.python.org/3/library/functions.html#classmethod"" rel=""noreferrer""><code>classmethod</code></a>: A method that receives the class as an implicit argument instead of the instance.</li>
<li><a href=""https://docs.python.org/3/library/functions.html#staticmethod"" rel=""noreferrer""><code>staticmethod</code></a>: A method that does not receive the implicit argument <code>self</code> as a first argument.</li>
<li>properties with <a href=""https://docs.python.org/3/library/functions.html#property"" rel=""noreferrer""><code>property</code></a>: Create functions for managing the getting, setting and deleting of an attribute.</li>
<li><a href=""https://docs.python.org/3/reference/datamodel.html#slots"" rel=""noreferrer""><code>__slots__</code></a>: Saves memory consumptions of a class and also results in faster attribute access. Of course, it does <a href=""https://docs.python.org/3/reference/datamodel.html#notes-on-using-slots"" rel=""noreferrer"">impose limitations</a>.</li>
</ol></li>
<li><p>The <a href=""https://docs.python.org/3/reference/datamodel.html#object.__new__"" rel=""noreferrer""><code>__new__</code></a> static method: lets you customize how new class instances are created. </p></li>
<li><p><a href=""https://www.python.org/download/releases/2.3/mro/"" rel=""noreferrer"">Method resolution order (MRO)</a>: in what order the base classes of a class will be searched when trying to resolve which method to call. </p></li>
<li><p>Related to MRO, <a href=""https://docs.python.org/3/library/functions.html#super"" rel=""noreferrer""><code>super</code> calls</a>. Also see, <a href=""https://rhettinger.wordpress.com/2011/05/26/super-considered-super/"" rel=""noreferrer""><code>super()</code> considered super.</a></p></li>
</ul>

<p>If you don't inherit from <code>object</code>, forget these. A more exhaustive description of the previous bullet points along with other perks of ""new"" style classes can be found <a href=""https://www.python.org/download/releases/2.2.3/descrintro/"" rel=""noreferrer"">here</a>.</p>

<p>One of the downsides of new-style classes is that the class itself is more memory demanding. Unless you're creating many class objects, though, I doubt this would be an issue and it's a negative sinking in a sea of positives.</p>

<hr>

<h3>Python 3.x story:</h3>

<p>In Python 3, things are simplified. Only new-style classes exist (referred to plainly as classes) so, the only difference in adding <code>object</code> is requiring you to type in 8 more characters. This:</p>

<pre><code>class ClassicSpam:
    pass
</code></pre>

<p>is completely equivalent (apart from their name :-) to this:</p>

<pre><code>class NewSpam(object):
     pass
</code></pre>

<p>and to this:</p>

<pre><code>class Spam():
    pass
</code></pre>

<p>all have <code>object</code> in their <code>__bases__</code>.</p>

<pre><code>&gt;&gt;&gt; [object in cls.__bases__ for cls in {Spam, NewSpam, ClassicSpam}]
[True, True, True]
</code></pre>

<hr>

<h2>So, what should you I do?</h2>

<p><strong>In Python 2:</strong> <em>always inherit from <code>object</code> explicitly</em>. Get the perks.</p>

<p><strong>In Python 3:</strong> inherit from <code>object</code> if you are writing code that tries to be Python agnostic, that is, it needs to work both in Python 2 and in Python 3. Otherwise don't, it really makes no difference.</p>
","45062077"
"Python call function within class","177016","","<p>I have this code which calculates the distance between two coordinates. The two functions are both within the same class.</p>

<p>However how do I call the function <code>distToPoint</code> in the function <code>isNear</code>?</p>

<pre><code>def distToPoint(self, p):
    """"""
    Use pythagoras to find distance
    (a^2 = b^2 + c^2)
    """"""
    ...

def isNear(self, p):
    distToPoint(self, p)
    ...
</code></pre>
","<p>Since these are member functions, call it as a member function on the instance, <code>self</code>.</p>

<pre><code>def isNear(self, p):
    self.distToPoint(p)
    ...
</code></pre>
","5615674"
"Usage of unicode() and encode() functions in Python","176998","","<p>I have a problem with encoding of the <em>path</em> variable and inserting it to the <em>SQLite</em> database. I tried to solve it with <em>encode(""utf-8"")</em> function which didn't help. Then I used <em>unicode()</em> function which gives me type <em>unicode</em>.</p>

<pre><code>print type(path)                  # &lt;type 'unicode'&gt;
path = path.replace(""one"", ""two"") # &lt;type 'str'&gt;
path = path.encode(""utf-8"")       # &lt;type 'str'&gt; strange
path = unicode(path)              # &lt;type 'unicode'&gt;
</code></pre>

<p>Finally I gained <em>unicode</em> type, but I still have the same error which was present when the type of the <em>path</em> variable was <em>str</em></p>

<blockquote>
  <p>sqlite3.ProgrammingError: You must not use 8-bit bytestrings unless
  you use a text_factory that can interpret 8-bit bytestrings (like
  text_factory = str). It is highly recommended that you instead just
  switch your application to Unicode strings.</p>
</blockquote>

<p>Could you help me solve this error and explain the correct usage of <code>encode(""utf-8"")</code> and <code>unicode()</code> functions? I'm often fighting with it.</p>

<p>EDIT:</p>

<p>This <em>execute()</em> statement raised the error:</p>

<pre><code>cur.execute(""update docs set path = :fullFilePath where path = :path"", locals())
</code></pre>

<p>I forgot to change the encoding of <em>fullFilePath</em> variable which suffers with the same problem, but I'm quite confused now. Should I use only <em>unicode()</em> or <em>encode(""utf-8"")</em> or both?</p>

<p>I can't use</p>

<pre><code>fullFilePath = unicode(fullFilePath.encode(""utf-8""))
</code></pre>

<p>because it raises this error:</p>

<blockquote>
  <p>UnicodeDecodeError: 'ascii' codec can't decode byte 0xc5 in position
  32: ordinal not in range(128)</p>
</blockquote>

<p><em>Python</em> version is <em>2.7.2</em></p>
","<p>You are using <code>encode(""utf-8"")</code> incorrectly.  Python byte strings (<code>str</code> type) have an encoding, Unicode does not.  You can convert a Unicode string to a Python byte string using <code>uni.encode(encoding)</code>, and you can convert a byte string to a Unicode string using <code>s.decode(encoding)</code> (or equivalently, <code>unicode(s, encoding)</code>).</p>

<p>If <code>fullFilePath</code> and <code>path</code> are currently a <code>str</code> type, you should figure out how they are encoded.  For example, if the current encoding is utf-8, you would use:</p>

<pre><code>path = path.decode('utf-8')
fullFilePath = fullFilePath.decode('utf-8')
</code></pre>

<p>If this doesn't fix it, the actual issue may be that you are not using a Unicode string in your <code>execute()</code> call, try changing it to the following:</p>

<pre><code>cur.execute(u""update docs set path = :fullFilePath where path = :path"", locals())
</code></pre>
","10288438"
"How do I remove leading whitespace in Python?","176900","","<p>I have a text string that starts with a number of spaces, varying between 2 &amp; 4.</p>

<p>What is the simplest way to remove the leading whitespace? (ie. remove everything before a certain character?)</p>

<pre><code>""  Example""   -&gt; ""Example""
""  Example  "" -&gt; ""Example  ""
""    Example"" -&gt; ""Example""
</code></pre>
","<p>The <a href=""http://docs.python.org/library/stdtypes.html#str.lstrip"" rel=""noreferrer""><code>lstrip()</code></a> method will remove leading whitespaces, newline and tab characters on a string beginning:</p>

<pre><code>&gt;&gt;&gt; '     hello world!'.lstrip()
'hello world!'
</code></pre>

<p><strong>Edit</strong></p>

<p><a href=""https://stackoverflow.com/questions/959215/removing-starting-spaces-in-python#comment768038_959216"">As balpha pointed out in the comments</a>, in order to remove <em>only</em> spaces from the beginning of the string, <code>lstrip(' ')</code> should be used:</p>

<pre><code>&gt;&gt;&gt; '   hello world with 2 spaces and a tab!'.lstrip(' ')
'\thello world with 2 spaces and a tab!'
</code></pre>

<p>Related question:</p>

<ul>
<li><a href=""https://stackoverflow.com/questions/761804/trimming-a-string-in-python"">Trimming a string in Python</a></li>
</ul>
","959216"
"AND/OR in Python?","176493","","<p>I know that the <code>and</code> and <code>or</code> expressions exist in python, but is there any <code>and/or</code> expression? Or some way to combine them in order to produce the same effect as a <code>and/or</code> expression?</p>

<p>my code looks something like this:</p>

<pre><code>if input==""a"":        
    if ""a"" or ""á"" or ""à"" or ""ã"" or ""â"" in someList:            
        someList.remove(""a"") or someList.remove(""á"") or someList.remove(""à"") or someList.remove(""ã"") or someList.remove(""â"")
</code></pre>

<p>with this, I mean that if the user inputs ""a"" and any type of ""a"" is included in a previously defined list, can I have all the types of ""a"" removed from a given list?</p>

<p>python tells me that there is a problem in:</p>

<pre><code>someList.remove(""a"") or someList.remove(""á"") or someList.remove(""à"") or someList.remove(""ã"") or someList.remove(""â"")
</code></pre>

<p>he tells me: <code>ValueError: list.remove(x): x not in list</code></p>
","<p>As <a href=""https://stackoverflow.com/a/10149756/577088"">Matt Ball</a>'s answer explains, <code>or</code> <em>is</em> ""and/or"". But <code>or</code> doesn't work with <code>in</code> the way you use it above. You have to say <code>if ""a"" in someList or ""á"" in someList or...</code>. Or better yet, </p>

<pre><code>if any(c in someList for c in (""a"", ""á"", ""à"", ""ã"", ""â"")):
    ...
</code></pre>

<p>That's the answer to your question as asked. </p>

<h3>Other Notes</h3>

<p>However, there are a few more things to say about the example code you've posted. First, the chain of <code>someList.remove... or someList remove...</code> statements here is unnecessary, and may result in unexpected behavior. It's also hard to read! Better to break it into individual lines:</p>

<pre><code>someList.remove(""a"")
someList.remove(""á"")
...
</code></pre>

<p>Even that's not enough, however. As you observed, if the item isn't in the list, then an error is thrown. On top of that, using <code>remove</code> is very slow, because every time you call it, Python has to look at every item in the list. So if you want to remove 10 different characters, and you have a list that has 100 characters, you have to perform 1000 tests.</p>

<p>Instead, I would suggest a very different approach. Filter the list using a <code>set</code>, like so:</p>

<pre><code>chars_to_remove = set((""a"", ""á"", ""à"", ""ã"", ""â""))
someList = [c for c in someList if c not in chars_to_remove]
</code></pre>

<p>Or, change the list in-place without creating a copy:</p>

<pre><code>someList[:] = (c for c in someList if c not in chars_to_remove)
</code></pre>

<p>These both use list comprehension syntax to create a new list. They look at every character in <code>someList</code>, check to see of the character is in <code>chars_to_remove</code>, and if it is not, they include the character in the new list.</p>

<p>This is the most efficient version of this code. It has two speed advantages: </p>

<ol>
<li>It only passes through <code>someList</code> once. Instead of performing 1000 tests, in the above scenario, it performs only 100. </li>
<li>It can test all characters with a single operation, because <code>chars_to_remove</code> is a <code>set</code>. If it <code>chars_to_remove</code> were a <code>list</code> or <code>tuple</code>, then each test would really be 10 tests in the above scenario -- because each character in the list would need to be checked individually.</li>
</ol>
","10149868"
"Appending values to dictionary in Python","176212","","<p>I have a dictionary to which I want to append to each drug, a list of numbers. Like this:</p>

<pre><code>append(0), append(1234), append(123), etc.

def make_drug_dictionary(data):
    drug_dictionary={'MORPHINE':[],
                     'OXYCODONE':[],
                     'OXYMORPHONE':[],
                     'METHADONE':[],
                     'BUPRENORPHINE':[],
                     'HYDROMORPHONE':[],
                     'CODEINE':[],
                     'HYDROCODONE':[]}
    prev = None
    for row in data:
        if prev is None or prev==row[11]:
            drug_dictionary.append[row[11][]
    return drug_dictionary
</code></pre>

<p>I later want to be able to access the entirr set of entries in, for example, <code>'MORPHINE'</code>.</p>

<ol>
<li>How do I append a number into the drug_dictionary?</li>
<li>How do I later traverse through each entry?</li>
</ol>
","<p>Just use append:</p>

<pre><code>list1 = [1, 2, 3, 4, 5]
list2 = [123, 234, 456]
d = {'a': [], 'b': []}
d['a'].append(list1)
d['a'].append(list2)
print d['a']
</code></pre>
","3419217"
"How do I turn a python datetime into a string, with readable format date?","176168","","<pre><code>t = e['updated_parsed']
dt = datetime.datetime(t[0],t[1],t[2],t[3],t[4],t[5],t[6]
print dt
&gt;&gt;&gt;2010-01-28 08:39:49.000003
</code></pre>

<p>How do I turn that into a string?:</p>

<pre><code>""January 28, 2010""
</code></pre>
","<p>The datetime class has a method strftime. <a href=""https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior"" rel=""noreferrer"">strftime() Behavior</a> in the Python docs documents the different formats it accepts. </p>

<p>For this specific example, it would look something like:</p>

<pre><code>my_datetime.strftime(""%B %d, %Y"")
</code></pre>
","2158454"
"How to get a random number between a float range?","176049","","<p><code>randrange(start, stop)</code> only takes integer arguments. So how would I get a random number between two float values?</p>
","<p>Use <a href=""http://docs.python.org/library/random.html#random.uniform"">random.uniform(a, b)</a>:</p>

<pre><code>&gt;&gt;&gt; random.uniform(1.5, 1.9)
1.8733202628557872
</code></pre>
","6088092"
"How to query as GROUP BY in django?","175890","","<p>I query a model, </p>

<pre><code>Members.objects.all()
</code></pre>

<p>and it returns say</p>

<pre><code>Eric, Salesman, X-Shop
Freddie, Manager, X2-Shop
Teddy, Salesman, X2-Shop
Sean, Manager, X2-Shop
</code></pre>

<p>What i want is, to know the best Django way to fire
a group_by query to my db, as like,</p>

<pre><code>Members.objects.all().group_by('designation')
</code></pre>

<p>Which doesn't work of course.
I know we can do some tricks on ""django/db/models/query.py"", 
but i am just curious to know how to do it without patching.</p>
","<p>If you mean to do aggregation you can use the <a href=""http://docs.djangoproject.com/en/dev/topics/db/aggregation/#topics-db-aggregation"" rel=""noreferrer"">aggregation features of the ORM</a>:</p>

<pre><code>from django.db.models import Count
Members.objects.values('designation').annotate(dcount=Count('designation'))
</code></pre>

<p>This results in a query similar to</p>

<pre><code>SELECT designation, COUNT(designation) AS dcount
FROM members GROUP BY designation
</code></pre>

<p>and the output would be of the form</p>

<pre><code>[{'designation': 'Salesman', 'dcount': 2}, 
 {'designation': 'Manager', 'dcount': 2}]
</code></pre>
","629691"
"Read file from line 2 or skip header row","175721","","<p>How can I skip the header row and start reading a file from line2?</p>
","<pre><code>with open(fname) as f:
    next(f)
    for line in f:
        #do something
</code></pre>
","4796785"
"How to pip or easy_install tkinter","175681","","<p>My Idle is throwing errors that and says tkinter can't be imported.</p>

<p>Is there a simple way to install tkinter via pip or easy_install?</p>

<p>There seem to be a lot of package names flying around for this...</p>

<p>This and other assorted variations with tkinter-pypy aren't working.</p>

<pre><code>pip install python-tk
</code></pre>

<p>I'm on Windows with Python 2.7 and can't apt-get.</p>

<p>Thanks.</p>
","<p>Well i can see two solutions here:</p>

<p><strong><em>1) Follow the <a href=""http://www.tkdocs.com/tutorial/install.html"" rel=""nofollow noreferrer"">Docs-Tkinter install for Python</a> (<a href=""http://www.tkdocs.com/tutorial/install.html#installwin"" rel=""nofollow noreferrer"">for Windows</a>):</em></strong> </p>

<p>Tkinter (and, since Python 3.1, ttk) are included with all standard Python distributions. It is important that you use a version of Python supporting Tk 8.5 or greater, and ttk. We recommend installing the ""ActivePython"" distribution from ActiveState, which includes everything you'll need.</p>

<p>In your web browser, go to <a href=""http://www.activestate.com"" rel=""nofollow noreferrer"">Activestate.com</a>, and follow along the links to download the Community Edition of ActivePython for Windows. Make sure you're downloading a 3.1 or newer version, not a 2.x version.</p>

<p>Run the installer, and follow along. You'll end up with a fresh install of ActivePython, located in, e.g. <code>C:\python32</code>. From a Windows command prompt, or the Start Menu's ""Run..."" command, you should then be able to run a Python shell via:</p>

<pre><code>% C:\python32\python
</code></pre>

<p>This should give you the Python command prompt. From the prompt, enter these two commands:</p>

<pre><code>&gt;&gt;&gt; import tkinter
&gt;&gt;&gt; tkinter._test()
</code></pre>

<p>This should pop up a small window; the first line at the top of the window should say ""This is Tcl/Tk version 8.5""; make sure it is not 8.4!</p>

<p><strong><em>2) Uninstall 64-bit Python and install 32 bit Python.</em></strong></p>
","20044661"
"Web scraping with Python","175627","","<p>I'd like to grab daily sunrise/sunset times from a web site. Is it possible to scrape web content with Python? what are the modules used? Is there any tutorial available?</p>
","<p>Use urllib2 in combination with the brilliant <a href=""http://www.crummy.com/software/BeautifulSoup/"" rel=""noreferrer"">BeautifulSoup</a> library:</p>

<pre><code>import urllib2
from BeautifulSoup import BeautifulSoup
# or if you're using BeautifulSoup4:
# from bs4 import BeautifulSoup

soup = BeautifulSoup(urllib2.urlopen('http://example.com').read())

for row in soup('table', {'class': 'spad'})[0].tbody('tr'):
    tds = row('td')
    print tds[0].string, tds[1].string
    # will print date and sunrise
</code></pre>
","2082025"
"Best practice for Python assert","175503","","<ol>
<li><p>Is there a performance or code maintenance issue with using <code>assert</code> as part of the standard code instead of using it just for debugging purposes?</p>

<p>Is</p>

<pre><code>assert x &gt;= 0, 'x is less than zero'
</code></pre>

<p>better or worse than </p>

<pre><code>if x &lt; 0:
    raise Exception, 'x is less than zero'
</code></pre></li>
<li><p>Also, is there any way to set a business rule like <code>if x &lt; 0 raise error</code> that is always checked without the <code>try/except/finally</code> so, if at anytime throughout the code <code>x</code> is less than 0 an error is raised, like if you set <code>assert x &lt; 0</code> at the start of a function, anywhere within the function where <code>x</code> becomes less then 0 an exception is raised?</p></li>
</ol>
","<p>To be able to automatically throw an error when x become less than zero throughout the function. You can use <a href=""http://docs.python.org/reference/datamodel.html#implementing-descriptors"" rel=""noreferrer"">class descriptors</a>. Here is an example:</p>

<pre><code>class LessThanZeroException(Exception):
    pass

class variable(object):
    def __init__(self, value=0):
        self.__x = value

    def __set__(self, obj, value):
        if value &lt; 0:
            raise LessThanZeroException('x is less than zero')

        self.__x  = value

    def __get__(self, obj, objType):
        return self.__x

class MyClass(object):
    x = variable()

&gt;&gt;&gt; m = MyClass()
&gt;&gt;&gt; m.x = 10
&gt;&gt;&gt; m.x -= 20
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
  File ""my.py"", line 7, in __set__
    raise LessThanZeroException('x is less than zero')
LessThanZeroException: x is less than zero
</code></pre>
","944660"
"How to remove the left part of a string?","175455","","<p>I have some simple python code that searches files for a string e.g. <code>path=c:\path</code>, whereby the <code>c:\path</code> may vary. The current code is:</p>

<pre><code>def findPath( i_file) :
  lines = open( i_file ).readlines()
  for line in lines :
    if line.startswith( ""Path="" ) :
      return # what to do here in order to get line content after ""Path="" ?
</code></pre>

<p>What is a simple way to get a string text after <code>Path=</code>? 
Is there a simple method, without closures, reflection or other esoteric things ?</p>
","<p>If the string is fixed you can simply use:</p>

<pre><code>if line.startswith(""Path=""):
    return line[5:]
</code></pre>

<p>which gives you everything from position 5 on in the string (a string is also a sequence so these sequence operators work here, too).</p>

<p>Or you can split the line at the first <code>=</code>:</p>

<pre><code>if ""="" in line:
    param, value = line.split(""="",1)
</code></pre>

<p>Then param is ""Path"" and value is the rest after the first =.</p>
","599962"
"How to get the seconds since epoch from the time + date output of gmtime()?","175362","","<p>How do you do reverse <code>gmtime()</code>, where you put the time + date and get the number of seconds?</p>

<p>I have strings like <code>'Jul 9, 2009 @ 20:02:58 UTC'</code>, and I want to get back the number of seconds between the epoch and July 9, 2009.</p>

<p>I have tried <code>time.strftime</code> but I don't know how to use it properly, or if it is the correct command to use.</p>
","<p>You want <code>calendar.timegm()</code>.</p>

<pre><code>&gt;&gt;&gt; calendar.timegm(time.gmtime())
1293581619.0
</code></pre>

<p>You can turn your string into a time tuple with <code>time.strptime()</code>, which returns a time tuple that you can pass to <code>calendar.timegm()</code>:</p>

<pre><code>&gt;&gt;&gt; import calendar
&gt;&gt;&gt; import time
&gt;&gt;&gt; calendar.timegm(time.strptime('Jul 9, 2009 @ 20:02:58 UTC', '%b %d, %Y @ %H:%M:%S UTC'))
1247169778
</code></pre>

<p>More information about calendar module <a href=""https://docs.python.org/2/library/calendar.html"" rel=""noreferrer"">here</a></p>
","4548711"
"How to input a regex in string.replace?","175160","","<p>I need some help on declaring a regex. My inputs are like the following:</p>

<pre><code>this is a paragraph with&lt;[1&gt; in between&lt;/[1&gt; and then there are cases ... where the&lt;[99&gt; number ranges from 1-100&lt;/[99&gt;. 
and there are many other lines in the txt files
with&lt;[3&gt; such tags &lt;/[3&gt;
</code></pre>

<p>The required output is:</p>

<pre><code>this is a paragraph with in between and then there are cases ... where the number ranges from 1-100. 
and there are many other lines in the txt files
with such tags
</code></pre>

<p>I've tried this:</p>

<pre><code>#!/usr/bin/python
import os, sys, re, glob
for infile in glob.glob(os.path.join(os.getcwd(), '*.txt')):
    for line in reader: 
        line2 = line.replace('&lt;[1&gt; ', '')
        line = line2.replace('&lt;/[1&gt; ', '')
        line2 = line.replace('&lt;[1&gt;', '')
        line = line2.replace('&lt;/[1&gt;', '')

        print line
</code></pre>

<p>I've also tried this (but it seems like I'm using the wrong regex syntax):</p>

<pre><code>    line2 = line.replace('&lt;[*&gt; ', '')
    line = line2.replace('&lt;/[*&gt; ', '')
    line2 = line.replace('&lt;[*&gt;', '')
    line = line2.replace('&lt;/[*&gt;', '')
</code></pre>

<p>I dont want to hard-code the <code>replace</code> from 1 to 99 . . .</p>
","<p>This tested snippet should do it:</p>

<pre class=""lang-py prettyprint-override""><code>import re
line = re.sub(r""&lt;/?\[\d+&gt;"", """", line)
</code></pre>

<p><strong>Edit:</strong> Here's a commented version explaining how it works:</p>

<pre><code>line = re.sub(r""""""
  (?x) # Use free-spacing mode.
  &lt;    # Match a literal '&lt;'
  /?   # Optionally match a '/'
  \[   # Match a literal '['
  \d+  # Match one or more digits
  &gt;    # Match a literal '&gt;'
  """""", """", line)
</code></pre>

<p>Regexes are <em>fun!</em> But I would strongly recommend spending an hour or two studying the basics. For starters, you need to learn which characters are special: <em>""metacharacters""</em> which need to be escaped (i.e. with a backslash placed in front - and the rules are different inside and outside character classes.) There is an excellent online tutorial at: <a href=""http://www.regular-expressions.info/"" rel=""noreferrer"">www.regular-expressions.info</a>. The time you spend there will pay for itself many times over. Happy regexing!</p>
","5658439"
"Python variable declaration","174994","","<p>Learning python, and has some basic doubts.</p>

<p>1.I have seen variable declaration (path here) as </p>

<pre><code>class writer:
    path = """"
</code></pre>

<p>sometimes, no explicit declaration but initialize through <code>__init__</code>. </p>

<pre><code>def __init__(self, name):
    self.name = name
</code></pre>

<p>I understand the purpose of <code>__init__</code>, but is it advisable to declare variable in any other functions.</p>

<p>2.How can I create variable to hold a custom type?</p>

<pre><code>class writer:
    path = """" # string value
    customObj = ??
</code></pre>
","<p>Okay, first things first.</p>

<p><strong>There is no such thing as ""variable declaration"" or ""variable initialization"" in Python.</strong></p>

<p>There is simply what we call ""assignment"", but should probably just call ""naming"".</p>

<p>Assignment means ""this name on the left-hand side now refers to the result of evaluating the right-hand side, regardless of what it referred to before (if anything)"".</p>

<pre><code>foo = 'bar' # the name 'foo' is now a name for the string 'bar'
foo = 2 * 3 # the name 'foo' stops being a name for the string 'bar',
# and starts being a name for the integer 6, resulting from the multiplication
</code></pre>

<p>As such, Python's names (a better term than ""variables"", arguably) don't have associated types; the values do. You can re-apply the same name to anything regardless of its type, but the thing still has behaviour that's dependent upon its type. The name is simply a way to refer to the value (object). This answers your second question: You <strong>don't</strong> create variables to hold a custom type. You don't create variables to hold any particular type. You don't ""create"" variables at all. You give names to objects.</p>

<p>Second point: Python follows a very simple rule when it comes to classes, that is actually much more consistent than what languages like Java, C++ and C# do: <strong>everything declared inside the <code>class</code> block is part of the class</strong>. So, functions (<code>def</code>) written here are methods, i.e. part of the class object (not stored on a per-instance basis), just like in Java, C++ and C#; but other names here are <strong>also</strong> part of the class. Again, the names are just names, and they don't have associated types, and <strong>functions are objects too</strong> in Python. Thus:</p>

<pre><code>class Example:
    data = 42
    def method(self): pass
</code></pre>

<p><strong>Classes are objects too</strong>, in Python.</p>

<p>So now we have created an <strong>object</strong> named <code>Example</code>, which represents the class of all things that are <code>Example</code>s. This object has two user-supplied <strong>attributes</strong> (In C++, ""members""; in C#, ""fields or properties or methods""; in Java, ""fields or methods""). One of them is named <code>data</code>, and it stores the integer value <code>42</code>. The other is named <code>method</code>, and it stores a function object. (There are several more attributes that Python adds automatically.)</p>

<p>These attributes still aren't really part of the object, though. Fundamentally, an object is just a bundle of more names (the attribute names), until you get down to things that can't be divided up any more. Thus, values can be shared between different instances of a class, or even between objects of different classes, if you deliberately set that up.</p>

<p>Let's create an instance:</p>

<pre><code>x = Example()
</code></pre>

<p>Now we have a separate object named <code>x</code>, which is an instance of <code>Example</code>. The <code>data</code> and <code>method</code> are not actually part of the object, but we can still look them up via <code>x</code> because of some magic that Python does behind the scenes. When we look up <code>method</code>, in particular, we will instead get a ""bound method"" (when we call it, <code>x</code> gets passed automatically as the <code>self</code> parameter, which cannot happen if we look up <code>Example.method</code> directly).</p>

<p>What happens when we try to use <code>x.data</code>?</p>

<p>When we examine it, it's looked up in the object first. If it's not found in the object, Python looks in the class.</p>

<p>However, when we <em>assign to</em> <code>x.data</code>, Python will create an attribute on the object. It will <strong>not</strong> replace the class' attribute.</p>

<p>This allows us to do <strong>object</strong> initialization. Python will automatically call the class' <code>__init__</code> method on new instances when they are created, if present. In this method, we can simply assign to attributes to set initial values for that attribute on each object:</p>

<pre><code>class Example:
    name = ""Ignored""
    def __init__(self, name):
        self.name = name
    # rest as before
</code></pre>

<p>Now we must specify a <code>name</code> when we create an <code>Example</code>, and each instance has its own <code>name</code>. Python will ignore the class attribute <code>Example.name</code> whenever we look up the <code>.name</code> of an instance, because the instance's attribute will be found first.</p>

<p>One last caveat: <strong>modification (mutation) and assignment are different things!</strong></p>

<p>In Python, strings are immutable. They cannot be modified. When you do:</p>

<pre><code>a = 'hi '
b = a
a += 'mom'
</code></pre>

<p>You <strong>do not change</strong> the original 'hi ' string. That is impossible in Python. Instead, you create a <strong>new</strong> string <code>'hi mom'</code>, and cause <code>a</code> to stop being a name for <code>'hi '</code>, and start being a name for <code>'hi mom'</code> instead. We made <code>b</code> a name for <code>'hi '</code> as well, and after re-applying the <code>a</code> name, <code>b</code> is still a name for <code>'hi '</code>, because <code>'hi '</code> still exists and has not been changed.</p>

<p>But lists can be changed:</p>

<pre><code>a = [1, 2, 3]
b = a
a += [4]
</code></pre>

<p>Now <code>b</code> is [1, 2, 3, 4] as well, because we made <code>b</code> a name for the same thing that <code>a</code> named, and then we changed that thing. We did not create a new list for <code>a</code> to name, because Python simply treats <code>+=</code> differently for lists.</p>

<p>This matters for objects because if you had a list as a class attribute, and used an instance to modify the list, then the change would be ""seen"" in all other instances. This is because (a) the data is actually part of the class object, and not any instance object; (b) because you were modifying the list and not doing a simple assignment, you did not create a new instance attribute hiding the class attribute.</p>
","11008311"
"Python multiprocessing pool.map for multiple arguments","174954","","<p>In the Python multiprocessing library, is there a variant of pool.map which support multiple arguments?</p>

<pre><code>text = ""test""
def harvester(text, case):
    X = case[0]
    return text+ str(X)

if __name__ == '__main__':
    pool = multiprocessing.Pool(processes=6)
    case = RAW_DATASET
    pool.map(harvester(text,case),case, 1)
    pool.close()
    pool.join()
</code></pre>
","<p>The answer to this is version- and situation-dependent. The most general answer for recent versions of Python (since 3.3) was first described below by <a href=""https://stackoverflow.com/a/5443941/577088"">J.F. Sebastian</a>.<sup>1</sup> It uses the <a href=""http://docs.python.org/dev/library/multiprocessing.html#multiprocessing.pool.Pool.starmap"" rel=""noreferrer""><code>Pool.starmap</code></a> method, which accepts a sequence of argument tuples. It then automatically unpacks the arguments from each tuple and passes them to the given function:</p>

<pre><code>import multiprocessing
from itertools import product

def merge_names(a, b):
    return '{} &amp; {}'.format(a, b)

if __name__ == '__main__':
    names = ['Brown', 'Wilson', 'Bartlett', 'Rivera', 'Molloy', 'Opie']
    with multiprocessing.Pool(processes=3) as pool:
        results = pool.starmap(merge_names, product(names, repeat=2))
    print(results)

# Output: ['Brown &amp; Brown', 'Brown &amp; Wilson', 'Brown &amp; Bartlett', ...
</code></pre>

<p>For earlier versions of Python, you'll need to write a helper function to unpack the arguments explicitly. If you want to use <code>with</code>, you'll also need to write a wrapper to turn <code>Pool</code> into a context manager. (Thanks to <a href=""https://stackoverflow.com/questions/5442910/python-multiprocessing-pool-map-for-multiple-arguments/5442981?noredirect=1#comment80290057_5442981"">muon</a> for pointing this out.)</p>

<pre><code>import multiprocessing
from itertools import product
from contextlib import contextmanager

def merge_names(a, b):
    return '{} &amp; {}'.format(a, b)

def merge_names_unpack(args):
    return merge_names(*args)

@contextmanager
def poolcontext(*args, **kwargs):
    pool = multiprocessing.Pool(*args, **kwargs)
    yield pool
    pool.terminate()

if __name__ == '__main__':
    names = ['Brown', 'Wilson', 'Bartlett', 'Rivera', 'Molloy', 'Opie']
    with poolcontext(processes=3) as pool:
        results = pool.map(merge_names_unpack, product(names, repeat=2))
    print(results)

# Output: ['Brown &amp; Brown', 'Brown &amp; Wilson', 'Brown &amp; Bartlett', ...
</code></pre>

<p>In simpler cases, with a fixed second argument, you can also use <code>partial</code>, but only in Python 2.7+.</p>

<pre><code>import multiprocessing
from functools import partial
from contextlib import contextmanager

@contextmanager
def poolcontext(*args, **kwargs):
    pool = multiprocessing.Pool(*args, **kwargs)
    yield pool
    pool.terminate()

def merge_names(a, b):
    return '{} &amp; {}'.format(a, b)

if __name__ == '__main__':
    names = ['Brown', 'Wilson', 'Bartlett', 'Rivera', 'Molloy', 'Opie']
    with poolcontext(processes=3) as pool:
        results = pool.map(partial(merge_names, b='Sons'), names)
    print(results)

# Output: ['Brown &amp; Sons', 'Wilson &amp; Sons', 'Bartlett &amp; Sons', ...
</code></pre>

<p><sup>1. Much of this was inspired by his answer, which should probably have been accepted instead. But since this one is stuck at the top, it seemed best to improve it for future readers.</sup></p>
","5442981"
"Length of an integer in Python","174872","","<p>In Python, how do you find the number of digits in an integer?</p>
","<p>If you want the length of an integer as in the number of digits in the integer, you can always convert it to string like <code>str(133)</code> and find its length like <code>len(str(123))</code>. </p>
","2189814"
"Writing Unicode text to a text file?","174526","","<p>I'm pulling data out of a Google doc, processing it, and writing it to a file (that eventually I will paste into a Wordpress page).</p>

<p>It has some non-ASCII symbols. How can I convert these safely to symbols that can be used in HTML source? </p>

<p>Currently I'm converting everything to Unicode on the way in, joining it all together in a Python string, then doing: </p>

<pre><code>import codecs
f = codecs.open('out.txt', mode=""w"", encoding=""iso-8859-1"")
f.write(all_html.encode(""iso-8859-1"", ""replace""))
</code></pre>

<p>There is an encoding error on the last line: </p>

<blockquote>
  <p>UnicodeDecodeError: 'ascii' codec can't decode byte 0xa0 in position
  12286: ordinal not in range(128)</p>
</blockquote>

<p><strong>Partial solution:</strong></p>

<p>This Python runs without an error:</p>

<pre><code>row = [unicode(x.strip()) if x is not None else u'' for x in row]
all_html = row[0] + ""&lt;br/&gt;"" + row[1]
f = open('out.txt', 'w')
f.write(all_html.encode(""utf-8"")
</code></pre>

<p>But then if I open the actual text file, I see lots of symbols like:</p>

<pre><code>Qur‚Äôan 
</code></pre>

<p>Maybe I need to write to something other than a text file? </p>
","<p>Deal exclusively with unicode objects as much as possible by decoding things to unicode objects when you first get them and encoding them as necessary on the way out.</p>

<p>If your string is actually a unicode object, you'll need to convert it to a unicode-encoded string object before writing it to a file:</p>

<pre><code>foo = u'Δ, Й, ק, ‎ م, ๗, あ, 叶, 葉, and 말.'
f = open('test', 'w')
f.write(foo.encode('utf8'))
f.close()
</code></pre>

<p>When you read that file again, you'll get a unicode-encoded string that you can decode to a unicode object:</p>

<pre><code>f = file('test', 'r')
print f.read().decode('utf8')
</code></pre>
","6048203"
"How can I print literal curly-brace characters in python string and also use .format on it?","174523","","<pre><code>x = "" \{ Hello \} {0} ""
print x.format(42)
</code></pre>

<p>gives me : <code>Key Error: Hello\\</code></p>

<p>I want to print the output: <code>{Hello} 42</code></p>
","<p>You need to double the <code>{{</code> and <code>}}</code>:</p>

<pre><code>&gt;&gt;&gt; x = "" {{ Hello }} {0} ""
&gt;&gt;&gt; print x.format(42)
' { Hello } 42 '
</code></pre>

<p>Here's the relevant part of the <a href=""http://docs.python.org/library/string.html#formatstrings"">Python documentation for format string syntax</a>:</p>

<blockquote>
  <p>Format strings contain “replacement fields” surrounded by curly braces <code>{}</code>. Anything that is not contained in braces is considered literal text, which is copied unchanged to the output. If you need to include a brace character in the literal text, it can be escaped by doubling: <code>{{</code> and <code>}}</code>.</p>
</blockquote>
","5466478"
"Creating a simple XML file using python","174140","","<p>What are my options if I want to create a simple XML file in python? (library wise)</p>

<p>The xml I want looks like:</p>

<pre><code>&lt;root&gt;
 &lt;doc&gt;
     &lt;field1 name=""blah""&gt;some value1&lt;/field1&gt;
     &lt;field2 name=""asdfasd""&gt;some vlaue2&lt;/field2&gt;
 &lt;/doc&gt;

&lt;/root&gt;
</code></pre>
","<p>These days, the most popular (and very simple) option is the <a href=""https://docs.python.org/2/library/xml.etree.elementtree.html"" rel=""noreferrer"">ElementTree API</a>,
which has been included in the standard library since Python 2.5.</p>

<p>The available options for that are:</p>

<ul>
<li>ElementTree (Basic, pure-Python implementation of ElementTree.  Part of the standard library since 2.5)</li>
<li>cElementTree (Optimized C implementation of ElementTree. Also offered in the standard library since 2.5)</li>
<li>LXML (Based on libxml2. Offers a rich superset of the ElementTree API as well XPath, CSS Selectors, and more)</li>
</ul>

<p>Here's an example of how to generate your example document using the in-stdlib cElementTree:</p>

<pre><code>import xml.etree.cElementTree as ET

root = ET.Element(""root"")
doc = ET.SubElement(root, ""doc"")

ET.SubElement(doc, ""field1"", name=""blah"").text = ""some value1""
ET.SubElement(doc, ""field2"", name=""asdfasd"").text = ""some vlaue2""

tree = ET.ElementTree(root)
tree.write(""filename.xml"")
</code></pre>

<p>I've tested it and it works, but I'm assuming whitespace isn't significant. If you need ""prettyprint"" indentation, let me know and I'll look up how to do that. (It may be an LXML-specific option. I don't use the stdlib implementation much)</p>

<p>For further reading, here are some useful links:</p>

<ul>
<li><a href=""http://docs.python.org/library/xml.etree.elementtree.html"" rel=""noreferrer"">API docs for the implementation in the Python standard library</a></li>
<li><a href=""http://effbot.org/zone/element-index.htm"" rel=""noreferrer"">Introductory Tutorial</a> (From the original author's site)</li>
<li><a href=""http://lxml.de/tutorial.html"" rel=""noreferrer"">LXML etree tutorial</a>. (With example code for loading the best available option from all major ElementTree implementations)</li>
</ul>

<p>As a final note, either cElementTree or LXML should be fast enough for all your needs (both are optimized C code), but in the event you're in a situation where you need to squeeze out every last bit of performance, the benchmarks on the LXML site indicate that:</p>

<ul>
<li>LXML clearly wins for serializing (generating) XML</li>
<li>As a side-effect of implementing proper parent traversal, LXML is a bit slower than cElementTree for parsing.</li>
</ul>
","3605831"
"What is the best way to create a string array in python?","174099","","<p>I'm relatively new to Python and it's libraries and I was wondering how I might create a string array with a preset size. It's easy in java but I was wondering how I might do this in python. </p>

<p>So far all I can think of is </p>

<pre><code>strs = ['']*size
</code></pre>

<p>And some how when I try to call string methods on it, the debugger gives me an error X operation does not exist in object tuple.</p>

<p>And if it was in java this is what I would want to do.</p>

<pre><code>String[] ar = new String[size];
Arrays.fill(ar,"""");
</code></pre>

<p>Please help. </p>

<p><strong>Error code</strong></p>

<pre><code>    strs[sum-1] = strs[sum-1].strip('\(\)')
AttributeError: 'tuple' object has no attribute 'strip'
</code></pre>

<p><strong>Question</strong>: How might I do what I can normally do in Java in Python while still keeping the code clean.</p>
","<p>In python, you wouldn't normally do what you are trying to do. But, the below code will do it:</p>

<pre><code>strs = ["""" for x in range(size)]
</code></pre>
","6377007"
"Changing default encoding of Python?","173993","","<p>I have many ""can't encode"" and ""can't decode"" problems with <a href=""http://en.wikipedia.org/wiki/Python_%28programming_language%29"" rel=""noreferrer"">Python</a> when I run my applications from the console. But in the <a href=""http://en.wikipedia.org/wiki/Eclipse_%28software%29"" rel=""noreferrer"">Eclipse</a> <a href=""http://en.wikipedia.org/wiki/PyDev"" rel=""noreferrer"">PyDev</a> IDE, the default character encoding is set to <a href=""http://en.wikipedia.org/wiki/UTF-8"" rel=""noreferrer"">UTF-8</a>, and I'm fine.</p>

<p>I searched around for setting the default encoding, and people say that Python deletes the <code>sys.setdefaultencoding</code> function on startup, and we can not use it.</p>

<p>So what's the best solution for it?</p>
","<p>Here is a simpler method (hack) that gives you back the <code>setdefaultencoding()</code> function that was deleted from <code>sys</code>:</p>

<pre><code>import sys
# sys.setdefaultencoding() does not exist, here!
reload(sys)  # Reload does the trick!
sys.setdefaultencoding('UTF8')
</code></pre>

<p><strong>This is not a safe thing to do</strong>, though: this is obviously a hack, since <code>sys.setdefaultencoding()</code> is purposely removed from <code>sys</code> when Python starts. Reenabling it and changing the default encoding <a href=""https://anonbadger.wordpress.com/2015/06/16/why-sys-setdefaultencoding-will-break-code/"" rel=""noreferrer"">can break code that relies on ASCII being the default</a> (this code can be third-party, which would generally make fixing it impossible or dangerous).</p>
","17628350"
"What is a clean, pythonic way to have multiple constructors in Python?","173690","","<p>I can't find a definitive answer for this. AFAIK, you can't have multiple <code>__init__</code> functions in a Python class. So what is a good way to solve this problem? </p>

<p>Suppose I have an class called <code>Cheese</code> with the <code>number_of_holes</code> property. How can I have two ways of creating cheese-objects...</p>

<ul>
<li>one that takes a number of holes like this: <code>parmesan = Cheese(num_holes = 15)</code></li>
<li>and one that takes no arguments and just randomizes the <code>number_of_holes</code> property: <code>gouda = Cheese()</code></li>
</ul>

<p>I can think of only one way to do this, but that seems kinda clunky:</p>

<pre><code>class Cheese():
    def __init__(self, num_holes = 0):
        if (num_holes == 0):
            # randomize number_of_holes
        else:
            number_of_holes = num_holes
</code></pre>

<p>What do you say? Is there a better way?</p>
","<p>Actually <code>None</code> is much better for ""magic"" values:</p>

<pre><code>class Cheese():
    def __init__(self, num_holes = None):
        if num_holes is None:
            ...
</code></pre>

<p>Now if you want complete freedom of adding more parameters:</p>

<pre><code>class Cheese():
    def __init__(self, *args, **kwargs):
        #args -- tuple of anonymous arguments
        #kwargs -- dictionary of named arguments
        self.num_holes = kwargs.get('num_holes',random_holes())
</code></pre>

<p>To better explain the concept of <code>*args</code> and <code>**kwargs</code> (you can actually change these names):</p>

<pre><code>def f(*args, **kwargs):
   print 'args: ', args, ' kwargs: ', kwargs

&gt;&gt;&gt; f('a')
args:  ('a',)  kwargs:  {}
&gt;&gt;&gt; f(ar='a')
args:  ()  kwargs:  {'ar': 'a'}
&gt;&gt;&gt; f(1,2,param=3)
args:  (1, 2)  kwargs:  {'param': 3}
</code></pre>

<p><a href=""http://docs.python.org/reference/expressions.html#calls"" rel=""noreferrer"">http://docs.python.org/reference/expressions.html#calls</a></p>
","682513"
"How do I watch a file for changes?","173637","","<p>I have a log file being written by another process which I want to watch for changes. Each time a change occurs I'd like to read the new data in to do some processing on it.</p>

<p>What's the best way to do this? I was hoping there'd be some sort of hook from the PyWin32 library. I've found the <code>win32file.FindNextChangeNotification</code> function but have no idea how to ask it to watch a specific file.</p>

<p>If anyone's done anything like this I'd be really grateful to hear how...</p>

<p><strong>[Edit]</strong> I should have mentioned that I was after a solution that doesn't require polling.</p>

<p><strong>[Edit]</strong> Curses! It seems this doesn't work over a mapped network drive. I'm guessing windows doesn't 'hear' any updates to the file the way it does on a local disk.</p>
","<p>Have you already looked at the documentation available on <a href=""http://timgolden.me.uk/python/win32_how_do_i/watch_directory_for_changes.html"" rel=""noreferrer"">http://timgolden.me.uk/python/win32_how_do_i/watch_directory_for_changes.html</a>? If you only need it to work under Windows the 2nd example seems to be exactly what you want (if you exchange the path of the directory with the one of the file you want to watch). </p>

<p>Otherwise, polling will probably be the only really platform-independent option.</p>

<p><strong>Note:</strong> I haven't tried any of these solutions.</p>
","182247"
"How to calculate the time interval between two time strings","173573","","<p>I have two times, a start and a stop time, in the format of 10:33:26 (HH:MM:SS).  I need the difference between the two times.  I've been looking through documentation for Python and searching online and I would imagine it would have something to do with the datetime and/or time modules.  I can't get it to work properly and keep finding only how to do this when a date is involved.</p>

<p>Ultimately, I need to calculate the averages of multiple time durations. I got the time differences to work and I'm storing them in a list. I now need to calculate the average. I'm using regular expressions to parse out the original times and then doing the differences.  </p>

<p>For the averaging, should I convert to seconds and then average?</p>
","<p>Yes, definitely <a href=""http://docs.python.org/library/datetime.html"" rel=""noreferrer""><code>datetime</code></a> is what you need here. Specifically, the <code>strptime</code> function, which parses a string into a time object.</p>

<pre><code>from datetime import datetime
s1 = '10:33:26'
s2 = '11:15:49' # for example
FMT = '%H:%M:%S'
tdelta = datetime.strptime(s2, FMT) - datetime.strptime(s1, FMT)
</code></pre>

<p>That gets you a <code>timedelta</code> object that contains the difference between the two times. You can do whatever you want with that, e.g. converting it to seconds or adding it to another <code>datetime</code>.</p>

<p>This will return a negative result if the end time is earlier than the start time, for example <code>s1 = 12:00:00</code> and <code>s2 = 05:00:00</code>. If you want the code to assume the interval crosses midnight in this case (i.e. it should assume the end time is never earlier than the start time), you can add the following lines to the above code:</p>

<pre><code>if tdelta.days &lt; 0:
    tdelta = timedelta(days=0,
                seconds=tdelta.seconds, microseconds=tdelta.microseconds)
</code></pre>

<p>(of course you need to include <code>from datetime import timedelta</code> somewhere). Thanks to J.F. Sebastian for pointing out this use case.</p>
","3096984"
"pandas iloc vs ix vs loc explanation?","173402","","<p>Can someone explain how these three methods of slicing are different?<br>
I've seen <a href=""http://pandas.pydata.org/pandas-docs/stable/indexing.html"" rel=""noreferrer"">the docs</a>, 
and I've seen <a href=""https://stackoverflow.com/questions/28757389/loc-vs-iloc-vs-ix-vs-at-vs-iat"">these</a> <a href=""https://stackoverflow.com/questions/27667759/is-ix-always-better-than-loc-and-iloc-since-it-is-faster-and-supports-i"">answers</a>, but I still find myself unable to explain how the three are different.  To me, they seem interchangeable in large part, because they are at the lower levels of slicing.</p>

<p>For example, say we want to get the first five rows of a <code>DataFrame</code>.  How is it that all three of these work?</p>

<pre><code>df.loc[:5]
df.ix[:5]
df.iloc[:5]
</code></pre>

<p>Can someone present three cases where the distinction in uses are clearer?</p>
","<p><em>Note: in pandas version 0.20.0 and above, <code>ix</code> is <a href=""http://pandas-docs.github.io/pandas-docs-travis/indexing.html#ix-indexer-is-deprecated"" rel=""noreferrer"">deprecated</a> and the use of <code>loc</code> and <code>iloc</code> is encouraged instead. I have left the parts of this answer that describe <code>ix</code> intact as a reference for users of earlier versions of pandas. Examples have been added below showing alternatives to  <code>ix</code></em>.</p>

<hr>

<p>First, here's a recap of the three methods:</p>

<ul>
<li><code>loc</code> gets rows (or columns) with particular <em>labels</em> from the index. </li>
<li><code>iloc</code> gets rows (or columns) at particular <em>positions</em> in the index (so it only takes integers).</li>
<li><code>ix</code> usually tries to behave like <code>loc</code> but falls back to behaving like <code>iloc</code> if a label is not present in the index.</li>
</ul>

<p>It's important to note some subtleties that can make <code>ix</code> slightly tricky to use:</p>

<ul>
<li><p>if the index is of integer type, <code>ix</code> will only use label-based indexing and not fall back to position-based indexing. If the label is not in the index, an error is raised.</p></li>
<li><p>if the index does not contain <em>only</em> integers, then given an integer, <code>ix</code> will immediately use position-based indexing rather than label-based indexing. If however <code>ix</code> is given another type (e.g. a string), it can use label-based indexing.</p></li>
</ul>

<hr>

<p>To illustrate the differences between the three methods, consider the following Series:</p>

<pre><code>&gt;&gt;&gt; s = pd.Series(np.nan, index=[49,48,47,46,45, 1, 2, 3, 4, 5])
&gt;&gt;&gt; s
49   NaN
48   NaN
47   NaN
46   NaN
45   NaN
1    NaN
2    NaN
3    NaN
4    NaN
5    NaN
</code></pre>

<p>We'll look at slicing with the integer value <code>3</code>.</p>

<p>In this case, <code>s.iloc[:3]</code> returns us the first 3 rows (since it treats 3 as a position) and <code>s.loc[:3]</code> returns us the first 8 rows (since it treats 3 as a label):</p>

<pre><code>&gt;&gt;&gt; s.iloc[:3] # slice the first three rows
49   NaN
48   NaN
47   NaN

&gt;&gt;&gt; s.loc[:3] # slice up to and including label 3
49   NaN
48   NaN
47   NaN
46   NaN
45   NaN
1    NaN
2    NaN
3    NaN

&gt;&gt;&gt; s.ix[:3] # the integer is in the index so s.ix[:3] works like loc
49   NaN
48   NaN
47   NaN
46   NaN
45   NaN
1    NaN
2    NaN
3    NaN
</code></pre>

<p>Notice <code>s.ix[:3]</code> returns the same Series as <code>s.loc[:3]</code> since it looks for the label first rather than working on the position (and the index for <code>s</code> is of integer type).</p>

<p>What if we try with an integer label that isn't in the index (say <code>6</code>)?</p>

<p>Here <code>s.iloc[:6]</code> returns the first 6 rows of the Series as expected. However, <code>s.loc[:6]</code> raises a KeyError since <code>6</code> is not in the index. </p>

<pre><code>&gt;&gt;&gt; s.iloc[:6]
49   NaN
48   NaN
47   NaN
46   NaN
45   NaN
1    NaN

&gt;&gt;&gt; s.loc[:6]
KeyError: 6

&gt;&gt;&gt; s.ix[:6]
KeyError: 6
</code></pre>

<p>As per the subtleties noted above, <code>s.ix[:6]</code> now raises a KeyError because it tries to work like <code>loc</code> but can't find a <code>6</code> in the index. Because our index is of integer type <code>ix</code> doesn't fall back to behaving like <code>iloc</code>.</p>

<p>If, however, our index was of mixed type, given an integer <code>ix</code> would behave like <code>iloc</code> immediately instead of raising a KeyError:</p>

<pre><code>&gt;&gt;&gt; s2 = pd.Series(np.nan, index=['a','b','c','d','e', 1, 2, 3, 4, 5])
&gt;&gt;&gt; s2.index.is_mixed() # index is mix of different types
True
&gt;&gt;&gt; s2.ix[:6] # now behaves like iloc given integer
a   NaN
b   NaN
c   NaN
d   NaN
e   NaN
1   NaN
</code></pre>

<p>Keep in mind that <code>ix</code> can still accept non-integers and behave like <code>loc</code>:</p>

<pre><code>&gt;&gt;&gt; s2.ix[:'c'] # behaves like loc given non-integer
a   NaN
b   NaN
c   NaN
</code></pre>

<p>As general advice, if you're only indexing using labels, or only indexing using integer positions, stick with <code>loc</code> or <code>iloc</code> to avoid unexpected results - try not use <code>ix</code>.</p>

<hr>

<h3>Combining position-based and label-based indexing</h3>

<p>Sometimes given a DataFrame, you will want to mix label and positional indexing methods for the rows and columns.</p>

<p>For example, consider the following DataFrame. How best to slice the rows up to and including 'c' <em>and</em> take the first four columns?</p>

<pre><code>&gt;&gt;&gt; df = pd.DataFrame(np.nan, 
                      index=list('abcde'),
                      columns=['x','y','z', 8, 9])
&gt;&gt;&gt; df
    x   y   z   8   9
a NaN NaN NaN NaN NaN
b NaN NaN NaN NaN NaN
c NaN NaN NaN NaN NaN
d NaN NaN NaN NaN NaN
e NaN NaN NaN NaN NaN
</code></pre>

<p>In earlier versions of pandas (before 0.20.0) <code>ix</code> lets you do this quite neatly - we can slice the rows by label and the columns by position (note that for the columns, <code>ix</code> will default to position-based slicing since  <code>4</code> is not a column name):</p>

<pre><code>&gt;&gt;&gt; df.ix[:'c', :4]
    x   y   z   8
a NaN NaN NaN NaN
b NaN NaN NaN NaN
c NaN NaN NaN NaN
</code></pre>

<p>In later versions of pandas, we can achieve this result using <code>iloc</code> and the help of another method:</p>

<pre><code>&gt;&gt;&gt; df.iloc[:df.index.get_loc('c') + 1, :4]
    x   y   z   8
a NaN NaN NaN NaN
b NaN NaN NaN NaN
c NaN NaN NaN NaN
</code></pre>

<p><a href=""http://pandas.pydata.org/pandas-docs/version/0.19.1/generated/pandas.Index.get_loc.html"" rel=""noreferrer""><code>get_loc()</code></a> is an index method meaning ""get the position of the label in this index"". Note that since slicing with <code>iloc</code> is exclusive of its endpoint, we must add 1 to this value if we want row 'c' as well.</p>

<p>There are further examples in pandas' documentation <a href=""http://pandas-docs.github.io/pandas-docs-travis/indexing.html#ix-indexer-is-deprecated"" rel=""noreferrer"">here</a>.</p>
","31593712"
"what does these operators mean (** , ^ , %, //) ? - Python?","173376","","<p>Other than the standard <code>+</code>, <code>-</code>, <code>*</code>and <code>/</code> operators; but what does these mean (<code>**</code> , <code>^</code> , <code>%</code>, <code>//</code>) ?</p>

<pre><code>&gt;&gt;&gt; 9+float(2) # addition
11.0
&gt;&gt;&gt; 9-float(2) # subtraction
7.0
&gt;&gt;&gt; 9*float(2) # multiplication
18.0
&gt;&gt;&gt; 9/float(2) # division
4.5
&gt;&gt;&gt;
&gt;&gt;&gt; 9**float(2) # This looks like a square, (i.e. power 2) 
81.0
&gt;&gt;&gt; 9**float(3) # So ** is equivalent to `math.pow(x,p)` ?
729.0
</code></pre>

<p><strong>How about the <code>^</code> operator?</strong></p>

<pre><code>&gt;&gt;&gt; 9^int(2) # What is `^` in `x^u` , it only allows `int` for `u`
11
&gt;&gt;&gt; 9^int(3)
10
&gt;&gt;&gt; 9^int(4)
13
&gt;&gt;&gt; 9^int(5)
12
&gt;&gt;&gt; 9^int(6)
15
&gt;&gt;&gt; 9^int(7)
14
&gt;&gt;&gt; 9^int(8)
1
&gt;&gt;&gt; 9^int(9)
0
&gt;&gt;&gt; 9^int(10)
3
&gt;&gt;&gt; 9^int(11)
2
&gt;&gt;&gt; 9^int(12)
5
</code></pre>

<p><strong><code>%</code> in <code>x%m</code> returns a normal remainder modulus, but only if <code>m &lt; x</code>, why is that so? What does <code>%</code> do?</strong></p>

<pre><code>&gt;&gt;&gt; 9%float(2)
1.0
&gt;&gt;&gt; 9%float(3)
0.0
&gt;&gt;&gt; 9%float(4)
1.0
&gt;&gt;&gt; 9%float(5)
4.0
&gt;&gt;&gt; 9%float(6)
3.0
&gt;&gt;&gt; 9%float(7)
2.0
&gt;&gt;&gt; 9%float(8)
1.0
&gt;&gt;&gt; 9%float(9)
0.0
&gt;&gt;&gt; 9%float(10)
9.0
&gt;&gt;&gt; 9%float(11)
9.0
&gt;&gt;&gt; 9%float(12)
9.0
</code></pre>

<p><strong>How about the <code>//</code> operator? what does it do?</strong></p>

<pre><code>&gt;&gt;&gt; 9//float(2)
4.0
&gt;&gt;&gt; 9//float(3)
3.0
&gt;&gt;&gt; 9//float(4)
2.0
&gt;&gt;&gt; 9//float(5)
1.0
&gt;&gt;&gt; 9//float(6)
1.0
&gt;&gt;&gt; 9//float(7)
1.0
&gt;&gt;&gt; 9//float(8)
1.0
&gt;&gt;&gt; 9//float(9)
1.0
&gt;&gt;&gt; 9//float(1)
9.0
&gt;&gt;&gt; 9//float(0.5)
18.0
</code></pre>
","<ul>
<li><code>**</code>: exponentiation</li>
<li><code>^</code>: exclusive-or (bitwise)</li>
<li><code>%</code>: modulus</li>
<li><code>//</code>: divide with integral result (discard remainder)</li>
</ul>
","15193961"
"Python Prime number checker","172957","","<p>I have been trying to write a program that will take an inputed number, and check and see if it is a prime number.  The code that I have made so far works perfectly if the number is in fact a prime number.  If the number is not a prime number it acts strange.  I was wondering if anyone could tell me what the issue is with the code. </p>

<pre><code>a=2
num=13
while num &gt; a :
  if num%a==0 &amp; a!=num:
    print('not prime')
    a=a+1
  else:
    print('prime')
    a=(num)+1
</code></pre>

<p>the result given when 24 is inputed is:
not prime
not prime
not prime
prime</p>

<p>How would i fix the error with the reporting prime on every odd and not prime for every even</p>
","<p>You need to stop iterating once you know a number isn't prime.  Add a <code>break</code> once you find prime to exit the while loop.</p>

<p>Making only minimal changes to your code to make it work:</p>

<pre><code>a=2
num=13
while num &gt; a :
  if num%a==0 &amp; a!=num:
    print('not prime')
    break
  i += 1
else: # loop not exited via break
  print('prime')
</code></pre>

<p>Your algorithm is equivalent to:</p>

<pre><code>for a in range(a, num):
    if a % num == 0:
        print('not prime')
        break
else: # loop not exited via break
    print('prime')
</code></pre>

<p>If you throw it into a function you can dispense with <code>break</code> and for-else:</p>

<pre><code>def is_prime(n):
    for i in range(3, n):
        if n % i == 0:
            return False
    return True
</code></pre>

<p>Even if you are going to brute-force for prime like this you only need to iterate up to the square root of <code>n</code>.  Also, you can skip testing the even numbers after two.</p>

<p>With these suggestions:</p>

<pre><code>import math
def is_prime(n):
    if n % 2 == 0 and n &gt; 2: 
        return False
    for i in range(3, int(math.sqrt(n)) + 1, 2):
        if n % i == 0:
            return False
    return True
</code></pre>

<p>Note that this code does not properly handle <code>0</code>, <code>1</code>, and negative numbers.</p>

<p>We make this simpler by using <code>all</code> with a generator expression to replace the for-loop.</p>

<pre><code>import math
def is_prime(n):
    if n % 2 == 0 and n &gt; 2: 
        return False
    return all(n % i for i in range(3, int(math.sqrt(n)) + 1, 2))
</code></pre>
","18833870"
"What is the perfect counterpart in Python for ""while not EOF""","172664","","<p>To read some text file, in C or Pascal, I always use the following snippets to read the data until EOF:</p>

<pre><code>while not eof do begin
  readline(a);
  do_something;
end;
</code></pre>

<p>Thus, I wonder how can I do this simple and fast in Python? </p>
","<p>Loop over the file to read lines:</p>

<pre><code>with open('somefile') as openfileobject:
    for line in openfileobject:
        do_something()
</code></pre>

<p>File objects are iterable and yield lines until EOF. Using the file object as an iterable uses  a buffer to ensure performant reads.</p>

<p>You can do the same with the stdin (no need to use <code>raw_input()</code>:</p>

<pre><code>import sys

for line in sys.stdin:
    do_something()
</code></pre>

<p>To complete the picture, binary reads can be done with:</p>

<pre><code>from functools import partial

with open('somefile', 'rb') as openfileobject:
    for chunk in iter(partial(openfileobject.read, 1024), ''):
        do_something()
</code></pre>

<p>where <code>chunk</code> will contain up to 1024 bytes at a time from the file.</p>
","15599648"
"Python Hexadecimal","172425","","<p>How to convert decimal to hex in the following format (at least two digits, zero-padded, without an 0x prefix)?</p>

<p>Input: <code>255</code>    Output:<code>ff</code> </p>

<p>Input: <code>2</code>       Output: <code>02</code></p>

<p>I tried <code>hex(int)[2:]</code> but it seems that it displays the first example but not the second one. </p>
","<p>Use the <a href=""http://docs.python.org/2/library/functions.html#format"" rel=""noreferrer""><code>format()</code> function</a> with a <code>'02x'</code> format.</p>

<pre><code>&gt;&gt;&gt; format(255, '02x')
'ff'
&gt;&gt;&gt; format(2, '02x')
'02'
</code></pre>

<p>The <code>02</code> part tells <code>format()</code> to use at least 2 digits and to use zeros to pad it to length, <code>x</code> means lower-case hexadecimal.</p>

<p>The <a href=""https://docs.python.org/2/library/string.html#formatspec"" rel=""noreferrer""><em>Format Specification Mini Language</em></a> also gives you <code>X</code> for uppercase hex output, and you can prefix the field width with <code>#</code> to include a <code>0x</code> or <code>0X</code> prefix (depending on wether you used <code>x</code> or <code>X</code> as the formatter). Just take into account that you need to adjust the field width to allow for those extra 2 characters:</p>

<pre><code>&gt;&gt;&gt; format(255, '02X')
'FF'
&gt;&gt;&gt; format(255, '#04x')
'0xff'
&gt;&gt;&gt; format(255, '#04X')
'0XFF'
</code></pre>
","14678150"
"Relative paths in Python","172423","","<p>I'm building a simple helper script for work that will copy a couple of template files in our code base to the current directory. I don't, however, have the absolute path to the directory where the templates are stored. I do have a relative path from the script but when I call the script it treats that as a path relative to the current working directory. Is there a way to specify that this relative url is from the location of the script instead?</p>
","<p>In the file that has the script, you want to do something like this:</p>

<pre><code>import os
dir = os.path.dirname(__file__)
filename = os.path.join(dir, '/relative/path/to/file/you/want')
</code></pre>

<p>This will give you the absolute path to the file you're looking for.  Note that if you're using setuptools, you should probably use its <a href=""http://peak.telecommunity.com/DevCenter/PythonEggs#accessing-package-resources"" rel=""noreferrer"">package resources API</a> instead.</p>

<p><strong>UPDATE</strong>:  I'm responding to a comment here so I can paste a code sample.  :-)</p>

<blockquote>
  <p>Am I correct in thinking that <code>__file__</code> is not always available (e.g. when you run the file directly rather than importing it)?</p>
</blockquote>

<p>I'm assuming you mean the <code>__main__</code> script when you mention running the file directly.  If so, that doesn't appear to be the case on my system (python 2.5.1 on OS X 10.5.7):</p>

<pre><code>#foo.py
import os
print os.getcwd()
print __file__

#in the interactive interpreter
&gt;&gt;&gt; import foo
/Users/jason
foo.py

#and finally, at the shell:
~ % python foo.py
/Users/jason
foo.py
</code></pre>

<p>However, I do know that there are some quirks with <code>__file__</code> on C extensions.  For example, I can do this on my Mac:</p>

<pre><code>&gt;&gt;&gt; import collections #note that collections is a C extension in Python 2.5
&gt;&gt;&gt; collections.__file__
'/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/lib-
dynload/collections.so'
</code></pre>

<p>However, this raises an exception on my Windows machine.</p>
","918178"
"Convert date to datetime in Python","172375","","<p>Silly question, but is there a built-in method for converting a <code>date</code> to a <code>datetime</code> in Python, ie. getting the <code>datetime</code> for the midnight of the <code>date</code>? The opposite conversion is easy - <code>datetime</code> has a <code>.date()</code> method. Do I really have to manually call <code>datetime(d.year, d.month, d.day)</code> ?</p>
","<p>You can use <a href=""https://docs.python.org/2/library/datetime.html#datetime.datetime.combine"" rel=""noreferrer"">datetime.combine</a>(date, time); for the time, you create a <code>datetime.time</code> object initialized to midnight.</p>

<pre><code>from datetime import date
from datetime import datetime
d = date.today()
datetime.combine(d, datetime.min.time())
</code></pre>
","1937636"
"How to keep a Python script output window open?","172181","","<p>I have just started with Python. When I execute a python script file on Windows, the output window appears but instantaneously goes away. I need it to stay there so I can analyze my output. How can I keep it open?</p>
","<p>You have a few options:</p>

<ol>
<li><p>Run the program from an already-open terminal. Open a command prompt and type:</p>

<pre><code>python myscript.py
</code></pre>

<p>For that to work you need the python executable in your path. Just check on <a href=""https://superuser.com/questions/284342/what-are-path-and-other-environment-variables-and-how-can-i-set-or-use-them"">how to edit environment variables</a> on Windows, and add <code>C:\PYTHON26</code> (or whatever directory you installed python to).</p>

<p>When the program ends, it'll drop you back to the <strong>cmd</strong> prompt instead of closing the window.</p></li>
<li><p>Add code to wait at the end of your script. For Python2, adding ...</p>

<pre><code>raw_input()
</code></pre>

<p>... at the end of the script makes it wait for the <kbd>Enter</kbd> key. That method is annoying because you have to modify the script, and have to remember removing it when you're done. Specially annoying when testing other people's scripts.  For Python3, use <code>input()</code>.</p></li>
<li><p>Use an editor that pauses for you. Some editors prepared for python will automatically pause for you after execution. Other editors allow you to configure the command line it uses to run your program. I find it particularly useful to configure it as ""<code>python -i myscript.py</code>"" when running. That drops you to a python shell after the end of the program, with the program environment loaded, so you may further play with the variables and call functions and methods.</p></li>
</ol>
","1000968"
"How do I update a Python package?","172038","","<p>I'm running Ubuntu 9:10 and a package called M2Crypto is installed (version is 0.19.1). I need to download, build and install the latest version of the M2Crypto package (0.20.2). </p>

<p>The 0.19.1 package has files in a number of locations including (/usr/share/pyshared and /usr/lib/pymodules.python2.6).</p>

<p>How can I completely uninstall version 0.19.1 from my system before installing 0.20.2?</p>
","<p>You might want to look into a Python package manager like <a href=""https://pip.pypa.io/en/stable/"" rel=""noreferrer"">pip</a>.  If you don't want to use a Python package manager, you should be able to download M2Crypto and build/compile/install over the old installation.</p>
","5183714"
"Get all object attributes in Python?","171876","","<p>Is there a way to get <strong>all</strong> attributes/methods/fields/etc. of an object in Python?</p>

<p><code>vars()</code> is <em>close</em> to what I want, but it doesn't work unless an object has a <code>__dict__</code>, which isn't always true (e.g. it's not true for a <code>list</code>, a <code>dict</code>, etc.).</p>
","<p>Use the built-in function <a href=""http://docs.python.org/library/functions.html#dir"" rel=""noreferrer""><code>dir()</code></a>.</p>
","6886507"
"Get Last Day of the Month in Python","171635","","<p>Is there a way using Python's standard library to easily determine (i.e. one function call) the last day of a given month?</p>

<p>If the standard library doesn't support that, does the dateutil package support this?</p>
","<p>I didn't notice this earlier when I was looking at the <a href=""https://docs.python.org/2/library/calendar.html"" rel=""noreferrer"">documentation for the calendar module</a>, but a method called <a href=""http://docs.python.org/library/calendar.html#calendar.monthrange"" rel=""noreferrer"">monthrange</a> provides this information:</p>

<blockquote>
  <p><b>monthrange(year, month)</b><br>
  &nbsp;&nbsp;&nbsp;&nbsp;Returns weekday of first day of the month and number of days in month, for the specified year and month. </p>
</blockquote>

<pre><code>&gt;&gt;&gt; import calendar
&gt;&gt;&gt; calendar.monthrange(2002,1)
(1, 31)
&gt;&gt;&gt; calendar.monthrange(2008,2)
(4, 29)
&gt;&gt;&gt; calendar.monthrange(2100,2)
(0, 28)
</code></pre>

<p>so:</p>

<pre><code>calendar.monthrange(year, month)[1]
</code></pre>

<p>seems like the simplest way to go.</p>

<p>Just to be clear, <code>monthrange</code> supports leap years as well:</p>

<pre><code>&gt;&gt;&gt; from calendar import monthrange
&gt;&gt;&gt; monthrange(2012, 2)
(2, 29)
</code></pre>

<p><a href=""https://stackoverflow.com/questions/42950/get-last-day-of-the-month-in-python#43088"">My previous answer</a> still works, but is clearly suboptimal.</p>
","43663"
"Syntax error on print with Python 3","171623","","<p>Why do I receive a syntax error when printing a string in Python 3?</p>

<pre><code>&gt;&gt;&gt; print ""hello World""
  File ""&lt;stdin&gt;"", line 1
    print ""hello World""
                      ^
SyntaxError: invalid syntax
</code></pre>
","<p>In Python 3, <code>print</code> <a href=""http://docs.python.org/3.0/whatsnew/3.0.html#print-is-a-function"" rel=""noreferrer"">became a function</a>. This means that you need to include parenthesis now like mentioned below:</p>

<pre><code>print(""Hello World"")
</code></pre>
","826957"
"How do I use Python's itertools.groupby()?","171621","","<p>I haven't been able to find an understandable explanation of how to actually use Python's <code>itertools.groupby()</code> function.  What I'm trying to do is this:</p>

<ul>
<li>Take a list - in this case, the children of an objectified <code>lxml</code> element</li>
<li>Divide it into groups based on some criteria</li>
<li>Then later iterate over each of these groups separately.</li>
</ul>

<p>I've reviewed <a href=""https://docs.python.org/2/library/itertools.html"" rel=""noreferrer"">the documentation</a>, and <a href=""https://docs.python.org/2/library/itertools.html#itertools.groupby"" rel=""noreferrer"">the examples</a>, but I've had trouble trying to apply them beyond a simple list of numbers. </p>

<p>So, how do I use of <code>itertools.groupby()</code>?  Is there another technique I should be using?  Pointers to good ""prerequisite"" reading would also be appreciated.</p>
","<p>As Sebastjan said, <strong>you first have to sort your data. This is important.</strong></p>

<p>The part I didn't get is that in the example construction</p>

<pre><code>groups = []
uniquekeys = []
for k, g in groupby(data, keyfunc):
   groups.append(list(g))    # Store group iterator as a list
   uniquekeys.append(k)
</code></pre>

<p><code>k</code> is the current grouping key, and <code>g</code> is an iterator that you can use to iterate over the group defined by that grouping key. In other words, the <code>groupby</code> iterator itself returns iterators.</p>

<p>Here's an example of that, using clearer variable names:</p>

<pre><code>from itertools import groupby

things = [(""animal"", ""bear""), (""animal"", ""duck""), (""plant"", ""cactus""), (""vehicle"", ""speed boat""), (""vehicle"", ""school bus"")]

for key, group in groupby(things, lambda x: x[0]):
    for thing in group:
        print ""A %s is a %s."" % (thing[1], key)
    print "" ""
</code></pre>

<p>This will give you the output:</p>

<blockquote>
  <p>A bear is a animal.<br>
  A duck is a animal.</p>
  
  <p>A cactus is a plant.</p>
  
  <p>A speed boat is a vehicle.<br>
  A school bus is a vehicle.</p>
</blockquote>

<p>In this example, <code>things</code> is a list of tuples where the first item in each tuple is the group the second item belongs to. </p>

<p>The <code>groupby()</code> function takes two arguments: (1) the data to group and (2) the function to group it with. </p>

<p>Here, <code>lambda x: x[0]</code> tells <code>groupby()</code> to use the first item in each tuple as the grouping key.</p>

<p>In the above <code>for</code> statement, <code>groupby</code> returns three (key, group iterator) pairs - once for each unique key. You can use the returned iterator to iterate over each individual item in that group.</p>

<p>Here's a slightly different example with the same data, using a list comprehension:</p>

<pre><code>for key, group in groupby(things, lambda x: x[0]):
    listOfThings = "" and "".join([thing[1] for thing in group])
    print key + ""s:  "" + listOfThings + "".""
</code></pre>

<p>This will give you the output:</p>

<blockquote>
  <p>animals: bear and duck.<br>
  plants: cactus.<br>
  vehicles: speed boat and school bus.</p>
</blockquote>
","7286"
"How to convert 2D float numpy array to 2D int numpy array?","171587","","<p>How to convert real numpy array to int numpy array?
Tried using map directly to array but it did not work.</p>
","<p>Use the <code>astype</code> method.</p>

<pre><code>&gt;&gt;&gt; x = np.array([[1.0, 2.3], [1.3, 2.9]])
&gt;&gt;&gt; x
array([[ 1. ,  2.3],
       [ 1.3,  2.9]])
&gt;&gt;&gt; x.astype(int)
array([[1, 2],
       [1, 2]])
</code></pre>
","10873843"
"What is the difference between old style and new style classes in Python?","171539","","<p>What is the difference between old style and new style classes in Python?  Is there ever a reason to use old-style classes these days?</p>
","<p>From <a href=""http://docs.python.org/2/reference/datamodel.html#new-style-and-classic-classes"" rel=""noreferrer"">http://docs.python.org/2/reference/datamodel.html#new-style-and-classic-classes</a> :</p>

<blockquote>
  <p>Up to Python 2.1, old-style classes were the only flavour available to the user. The concept of (old-style) class is unrelated to the concept of type: if <code>x</code> is an instance of an old-style class, then <code>x.__class__</code> designates the class of <code>x</code>, but <code>type(x)</code> is always <code>&lt;type 'instance'&gt;</code>. This reflects the fact that all old-style instances, independently of their class, are implemented with a single built-in type, called instance. </p>
  
  <p><strong>New-style classes were introduced in Python 2.2 to unify the concepts of class and type</strong>. A new-style class is simply a user-defined type, no more, no less. If x is an instance of a new-style class, then <code>type(x)</code> is typically the same as <code>x.__class__</code> (although this is not guaranteed – a new-style class instance is permitted to override the value returned for <code>x.__class__</code>).</p>
  
  <p><strong>The major motivation for introducing new-style classes is to provide a unified object model with a full meta-model</strong>. It also has a number of immediate benefits, like the ability to subclass most built-in types, or the introduction of ""descriptors"", which enable computed properties. </p>
  
  <p><strong>For compatibility reasons, classes are still old-style by default</strong>. New-style classes are created by specifying another new-style class (i.e. a type) as a parent class, or the ""top-level type"" object if no other parent is needed. The behaviour of new-style classes differs from that of old-style classes in a number of important details in addition to what type returns. Some of these changes are fundamental to the new object model, like the way special methods are invoked. Others are ""fixes"" that could not be implemented before for compatibility concerns, like the method resolution order in case of multiple inheritance. </p>
  
  <p><strong>Python 3 only has new-style classes</strong>. No matter if you subclass from <code>object</code> or not, classes are new-style in Python 3.</p>
</blockquote>
","54873"
"Python - Convert UTC datetime string to local datetime","171427","","<p>I've never had to convert time to and from utc. Recently had a request to have my app be timezone aware, and I've been running myself in circles. Lots of information on converting local time to utc, which I found fairly elementary (maybe I'm doing that wrong as well), but I can not find any information on easily converting the utc time to the end-users timezone.</p>

<p>In a nutshell, and android app sends me (appengine app) data and within that data is a timestamp. To store that timestamp to utc time I am using:</p>

<pre><code>datetime.utcfromtimestamp(timestamp)
</code></pre>

<p>That seems to be working. When my app stores the data, it is being store as 5 hours ahead (I am EST -5)</p>

<p>The data is being stored on appengine's BigTable, and when retrieved it comes out as a string like so: </p>

<pre><code>""2011-01-21 02:37:21""
</code></pre>

<p>How do I convert this string to a DateTime in the users correct time zone?</p>

<p>Also, what is the recommended storage for a users timezone information?  (How do you typically store tz info ie: ""-5:00"" or ""EST"" etc etc ?) I'm sure the answer to my first question might contain a parameter the answers the second.  </p>
","<p>If you don't want to provide your own <code>tzinfo</code> objects, check out the <a href=""http://niemeyer.net/python-dateutil"">python-dateutil</a> library.  It provides <code>tzinfo</code> implementations on top of a <a href=""http://en.wikipedia.org/wiki/Tz_database"">zoneinfo (Olson) database</a> such that you can refer to time zone rules by a somewhat canonical name.</p>

<pre><code>from datetime import datetime
from dateutil import tz

# METHOD 1: Hardcode zones:
from_zone = tz.gettz('UTC')
to_zone = tz.gettz('America/New_York')

# METHOD 2: Auto-detect zones:
from_zone = tz.tzutc()
to_zone = tz.tzlocal()

# utc = datetime.utcnow()
utc = datetime.strptime('2011-01-21 02:37:21', '%Y-%m-%d %H:%M:%S')

# Tell the datetime object that it's in UTC time zone since 
# datetime objects are 'naive' by default
utc = utc.replace(tzinfo=from_zone)

# Convert time zone
central = utc.astimezone(to_zone)
</code></pre>

<p><strong>Edit</strong> Expanded example to show <code>strptime</code> usage</p>

<p><strong>Edit 2</strong> Fixed API usage to show better entry point method</p>

<p><strong>Edit 3</strong> Included auto-detect methods for timezones (Yarin)</p>
","4771733"
"Python Pip install Error: Unable to find vcvarsall.bat. Tried all solutions","171393","","<p>I tried to install Scrapy for Python 2.7.8 (anaconda 2.1.0) 32-bit using </p>

<pre><code>pip install scrapy
</code></pre>

<p>And I got this error </p>

<pre><code> error: Microsoft Visual C++ 10.0 is required (Unable to find vcvarsall.bat).
</code></pre>

<p>I have followed the solutions found in these stackover flow questions. Nothing worked. </p>

<p><a href=""https://stackoverflow.com/questions/26140192/microsoft-visual-c-compiler-for-python-2-7"">Microsoft Visual C++ Compiler for Python 2.7</a></p>

<p><a href=""https://stackoverflow.com/questions/6126737/cant-find-vcvarsall-bat-file"">Can&#39;t find vcvarsall.bat file</a></p>

<p><a href=""https://stackoverflow.com/questions/2817869/error-unable-to-find-vcvarsall-bat"">error: Unable to find vcvarsall.bat</a></p>

<p><a href=""https://stackoverflow.com/questions/24380442/getting-error-unable-to-find-vcvarsall-bat-when-running-pip-install-numpy-o"">Getting &quot;error: Unable to find vcvarsall.bat&quot; when running &quot;pip install numpy&quot; on windows7 64bit</a></p>

<p><a href=""https://stackoverflow.com/questions/19830942/pip-install-gives-error-unable-to-find-vcvarsall-bat"">pip install gives error: Unable to find vcvarsall.bat</a></p>

<p><a href=""https://stackoverflow.com/questions/6551724/how-do-i-point-easy-install-to-vcvarsall-bat/8705722#8705722"">How do I point easy_install to vcvarsall.bat?</a></p>

<p><a href=""https://stackoverflow.com/questions/24783176/pip-install-mysql-python-returns-unable-to-find-vcvarsall-bat"">pip install MySQL-python returns unable to find vcvarsall.bat</a></p>

<p>This is the error, and a few lines above and below it:</p>

<pre><code>copying src\lxml\isoschematron\resources\xsl\iso-schematron-xslt1\readme.txt
-&gt; build\lib.win32-3.4\lxml\isoschematron\resources\xsl\iso-schematron-xslt1

running build_ext

building 'lxml.etree' extension

C:\Python34\lib\distutils\dist.py:260: UserWarning: Unknown distribution opt
ion: 'bugtrack_url'

  warnings.warn(msg)

error: Microsoft Visual C++ 10.0 is required (Unable to find vcvarsall.bat).


----------------------------------------
Command ""C:\Python34\python.exe -c ""import setuptools, tokenize;__file__='C:
\\Users\\San\\AppData\\Local\\Temp\\pip-build-wp6ei6r9\\lxml\\setup.py';exec(com
pile(getattr(tokenize, 'open', open)(__file__).read().replace('\r\n', '\n'), __f
ile__, 'exec'))"" install --record C:\Users\San\AppData\Local\Temp\pip-kfkzr_67-r
ecord\install-record.txt --single-version-externally-managed --compile"" failed w
ith error code 1 in C:\Users\San\AppData\Local\Temp\pip-build-wp6ei6r9\lxml
</code></pre>

<hr>

<p>I have both Microsoft Visual Studio 12.0, and Microsoft visual C++ compiler package for Python 2.7, both of which have the vcvarsall.bat file. </p>

<hr>

<p>I have a system variable that is called 'VS120COMNTOOLS' and is its path is set to </p>

<pre><code>C:\Program Files\Microsoft Visual Studio 12.0\Common7\Tools\
</code></pre>

<hr>

<p>I also added both paths to my environment variables. I've also tried just adding one, and then the other. My Path looks like this</p>

<pre><code>C:\Program Files\Java\jdk1.7.0_25\bin;\Python27;\Python2\python.exe;C:\Python27\Scripts\;C:\Users\San\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\;C:\Program Files\Microsoft Visual Studio 12.0\VC\;
</code></pre>

<hr>

<p>I also updated by my setup tools (I think to version 8), which should autodetect Microsoft Visual C++ Compiler for Python 2.7. However, I'm still getting the same error. </p>

<hr>

<p>I have also tried using </p>

<pre><code>easy_install scrapy
</code></pre>

<p>And I get this error</p>

<pre><code>error: Setup script exited with error: Microsoft Visual C++ 10.0 is required (Un
</code></pre>

<p>able to find vcvarsall.bat).</p>

<hr>

<p>I also have the following in my registry</p>

<pre><code>HKEY_LOCAL_MACHINE\Software\Microsoft\VisualStudio\9.0\Setup\VC\ProductDir
HKEY_LOCAL_MACHINE\Software\Microsoft\VisualStudio\12.0\Setup\VC\ProductDir
</code></pre>
","<p>I have tried all suggestions and found my own simple solution.</p>

<p>The problem is that codes written in external environment like <code>C</code> need compiler. Look for its own VS environment, i.e. VS 2008.</p>

<p>Currently my machine runs VS 2012 and faces <code>Unable to find vcvarsall.bat</code>.
I studied codes that i want to install to find the VS version. It was VS 2008. i have add to system variable <code>VS90COMNTOOLS</code> as variable name and gave the value of <code>VS120COMNTOOLS</code>.</p>

<p>You can find my step by step solution below:</p>

<ol>
<li>Right click on My Computer.</li>
<li>Click Properties </li>
<li>Advanced system settings</li>
<li>Environment variables</li>
<li>Add New system variable</li>
<li>Enter VS90COMNTOOLS to the variable name</li>
<li>Enter the value of current version to the new variable.</li>
<li>Close all windows</li>
</ol>

<p>Now open a new session and <code>pip install your-package</code></p>
","30445151"
"Check if two unordered lists are equal","171320","","<p>I'm looking for an easy (and quick) way to determine if two <strong>unordered</strong> lists contain the same elements:</p>

<p>For example:</p>

<pre><code>['one', 'two', 'three'] == ['one', 'two', 'three'] :  true
['one', 'two', 'three'] == ['one', 'three', 'two'] :  true
['one', 'two', 'three'] == ['one', 'two', 'three', 'three'] :  false
['one', 'two', 'three'] == ['one', 'two', 'three', 'four'] :  false
['one', 'two', 'three'] == ['one', 'two', 'four'] :  false
['one', 'two', 'three'] == ['one'] :  false
</code></pre>

<p>I'm hoping to do this without using a map.</p>
","<p>Python has a built-in datatype for an unordered collection of (hashable) things, called a <code>set</code>. If you convert both lists to sets, the comparison will be unordered.</p>

<pre><code>set(x) == set(y)
</code></pre>

<p><a href=""http://docs.python.org/library/stdtypes.html#set"" rel=""noreferrer"">Documentation on <code>set</code></a></p>

<hr>

<p>EDIT: @mdwhatcott points out that you want to check for duplicates. <code>set</code> ignores these, so you need a similar data structure that also keeps track of the number of items in each list. This is called a <a href=""http://en.wikipedia.org/wiki/Multiset"" rel=""noreferrer"">multiset</a>; the best approximation in the standard library is a <a href=""http://docs.python.org/dev/library/collections.html#collections.Counter"" rel=""noreferrer""><code>collections.Counter</code></a>:</p>

<pre><code>&gt;&gt;&gt; import collections
&gt;&gt;&gt; compare = lambda x, y: collections.Counter(x) == collections.Counter(y)
&gt;&gt;&gt; 
&gt;&gt;&gt; compare([1,2,3], [1,2,3,3])
False
&gt;&gt;&gt; compare([1,2,3], [1,2,3])
True
&gt;&gt;&gt; compare([1,2,3,3], [1,2,2,3])
False
&gt;&gt;&gt; 
</code></pre>
","9623147"
"Loop backwards using indices in Python?","171064","","<p>I am trying to loop from 100 to 0. How do I do this in Python?</p>

<p><code>for i in range (100,0)</code> doesn't work.</p>
","<p>Try <code>range(100,-1,-1)</code>, the 3rd argument being the increment to use (documented <a href=""https://docs.python.org/library/functions.html#range"" rel=""noreferrer"">here</a>).</p>
","869902"
"How to replace multiple substrings of a string?","170801","","<p>I would like to use the .replace function to replace multiple strings.</p>

<p>I currently have  </p>

<pre><code>string.replace(""condition1"", """")
</code></pre>

<p>but would like to have something like</p>

<pre><code>string.replace(""condition1"", """").replace(""condition2"", ""text"")
</code></pre>

<p>although that does not feel like good syntax</p>

<p>what is the proper way to do this? kind of like how in grep/regex you can do <code>\1</code> and <code>\2</code> to replace fields to certain search strings</p>
","<p>Here is a short example that should do the trick with regular expressions:</p>

<pre><code>import re

rep = {""condition1"": """", ""condition2"": ""text""} # define desired replacements here

# use these three lines to do the replacement
rep = dict((re.escape(k), v) for k, v in rep.iteritems())
pattern = re.compile(""|"".join(rep.keys()))
text = pattern.sub(lambda m: rep[re.escape(m.group(0))], text)
</code></pre>

<p>For example:</p>

<pre><code>&gt;&gt;&gt; pattern.sub(lambda m: rep[re.escape(m.group(0))], ""(condition1) and --condition2--"")
'() and --text--'
</code></pre>
","6117124"
"Is there a reason Python strings don't have a string length method?","170602","","<p>I know that python has a <code>len()</code> function that is used to determine the size of a string, but I was wondering why its not a method of the string object.</p>

<h2><strong>Update</strong></h2>

<p>Ok, I realized I was embarrassingly mistaken. <code>__len__()</code> is actually a method of a string object. It just seems weird to see object oriented code in Python using the len function on string objects. Furthermore, it's also weird to see <code>__len__</code> as the name instead of just len.</p>
","<p>Strings do have a length method: <code>__len__()</code></p>

<p>The protocol in Python is to implement this method on objects which have a length and use the built-in <a href=""http://www.python.org/doc/2.5.2/lib/built-in-funcs.html#l2h-45"" rel=""noreferrer""><code>len()</code></a> function, which calls it for you, similar to the way you would implement <code>__iter__()</code> and use the built-in <code>iter()</code> function (or have the method called behind the scenes for you) on objects which are iterable.</p>

<p>See <a href=""http://www.python.org/doc/2.5.2/ref/sequence-types.html"" rel=""noreferrer"">Emulating container types</a> for more information.</p>

<p>Here's a good read on the subject of protocols in Python: <a href=""http://lucumr.pocoo.org/2011/7/9/python-and-pola/"" rel=""noreferrer"">Python and the Principle of Least Astonishment</a></p>
","237150"
"Creating a range of dates in Python","170394","","<p>I want to create a list of dates, starting with today, and going back an arbitrary number of days, say, in my example 100 days. Is there a better way to do it than this?</p>

<pre><code>import datetime

a = datetime.datetime.today()
numdays = 100
dateList = []
for x in range (0, numdays):
    dateList.append(a - datetime.timedelta(days = x))
print dateList
</code></pre>
","<p>Marginally better...</p>

<pre><code>base = datetime.datetime.today()
date_list = [base - datetime.timedelta(days=x) for x in range(0, numdays)]
</code></pre>
","993367"
"How to add an extra column to an numpy array","170274","","<p>Lets say I have an numpy array <code>a</code>:</p>

<pre><code>a = np.array([[1,2,3], [2,3,4]])
</code></pre>

<p>And I would like to add a column of zeros to get array <code>b</code>:</p>

<pre><code>b = np.array([[1,2,3,0], [2,3,4,0]])
</code></pre>

<p>How can I do this easily in numpy?</p>
","<p>I think a more straightforward solution and faster to boot is to do the following:</p>

<pre><code>import numpy as np
N = 10
a = np.random.rand(N,N)
b = np.zeros((N,N+1))
b[:,:-1] = a
</code></pre>

<p>And timings:</p>

<pre><code>In [23]: N = 10

In [24]: a = np.random.rand(N,N)

In [25]: %timeit b = np.hstack((a,np.zeros((a.shape[0],1))))
10000 loops, best of 3: 19.6 us per loop

In [27]: %timeit b = np.zeros((a.shape[0],a.shape[1]+1)); b[:,:-1] = a
100000 loops, best of 3: 5.62 us per loop
</code></pre>
","8489498"
"Writing a Python list of lists to a csv file","170029","","<p>I have a long list of lists of the following form ---</p>

<pre><code>a = [[1.2,'abc',3],[1.2,'werew',4],........,[1.4,'qew',2]]
</code></pre>

<p>i.e. the values in the list are of different types -- float,int, strings.How do I write it into a csv file so that my output csv file looks like</p>

<pre><code>1.2,abc,3
1.2,werew,4
.
.
.
1.4,qew,2
</code></pre>
","<p>Python's built-in <a href=""http://docs.python.org/2/library/csv.html"">CSV module</a> can handle this easily:</p>

<pre><code>import csv

with open(""output.csv"", ""wb"") as f:
    writer = csv.writer(f)
    writer.writerows(a)
</code></pre>

<p>This assumes your list is defined as <code>a</code>, as it is in your question. You can tweak the exact format of the output CSV via the various optional parameters to <code>csv.writer()</code> as documented in the library reference page linked above.</p>
","14037564"
"Creating a singleton in Python","169953","","<p><em>This question is not for the discussion of whether or not the <a href=""http://en.wikipedia.org/wiki/Singleton_pattern"" rel=""noreferrer"">singleton design pattern</a> is desirable, is an anti-pattern, or for any religious wars, but to discuss how this pattern is best implemented in Python in such a way that is most pythonic. In this instance I define 'most pythonic' to mean that it follows the 'principle of least astonishment'</em>.</p>

<p>I have multiple classes which would become singletons (my use-case is for a logger, but this is not important). I do not wish to clutter several classes with added gumph when I can simply inherit or decorate.</p>

<p>Best methods:</p>

<hr>

<h2>Method 1: A decorator</h2>

<pre><code>def singleton(class_):
    instances = {}
    def getinstance(*args, **kwargs):
        if class_ not in instances:
            instances[class_] = class_(*args, **kwargs)
        return instances[class_]
    return getinstance

@singleton
class MyClass(BaseClass):
    pass
</code></pre>

<p>Pros</p>

<ul>
<li>Decorators are additive in a way that is often more intuitive than multiple inheritance.</li>
</ul>

<p>Cons</p>

<ul>
<li>While objects created using MyClass() would be true singleton objects, MyClass itself is a a function, not a class, so you cannot call class methods from it. Also for <code>m = MyClass(); n = MyClass(); o = type(n)();</code> then <code>m == n &amp;&amp; m != o &amp;&amp; n != o</code></li>
</ul>

<hr>

<h2>Method 2: A base class</h2>

<pre><code>class Singleton(object):
    _instance = None
    def __new__(class_, *args, **kwargs):
        if not isinstance(class_._instance, class_):
            class_._instance = object.__new__(class_, *args, **kwargs)
        return class_._instance

class MyClass(Singleton, BaseClass):
    pass
</code></pre>

<p>Pros</p>

<ul>
<li>It's a true class</li>
</ul>

<p>Cons</p>

<ul>
<li>Multiple inheritance - eugh! <code>__new__</code> could be overwritten during inheritance from a second base class? One has to think more than is necessary.</li>
</ul>

<hr>

<h2>Method 3: A <a href=""https://stackoverflow.com/questions/100003/what-is-a-metaclass-in-python"">metaclass</a></h2>

<pre><code>class Singleton(type):
    _instances = {}
    def __call__(cls, *args, **kwargs):
        if cls not in cls._instances:
            cls._instances[cls] = super(Singleton, cls).__call__(*args, **kwargs)
        return cls._instances[cls]

#Python2
class MyClass(BaseClass):
    __metaclass__ = Singleton

#Python3
class MyClass(BaseClass, metaclass=Singleton):
    pass
</code></pre>

<p>Pros</p>

<ul>
<li>It's a true class</li>
<li>Auto-magically covers inheritance</li>
<li>Uses <code>__metaclass__</code> for its proper purpose (and made me aware of it)</li>
</ul>

<p>Cons</p>

<ul>
<li>Are there any?</li>
</ul>

<hr>

<h2>Method 4: decorator returning a class with the same name</h2>

<pre><code>def singleton(class_):
    class class_w(class_):
        _instance = None
        def __new__(class_, *args, **kwargs):
            if class_w._instance is None:
                class_w._instance = super(class_w,
                                    class_).__new__(class_,
                                                    *args,
                                                    **kwargs)
                class_w._instance._sealed = False
            return class_w._instance
        def __init__(self, *args, **kwargs):
            if self._sealed:
                return
            super(class_w, self).__init__(*args, **kwargs)
            self._sealed = True
    class_w.__name__ = class_.__name__
    return class_w

@singleton
class MyClass(BaseClass):
    pass
</code></pre>

<p>Pros</p>

<ul>
<li>It's a true class</li>
<li>Auto-magically covers inheritance</li>
</ul>

<p>Cons</p>

<ul>
<li>Is there not an overhead for creating each new class? Here we are creating two classes for each class we wish to make a singleton. While this is fine in my case, I worry that this might not scale. Of course there is a matter of debate as to whether it aught to be too easy to scale this pattern...</li>
<li>What is the point of the <code>_sealed</code> attribute</li>
<li>Can't call methods of the same name on base classes using <code>super()</code> because they will recurse. This means you can't customize <code>__new__</code> and can't subclass a class that needs you to call up to <code>__init__</code>.</li>
</ul>
","<h2>Use a Metaclass</h2>

<p>I would recommend <strong>Method #2</strong>, but you're better off using a <strong>metaclass</strong> than a base class. Here is a sample implementation:</p>

<pre><code>class Singleton(type):
    _instances = {}
    def __call__(cls, *args, **kwargs):
        if cls not in cls._instances:
            cls._instances[cls] = super(Singleton, cls).__call__(*args, **kwargs)
        return cls._instances[cls]

class Logger(object):
    __metaclass__ = Singleton
</code></pre>

<p>Or in Python3</p>

<pre><code>class Logger(metaclass=Singleton):
    pass
</code></pre>

<p>If you want to run <code>__init__</code> every time the class is called, add</p>

<pre><code>        else:
            cls._instances[cls].__init__(*args, **kwargs)
</code></pre>

<p>to the <code>if</code> statement in <code>Singleton.__call__</code>.</p>

<p>A few words about metaclasses. A metaclass is the <strong>class of a class</strong>; that is, a class is an <strong>instance of its metaclass</strong>. You find the metaclass of an object in Python with <code>type(obj)</code>. Normal new-style classes are of type <code>type</code>. <code>Logger</code> in the code above will be of type <code>class 'your_module.Singleton'</code>, just as the (only) instance of <code>Logger</code> will be of type <code>class 'your_module.Logger'</code>. When you call logger with <code>Logger()</code>, Python first asks the metaclass of <code>Logger</code>, <code>Singleton</code>, what to do, allowing instance creation to be pre-empted. This process is the same as Python asking a class what to do by calling <code>__getattr__</code> when you reference one of it's attributes by doing <code>myclass.attribute</code>.</p>

<p>A metaclass essentially decides <strong>what the definition of a class means</strong> and how to implement that definition. See for example <a href=""http://code.activestate.com/recipes/498149/"" rel=""noreferrer"">http://code.activestate.com/recipes/498149/</a>, which essentially recreates C-style <code>struct</code>s in Python using metaclasses. The thread <a href=""https://stackoverflow.com/questions/392160/what-are-your-concrete-use-cases-for-metaclasses-in-python"">What are your (concrete) use-cases for metaclasses in Python?</a> also provides some examples, they generally seem to be related to declarative programming, especially as used in ORMs.</p>

<p>In this situation, if you use your <strong>Method #2</strong>, and a subclass defines a <code>__new__</code> method, it will be <strong>executed every time</strong> you call <code>SubClassOfSingleton()</code> -- because it is responsible for calling the method that returns the stored instance. With a metaclass, it will <strong>only be called once</strong>, when the only instance is created. You want to <strong>customize what it means to call the class</strong>, which is decided by it's type.</p>

<p>In general, it <strong>makes sense</strong> to use a metaclass to implement a singleton. A singleton is special because is <strong>created only once</strong>, and a metaclass is the way you customize the <strong>creation of a class</strong>. Using a metaclass gives you <strong>more control</strong> in case you need to customize the singleton class definitions in other ways.</p>

<p>Your singletons <strong>won't need multiple inheritance</strong> (because the metaclass is not a base class), but for <strong>subclasses of the created class</strong> that use multiple inheritance, you need to make sure the singleton class is the <strong>first / leftmost</strong> one with a metaclass that redefines <code>__call__</code> This is very unlikely to be an issue. The instance dict is <strong>not in the instance's namespace</strong> so it won't accidentally overwrite it.</p>

<p>You will also hear that the singleton pattern violates the ""Single Responsibility Principle"" -- each class should do <strong>only one thing</strong>. That way you don't have to worry about messing up one thing the code does if you need to change another, because they are separate and encapsulated. The metaclass implementation <strong>passes this test</strong>. The metaclass is responsible for <strong>enforcing the pattern</strong> and the created class and subclasses need not be <strong>aware that they are singletons</strong>. <strong>Method #1</strong> fails this test, as you noted with ""MyClass itself is a a function, not a class, so you cannot call class methods from it.""</p>

<h1>Python 2 and 3 Compatible Version</h1>

<p>Writing something that works in both Python2 and 3 requires using a slightly more complicated scheme. Since metaclasses are usually subclasses of type <code>type</code>, it's possible to use one to dynamically create an intermediary base class at run time with it as its metaclass and then use <em>that</em> as the baseclass of the public <code>Singleton</code> base class. It's harder to explain than to do, as illustrated next:</p>

<pre><code># works in Python 2 &amp; 3
class _Singleton(type):
    """""" A metaclass that creates a Singleton base class when called. """"""
    _instances = {}
    def __call__(cls, *args, **kwargs):
        if cls not in cls._instances:
            cls._instances[cls] = super(_Singleton, cls).__call__(*args, **kwargs)
        return cls._instances[cls]

class Singleton(_Singleton('SingletonMeta', (object,), {})): pass

class Logger(Singleton):
    pass
</code></pre>

<p>An ironic aspect of this approach is that it's using subclassing to implement a metaclass. One possible advantage is that, unlike with a pure metaclass, <code>isinstance(inst, Singleton)</code> will return <code>True</code>.</p>

<h2>Corrections</h2>

<p>On another topic, you've probably already noticed this, but the base class implementation in your original post is wrong. <code>_instances</code> needs to be <strong>referenced on the class</strong>, you need to use <code>super()</code> or you're <strong>recursing</strong>, and <code>__new__</code> is actually a static method that you have to <strong>pass the class to</strong>, not a class method, as the actual class <strong>hasn't been created</strong> yet when it is called. All of these things will be true for a metaclass implementation as well.</p>

<pre><code>class Singleton(object):
  _instances = {}
  def __new__(class_, *args, **kwargs):
    if class_ not in class_._instances:
        class_._instances[class_] = super(Singleton, class_).__new__(class_, *args, **kwargs)
    return class_._instances[class_]

class MyClass(Singleton):
  pass

c = MyClass()
</code></pre>

<h2>Decorator Returning A Class</h2>

<p>I originally was writing a comment but it was too long, so I'll add this here. <strong>Method #4</strong> is better than the other decorator version, but it's more code than needed for a singleton, and it's not as clear what it does. </p>

<p>The main problems stem from the class being it's own base class. First, isn't it weird to have a class be a subclass of a nearly identical class with the same name that exists only in its <code>__class__</code> attribute? This also means that you can't define <strong>any methods that call the method of the same name on their base class</strong> with <code>super()</code> because they will recurse. This means your class can't customize <code>__new__</code>, and can't derive from any classes that need <code>__init__</code> called on them.</p>

<h2>When to use the singleton pattern</h2>

<p>Your use case is <strong>one of the better examples</strong> of wanting to use a singleton. You say in one of the comments ""To me logging has always seemed a natural candidate for Singletons."" You're <strong>absolutely right</strong>.</p>

<p>When people say singletons are bad, the most common reason is they are <strong>implicit shared state</strong>. While with global variables and top-level module imports are <strong>explicit</strong> shared state, other objects that are passed around are generally instantiated. This is a good point, <strong>with two exceptions</strong>.</p>

<p>The first, and one that gets mentioned in various places, is when the singletons are <strong>constant</strong>. Use of global constants, especially enums, is widely accepted, and considered sane because no matter what, <strong>none of the users can mess them up for any other user</strong>. This is equally true for a constant singleton.</p>

<p>The second exception, which get mentioned less, is the opposite -- when the singleton is <strong>only a data sink</strong>, not a data source (directly or indirectly). This is why loggers feel like a ""natural"" use for singletons. As the various users are <strong>not changing the loggers</strong> in ways other users will care about, there is <strong>not really shared state</strong>. This negates the primary argument against the singleton pattern, and makes them a reasonable choice because of their <strong>ease of use</strong> for the task.</p>

<p>Here is a quote from <a href=""http://googletesting.blogspot.com/2008/08/root-cause-of-singletons.html"" rel=""noreferrer"">http://googletesting.blogspot.com/2008/08/root-cause-of-singletons.html</a>:</p>

<blockquote>
  <p>Now, there is one kind of Singleton which is OK. That is a singleton where all of the reachable objects are immutable. If all objects are immutable than Singleton has no global state, as everything is constant. But it is so easy to turn this kind of singleton into mutable one, it is very slippery slope. Therefore, I am against these Singletons too, not because they are bad, but because it is very easy for them to go bad. (As a side note Java enumeration are just these kind of singletons. As long as you don't put state into your enumeration you are OK, so please don't.)</p>
  
  <p>The other kind of Singletons, which are semi-acceptable are those which don't effect the execution of your code, They have no ""side effects"". Logging is perfect example. It is loaded with Singletons and global state. It is acceptable (as in it will not hurt you) because your application does not behave any different whether or not a given logger is enabled. The information here flows one way: From your application into the logger. Even thought loggers are global state since no information flows from loggers into your application, loggers are acceptable. You should still inject your logger if you want your test to assert that something is getting logged, but in general Loggers are not harmful despite being full of state.</p>
</blockquote>
","6798042"
"What does 'super' do in Python?","169747","","<p>What's the difference between:</p>

<pre><code>class Child(SomeBaseClass):
    def __init__(self):
        super(Child, self).__init__()
</code></pre>

<p>and:</p>

<pre><code>class Child(SomeBaseClass):
    def __init__(self):
        SomeBaseClass.__init__(self)
</code></pre>

<p>I've seen <code>super</code> being used quite a lot in classes with only single inheritance. I can see why you'd use it in multiple inheritance but am unclear as to what the advantages are of using it in this kind of situation.</p>
","<p>The benefits of <code>super()</code> in single-inheritance are minimal -- mostly, you don't have to hard-code the name of the base class into every method that uses its parent methods.</p>

<p>However, it's almost impossible to use multiple-inheritance without <code>super()</code>. This includes common idioms like mixins, interfaces, abstract classes, etc. This extends to code that later extends yours. If somebody later wanted to write a class that extended <code>Child</code> and a mixin, their code would not work properly.</p>
","222922"
"How do I get a empty array of any size I want in python?","169533","","<p>I basically want a python equivalent of this in C</p>

<pre><code>int a[x];
</code></pre>

<p>but in python I declare an array like</p>

<pre><code>a = []
</code></pre>

<p>but the problem is I want to assign random slots with values like</p>

<pre><code>a[4] = 1
</code></pre>

<p>but I can't do that with python, since the array is empty</p>
","<p>If by ""array"" you actually mean a Python list, you can use</p>

<pre><code>a = [0] * 10
</code></pre>

<p>or</p>

<pre><code>a = [None] * 10
</code></pre>
","5205580"
"ImportError: No module named Crypto.Cipher","169527","","<p>When I try to run app.py (Python 3.3, PyCrypto 2.6) my virtualenv keeps returning the error listed above. My import statement is just <code>from Crypto.Cipher import AES</code>. I looked for duplicates and you might say that there are some, but I tried the solutions (although most are not even solutions) and nothing worked.</p>

<p>You can see what the files are like for PyCrypto below:</p>

<p><img src=""https://i.imgur.com/ElrSw6L.png?1"" alt=""""></p>
","<p>I had the same problem (though on Linux). The solution was quite simple - add:</p>

<pre><code>libraries:
- name: pycrypto
  version: ""2.6""
</code></pre>

<p>to my app.yaml file. Since this worked correctly in the past, I assume this is a new requirement.</p>
","20014293"
"How to use string.replace() in python 3.x","169390","","<p>The string.replace() is deprecated on python 3.x. What is the new way of doing this?</p>
","<p>As in 2.x, use <a href=""https://docs.python.org/3.3/library/stdtypes.html#str.replace"" rel=""noreferrer""><code>str.replace()</code></a>.</p>

<p>Example:</p>

<pre><code>&gt;&gt;&gt; 'Hello world'.replace('world', 'Guido')
'Hello Guido'
</code></pre>
","9452122"
"Python - write() versus writelines() and concatenated strings","169378","","<p>So I'm learning Python. I am going through the lessons and ran into a problem where I had to condense a great many <code>target.write()</code> into a single <code>write()</code>, while having a <code>""\n""</code> between each user input variable(the object of <code>write()</code>).</p>

<p>I came up with:</p>

<pre><code>nl = ""\n""
lines = line1, nl, line2, nl, line3, nl
textdoc.writelines(lines)
</code></pre>

<p>If I try to do:</p>

<pre><code>textdoc.write(lines)
</code></pre>

<p>I get an error. But if I type:</p>

<pre><code>textdoc.write(line1 + ""\n"" + line2 + ....)
</code></pre>

<p>Then it works fine. Why am I unable to use a string for a newline in <code>write()</code> but I can use it in <code>writelines()</code>?</p>

<p>Python 2.7
When I searched google most resources I found were way over my head, I'm still a lay-people.</p>
","<p><code>writelines</code> expects a list of strings, while <code>write</code> expects a single string. </p>

<p><code>line1 + ""\n"" + line2</code> merges those strings together into a single string before passing it to <code>write</code>.</p>

<p>Note that if you have many lines, you may want to use <code>""\n"".join(list_of_lines)</code>.</p>
","12377541"
"How to open every file in a folder?","169354","","<p>I have a python script parse.py, which in the script open a file, say file1, and then do something maybe print out the total number of characters. </p>

<pre><code>filename = 'file1'
f = open(filename, 'r')
content = f.read()
print filename, len(content)
</code></pre>

<p>Right now, I am using stdout to direct the result to my output file - output</p>

<pre><code>python parse.py &gt;&gt; output
</code></pre>

<p>However, I don't want to do this file by file manually, is there a way to take care of every single file automatically? Like</p>

<pre><code>ls | awk '{print}' | python parse.py &gt;&gt; output 
</code></pre>

<p>Then the problem is how could I read the file name from standardin? 
or there are already some built-in functions to do the ls and those kind of work easily?</p>

<p>Thanks!</p>
","<p>You can list all files in the current directory using:</p>

<pre><code>import os
for filename in os.listdir(os.getcwd()):
   # do your stuff
</code></pre>

<p>Or you can list only some files, depending on the file pattern using the <code>glob</code> module:</p>

<pre><code>import glob
for filename in glob.glob('*.txt'):
   # do your stuff
</code></pre>

<p>It doesn't have to be the current directory you can list them in any path you want:</p>

<pre><code>path = '/some/path/to/file'

for filename in os.listdir(path):
    # do your stuff

for filename in glob.glob(os.path.join(path, '*.txt')):
    # do your stuff
</code></pre>

<p>Or you can even use the pipe as you specified using <code>fileinput</code></p>

<pre><code>import fileinput
for line in fileinput.input():
    # do your stuff
</code></pre>

<p>And then use it with piping:</p>

<pre><code>ls -1 | python parse.py
</code></pre>
","18262324"
"Can't install Scipy through pip","169125","","<p>When installing scipy through pip with :</p>

<pre><code>pip install scipy
</code></pre>

<p>Pip fails to build scipy and throws the following error:</p>

<pre><code>Cleaning up...
Command /Users/administrator/dev/KaggleAux/env/bin/python2.7 -c ""import setuptools, tokenize;__file__='/Users/administrator/dev/KaggleAux/env/build/scipy/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))"" install --record /var/folders/zl/7698ng4d4nxd49q1845jd9340000gn/T/pip-eO8gua-record/install-record.txt --single-version-externally-managed --compile --install-headers /Users/administrator/dev/KaggleAux/env/bin/../include/site/python2.7 failed with error code 1 in /Users/administrator/dev/KaggleAux/env/build/scipy
Storing debug log for failure in /Users/administrator/.pip/pip.log
</code></pre>

<p>How can I get scipy to build successfully? This may be a new issue with OSX Yosemite since I just upgraded and haven't had issues installing scipy before.</p>

<hr>

<p>Debug log:</p>

<pre><code>Cleaning up...
  Removing temporary dir /Users/administrator/dev/KaggleAux/env/build...
Command /Users/administrator/dev/KaggleAux/env/bin/python2.7 -c ""import setuptools, tokenize;__file__='/Users/administrator/dev/KaggleAux/env/build/scipy/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))"" install --record /var/folders/zl/7698ng4d4nxd49q1845jd9340000gn/T/pip-eO8gua-record/install-record.txt --single-version-externally-managed --compile --install-headers /Users/administrator/dev/KaggleAux/env/bin/../include/site/python2.7 failed with error code 1 in /Users/administrator/dev/KaggleAux/env/build/scipy
Exception information:
Traceback (most recent call last):
  File ""/Users/administrator/dev/KaggleAux/env/lib/python2.7/site-packages/pip/basecommand.py"", line 122, in main
    status = self.run(options, args)
  File ""/Users/administrator/dev/KaggleAux/env/lib/python2.7/site-packages/pip/commands/install.py"", line 283, in run
    requirement_set.install(install_options, global_options, root=options.root_path)
  File ""/Users/administrator/dev/KaggleAux/env/lib/python2.7/site-packages/pip/req.py"", line 1435, in install
    requirement.install(install_options, global_options, *args, **kwargs)
  File ""/Users/administrator/dev/KaggleAux/env/lib/python2.7/site-packages/pip/req.py"", line 706, in install
    cwd=self.source_dir, filter_stdout=self._filter_install, show_stdout=False)
  File ""/Users/administrator/dev/KaggleAux/env/lib/python2.7/site-packages/pip/util.py"", line 697, in call_subprocess
    % (command_desc, proc.returncode, cwd))
InstallationError: Command /Users/administrator/dev/KaggleAux/env/bin/python2.7 -c ""import setuptools, tokenize;__file__='/Users/administrator/dev/KaggleAux/env/build/scipy/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))"" install --record /var/folders/zl/7698ng4d4nxd49q1845jd9340000gn/T/pip-eO8gua-record/install-record.txt --single-version-externally-managed --compile --install-headers /Users/administrator/dev/KaggleAux/env/bin/../include/site/python2.7 failed with error code 1 in /Users/administrator/dev/KaggleAux/env/build/scipy
</code></pre>
","<p>After opening up an <a href=""https://github.com/scipy/scipy/issues/4102"">issue</a> with the SciPy team, we found that you need to upgrade pip with:</p>

<pre><code>pip install --upgrade pip
</code></pre>

<p>And in <code>Python 3</code> this works:</p>

<pre><code>python3 -m pip install --upgrade pip
</code></pre>

<p>for SciPy to install properly. Why? Because:</p>

<blockquote>
  <p>Older versions of pip have to be told to use wheels, IIRC with --use-wheel. Or you can upgrade pip itself, then it should pick up the wheels.</p>
</blockquote>

<p>Upgrading pip solves the issue, but you might be able to just use the <code>--use-wheel</code> flag as well.</p>
","26964891"
"In Python, how do I iterate over a dictionary in sorted order?","168595","","<p>There's an existing function that ends in:</p>

<pre><code>return dict.iteritems()
</code></pre>

<p>that returns an unsorted iterator for a given dictionary. I would like to return an iterator that goes through the items in sorted order. How do I do that?</p>
","<p>Haven't tested this very extensively, but works in Python 2.5.2.</p>

<pre><code>&gt;&gt;&gt; d = {""x"":2, ""h"":15, ""a"":2222}
&gt;&gt;&gt; it = iter(sorted(d.iteritems()))
&gt;&gt;&gt; it.next()
('a', 2222)
&gt;&gt;&gt; it.next()
('h', 15)
&gt;&gt;&gt; it.next()
('x', 2)
&gt;&gt;&gt;
</code></pre>

<p>If you are used to doing <code>for key, value in d.iteritems(): ...</code> instead of iterators, this will still work with the solution above</p>

<pre><code>&gt;&gt;&gt; d = {""x"":2, ""h"":15, ""a"":2222}
&gt;&gt;&gt; for key, value in sorted(d.iteritems()):
&gt;&gt;&gt;     print(key, value)
('a', 2222)
('h', 15)
('x', 2)
&gt;&gt;&gt;
</code></pre>
","364599"
"How to debug in Django, the good way?","168124","","<p>So, I started learning to code in <a href=""http://en.wikipedia.org/wiki/Python_%28programming_language%29"" rel=""noreferrer"">Python</a> and later <a href=""http://en.wikipedia.org/wiki/Django_%28web_framework%29"" rel=""noreferrer"">Django</a>. The first times it was hard looking at tracebacks and actually figure out what I did wrong and where the syntax error was. Some time has passed now and some way along the way, I guess I got a routine in debugging my Django code. As this was done early in my coding experience, I sat down and wondered if how I was doing this was ineffective and could be done faster. I usually manage to find and correct the bugs in my code, but I wonder if I should be doing it faster?</p>

<p>I usually just use the debug info Django gives when enabled. When things do end up as I thought it would, I break the code flow a lot with a syntax error, and look at the variables at that point in the flow to figure out, where the code does something other than what I wanted.</p>

<p>But can this be improved? Are there some good tools or better ways to debug your Django code?</p>
","<p>There are a bunch of ways to do it, but the most straightforward is to simply 
use the <a href=""https://docs.python.org/2/library/pdb.html"" rel=""nofollow noreferrer"">Python debugger</a>. Just add following line in to a Django view function:</p>

<pre><code>import pdb; pdb.set_trace()
</code></pre>

<p>If you try to load that page in your browser, the browser will hang and you get a prompt to carry on debugging on actual executing code.</p>

<p>However there are other options suggested by others (I won't recommend them):</p>

<pre><code>* return HttpResponse({variable to inspect})

* print {variable to inspect}

* raise Exception({variable to inspect})
</code></pre>

<p>But the Python Debugger (pdb) is highly recommended for all types of Python code. If you are already into pdb, you'd also want to have a look at <a href=""http://pypi.python.org/pypi/ipdb/"" rel=""nofollow noreferrer""><strong>IPDB</strong></a> that uses <a href=""http://ipython.org/"" rel=""nofollow noreferrer""><strong>ipython</strong></a> for debugging.</p>

<p>Another useful extension to pdb is <a href=""https://pypi.python.org/pypi/pdbpp/"" rel=""nofollow noreferrer""><strong>pdb++</strong></a>, suggested by <a href=""https://stackoverflow.com/users/5792269/antash"">Antash</a>.</p>

<p>A useful reference provided by <a href=""https://stackoverflow.com/users/884640/seafangs"">Seafangs</a> : <a href=""https://mike.tig.as/blog/2010/09/14/pdb/"" rel=""nofollow noreferrer""><strong>Using the Python debugger in Django</strong></a></p>
","1118271"
"How to set an HTTP proxy in Python 2.7?","168030","","<p>I am trying to run a script that installs pip: get-pip.py and am getting a connection timeout due to my network being behind an HTTP proxy. Is there some way I could configure an HTTP proxy in my Python 2.7 installation to be able to install what I am trying to install?</p>

<p>Note: I am using Windows. Below is the error I am getting:</p>

<pre><code>C:\SetupFiles&gt;python get-pip.py
Downloading/unpacking pip
  Cannot fetch index base URL http://pypi.python.org/simple/
  Could not find any downloads that satisfy the requirement pip
No distributions at all found for pip
</code></pre>
","<p>It looks like <code>get-pip.py</code> has been updated to use the environment variables <code>http_proxy</code> and <code>https_proxy</code>.</p>

<p>Windows:</p>

<pre><code>set http_proxy=http://proxy.myproxy.com
set https_proxy=https://proxy.myproxy.com
python get-pip.py
</code></pre>

<p>Linux/OS X:</p>

<pre><code>export http_proxy=http://proxy.myproxy.com
export https_proxy=https://proxy.myproxy.com
sudo -E python get-pip.py
</code></pre>

<p>However if this still doesn't work for you, you can always install pip through a proxy using <a href=""https://pypi.python.org/pypi/setuptools"">setuptools</a>' <code>easy_install</code> by setting the same environment variables.</p>

<p>Windows:</p>

<pre><code>set http_proxy=http://proxy.myproxy.com
set https_proxy=https://proxy.myproxy.com
easy_install pip
</code></pre>

<p>Linux/OS X:</p>

<pre><code>export http_proxy=http://proxy.myproxy.com
export https_proxy=https://proxy.myproxy.com
sudo -E easy_install pip
</code></pre>

<p>Then once it's installed, use:</p>

<pre><code>pip install --proxy=""user:password@server:port"" packagename
</code></pre>

<p>From the <a href=""http://manpages.ubuntu.com/manpages/lucid/man1/pip.1.html"">pip man page</a>:</p>

<blockquote>
  <p>--proxy<br>
             Have pip use a proxy server to access sites. This can be specified
             using ""user:password@proxy.server:port"" notation. If the password
             is left out, pip will ask for it.</p>
</blockquote>
","11727032"
"Python: Lambda function in List Comprehensions","167509","","<p>Why is the output of the following two list comprehensions different, even though f and the lambda function are the same ?</p>

<pre><code>f = lambda x: x*x
[f(x) for x in range(10)]
</code></pre>

<p>and</p>

<pre><code>[lambda x: x*x for x in range(10)]
</code></pre>

<p>Mind you, both type(f) and type(lambda x: x*x) return the same type.</p>
","<p>The first one create a single lambda function and calls it ten times.</p>

<p>The second one doesn't call the function. It creates 10 different lambda functions. It puts all of those in a list. To make it equivalent to the first you need:</p>

<pre><code>[(lambda x: x*x)(x) for x in range(10)]
</code></pre>

<p>Or better yet:</p>

<pre><code>[x*x for x in range(10)]
</code></pre>
","6076304"
"check if all elements in a list are identical","167246","","<p>I need the following function:</p>

<p><strong>Input</strong>: a <code>list</code></p>

<p><strong>Output</strong>: </p>

<ul>
<li><code>True</code> if all elements in the input list evaluate as equal to each other using the standard equality operator; </li>
<li><code>False</code> otherwise.</li>
</ul>

<p><strong>Performance</strong>: of course, I prefer not to incur any unnecessary overhead.</p>

<p>I feel it would be best to: </p>

<ul>
<li>iterate through the list </li>
<li>compare adjacent elements</li>
<li>and <code>AND</code> all the resulting Boolean values</li>
</ul>

<p>But I'm not sure what's the most Pythonic way to do that.</p>

<hr>

<p><strong>EDIT</strong>:</p>

<p>Thank you for all the great answers. I rated up several, and it was really hard to choose between @KennyTM and @Ivo van der Wijk solutions.</p>

<p>The lack of short-circuit feature only hurts on a long input (over ~50 elements) that have unequal elements early on. If this occurs often enough (how often depends on how long the lists might be), the short-circuit is required. The best short-circuit algorithm seems to be @KennyTM <code>checkEqual1</code>. It pays, however, a significant cost for this:</p>

<ul>
<li>up to 20x in performance nearly-identical lists</li>
<li>up to 2.5x in performance on short lists</li>
</ul>

<p>If the long inputs with early unequal elements don't happen (or happen sufficiently rarely), short-circuit isn't required. Then, by far the fastest is @Ivo van der Wijk solution.</p>
","<p>General method:</p>

<pre><code>def checkEqual1(iterator):
    iterator = iter(iterator)
    try:
        first = next(iterator)
    except StopIteration:
        return True
    return all(first == rest for rest in iterator)
</code></pre>

<p>One-liner:</p>

<pre><code>def checkEqual2(iterator):
   return len(set(iterator)) &lt;= 1
</code></pre>

<p>Also one-liner:</p>

<pre><code>def checkEqual3(lst):
   return lst[1:] == lst[:-1]
</code></pre>

<p>The difference between the 3 versions are that:</p>

<ol>
<li>In <code>checkEqual2</code> the content must be hashable.</li>
<li><code>checkEqual1</code> and <code>checkEqual2</code> can use any iterators, but <code>checkEqual3</code> must take a sequence input, typically concrete containers like a list or tuple.</li>
<li><code>checkEqual1</code> stops as soon as a difference is found.</li>
<li>Since <code>checkEqual1</code> contains more Python code, it is less efficient when many of the items are equal in the beginning.</li>
<li>Since <code>checkEqual2</code> and <code>checkEqual3</code> always perform O(N) copying operations, they will take longer if most of your input will return False.</li>
<li><code>checkEqual2</code> and <code>checkEqual3</code> can't be easily changed to adopt to compare <code>a is b</code> instead of <code>a == b</code>.</li>
</ol>

<hr>

<p><code>timeit</code> result, for Python 2.7 and (only s1, s4, s7, s9 should return True)</p>

<pre><code>s1 = [1] * 5000
s2 = [1] * 4999 + [2]
s3 = [2] + [1]*4999
s4 = [set([9])] * 5000
s5 = [set([9])] * 4999 + [set([10])]
s6 = [set([10])] + [set([9])] * 4999
s7 = [1,1]
s8 = [1,2]
s9 = []
</code></pre>

<p>we get</p>

<pre><code>      | checkEqual1 | checkEqual2 | checkEqual3  | checkEqualIvo | checkEqual6502 |
|-----|-------------|-------------|--------------|---------------|----------------|
| s1  | 1.19   msec | 348    usec | 183     usec | 51.6    usec  | 121     usec   |
| s2  | 1.17   msec | 376    usec | 185     usec | 50.9    usec  | 118     usec   |
| s3  | 4.17   usec | 348    usec | 120     usec | 264     usec  | 61.3    usec   |
|     |             |             |              |               |                |
| s4  | 1.73   msec |             | 182     usec | 50.5    usec  | 121     usec   |
| s5  | 1.71   msec |             | 181     usec | 50.6    usec  | 125     usec   |
| s6  | 4.29   usec |             | 122     usec | 423     usec  | 61.1    usec   |
|     |             |             |              |               |                |
| s7  | 3.1    usec | 1.4    usec | 1.24    usec | 0.932   usec  | 1.92    usec   |
| s8  | 4.07   usec | 1.54   usec | 1.28    usec | 0.997   usec  | 1.79    usec   |
| s9  | 5.91   usec | 1.25   usec | 0.749   usec | 0.407   usec  | 0.386   usec   |
</code></pre>

<p>Note:</p>

<pre><code># http://stackoverflow.com/q/3844948/
def checkEqualIvo(lst):
    return not lst or lst.count(lst[0]) == len(lst)

# http://stackoverflow.com/q/3844931/
def checkEqual6502(lst):
    return not lst or [lst[0]]*len(lst) == lst
</code></pre>
","3844832"
"Read .mat files in Python","167156","","<p>Does anyone have successful experience reading binary Matlab .mat files in Python?</p>

<p>(I've seen that <code>scipy</code> has alleged support for reading .mat files, but I'm unsuccessful with it. I installed <code>scipy</code> version 0.7.0, and I can't find the <code>loadmat()</code> method)</p>
","<p>Silly me. Forgot to import io...</p>

<pre><code>import scipy.io
mat = scipy.io.loadmat('file.mat')
</code></pre>
","874488"
"How to update a plot in matplotlib?","167140","","<p>I'm having issues with redrawing the figure here. I allow the user to specify the units in the time scale (x-axis) and then I recalculate and call this function <code>plots()</code>. I want the plot to simply update, not append another plot to the figure.</p>

<pre><code>def plots():
    global vlgaBuffSorted
    cntr()

    result = collections.defaultdict(list)
    for d in vlgaBuffSorted:
        result[d['event']].append(d)

    result_list = result.values()

    f = Figure()
    graph1 = f.add_subplot(211)
    graph2 = f.add_subplot(212,sharex=graph1)

    for item in result_list:
        tL = []
        vgsL = []
        vdsL = []
        isubL = []
        for dict in item:
            tL.append(dict['time'])
            vgsL.append(dict['vgs'])
            vdsL.append(dict['vds'])
            isubL.append(dict['isub'])
        graph1.plot(tL,vdsL,'bo',label='a')
        graph1.plot(tL,vgsL,'rp',label='b')
        graph2.plot(tL,isubL,'b-',label='c')

    plotCanvas = FigureCanvasTkAgg(f, pltFrame)
    toolbar = NavigationToolbar2TkAgg(plotCanvas, pltFrame)
    toolbar.pack(side=BOTTOM)
    plotCanvas.get_tk_widget().pack(side=TOP)
</code></pre>
","<p>You essentially have two options:</p>

<ol>
<li><p>Do exactly what you're currently doing, but call <code>graph1.clear()</code> and <code>graph2.clear()</code> before replotting the data.  This is the slowest, but most simplest and most robust option.</p></li>
<li><p>Instead of replotting, you can just update the data of the plot objects.  You'll need to make some changes in your code, but this should be much, much faster than replotting things every time.  However, the shape of the data that you're plotting can't change, and if the range of your data is changing, you'll need to manually reset the x and y axis limits.</p></li>
</ol>

<p>To give an example of the second option:</p>

<pre><code>import matplotlib.pyplot as plt
import numpy as np

x = np.linspace(0, 6*np.pi, 100)
y = np.sin(x)

# You probably won't need this if you're embedding things in a tkinter plot...
plt.ion()

fig = plt.figure()
ax = fig.add_subplot(111)
line1, = ax.plot(x, y, 'r-') # Returns a tuple of line objects, thus the comma

for phase in np.linspace(0, 10*np.pi, 500):
    line1.set_ydata(np.sin(x + phase))
    fig.canvas.draw()
</code></pre>
","4098938"
"Get loop count inside a Python FOR loop","166954","","<p>In a Python <code>for</code> loop that iterates over a list we can write:</p>

<pre><code>for item in list:
    print item
</code></pre>

<p>and it neatly goes through all the elements in the list. Is there a way to know within the loop how many times I've been looping so far? For instance, I want to take a list and after I've processed ten elements I want to do something with them.</p>

<p>The alternatives I thought about would be something like:</p>

<pre><code>count=0
for item in list:
    print item
    count +=1
    if count % 10 == 0:
        print 'did ten'
</code></pre>

<p>Or:</p>

<pre><code>for count in range(0,len(list)):
    print list[count]
    if count % 10 == 0:
        print 'did ten'
</code></pre>

<p>Is there a better way (just like the <code>for item in list</code>) to get the number of iterations so far?</p>
","<p>The pythonic way is to use <a href=""http://docs.python.org/library/functions.html#enumerate"" rel=""noreferrer""><code>enumerate</code></a>:</p>

<pre><code>for idx,item in enumerate(list):
</code></pre>
","3162287"
"how to get the number of elements in a python list?","166950","","<p>I'm new to python. i've the following code:</p>

<pre><code>liste = 'asdfasfasd:asdfafaergasde' # example, how the string looks like
liste = str.split(':');

if liste.count()&gt;2 :
  print ""NOT YET SUPPORTED!""
</code></pre>

<p>According to the doc <a href=""http://docs.python.org/library/stdtypes.html"" rel=""noreferrer"">http://docs.python.org/library/stdtypes.html</a> , python can just return number of i‘s for which s[i] == x .</p>

<p>Is there any other function, that can give me the number of <strong>all</strong> elements in the list?</p>

<p>Thanks in advance</p>
","<p>It's the <code>len()</code> stand-alone function, <code>if len(listen_addr)&gt;2:</code></p>
","4707001"
"Python Unicode Encode Error","166665","","<p>I'm reading and parsing an Amazon XML file and while the XML file shows a ' , when I try to print it I get the following error:</p>

<pre><code>'ascii' codec can't encode character u'\u2019' in position 16: ordinal not in range(128) 
</code></pre>

<p>From what I've read online thus far, the error is coming from the fact that the XML file is in UTF-8, but Python wants to handle it as an ASCII encoded character. Is there a simple way to make the error go away and have my program print the XML as it reads?</p>
","<p>Likely, your problem is that you parsed it okay, and now you're trying to print the contents of the XML and you can't because theres some foreign Unicode characters.  Try to encode your unicode string as ascii first:</p>

<pre><code>unicodeData.encode('ascii', 'ignore')
</code></pre>

<p>the 'ignore' part will tell it to just skip those characters.  From the python docs:</p>

<pre><code>&gt;&gt;&gt; u = unichr(40960) + u'abcd' + unichr(1972)
&gt;&gt;&gt; u.encode('utf-8')
'\xea\x80\x80abcd\xde\xb4'
&gt;&gt;&gt; u.encode('ascii')
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in ?
UnicodeEncodeError: 'ascii' codec can't encode character '\ua000' in position 0: ordinal not in range(128)
&gt;&gt;&gt; u.encode('ascii', 'ignore')
'abcd'
&gt;&gt;&gt; u.encode('ascii', 'replace')
'?abcd?'
&gt;&gt;&gt; u.encode('ascii', 'xmlcharrefreplace')
'&amp;#40960;abcd&amp;#1972;'
</code></pre>

<p>You might want to read this article: <a href=""http://www.joelonsoftware.com/articles/Unicode.html"" rel=""noreferrer"">http://www.joelonsoftware.com/articles/Unicode.html</a>, which I found very useful as a basic tutorial on what's going on.  After the read, you'll stop feeling like you're just guessing what commands to use (or at least that happened to me).</p>
","3224300"
"Python add item to the tuple","166338","","<p>I have some object.ID-s which I try to store in the user session as tuple. When I add first one it works but tuple looks like <code>(u'2',)</code> but when I try to add new one using <code>mytuple = mytuple + new.id</code> got error <code>can only concatenate tuple (not ""unicode"") to tuple</code>. </p>
","<p>You need to make the second element a 1-tuple, eg:</p>

<pre><code>a = ('2',)
b = 'z'
new = a + (b,)
</code></pre>
","16730367"
"How to make several plots on a single page using matplotlib?","166316","","<p>I have written code that opens 16 figures at once.  Currently they all open as separate graphs.  I'd like them to open all on the same page.  Not the same graph. I want 16 separate graphs on a single page/window.  Also for some reason the format of the numbins and defaultreallimits doesn't hold past figure 1.  Do I need to use the subplot command?  I don't understand why I would have to but can't figure out what else I would do?  </p>

<pre><code>import csv
import scipy.stats
import numpy
import matplotlib.pyplot as plt

for i in range(16):
    plt.figure(i)
    filename= easygui.fileopenbox(msg='Pdf distance 90m contour', title='select file', filetypes=['*.csv'], default='X:\\herring_schools\\')
    alt_file=open(filename)    
    a=[]
    for row in csv.DictReader(alt_file):
        a.append(row['Dist_90m(nmi)'])
    y= numpy.array(a, float)    
    relpdf=scipy.stats.relfreq(y, numbins=7, defaultreallimits=(-10,60))
    bins = numpy.arange(-10,60,10)
    print numpy.sum(relpdf[0])
    print bins
    patches=plt.bar(bins,relpdf[0], width=10, facecolor='black')
    titlename= easygui.enterbox(msg='write graph title', title='', default='', strip=True, image=None, root=None)
    plt.title(titlename)
    plt.ylabel('Probability Density Function')
    plt.xlabel('Distance from 90m Contour Line(nm)')
    plt.ylim([0,1])

plt.show()
</code></pre>
","<p>To answer your main question, you want to use the <a href=""http://matplotlib.sourceforge.net/api/pyplot_api.html#matplotlib.pyplot.subplot"" rel=""noreferrer"">subplot</a> command.  I think changing <code>plt.figure(i)</code> to <code>plt.subplot(4,4,i+1)</code> should work.</p>
","1358983"
"round() in Python doesn't seem to be rounding properly","166278","","<p>The documentation for the <a href=""http://docs.python.org/lib/built-in-funcs.html"" rel=""noreferrer"">round()</a> function states that you pass it a number, and the positions past the decimal to round. Thus it <em>should</em> do this:</p>

<pre><code>n = 5.59
round(n, 1) # 5.6
</code></pre>

<p>But, in actuality, good old floating point weirdness creeps in and you get:</p>

<pre><code>5.5999999999999996
</code></pre>

<p>For the purposes of UI, I need to display <code>5.6</code>. I poked around the Internet and found some <a href=""http://mail.python.org/pipermail/python-list/2005-September/340383.html"" rel=""noreferrer"">documentation</a> that this is dependent on my implementation of Python. Unfortunately, this occurs on both my Windows dev machine and each Linux server I've tried. <a href=""http://www.python.org/doc/2.5.1/tut/node16.html"" rel=""noreferrer"">See here also</a>.</p>

<p>Short of creating my own round library, is there any way around this?</p>
","<p>can't help the way it's stored, but at least formatting works correctly: </p>

<pre><code>'%.1f' % round(n, 1) # gives you '5.6'
</code></pre>
","56833"
"List files in ONLY the current directory","166254","","<p>In Python, I only want to list all the files in the current directory ONLY. I do not want files listed from any subdirectory or parent.</p>

<p>There do seem to be similar solutions out there, but they don't seem to work for me. Here's my code snippet:</p>

<pre><code>import os
for subdir, dirs, files in os.walk('./'):
    for file in files:
      do some stuff
      print file
</code></pre>

<p>Let's suppose I have 2 files, holygrail.py and Tim inside my current directory. I have a folder as well and it contains two files - let's call them Arthur and Lancelot - inside it. When I run the script, this is what I get:</p>

<pre><code>holygrail.py
Tim
Arthur
Lancelot
</code></pre>

<p>I am happy with holygrail.py and Tim. But the two files, Arthur and Lancelot, I do not want listed.</p>
","<p>Just use <a href=""http://docs.python.org/library/os#os.listdir"" rel=""noreferrer""><code>os.listdir</code></a> and <a href=""http://docs.python.org/library/os.path.html#os.path.isfile"" rel=""noreferrer""><code>os.path.isfile</code></a> instead of <a href=""http://docs.python.org/library/os#os.walk"" rel=""noreferrer""><code>os.walk</code></a>.</p>

<p><strong>Example:</strong><br></p>

<pre><code>files = [f for f in os.listdir('.') if os.path.isfile(f)]
for f in files:
    # do something
</code></pre>

<hr>

<p>But be careful while applying this to other directory, like </p>

<pre><code>files = [f for f in os.listdir(somedir) if os.path.isfile(f)].
</code></pre>

<p>which would not work because <code>f</code> is not a full path but relative to the current dir. </p>

<p>Therefore, for filtering on another directory, do <code>os.path.isfile(os.path.join(somedir, f))</code></p>

<p><em>(Thanks <a href=""https://stackoverflow.com/users/1311956/causality"">Causality</a> for the hint)</em></p>
","11969014"
"How to check which version of Numpy I'm using?","166115","","<p>How can I check which version of <em>NumPy</em> I'm using? I'm using Mac OS X 10.6.1 Snow Leopard.</p>
","<pre><code>import numpy
numpy.version.version
</code></pre>
","1520275"
"How to list all installed packages and their versions in Python?","166030","","<p>Is there a way in Python to list all installed packages and their versions?</p>

<p>I know I can go inside <code>python/Lib/site-packages</code> and see what files and directories exist, but I find this very awkward. What I'm looking for something that is similar to <code>npm list</code> <a href=""https://npmjs.org/doc/list.html"">[1]</a>.</p>
","<p>If you have pip install and you want to see what packages have been installed with your installer tools you can simply call this:</p>

<pre><code>pip freeze
</code></pre>

<p>It will also include version numbers for the installed packages.</p>

<p><strong>Update</strong></p>

<p>pip has been updated to also produce the same output as <code>pip freeze</code> by calling:</p>

<pre><code>pip list
</code></pre>

<p><strong>Note</strong></p>

<p>The output from <code>pip list</code> is formatted differently, so if you have some shell script that parses the output (maybe to grab the version number) of <code>freeze</code> and want to change your script to call <code>list</code>, you'll need to change your parsing code.</p>
","12940002"
"Python data structure sort list alphabetically","166022","","<p>I am a bit confused regarding data structure in python; <code>()</code>,<code>[]</code>, and <code>{}</code>. I am trying to sort out a simple list, probably since I cannot identify the type of data I am failing to sort it.</p>

<p>My list is simple: <code>['Stem', 'constitute', 'Sedge', 'Eflux', 'Whim', 'Intrigue']</code> </p>

<p>My question is what type of data this is, and how to sort the words alphabetically?</p>
","<p><code>[]</code> denotes a <a href=""http://docs.python.org/3/tutorial/introduction.html#lists"" rel=""noreferrer"">list</a>, <code>()</code> denotes a <a href=""http://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences"" rel=""noreferrer"">tuple</a> and <code>{}</code> denotes a <a href=""http://docs.python.org/3/tutorial/datastructures.html#dictionaries"" rel=""noreferrer"">dictionary</a>. You should take a look at the <a href=""http://docs.python.org/3/tutorial/index.html"" rel=""noreferrer"">official Python tutorial</a> as these are the very basics of programming in Python.</p>

<p>What you have is a list of strings. You can sort it like this:</p>

<pre><code>In [1]: lst = ['Stem', 'constitute', 'Sedge', 'Eflux', 'Whim', 'Intrigue']

In [2]: sorted(lst)
Out[2]: ['Eflux', 'Intrigue', 'Sedge', 'Stem', 'Whim', 'constitute']
</code></pre>

<p>As you can see, words that start with an uppercase letter get preference over those starting with a lowercase letter. If you want to sort them independently, do this:</p>

<pre><code>In [4]: sorted(lst, key=str.lower)
Out[4]: ['constitute', 'Eflux', 'Intrigue', 'Sedge', 'Stem', 'Whim']
</code></pre>

<p>You can also sort the list in reverse order by doing this:</p>

<pre><code>In [12]: sorted(lst, reverse=True)
Out[12]: ['constitute', 'Whim', 'Stem', 'Sedge', 'Intrigue', 'Eflux']

In [13]: sorted(lst, key=str.lower, reverse=True)
Out[13]: ['Whim', 'Stem', 'Sedge', 'Intrigue', 'Eflux', 'constitute']
</code></pre>

<p><strong>Please note:</strong> If you work with Python 3, then <code>str</code> is the correct data type for every string that contains human-readable text. However, if you still need to work with Python 2, then you might deal with unicode strings which have the data type <code>unicode</code> in Python 2, and not <code>str</code>. In such a case, if you have a list of unicode strings, you must write <code>key=unicode.lower</code> instead of <code>key=str.lower</code>.</p>
","14032557"
"Solving ""DLL load failed: %1 is not a valid Win32 application."" for Pygame","165952","","<p>I recently installed Python 3.1 and the Pygame module for Python 3.1  When I type import python in the console I get the following error:</p>

<pre><code>Traceback (most recent call last):
  File ""&lt;pyshell#2&gt;"", line 1, in &lt;module&gt;
    import pygame
  File ""C:\Python31\lib\site-packages\pygame\__init__.py"", line 95, in &lt;module&gt;
    from pygame.base import *
ImportError: DLL load failed: %1 is not a valid Win32 application.
</code></pre>

<p>Please help!</p>
","<p>It could be due to the architecture of your OS. Is your OS 64 Bit and have you installed 64 bit version of Python? It may help to install both 32 bit version <a href=""http://www.python.org/ftp/python/3.1.3/python-3.1.3.msi"">Python 3.1</a> and <a href=""http://pygame.org/ftp/pygame-1.9.1.win32-py3.1.msi"">Pygame</a>, which is available officially only in 32 bit and you won't face this problem.</p>

<p>I see that 64 bit pygame is maintained <a href=""http://www.lfd.uci.edu/~gohlke/pythonlibs/#pygame"">here</a>, you might also want to try uninstalling Pygame only and install the 64 bit version on your existing python3.1, if not choose go for both 32-bit version.</p>
","4676478"
"Displaying better error message than ""No JSON object could be decoded""","165314","","<p>Python code to load data from some long complicated JSON file:</p>

<pre><code>with open(filename, ""r"") as f:
  data = json.loads(f.read())
</code></pre>

<p>(note: the best code version should be:</p>

<pre><code>with open(filename, ""r"") as f:
  data = json.load(f)
</code></pre>

<p>but both exhibit similar behavior)</p>

<p>For many types of JSON error (missing delimiters, incorrect backslashes in strings, etc), this prints a nice helpful message containing the line and column number where the JSON error was found.</p>

<p>However, for other types of JSON error (including the classic ""using comma on the last item in a list"", but also other things like capitalising true/false), Python's output is just:</p>

<pre><code>Traceback (most recent call last):
  File ""myfile.py"", line 8, in myfunction
    config = json.loads(f.read())
  File ""c:\python27\lib\json\__init__.py"", line 326, in loads
    return _default_decoder.decode(s)
  File ""c:\python27\lib\json\decoder.py"", line 360, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File ""c:\python27\lib\json\decoder.py"", line 378, in raw_decode
    raise ValueError(""No JSON object could be decoded"")
ValueError: No JSON object could be decoded
</code></pre>

<p>For that type of ValueError, how do you get Python to tell you where is the error in the JSON file?</p>
","<p>I've found that the <code>simplejson</code> module gives more descriptive errors in many cases where the built-in <code>json</code> module is vague. For instance, for the case of having a comma after the last item in a list:</p>

<pre><code>json.loads('[1,2,]')
....
ValueError: No JSON object could be decoded
</code></pre>

<p>which is not very descriptive. The same operation with <code>simplejson</code>:</p>

<pre><code>simplejson.loads('[1,2,]')
...
simplejson.decoder.JSONDecodeError: Expecting object: line 1 column 5 (char 5)
</code></pre>

<p>Much better! Likewise for other common errors like capitalizing <code>True</code>.</p>
","14956465"
"How to fix python indentation","165208","","<p>I have some python code that have inconsistent indentation, there is a lot of mixture of tabs and spaces to make the matter even worse even space indentation is not preserved.</p>

<p>The code works as expected but it's difficult to maintain.</p>

<p>How can I fix the indentation (like ""html tidy"" but for python) without breaking the code?</p>
","<p>Use the <code>reindent.py</code> script that you find in the <code>Tools/scripts/</code> directory of your Python installation:</p>

<blockquote>
  <p>Change Python (.py) files to use
  4-space indents and no hard tab
  characters. Also trim excess spaces
  and tabs from ends of lines, and
  remove empty lines at the end of
  files.  Also ensure the last line ends
  with a newline.</p>
</blockquote>

<p>Have a look at that script for detailed usage instructions.</p>
","1024489"
"Split list into smaller lists","165011","","<p>I am looking for a way to easily split a python list in half.</p>

<p>So that if I have an array:</p>

<pre><code>A = [0,1,2,3,4,5]
</code></pre>

<p>I would be able to get:</p>

<pre><code>B = [0,1,2]

C = [3,4,5]
</code></pre>
","<pre><code>A = [1,2,3,4,5,6]
B = A[:len(A)/2]
C = A[len(A)/2:]
</code></pre>

<p>If you want a function:</p>

<pre><code>def split_list(a_list):
    half = len(a_list)/2
    return a_list[:half], a_list[half:]

A = [1,2,3,4,5,6]
B, C = split_list(A)
</code></pre>
","752330"
"Return None if Dictionary key is not available","164971","","<p>I need a way to get a dictionary value if its key exists, or simply return None, if it does not.</p>

<p>However, Python returns a key_error if you search for a key that does not exist. I know that I can check for the key, but I am looking for something more explicit. Is there a way to just return None if the key does not exist ?</p>
","<p>You can use <a href=""http://docs.python.org/library/stdtypes.html#dict.get"" rel=""noreferrer""><code>get()</code></a></p>

<pre><code>value = d.get(key)
</code></pre>

<p>which will return <code>None</code> if <code>key is not in d</code>. You can also provide a different default value that will be returned instead of <code>None</code>:</p>

<pre><code>value = d.get(key, ""empty"")
</code></pre>
","6130800"
"Running a Python script from PHP","164876","","<p>I'm trying to run a Python script from PHP using the following command:</p>

<p><code>exec('/usr/bin/python2.7 /srv/http/assets/py/switch.py arg1 arg2');</code></p>

<p>However, PHP simply doesn't produce any output. Error reporting is set to E_ALL and display_errors is on.</p>

<p>Here's what I've tried:</p>

<ul>
<li>I used <code>python2</code>, <code>/usr/bin/python2</code> and <code>python2.7</code> instead of <code>/usr/bin/python2.7</code></li>
<li>I also used a relative path instead of an absolute path which didn't change anything either.</li>
<li>I tried using the commands <code>exec</code>, <code>shell_exec</code>, <code>system</code>.</li>
</ul>

<p>However, if I run</p>

<pre><code>if (exec('echo TEST') == 'TEST')
{
    echo 'exec works!';
}
</code></pre>

<p>it works perfectly fine while <code>shutdown now</code> doesn't do anything.</p>

<p>PHP has the permissions to access and execute the file.</p>

<p>EDIT: Thanks to Alejandro, I was able to fix the problem. If you have the same problem, don't forget that your webserver probably/hopefully doesn't run as root. <strong>Try logging in as your webserver's user or a user with similar permissions and try to run the commands yourself.</strong></p>
","<p>Tested on Ubuntu Server 10.04. I hope it helps you also on Arch Linux.</p>

<p>In PHP:</p>

<pre><code>&lt;?php 

$command = escapeshellcmd('/usr/custom/test.py');
$output = shell_exec($command);
echo $output;

?&gt;
</code></pre>

<p>In Python file 'test.py' verify this text in first line: <a href=""http://www.stackoverflow.com/questions/2429511/why-do-people-write-usr-bin-env-python-on-the-first-line-of-a-python-script/2429517"">(see shebang explain)</a>:</p>

<pre><code>#!/usr/bin/env python
</code></pre>

<p>Also Python file <a href=""http://www.php.net/manual/en/function.shell-exec.php#37971"" rel=""noreferrer"">should have correct privileges</a> (execution for user www-data / apache if PHP script runs in browser or through curl)
and/or must be ""executable"". Also all commands in .py file must have correct privileges.</p>

<pre><code>chmod +x myscript.py
</code></pre>
","19736494"
"How to get a variable name as a string in Python?","164740","","<p>I would like to be able to get the name of a variable as a string but I don't know if Python has that much introspection capabilities. Something like:</p>

<pre><code>&gt;&gt;&gt; print(my_var.__name__)
'my_var'
</code></pre>

<p>I want to do that because I have a bunch of vars I'd like to turn into a dictionary like :</p>

<pre><code>bar = True
foo = False
&gt;&gt;&gt; my_dict = dict(bar=bar, foo=foo)
&gt;&gt;&gt; print my_dict 
{'foo': False, 'bar': True}
</code></pre>

<p>But I'd like something more automatic than that.</p>

<p>Python have <code>locals()</code> and <code>vars()</code>, so I guess there is a way.</p>
","<p>Are you trying to do this?</p>

<pre><code>dict( (name,eval(name)) for name in ['some','list','of','vars'] )
</code></pre>

<p>Example </p>

<pre><code>&gt;&gt;&gt; some= 1
&gt;&gt;&gt; list= 2
&gt;&gt;&gt; of= 3
&gt;&gt;&gt; vars= 4
&gt;&gt;&gt; dict( (name,eval(name)) for name in ['some','list','of','vars'] )
{'list': 2, 'some': 1, 'vars': 4, 'of': 3}
</code></pre>
","2553532"
"Non-blocking read on a subprocess.PIPE in python","164436","","<p>I'm using the <a href=""http://docs.python.org/library/subprocess.html"" rel=""noreferrer"">subprocess module</a> to start a subprocess and connect to it's output stream (stdout). I want to be able to execute non-blocking reads on its stdout. Is there a way to make .readline non-blocking or to check if there is data on the stream before I invoke <code>.readline</code>? I'd like this to be portable or at least work under Windows and Linux.</p>

<p>here is how I do it for now (It's blocking on the <code>.readline</code> if no data is avaible):</p>

<pre><code>p = subprocess.Popen('myprogram.exe', stdout = subprocess.PIPE)
output_str = p.stdout.readline()
</code></pre>
","<p><a href=""https://stackoverflow.com/questions/375427/non-blocking-read-on-a-stream-in-python/4025909#4025909""><code>fcntl</code></a>, <a href=""https://stackoverflow.com/questions/375427/non-blocking-read-on-a-stream-in-python/375511#375511""><code>select</code></a>, <a href=""https://stackoverflow.com/questions/375427/non-blocking-read-on-a-stream-in-python/437888#437888""><code>asyncproc</code></a> won't help in this case.</p>

<p>A reliable way to read a stream without blocking regardless of operating system is to use <a href=""https://docs.python.org/3/library/queue.html#queue.Queue.get_nowait"" rel=""noreferrer""><code>Queue.get_nowait()</code></a>:</p>

<pre><code>import sys
from subprocess import PIPE, Popen
from threading  import Thread

try:
    from Queue import Queue, Empty
except ImportError:
    from queue import Queue, Empty  # python 3.x

ON_POSIX = 'posix' in sys.builtin_module_names

def enqueue_output(out, queue):
    for line in iter(out.readline, b''):
        queue.put(line)
    out.close()

p = Popen(['myprogram.exe'], stdout=PIPE, bufsize=1, close_fds=ON_POSIX)
q = Queue()
t = Thread(target=enqueue_output, args=(p.stdout, q))
t.daemon = True # thread dies with the program
t.start()

# ... do other things here

# read line without blocking
try:  line = q.get_nowait() # or q.get(timeout=.1)
except Empty:
    print('no output yet')
else: # got line
    # ... do something with line
</code></pre>
","4896288"
"Why do I need 'b' to encode a Python string with Base64?","164244","","<p>Following this <a href=""http://docs.python.org/release/3.1.3/library/base64.html"" rel=""noreferrer"">python example</a>, I encode a string as Base64 with:</p>

<pre><code>&gt;&gt;&gt; import base64
&gt;&gt;&gt; encoded = base64.b64encode(b'data to be encoded')
&gt;&gt;&gt; encoded
b'ZGF0YSB0byBiZSBlbmNvZGVk'
</code></pre>

<p>But, if I leave out the leading <code>b</code>:</p>

<pre><code>&gt;&gt;&gt; encoded = base64.b64encode('data to be encoded')
</code></pre>

<p>I get the following error:</p>

<pre class=""lang-none prettyprint-override""><code>Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
  File ""C:\Python32\lib\base64.py"", line 56, in b64encode
   raise TypeError(""expected bytes, not %s"" % s.__class__.__name__)
   TypeError: expected bytes, not str
</code></pre>

<p>Why is this?</p>
","<p>base64 encoding takes 8-bit binary byte data and encodes it uses only the characters <code>A-Z</code>, <code>a-z</code>, <code>0-9</code>, <code>+</code>, <code>/</code>* so it can be transmitted over channels that do not preserve all 8-bits of data, such as email.</p>

<p>Hence, it wants a string of 8-bit bytes. You create those in Python 3 with the <code>b''</code> syntax.</p>

<p>If you remove the <code>b</code>, it becomes a string. A string is a sequence of Unicode characters. base64 has no idea what to do with Unicode data, it's not 8-bit. It's not really any bits, in fact. :-)</p>

<p>In your second example:</p>

<pre><code>&gt;&gt;&gt; encoded = base64.b64encode('data to be encoded')
</code></pre>

<p>All the characters fit neatly into the ASCII character set, and base64 encoding is therefore actually a bit pointless. You can convert it to ascii instead, with</p>

<pre><code>&gt;&gt;&gt; encoded = 'data to be encoded'.encode('ascii')
</code></pre>

<p>Or simpler:</p>

<pre><code>&gt;&gt;&gt; encoded = b'data to be encoded'
</code></pre>

<p>Which would be the same thing in this case.</p>

<hr>

<p>* Most base64 flavours may also include a <code>=</code> at the end as padding. In addition, some base64 variants may use characters other than <code>+</code> and <code>/</code>. See the <a href=""https://en.wikipedia.org/wiki/Base64#Variants_summary_table"">Variants summary table</a> at Wikipedia for an overview.</p>
","8909233"
"How to dynamically build a JSON object with Python?","164230","","<p>I am new to Python and I am playing with JSON data. I would like to dynamically build a JSON object by adding some key-value to an existing JSON object.</p>

<p>I tried the following but I get <code>TypeError: 'str' object does not support item assignment</code>:</p>

<pre><code>import json

json_data = json.dumps({})
json_data[""key""] = ""value""

print 'JSON: ', json_data
</code></pre>
","<p>You build the object <strong>before</strong> encoding it to a JSON string:</p>

<pre><code>data = {}
data['key'] = 'value'
json_data = json.dumps(data)
</code></pre>

<p>JSON is a <em>serialization</em> format, textual data <em>representing</em> a structure. It is not, itself, that structure.</p>
","23110401"
"How to percent-encode URL parameters in Python?","164116","","<p>If I do </p>

<pre><code>url = ""http://example.com?p="" + urllib.quote(query)
</code></pre>

<ol>
<li>It doesn't encode <code>/</code> to <code>%2F</code> (breaks OAuth normalization)</li>
<li>It doesn't handle Unicode (it throws an exception)</li>
</ol>

<p>Is there a better library?</p>
","<p>From the <a href=""http://docs.python.org/library/urllib.html#urllib.quote"" rel=""noreferrer"">docs</a>:</p>

<pre><code>urllib.quote(string[, safe])
</code></pre>

<blockquote>
  <p>Replace special characters in string
  using the %xx escape. Letters, digits,
  and the characters '_.-' are never
  quoted. By default, this function is
  intended for quoting the path section
  of the URL.The optional safe parameter
  specifies additional characters that
  should not be quoted — <strong>its default
  value is '/'</strong></p>
</blockquote>

<p>That means passing '' for safe will solve your first issue:</p>

<pre><code>&gt;&gt;&gt; urllib.quote('/test')
'/test'
&gt;&gt;&gt; urllib.quote('/test', safe='')
'%2Ftest'
</code></pre>

<p>About the second issue, there is a bug report about it <a href=""http://bugs.python.org/issue1712522"" rel=""noreferrer"">here</a>. Apparently it was fixed in python 3. You can workaround it by encoding as utf8 like this:</p>

<pre><code>&gt;&gt;&gt; query = urllib.quote(u""Müller"".encode('utf8'))
&gt;&gt;&gt; print urllib.unquote(query).decode('utf8')
Müller
</code></pre>

<p>By the way have a look at <a href=""http://docs.python.org/library/urllib.html#urllib.urlencode"" rel=""noreferrer"">urlencode</a></p>

<p>Note that <code>urllib.quote</code> moved to <code>urllib.parse.quote</code> in Python3</p>
","1695199"
"Why do some functions have underscores ""__"" before and after the function name?","164116","","<p>This seems to occur a lot, and was wondering if this was a requirement in the Python language, or merely a matter of convention?</p>

<p>Also, could someone name and explain which functions tend to have the underscores, and why (<code>__init__</code>, for instance)?</p>
","<p>From the <a href=""https://www.python.org/dev/peps/pep-0008/"" rel=""noreferrer"">Python PEP 8 -- Style Guide for Python Code</a>:</p>

<blockquote>
  <h3><a href=""https://www.python.org/dev/peps/pep-0008/#descriptive-naming-styles"" rel=""noreferrer"">Descriptive: Naming Styles</a></h3>
  
  <p>The following special forms using leading or trailing underscores are
  recognized (these can generally be combined with any case convention):</p>
  
  <ul>
  <li><p><code>_single_leading_underscore</code>: weak ""internal use"" indicator. E.g. <code>from M import *</code> does not import objects whose name starts with an underscore.</p></li>
  <li><p><code>single_trailing_underscore_</code>: used by convention to avoid conflicts with Python keyword, e.g.</p>
  
  <p><code>Tkinter.Toplevel(master, class_='ClassName')</code></p></li>
  <li><p><code>__double_leading_underscore</code>: when naming a class attribute, invokes name mangling (inside class FooBar, <code>__boo</code> becomes <code>_FooBar__boo</code>; see below).  </p></li>
  <li><p><code>__double_leading_and_trailing_underscore__</code>: ""magic"" objects or attributes that live in user-controlled namespaces.  E.g. <code>__init__</code>,
  <code>__import__</code> or <code>__file__</code>.  Never invent such names; only use them as documented.</p></li>
  </ul>
</blockquote>

<p>Note that names with double leading and trailing underscores are essentially reserved for Python itself: ""Never invent such names; only use them as documented"".</p>
","8689983"
"What is a ""callable"" in Python?","164082","","<p>Now that it's clear <a href=""https://stackoverflow.com/questions/100003/what-is-a-metaclass-in-python"">what a metaclass is</a>, there is an associated concept that I use all the time without knowing what it really means. </p>

<p>I suppose everybody made once a mistake with parenthesis, resulting  in an ""object is not callable"" exception. What's more, using <code>__init__</code> and <code>__new__</code> lead to wonder what this bloody <code>__call__</code> can be used for.</p>

<p>Could you give me some explanations, including examples with the magic method ?</p>
","<p>A callable is anything that can be called. </p>

<p>The <a href=""http://svn.python.org/projects/python/trunk/Objects/object.c"" rel=""noreferrer"">built-in <em>callable</em> (PyCallable_Check in objects.c)</a> checks if the argument is either:</p>

<ul>
<li>an instance of a class with a <em>__call__</em> method or</li>
<li>is of a type that has a non null <em>tp_call</em> (c struct) member which indicates callability otherwise (such as in functions, methods etc.)</li>
</ul>

<p>The method named <em>__call__</em> is (<a href=""http://docs.python.org/ref/callable-types.html"" rel=""noreferrer"">according to the documentation</a>)</p>

<blockquote>
  <p>Called when the instance is ''called'' as a function</p>
</blockquote>

<h2>Example</h2>

<pre><code>class Foo:
  def __call__(self):
    print 'called'

foo_instance = Foo()
foo_instance() #this is calling the __call__ method
</code></pre>
","111255"
"Python speed testing - Time Difference - milliseconds","163668","","<p>What is the proper way to compare 2 times in Python in order to speed test a section of code? I tried reading the API docs. I'm not sure I understand the timedelta thing.</p>

<p>So far I have this code:</p>

<pre><code>from datetime import datetime

tstart = datetime.now()
print t1

# code to speed test

tend = datetime.now()
print t2
# what am I missing?
# I'd like to print the time diff here
</code></pre>
","<p><a href=""http://docs.python.org/3.2/library/datetime.html#timedelta-objects"" rel=""noreferrer""><code>datetime.timedelta</code></a> is just the difference between two datetimes ... so it's like a period of time, in days / seconds / microseconds</p>

<pre><code>&gt;&gt;&gt; a = datetime.datetime.now()
&gt;&gt;&gt; b = datetime.datetime.now()
&gt;&gt;&gt; c = b - a

&gt;&gt;&gt; c
datetime.timedelta(0, 4, 316543)
&gt;&gt;&gt; c.days
0
&gt;&gt;&gt; c.seconds
4
&gt;&gt;&gt; c.microseconds
316543
</code></pre>

<p>Be aware that <code>c.microseconds</code> only returns the microseconds portion of the timedelta! For timing purposes always use <code>c.total_seconds()</code>.</p>

<p>You can do all sorts of maths with datetime.timedelta, eg:</p>

<pre><code>&gt;&gt;&gt; c / 10
datetime.timedelta(0, 0, 431654)
</code></pre>

<p>It might be more useful to look at CPU time instead of wallclock time though ... that's operating system dependant though ... under Unix-like systems, check out the 'time' command.</p>
","766382"
"How can I convert an RGB image into grayscale in Python?","163601","","<p>I'm trying to use <code>matplotlib</code> to read in an RGB image and convert it to grayscale.</p>

<p>In matlab I use this:</p>

<pre><code>img = rgb2gray(imread('image.png'));
</code></pre>

<p>In the <a href=""http://matplotlib.sourceforge.net/users/image_tutorial.html"" rel=""noreferrer"">matplotlib tutorial</a> they don't cover it. They just read in the image</p>

<pre><code>import matplotlib.image as mpimg
img = mpimg.imread('image.png')
</code></pre>

<p>and then they slice the array, but that's not the same thing as converting RGB to grayscale from what I understand.</p>

<pre><code>lum_img = img[:,:,0]
</code></pre>

<p>EDIT:</p>

<p>I find it hard to believe that numpy or matplotlib doesn't have a built-in function to convert from rgb to gray. Isn't this a common operation in image processing?</p>

<p>I wrote a very simple function that works with the image imported using <code>imread</code> in 5 minutes. It's horribly inefficient, but that's why I was hoping for a professional implementation built-in. </p>

<p>Sebastian has improved my function, but I'm still hoping to find the built-in one.</p>

<p>matlab's (NTSC/PAL) implementation:</p>

<pre><code>import numpy as np

def rgb2gray(rgb):

    r, g, b = rgb[:,:,0], rgb[:,:,1], rgb[:,:,2]
    gray = 0.2989 * r + 0.5870 * g + 0.1140 * b

    return gray
</code></pre>
","<p>How about doing it with <a href=""http://www.pythonware.com/products/pil/"" rel=""noreferrer"">PIL</a>:</p>

<pre><code>from PIL import Image
img = Image.open('image.png').convert('LA')
img.save('greyscale.png')
</code></pre>

<hr>

<p>Using matplotlib and <a href=""http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale"" rel=""noreferrer"">the formula</a></p>

<pre><code>Y' = 0.299 R + 0.587 G + 0.114 B 
</code></pre>

<p>you could do:</p>

<pre><code>import numpy as np
import matplotlib.pyplot as plt
import matplotlib.image as mpimg

def rgb2gray(rgb):
    return np.dot(rgb[...,:3], [0.299, 0.587, 0.114])

img = mpimg.imread('image.png')     
gray = rgb2gray(img)    
plt.imshow(gray, cmap = plt.get_cmap('gray'))
plt.show()
</code></pre>
","12201744"
"What exactly are Python's iterator, iterable, and iteration protocols?","163541","","<p>What are the most basic definitions of ""iterable"", ""iterator"" and ""iteration"" in Python?</p>

<p>I've read multiple definitions but their exact meaning still won't sink in.</p>

<p>Can someone please help me with the basic idea?</p>
","<p><strong>Iteration</strong> is a general term for taking each item of something, one after another. Any time you use a loop, explicit or implicit, to go over a group of items, that is iteration.</p>

<p>In Python, <strong>iterable</strong> and <strong>iterator</strong> have specific meanings.</p>

<p>An <strong>iterable</strong> is an object that has an <code>__iter__</code> method which returns an <strong>iterator</strong>, or which defines a <code>__getitem__</code> method that can take sequential indexes starting from zero (and raises an <code>IndexError</code> when the indexes are no longer valid). So an <strong>iterable</strong> is an object that you can get an <strong>iterator</strong> from.</p>

<p>An <strong>iterator</strong> is an object with a <code>next</code> (Python 2) or <code>__next__</code> (Python 3) method. </p>

<p>Whenever you use a <code>for</code> loop, or <code>map</code>, or a list comprehension, etc. in Python, the <code>next</code> method is called automatically to get each item from the <strong>iterator</strong>, thus going through the process of <strong>iteration</strong>.</p>

<p>A good place to start learning would be the <a href=""https://docs.python.org/3/tutorial/classes.html#iterators"">iterators section of the tutorial</a> and the <a href=""https://docs.python.org/dev/library/stdtypes.html#iterator-types"">iterator types section of the standard types page</a>. After you understand the basics, try the <a href=""https://docs.python.org/dev/howto/functional.html#iterators"">iterators section of the Functional Programming HOWTO</a>.</p>
","9884259"
"How to terminate a python subprocess launched with shell=True","163531","","<p>I'm launching a subprocess with the following command:</p>

<pre><code>p = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=True)
</code></pre>

<p>However, when I try to kill using:</p>

<pre><code>p.terminate()
</code></pre>

<p>or </p>

<pre><code>p.kill()
</code></pre>

<p>The command keeps running in the background, so I was wondering how can I actually terminate the process. </p>

<p>Note that when I run the command with:</p>

<pre><code>p = subprocess.Popen(cmd.split(), stdout=subprocess.PIPE)
</code></pre>

<p>It does terminate successfully when issuing the <code>p.terminate()</code>.</p>
","<p>Use a <a href=""http://en.wikipedia.org/wiki/Process_group"" rel=""noreferrer"">process group</a> so as to enable sending a signal to all the process in the groups. For that, you should attach a <a href=""http://pubs.opengroup.org/onlinepubs/009695399/functions/setsid.html"" rel=""noreferrer"">session id</a> to the parent process of the spawned/child processes, which is a shell in your case. This will make it the group leader of the processes. So now, when a signal is sent to the process group leader, it's transmitted to all of the child processes of this group.</p>

<p>Here's the code:</p>

<pre><code>import os
import signal
import subprocess

# The os.setsid() is passed in the argument preexec_fn so
# it's run after the fork() and before  exec() to run the shell.
pro = subprocess.Popen(cmd, stdout=subprocess.PIPE, 
                       shell=True, preexec_fn=os.setsid) 

os.killpg(os.getpgid(pro.pid), signal.SIGTERM)  # Send the signal to all the process groups
</code></pre>
","4791612"
"Read Excel File in Python","163305","","<p>I've an Excel File</p>

<pre><code>Arm_id      DSPName        DSPCode          HubCode          PinCode    PPTL
1            JaVAS            01              AGR             282001    1,2
2            JaVAS            01              AGR             282002    3,4
3            JaVAS            01              AGR             282003    5,6
</code></pre>

<p>I want to save a string in the form <code>Arm_id,DSPCode,Pincode</code>. This format is configurable, ie it might change to <code>DSPCode,Arm_id,Pincode</code> . I save it format in a list like</p>

<pre><code>FORMAT = ['Arm_id', 'DSPName', 'Pincode']
</code></pre>

<p>How do I read the content of a specific column with provided name, given that the <code>FORMAT</code> is configurable.</p>

<p>This is what I tried. Currently I'm able to read all the content in the file</p>

<pre><code>from xlrd import open_workbook
wb = open_workbook('sample.xls')
for s in wb.sheets():
    #print 'Sheet:',s.name
    values = []
    for row in range(s.nrows):
        col_value = []
        for col in range(s.ncols):
            value  = (s.cell(row,col).value)
            try : value = str(int(value))
            except : pass
            col_value.append(value)
        values.append(col_value)
print values
</code></pre>

<p>My output is </p>

<pre><code>[[u'Arm_id', u'DSPName', u'DSPCode', u'HubCode', u'PinCode', u'PPTL'], ['1', u'JaVAS', '1', u'AGR', '282001', u'1,2'], ['2', u'JaVAS', '1', u'AGR', '282002', u'3,4'], ['3', u'JaVAS', '1', u'AGR', '282003', u'5,6']]
</code></pre>

<p>Then I loop around <code>values[0]</code> trying to find out the <code>FORMAT</code> content in <code>values[0]</code> and then getting the index of <code>Arm_id, DSPname and Pincode</code> in the <code>values[0]</code> and then from next loop I know the index of all the <code>FORMAT</code> factors , thereby getting to know which value do I need to get .</p>

<p>But this is such a poor solution.</p>

<p><strong>How do I get the values of a specific column with name in excel file?</strong></p>
","<p>This is one approach:</p>

<pre><code>from xlrd import open_workbook

class Arm(object):
    def __init__(self, id, dsp_name, dsp_code, hub_code, pin_code, pptl):
        self.id = id
        self.dsp_name = dsp_name
        self.dsp_code = dsp_code
        self.hub_code = hub_code
        self.pin_code = pin_code
        self.pptl = pptl

    def __str__(self):
        return(""Arm object:\n""
               ""  Arm_id = {0}\n""
               ""  DSPName = {1}\n""
               ""  DSPCode = {2}\n""
               ""  HubCode = {3}\n""
               ""  PinCode = {4} \n""
               ""  PPTL = {5}""
               .format(self.id, self.dsp_name, self.dsp_code,
                       self.hub_code, self.pin_code, self.pptl))

wb = open_workbook('sample.xls')
for sheet in wb.sheets():
    number_of_rows = sheet.nrows
    number_of_columns = sheet.ncols

    items = []

    rows = []
    for row in range(1, number_of_rows):
        values = []
        for col in range(number_of_columns):
            value  = (sheet.cell(row,col).value)
            try:
                value = str(int(value))
            except ValueError:
                pass
            finally:
                values.append(value)
        item = Arm(*values)
        items.append(item)

for item in items:
    print item
    print(""Accessing one single value (eg. DSPName): {0}"".format(item.dsp_name))
    print
</code></pre>

<p>You don't have to use a custom class, you can simply take a <code>dict()</code>. If you use a class however, you can access all values via dot-notation, as you see above.</p>

<p>Here is the output of the script above:</p>

<pre><code>Arm object:
  Arm_id = 1
  DSPName = JaVAS
  DSPCode = 1
  HubCode = AGR
  PinCode = 282001 
  PPTL = 1
Accessing one single value (eg. DSPName): JaVAS

Arm object:
  Arm_id = 2
  DSPName = JaVAS
  DSPCode = 1
  HubCode = AGR
  PinCode = 282002 
  PPTL = 3
Accessing one single value (eg. DSPName): JaVAS

Arm object:
  Arm_id = 3
  DSPName = JaVAS
  DSPCode = 1
  HubCode = AGR
  PinCode = 282003 
  PPTL = 5
Accessing one single value (eg. DSPName): JaVAS
</code></pre>
","22170333"
"IndexError: list index out of range and python","163289","","<p>I'm telling my program to print out line 53 of an output. Is this error telling me that there aren't that many lines and therefore can not print it out?</p>
","<p>If you have a list with 53 items, the last one is <code>thelist[52]</code> because indexing start at 0.</p>
","1098660"
"Tensorflow: how to save/restore a model?","163181","","<p>After you train a model in Tensorflow: </p>

<ol>
<li>How do you save the trained model?</li>
<li>How do you later restore this saved model?</li>
</ol>
","<p>I am improving my answer to add more details for saving and restoring models. </p>

<p>In(and after) Tensorflow version 0.11: </p>

<p><strong>Save the model:</strong></p>

<pre><code>import tensorflow as tf

#Prepare to feed input, i.e. feed_dict and placeholders
w1 = tf.placeholder(""float"", name=""w1"")
w2 = tf.placeholder(""float"", name=""w2"")
b1= tf.Variable(2.0,name=""bias"")
feed_dict ={w1:4,w2:8}

#Define a test operation that we will restore
w3 = tf.add(w1,w2)
w4 = tf.multiply(w3,b1,name=""op_to_restore"")
sess = tf.Session()
sess.run(tf.global_variables_initializer())

#Create a saver object which will save all the variables
saver = tf.train.Saver()

#Run the operation by feeding input
print sess.run(w4,feed_dict)
#Prints 24 which is sum of (w1+w2)*b1 

#Now, save the graph
saver.save(sess, 'my_test_model',global_step=1000)
</code></pre>

<p><strong>Restore the model:</strong> </p>

<pre><code>import tensorflow as tf

sess=tf.Session()    
#First let's load meta graph and restore weights
saver = tf.train.import_meta_graph('my_test_model-1000.meta')
saver.restore(sess,tf.train.latest_checkpoint('./'))


# Access saved Variables directly
print(sess.run('bias:0'))
# This will print 2, which is the value of bias that we saved


# Now, let's access and create placeholders variables and
# create feed-dict to feed new data

graph = tf.get_default_graph()
w1 = graph.get_tensor_by_name(""w1:0"")
w2 = graph.get_tensor_by_name(""w2:0"")
feed_dict ={w1:13.0,w2:17.0}

#Now, access the op that you want to run. 
op_to_restore = graph.get_tensor_by_name(""op_to_restore:0"")

print sess.run(op_to_restore,feed_dict)
#This will print 60 which is calculated 
</code></pre>

<p>This and some more advanced use-cases have been explained very well here.</p>

<p><a href=""http://cv-tricks.com/tensorflow-tutorial/save-restore-tensorflow-models-quick-complete-tutorial/"" rel=""noreferrer"">http://cv-tricks.com/tensorflow-tutorial/save-restore-tensorflow-models-quick-complete-tutorial/</a></p>
","43784657"
"How to execute python file in linux","163038","","<p>I am using linux mint, and to run a python file I have to type in the terminal: <code>python [file path]</code>, so is there way to make the file executable, and make it run the <code>python</code> command automatically when I doublr click it?</p>

<p>And since I stopped dealing with windows ages ago, I wonder if the .py files there are also automatically executable or do I need some steps.</p>

<p>Thanks</p>
","<p>You have to add a shebang. A shebang is the first line of the file. Its what the system is looking for in order to execute a file.</p>

<p>It should look like that :</p>

<pre><code>#!/usr/bin/env python
</code></pre>

<p>or the real path</p>

<pre><code>#!/usr/bin/python
</code></pre>

<p>You should also check the file have the right to be execute. <code>chmod +x file.py</code></p>

<p>As Fabian said, take a look to Wikipedia : <a href=""http://en.wikipedia.org/wiki/Shebang_%28Unix%29"" rel=""noreferrer"">Wikipedia - Shebang (en)</a></p>
","13933226"
"Efficient way to shift a list in python","162652","","<p>What is the most efficient way to shift a list in python? 
Right now I have something like this:</p>

<pre><code>&gt;&gt;&gt; def shift(l, n):
...     return l[n:] + l[:n]
... 
&gt;&gt;&gt; l = [1,2,3,4]
&gt;&gt;&gt; shift(l,1)
[2, 3, 4, 1]
&gt;&gt;&gt; shift(l,2)
[3, 4, 1, 2]
&gt;&gt;&gt; shift(l,0)
[1, 2, 3, 4]
&gt;&gt;&gt; shift(l,-1)
[4, 1, 2, 3]
</code></pre>

<p>Is there a better way?</p>
","<p>A <a href=""http://docs.python.org/library/collections.html#deque-objects"" rel=""noreferrer""><code>collections.deque</code></a> is optimized for pulling and pushing on both ends. They even have a dedicated <code>rotate()</code> method. </p>

<pre><code>from collections import deque
items = deque([1, 2])
items.append(3) # deque == [1, 2, 3]
items.rotate(1) # The deque is now: [3, 1, 2]
items.rotate(-1) # Returns deque to original state: [1, 2, 3]
item = items.popleft() # deque == [2, 3]
</code></pre>
","2150125"
"WhatsApp API (java/python)","162342","","<p>I am looking for WhatsApp API, preferably a Python or Java library.</p>

<p>I've tried <a href=""https://github.com/tgalal/yowsup"" rel=""noreferrer"">Yowsup</a>, but could not get my number registered; I am based in India and I am not sure if that has got anything to do with it.</p>

<p>I did try <a href=""https://github.com/venomous0x/WhatsAPI"" rel=""noreferrer"">WhatsAPI</a> (Python library) but it is not working either.</p>

<p>Any suggestions about this? Any users of Yowsup here?</p>
","<p>After trying everything, Yowsup library worked for me. The bug that I was facing was recently fixed. Anyone trying to do something with Whatsapp should try it.</p>
","17283356"
"How to use subprocess popen Python","162199","","<p>Since os.popen is being replaced by subprocess.popen, I was wondering how would I convert</p>

<pre><code>os.popen('swfdump /tmp/filename.swf/ -d')
</code></pre>

<p>to subprocess.popen()</p>

<p>I tried:</p>

<pre><code>subprocess.Popen(""swfdump /tmp/filename.swf -d"")
subprocess.Popen(""swfdump %s -d"" % (filename))  # NOTE: filename is a variable
                                                # containing /tmp/filename.swf
</code></pre>

<p>But I guess I'm not properly writing this out. Any help would be appreciated. Thanks</p>
","<p><code>subprocess.Popen</code> takes a list of arguments:</p>

<pre><code>from subprocess import Popen, PIPE

process = Popen(['swfdump', '/tmp/filename.swf', '-d'], stdout=PIPE, stderr=PIPE)
stdout, stderr = process.communicate()
</code></pre>

<p>There's even a <a href=""http://docs.python.org/library/subprocess.html#replacing-os-popen-os-popen2-os-popen3"" rel=""noreferrer"">section of the documentation</a> devoted to helping users migrate from <code>os.popen</code> to <code>subprocess</code>.</p>
","12605520"
"Simple way to remove multiple spaces in a string?","162005","","<p>Suppose this is the string:</p>

<pre class=""lang-none prettyprint-override""><code>The   fox jumped   over    the log.
</code></pre>

<p>It would result in:</p>

<pre class=""lang-none prettyprint-override""><code>The fox jumped over the log.
</code></pre>

<p>What is the simplest, 1-2 liner that can do this? Without splitting and going into lists...</p>
","<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; re.sub(' +',' ','The     quick brown    fox')
'The quick brown fox'
</code></pre>
","1546244"
"How to find all positions of the maximum value in a list?","161696","","<p>I have a list:</p>

<pre><code>a = [32, 37, 28, 30, 37, 25, 27, 24, 35, 55, 23, 31, 55, 21, 40, 18, 50,
             35, 41, 49, 37, 19, 40, 41, 31]
</code></pre>

<p>max element is 55 (two elements on position 9 and 12)</p>

<p>I need to find on which position(s) the maximum value is situated. Please, help.</p>
","<pre><code>&gt;&gt;&gt; m = max(a)
&gt;&gt;&gt; [i for i, j in enumerate(a) if j == m]
[9, 12]
</code></pre>
","3989032"
"Initialize a string variable in Python: """" or None?","161628","","<p>Suppose I have a class with a <strong>string</strong> instance attribute.
Should I initialize this attribute with <strong>""""</strong> value or <strong>None</strong>? Is either okay?</p>

<pre><code>def __init__(self, mystr="""")
   self.mystr = mystr
</code></pre>

<p>or</p>

<pre><code>def __init__(self, mystr=None)
   self.mystr = mystr
</code></pre>

<p><strong>Edit</strong>: What I thought is that if I use <strong>""""</strong> as an initial value, I ""<em>declare</em>"" a variable to be of <strong>string</strong> type. And then I won't be able to assign any other type to it later. Am I right?</p>

<p><strong>Edit</strong>: I think it's important to note here, that my suggestion was WRONG. And there is no problem to assign another type to a variable. I liked a comment of <strong>S.Lott</strong>: ""<em>Since nothing in Python is ""declared"", you're not thinking about this the right way.</em>""</p>
","<p>If not having a value has a meaning in your program (e.g. an optional value), you should use None. That's its purpose anyway. </p>

<p>If the value must be provided by the caller of __init__, I would recommend not to initialize it.</p>

<p>If """" makes sense as a default value, use it.</p>

<p>In Python the type is deduced from the usage. Hence, you can change the type by just assigning a value of another type.</p>

<pre><code>&gt;&gt;&gt; x = None
&gt;&gt;&gt; print type(x)
&lt;type 'NoneType'&gt;
&gt;&gt;&gt; x = ""text""
&gt;&gt;&gt; print type(x)
&lt;type 'str'&gt;
&gt;&gt;&gt; x = 42
&gt;&gt;&gt; print type(x)
&lt;type 'int'&gt;
</code></pre>
","1398178"
"How can I read the RGB value of a given pixel in Python?","161481","","<p>If I open an image with <code>open(""image.jpg"")</code>, how can I get the RGB values of a pixel, if I have the coordinates of the pixel?</p>

<p>Then how can I do the reverse of this? Starting with a blank graphic, 'write' a pixel with a certain RGB value?</p>

<p>It would be so much better if I didn't have to download any additional libraries.</p>
","<p>It's probably best to use the <a href=""http://www.pythonware.com/products/pil/"" rel=""noreferrer"">Python Image Library</a> to do this which I'm afraid is a separate download.</p>

<p>The easiest way to do what you want is via the <a href=""http://effbot.org/imagingbook/image.htm"" rel=""noreferrer"">load() method on the Image object</a> which returns a pixel access object which you can manipulate like an array:</p>

<pre><code>from PIL import Image
im = Image.open(""dead_parrot.jpg"") #Can be many different formats.
pix = im.load()
print im.size #Get the width and hight of the image for iterating over
print pix[x,y] #Get the RGBA Value of the a pixel of an image
pix[x,y] = value # Set the RGBA Value of the image (tuple)
im.save(""alive_parrot.png"") # Save the modified pixels as png
</code></pre>

<p>Alternatively, look at <a href=""http://effbot.org/imagingbook/imagedraw.htm"" rel=""noreferrer"">ImageDraw</a> which gives a much richer API for creating images.</p>
","138260"
"Strip HTML from strings in Python","161326","","<pre><code>from mechanize import Browser
br = Browser()
br.open('http://somewebpage')
html = br.response().readlines()
for line in html:
  print line
</code></pre>

<p>When printing a line in an HTML file, I'm trying to find a way to only show the contents of each HTML element and not the formatting itself. If it finds <code>'&lt;a href=""whatever.com""&gt;some text&lt;/a&gt;'</code>, it will only print 'some text', <code>'&lt;b&gt;hello&lt;/b&gt;'</code> prints 'hello', etc. How would one go about doing this?</p>
","<p>I always used this function to strip HTML tags, as it requires only the Python stdlib:</p>

<p>On Python 2</p>

<pre><code>from HTMLParser import HTMLParser

class MLStripper(HTMLParser):
    def __init__(self):
        self.reset()
        self.fed = []
    def handle_data(self, d):
        self.fed.append(d)
    def get_data(self):
        return ''.join(self.fed)

def strip_tags(html):
    s = MLStripper()
    s.feed(html)
    return s.get_data()
</code></pre>

<p>For Python 3</p>

<pre><code>from html.parser import HTMLParser

class MLStripper(HTMLParser):
    def __init__(self):
        self.reset()
        self.strict = False
        self.convert_charrefs= True
        self.fed = []
    def handle_data(self, d):
        self.fed.append(d)
    def get_data(self):
        return ''.join(self.fed)

def strip_tags(html):
    s = MLStripper()
    s.feed(html)
    return s.get_data()
</code></pre>

<p><strong>Note</strong>: this works only for 3.1. For 3.2 or above, you need to call the parent class's <strong>init</strong> function. See <a href=""https://stackoverflow.com/q/11061058/3416774"">Using HTMLParser in Python 3.2</a></p>
","925630"
"ImportError: No module named matplotlib.pyplot","161276","","<p>I am currently practicing matplotlib. This is the first example I practice.</p>

<pre><code>#!/usr/bin/python

import matplotlib.pyplot as plt

radius = [1.0, 2.0, 3.0, 4.0]
area = [3.14159, 12.56636, 28.27431, 50.26544]

plt.plot(radius, area)
plt.show()
</code></pre>

<p>When I run this script with <code>python ./plot_test.py</code>, it shows plot correctly. However, I run it by itself, <code>./plot_test.py</code>, it throws the followings:</p>

<pre><code>Traceback (most recent call last):
File ""./plot_test.py"", line 3, in &lt;module&gt;
  import matplotlib.pyplot as plt
ImportError: No module named matplotlib.pyplot
</code></pre>

<p>Does python look for matplotlib in different locations?</p>

<p>The environment is:</p>

<pre><code>Mac OS X 10.8.4 64bit
built-in python 2.7
</code></pre>

<p>numpy, scipy, matplotlib is installed with:</p>

<pre><code>sudo port install py27-numpy py27-scipy py27-matplotlib \
py27-ipython +notebook py27-pandas py27-sympy py27-nose
</code></pre>
","<p>You have two pythons installed on your machine, one is the standard python that comes with Mac OSX and the second is the one you installed with ports (this is the one that has <code>matplotlib</code> installed in its library, the one that comes with macosx does not).</p>

<pre><code>/usr/bin/python
</code></pre>

<p>Is the standard mac python and since it doesn't have <code>matplotlib</code> you should always start your script with the one installed with ports.</p>

<p>If <code>python your_script.py</code> works then change the <code>#!</code> to:</p>

<pre><code>#!/usr/bin/env python
</code></pre>

<p>Or put the full path to the python interpreter that has the <code>matplotlib</code> installed in its library.</p>
","18176743"
"running an outside program (executable) in python?","161152","","<p>I just started working on python and I have been trying to run an outside executable form python.
I have an executable for a program written in Fortran. Lets say the name for the executable is flow.exe. And my executable is located in C:\Documents and Settings\flow_model
I tried both os.system and popen commands but so far couldnt make it work.
The following code seems like opens the command window but wouldnt execute the model.</p>

<pre><code># Import system modules
import sys, string, os, arcgisscripting
os.system(""C:/Documents and Settings/flow_model/flow.exe"")
</code></pre>

<p>Any suggestions out there? Any help would be greatly appreciated.</p>
","<p>Those whitespaces can really be a bother:-(.  Try <code>os.chdir('C:/Documents\ and\ Settings/')</code> followed by relative paths for <code>os.system</code>, <code>subprocess</code> methods, or whatever...</p>

<p>If best-effort attempts to bypass the whitespaces-in-path hurdle keep failing, then my next best suggestion is to <strong>avoid</strong> having blanks in your crucial paths.  Couldn't you make a blanks-less directory, copy the crucial <code>.exe</code> file there, and try <strong>that</strong>?  Are those havoc-wrecking space absolutely essential to your well-being...?</p>
","1811745"
"Most pythonic way to delete a file which may not exist","160809","","<p>I want to delete the file <code>filename</code> if it exists.  Is it proper to say</p>

<pre><code>if os.path.exists(filename):
    os.remove(filename)
</code></pre>

<p>Is there a better way? A one-line way? </p>
","<p>A more pythonic way would be:</p>

<pre><code>try:
    os.remove(filename)
except OSError:
    pass
</code></pre>

<p>Although this takes even more lines and looks very ugly, it avoids the unnecessary call to <code>os.path.exists()</code> and follows the python convention of overusing exceptions.</p>

<p>It may be worthwhile to write a function to do this for you:</p>

<pre><code>import os, errno

def silentremove(filename):
    try:
        os.remove(filename)
    except OSError as e: # this would be ""except OSError, e:"" before Python 2.6
        if e.errno != errno.ENOENT: # errno.ENOENT = no such file or directory
            raise # re-raise exception if a different error occurred
</code></pre>
","10840586"
"How to set Python's default version to 3.3 on OS X?","160731","","<p>I'm running Mountain Lion and the basic default Python version is 2.7. I downloaded Python 3.3 and want to set it as default.</p>

<p>Currently:</p>

<pre><code>$ python
    version 2.7.5
$ python3.3
    version 3.3
</code></pre>

<p>How do I set it so that every time I run <code>$ python</code> it opens 3.3?</p>
","<p>Changing the default python version system wide would break some applications that depend on python2. </p>

<p>You can alias the commands in most shells, Mac OS X uses bash by default, if you also do put this into your <code>~/.bash_profile</code>:</p>

<pre><code>alias python='python3'
</code></pre>

<p><code>python</code> command now refers to <code>python3</code>. If you want the original python (that refers to <em>python2</em>), you can escape the alias i.e. doing <code>\python</code> will launch <em>python2</em> leaving the alias untouched)</p>

<p>If you launch interpreters more often <em>(I do)</em>, better is to:</p>

<pre><code>alias 2='python2'
alias 3='python3'
</code></pre>

<hr>

<p>Tip: Instead of doing:</p>

<pre><code>#!/usr/bin/env python
</code></pre>

<p>use:</p>

<pre><code>#!/usr/bin/env python3
</code></pre>

<p>system will use python3 for running python <strong><em>executables</em></strong>.</p>
","18425592"
"How can I save an image with PIL?","160700","","<p>I have just done some image processing using the Python image library (PIL) using a post I found earlier to perform fourier transforms of images and I can't get the save function to work. The whole code works fine but it just wont save the resulting image:</p>

<pre><code>from PIL import Image
import numpy as np

i = Image.open(""C:/Users/User/Desktop/mesh.bmp"")
i = i.convert(""L"")
a = np.asarray(i)
b = np.abs(np.fft.rfft2(a))
j = Image.fromarray(b)
j.save(""C:/Users/User/Desktop/mesh_trans"","".bmp"")
</code></pre>

<p>The error I get is the following:</p>

<pre><code>save_handler = SAVE[string.upper(format)] # unknown format
    KeyError: '.BMP'
</code></pre>

<p>How can I save an image with Pythons PIL?</p>
","<p>The error regarding the file extension has been handled, you either use <code>bmp</code> (without the dot), or pass the output name with the extension already. Now to handle the error you need to properly modify your data in frequency domain to be saved as an integer image, <code>PIL</code> is telling you that it doesn't accept float data to save as bmp.</p>

<p>Here is a suggestion (with other minor modifications, like using <code>fftshift</code> and <code>numpy.array</code> instead of <code>numpy.asarray</code>) for doing the conversion for proper visualization:</p>

<pre><code>import sys
import numpy
from PIL import Image

img = Image.open(sys.argv[1]).convert('L')

im = numpy.array(img)
fft_mag = numpy.abs(numpy.fft.fftshift(numpy.fft.fft2(im)))

visual = numpy.log(fft_mag)
visual = (visual - visual.min()) / (visual.max() - visual.min())

result = Image.fromarray((visual * 255).astype(numpy.uint8))
result.save('out.bmp')
</code></pre>
","14472089"
"Making Python loggers output all messages to stdout in addition to log","160480","","<p>Is there a way to make Python logging using the <code>logging</code> module automatically output things to stdout <em>in addition</em> to the log file where they are supposed to go? For example, I'd like all calls to <code>logger.warning</code>, <code>logger.critical</code>, <code>logger.error</code> to go to their intended places but in addition always be copied to <code>stdout</code>. This is to avoid duplicating messages like:</p>

<pre><code>mylogger.critical(""something failed"")
print ""something failed""
</code></pre>
","<p>All logging output is handled by the handlers; just add a <a href=""http://docs.python.org/2/library/logging.handlers.html#streamhandler""><code>logging.StreamHandler()</code></a> to the root logger.</p>

<p>Here's an example configuring a stream handler (using <code>stdout</code> instead of the default <code>stderr</code>) and adding it to the root logger:</p>

<pre><code>import logging
import sys

root = logging.getLogger()
root.setLevel(logging.DEBUG)

ch = logging.StreamHandler(sys.stdout)
ch.setLevel(logging.DEBUG)
formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
ch.setFormatter(formatter)
root.addHandler(ch)
</code></pre>
","14058475"
"Find string between two substrings","160421","","<p>How do I find a string between two substrings (<code>'123STRINGabc' -&gt; 'STRING'</code>)?</p>

<p>My current method is like this:</p>

<pre><code>&gt;&gt;&gt; start = 'asdf=5;'
&gt;&gt;&gt; end = '123jasd'
&gt;&gt;&gt; s = 'asdf=5;iwantthis123jasd'
&gt;&gt;&gt; print((s.split(start))[1].split(end)[0])
iwantthis
</code></pre>

<p>However, this seems very inefficient and un-pythonic. What is a better way to do something like this?</p>

<p>Forgot to mention:
The string might not start and end with <code>start</code> and <code>end</code>. They may have more characters before and after.</p>
","<pre><code>s = ""123123STRINGabcabc""

def find_between( s, first, last ):
    try:
        start = s.index( first ) + len( first )
        end = s.index( last, start )
        return s[start:end]
    except ValueError:
        return """"

def find_between_r( s, first, last ):
    try:
        start = s.rindex( first ) + len( first )
        end = s.rindex( last, start )
        return s[start:end]
    except ValueError:
        return """"


print find_between( s, ""123"", ""abc"" )
print find_between_r( s, ""123"", ""abc"" )
</code></pre>

<p>gives:</p>

<pre><code>123STRING
STRINGabc
</code></pre>

<p>I thought it should be noted - depending on what behavior you need, you can mix <code>index</code> and <code>rindex</code> calls or go with one of the above versions (it's equivalent of regex <code>(.*)</code> and <code>(.*?)</code> groups).</p>
","3368991"
"Creating a dictionary from a csv file?","160274","","<p>I am trying to create a dictionary from a csv file. The first column of the csv file contains unique keys and the second column contains values. Each row of the csv file represents a unique key, value pair within the dictionary. I tried to use the <a href=""https://docs.python.org/3/library/csv.html#csv.DictReader""><code>csv.DictReader</code></a> and <a href=""https://docs.python.org/3/library/csv.html#csv.DictWriter""><code>csv.DictWriter</code></a> classes, but I could only figure out how to generate a new dictionary for each row. I want one dictionary. Here is the code I am trying to use:</p>

<pre><code>import csv

with open('coors.csv', mode='r') as infile:
    reader = csv.reader(infile)
    with open('coors_new.csv', mode='w') as outfile:
    writer = csv.writer(outfile)
    for rows in reader:
        k = rows[0]
        v = rows[1]
        mydict = {k:v for k, v in rows}
    print(mydict)
</code></pre>

<p>When I run the above code I get a <code>ValueError: too many values to unpack (expected 2)</code>. How do I create one dictionary from a csv file? Thanks.</p>
","<p>I believe the syntax you were looking for is as follows:</p>

<pre><code>with open('coors.csv', mode='r') as infile:
    reader = csv.reader(infile)
    with open('coors_new.csv', mode='w') as outfile:
        writer = csv.writer(outfile)
        mydict = {rows[0]:rows[1] for rows in reader}
</code></pre>

<p>Alternately, for python &lt;= 2.7.1, you want:</p>

<pre><code>mydict = dict((rows[0],rows[1]) for rows in reader)
</code></pre>
","6740968"
"How to loop backwards in python?","160256","","<p>I'm talking about doing something like:</p>

<pre><code>for(i=n; i&gt;=1; --i) {
   //do something with i
}
</code></pre>

<p>I can think of some ways to do so in python (creating a list of <code>range(1,n+1)</code> and reverse it, using <code>while</code> and <code>--i</code>, ...) but I wondered if there's a more elegant way to do it. Is there?</p>

<p>EDIT:
Some suggested I use xrange() instead of range() since range returns a list while xrange returns an iterator. But in Python 3 (which I happen to use) range() returns an iterator and xrange doesn't exist.</p>
","<p><code>range()</code> and <code>xrange()</code> take a third parameter that specifies a step. So you can do the following.</p>

<pre><code>range(10, 0, -1)
</code></pre>

<p>Which gives</p>

<pre><code>[10, 9, 8, 7, 6, 5, 4, 3, 2, 1] 
</code></pre>

<p>But for iteration, you should really be using <code>xrange</code> instead. So,</p>

<pre><code>xrange(10, 0, -1)
</code></pre>

<blockquote>
  <p>Note for Python 3 users: There are no separate range and xrange functions in Python 3, the former was replaced by the latter.</p>
</blockquote>
","3476768"
"Convert a timedelta to days, hours and minutes","160207","","<p>I've got a timedelta. I want the days, hours and minutes from that - either as a tuple or a dictionary... I'm not fussed.</p>

<p>I must have done this a dozen times in a dozen languages over the years but Python usually has a simple answer to everything so I thought I'd ask here before busting out some nauseatingly simple (yet verbose) mathematics.</p>

<p>Mr Fooz raises a good point.</p>

<p>I'm dealing with ""listings"" (a bit like ebay listings) where each one has a duration. I'm trying to find the time left by doing <code>when_added + duration - now</code></p>

<p>Am I right in saying that wouldn't account for DST? If not, what's the simplest way to add/subtract an hour?</p>
","<p>If you have a <code>datetime.timedelta</code> value <code>td</code>, <code>td.days</code> already gives you the ""days"" you want. <code>timedelta</code> values keep fraction-of-day as seconds (not directly hours or minutes) so you'll indeed have to perform ""nauseating simple mathematics"", e.g.:</p>

<pre class=""lang-py prettyprint-override""><code>def days_hours_minutes(td):
    return td.days, td.seconds//3600, (td.seconds//60)%60
</code></pre>
","2119512"
"Plotting time in Python with Matplotlib","160091","","<p>I have an array of timestamps in the format (HH:MM:SS.mmmmmm) and another array of floating point numbers, each corresponding to a value in the timestamp array.</p>

<p>Can I plot time on the x axis and the numbers on the y-axis using Matplotlib?</p>

<p>I was trying to, but somehow it was only accepting arrays of floats. How can I get it to plot the time? Do I have to modify the format in any way?</p>
","<p>You must first convert your timestamps to Python <code>datetime</code> objects (use <code>datetime.strptime</code>). Then use <code>date2num</code> to convert the dates to matplotlib format.</p>

<p>Plot the dates and values using <a href=""http://matplotlib.org/api/pyplot_api.html?highlight=plot_date#matplotlib.pyplot.plot_date"" rel=""noreferrer""><code>plot_date</code></a>:</p>

<pre><code>dates = matplotlib.dates.date2num(list_of_datetimes)
matplotlib.pyplot.plot_date(dates, values)
</code></pre>
","1574146"
"Python AttributeError: Object has no attribute","160024","","<p>I have a class MyThread. In that I have a method sample. I am trying to run it from withing the same object context. Please have a look at the code:</p>

<pre><code>class myThread (threading.Thread):
    def __init__(self, threadID, name, counter, redisOpsObj):
        threading.Thread.__init__(self)
        self.threadID = threadID
        self.name = name
        self.counter = counter
        self.redisOpsObj = redisOpsObj

    def stop(self):
        self.kill_received = True

    def sample(self):
        print ""Hello""

    def run(self):
        time.sleep(0.1)
        print ""\n Starting "" + self.name
        self.sample()
</code></pre>

<p>Looks very simple ain't it. But when I run it I get this error</p>

<p><code>AttributeError: 'myThread' object has no attribute 'sample'</code> Now I have that method, right there. So what's wrong? Please help</p>

<p>Edit: This is the stacktrace</p>

<pre><code>Starting Thread-0

Starting Thread-1
Exception in thread Thread-0:
Traceback (most recent call last):
File ""/usr/lib/python2.6/threading.py"", line 525, in __bootstrap_inner
self.run()
File ""./redisQueueProcessor.py"", line 51, in run
self.sample()
AttributeError: 'myThread' object has no attribute 'sample'

Exception in thread Thread-1:
Traceback (most recent call last):
File ""/usr/lib/python2.6/threading.py"", line 525, in __bootstrap_inner
self.run()
File ""./redisQueueProcessor.py"", line 51, in run
self.sample()
AttributeError: 'myThread' object has no attribute 'sample'
</code></pre>

<p>I am calling it like this</p>

<pre><code>arThreads = []
maxThreads = 2;

for i in range( maxThreads ):
    redisOpsObj = redisOps()
    arThreads.append( myThread(i, ""Thread-""+str(i), 10, redisOpsObj) )
</code></pre>

<p>Sorry I can't post redisOps class code. But I can assure you that it works just fine</p>
","<p>Your indentation is goofed, and you've mixed tabs and spaces. Run the script with <code>python -tt</code> to verify.</p>
","11686212"
"correct way to define class variables in Python","159869","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/1537202/variables-inside-and-outside-of-a-class-init-function"">Variables inside and outside of a class __init__() function</a>  </p>
</blockquote>



<p>I noticed that in Python, people initialize their class attributes in two different ways.</p>

<p>The first way is like this:</p>

<pre><code>class MyClass:
  __element1 = 123
  __element2 = ""this is Africa""

  def __init__(self):
    #pass or something else
</code></pre>

<p>The other style looks like:</p>

<pre><code>class MyClass:
  def __init__(self):
    self.__element1 = 123
    self.__element2 = ""this is Africa""
</code></pre>

<p>Which is the correct way to initialize class attributes?</p>
","<p>Both ways aren't correct or incorrect, they are just two different kind of class elements:</p>

<ul>
<li>Elements outside the <code>__init__</code> method are static elements, it means, they belong to the class.</li>
<li>Elements inside the <code>__init__</code> method are elements of the object (<code>self</code>), they don't belong to the class.</li>
</ul>

<p>You'll see it more clearly with some code:</p>

<pre><code>class MyClass:
    static_elem = 123

    def __init__(self):
        self.object_elem = 456

c1 = MyClass()
c2 = MyClass()

# Initial values of both elements
&gt;&gt;&gt; print c1.static_elem, c1.object_elem 
123 456
&gt;&gt;&gt; print c2.static_elem, c2.object_elem
123 456

# Nothing new so far ...

# Let's try changing the static element
MyClass.static_elem = 999

&gt;&gt;&gt; print c1.static_elem, c1.object_elem
999 456
&gt;&gt;&gt; print c2.static_elem, c2.object_elem
999 456

# Now, let's try changing the object element
c1.object_elem = 888

&gt;&gt;&gt; print c1.static_elem, c1.object_elem
999 888
&gt;&gt;&gt; print c2.static_elem, c2.object_elem
999 456
</code></pre>

<p>As you can see, when we changed the class element, it changed for both objects. But, when we changed the object element, the other object remained unchanged.</p>
","9056994"
"Python idiom to return first item or None","159824","","<p>I'm sure there's a simpler way of doing this that's just not occurring to me.</p>

<p>I'm calling a bunch of methods that return a list.  The list may be empty.  If the list is non-empty, I want to return the first item; otherwise, I want to return None.  This code works:</p>

<pre><code>my_list = get_list()
if len(my_list) &gt; 0: return my_list[0]
return None
</code></pre>

<p>It seems to me that there should be a simple one-line idiom for doing this, but for the life of me I can't think of it.  Is there?</p>

<p><strong>Edit:</strong></p>

<p>The reason that I'm looking for a one-line expression here is not that I like incredibly terse code, but because I'm having to write a lot of code like this:</p>

<pre><code>x = get_first_list()
if x:
    # do something with x[0]
    # inevitably forget the [0] part, and have a bug to fix
y = get_second_list()
if y:
    # do something with y[0]
    # inevitably forget the [0] part AGAIN, and have another bug to fix
</code></pre>

<p>What I'd like to be doing can certainly be accomplished with a function (and probably will be):</p>

<pre><code>def first_item(list_or_none):
    if list_or_none: return list_or_none[0]

x = first_item(get_first_list())
if x:
    # do something with x
y = first_item(get_second_list())
if y:
    # do something with y
</code></pre>

<p>I posted the question because I'm frequently surprised by what simple expressions in Python can do, and I thought that writing a function was a silly thing to do if there was a simple expression could do the trick.  But seeing these answers, it seems like a function <em>is</em> the simple solution.</p>
","<h2>Python 2.6+</h2>

<pre><code>next(iter(your_list or []), None)
</code></pre>

<h2>Python 2.4</h2>

<pre><code>def get_first(iterable, default=None):
    if iterable:
        for item in iterable:
            return item
    return default
</code></pre>

<p>Example:</p>

<pre><code>x = get_first(get_first_list())
if x:
    ...
y = get_first(get_second_list())
if y:
    ...
</code></pre>

<p>Another option is to inline the above function:</p>

<pre><code>for x in get_first_list() or []:
    # process x
    break # process at most one item
for y in get_second_list() or []:
    # process y
    break
</code></pre>

<p>To avoid <code>break</code> you could write:</p>

<pre><code>for x in yield_first(get_first_list()):
    x # process x
for y in yield_first(get_second_list()):
    y # process y
</code></pre>

<p>Where:</p>

<pre><code>def yield_first(iterable):
    for item in iterable or []:
        yield item
        return
</code></pre>
","365934"
"Python Graph Library","159724","","<p>I'm writing a python application that will make heavy use of a graph data structure. Nothing horribly complex, but I'm thinking some sort of graph/graph-algorithms library would help me out. I've googled around, but I don't find anything that particularly leaps out at me.</p>

<p>Anyone have any good recommendations?</p>
","<p>There are two excellent choices:</p>

<p><a href=""http://networkx.github.io/"" rel=""noreferrer"">NetworkX</a></p>

<p>and </p>

<p><a href=""http://igraph.org/"" rel=""noreferrer"">igraph</a></p>

<p>I like NetworkX, but I read good things about igraph as well.  I routinely use NetworkX with graphs with 1 million nodes with no problem (it's about double the overhead of a dict of size V + E)</p>

<p>If you want a feature comparison, see this from the Networkx-discuss list</p>

<p><a href=""http://groups.google.com/group/networkx-discuss/t/7597ca97abbb3f90?hl=en"" rel=""noreferrer"">Feature comparison thread</a></p>
","606858"
"The equivalent of a GOTO in python","159659","","<p>I am self teaching myself python 2.7. I  have some experience in using BATCH, which has a GOTO statement.  How do I do that in python? For example, suppose I want to jump from line 5 to line 18.</p>

<p>I realize there have been previous questions regarding this topic, but I have not found them sufficiently informative or, are too high level in python for my current understanding.</p>
","<p><code>Goto</code>s are universally reviled in computer science and programming as they lead to very unstructured code.</p>

<p>Python (like almost every programming language today) supports <a href=""http://en.wikipedia.org/wiki/Structured_programming"">structured programming</a> which controls flow using if/then/else, loop and subroutines.</p>

<p>The key to thinking in a structured way is to understand how and why you are branching on code.</p>

<p>For example, lets pretend Python had a <code>goto</code> and corresponding <code>label</code> statement <em>shudder</em>. Look at the following code. In it if a number is greater than or equal to 0 we print if it </p>

<pre><code>number = input()
if number &lt; 0: goto negative
if number % 2 == 0:
   print ""even""
else:
   print ""odd""
goto end
label: negative
print ""negative""
label: end
print ""all done""
</code></pre>

<p>If we want to know when a piece of code is executed, we need to carefully traceback in the program, and examine how a label was arrived at - which is something that can't really be done.</p>

<p>For example, we can rewrite the above as:</p>

<pre><code>number = input()
goto check

label: negative
print ""negative""
goto end

label: check
if number &lt; 0: goto negative
if number % 2 == 0:
   print ""even""
else:
   print ""odd""
goto end

label: end
print ""all done""
</code></pre>

<p>Here, there are two possible ways to arrive at the ""end"", and we can't know which one was chosen. As programs get large this kind of problem gets worse and results in <a href=""http://en.wikipedia.org/wiki/Spaghetti_code"">spaghetti code</a></p>

<p>In comparison, below is how you <em>would</em> write this program in Python:</p>

<pre><code>number = input()
if number &gt;= 0:
   if number % 2 == 0:
       print ""even""
   else:
       print ""odd""
else:
   print ""negative""
print ""all done""
</code></pre>

<p>I can look at a particular line of code, and know under what conditions it is met by tracing back the tree of <code>if/then/else</code> blocks it is in. For example, I know that the line <code>print ""odd""</code> will be run when a <code>((number &gt;= 0) == True) and ((number % 2 == 0) == False)</code>.</p>
","18863414"
"get list from pandas dataframe column","159653","","<p>I have an excel document which looks like this..</p>

<pre><code>cluster load_date   budget  actual  fixed_price
A   1/1/2014    1000    4000    Y
A   2/1/2014    12000   10000   Y
A   3/1/2014    36000   2000    Y
B   4/1/2014    15000   10000   N
B   4/1/2014    12000   11500   N
B   4/1/2014    90000   11000   N
C   7/1/2014    22000   18000   N
C   8/1/2014    30000   28960   N
C   9/1/2014    53000   51200   N
</code></pre>

<p>I want to be able to return the contents of column 1 - cluster as a list, so I can run a for loop over it, and create an excel worksheet for every cluster.</p>

<p>Is it also possible, to return the contents of a whole row to a list? e.g.</p>

<pre><code>list = [], list[column1] or list[df.ix(row1)]
</code></pre>
","<p>Pandas DataFrame columns are Pandas Series when you pull them out, which you can then call <code>.tolist()</code> on to turn them into a Python list</p>

<pre><code>from pandas import *

d = {'one' : Series([1., 2., 3.], index=['a', 'b', 'c']),
    'two' : Series([1., 2., 3., 4.], index=['a', 'b', 'c', 'd'])}

df = DataFrame(d)

#print df

print ""DF"", type(df['one']), ""\n"", df['one']

dfList = df['one'].tolist()

print ""DF list"", dfList, type(dfList)
</code></pre>

<p><a href=""https://stackoverflow.com/questions/14822680/convert-python-dataframe-to-list"">This question</a> might be helpful. And the <a href=""http://pandas.pydata.org/pandas-docs/stable/dsintro.html"" rel=""noreferrer"">Pandas docs</a> are actually quite good once you get your head around their style. </p>

<p>So in your case you could:</p>

<p><code>my_list = df[""cluster""].tolist()</code></p>

<p>and then go from there.</p>
","22341390"
"How to strip all whitespace from string","159590","","<p>How do I strip all the spaces in a python string? For example, I want a string like <code>strip my spaces</code> to be turned into <code>stripmyspaces</code>, but I cannot seem to accomplish that with <code>strip()</code>:</p>

<pre><code>&gt;&gt;&gt; 'strip my spaces'.strip()
'strip my spaces'
</code></pre>
","<p>Taking advantage of str.split's behavior with no sep parameter:</p>

<pre><code>&gt;&gt;&gt; s = "" \t foo \n bar ""
&gt;&gt;&gt; """".join(s.split())
'foobar'
</code></pre>

<p>If you just want to remove spaces instead of all whitespace:</p>

<pre><code>&gt;&gt;&gt; s.replace("" "", """")
'\tfoo\nbar'
</code></pre>

<h2>Premature optimization</h2>

<p>Even though efficiency isn't the primary goal—writing clear code is—here are some initial timings:</p>

<pre><code>$ python -m timeit '"""".join("" \t foo \n bar "".split())'
1000000 loops, best of 3: 1.38 usec per loop
$ python -m timeit -s 'import re' 're.sub(r""\s+"", """", "" \t foo \n bar "")'
100000 loops, best of 3: 15.6 usec per loop
</code></pre>

<p>Note the regex is cached, so it's not as slow as you'd imagine.  Compiling it beforehand helps some, but would only matter in practice if you call this <em>many</em> times:</p>

<pre><code>$ python -m timeit -s 'import re; e = re.compile(r""\s+"")' 'e.sub("""", "" \t foo \n bar "")'
100000 loops, best of 3: 7.76 usec per loop
</code></pre>

<p>Even though re.sub is 11.3x slower, remember your bottlenecks are assuredly elsewhere.  Most programs would not notice the difference between any of these 3 choices.</p>
","3739939"
"Simple Digit Recognition OCR in OpenCV-Python","159576","","<p>I am trying to implement a ""Digit Recognition OCR"" in OpenCV-Python (cv2). It is just for learning purposes. I would like to learn both KNearest and SVM features in OpenCV. </p>

<p>I have 100 samples (i.e. images) of each digit. I would like to train with them.</p>

<p>There is a sample <code>letter_recog.py</code> that comes with OpenCV sample. But i still couldn't figure out on how to use it. I don't understand what are the samples, responses etc. Also, it loads a txt file at first, which i didn't understand first.</p>

<p>Later on searching a little bit, i could find a letter_recognition.data in cpp samples. I used it and made a code for cv2.KNearest in the model of letter_recog.py (just for testing):</p>

<pre><code>import numpy as np
import cv2

fn = 'letter-recognition.data'
a = np.loadtxt(fn, np.float32, delimiter=',', converters={ 0 : lambda ch : ord(ch)-ord('A') })
samples, responses = a[:,1:], a[:,0]

model = cv2.KNearest()
retval = model.train(samples,responses)
retval, results, neigh_resp, dists = model.find_nearest(samples, k = 10)
print results.ravel()
</code></pre>

<p>It gave me an array of size 20000, i don't understand what it is.</p>

<p><strong>Questions:</strong></p>

<p>1) What is letter_recognition.data file ? How to build that file from my own data set?</p>

<p>2) What does <code>results.reval()</code> denote? </p>

<p>3) How we can write a simple digit recognition tool using letter_recognition.data file (either KNearest or SVM)?</p>
","<p>Well, I decided to workout myself on my question to solve above problem. What I wanted is to implement a simpl OCR using KNearest or SVM features in OpenCV. And below is what I did and how. ( it is just for learning how to use KNearest for simple OCR purposes).</p>

<p><strong>1)</strong> My first question was about letter_recognition.data file that comes with OpenCV samples. I wanted to know what is inside that file.</p>

<p>It contains a letter, along with 16 features of that letter.</p>

<p>And <a href=""https://stackoverflow.com/questions/1270798/how-to-create-data-fom-image-like-letter-image-recognition-dataset-from-uci""><code>this SOF</code></a> helped me to find it. These 16 features are explained in the paper<a href=""http://cns-classes.bu.edu/cn550/Readings/frey-slate-91.pdf"" rel=""noreferrer""><strong><code>Letter Recognition Using Holland-Style Adaptive Classifiers</code></strong></a>.
( Although I didn't understand some of the features at end)</p>

<p><strong>2)</strong> Since I knew, without understanding all those features, it is difficult to do that method. I tried some other papers, but all were a little difficult for a beginner.</p>

<p><code>So I just decided to take all the pixel values as my features.</code> (I was not worried about accuracy or performance, I just wanted it to work, at least with the least accuracy)</p>

<p>I took below image for my training data:</p>

<p><img src=""https://i.stack.imgur.com/IwQY6.png"" alt=""enter image description here""></p>

<p>( I know the amount of training data is less. But, since all letters are of same font and size, I decided to try on this).</p>

<p><strong>To prepare the data for training, I made a small code in OpenCV. It does following things:</strong></p>

<p>A) It loads the image.</p>

<p>B) Selects the digits ( obviously by contour finding and applying constraints on area and height of letters to avoid false detections).</p>

<p>C) Draws the bounding rectangle around one letter and wait for <code>key press manually</code>. This time we <strong>press the digit key ourselves</strong> corresponding to the letter in box.</p>

<p>D) Once corresponding digit key is pressed, it resizes this box to 10x10 and saves 100 pixel values in an array (here, samples) and corresponding manually entered digit in another array(here, responses).</p>

<p>E) Then save both the arrays in separate txt files.</p>

<p>At the end of manual classification of digits, all the digits in the train data( train.png) are labeled manually by ourselves, image will look like below:</p>

<p><img src=""https://i.stack.imgur.com/jyAhT.png"" alt=""enter image description here""></p>

<p>Below is the code I used for above purpose ( of course, not so clean):</p>

<pre><code>import sys

import numpy as np
import cv2

im = cv2.imread('pitrain.png')
im3 = im.copy()

gray = cv2.cvtColor(im,cv2.COLOR_BGR2GRAY)
blur = cv2.GaussianBlur(gray,(5,5),0)
thresh = cv2.adaptiveThreshold(blur,255,1,1,11,2)

#################      Now finding Contours         ###################

contours,hierarchy = cv2.findContours(thresh,cv2.RETR_LIST,cv2.CHAIN_APPROX_SIMPLE)

samples =  np.empty((0,100))
responses = []
keys = [i for i in range(48,58)]

for cnt in contours:
    if cv2.contourArea(cnt)&gt;50:
        [x,y,w,h] = cv2.boundingRect(cnt)

        if  h&gt;28:
            cv2.rectangle(im,(x,y),(x+w,y+h),(0,0,255),2)
            roi = thresh[y:y+h,x:x+w]
            roismall = cv2.resize(roi,(10,10))
            cv2.imshow('norm',im)
            key = cv2.waitKey(0)

            if key == 27:  # (escape to quit)
                sys.exit()
            elif key in keys:
                responses.append(int(chr(key)))
                sample = roismall.reshape((1,100))
                samples = np.append(samples,sample,0)

responses = np.array(responses,np.float32)
responses = responses.reshape((responses.size,1))
print ""training complete""

np.savetxt('generalsamples.data',samples)
np.savetxt('generalresponses.data',responses)
</code></pre>

<hr>

<p><strong>Now we enter in to training and testing part.</strong></p>

<p>For testing part I used below image, which has same type of letters I used to train.</p>

<p><img src=""https://i.stack.imgur.com/dPaE8.png"" alt=""enter image description here""></p>

<p><strong>For training we do as follows</strong>:</p>

<p>A) Load the txt files we already saved earlier</p>

<p>B) create a instance of classifier we are using ( here, it is KNearest)</p>

<p>C) Then we use KNearest.train function to train the data</p>

<p><strong>For testing purposes, we do as follows:</strong></p>

<p>A) We load the image used for testing</p>

<p>B) process the image as earlier and extract each digit using contour methods</p>

<p>C) Draw bounding box for it, then resize to 10x10, and store its pixel values in an array as done earlier. </p>

<p>D) Then we use KNearest.find_nearest() function to find the nearest item to the one we gave. ( If lucky, it recognises the correct digit.)</p>

<p>I included last two steps ( training and testing) in single code below:</p>

<pre><code>import cv2
import numpy as np

#######   training part    ############### 
samples = np.loadtxt('generalsamples.data',np.float32)
responses = np.loadtxt('generalresponses.data',np.float32)
responses = responses.reshape((responses.size,1))

model = cv2.KNearest()
model.train(samples,responses)

############################# testing part  #########################

im = cv2.imread('pi.png')
out = np.zeros(im.shape,np.uint8)
gray = cv2.cvtColor(im,cv2.COLOR_BGR2GRAY)
thresh = cv2.adaptiveThreshold(gray,255,1,1,11,2)

contours,hierarchy = cv2.findContours(thresh,cv2.RETR_LIST,cv2.CHAIN_APPROX_SIMPLE)

for cnt in contours:
    if cv2.contourArea(cnt)&gt;50:
        [x,y,w,h] = cv2.boundingRect(cnt)
        if  h&gt;28:
            cv2.rectangle(im,(x,y),(x+w,y+h),(0,255,0),2)
            roi = thresh[y:y+h,x:x+w]
            roismall = cv2.resize(roi,(10,10))
            roismall = roismall.reshape((1,100))
            roismall = np.float32(roismall)
            retval, results, neigh_resp, dists = model.find_nearest(roismall, k = 1)
            string = str(int((results[0][0])))
            cv2.putText(out,string,(x,y+h),0,1,(0,255,0))

cv2.imshow('im',im)
cv2.imshow('out',out)
cv2.waitKey(0)
</code></pre>

<p>And it worked, below is the result I got:</p>

<p><img src=""https://i.stack.imgur.com/xS3gF.png"" alt=""enter image description here""></p>

<hr>

<p>Here it worked with 100% accuracy. I assume this is because all the digits are of same kind and same size.</p>

<p>But any way, this is a good start to go for beginners ( I hope so).</p>
","9620295"
"Django datetime issues (default=datetime.now())","159518","","<p>I have such db model:</p>

<pre><code>from datetime import datetime    

class TermPayment(models.Model):
    # cut out some fields, non relevant to the question
    date = models.DateTimeField(default=datetime.now(), blank=True)
</code></pre>

<p>And when new instance is added:</p>

<pre><code>tp = TermPayment.objects.create(**kwargs)
</code></pre>

<p>I've an issue: all records in database have the same value in date field - the date of the first payment. After server restart - one record have new date and others have the same as the first. It's look like some data cache is used but I can't find where.</p>

<p>database: mysql 5.1.25</p>

<p>django v1.1.1</p>
","<p>it looks like <code>datetime.now()</code> is being evaluated when the model is defined, and not each time you add a record.</p>

<p>Django has a feature to accomplish what you are trying to do already:</p>

<pre><code>date = models.DateTimeField(auto_now_add=True, blank=True)
</code></pre>

<p>or</p>

<pre><code>date = models.DateTimeField(default=datetime.now, blank=True)
</code></pre>

<p>The difference between the second example and what you currently have is the lack of parentheses. By passing <code>datetime.now</code> without the parentheses, you are passing the actual function, which will be called each time a record is added. If you pass it <code>datetime.now()</code>, then you are just evaluating the function and passing it the return value.</p>

<p>More information is available at Django's <a href=""http://docs.djangoproject.com/en/dev/ref/models/fields/#datetimefield"" rel=""noreferrer"">model field reference</a></p>
","2771701"
"Using Python's list index() method on a list of tuples or objects?","159387","","<p>Python's list type has an index() method that takes one parameter and returns the index of the first item in the list matching the parameter.  For instance:</p>

<pre><code>&gt;&gt;&gt; some_list = [""apple"", ""pear"", ""banana"", ""grape""]
&gt;&gt;&gt; some_list.index(""pear"")
1
&gt;&gt;&gt; some_list.index(""grape"")
3
</code></pre>

<p>Is there a graceful (idiomatic) way to extend this to lists of complex objects, like tuples?  Ideally, I'd like to be able to do something like this:</p>

<pre><code>&gt;&gt;&gt; tuple_list = [(""pineapple"", 5), (""cherry"", 7), (""kumquat"", 3), (""plum"", 11)]
&gt;&gt;&gt; some_list.getIndexOfTuple(1, 7)
1
&gt;&gt;&gt; some_list.getIndexOfTuple(0, ""kumquat"")
2
</code></pre>

<p>getIndexOfTuple() is just a hypothetical method that accepts a sub-index and a value, and then returns the index of the list item with the given value at that sub-index.  I hope</p>

<p>Is there some way to achieve that general result, using list comprehensions or lambas or something ""in-line"" like that?  I think I could write my own class and method, but I don't want to reinvent the wheel if Python already has a way to do it.</p>
","<p>How about this?</p>

<pre><code>&gt;&gt;&gt; tuple_list = [(""pineapple"", 5), (""cherry"", 7), (""kumquat"", 3), (""plum"", 11)]
&gt;&gt;&gt; [x for x, y in enumerate(tuple_list) if y[1] == 7]
[1]
&gt;&gt;&gt; [x for x, y in enumerate(tuple_list) if y[0] == 'kumquat']
[2]
</code></pre>

<p>As pointed out in the comments, this would get all matches. To just get the first one, you can do:</p>

<pre><code>&gt;&gt;&gt; [y[0] for y in tuple_list].index('kumquat')
2
</code></pre>

<p>There is a good discussion in the comments as to the speed difference between all the solutions posted. I may be a little biased but I would personally stick to a one-liner as the speed we're talking about is pretty insignificant versus creating functions and importing modules for this problem, but if you are planning on doing this to a very large amount of elements you might want to look at the other answers provided, as they are faster than what I provided.</p>
","946906"
"Creating Threads in python","159347","","<p>I have a script and I want one function to run at the same time as the other.</p>

<p>Example code I have looked at:</p>

<pre><code>import threading


def MyThread ( threading.thread ):

  doing something........

def MyThread2 ( threading.thread ):

  doing something........

MyThread().start()
MyThread2().start()
</code></pre>

<p>I am having trouble getting this working. I would prefer to get this going using a threaded function rather than a class.</p>

<p>Thanks for any help.</p>

<p>This is the working script, Thanks for all the help.</p>

<pre><code>class myClass():

    def help(self):

        os.system('./ssh.py')

    def nope(self):
        a = [1,2,3,4,5,6,67,78]
        for i in a:
            print i
            sleep(1)


if __name__ == ""__main__"":
    Yep = myClass()
    thread = Thread(target = Yep.help)
    thread2 = Thread(target = Yep.nope)
    thread.start()
    thread2.start()
    thread.join()
    print 'Finished'
</code></pre>
","<p>You don't need to use a subclass of <code>Thread</code> to make this work - take a look at the simple example I'm posting below to see how:</p>

<pre><code>from threading import Thread
from time import sleep

def threaded_function(arg):
    for i in range(arg):
        print ""running""
        sleep(1)


if __name__ == ""__main__"":
    thread = Thread(target = threaded_function, args = (10, ))
    thread.start()
    thread.join()
    print ""thread finished...exiting""
</code></pre>

<p>Here I show how to use the threading module to create a thread which invokes a normal function as its target.  You can see how I can pass whatever arguments I need to it in the thread constructor.</p>
","2906014"
"Can I force pip to reinstall the current version?","159297","","<p>I've come across situations where a current version of a package seems not to be working and requires reinstallation. But <code>pip install -U</code> won't touch a package that is already up-to-date. I see how to force a reinstallation by first uninstalling (with <code>pip uninstall</code>) and then installing, but is there a way to simply force an ""update"" to a nominally current version in a single step?</p>
","<pre><code>pip install --upgrade --force-reinstall &lt;package&gt;
</code></pre>

<p>When upgrading, reinstall all packages even if they are already up-to-date.</p>

<pre><code>pip install -I &lt;package&gt;
pip install --ignore-installed &lt;package&gt;
</code></pre>

<p>Ignore the installed packages (reinstalling instead).</p>
","19549035"
"How do I clear all variables in the middle of a Python script?","159191","","<p>I am looking for something similar to 'clear' in Matlab: A command/function which removes all variables from the workspace, releasing them from system memory. Is there such a thing in Python?</p>

<p>EDIT: I want to write a script which at some point clears all the variables.</p>
","<p>The following sequence of commands does remove <strong>every</strong> name from the current module:</p>

<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; sys.modules[__name__].__dict__.clear()
</code></pre>

<p>I doubt you actually DO want to do this, because ""every name"" includes all built-ins, so there's not much you can do after such a total wipe-out.  Remember, in Python there is really no such thing as a ""variable"" -- there are <em>objects</em>, of many kinds (including modules, functions, class, numbers, strings, ...), and there are <em>names</em>, bound to objects; what the sequence does is remove every name from a module (the corresponding objects go away if and only if every reference to them has just been removed).</p>

<p>Maybe you want to be more selective, but it's hard to guess exactly what you mean unless you want to be more specific.  But, just to give an example:</p>

<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; this = sys.modules[__name__]
&gt;&gt;&gt; for n in dir():
...   if n[0]!='_': delattr(this, n)
... 
&gt;&gt;&gt;
</code></pre>

<p>This sequence leaves alone names that are private or magical, including the <code>__builtins__</code> special name which houses all built-in names.  So, built-ins still work -- for example:</p>

<pre><code>&gt;&gt;&gt; dir()
['__builtins__', '__doc__', '__name__', '__package__', 'n']
&gt;&gt;&gt; 
</code></pre>

<p>As you see, name <code>n</code> (the control variable in that <code>for</code>) also happens to stick around (as it's re-bound in the <code>for</code> clause every time through), so it might be better to name that control variable <code>_</code>, for example, to clearly show ""it's special"" (plus, in the interactive interpreter, name <code>_</code> is re-bound anyway after every complete expression entered at the prompt, to the value of that expression, so it won't stick around for long;-).</p>

<p>Anyway, once you have determined exactly what it <em>is</em> you want to do, it's not hard to define a function for the purpose and put it in your start-up file (if you want it only in interactive sessions) or site-customize file (if you want it in every script).</p>
","3543866"
"How to copy a file to a remote server in Python using SCP or SSH?","159189","","<p>I have a text file on my local machine that is generated by a daily Python script run in cron. </p>

<p>I would like to add a bit of code to have that file sent securely to my server over SSH.</p>
","<p>If you want the simple approach, this should work.</p>

<p>You'll want to "".close()"" the file first so you know it's flushed to disk from Python.</p>

<pre><code>import os
os.system(""scp FILE USER@SERVER:PATH"")
#e.g. os.system(""scp foo.bar joe@srvr.net:/path/to/foo.bar"")
</code></pre>

<p>You need to generate (on the source machine) and install (on the destination machine) an ssh key beforehand so that the scp automatically gets authenticated with your public ssh key (in other words, so your script doesn't ask for a password).  </p>

<p><a href=""http://www.modwest.com/help/kb20-90.html"" rel=""noreferrer"">ssh-keygen example</a></p>
","68365"
"Python: How to get a value of datetime.today() that is ""timezone aware""?","159185","","<p>I am trying to subtract one date value from the value of <code>datetime.today()</code> to calculate how long ago something was. But it complains:</p>

<pre><code>TypeError: can't subtract offset-naive and offset-aware datetimes
</code></pre>

<p>The value <code>datetime.today()</code> doesn't seem to be ""timezone aware"", while my other date value is. How do I get a value of <code>datetime.today()</code> that is timezone aware? Right now it's giving me the time in local time, which happens to be PST, i.e. UTC-8hrs. Worst case, is there a way I can manually enter a timezone value into the <code>datetime</code> object returned by <code>datetime.today()</code> and set it to UTC-8? Of course, the ideal solution would be for it to automatically know the timezone.</p>
","<p>In the standard library, there is no cross-platform way to create aware timezones without creating your own timezone class.</p>

<p>On Windows, there's <code>win32timezone.utcnow()</code>, but that's part of pywin32. I would rather suggest to use the <a href=""http://pytz.sourceforge.net/"" rel=""noreferrer"">pytz library</a>, which has an up-to-date database of most timezones.</p>

<p>Working with local timezones can be very tricky (read the pytz documentation!), so you may rather want to use UTC throughout your application. You can get the current date/time like so:</p>

<pre><code>import pytz
from datetime import datetime
datetime.utcnow().replace(tzinfo=pytz.utc)
</code></pre>

<p>Mind that <code>datetime.today()</code> and <code>datetime.now()</code> return the <em>local</em> time, not the UTC time, so applying <code>.replace(tzinfo=pytz.utc)</code> to them would not be correct.</p>

<p>Another nice way to do it is:</p>

<pre><code>datetime.now(pytz.utc)
</code></pre>

<p>which is a bit shorter and does the same.</p>

<p><strong>WARNING:</strong></p>

<p>Don't use anything but UTC time to do operations on date and time. You might be tempted to use a different timezone to do some fancy datetime operation, but this is likely going to fail without you noticing:</p>

<p>try:</p>

<pre><code>d = datetime.datetime.now(pytz.timezone('America/Los_Angeles')
&gt;&gt;&gt; datetime.datetime(2017, 9, 14, 22, 18, 51, 892210, 
tzinfo=&lt;DstTzInfo 'America/Los_Angeles' PDT-1 day, 17:00:00 DST&gt;)

# add some days to the date that is in a localized timezone
d = d + datetime.datetime.timedelta(days=90)
&gt;&gt;&gt; datetime.datetime(2017, 12, 13, 22, 18, 51, 892210, 
tzinfo=&lt;DstTzInfo 'America/Los_Angeles' PDT-1 day, 17:00:00 DST&gt;)
</code></pre>

<p>and that is WRONG: it should be:</p>

<pre><code>&gt;&gt;&gt; datetime.datetime(2017, 12, 13, 21, 18, 51, 892210, 
tzinfo=&lt;DstTzInfo 'America/Los_Angeles' PST-1 day, 17:00:00 DST&gt;)
</code></pre>

<p>because of daylight saving change.</p>

<p>If you do this operation in UTC time, and then cast to localized timezone:</p>

<pre><code>d = datetime.datetime.now(pytz.UTC)
&gt;&gt;&gt; datetime.datetime(2017, 9, 15, 5, 34, 28, 716403, tzinfo=&lt;UTC&gt;)
# Add offset in UTC time
d = d + datetime.timedelta(days=90)
&gt;&gt;&gt; datetime.datetime(2017, 12, 14, 5, 34, 28, 716403, tzinfo=&lt;UTC&gt;)
# Cast to local timezone
d.astimezone(pytz.timezone('America/Los_Angeles'))
&gt;&gt;&gt; datetime.datetime(2017, 12, 13, 21, 34, 28, 716403, 
tzinfo=&lt;DstTzInfo 'America/Los_Angeles' PST-1 day, 16:00:00 STD&gt;)
</code></pre>

<p>you get the correct result.</p>
","4530166"
"What is causing ImportError: No module named pkg_resources after upgrade of Python on os X?","159044","","<p>I just updated Python to 2.6.4 on my Mac. 
I installed from the dmg package.</p>

<p>The binary did not seem to correctly set my Python path, so I added <code>'/usr/local/lib/python2.6/site-packages'</code> in <code>.bash_profile</code></p>

<pre><code>&gt;&gt;&gt; pprint.pprint(sys.path)  
['',
'/Users/Bryan/work/django-trunk', 
'/usr/local/lib/python2.6/site-packages',  
'/Library/Frameworks/Python.framework/Versions/2.6/lib/python26.zip',  
'/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6',  
'/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/plat-darwin',  
'/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/plat-mac',  
'/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/plat-mac/lib-scriptpackages',  
'/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/lib-tk',  
'/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/lib-old',  
'/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/lib-dynload',  
'/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages']
</code></pre>

<p>Apparently that is not all the required paths because I can't run iPython.</p>

<pre><code>$ ipython  
Traceback (most recent call last):  
  File ""/usr/local/bin/ipython"", line 5, in &lt;module&gt;  
  from pkg_resources import load_entry_point  
ImportError: No module named `pkg_resources`
</code></pre>

<p>I've done Google searches and I can't really figure out how to install <code>pkg_resources</code> or make sure it's on the path.</p>

<p>What do I need to do to fix this?</p>
","<p>[UPDATE] TL;DR <code>pkg_resources</code> is provided by either <a href=""http://pypi.python.org/pypi/distribute/"" rel=""noreferrer"">Distribute</a> or <a href=""http://pypi.python.org/pypi/setuptools/"" rel=""noreferrer"">setuptools</a>. </p>

<p>[UPDATE 2] As announced at PyCon 2013, the <code>Distribute</code> and <code>setuptools</code> projects have re-merged.  <code>Distribute</code> is now deprecated and you should just use the new current <code>setuptools</code>.   Try this:</p>

<pre><code>curl -O https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py
python ez_setup.py
</code></pre>

<p>Or, better, use a current <a href=""https://pypi.python.org/pypi/pip"" rel=""noreferrer""><code>pip</code></a> as the high level interface and which will use <code>setuptools</code> under the covers.</p>

<p>[Longer answer for OP's specific problem]:</p>

<p>You don't say in your question but I'm assuming you upgraded from the Apple-supplied Python (2.5 on 10.5 or 2.6.1 on 10.6) or that you upgraded from a python.org Python 2.5.  In any of those cases, the important point is that each Python instance has its own library, including its own site-packages library, which is where additional packages are installed. (And none of them use <code>/usr/local/lib</code> by default, by the way.) That means you'll need to install those additional packages you need for your new python 2.6.  The easiest way to do this is to first ensure that the new python2.6 appears first on your search <code>$PATH</code> (that is, typing <code>python2.6</code> invokes it as expected); the python2.6 installer should have modified your <code>.bash_profile</code> to put its framework bin directory at the front of <code>$PATH</code>.  Then install <code>easy_install</code> using <a href=""http://pypi.python.org/pypi/setuptools/"" rel=""noreferrer"">setuptools</a> following the instructions there.  The <code>pkg_resources</code> module is also automatically installed by this step.</p>

<p>Then use the newly-installed version of <code>easy_install</code> (or <code>pip</code>) to install <code>ipython</code>.</p>

<pre><code>easy_install ipython
</code></pre>

<p>or</p>

<pre><code>pip install ipython
</code></pre>

<p>It should automatically get installed to the correct <code>site-packages</code> location for that python instance and you should be good to go.</p>
","1757269"
"Python format timedelta to string","159018","","<p>I'm a Python newbie (2 weeks) and I'm having trouble formatting a <code>datetime.timedelta</code> object.</p>

<p>Here's what I'm trying to do: 
  I have a list of objects and one of the members of the class of the object is a timedelta object that shows the duration of an event.  I would like to display that duration in the format of hours:minutes.</p>

<p>I have tried a variety of methods for doing this and I'm having difficulty.  My current approach is to add methods to the class for my objects that return hours and minutes.  I can get the hours by dividing the timedelta.seconds by 3600 and rounding it. I'm having trouble with getting the remainder seconds and converting that to minutes.</p>

<p>By the way, I'm using <code>Google AppEngine</code> with <code>Django Templates</code> for presentation.</p>

<p>If anyone can help or knows of a better way to resolve this, I would be very happy.</p>

<p>Thanks,</p>
","<p>Thanks everyone for your help.  I took many of your ideas and put them together, let me know what you think.</p>

<p>I added two methods to the class like this:</p>

<pre><code>def hours(self):
    retval = """"
    if self.totalTime:
        hoursfloat = self.totalTime.seconds / 3600
        retval = round(hoursfloat)
    return retval

def minutes(self):
    retval = """"
    if self.totalTime:
        minutesfloat = self.totalTime.seconds / 60
        hoursAsMinutes = self.hours() * 60
        retval = round(minutesfloat - hoursAsMinutes)
    return retval
</code></pre>

<p>In my django I used this (sum is the object and it is in a dictionary):</p>

<pre><code>&lt;td&gt;{{ sum.0 }}&lt;/td&gt;    
&lt;td&gt;{{ sum.1.hours|stringformat:""d"" }}:{{ sum.1.minutes|stringformat:""#02.0d"" }}&lt;/td&gt;
</code></pre>
","538818"
"Convert Python dictionary to JSON array","158936","","<p>Currently I have this dictionary, printed using <code>pprint</code>:  </p>

<pre><code>{'AlarmExTempHum': '\x00\x00\x00\x00\x00\x00\x00\x00',  
'AlarmIn': 0,  
'AlarmOut': '\x00\x00',  
'AlarmRain': 0,  
'AlarmSoilLeaf': '\x00\x00\x00\x00',  
'BarTrend': 60,  
'BatteryStatus': 0,  
'BatteryVolts': 4.751953125,  
'CRC': 55003,
'EOL': '\n\r',
'ETDay': 0,
'ETMonth': 0,
'ETYear': 0,
'ExtraHum1': None,
'ExtraHum2': None,
'ExtraHum3': None,
'ExtraHum4': None,
'ExtraHum5': None,
'ExtraHum6': None,
'ExtraHum7': None,
'ExtraTemp1': None,
'ExtraTemp2': None,
'ExtraTemp3': None,
'ExtraTemp4': None,
'ExtraTemp5': None,
'ExtraTemp6': None,
'ExtraTemp7': None,
'ForecastIcon': 2,
'ForecastRuleNo': 122,
'HumIn': 31,
'HumOut': 94,
'LOO': 'LOO',
'LeafTemps': '\xff\xff\xff\xff',
'LeafWetness': '\xff\xff\xff\x00',
'NextRec': 37,
'PacketType': 0,
'Pressure': 995.9363359295631,
'RainDay': 0.0,
'RainMonth': 0.0,
'RainRate': 0.0,
'RainStorm': 0.0,
'RainYear': 2.8,
'SoilMoist': '\xff\xff\xff\xff',
'SoilTemps': '\xff\xff\xff\xff',
'SolarRad': None,
'StormStartDate': '2127-15-31',
'SunRise': 849,
'SunSet': 1611,
'TempIn': 21.38888888888889,
'TempOut': 0.8888888888888897,
'UV': None,
'WindDir': 219,
'WindSpeed': 3.6,
'WindSpeed10Min': 3.6}
</code></pre>

<p>When I do this:  </p>

<pre><code>import json
d = (my dictionary above)
jsonarray = json.dumps(d)
</code></pre>

<p>I get this error: <code>'utf8' codec can't decode byte 0xff in position 0: invalid start byte</code></p>
","<p>If you are fine with non-printable symbols in your json, then add <code>ensure_ascii=False</code> to <code>dumps</code> call.</p>

<pre><code>&gt;&gt;&gt; json.dumps(your_data, ensure_ascii=False)
</code></pre>

<blockquote>
  <p>If <code>ensure_ascii</code> is false, then the return value will be a
  <code>unicode</code> instance subject to normal Python <code>str</code> to <code>unicode</code>
  coercion rules instead of being escaped to an ASCII <code>str</code>.</p>
</blockquote>
","14661102"
"What is MATLAB good for? Why is it so used by universities? When is it better than Python?","158767","","<p>I've been recently asked to learn some MATLAB basics for a class.</p>

<p>What does make it so cool for researchers and people that works in university?
I saw it's cool to work with matrices and plotting things... (things that can be done easily in Python using some libraries).</p>

<p>Writing a function or parsing a file is just painful. I'm still at the start, what am I missing?</p>

<p>In the ""real"" world, what should I think to use it for? When should it can do better than Python? For better I mean: easy way to write something performing.</p>

<hr>

<p><strong>UPDATE 1:</strong> One of the things I'd like to know the most is ""Am I missing something?"" :D</p>

<p><strong>UPDATE 2:</strong> Thank you for your answers. My question is not about buy or not to buy MATLAB. The university has the possibility to give me a copy of an old version of MATLAB (MATLAB 5 I guess) for free, without breaking the license. I'm interested in its capabilities and if it deserves a deeper study (I won't need anything more than <em>basic</em> MATLAB in oder to pass the exam :P ) it will really be better than Python for a specific kind of task in the real world.</p>
","<p>Adam is only partially right.   Many, if not most, mathematicians will never touch it.  If there is a computer tool used at all, it's going to be something like <a href=""http://en.wikipedia.org/wiki/Mathematica"" rel=""noreferrer"">Mathematica</a> or <a href=""http://en.wikipedia.org/wiki/Maple_(software)"" rel=""noreferrer"">Maple</a>.  Engineering departments, on the other hand, often rely on it and there are definitely useful things for some applied mathematicians.  It's also used heavily in industry in some areas.</p>

<p>Something you have to realize about MATLAB is that it started off as a wrapper on <a href=""http://en.wikipedia.org/wiki/Fortran"" rel=""noreferrer"">Fortran</a> libraries for linear algebra. For a long time, it had an attitude that ""all the world is an array of doubles (floats)"".  As a language, it has grown very organically, and there are some flaws that are very much baked in, if you look at it just as a programming language.</p>

<p>However, if you look at it as an environment for doing certain types of research in, it has some real strengths. It's about as good as it gets for doing floating point linear algebra.  The notation is simple and powerful, the implementation fast and trusted.  It is very good at generating plots and other interactive tasks.  There are a large number of `toolboxes' with good code for particular tasks, that are affordable.  There is a large community of users that share numerical codes (Python + <a href=""http://en.wikipedia.org/wiki/NumPy"" rel=""noreferrer"">NumPy</a> has nothing in the same league, at least yet)</p>

<p>Python, warts and all, is a much better programming language (as are many others).  However, it's a decade or so behind in terms of the tools.</p>

<p>The key point is that the majority of people who use MATLAB are not programmers really, and don't want to be. </p>

<p>It's a lousy choice for a general programming language; it's quirky, slow for many tasks (you need to vectorize things to get efficient codes), and not easy to integrate with the outside world.  On the other hand, for the things it is good at, it is very very good.  Very few things compare.  There's a company with reasonable support and who knows how many man-years put into it.  This can matter in industry.</p>

<p>Strictly looking at your Python vs. MATLAB comparison, they are mostly different tools for different jobs.  In the areas where they do overlap a bit, it's hard to say what the better route to go is (depends a lot on what you're trying to do).  But mostly Python isn't all that good at MATLAB's core strengths, and vice versa.</p>
","180341"
"Pointers in Python?","158735","","<p>I know Python doesn't have pointers, but is there a way to have this yield <code>2</code> instead</p>

<pre><code>&gt;&gt;&gt; a = 1
&gt;&gt;&gt; b = a # modify this line somehow so that b ""points to"" a
&gt;&gt;&gt; a = 2
&gt;&gt;&gt; b
1
</code></pre>

<p>?</p>

<hr>

<p>Here's an example: I want <code>form.data['field']</code> and <code>form.field.value</code> to always have the same value. It's not completely necessary, but I think it would be nice.</p>
","<blockquote>
  <p>I want <code>form.data['field']</code> and
  <code>form.field.value</code> to always have the
  same value</p>
</blockquote>

<p>This is feasible, because it involves decorated names and indexing -- i.e., <strong>completely</strong> different constructs from the <strong>barenames</strong> <code>a</code> and <code>b</code> that you're asking about, and for with your request is utterly impossible.  Why ask for something impossible <strong>and</strong> totally different from the (possible) thing you actually <em>want</em>?!</p>

<p>Maybe you don't realize how drastically different barenames and decorated names are.  When you refer to a barename <code>a</code>, you're getting exactly the object <code>a</code> was last bound to in this scope (or an exception if it wasn't bound in this scope) -- this is such a deep and fundamental aspect of Python that it can't possibly be subverted.  When you refer to a <em>decorated</em> name <code>x.y</code>, you're asking an object (the object <code>x</code> refers to) to please supply ""the <code>y</code> attribute"" -- and in response to that request, the object can perform totally arbitrary computations (and indexing is quite similar: it also allows arbitrary computations to be performed in response).</p>

<p>Now, your ""actual desiderata"" example is mysterious because in each case two levels of indexing or attribute-getting are involved, so the subtlety you crave could be introduced in many ways.  What other attributes is <code>form.field</code> suppose to have, for example, besides <code>value</code>?  Without that further <code>.value</code> computations, possibilities would include:</p>

<pre><code>class Form(object):
   ...
   def __getattr__(self, name):
       return self.data[name]
</code></pre>

<p>and</p>

<pre><code>class Form(object):
   ...
   @property
   def data(self):
       return self.__dict__
</code></pre>

<p>The presence of <code>.value</code> suggests picking the first form, plus a kind-of-useless wrapper:</p>

<pre><code>class KouWrap(object):
   def __init__(self, value):
       self.value = value

class Form(object):
   ...
   def __getattr__(self, name):
       return KouWrap(self.data[name])
</code></pre>

<p>If <em>assignments</em> such <code>form.field.value = 23</code> is also supposed to set the entry in <code>form.data</code>, then the wrapper must become more complex indeed, and not all that useless:</p>

<pre><code>class MciWrap(object):
   def __init__(self, data, k):
       self._data = data
       self._k = k
   @property
   def value(self):
       return self._data[self._k]
   @value.setter
   def value(self, v)
       self._data[self._k] = v

class Form(object):
   ...
   def __getattr__(self, name):
       return MciWrap(self.data, name)
</code></pre>

<p>The latter example is roughly as close as it gets, in Python, to the sense of ""a pointer"" as you seem to want -- but it's crucial to understand that such subtleties can ever only work with <em>indexing</em> and/or <em>decorated names</em>, <strong>never</strong> with barenames as you originally asked!</p>
","3107534"
"numpy matrix vector multiplication","158654","","<p>When I multiply two numpy arrays of sizes (n x n)*(n x 1), I get a matrix of size (n x n). Following normal matrix multiplication rules, a (n x 1) vector is expected, but I simply cannot find any information about how this is done in Python's Numpy module.</p>

<p>The thing is that I don't want to implement it manually to preserve the speed of the program.</p>

<p>Example code is shown below:</p>

<pre><code>a = np.array([[ 5, 1 ,3], [ 1, 1 ,1], [ 1, 2 ,1]])
b = np.array([1, 2, 3])

print a*b
   &gt;&gt;
   [[5 2 9]
   [1 2 3]
   [1 4 3]]
</code></pre>

<p>What i want is:</p>

<pre><code>print a*b
   &gt;&gt;
   [16 6 8]
</code></pre>
","<h2>Simplest solution</h2>

<p>Use <code>numpy.dot</code> or <code>a.dot(b)</code>. See the documentation <a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.dot.html"" rel=""nofollow noreferrer"">here</a>.</p>

<pre><code>&gt;&gt;&gt; a = np.array([[ 5, 1 ,3], 
                  [ 1, 1 ,1], 
                  [ 1, 2 ,1]])
&gt;&gt;&gt; b = np.array([1, 2, 3])
&gt;&gt;&gt; print a.dot(b)
array([16, 6, 8])
</code></pre>

<p>This occurs because numpy arrays are not matrices, and the standard operations <code>*, +, -, /</code> work element-wise on arrays.  Instead, you could try using <a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.matrix.html"" rel=""nofollow noreferrer""><code>numpy.matrix</code></a>, and <code>*</code> will be treated like matrix multiplication. </p>

<hr>

<h2>Other Solutions</h2>

<p>Also know there are other options:</p>

<ul>
<li><p>As noted below, if using python3.5+ the <code>@</code> operator works as you'd expect:</p>

<pre><code>&gt;&gt;&gt; print(a @ b)
array([16, 6, 8])
</code></pre></li>
<li><p>If you want overkill, you can use <a href=""https://docs.scipy.org/doc/numpy/reference/generated/numpy.einsum.html#numpy.einsum"" rel=""nofollow noreferrer""><code>numpy.einsum</code></a>.  The documentation will give you a flavor for how it works, but honestly, I didn't fully understand how to use it until reading <a href=""https://stackoverflow.com/a/33641428/1634191"">this answer</a> and just playing around with it on my own.</p>

<pre><code>&gt;&gt;&gt; np.einsum('ji,i-&gt;j', a, b)
array([16, 6, 8])
</code></pre></li>
<li><p>As of mid 2016 (numpy 1.10.1), you can try the experimental <a href=""https://docs.scipy.org/doc/numpy/reference/generated/numpy.matmul.html#numpy-matmul"" rel=""nofollow noreferrer""><code>numpy.matmul</code></a>, which works like <code>numpy.dot</code> with two major exceptions: no scalar multiplication but it works with stacks of matrices. </p>

<pre><code>&gt;&gt;&gt; np.matmul(a, b)
array([16, 6, 8])
</code></pre></li>
<li><p><a href=""https://docs.scipy.org/doc/numpy/reference/generated/numpy.inner.html"" rel=""nofollow noreferrer""><code>numpy.inner</code></a> functions the same way as <code>numpy.dot</code> <strong>for matrix-vector multiplication but behaves differently</strong> for matrix-matrix and tensor multiplication (see Wikipedia regarding the differences between <a href=""https://en.wikipedia.org/wiki/Inner_product_space"" rel=""nofollow noreferrer"">the inner product and dot product</a> in general or <a href=""https://stackoverflow.com/questions/11033573/difference-between-numpy-dot-and-inner"">see this SO answer</a> regarding numpy's implementations).</p>

<pre><code>&gt;&gt;&gt; np.inner(a, b)
array([16, 6, 8])

# Beware using for matrix-matrix multiplication though!
&gt;&gt;&gt; b = a.T
&gt;&gt;&gt; np.dot(a, b)
array([[35,  9, 10],
       [ 9,  3,  4],
       [10,  4,  6]])
&gt;&gt;&gt; np.inner(a, b) 
array([[29, 12, 19],
       [ 7,  4,  5],
       [ 8,  5,  6]])
</code></pre></li>
</ul>

<hr>

<h2>Rarer options for edge cases</h2>

<ul>
<li><p>If you have tensors (arrays of dimension greater than or equal to one), you can use <a href=""https://docs.scipy.org/doc/numpy/reference/generated/numpy.tensordot.html#numpy.tensordot"" rel=""nofollow noreferrer""><code>numpy.tensordot</code></a> with the optional argument <code>axes=1</code>:</p>

<pre><code>&gt;&gt;&gt; np.tensordot(a, b, axes=1)
array([16,  6,  8])
</code></pre></li>
<li><p><strong>Don't use <a href=""https://docs.scipy.org/doc/numpy/reference/generated/numpy.vdot.html#numpy.vdot"" rel=""nofollow noreferrer""><code>numpy.vdot</code></a></strong> if you have a matrix of complex numbers, as the matrix will be flattened to a 1D array, then it will try to find the complex conjugate dot product between your flattened matrix and vector (which will fail due to a size mismatch <code>n*m</code> vs <code>n</code>).</p></li>
</ul>
","21563036"
"Deleting all files in a directory with Python","158634","","<p>I want to delete all files with the extension <code>.bak</code> in a directory. How can I do that in Python?</p>
","<p>Via <a href=""https://docs.python.org/2/library/os.html#os.listdir"" rel=""noreferrer""><code>os.listdir</code></a> and <a href=""https://docs.python.org/2/library/os.html#os.remove"" rel=""noreferrer""><code>os.remove</code></a>:</p>

<pre><code>import os

filelist = [ f for f in os.listdir(mydir) if f.endswith("".bak"") ]
for f in filelist:
    os.remove(os.path.join(mydir, f))
</code></pre>

<p>Or via <a href=""https://docs.python.org/3/library/glob.html#glob.glob"" rel=""noreferrer""><code>glob.glob</code></a>:</p>

<pre><code>import glob, os, os.path

filelist = glob.glob(os.path.join(mydir, ""*.bak""))
for f in filelist:
    os.remove(f)
</code></pre>

<p>Be sure to be in the correct directory, eventually using <a href=""https://docs.python.org/2/library/os.html#os.chdir"" rel=""noreferrer""><code>os.chdir</code></a>.</p>
","1995397"
"How to get POSTed json in Flask?","158222","","<p>I'm trying to build a simple API using Flask, in which I now want to read some POSTed JSON. I do the post with the <a href=""https://chrome.google.com/webstore/detail/postman-rest-client/fdmmgilgnpjigdojojpjoooidkmcomcm"" rel=""noreferrer"">PostMan Chrome extension</a>, and the JSON I post is simply <code>{""text"":""lalala""}</code>. I try to read the JSON using the following method:</p>

<pre><code>@app.route('/api/add_message/&lt;uuid&gt;', methods=['GET', 'POST'])
def add_message(uuid):
    content = request.json
    print content
    return uuid
</code></pre>

<p>On the browser it correctly returns the uuid I put in the GET, but on the console, it just prints out <code>None</code> (where I expect it to print out the <code>{""text"":""lalala""}</code>. Does anybody know how I can get the posted JSON from within the Flask method? </p>
","<p>You need to set the request content type to <code>application/json</code> for the <code>.json</code> property to work; it'll be <code>None</code> otherwise. See the <a href=""https://flask.readthedocs.org/en/latest/api/#flask.Request.json"" rel=""noreferrer"">Flask <code>Request</code> documentation</a>:</p>

<blockquote>
  <p>If the mimetype is <code>application/json</code> this will contain the parsed JSON data. Otherwise this will be <code>None</code>.</p>
</blockquote>

<p>Flask 0.10 added the <a href=""http://flask.pocoo.org/docs/api/#flask.Request.get_json"" rel=""noreferrer""><code>request.get_json()</code> method</a>, and you should use that method instead of the <code>.json</code> property. You can tell the method to skip the content type requirement by setting <code>force=True</code>.</p>

<p>Note that if an <em>exception</em> is raised at this point (possibly resulting in a 400 Bad Request response), your JSON <em>data</em> is invalid. It is in some way malformed; you may want to check it with a JSON validator.</p>
","20001283"
"Deleting multiple elements from a list","158184","","<p>Is it possible to delete multiple elements from a list at the same time? If I want to delete elements at index 0 and 2, and try something like del somelist[0], followed by del somelist[2], the second statement will actually delete somelist[3].</p>

<p>I suppose I could always delete the higher numbered elements first but I'm hoping there is a better way.</p>
","<p>Probably not the best solution for this problem:</p>

<pre><code>indices = 0, 2
somelist = [i for j, i in enumerate(somelist) if j not in indices]
</code></pre>
","497439"
"UnicodeDecodeError: 'ascii' codec can't decode byte 0xd1 in position 2: ordinal not in range(128)","158131","","<p>I am attempting to work with a very large dataset that has some non-standard characters in it. I need to use unicode, as per the job specs, but I am baffled. (And quite possibly doing it all wrong.)</p>

<p>I open the CSV using:</p>

<pre><code> 15     ncesReader = csv.reader(open('geocoded_output.csv', 'rb'), delimiter='\t', quotechar='""')
</code></pre>

<p>Then, I attempt to encode it with:</p>

<pre><code>name=school_name.encode('utf-8'), street=row[9].encode('utf-8'), city=row[10].encode('utf-8'), state=row[11].encode('utf-8'), zip5=row[12], zip4=row[13],county=row[25].encode('utf-8'), lat=row[22], lng=row[23])
</code></pre>

<p>I'm encoding everything except the lat and lng because those need to be sent out to an API. When I run the program to parse the dataset into what I can use, I get the following Traceback.</p>

<pre><code>Traceback (most recent call last):
  File ""push_into_db.py"", line 80, in &lt;module&gt;
    main()
  File ""push_into_db.py"", line 74, in main
    district_map = buildDistrictSchoolMap()
  File ""push_into_db.py"", line 32, in buildDistrictSchoolMap
    county=row[25].encode('utf-8'), lat=row[22], lng=row[23])
UnicodeDecodeError: 'ascii' codec can't decode byte 0xd1 in position 2: ordinal not in range(128)
</code></pre>

<p>I think I should tell you that I'm using python 2.7.2, and this is part of an app build on django 1.4. I've read several posts on this topic, but none of them seem to directly apply. Any help will be greatly appreciated.</p>

<p>You might also want to know that some of the non-standard characters causing the issue are Ñ and possibly É.</p>
","<p>Unicode is not equal to UTF-8. The latter is just an <em>encoding</em> for the former.</p>

<p>You are doing it the wrong way around. You are <em>reading</em> UTF-8-<em>encoded</em> data, so you have to <em>decode</em> the UTF-8-encoded String into a unicode string.</p>

<p>So just replace <code>.encode</code> with <code>.decode</code>, and it should work (if your .csv is UTF-8-encoded).</p>

<p>Nothing to be ashamed of, though. I bet 3 in 5 programmers had trouble at first understanding this, if not more ;)</p>

<p>Update:
If your input data is <em>not</em> UTF-8 encoded, then you have to <code>.decode()</code> with the appropriate encoding, of course. If nothing is given, python assumes ASCII, which obviously fails on non-ASCII-characters.</p>
","10406161"