title,viewcount,title,body,body,acceptedanswerid
"How to check whether a string contains a substring in JavaScript?","4457826","","<p>Usually I would expect a <code>String.contains()</code> method but there doesn't seem to be one. What is a reasonable way to check for this?</p>
","<p>Here is a list of current possibilities:</p>

<p><strong>1. <code>indexOf</code></strong></p>

<pre><code>var string = ""foo"",
    substring = ""oo"";
string.indexOf(substring) !== -1;
</code></pre>

<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf"" rel=""noreferrer""><code>String.prototype.indexOf</code></a> returns the position of the string in the other string. If not found, it will return <code>-1</code>.</p>

<p><strong>2. (ES6) <code>includes</code></strong>—<a href=""https://stackoverflow.com/a/14193950/2689455"">go to answer</a>, or <a href=""https://stackoverflow.com/a/2385801/2689455"">this answer</a></p>

<pre><code>var string = ""foo"",
    substring = ""oo"";
string.includes(substring);
</code></pre>

<p><strong>3. <code>search</code></strong>—<a href=""https://stackoverflow.com/a/2385801/2689455"">go to answer</a></p>

<pre><code>var string = ""foo"",
    expr = /oo/;
string.search(expr);
</code></pre>

<p><strong>4. lodash includes</strong>—<a href=""https://stackoverflow.com/a/20575032/2689455"">go to answer</a></p>

<pre><code>var string = ""foo"",
    substring = ""oo"";
_.includes(string, substring);
</code></pre>

<p><strong>5. RegExp</strong>—<a href=""https://stackoverflow.com/a/1789980/2689455"">go to answer</a></p>

<pre><code>var string = ""foo"",
    expr = /oo/;  // no quotes here
expr.test(string);
</code></pre>

<p><strong>6. Match</strong>—<a href=""https://stackoverflow.com/a/12652006/2689455"">go to answer</a></p>

<pre><code>var string = ""foo"",
    expr = /oo/;
string.match(expr);
</code></pre>

<hr>

<p><a href=""http://jsben.ch/#/RVYk7"" rel=""noreferrer"">Performance tests</a> are showing that <code>indexOf</code> might be the best choice, if it comes to a point where speed matters.</p>
","1789952"
"How to redirect to another webpage?","4447464","","<p>How can I redirect the user from one page to another using jQuery or pure JavaScript?</p>
","<h2>One does not simply redirect using jQuery</h2>

<p>jQuery is not necessary, and <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Location/replace"" rel=""noreferrer""><strong><code>window.location.replace(...)</code></strong></a> will best simulate an HTTP redirect.  </p>

<p><code>window.location.replace(...)</code> is better than using <code>window.location.href</code>, because <code>replace()</code> does not keep the originating page in the session history, meaning the user won't get stuck in a never-ending back-button fiasco.</p>

<blockquote>
  <p>If you want to simulate someone clicking on a link, use
  <strong><code>location.href</code></strong></p>
  
  <p>If you want to simulate an HTTP redirect, use <strong><code>location.replace</code></strong></p>
</blockquote>

<p><strong>For example:</strong></p>

<pre><code>// similar behavior as an HTTP redirect
window.location.replace(""http://stackoverflow.com"");

// similar behavior as clicking on a link
window.location.href = ""http://stackoverflow.com"";
</code></pre>
","506004"
"How do I remove a particular element from an array in JavaScript?","4099617","","<p>I have an array of integers, and I'm using the <code>.push()</code> method to add elements to it.</p>

<p>Is there a simple way to remove a specific element from an array? The equivalent of something like <code>array.remove(int);</code>.</p>

<p>I have to use <em>core</em> JavaScript - <em>no</em> frameworks are allowed.</p>
","<p>First, find the <code>index</code> of the element you want to remove:</p>

<pre><code>var array = [2, 5, 9];
var index = array.indexOf(5);
</code></pre>

<p><em>Note: <a href=""http://kangax.github.io/compat-table/es5/#test-Array.prototype.indexOf"" rel=""noreferrer"">browser support for indexOf</a> is limited</em>; it is not supported in Internet&nbsp;Explorer 7 and 8.</p>

<p>Then remove it with <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice"" rel=""noreferrer""><code>splice</code></a>:</p>

<pre><code>if (index &gt; -1) {
    array.splice(index, 1);
}
</code></pre>

<p>The second parameter of <code>splice</code> is the number of elements to remove. Note that <code>splice</code> modifies the array in place and returns a new array containing the elements that have been removed.</p>

<hr>

<p>If you need <code>indexOf</code> in an unsupported browser, try the following <code>polyfill</code>. Find more info about this <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf#Polyfill"" rel=""noreferrer""><strong><em><code>polyfill</code> here</em></strong></a>.</p>

<pre><code>Array.prototype.indexOf || (Array.prototype.indexOf = function(d, e) {
    var a;
    if (null == this) throw new TypeError('""this"" is null or not defined');
    var c = Object(this),
        b = c.length &gt;&gt;&gt; 0;
    if (0 === b) return -1;
    a = +e || 0;
    Infinity === Math.abs(a) &amp;&amp; (a = 0);
    if (a &gt;= b) return -1;
    for (a = Math.max(0 &lt;= a ? a : b - Math.abs(a), 0); a &lt; b;) {
        if (a in c &amp;&amp; c[a] === d) return a;
        a++
    }
    return -1
});
</code></pre>
","5767357"
"How to check whether a checkbox is checked in jQuery?","3376830","","<p>I need to check the <code>checked</code> property of a checkbox and perform an action based on the checked property using jQuery.</p>

<p>For example, if the age checkbox is checked, then I need to show a textbox to enter age, else hide the textbox.</p>

<p>But the following code returns <code>false</code> by default:</p>

<pre><code>if($('#isAgeSelected').attr('checked')) {
    $(""#txtAge"").show();
} else {
    $(""#txtAge"").hide();
}
</code></pre>

<p>How do I successfully query the <code>checked</code> property?</p>
","<p>This worked for me:</p>

<pre><code>$get(""isAgeSelected "").checked == true
</code></pre>

<p>Where <code>isAgeSelected</code> is the id of the control.</p>

<p>Also, @karim79's <a href=""https://stackoverflow.com/questions/901712/check-checkbox-checked-property-using-jquery/901727#901727"">answer</a> works fine. I am not sure what I missed at the time I tested it.</p>

<p><strong>Note, this is answer uses Microsoft Ajax, not jQuery</strong></p>
","903152"
"For-each over an array in JavaScript?","3092075","","<p>How can I loop through all the entries in an array using JavaScript?</p>

<p>I thought it was something like this:</p>

<pre><code>forEach(instance in theArray)
</code></pre>

<p>Where <code>theArray</code> is my array, but this seems to be incorrect.</p>
","

<p><strong>TL;DR</strong></p>

<ul>
<li>Don't use <code>for-in</code> unless you use it with safeguards or are at least aware of why it might bite you.</li>
<li><p>Your best bets are usually</p>

<ul>
<li>a <code>for-of</code> loop (ES2015+ only),</li>
<li><code>Array#forEach</code> (<a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-array.prototype.foreach"" rel=""noreferrer""><code>spec</code></a> | <a href=""https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach"" rel=""noreferrer""><code>MDN</code></a>) (or its relatives <code>some</code> and such) (ES5+ only),</li>
<li>a simple old-fashioned <code>for</code> loop,</li>
<li>or <code>for-in</code> with safeguards.</li>
</ul></li>
</ul>

<p>But there's <strong>lots</strong> more to explore, read on...</p>

<hr>

<p>JavaScript has powerful semantics for looping through arrays and array-like objects. I've split the answer into two parts: Options for genuine arrays, and options for things that are just array-<em>like</em>, such as the <code>arguments</code> object, other iterable objects (ES2015+), DOM collections, and so on.</p>

<p>I'll quickly note that you can use the ES2015 options <em>now</em>, even on ES5 engines, by <em>transpiling</em> ES2015 to ES5. Search for ""ES2015 transpiling"" / ""ES6 transpiling"" for more...</p>

<p>Okay, let's look at our options:</p>

<h2>For Actual Arrays</h2>

<p>You have three options in <a href=""http://ecma-international.org/ecma-262/5.1/"" rel=""noreferrer"">ECMAScript&nbsp;5</a> (""ES5""), the version most broadly supported at the moment, and will soon have two more in <a href=""http://www.ecma-international.org/ecma-262/6.0/index.html"" rel=""noreferrer"">ECMAScript&nbsp;2015</a> (""ES2015"", ""ES6""), the latest version of JavaScript that vendors are working on supporting:</p>

<ol>
<li>Use <code>forEach</code> and related (ES5+)</li>
<li>Use a simple <code>for</code> loop</li>
<li>Use <code>for-in</code> <em>correctly</em></li>
<li>Use <code>for-of</code> (use an iterator implicitly) (ES2015+)</li>
<li>Use an iterator explicitly (ES2015+)</li>
</ol>

<p>Details:</p>

<h3>1. Use <code>forEach</code> and related</h3>

<p>If you're using an environment that supports the <code>Array</code> features of ES5 (directly or using a shim), you can use the new <code>forEach</code> (<a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-array.prototype.foreach"" rel=""noreferrer""><code>spec</code></a> | <a href=""https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach"" rel=""noreferrer""><code>MDN</code></a>):</p>

<pre><code>var a = [""a"", ""b"", ""c""];
a.forEach(function(entry) {
    console.log(entry);
});
</code></pre>

<p><code>forEach</code> accepts an iterator function and, optionally, a value to use as <code>this</code> when calling that iterator function (not used above). The iterator function is called for each entry in the array, in order, skipping non-existent entries in sparse arrays. Although I only used one argument above, the iterator function is called with three: The value of each entry, the index of that entry, and a reference to the array you're iterating over (in case your function doesn't already have it handy).</p>

<p>Unless you're supporting obsolete browsers like IE8 (which NetApps shows at just over 4% market share as of this writing in September&nbsp;2016), you can happily use <code>forEach</code> in a general-purpose web page without a shim. If you do need to support obsolete browsers, shimming/polyfilling <code>forEach</code> is easily done (search for ""es5 shim"" for several options).</p>

<p><code>forEach</code> has the benefit that you don't have to declare indexing and value variables in the containing scope, as they're supplied as arguments to the iteration function, and so nicely scoped to just that iteration.</p>

<p>If you're worried about the runtime cost of making a function call for each array entry, don't be; <a href=""http://blog.niftysnippets.org/2012/02/foreach-and-runtime-cost.html"" rel=""noreferrer"">details</a>.</p>

<p>Additionally, <code>forEach</code> is the ""loop through them all"" function, but ES5 defined several other useful ""work your way through the array and do things"" functions, including:</p>

<ul>
<li><a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-array.prototype.every"" rel=""noreferrer""><code>every</code></a> (stops looping the first time the iterator returns <code>false</code> or something falsey)</li>
<li><a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-array.prototype.some"" rel=""noreferrer""><code>some</code></a> (stops looping the first time the iterator returns <code>true</code> or something truthy)</li>
<li><a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-array.prototype.filter"" rel=""noreferrer""><code>filter</code></a> (creates a new array including elements where the filter function returns <code>true</code> and omitting the ones where it returns <code>false</code>)</li>
<li><a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-array.prototype.map"" rel=""noreferrer""><code>map</code></a> (creates a new array from the values returned by the iterator function)</li>
<li><a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-array.prototype.reduce"" rel=""noreferrer""><code>reduce</code></a> (builds up a value by repeated calling the iterator, passing in previous values; see the spec for the details; useful for summing the contents of an array and many other things)</li>
<li><a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-array.prototype.reduceright"" rel=""noreferrer""><code>reduceRight</code></a> (like <code>reduce</code>, but works in descending rather than ascending order)</li>
</ul>

<h3>2. Use a simple <code>for</code> loop</h3>

<p>Sometimes the old ways are the best:</p>

<pre><code>var index;
var a = [""a"", ""b"", ""c""];
for (index = 0; index &lt; a.length; ++index) {
    console.log(a[index]);
}
</code></pre>

<p>If the length of the array won't change during the loop, and it's in performance-sensitive code (unlikely), a slightly more complicated version grabbing the length up front might be a <strong><em>tiny</em></strong> bit faster:</p>

<pre><code>var index, len;
var a = [""a"", ""b"", ""c""];
for (index = 0, len = a.length; index &lt; len; ++index) {
    console.log(a[index]);
}
</code></pre>

<p>And/or counting backward:</p>

<pre><code>var index;
var a = [""a"", ""b"", ""c""];
for (index = a.length - 1; index &gt;= 0; --index) {
    console.log(a[index]);
}
</code></pre>

<p>But with modern JavaScript engines, it's rare you need to eke out that last bit of juice.</p>

<p>In ES2015 and higher, you can make your index and value variables local to the <code>for</code> loop:</p>

<pre><code>let a = [""a"", ""b"", ""c""];
for (let index = 0; index &lt; a.length; ++index) {
    let value = a[index];
}
//console.log(index); // Would cause ""ReferenceError: index is not defined""
//console.log(value); // Would cause ""ReferenceError: value is not defined""
</code></pre>

<p>And when you do that, not just <code>value</code> but also <code>index</code> is recreated for each loop iteration, meaning closures created in the loop body keep a reference to the <code>index</code> (and <code>value</code>) created for that specific iteration:</p>

<pre><code>let divs = document.querySelectorAll(""div"");
for (let index = 0; index &lt; divs.length; ++index) {
    divs[index].addEventListener('click', e =&gt; {
        alert(""Index is: "" + index);
    });
}
</code></pre>

<p>If you had five divs, you'd get ""Index is: 0"" if you clicked the first and ""Index is: 4"" if you clicked the last. This does <strong>not</strong> work if you use <code>var</code> instead of <code>let</code>.</p>

<h3>3. Use <code>for-in</code> <em>correctly</em></h3>

<p>You'll get people telling you to use <code>for-in</code>, but <a href=""http://blog.niftysnippets.org/2010/11/myths-and-realities-of-forin.html"" rel=""noreferrer"">that's not what <code>for-in</code> is for</a>. <code>for-in</code> loops through the <em>enumerable properties of an object</em>, not the indexes of an array. <strong>The order is not guaranteed</strong>, not even in ES2015 (ES6). ES2015 does define an order to object properties (via <a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-ordinary-object-internal-methods-and-internal-slots-ownpropertykeys"" rel=""noreferrer""><code>[[OwnPropertyKeys]]</code></a>, <a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-ordinary-object-internal-methods-and-internal-slots-enumerate"" rel=""noreferrer""><code>[[Enumerate]]</code></a>, and things that use them like <a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-object.getownpropertynames"" rel=""noreferrer""><code>Object.getOwnPropertyKeys</code></a>), but it <strong>does not</strong> define that <code>for-in</code> will follow that order. (Details in <a href=""https://stackoverflow.com/a/30919039/157247"">this other answer</a>.)</p>

<p>Still, it <em>can</em> be useful, particularly for <a href=""http://en.wikipedia.org/wiki/Sparse_array"" rel=""noreferrer""><em>sparse</em> arrays</a>, if you use appropriate safeguards:</p>

<pre><code>// `a` is a sparse array
var key;
var a = [];
a[0] = ""a"";
a[10] = ""b"";
a[10000] = ""c"";
for (key in a) {
    if (a.hasOwnProperty(key)  &amp;&amp;        // These are explained
        /^0$|^[1-9]\d*$/.test(key) &amp;&amp;    // and then hidden
        key &lt;= 4294967294                // away below
        ) {
        console.log(a[key]);
    }
}
</code></pre>

<p>Note the two checks:</p>

<ol>
<li><p>That the object has its <em>own</em> property by that name (not one it inherits from its prototype), and</p></li>
<li><p>That the key is a base-10 numeric string in its normal string form and its value is &lt;= 2^32 - 2 (which is 4,294,967,294). Where does that number come from? It's part of the definition of an array index <a href=""http://www.ecma-international.org/ecma-262/5.1/#sec-15.4"" rel=""noreferrer"">in the specification</a>. Other numbers (non-integers, negative numbers, numbers greater than 2^32 - 2) are not array indexes. The reason it's 2^32 - <strong>2</strong> is that that makes the greatest index value one lower than 2^32 - <strong>1</strong>, which is the maximum value an array's <code>length</code> can have. (E.g., an array's length fits in a 32-bit unsigned integer.) <em>(Props to RobG for pointing out in a comment <a href=""http://blog.niftysnippets.org/2010/11/myths-and-realities-of-forin.html"" rel=""noreferrer"">on my blog post</a> that my previous test wasn't quite right.)</em></p></li>
</ol>

<p>That's a tiny bit of added overhead per loop iteration on most arrays, but if you have a <em>sparse</em> array, it can be a more efficient way to loop because it only loops for entries that actually exist. E.g., for the array above, we loop a total of three times (for keys <code>""0""</code>, <code>""10""</code>, and <code>""10000""</code>&nbsp;&mdash; remember, they're strings), not 10,001 times.</p>

<p>Now, you won't want to write that every time, so you might put this in your toolkit:</p>

<pre><code>function arrayHasOwnIndex(array, prop) {
    return array.hasOwnProperty(prop) &amp;&amp; /^0$|^[1-9]\d*$/.test(prop) &amp;&amp; prop &lt;= 4294967294; // 2^32 - 2
}
</code></pre>

<p>And then we'd use it like this:</p>

<pre><code>for (key in a) {
    if (arrayHasOwnIndex(a, key)) {
        console.log(a[key]);
    }
}
</code></pre>

<p>Or if you're interested in just a ""good enough for most cases"" test, you could use this, but while it's close, it's not quite correct:</p>

<pre><code>for (key in a) {
    // ""Good enough"" for most cases
    if (String(parseInt(key, 10)) === key &amp;&amp; a.hasOwnProperty(key)) {
        console.log(a[key]);
    }
}
</code></pre>

<h3>4. Use <code>for-of</code> (use an iterator implicitly) (ES2015+)</h3>

<p>ES2015 adds <em>iterators</em> to JavaScript. The easiest way to use iterators is the new <code>for-of</code> statement. It looks like this:</p>

<pre><code>var val;
var a = [""a"", ""b"", ""c""];
for (val of a) {
    console.log(val);
}
</code></pre>

<p>Output:</p>

<pre>
a
b
c
</pre>

<p>Under the covers, that gets an <em>iterator</em> from the array and loops through it, getting the values from it. This doesn't have the issue that using <code>for-in</code> has, because it uses an iterator defined by the object (the array), and arrays define that their iterators iterate through their <em>entries</em> (not their properties). Unlike <code>for-in</code> in ES5, the order in which the entries are visited is the numeric order of their indexes.</p>

<h3>5. Use an iterator explicitly (ES2015+)</h3>

<p>Sometimes, you might want to use an iterator <em>explicitly</em>. You can do that, too, although it's a lot clunkier than <code>for-of</code>. It looks like this:</p>

<pre><code>var a = [""a"", ""b"", ""c""];
var it = a.values();
var entry;
while (!(entry = it.next()).done) {
    console.log(entry.value);
}
</code></pre>

<p>The iterator is a function (specifically, a <em>generator</em>) that returns a new object each time you call <code>next</code>. The object returned by the iterator has a property, <code>done</code>, telling us whether it's done, and a property <code>value</code> with the value for that iteration.</p>

<p>The meaning of <code>value</code> varies depending on the iterator; arrays support (at least) three functions that return iterators:</p>

<ul>
<li><code>values()</code>: This is the one I used above. It returns an iterator where each <code>value</code> is the value for that iteration.</li>
<li><code>keys()</code>: Returns an iterator where each <code>value</code> is the key for that iteration (so for our <code>a</code> above, that would be <code>""0""</code>, then <code>""1""</code>, then <code>""2""</code>).</li>
<li><code>entries()</code>: Returns an iterator where each <code>value</code> is an array in the form <code>[key, value]</code> for that iteration.</li>
</ul>

<p>(As of this writing, Firefox 29 supports <code>entries</code> and <code>keys</code> but not <code>values</code>.)</p>

<h2>For Array-Like Objects</h2>

<p>Aside from true arrays, there are also <em>array-like</em> objects that have a <code>length</code> property and properties with numeric names: <code>NodeList</code> instances, the <code>arguments</code> object, etc. How do we loop through their contents?</p>

<h3>Use any of the options above for arrays</h3>

<p>At least some, and possibly most or even all, of the array approaches above frequently apply equally well to array-like objects:</p>

<ol>
<li><p><strong>Use <code>forEach</code> and related (ES5+)</strong></p>

<p>The various functions on <code>Array.prototype</code> are ""intentionally generic"" and can usually be used on array-like objects via <a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-function.prototype.call"" rel=""noreferrer""><code>Function#call</code></a> or <a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-function.prototype.apply"" rel=""noreferrer""><code>Function#apply</code></a>. (See the <em>Caveat for host-provided objects</em> at the end of this answer, but it's a rare issue.)</p>

<p>Suppose you wanted to use <code>forEach</code> on a <code>Node</code>'s <code>childNodes</code> property. You'd do this:</p>

<pre><code>Array.prototype.forEach.call(node.childNodes, function(child) {
    // Do something with `child`
});
</code></pre>

<p>If you're going to do that a lot, you might want to grab a copy of the function reference into a variable for reuse, e.g.:</p>

<pre><code>// (This is all presumably in some scoping function)
var forEach = Array.prototype.forEach;

// Then later...
forEach.call(node.childNodes, function(child) {
    // Do something with `child`
});
</code></pre></li>
<li><p><strong>Use a simple <code>for</code> loop</strong></p>

<p>Obviously, a simple <code>for</code> loop applies to array-like objects.</p></li>
<li><p><strong>Use <code>for-in</code> <em>correctly</em></strong></p>

<p><code>for-in</code> with the same safeguards as with an array should work with array-like objects as well; the caveat for host-provided objects on #1 above may apply.</p></li>
<li><p><strong>Use <code>for-of</code> (use an iterator implicitly) (ES2015+)</strong></p>

<p><code>for-of</code> will use the iterator provided by the object (if any); we'll have to see how this plays with the various array-like objects, particularly host-provided ones.</p></li>
<li><p><strong>Use an iterator explicitly (ES2015+)</strong></p>

<p>See #4, we'll have to see how iterators play out.</p></li>
</ol>

<h3>Create a true array</h3>

<p>Other times, you may want to convert an array-like object into a true array. Doing that is surprisingly easy:</p>

<ol>
<li><p><strong>Use the <a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-array.prototype.slice"" rel=""noreferrer""><code>slice</code></a> method of arrays</strong></p>

<p>We can use the <code>slice</code> method of arrays, which like the other methods mentioned above is ""intentionally generic"" and so can be used with array-like objects, like this:</p>

<pre><code>var trueArray = Array.prototype.slice.call(arrayLikeObject);
</code></pre>

<p>So for instance, if we want to convert a <code>NodeList</code> into a true array, we could do this:</p>

<pre><code>var divs = Array.prototype.slice.call(document.querySelectorAll(""div""));
</code></pre>

<p>See the <em>Caveat for host-provided objects</em> below. In particular, note that this will fail in IE8 and earlier, which don't let you use host-provided objects as <code>this</code> like that.</p></li>
<li><p><strong>Use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator"" rel=""noreferrer"">spread notation (<code>...</code>)</a></strong></p>

<p>It's also possible to use ES2015's <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator"" rel=""noreferrer"">spread notation</a> (MDN currently calls it an operator; it isn't one), with JavaScript engines that support this feature:</p>

<pre><code>var trueArray = [...iterableObject];
</code></pre>

<p>So for instance, if we want to convert a <code>NodeList</code> into a true array, with spread syntax this becomes quite succinct:</p>

<pre><code>var divs = [...document.querySelectorAll(""div"")];
</code></pre></li>
<li><p><strong>Use <code>Array.from</code></strong> <a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-array.from"" rel=""noreferrer"">(spec)</a> | <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from"" rel=""noreferrer"">(MDN)</a></p>

<p><code>Array.from</code> (ES2015, but shimmable) creates an array from an array-like object, optionally passing the entries through a mapping function first. So:</p>

<pre><code>var divs = Array.from(document.querySelectorAll(""div""));
</code></pre>

<p>Or if you wanted to get an array of the tag names of the elements with a given class, you'd use the mapping function:</p>

<pre><code>// Arrow function (ES2015):
var divs = Array.from(document.querySelectorAll("".some-class""), element =&gt; element.tagName);

// Standard function (since `Array.from` can be shimmed):
var divs = Array.from(document.querySelectorAll("".some-class""), function(element) {
    return element.tagName;
});
</code></pre></li>
</ol>

<h3>Caveat for host-provided objects</h3>

<p>If you use <code>Array.prototype</code> functions with <em>host-provided</em> array-like objects (DOM lists and other things provided by the browser rather than the JavaScript engine), you need to be sure to test in your target environments to make sure the host-provided object behaves properly. <strong>Most do behave properly</strong> (now), but it's important to test. The reason is that most of the <code>Array.prototype</code> methods you're likely to want to use rely on the host-provided object giving an honest answer to the abstract <a href=""http://www.ecma-international.org/ecma-262/5.1/#sec-8.6.2"" rel=""noreferrer""><code>[[HasProperty]]</code></a> operation. As of this writing, browsers do a very good job of this, but the ES5 spec did allow for the possibility a host-provided object may not be honest; it's in <a href=""http://www.ecma-international.org/ecma-262/5.1/#sec-8.6.2"" rel=""noreferrer"">§8.6.2</a> (several paragraphs below the big table near the beginning of that section), where it says:</p>

<blockquote>
  <p>Host objects may implement these internal methods in any manner unless specified otherwise; for example, one possibility is that <code>[[Get]]</code> and <code>[[Put]]</code> for a particular host object indeed fetch and store property values but <code>[[HasProperty]]</code> always generates <strong>false</strong>.</p>
</blockquote>

<p>(I couldn't find the equivalent verbiage in the ES2015 spec, but it's bound to still be the case.) Again, as of this writing the common host-provided array-like objects in modern browsers (<code>NodeList</code> instances, for instance) <strong>do</strong> handle <code>[[HasProperty]]</code> correctly, but it's important to test.</p>
","9329476"
"How can I get query string values in JavaScript?","2922640","","<p>Is there a plugin-less way of retrieving <a href=""http://en.wikipedia.org/wiki/Query_string"" rel=""nofollow noreferrer"">query string</a> values via jQuery (or without)? </p>

<p>If so, how? If not, is there a plugin which can do so?</p>
","<p>You don't need jQuery for that purpose. You can use just some pure JavaScript:</p>

<pre><code>function getParameterByName(name, url) {
    if (!url) url = window.location.href;
    name = name.replace(/[\[\]]/g, ""\\$&amp;"");
    var regex = new RegExp(""[?&amp;]"" + name + ""(=([^&amp;#]*)|&amp;|#|$)""),
        results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, "" ""));
}
</code></pre>

<p><strong>Usage:</strong></p>

<pre><code>// query string: ?foo=lorem&amp;bar=&amp;baz
var foo = getParameterByName('foo'); // ""lorem""
var bar = getParameterByName('bar'); // """" (present with empty value)
var baz = getParameterByName('baz'); // """" (present with no value)
var qux = getParameterByName('qux'); // null (absent)
</code></pre>

<p><br>
Note: If a parameter is present several times (<code>?foo=lorem&amp;foo=ipsum</code>), you will get the first value (<code>lorem</code>). There is no standard about this and usages vary, see for example this question: <a href=""https://stackoverflow.com/questions/1746507/authoritative-position-of-duplicate-http-get-query-keys"">Authoritative position of duplicate HTTP GET query keys</a>.</p>

<hr>

<p>This is an update based on the new <a href=""https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams"" rel=""noreferrer"">URLSearchParams specs</a> to achieve the same result more succinctly. See answer titled ""<a href=""https://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript/901144#12151322"">URLSearchParams</a>"" below.</p>
","901144"
"Get selected value in dropdown list using JavaScript?","2851642","","<p>How do I get the selected value from a dropdown list using JavaScript?</p>

<p>I tried the methods below but they all return the selected index instead of the value:</p>

<pre><code>var as = document.form1.ddlViewBy.value;
var e = document.getElementById(""ddlViewBy"");
var strUser = e.options[e.selectedIndex].value;

//This is one of the simplest form by (Narendra Kottamidde) :

var value = document.getElementById(""ddlViewBy"").value;
</code></pre>
","<p>If you have a select element that looks like this:</p>

<pre class=""lang-html prettyprint-override""><code>&lt;select id=""ddlViewBy""&gt;
  &lt;option value=""1""&gt;test1&lt;/option&gt;
  &lt;option value=""2"" selected=""selected""&gt;test2&lt;/option&gt;
  &lt;option value=""3""&gt;test3&lt;/option&gt;
&lt;/select&gt;
</code></pre>

<p>Running this code:</p>

<pre class=""lang-js prettyprint-override""><code>var e = document.getElementById(""ddlViewBy"");
var strUser = e.options[e.selectedIndex].value;
</code></pre>

<p>Would make <code>strUser</code> be <code>2</code>. If what you actually want is <code>test2</code>, then do this:</p>

<pre class=""lang-js prettyprint-override""><code>var e = document.getElementById(""ddlViewBy"");
var strUser = e.options[e.selectedIndex].text;
</code></pre>

<p>Which would make <code>strUser</code> be <code>test2</code></p>
","1085810"
"Setting ""checked"" for a checkbox with jQuery?","2638342","","<p>I'd like to do something like this to tick a <code>checkbox</code> using <strong>jQuery</strong>:</p>

<pre><code>$("".myCheckBox"").checked(true);
</code></pre>

<p>or </p>

<pre><code>$("".myCheckBox"").selected(true);
</code></pre>

<p>Does such a thing exist?</p>
","<h2>jQuery 1.6+</h2>

<p>Use the new <a href=""https://api.jquery.com/prop"" rel=""noreferrer""><code>.prop()</code></a> method:</p>

<pre><code>$('.myCheckbox').prop('checked', true);
$('.myCheckbox').prop('checked', false);
</code></pre>

<h2>jQuery 1.5.x and below</h2>

<p>The <code>.prop()</code> method is not available, so you need to use <a href=""https://api.jquery.com/attr"" rel=""noreferrer""><code>.attr()</code></a>.</p>

<pre><code>$('.myCheckbox').attr('checked', true);
$('.myCheckbox').attr('checked', false);
</code></pre>

<p>Note that this is <a href=""https://github.com/jquery/jquery/blob/1.5.2/test/unit/attributes.js#L157"" rel=""noreferrer"">the approach used by jQuery's unit tests prior to version 1.6</a> and is preferable to using</p>

<pre><code>$('.myCheckbox').removeAttr('checked');
</code></pre>

<p>since the latter will, if the box was initially checked, change the behaviour of a call to <a href=""https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement.reset"" rel=""noreferrer""><code>.reset()</code></a> on any form that contains it - a subtle but probably unwelcome behaviour change.</p>

<p>For more context, some incomplete discussion of the changes to the handling of the <code>checked</code> attribute/property in the transition from 1.5.x to 1.6 can be found in the <a href=""https://blog.jquery.com/2011/05/03/jquery-16-released/"" rel=""noreferrer"">version 1.6 release notes</a> and the <strong>Attributes vs. Properties</strong> section of the <a href=""https://api.jquery.com/prop/"" rel=""noreferrer""><code>.prop()</code> documentation</a>.</p>

<h2>Any version of jQuery</h2>

<p>If you're working with just one element, you can always just modify the <a href=""https://developer.mozilla.org/en/docs/Web/API/HTMLInputElement"" rel=""noreferrer""><code>HTMLInputElement</code></a>'s <code>.checked</code> property:</p>

<pre><code>$('.myCheckbox')[0].checked = true;
$('.myCheckbox')[0].checked = false;
</code></pre>

<p>The benefit to using the <code>.prop()</code> and <code>.attr()</code> methods instead of this is that they will operate on all matched elements.</p>
","426276"
"Why does my JavaScript get a ""No 'Access-Control-Allow-Origin' header is present on the requested resource"" error when Postman does not?","2622309","","<p>I am trying to do authorization using <a href=""http://en.wikipedia.org/wiki/JavaScript"" rel=""noreferrer"">JavaScript</a> by connecting to the <a href=""http://en.wikipedia.org/wiki/Representational_state_transfer#RESTful_web_services"" rel=""noreferrer"">RESTful</a> <a href=""http://en.wikipedia.org/wiki/Application_programming_interface"" rel=""noreferrer"">API</a> built in <a href=""https://en.wikipedia.org/wiki/Flask_%28web_framework%29"" rel=""noreferrer"">Flask</a>. However, when I make the request, I get the following error:</p>

<blockquote>
  <p>XMLHttpRequest cannot load <a href=""http://myApiUrl/login"" rel=""noreferrer"">http://myApiUrl/login</a>. No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'null' is therefore not allowed access.</p>
</blockquote>

<p>I know that the API or remote resource must set the header, but why did it work when I made the request via the Chrome extension <a href=""https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop"" rel=""noreferrer"">Postman</a>?</p>

<p>This is the request code:</p>

<pre><code>$.ajax({
    type: ""POST"",
    dataType: 'text',
    url: api,
    username: 'user',
    password: 'pass',
    crossDomain : true,
    xhrFields: {
        withCredentials: true
    }
})
    .done(function( data ) {
        console.log(""done"");
    })
    .fail( function(xhr, textStatus, errorThrown) {
        alert(xhr.responseText);
        alert(textStatus);
    });
</code></pre>
","<p>If I understood it right you are doing an <a href=""http://en.wikipedia.org/wiki/XMLHttpRequest"">XMLHttpRequest</a> to a different domain than your page is on. So the browser is blocking it as it usually allows a request in the same origin for security reasons. You need to do something different when you want to do a cross-domain request. A tutorial about how to achieve that is <em><a href=""http://www.html5rocks.com/en/tutorials/cors/"">Using CORS</a></em>.</p>

<p>When you are using postman they are not restricted by this policy. Quoted from <em><a href=""http://developer.chrome.com/extensions/xhr.html"">Cross-Origin XMLHttpRequest</a></em>:</p>

<blockquote>
  <p>Regular web pages can use the XMLHttpRequest object to send and receive data from remote servers, but they're limited by the same origin policy. Extensions aren't so limited. An extension can talk to remote servers outside of its origin, as long as it first requests cross-origin permissions.</p>
</blockquote>
","20035319"
"Get the current URL with JavaScript?","2179207","","<p>All I want is to get the website URL. Not the URL as taken from a link. On the page loading I need to be able to grab the full, current URL of the website and set it as a variable to do with as I please.</p>
","<p>Use:</p>

<pre><code>window.location.href 
</code></pre>

<p>As noted in the comments, the line below works, but it is bugged for Firefox.</p>

<pre><code>document.URL;
</code></pre>

<p>See <strong><a href=""https://web.archive.org/web/20170327080647/http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-46183437"" rel=""noreferrer"">URL of type DOMString, readonly</a></strong>.</p>
","1034642"
"How do I include a JavaScript file in another JavaScript file?","2165735","","<p>Is there something in JavaScript similar to <code>@import</code> in CSS that allows you to include a JavaScript file inside another JavaScript file?</p>
","<p>The old versions of JavaScript had no import, include, or require, so many different approaches to this problem have been developed.</p>

<p>But recent versions of JavaScript have standards like <a href=""http://exploringjs.com/es6/ch_modules.html"" rel=""noreferrer"">ES6 modules</a> to import modules, although this is not supported yet by most browsers.  Many people using modules with browser applications use <a href=""https://webpack.github.io/"" rel=""noreferrer"">build</a> and/or <a href=""https://babeljs.io/"" rel=""noreferrer"">transpilation</a> tools to make it practical to use new syntax with features like modules.</p>

<h3>ES6 Modules</h3>

<p>Note that currently, browser support for ES6 Modules is not particularly great, but it is on its way. According to <a href=""https://stackoverflow.com/a/44086319"">this StackOverflow answer</a>, they are supported (but behind flags) in Chrome 60, Firefox 54 and MS Edge 15, with only Safari 10.1 providing support without flags.</p>

<p>Thus, you will currently still need to use build and/or transpilation tools to valid JavaScript that will run in without any requirement for the user to use those browser versions or enable any flags.</p>

<p>Once ES6 Modules are commonplace, here is how you would go about using them:</p>

<pre class=""lang-javascript prettyprint-override""><code>// module.js
export function hello() {
  return ""Hello"";
}
</code></pre>

<pre class=""lang-javascript prettyprint-override""><code>// main.js
import {hello} from 'module'; // or './module'
let val = hello(); // val is ""Hello"";
</code></pre>

<h3>Node.js require</h3>

<p>Node.js is currently using a <a href=""https://nodejs.org/api/modules.html"" rel=""noreferrer"">module.exports/require</a> system.  You can use <code>babel</code> to transpile if you want the <code>import</code> syntax.    </p>

<pre class=""lang-javascript prettyprint-override""><code>// mymodule.js
module.exports = {
   hello: function() {
      return ""Hello"";
   }
}
</code></pre>

<pre class=""lang-javascript prettyprint-override""><code>// server.js
const myModule = require('./mymodule');
let val = myModule.hello(); // val is ""Hello""   
</code></pre>

<p>There are other ways for JavaScript to include external JavaScript contents in browsers that do not require preprocessing.</p>

<h3>AJAX Loading</h3>

<p>You could load an additional script with an AJAX call and then use <code>eval</code> to run it. This is the most straightforward way, but it is limited to your domain because of the JavaScript sandbox security model. Using <code>eval</code> also opens the door to bugs, hacks and security issues.</p>

<h3>jQuery Loading</h3>

<p>The <a href=""http://jquery.com/"" rel=""noreferrer"">jQuery</a> library provides loading functionality <a href=""http://api.jquery.com/jQuery.getScript/"" rel=""noreferrer"">in one line</a>:</p>

<pre class=""lang-javascript prettyprint-override""><code>$.getScript(""my_lovely_script.js"", function() {
   alert(""Script loaded but not necessarily executed."");
});
</code></pre>

<h3>Dynamic Script Loading</h3>

<p>You could add a script tag with the script URL into the HTML. To avoid the overhead of jQuery, this is an ideal solution.</p>

<p>The script can even reside on a different server. Furthermore, the browser evaluates the code. The <code>&lt;script&gt;</code> tag can be injected into either the web page <code>&lt;head&gt;</code>, or inserted just before the closing <code>&lt;/body&gt;</code> tag.</p>

<p>Here is an example of how this could work:</p>

<pre class=""lang-javascript prettyprint-override""><code>function dynamicallyLoadScript(url) {
    var script = document.createElement(""script""); // Make a script DOM node
    script.src = url; // Set it's src to the provided URL

    document.head.appendChild(script); // Add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)
}
</code></pre>

<p>This function will add a new <code>&lt;script&gt;</code> tag to end of the head section of the page, where the <code>src</code> attribute is set to the URL which is given to the function as the first parameter.</p>

<p>Both of these solutions are discussed and illustrated in <a href=""http://unixpapa.com/js/dyna.html"" rel=""noreferrer"">JavaScript Madness: Dynamic Script Loading</a>.</p>

<h2>Detecting when the script has been executed</h2>

<p>Now, there is a big issue you must know about. Doing that implies that <em>you remotely load the code</em>. Modern web browsers will load the file and keep executing your current script because they load everything asynchronously to improve performance. (This applies to both the jQuery method and the manual dynamic script loading method.)</p>

<p>It means that if you use these tricks directly, <em>you won't be able to use your newly loaded code the next line after you asked it to be loaded</em>, because it will be still loading.</p>

<p>For example: <code>my_lovely_script.js</code> contains <code>MySuperObject</code>:</p>

<pre class=""lang-javascript prettyprint-override""><code>var js = document.createElement(""script"");

js.type = ""text/javascript"";
js.src = jsFilePath;

document.body.appendChild(js);

var s = new MySuperObject();

Error : MySuperObject is undefined
</code></pre>

<p>Then you reload the page hitting <kbd>F5</kbd>. And it works! Confusing...</p>

<p><strong>So what to do about it ?</strong></p>

<p>Well, you can use the hack the author suggests in the link I gave you. In summary, for people in a hurry, he uses an event to run a callback function when the script is loaded. So you can put all the code using the remote library in the callback function. For example:</p>

<pre class=""lang-javascript prettyprint-override""><code>function loadScript(url, callback)
{
    // Adding the script tag to the head as suggested before
    var head = document.getElementsByTagName('head')[0];
    var script = document.createElement('script');
    script.type = 'text/javascript';
    script.src = url;

    // Then bind the event to the callback function.
    // There are several events for cross browser compatibility.
    script.onreadystatechange = callback;
    script.onload = callback;

    // Fire the loading
    head.appendChild(script);
}
</code></pre>

<p>Then you write the code you want to use AFTER the script is loaded in a <a href=""http://en.wikipedia.org/wiki/Anonymous_function"" rel=""noreferrer"">lambda function</a>:</p>

<pre class=""lang-javascript prettyprint-override""><code>var myPrettyCode = function() {
   // Here, do whatever you want
};
</code></pre>

<p>Then you run all that:</p>

<pre class=""lang-javascript prettyprint-override""><code>loadScript(""my_lovely_script.js"", myPrettyCode);
</code></pre>

<p>Note that the script may execute after the DOM has loaded, or before, depending on the browser and whether you included the line <code>script.async = false;</code>. There's a <a href=""http://www.html5rocks.com/en/tutorials/speed/script-loading/"" rel=""noreferrer"">great article on Javascript loading in general</a> which discusses this.</p>

<h3>Source Code Merge/Preprocessing</h3>

<p>As mentioned at the top of this answer, many developers now use build/transpilation tool(s) like WebPack, Babel, or Gulp in their projects, allowing them to use new syntax and support modules better, combine files, minify, etc.</p>
","950146"
"How to replace all occurrences of a string in JavaScript?","2153991","","<p>I have this string:</p>

<pre><code>""Test abc test test abc test test test abc test test abc""
</code></pre>

<p>Doing</p>

<pre><code>str = str.replace('abc', '');
</code></pre>

<p>seems to only remove the first occurrence of <code>abc</code> in the string above. How can I replace <strong>all</strong> occurrences of it?</p>
","<p>For the sake of completeness, I got to thinking about which method I should use to do this. There are basically two ways to do this as suggested by the other answers on this page.</p>

<p><strong>Note:</strong> In general, extending the built-in prototypes in JavaScript is generally not recommended. I am providing as extensions on the String prototype simply for purposes of illustration, showing different implementations of a hypothetical standard method on the <code>String</code> built-in prototype.</p>

<hr>

<h3>Regular Expression Based Implementation</h3>

<pre><code>String.prototype.replaceAll = function(search, replacement) {
    var target = this;
    return target.replace(new RegExp(search, 'g'), replacement);
};
</code></pre>

<h3>Split and Join (Functional) Implementation</h3>

<pre><code>String.prototype.replaceAll = function(search, replacement) {
    var target = this;
    return target.split(search).join(replacement);
};
</code></pre>

<hr>

<p>Not knowing too much about how regular expressions work behind the scenes in terms of efficiency, I tended to lean toward the split and join implementation in the past without thinking about performance. When I did wonder which was more efficient, and by what margin, I used it as an excuse to find out.</p>

<p>On my Chrome Windows&nbsp;8 machine, <strong>the regular expression based implementation is the fastest</strong>, with the <strong>split and join implementation being 53% slower</strong>. Meaning the regular expressions are twice as fast for the lorem ipsum input I used.</p>

<p>Check out this <a href=""http://jsben.ch/#/LFfWA"" rel=""noreferrer""><strong>benchmark</strong></a> running these two implementations against each other.</p>

<hr>

<p>As noted in the comment below by @ThomasLeduc and others, there could be an issue with the regular expression-based implementation if <code>search</code> contains certain characters which are reserved as <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Using_special_characters"" rel=""noreferrer"">special characters in regular expressions</a>. The implementation assumes that the caller will escape the string beforehand or will only pass strings that are without the characters in the table in <em><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Using_special_characters"" rel=""noreferrer"">Regular Expressions</a></em> (MDN).</p>

<p>MDN also provides an implementation to escape our strings. It would be nice if this was also standardized as <code>RegExp.escape(str)</code>, but alas, it does not exist:</p>

<pre><code>function escapeRegExp(str) {
  return str.replace(/[.*+?^${}()|[\]\\]/g, ""\\$&amp;""); // $&amp; means the whole matched string
}
</code></pre>

<p>We could call <code>escapeRegExp</code> within our <code>String.prototype.replaceAll</code> implementation, however, I'm not sure how much this will affect the performance (potentially even for strings for which the escape is not needed, like all alphanumeric strings).</p>
","17606289"
"How do I check if an element is hidden in jQuery?","2040967","","<p>It is possible to toggle the visibility of an element, using the functions <code>.hide()</code>, <code>.show()</code> or <code>.toggle()</code>.</p>

<p>How would you test if an element is visible or hidden?</p>
","<p>Since the question refers to a single element, this code might be more suitable:</p>

<pre><code>// Checks for display:[none|block], ignores visible:[true|false]
$(element).is("":visible""); 
</code></pre>

<p>Same as <a href=""https://stackoverflow.com/questions/178325/how-do-you-test-if-something-is-hidden-in-jquery/178386#178386"">twernt's suggestion</a>, but applied to a single element; and it <a href=""https://stackoverflow.com/a/4685330/49942"">matches the algorithm recommended in the jQuery FAQ</a></p>
","178450"
"How do you get a timestamp in JavaScript?","2015170","","<p>How can I get a timestamp in JavaScript?</p>

<p>Something similar to Unix's timestamp, that is, a single number that represents the current time and date. Either as a number or a string.</p>
","<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var timeStampInMs = window.performance &amp;&amp; window.performance.now &amp;&amp; window.performance.timing &amp;&amp; window.performance.timing.navigationStart ? window.performance.now() + window.performance.timing.navigationStart : Date.now();

console.log(timeStampInMs, Date.now());</code></pre>
</div>
</div>
</p>

<p><strong>Short &amp; Snazzy:</strong></p>

<pre><code>+ new Date()
</code></pre>

<p>A unary operator like <code>plus</code> triggers the <code>valueOf</code> method in the <code>Date</code> object and it returns the timestamp (without any alteration).</p>

<p><strong>Details:</strong></p>

<p>On almost all current browsers you can use <a href=""http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.4.4"" rel=""noreferrer""><code>Date.now()</code></a> to get the UTC timestamp in <strong>milliseconds</strong>; a notable exception to this is IE8 and earlier (see <a href=""http://kangax.github.io/compat-table/es5/#Date.now"" rel=""noreferrer"">compatibility table</a>).</p>

<p>You can easily make a shim for this, though:</p>

<pre><code>if (!Date.now) {
    Date.now = function() { return new Date().getTime(); }
}
</code></pre>

<p>To get the timestamp in <strong>seconds</strong>, you can use:</p>

<pre><code>Math.floor(Date.now() / 1000)
</code></pre>

<p>Or alternatively you could use:</p>

<pre><code>Date.now() / 1000 | 0
</code></pre>

<p>Which should be slightly faster, but also less readable (also <a href=""https://stackoverflow.com/questions/7487977/using-bitwise-or-0-to-floor-a-number"">see this answer</a>).</p>

<p>I would recommend using <code>Date.now()</code> (with compatibility shim). It's slightly better because it's shorter &amp; doesn't create a new <code>Date</code> object. However, if you don't want a shim &amp; maximum compatibility, you could use the ""old"" method to get the timestamp in <strong>milliseconds</strong>:</p>

<pre><code>new Date().getTime()
</code></pre>

<p>Which you can then convert to seconds like this:</p>

<pre><code>Math.round(new Date().getTime()/1000)
</code></pre>

<p>And you can also use the <code>valueOf</code> method which we showed above:</p>

<pre><code>new Date().valueOf()
</code></pre>
","221297"
"How do I check if an array includes an object in JavaScript?","2001792","","<p>What is the most concise and efficient way to find out if a JavaScript array contains an object?</p>

<p>This is the only way I know to do it:</p>

<pre><code>function contains(a, obj) {
    for (var i = 0; i &lt; a.length; i++) {
        if (a[i] === obj) {
            return true;
        }
    }
    return false;
}
</code></pre>

<p>Is there a better and more concise way to accomplish this?</p>

<p>This is very closely related to Stack Overflow question <em><a href=""https://stackoverflow.com/questions/143847/best-way-to-find-an-item-in-a-javascript-array"">Best way to find an item in a JavaScript Array?</a></em> which addresses finding objects in an array using <code>indexOf</code>.</p>
","<p>Current browsers have <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#Browser_compatibility"" rel=""noreferrer""><code>Array#includes</code></a>, which does <em>exactly</em> that, <a href=""https://kangax.github.io/compat-table/es2016plus/#test-Array.prototype.includes"" rel=""noreferrer"">is widely supported</a>, and has a <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#Polyfill"" rel=""noreferrer"">polyfill</a> for older browsers.</p>

<p>You can also use <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf"" rel=""noreferrer""><code>Array#indexOf</code></a>, which is less direct, but doesn't require Polyfills for out of date browsers.</p>

<p>jQuery offers <a href=""http://api.jquery.com/jquery.inarray/"" rel=""noreferrer""><code>$.inArray</code></a>, which is functionally equivalent to <code>Array#indexOf</code>.</p>

<p><a href=""http://underscorejs.org/#"" rel=""noreferrer"">underscore.js</a>, a JavaScript utility library, offers <a href=""http://underscorejs.org/#contains"" rel=""noreferrer""><code>_.contains(list, value)</code></a>, alias <code>_.include(list, value)</code>, both of which use <a href=""http://underscorejs.org/#indexOf"" rel=""noreferrer"">indexOf</a> internally if passed a JavaScript array.</p>

<p>Some other frameworks offer similar methods:</p>

<ul>
<li>Dojo Toolkit: <a href=""http://dojotoolkit.org/reference-guide/dojo/indexOf.html"" rel=""noreferrer""><code>dojo.indexOf(array, value, [fromIndex, findLast])</code></a></li>
<li>Prototype: <a href=""http://api.prototypejs.org/language/Array/prototype/indexOf/"" rel=""noreferrer""><code>array.indexOf(value)</code></a></li>
<li>MooTools: <a href=""https://mootools.net/core/docs/1.6.0/Types/Array#Array:indexOf"" rel=""noreferrer""><code>array.indexOf(value)</code></a></li>
<li>MochiKit: <a href=""http://mochi.github.io/mochikit/doc/html/MochiKit/Base.html#fn-findvalue"" rel=""noreferrer""><code>findValue(array, value)</code></a></li>
<li>MS Ajax: <a href=""http://www.asp.net/ajaxlibrary/Reference.Array-indexOf-Function.ashx"" rel=""noreferrer""><code>array.indexOf(value)</code></a></li>
<li>Ext: <a href=""http://docs.sencha.com/extjs/4.0.0/#/api/Ext.Array-method-contains"" rel=""noreferrer""><code>Ext.Array.contains(array, value)</code></a></li>
<li>Lodash: <a href=""https://lodash.com/docs#includes"" rel=""noreferrer""><code>_.includes(array, value, [from])</code></a> (is <code>_.contains</code> prior 4.0.0)</li>
<li>ECMAScript 2016: <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes"" rel=""noreferrer""><code>array.includes(value)</code></a></li>
</ul>

<p>Notice that some frameworks implement this as a function, while others add the function to the array prototype.</p>
","1473742"
"Change an element's class with JavaScript","1964210","","<p>How can I change a class of an HTML element in response to an <code>onClick</code> event using JavaScript?</p>
","<h2>Modern HTML5 Techniques for changing classes</h2>

<p>Modern browsers have added <a href=""https://developer.mozilla.org/en-US/docs/DOM/element.classList"" rel=""noreferrer""><strong>classList</strong></a> which provides methods to make it easier to manipulate classes without needing a library:</p>

<pre><code>document.getElementById(""MyElement"").classList.add('MyClass');

document.getElementById(""MyElement"").classList.remove('MyClass');

if ( document.getElementById(""MyElement"").classList.contains('MyClass') )

document.getElementById(""MyElement"").classList.toggle('MyClass');
</code></pre>

<p>Unfortunately, these do not work in Internet Explorer prior to v10, though there is a <a href=""http://en.wikipedia.org/wiki/Shim_(computing)"" rel=""noreferrer"">shim</a> to add support for it to IE8 and IE9, available from <a href=""https://developer.mozilla.org/en-US/docs/DOM/element.classList"" rel=""noreferrer"">this page</a>. It is, though, getting more and more <a href=""http://caniuse.com/#feat=classlist"" rel=""noreferrer"">supported</a>.</p>

<h2>Simple cross-browser solution</h2>

<p>The standard JavaScript way to select an element is using <a href=""https://developer.mozilla.org/en-US/docs/DOM/document.getElementById"" rel=""noreferrer""><code>document.getElementById(""Id"")</code></a>, which is what the following examples use - you can of course obtain elements in other ways, and in the right situation may simply use <code>this</code> instead - however, going into detail on this is beyond the scope of the answer.</p>

<h3>To change all classes for an element:</h3>

<p>To replace all existing classes with one or more new classes, set the className attribute:</p>

<pre><code>document.getElementById(""MyElement"").className = ""MyClass"";
</code></pre>

<p>(You can use a space-delimited list to apply multiple classes.)</p>

<h3>To add an additional class to an element:</h3>

<p>To add a class to an element, without removing/affecting existing values, append a space and the new classname, like so:</p>

<pre><code>document.getElementById(""MyElement"").className += "" MyClass"";
</code></pre>

<h3>To remove a class from an element:</h3>

<p>To remove a single class to an element, without affecting other potential classes, a simple regex replace is required:</p>

<pre><code>document.getElementById(""MyElement"").className =
   document.getElementById(""MyElement"").className.replace
      ( /(?:^|\s)MyClass(?!\S)/g , '' )
/* Code wrapped for readability - above is all one statement */
</code></pre>

<p>An explanation of this regex is as follows:</p>

<pre><code>(?:^|\s) # Match the start of the string, or any single whitespace character

MyClass  # The literal text for the classname to remove

(?!\S)   # Negative lookahead to verify the above is the whole classname
         # Ensures there is no non-space character following
         # (i.e. must be end of string or a space)
</code></pre>

<p>The <code>g</code> flag tells the replace to repeat as required, in case the class name has been added multiple times.</p>

<h3>To check if a class is already applied to an element:</h3>

<p>The same regex used above for removing a class can also be used as a check as to whether a particular class exists:</p>

<pre><code>if ( document.getElementById(""MyElement"").className.match(/(?:^|\s)MyClass(?!\S)/) )
</code></pre>

<p><br/></p>

<h3>Assigning these actions to onclick events:</h3>

<p>Whilst it is possible to write JavaScript directly inside the HTML event attributes (such as <code>onclick=""this.className+=' MyClass'""</code>) this is not recommended behaviour. Especially on larger applications, more maintainable code is achieved by separating HTML markup from JavaScript interaction logic.</p>

<p>The first step to achieving this is by creating a function, and calling the function in the onclick attribute, for example:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
    function changeClass()
    {
        // Code examples from above
    }
&lt;/script&gt;
...
&lt;button onclick=""changeClass()""&gt;My Button&lt;/button&gt;
</code></pre>

<p><sub><em>(It is not required to have this code in script tags, this is simply for brevity of example, and including the JavaScript in a distinct file may be more appropriate.)</em></sub></p>

<p>The second step is to move the onclick event out of the HTML and into JavaScript, for example using <a href=""https://developer.mozilla.org/en-US/docs/DOM/element.addEventListener"" rel=""noreferrer"">addEventListener</a></p>

<pre><code>&lt;script type=""text/javascript""&gt;
    function changeClass()
    {
        // Code examples from above
    }

    window.onload = function()
    {
        document.getElementById(""MyElement"").addEventListener( 'click', changeClass);
    }
&lt;/script&gt;
...
&lt;button id=""MyElement""&gt;My Button&lt;/button&gt;
</code></pre>

<p>(Note that the window.onload part is required so that the contents of that function are executed <em>after</em> the HTML has finished loading - without this, the MyElement might not exist when the JavaScript code is called, so that line would fail.)</p>

<p><br/></p>

<h2>JavaScript Frameworks and Libraries</h2>

<p>The above code is all in standard JavaScript, however it is common practise to use either a framework or a library to simplify common tasks, as well as benefit from fixed bugs and edge cases that you might not think of when writing your code.</p>

<p>Whilst some people consider it overkill to add a ~50&nbsp;KB framework for simply changing a class, if you are doing any substantial amount of JavaScript work, or anything that might have unusual cross-browser behaviour, it is well worth considering.</p>

<p><em>(Very roughly, a library is a set of tools designed for a specific task, whilst a framework generally contains multiple libraries and performs a complete set of duties.)</em></p>

<p>The examples above have been reproduced below using <a href=""http://jquery.com"" rel=""noreferrer"">jQuery</a>, probably the most commonly used JavaScript library (though there are others worth investigating too).</p>

<p>(Note that <code>$</code> here is the jQuery object.)</p>

<h3>Changing Classes with jQuery:</h3>

<pre><code>$('#MyElement').addClass('MyClass');

$('#MyElement').removeClass('MyClass');

if ( $('#MyElement').hasClass('MyClass') )
</code></pre>

<p>In addition, jQuery provides a shortcut for adding a class if it doesn't apply, or removing a class that does:</p>

<pre><code>$('#MyElement').toggleClass('MyClass');
</code></pre>

<p><br/></p>

<h3>Assigning a function to a click event with jQuery:</h3>

<pre><code>$('#MyElement').click(changeClass);
</code></pre>

<p>or, without needing an id:</p>

<pre><code>$(':button:contains(My Button)').click(changeClass);
</code></pre>

<p><br/></p>
","196038"
"How to append something to an array?","1948330","","<p>How do I append an object (such as a string or number) to an array in JavaScript?          </p>
","<p>Use the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push"" rel=""nofollow noreferrer""><code>push()</code></a> function to append to an array:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>// initialize array
var arr = [
    ""Hi"",
    ""Hello"",
    ""Bonjour""
];

// append new value to the array
arr.push(""Hola"");

console.log(arr);</code></pre>
</div>
</div>
</p>

<p>Will print</p>

<pre><code>[""Hi"", ""Hello"", ""Bonjour"", ""Hola""]
</code></pre>

<hr>

<p>You can use the <code>push()</code> function to append more than one value to an array in a single call:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>// initialize array
var arr = [ ""Hi"", ""Hello"", ""Bonjour"", ""Hola"" ];

// append multiple values to the array
arr.push(""Salut"", ""Hey"");

// display all values
for (var i = 0; i &lt; arr.length; i++) {
    console.log(arr[i]);
}</code></pre>
</div>
</div>
</p>

<p>Will print</p>

<pre><code>Hi
Hello
Bonjour
Hola 
Salut
Hey
</code></pre>

<hr>

<p><strong>Update</strong></p>

<p>If you want to add the items of one array to another array, you can use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat"" rel=""nofollow noreferrer""><code>firstArray.concat(secondArray)</code></a>:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var arr = [
    ""apple"",
    ""banana"",
    ""cherry""
];

arr = arr.concat([
    ""dragonfruit"",
    ""elderberry"",
    ""fig""
]);

console.log(arr);</code></pre>
</div>
</div>
</p>

<p>Will print</p>

<pre><code>[""apple"", ""banana"", ""cherry"", ""dragonfruit"", ""elderberry"", ""fig""]
</code></pre>
","351421"
"How can you validate an email address in JavaScript?","1927691","","<p>How can an email address be validated in JavaScript?</p>
","<p>Using <a href=""http://en.wikipedia.org/wiki/Regular_expression"" rel=""noreferrer"">regular expressions</a> is probably the best way. You can see a bunch of tests <a href=""http://jsfiddle.net/ghvj4gy9/embedded/result,js/"" rel=""noreferrer"">here</a> (taken from <a href=""https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/LayoutTests/fast/forms/resources/ValidityState-typeMismatch-email.js&amp;sq=package:chromium&amp;type=cs"" rel=""noreferrer"">chromium</a>)</p>

<pre><code>function validateEmail(email) {
    var re = /^(([^&lt;&gt;()\[\]\\.,;:\s@""]+(\.[^&lt;&gt;()\[\]\\.,;:\s@""]+)*)|("".+""))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(email.toLowerCase());
}
</code></pre>

<p>Here's the example of regular expresion that accepts unicode:</p>

<pre><code>var re = /^(([^&lt;&gt;()\[\]\.,;:\s@\""]+(\.[^&lt;&gt;()\[\]\.,;:\s@\""]+)*)|(\"".+\""))@(([^&lt;&gt;()[\]\.,;:\s@\""]+\.)+[^&lt;&gt;()[\]\.,;:\s@\""]{2,})$/i;
</code></pre>

<p>But keep in mind that one should not rely only upon JavaScript validation. JavaScript can  easily be disabled. This should be validated on the server side as well.</p>

<p>Here's an example of the above in action:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function validateEmail(email) {
  var re = /^(([^&lt;&gt;()[\]\\.,;:\s@\""]+(\.[^&lt;&gt;()[\]\\.,;:\s@\""]+)*)|(\"".+\""))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
  return re.test(email);
}

function validate() {
  $(""#result"").text("""");
  var email = $(""#email"").val();
  if (validateEmail(email)) {
    $(""#result"").text(email + "" is valid :)"");
    $(""#result"").css(""color"", ""green"");
  } else {
    $(""#result"").text(email + "" is not valid :("");
    $(""#result"").css(""color"", ""red"");
  }
  return false;
}

$(""#validate"").bind(""click"", validate);</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;

&lt;form&gt;
  &lt;p&gt;Enter an email address:&lt;/p&gt;
  &lt;input id='email'&gt;
  &lt;button type='submit' id='validate'&gt;Validate!&lt;/button&gt;
&lt;/form&gt;

&lt;h2 id='result'&gt;&lt;/h2&gt;</code></pre>
</div>
</div>
</p>
","46181"
"How to format a JavaScript date","1879176","","<p>How can I format a JavaScript date object to print as ""10-Aug-2010""?</p>
","<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function formatDate(date) {
  var monthNames = [
    ""January"", ""February"", ""March"",
    ""April"", ""May"", ""June"", ""July"",
    ""August"", ""September"", ""October"",
    ""November"", ""December""
  ];

  var day = date.getDate();
  var monthIndex = date.getMonth();
  var year = date.getFullYear();

  return day + ' ' + monthNames[monthIndex] + ' ' + year;
}

console.log(formatDate(new Date()));  // show current date-time in console</code></pre>
</div>
</div>
</p>

<p>You can edit the array <code>monthNames</code> to use Jan, Feb, Mar, etc..</p>
","3552493"
"How can I refresh a page with jQuery?","1835078","","<p>How can I refresh a page with jQuery?</p>
","<p>Use <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Location/reload"" rel=""noreferrer""><code>location.reload()</code></a>:</p>

<pre><code>$('#something').click(function() {
    location.reload();
});
</code></pre>

<p>The <code>reload()</code> function takes an optional parameter that can be set to <code>true</code> to force a reload from the server rather than the cache. The parameter defaults to <code>false</code>, so by default the page may reload from the browser's cache.</p>
","5404869"
"How do you check for an empty string in JavaScript?","1822057","","<p>I saw this <a href=""https://stackoverflow.com/questions/10230/checking-for-string-contents-string-length-vs-empty-string"">thread</a>, but I didn't see a JavaScript specific example. Is there a simple <code>string.Empty</code> available in JavaScript, or is it just a case of checking for <code>""""</code>?</p>
","<p>If you just want to check whether there's any value, you can do </p>

<pre><code>if (strValue) {
    //do something
}
</code></pre>

<p>If you need to check specifically for an empty string over null, I would think checking against <code>""""</code> is your best bet, using <a href=""http://www.webreference.com/js/column26/stricteq.html"" rel=""noreferrer"">the <code>===</code> operator</a> (so that you know that it is, in fact, a string you're comparing against).</p>
","154068"
"jQuery scroll to element","1787254","","<p>I have this <code>input</code> element:</p>

<pre><code>&lt;input type=""text"" class=""textfield"" value="""" id=""subject"" name=""subject""&gt;
</code></pre>

<p>Then I have some other elements, like other text inputs, textareas, etc.</p>

<p>When the user clicks on that <code>input</code> with <code>#subject</code>, the page should scroll to the last element of the page with a nice animation. It should be a scroll to bottom and not to top.</p>

<p>The last item of the page is a <code>submit</code> button with <code>#submit</code>:</p>

<pre><code>&lt;input type=""submit"" class=""submit"" id=""submit"" name=""submit"" value=""Ok, Done.""&gt;
</code></pre>

<p>The animation should not be too fast and should be fluid.</p>

<p>I am running the latest jQuery version. I prefer to not install any plugin but to use the default jQuery features to achieve this.</p>
","<p>Assuming you have a button with the id <code>button</code>, try this example:</p>

<pre><code>$(""#button"").click(function() {
    $('html, body').animate({
        scrollTop: $(""#elementtoScrollToID"").offset().top
    }, 2000);
});
</code></pre>

<p>I got the code from the article <em><a href=""http://www.abeautifulsite.net/smoothly-scroll-to-an-element-without-a-jquery-plugin-2/"" rel=""noreferrer"">Smoothly scroll to an element without a jQuery plugin</a></em>. And I have tested it on the example below.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;html&gt;
    &lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.5.1/jquery.min.js""&gt;&lt;/script&gt;
    &lt;script&gt;
        $(document).ready(function (){
            $(""#click"").click(function (){
                $('html, body').animate({
                    scrollTop: $(""#div1"").offset().top
                }, 2000);
            });
        });
    &lt;/script&gt;
    &lt;div id=""div1"" style=""height: 1000px; width 100px""&gt;
        Test
    &lt;/div&gt;
    &lt;br/&gt;
    &lt;div id=""div2"" style=""height: 1000px; width 100px""&gt;
        Test 2
    &lt;/div&gt;
    &lt;button id=""click""&gt;Click me&lt;/button&gt;
&lt;/html&gt;</code></pre>
</div>
</div>
</p>
","6677069"
"How can I know which radio button is selected via jQuery?","1756167","","<p>I have two radio buttons and want to post the value of the selected one.
How can I get the value with jQuery?</p>

<p>I can get all of them like this:</p>

<pre><code>$(""form :radio"")
</code></pre>

<p>How do I know which one is selected?</p>
","<p>To get the value of the <strong>selected</strong> <code>radioName</code> item of a form with id <code>myForm</code>:</p>

<pre><code>$('input[name=radioName]:checked', '#myForm').val()
</code></pre>

<p>Here's an example:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>$('#myForm input').on('change', function() {
   alert($('input[name=radioName]:checked', '#myForm').val()); 
});</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;
&lt;form id=""myForm""&gt;
&lt;input type=""radio"" name=""radioName"" value=""1"" /&gt; 1 &lt;br /&gt;
&lt;input type=""radio"" name=""radioName"" value=""2"" /&gt; 2 &lt;br /&gt;
&lt;input type=""radio"" name=""radioName"" value=""3"" /&gt; 3 &lt;br /&gt;
&lt;/form&gt;</code></pre>
</div>
</div>
</p>
","596369"
"How to determine if variable is 'undefined' or 'null'?","1735845","","<p>How do I determine if variable is <code>undefined</code> or <code>null</code>?  My code is as follows:</p>

<pre class=""lang-js prettyprint-override""><code>var EmpName = $(""div#esd-names div#name"").attr('class');
if(EmpName == 'undefined'){
  //DO SOMETHING
};
</code></pre>

<pre class=""lang-html prettyprint-override""><code>&lt;div id=""esd-names""&gt;
  &lt;div id=""name""&gt;&lt;/div&gt;
&lt;/div&gt;
</code></pre>



<p>But if I do this, the JavaScript interpreter halts execution.</p>
","<p>You can use the qualities of the <a href=""http://www.ecma-international.org/ecma-262/6.0/#sec-abstract-equality-comparison"" rel=""noreferrer"">abstract equality operator</a> to do this:</p>

<pre><code>if (variable == null){
    // your code here.
}
</code></pre>

<p>Because <code>null == undefined</code> is true, the above code will catch both <code>null</code> and <code>undefined</code>.</p>
","2647888"
"Parse JSON in JavaScript?","1698450","","<p>I want to parse a JSON string in JavaScript. The response is something like</p>

<pre><code>var response = '{""result"":true,""count"":1}';
</code></pre>

<p>How can I get the values <code>result</code> and <code>count</code> from this?</p>
","<p>Most browsers support <a href=""http://msdn.microsoft.com/en-us/library/cc836466(v=vs.85).aspx"" rel=""noreferrer""><code>JSON.parse()</code></a>, which is defined in ECMA-262 5th Edition (the specification that JavaScript is based on). Its usage is simple:</p>

<pre><code>var json = '{""result"":true,""count"":1}',
    obj = JSON.parse(json);

alert(obj.count);
</code></pre>

<p>For the browsers that don't you can implement it using <a href=""https://github.com/douglascrockford/JSON-js/blob/master/json2.js"" rel=""noreferrer"">json2.js</a>.</p>

<p>As noted in the comments, if you're already using jQuery, there is a <code>$.parseJSON</code> function that maps to <code>JSON.parse</code> if available or a form of <code>eval</code> in older browsers. However, this performs additional, unnecessary checks that are also performed by <code>JSON.parse</code>, so for the best all round performance I'd recommend using it like so:</p>

<pre><code>var json = '{""result"":true,""count"":1}',
    obj = JSON &amp;&amp; JSON.parse(json) || $.parseJSON(json);
</code></pre>

<p>This will ensure you use native <code>JSON.parse</code> immediately, rather than having jQuery perform sanity checks on the string before passing it to the native parsing function.</p>
","4935684"
"Open a URL in a new tab (and not a new window) using JavaScript","1689095","","<p>I'm trying to open a <a href=""http://en.wikipedia.org/wiki/Uniform_Resource_Locator"" rel=""noreferrer"">URL</a> in a new tab, as opposed to a popup window. I've seen related questions where the responses would look something like:</p>

<pre><code>window.open(url,'_blank');
window.open(url);
</code></pre>

<p>But none of them worked for me, the browser still tried to open a popup window.</p>
","<p>Nothing an author can do can choose to open in a new tab instead of a new window. It is a <em>user preference</em>.</p>

<p>CSS3 proposed <a href=""http://www.w3.org/TR/2004/WD-css3-hyperlinks-20040224/#target-new"" rel=""noreferrer"">target-new</a>, but <a href=""http://www.w3.org/TR/2014/NOTE-css3-hyperlinks-20141014/"" rel=""noreferrer"">the specification was abandoned</a>.</p>

<p>The <strong>reverse</strong> is not true; by specifying dimensions for the window in the third argument of <code>window.open</code>, you can trigger a new window when the preference is for tabs.</p>
","4907854"
"Get current URL in JavaScript?","1686111","","<p>I am using jQuery. How do I get the path of the current URL and assign it to a variable?</p>

<p>Example URL:</p>

<pre><code>http://localhost/menuname.de?foo=bar&amp;amp;number=0
</code></pre>
","<p>To get the path, you can use:</p>

<pre><code>var pathname = window.location.pathname; // Returns path only
var url      = window.location.href;     // Returns full URL
</code></pre>
","406208"
"How do I get the current date in JavaScript?","1650955","","<p>How do I get current date in JavaScript?</p>
","<p>Use <code>new Date()</code> to generate a new <code>Date</code> object containing the current date and time.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var today = new Date();
var dd = today.getDate();
var mm = today.getMonth()+1; //January is 0!
var yyyy = today.getFullYear();

if(dd&lt;10) {
    dd = '0'+dd
} 

if(mm&lt;10) {
    mm = '0'+mm
} 

today = mm + '/' + dd + '/' + yyyy;
document.write(today);</code></pre>
</div>
</div>
</p>

<p>This will give you today's date in the format of mm/dd/yyyy.</p>

<p>Simply change <code>today = mm +'/'+ dd +'/'+ yyyy;</code> to whatever format you wish.</p>
","4929629"
"How do I empty an array in JavaScript?","1632421","","<p>Is there a way to empty an array and if so possibly with <code>.remove()</code>?</p>

<p>For instance, </p>

<pre><code>A = [1,2,3,4];
</code></pre>

<p>How can I empty that?</p>
","<p>Ways to clear an existing array <code>A</code>:</p>

<p><strong>Method 1</strong></p>

<p>(this was my original answer to the question)</p>

<pre><code>A = [];
</code></pre>

<p>This code will set the variable <code>A</code> to a new empty array. This is perfect if you don't have <strong>references to the original array <code>A</code></strong> anywhere else because this actually creates a brand new (empty) array. You should be careful with this method because if you have referenced this array from another variable or property, the original array will remain unchanged. Only use this if you only reference the array by its original variable <code>A</code>.</p>

<p>This is also the fastest solution.</p>

<p>This code sample shows the issue you can encounter when using this method:</p>

<pre><code>var arr1 = ['a','b','c','d','e','f'];
var arr2 = arr1;  // Reference arr1 by another variable 
arr1 = [];
console.log(arr2); // Output ['a','b','c','d','e','f']
</code></pre>

<p><strong>Method 2</strong> (as <a href=""https://stackoverflow.com/a/1234337/113570"">suggested</a> by <a href=""https://stackoverflow.com/users/2214/matthew-crumley"">Matthew Crumley</a>)</p>

<pre><code>A.length = 0
</code></pre>

<p>This will clear the existing array by setting its length to 0. Some have argued that this may not work in all implementations of JavaScript, but it turns out that this is not the case. It also works when using ""strict mode"" in ECMAScript 5 because the length property of an array is a read/write property.</p>

<p><strong>Method 3</strong> (as <a href=""https://stackoverflow.com/a/8134354/113570"">suggested</a> by <a href=""https://stackoverflow.com/users/1047275/anthony"">Anthony</a>)</p>

<pre><code>A.splice(0,A.length)
</code></pre>

<p>Using <code>.splice()</code> will work perfectly, but since the <code>.splice()</code> function will return an array with all the removed items, it will actually return a copy of the original array. Benchmarks suggest that this has no effect on performance whatsoever.</p>

<p><strong>Method 4</strong> (as <a href=""https://stackoverflow.com/a/17306971/113570"">suggested</a> by <a href=""https://stackoverflow.com/users/990356/tanguy-k"">tanguy_k</a>)</p>

<pre><code>while(A.length &gt; 0) {
    A.pop();
}
</code></pre>

<p>This solution is not very succinct, and it is also the slowest solution, contrary to earlier benchmarks referenced in the original answer.</p>

<p><strong>Performance</strong></p>

<p>Of all the methods of clearing an <strong><em>existing array</em></strong>, methods 2 and 3 are very similar in performance and are a lot faster than method 4. See this <a href=""http://jsben.ch/#/hyj65"" rel=""noreferrer"">benchmark</a>.</p>

<p>As pointed out by <a href=""https://stackoverflow.com/users/47401/diadistis"">Diadistis</a> in their <a href=""https://stackoverflow.com/a/28548360/113570"">answer</a> below, the original benchmarks that were used to determine the performance of the four methods described above were flawed. The original benchmark reused the cleared array so the second iteration was clearing an array that was already empty.</p>

<p>The following benchmark fixes this flaw: <a href=""http://jsben.ch/#/hyj65"" rel=""noreferrer"">http://jsben.ch/#/hyj65</a>. It clearly shows that methods #2 (length property) and #3 (splice) are the fastest (not counting method #1 which doesn't change the original array).</p>

<hr/>

<p>This has been a hot topic and the cause of a lot of controversy. There are actually many correct answers and because this answer has been marked as the accepted answer for a very long time, I will include all of the methods here. If you vote for this answer, please upvote the other answers that I have referenced as well.</p>
","1232046"
"How to get the children of the $(this) selector?","1622723","","<p>I have a layout similar to this:</p>

<pre><code>&lt;div id=""...""&gt;&lt;img src=""...""&gt;&lt;/div&gt;
</code></pre>

<p>and would like to use a jQuery selector to select the child <code>img</code> inside the <code>div</code> on click.</p>

<p>To get the <code>div</code>, I've got this selector:</p>

<pre><code>$(this)
</code></pre>

<p>How can I get the child <code>img</code> using a selector?</p>
","<p>The jQuery constructor accepts a 2nd parameter called <a href=""http://api.jquery.com/jQuery/#jQuery-selector-context"" rel=""noreferrer""><code>context</code></a> which can be used to override the context of the selection. </p>

<pre><code>jQuery(""img"", this);
</code></pre>

<p>Which is the same as using <a href=""http://api.jquery.com/find"" rel=""noreferrer""><code>.find()</code></a> like this:</p>

<pre><code>jQuery(this).find(""img"");
</code></pre>

<p>If the imgs you desire are <strong>only</strong> direct descendants of the clicked element, you can also use <a href=""http://api.jquery.com/children"" rel=""noreferrer""><code>.children()</code></a>:</p>

<pre><code>jQuery(this).children(""img"");
</code></pre>
","306904"
"Disable/enable an input with jQuery?","1622161","","<pre><code>$input.disabled = true;
</code></pre>

<p>or </p>

<pre><code>$input.disabled = ""disabled"";
</code></pre>

<p>Which is the standard way? And, conversely, how do you enable a disabled input?</p>
","<h2>jQuery 1.6+</h2>

<p>To change the <code>disabled</code> property you should use the <a href=""http://api.jquery.com/prop"" rel=""noreferrer""><code>.prop()</code></a> function.</p>

<pre><code>$(""input"").prop('disabled', true);
$(""input"").prop('disabled', false);
</code></pre>

<h2>jQuery 1.5 and below</h2>

<p>The <code>.prop()</code> function doesn't exist, but <a href=""http://api.jquery.com/attr"" rel=""noreferrer""><code>.attr()</code></a> does similar:</p>

<p>Set the disabled attribute.</p>

<pre><code>$(""input"").attr('disabled','disabled');
</code></pre>

<p>To enable again, the proper method is to use <a href=""//api.jquery.com/removeAttr"" rel=""noreferrer""><code>.removeAttr()</code></a></p>

<pre><code>$(""input"").removeAttr('disabled');
</code></pre>

<h2>In any version of jQuery</h2>

<p>You can always rely on the actual DOM object and is probably a little faster than the other two options if you are only dealing with one element:</p>

<pre><code>// assuming an event handler thus 'this'
this.disabled = true;
</code></pre>

<p>The advantage to using the <code>.prop()</code> or <code>.attr()</code> methods is that you can set the property for a bunch of selected items.</p>

<hr>

<p><strong>Note:</strong> In 1.6 there is a <a href=""//api.jquery.com/removeProp"" rel=""noreferrer""><code>.removeProp()</code></a> method that sounds a lot like <code>removeAttr()</code>, but it <strong>SHOULD NOT BE USED</strong> on native properties like <code>'disabled'</code>  Excerpt from the documentation:</p>

<blockquote>
  <p>Note: Do not use this method to remove native properties such as checked, disabled, or selected. This will remove the property completely and, once removed, cannot be added again to element. Use .prop() to set these properties to false instead.</p>
</blockquote>

<p>In fact, I doubt there are many legitimate uses for this method, boolean props are done in such a way that you should set them to false instead of ""removing"" them like their ""attribute"" counterparts in 1.5</p>
","1414366"
"What is the JavaScript version of sleep()?","1609021","","<p>Is there a better way to engineer a <code>sleep</code> in JavaScript than the following <code>pausecomp</code> function (<a href=""http://www.sean.co.uk/a/webdesign/javascriptdelay.shtm"" rel=""noreferrer"">taken from here</a>)?</p>

<pre><code>function pausecomp(millis)
{
    var date = new Date();
    var curDate = null;
    do { curDate = new Date(); }
    while(curDate-date &lt; millis);
}
</code></pre>

<p>This is not a duplicate of <a href=""https://stackoverflow.com/questions/758688/sleep-in-javascript"">Sleep in Javascript - delay between actions</a>; I want a <em>real sleep</em> in the middle of a function, and not a delay before a piece of code executes.</p>
","<h2>2017 update</h2>

<p>Since 2009 when this question was asked, JavaScript has evolved significantly. All other answers are now obsolete or overly complicated. Here is the current best practice:</p>

<pre><code>function sleep(ms) {
  return new Promise(resolve =&gt; setTimeout(resolve, ms));
}

async function demo() {
  console.log('Taking a break...');
  await sleep(2000);
  console.log('Two second later');
}

demo();
</code></pre>

<h3>This is it. <code>await sleep(&lt;duration&gt;)</code>.</h3>

<p>You can try this code live <a href=""https://runkit.com/dandv/57f770a7aed68d0014e7b660"" rel=""noreferrer"">on Runkit</a>. Note that,</p>

<ol>
<li><code>await</code> can only be executed in functions prefixed with the <code>async</code> keyword. Runkit wraps your code in an async function before executing it.</li>
<li><code>await</code> only pauses the current <code>async</code> function</li>
</ol>

<p>Two new JavaScript features helped write this actual ""sleep"" function:</p>

<ul>
<li><a href=""https://ponyfoo.com/articles/es6-promises-in-depth"" rel=""noreferrer"">Promises, a native feature of ES2015</a> (aka ES6). We also use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions"" rel=""noreferrer"">arrow functions</a> in the definition of the sleep function.</li>
<li>The <a href=""https://github.com/tc39/ecmascript-asyncawait"" rel=""noreferrer"">upcoming</a> <a href=""https://ponyfoo.com/articles/understanding-javascript-async-await"" rel=""noreferrer""><code>async/await</code></a> feature lets the code explicitly wait for a promise to settle.</li>
</ul>

<h2>Compatibility</h2>

<ul>
<li>promises are supported <a href=""http://node.green/#Promise"" rel=""noreferrer"">in Node v0.12+</a> and <a href=""http://caniuse.com/#feat=promises"" rel=""noreferrer"">widely supported in browsers</a>, except IE</li>
<li><code>async</code>/<code>await</code> landed in V8 and has been <a href=""https://developers.google.com/web/fundamentals/getting-started/primers/async-functions"" rel=""noreferrer"">enabled by default since Chrome 55</a>

<ul>
<li>it landed <a href=""https://blog.risingstack.com/async-await-node-js-7-nightly/"" rel=""noreferrer"">in Node 7 in October 2016</a></li>
<li>has also <a href=""https://blog.nightly.mozilla.org/2016/11/01/async-await-support-in-firefox/"" rel=""noreferrer"">landed in Firefox nightly in Nov 2016-Nov</a></li>
</ul></li>
</ul>

<p>If for some reason you're using Node older than 7, or are targeting old browsers, <code>async</code>/<code>await</code> can still be used via <a href=""https://babeljs.io/"" rel=""noreferrer"">Babel</a> (a tool that will <a href=""https://www.stevefenton.co.uk/2012/11/compiling-vs-transpiling/"" rel=""noreferrer"">transpile</a> JavaScript + new features into plain old JavaScript), with the <a href=""https://babeljs.io/docs/plugins/transform-async-to-generator/"" rel=""noreferrer""><code>transform-async-to-generator</code> plugin</a>. Run</p>

<pre><code>npm install babel-cli --save
</code></pre>

<p>Create <code>.babelrc</code> with:</p>

<pre><code>{
  ""plugins"": [
    ""transform-async-to-generator"",
  ]
}
</code></pre>

<p>Then run your code with</p>

<pre><code>node_modules/babel-cli/bin/babel-node.js sleep.js
</code></pre>

<p>But again, you don't need this if you're using Node 7 or later, or if you're targeting modern browsers.</p>
","39914235"
"Get selected text from a drop-down list (select box) using jQuery","1607385","","<p>How can I get a drop-down list selected text in jQuery, not using the selected value?</p>
","<pre><code>$(""#yourdropdownid option:selected"").text();
</code></pre>
","1643247"
"How to check for ""undefined"" in JavaScript?","1543748","","<p>What is the most appropriate way to test if a variable is undefined in JavaScript? I've seen several possible ways:</p>

<pre><code>if (window.myVariable)
</code></pre>

<p>Or</p>

<pre><code>if (typeof(myVariable) != ""undefined"")
</code></pre>

<p>Or</p>

<pre><code>if (myVariable) //This throws an error if undefined. Should this be in Try/Catch?
</code></pre>
","<p>If you are interested in finding out whether a variable has been declared regardless of its value, then using the <code>in</code> operator is the safest way to go. Consider this example.</p>

<pre><code>// global scope
var theFu; // theFu has been declared, but its value is undefined
typeof theFu; // ""undefined""
</code></pre>

<p>But this may not be the intended result for some cases, since the variable or property was declared but just not initialized. Use the <code>in</code> operator for a more robust check.</p>

<pre><code>""theFu"" in window; // true
""theFoo"" in window; // false
</code></pre>

<p>If you are interested in knowing whether the variable hasn't been declared or has the value <code>undefined</code>, then use the <code>typeof</code> operator.</p>

<pre><code>if (typeof myVar != 'undefined')
</code></pre>

<p>The <code>typeof</code> operator is guaranteed to return a string. Direct comparisons against <code>undefined</code> are troublesome as <code>undefined</code> can be overwritten. </p>

<pre><code>window.undefined = ""omg"";
""omg"" == undefined // true
</code></pre>

<p>As @CMS pointed out, this has been patched in ECMAScript 5th ed., and <code>undefined</code> is non-writable.</p>

<p><code>if (window.myVar)</code> will also include these falsy values, so it's not very robust:</p>

<pre>
false
0
""""
NaN
null
undefined
</pre>

<p>Thanks to @CMS for pointing out that your third case - <code>if (myVariable)</code> can also throw an error in two cases. The first is when the variable hasn't been defined which throws a <code>ReferenceError</code>. </p>

<pre><code>// abc was never declared.
if (abc) {
    // ReferenceError: abc is not defined
} 
</code></pre>

<p>The other case is when the variable has been defined, but has a getter function which throws an error when invoked. For example,</p>

<pre><code>// or it's a property that can throw an error
Object.defineProperty(window, ""myVariable"", { 
    get: function() { throw new Error(""W00t?""); }, 
    set: undefined 
});
if (myVariable) {
    // Error: W00t?
}
</code></pre>
","3390426"
"How do I remove a property from a JavaScript object?","1490741","","<p>Say I create an object as follows:</p>

<pre><code>var myObject = {
    ""ircEvent"": ""PRIVMSG"",
    ""method"": ""newURI"",
    ""regex"": ""^http://.*""
};
</code></pre>

<p>What is the best way to remove the property <code>regex</code> to end up with new <code>myObject</code> as follows?</p>

<pre><code>var myObject = {
    ""ircEvent"": ""PRIVMSG"",
    ""method"": ""newURI""
};
</code></pre>
","<p>Like this:</p>

<pre><code>delete myObject.regex;
// or,
delete myObject['regex'];
// or,
var prop = ""regex"";
delete myObject[prop];
</code></pre>

<p>Demo
<div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var myObject = {
    ""ircEvent"": ""PRIVMSG"",
    ""method"": ""newURI"",
    ""regex"": ""^http://.*""
};
delete myObject.regex;

console.log(myObject);</code></pre>
</div>
</div>
</p>

<p>For anyone interested in reading more about it, Stack Overflow user <a href=""https://stackoverflow.com/users/130652/kangax"">kangax</a> has written an incredibly in-depth blog post about the <code>delete</code> statement on their blog, <em><a href=""http://perfectionkills.com/understanding-delete/"" rel=""noreferrer"">Understanding delete</a></em>. It is highly recommended.</p>
","208106"
"What is the most efficient way to deep clone an object in JavaScript?","1460371","","<p>What is the most efficient way to clone a JavaScript object? I've seen <code>obj = eval(uneval(o));</code> being used, but <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/uneval"" rel=""noreferrer"">that's non-standard and only supported by Firefox</a>.<br/><br/> I've done things like <code>obj = JSON.parse(JSON.stringify(o));</code> but question the efficiency. <br/><br/> I've also seen recursive copying functions with various flaws.
<br />
I'm surprised no canonical solution exists.</p>
","<blockquote>
  <p><strong>Note:</strong> This is a reply to another answer, not a proper response to this question. If you wish to have fast object cloning please follow <a href=""https://stackoverflow.com/a/5344074/1438393"">Corban's advice in their answer</a> to this question.</p>
</blockquote>

<hr>

<p>I want to note that the <a href=""http://api.jquery.com/clone/"" rel=""noreferrer""><code>.clone()</code></a> method in <strong>jQuery</strong> only clones DOM elements. In order to clone JavaScript objects, you would do:</p>

<pre><code>// Shallow copy
var newObject = jQuery.extend({}, oldObject);

// Deep copy
var newObject = jQuery.extend(true, {}, oldObject);
</code></pre>

<p>More information can be found in the <a href=""http://api.jquery.com/jQuery.extend/"" rel=""noreferrer"">jQuery documentation</a>.</p>

<p>I also want to note that the deep copy is actually much smarter than what is shown above – it's able to avoid many traps (trying to deep extend a DOM element, for example). It's used frequently in jQuery core and in plugins to great effect.</p>
","122704"
"Creating a div element in jQuery","1438721","","<p>How do I create a <code>div</code> element in <strong>jQuery</strong>?</p>
","<p>You can use <code>append</code> (to add at last position of parent) or <code>prepend</code> (to add at fist position of parent):</p>

<pre><code>$('#parent').append('&lt;div&gt;hello&lt;/div&gt;');    
// or
$('&lt;div&gt;hello&lt;/div&gt;').appendTo('#parent');
</code></pre>

<p>Alternatively, you can use the <code>.html()</code> or <code>.add()</code> as mentioned in a <a href=""https://stackoverflow.com/a/867941/59087"">different answer</a>.</p>


","867981"
"How can I create a two dimensional array in JavaScript?","1398707","","<p>I have been reading online and some places say it isn't possible, some say it is and then give an example and others refute the example, etc. </p>

<ol>
<li><p>How do I declare a 2 dimensional array in JavaScript? (assuming it's possible) </p></li>
<li><p>How would I access its members? (<code>myArray[0][1]</code> or <code>myArray[0,1]</code>?)</p></li>
</ol>
","<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var items = [
  [1, 2],
  [3, 4],
  [5, 6]
];
console.log(items[0][0]); // 1
console.log(items);</code></pre>
</div>
</div>
</p>
","966234"
"Validate decimal numbers in JavaScript - IsNumeric()","1388372","","<p>What's the cleanest, most effective way to validate decimal numbers in JavaScript?</p>

<p>Bonus points for:</p>

<ol>
<li>Clarity. Solution should be clean and simple.</li>
<li>Cross-platform.</li>
</ol>

<p>Test cases:</p>

<pre><code>01. IsNumeric('-1')      =&gt; true
02. IsNumeric('-1.5')    =&gt; true
03. IsNumeric('0')       =&gt; true
04. IsNumeric('0.42')    =&gt; true
05. IsNumeric('.42')     =&gt; true
06. IsNumeric('99,999')  =&gt; false
07. IsNumeric('0x89f')   =&gt; false
08. IsNumeric('#abcdef') =&gt; false
09. IsNumeric('1.2.3')   =&gt; false
10. IsNumeric('')        =&gt; false
11. IsNumeric('blah')    =&gt; false
</code></pre>
","<p><a href=""https://stackoverflow.com/questions/18082/validate-numbers-in-javascript-isnumeric/174921#174921"">@Joel's answer</a> is pretty close, but it will fail in the following cases:</p>

<pre><code>// Whitespace strings:
IsNumeric(' ') == true;
IsNumeric('\t\t') == true;
IsNumeric('\n\r') == true;

// Number literals:
IsNumeric(-1) == false;
IsNumeric(0) == false;
IsNumeric(1.1) == false;
IsNumeric(8e5) == false;
</code></pre>

<p>Some time ago I had to implement an <code>IsNumeric</code> function, to find out if a variable contained a numeric value, <strong>regardless of its type</strong>, it could be a <code>String</code> containing a numeric value (I had to consider also exponential notation, etc.), a <code>Number</code> object, virtually anything could be passed to that function, I couldn't make any type assumptions,  taking care of type coercion (eg. <code>+true == 1;</code> but <code>true</code> shouldn't be considered as <code>""numeric""</code>).</p>

<p>I think is worth sharing this set of <a href=""http://run.plnkr.co/plunks/93FPpacuIcXqqKMecLdk/"" rel=""noreferrer""><strong>+30 unit tests</strong></a> (<a href=""http://dl.getdropbox.com/u/35146/js/tests/isNumber.html"" rel=""noreferrer"">old link</a>) made to numerous function implementations, and also share the one that passes all my tests:</p>

<pre><code>function isNumeric(n) {
  return !isNaN(parseFloat(n)) &amp;&amp; isFinite(n);
}
</code></pre>

<p><strong>P.S.</strong> <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN"" rel=""noreferrer"">isNaN</a> &amp; <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite"" rel=""noreferrer"">isFinite</a> have a confusing behavior due to forced conversion to number. In ES6, <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN"" rel=""noreferrer"">Number.isNaN</a> &amp; <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite"" rel=""noreferrer"">Number.isFinite</a> would fix these issues. Keep that in mind when using them. </p>

<hr>

<p><strong>Update</strong> : 
<a href=""https://github.com/jquery/jquery/blob/2.2-stable/src/core.js#L215"" rel=""noreferrer"">Here's how jQuery does it now (2.2-stable)</a> : </p>

<pre><code>isNumeric: function( obj ) {
    var realStringObj = obj &amp;&amp; obj.toString();
    return !jQuery.isArray( obj ) &amp;&amp; ( realStringObj - parseFloat( realStringObj ) + 1 ) &gt;= 0;
}
</code></pre>

<p><strong>Update</strong> :
<a href=""https://github.com/angular/angular/blob/4.3.x/packages/common/src/pipes/number_pipe.ts#L172"" rel=""noreferrer"">Angular 4.3</a> :</p>

<pre><code>export function isNumeric(value: any): boolean {
  return !isNaN(value - parseFloat(value));
}
</code></pre>
","1830844"
"jQuery AJAX submit form","1357830","","<p>I have a form with name <strong><em><code>orderproductForm</code></em></strong> and an undefined number of inputs.</p>

<p>I want to do some kind of jQuery.get or ajax or anything like that that would call a page through Ajax, and send along all the inputs of the form <strong><em><code>orderproductForm</code></em></strong>.</p>

<p>I suppose one way would be to do something like</p>

<pre><code>jQuery.get(""myurl"",
          {action : document.orderproductForm.action.value,
           cartproductid : document.orderproductForm.cartproductid.value,
           productid : document.orderproductForm.productid.value,
           ...
</code></pre>

<p>However I do not know exactly all the form inputs. Is there a feature, function or something that would just send ALL the form inputs?</p>

<p>Thanks</p>
","<p>You can use the ajaxForm/ajaxSubmit functions from <a href=""https://jquery-form.github.io/form/"" rel=""noreferrer"">Ajax Form Plugin</a> or the jQuery serialize function.</p>

<p><strong>AjaxForm</strong>:</p>

<pre><code>$(""#theForm"").ajaxForm({url: 'server.php', type: 'post'})
</code></pre>

<p>or</p>

<pre><code>$(""#theForm"").ajaxSubmit({url: 'server.php', type: 'post'})
</code></pre>

<p>ajaxForm will send when the submit button is pressed. ajaxSubmit sends immediately.</p>

<p><strong>Serialize</strong>:</p>

<pre><code>$.get('server.php?' + $('#theForm').serialize())

$.post('server.php', $('#theForm').serialize())
</code></pre>

<p><a href=""http://docs.jquery.com/Ajax/serialize"" rel=""noreferrer"">AJAX serialization documentation is here</a>.</p>
","1960245"
"Where can I find documentation on formatting a date in JavaScript?","1353181","","<p>I noticed that JavaScript's <code>new Date()</code> function is very smart in accepting dates in several formats.</p>

<pre><code>Xmas95 = new Date(""25 Dec, 1995 23:15:00"")
Xmas95 = new Date(""2009 06 12,12:52:39"")
Xmas95 = new Date(""20 09 2006,12:52:39"")
</code></pre>

<p>I could not find documentation anywhere showing all the valid string formats while calling <code>new Date()</code> function.</p>

<p>This is for converting a string to a date. If we look at the opposite side, that is, converting a date object to a string, until now I was under the impression that JavaScript doesn't have a built-in API to format a date object into a string.</p>

<blockquote>
  <p><strong>Editor's note:</strong> The following approach is the asker's attempt that worked on a particular browser but does <em>not</em> work in general; <strong>see the answers on this page</strong> to see some actual solutions.</p>
</blockquote>

<p>Today, I played with the <code>toString()</code> method on the date object and surprisingly it serves the purpose of formatting date to strings.</p>

<pre><code>var d1 = new Date();
d1.toString('yyyy-MM-dd');       //Returns ""2009-06-29"" in Internet Explorer, but not Firefox or Chrome
d1.toString('dddd, MMMM ,yyyy')  //Returns ""Monday, June 29,2009"" in Internet Explorer, but not Firefox or Chrome
</code></pre>

<p>Also here I couldn't find any documentation on all the ways we can format the date object into a string.</p>

<p>Where is the documentation which lists the format specifiers supported by the <code>Date()</code> object?</p>
","<p>I love <em><a href=""http://www.webdevelopersnotes.com/tips/html/10_ways_to_format_time_and_date_using_javascript.php3"" rel=""noreferrer"">10 ways to format time and date using JavaScript</a></em> and <em><a href=""http://www.elated.com/articles/working-with-dates/"" rel=""noreferrer"">Working with Dates</a></em>.</p>

<p>Basically, you have three methods and you have to combine the strings for yourself:</p>

<pre><code>getDate() // Returns the date
getMonth() // Returns the month
getFullYear() // Returns the year
</code></pre>

<p>Example:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
    var d = new Date();
    var curr_date = d.getDate();
    var curr_month = d.getMonth() + 1; //Months are zero based
    var curr_year = d.getFullYear();
    console.log(curr_date + ""-"" + curr_month + ""-"" + curr_year);
&lt;/script&gt;
</code></pre>
","1056730"
"Round to at most 2 decimal places (only if necessary)","1353052","","<p>I'd like to round at most 2 decimal places, but <em>only if necessary</em>.</p>

<p>Input:</p>

<pre><code>10
1.7777777
9.1
</code></pre>

<p>Output:</p>

<pre><code>10
1.78
9.1
</code></pre>

<p>How can I do this in JavaScript? </p>
","<p>Use <code>Math.round(num * 100) / 100</code></p>
","11832950"
"How to get the value from the GET parameters?","1332885","","<p>I have a URL with some GET parameters as follows:</p>

<pre><code>www.test.com/t.html?a=1&amp;b=3&amp;c=m2-m3-m4-m5 
</code></pre>

<p>I need to get the whole value of <code>c</code>. I tried to read the URL, but I got only <code>m2</code>. How do I do this using JavaScript?</p>
","<p>JavaScript itself has nothing built in for handling query string parameters. </p>

<p>In a (modern) browser you can use the (experimental at time of writing) <a href=""https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams"" rel=""noreferrer""><code>URL</code> object</a>;</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var url_string = ""http://www.example.com/t.html?a=1&amp;b=3&amp;c=m2-m3-m4-m5""; //window.location.href
var url = new URL(url_string);
var c = url.searchParams.get(""c"");
console.log(c);</code></pre>
</div>
</div>
</p>

<hr>

<p>For older browsers, you can use <a href=""https://github.com/github/url-polyfill"" rel=""noreferrer"">this polyfill</a> or the code from the original version of this answer that predates <code>URL</code>:</p>

<p>You could access <code>location.search</code>, which would give you from the <code>?</code> character on to the end of the URL or the start of the fragment identifier (#foo), whichever comes first.</p>

<p>Then you can parse it with this:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function parse_query_string(query) {
  var vars = query.split(""&amp;"");
  var query_string = {};
  for (var i = 0; i &lt; vars.length; i++) {
    var pair = vars[i].split(""="");
    // If first entry with this name
    if (typeof query_string[pair[0]] === ""undefined"") {
      query_string[pair[0]] = decodeURIComponent(pair[1]);
      // If second entry with this name
    } else if (typeof query_string[pair[0]] === ""string"") {
      var arr = [query_string[pair[0]], decodeURIComponent(pair[1])];
      query_string[pair[0]] = arr;
      // If third or later entry with this name
    } else {
      query_string[pair[0]].push(decodeURIComponent(pair[1]));
    }
  }
  return query_string;
}

var query_string = ""a=1&amp;b=3&amp;c=m2-m3-m4-m5"";
var parsed_qs = parse_query_string(query_string);
console.log(parsed_qs.c);</code></pre>
</div>
</div>
</p>

<p>You can get the query string from the URL of the current page with:</p>

<pre><code>var query = window.location.search.substring(1);
var qs = parse_query_string(query);
</code></pre>
","979995"
"How do I get the value of text input field using JavaScript?","1328006","","<p>I am working on a search with JavaScript. I would use a form, but it messes up something else on my page. I have this input text field:</p>

<pre><code>&lt;input name=""searchTxt"" type=""text"" maxlength=""512"" id=""searchTxt"" class=""searchField""/&gt;
</code></pre>

<p>And this is my JavaScript code:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
  function searchURL(){
    window.location = ""http://www.myurl.com/search/"" + (input text value);
  }
&lt;/script&gt;
</code></pre>

<p>How do I get the value from the text field into JavaScript?</p>
","<p>There are various methods to get an input textbox value directly (without wrapping the input element inside a form element):</p>

<p><strong>Method 1:</strong></p>

<blockquote>
  <p><code>document.getElementById('textbox_id').value</code> to get the value of
  desired box</p>
  
  <p><strong>For example,</strong> <code>document.getElementById(""searchTxt"").value;</code></p>
</blockquote>

<p>&nbsp;</p>

<blockquote>
  <p><strong>Note:</strong> Method 2,3,4 and 6 returns a collection of elements, so use [whole_number] to get the desired occurrence. For the first element, use [0],
  for the second one use <a href=""http://www.quirksmode.org/dom/w3c_core.html"" rel=""noreferrer"">1</a>, and so on...</p>
</blockquote>

<p><strong>Method 2:</strong></p>

<blockquote>
  <p>Use
  <code>document.getElementsByClassName('class_name')[whole_number].value</code> which returns a Live HTMLCollection</p>
  
  <p><strong>For example,</strong> <code>document.getElementsByClassName(""searchField"")[0].value;</code> if this is the first textbox in your page.</p>
</blockquote>

<p><strong>Method 3:</strong></p>

<blockquote>
  <p>Use <code>document.getElementsByTagName('tag_name')[whole_number].value</code> which also returns a live HTMLCollection</p>
  
  <p><strong>For example,</strong> <code>document.getElementsByTagName(""input"")[0].value;</code>, if this is the first textbox in your page.</p>
</blockquote>

<p><strong>Method 4:</strong></p>

<blockquote>
  <p><code>document.getElementsByName('name')[whole_number].value</code> which also >returns a live NodeList</p>
  
  <p><strong>For example,</strong> <code>document.getElementsByName(""searchTxt"")[0].value;</code> if this is the first textbox with name 'searchtext' in your page.</p>
</blockquote>

<p><strong>Method 5:</strong></p>

<blockquote>
  <p>Use the powerful <code>document.querySelector('selector').value</code> which uses a CSS selector to select the element</p>
  
  <p><strong>For example,</strong> <code>document.querySelector('#searchTxt').value;</code> selected by id <br/>
  <code>document.querySelector('.searchField').value;</code> selected by class <br/>
          <code>document.querySelector('input').value;</code> selected by tagname <br/>
          <code>document.querySelector('[name=""searchTxt""]').value;</code> selected by name</p>
</blockquote>

<p><strong>Method 6:</strong></p>

<blockquote>
  <p><code>document.querySelectorAll('selector')[whole_number].value</code> which also uses a CSS selector to select elements, but it returns all elements with that selector as a static Nodelist.</p>
  
  <p><strong>For example,</strong> <code>document.querySelectorAll('#searchTxt')[0].value;</code>  selected by id <br/>
   <code>document.querySelectorAll('.searchField')[0].value;</code> selected by class <br/>
   <code>document.querySelectorAll('input')[0].value;</code>        selected by tagname <br/>
   <code>document.querySelectorAll('[name=""searchTxt""]')[0].value;</code> selected by name</p>
</blockquote>

<p>Support</p>

<pre><code>Browser          Method1   Method2  Method3  Method4    Method5/6
IE6              Y(Buggy)   N        Y        Y(Buggy)   N
IE7              Y(Buggy)   N        Y        Y(Buggy)   N
IE8              Y          N        Y        Y(Buggy)   Y
IE9              Y          Y        Y        Y(Buggy)   Y
IE10             Y          Y        Y        Y          Y
FF3.0            Y          Y        Y        Y          N    IE=Internet Explorer
FF3.5/FF3.6      Y          Y        Y        Y          Y    FF=Mozilla Firefox
FF4b1            Y          Y        Y        Y          Y    GC=Google Chrome
GC4/GC5          Y          Y        Y        Y          Y    Y=YES,N=NO
Safari4/Safari5  Y          Y        Y        Y          Y
Opera10.10/
Opera10.53/      Y          Y        Y        Y(Buggy)   Y
Opera10.60
Opera 12         Y          Y        Y        Y          Y
</code></pre>

<p><strong>Useful links</strong></p>

<ol>
<li><a href=""http://www.quirksmode.org/dom/w3c_core.html"" rel=""noreferrer""><strong>To see the support of these methods with all the bugs including more details click here</strong></a></li>
<li><a href=""http://www.nczonline.net/blog/2010/09/28/why-is-getelementsbytagname-faster-that-queryselectorall/"" rel=""noreferrer""><strong>Difference Between Static collections and Live collections click Here</strong></a></li>
<li><a href=""http://xahlee.info/js/js_array_vs_nodelist_vs_html_collection.html"" rel=""noreferrer""><strong>Difference Between NodeList and HTMLCollection click Here</strong></a></li>
</ol>
","11563667"
"Add table row in jQuery","1311481","","<p>What is the best method in jQuery to add an additional row to a table as the last row?</p>

<p>Is this acceptable?</p>

<pre><code>$('#myTable').append('&lt;tr&gt;&lt;td&gt;my data&lt;/td&gt;&lt;td&gt;more data&lt;/td&gt;&lt;/tr&gt;');
</code></pre>

<p>Are there limitations to what you can add to a table like this (such as inputs, selects, number of rows)?</p>
","<p>The approach you suggest is not guaranteed to give you the result you're looking for - what if you had a <code>tbody</code> for example:</p>

<pre><code>&lt;table id=""myTable""&gt;
  &lt;tbody&gt;
    &lt;tr&gt;...&lt;/tr&gt;
    &lt;tr&gt;...&lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</code></pre>

<p>You would end up with the following:</p>

<pre><code>&lt;table id=""myTable""&gt;
  &lt;tbody&gt;
    &lt;tr&gt;...&lt;/tr&gt;
    &lt;tr&gt;...&lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tr&gt;...&lt;/tr&gt;
&lt;/table&gt;
</code></pre>

<p>I would therefore recommend this approach instead:</p>

<pre><code>$('#myTable tr:last').after('&lt;tr&gt;...&lt;/tr&gt;&lt;tr&gt;...&lt;/tr&gt;');
</code></pre>

<p>You can include anything within the <code>after()</code> method as long as it's valid HTML, including multiple rows as per the example above.</p>

<p><strong>Update:</strong> Revisiting this answer following recent activity with this question. eyelidlessness makes a good comment that there will always be a <code>tbody</code> in the DOM; this is true, but only if there is at least one row. If you have no rows, there will be no <code>tbody</code> unless you have specified one yourself.</p>

<p>DaRKoN_ <a href=""https://stackoverflow.com/questions/171027/jquery-add-table-row/468240#468240"">suggests</a> appending to the <code>tbody</code> rather than adding content after the last <code>tr</code>. This gets around the issue of having no rows, but still isn't bulletproof as you could theoretically have multiple <code>tbody</code> elements and the row would get added to each of them.</p>

<p>Weighing everything up, I'm not sure there is a single one-line solution that accounts for every single possible scenario. You will need to make sure the jQuery code tallies with your markup.</p>

<p>I think the safest solution is probably to ensure your <code>table</code> always includes at least one <code>tbody</code> in your markup, even if it has no rows. On this basis, you can use the following which will work however many rows you have (and also account for multiple <code>tbody</code> elements):</p>

<pre><code>$('#myTable &gt; tbody:last-child').append('&lt;tr&gt;...&lt;/tr&gt;&lt;tr&gt;...&lt;/tr&gt;');
</code></pre>
","171049"
"Which equals operator (== vs ===) should be used in JavaScript comparisons?","1294172","","<p>I'm using <a href=""http://en.wikipedia.org/wiki/JSLint"" rel=""noreferrer"">JSLint</a> to go through JavaScript, and it's returning many suggestions to replace <code>==</code> (two equals signs) with <code>===</code> (three equals signs) when doing things like comparing <code>idSele_UNVEHtype.value.length == 0</code> inside of an <code>if</code> statement.</p>

<p>Is there a performance benefit to replacing <code>==</code> with <code>===</code>? </p>

<p>Any performance improvement would be welcomed as many comparison operators exist.</p>

<p>If no type conversion takes place, would there be a performance gain over <code>==</code>?</p>
","<p>The identity (<code>===</code>) operator behaves identically to the equality (<code>==</code>) operator except no type conversion is done, and the types must be the same to be considered equal.</p>

<p>Reference: <a href=""http://www.c-point.com/javascript_tutorial/jsgrpComparison.htm"" rel=""noreferrer"">Javascript Tutorial: Comparison Operators</a></p>

<p>The <code>==</code> operator will compare for equality <em>after doing any necessary type conversions</em>.  The <code>===</code> operator will <strong>not</strong> do the conversion, so if two values are not the same type <code>===</code> will simply return <code>false</code>. Both are equally quick.</p>

<p>To quote Douglas Crockford's excellent <a href=""https://rads.stackoverflow.com/amzn/click/0596517742"" rel=""noreferrer"">JavaScript: The Good Parts</a>,</p>

<blockquote>
  <p>JavaScript has two sets of equality operators: <code>===</code> and <code>!==</code>, and their evil twins <code>==</code> and <code>!=</code>.  The good ones work the way you would expect.  If the two operands are of the same type and have the same value, then <code>===</code> produces <code>true</code> and <code>!==</code> produces <code>false</code>.  The evil twins do the right thing when the operands are of the same type, but if they are of different types, they attempt to coerce the values.  the rules by which they do that are complicated and unmemorable.  These are some of the interesting cases:</p>

<pre><code>'' == '0'           // false
0 == ''             // true
0 == '0'            // true

false == 'false'    // false
false == '0'        // true

false == undefined  // false
false == null       // false
null == undefined   // true

' \t\r\n ' == 0     // true
</code></pre>
  
  <p>The lack of transitivity is alarming.  My advice is to never use the evil twins.  Instead, always use <code>===</code> and <code>!==</code>.  All of the comparisons just shown produce <code>false</code> with the <code>===</code> operator.</p>
</blockquote>

<hr>

<h3>Update:</h3>

<p>A good point was brought up by <a href=""https://stackoverflow.com/users/165495/casebash"">@Casebash</a> in the comments and in <a href=""https://stackoverflow.com/users/113570/philippe-leybaert"">@Phillipe Laybaert's</a> <a href=""https://stackoverflow.com/a/957602/1288"">answer</a> concerning reference types.  For reference types <code>==</code> and <code>===</code> act consistently with one another (except in a special case).</p>

<pre><code>var a = [1,2,3];
var b = [1,2,3];

var c = { x: 1, y: 2 };
var d = { x: 1, y: 2 };

var e = ""text"";
var f = ""te"" + ""xt"";

a == b            // false
a === b           // false

c == d            // false
c === d           // false

e == f            // true
e === f           // true
</code></pre>

<p>The special case is when you compare a literal with an object that evaluates to the same literal, due to its <code>toString</code> or <code>valueOf</code> method. For example, consider the comparison of a string literal with a string object created by the <code>String</code> constructor.</p>

<pre><code>""abc"" == new String(""abc"")    // true
""abc"" === new String(""abc"")   // false
</code></pre>

<p>Here the <code>==</code> operator is checking the values of the two objects and returning <code>true</code>, but the <code>===</code> is seeing that they're not the same type and returning <code>false</code>.  Which one is correct?  That really depends on what you're trying to compare.  My advice is to bypass the question entirely and just don't use the <code>String</code> constructor to create string objects.</p>

<p><strong>Reference</strong><br>
<a href=""http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3"" rel=""noreferrer"">http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3</a></p>
","359509"
"What does ""javascript:void(0)"" mean?","1289306","","<pre><code>&lt;a href=""javascript:void(0)"" id=""loginlink""&gt;login&lt;/a&gt;
</code></pre>

<p>I've seen such <code>href</code>s many times, but I don't know what exactly that means.</p>
","<blockquote>
  <p>The <code>void</code> operator evaluates the given
  expression and then returns <code>undefined</code>.</p>
  
  <p>The <code>void</code> operator is often used merely
  to obtain the <code>undefined</code> primitive
  value, usually using “<code>void(0)</code>” (which
  is equivalent to “<code>void 0</code>”). In these
  cases, the global variable <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/undefined"" rel=""noreferrer""><code>undefined</code></a>
  can be used instead (assuming it has
  not been assigned to a non-default
  value).</p>
</blockquote>

<p>An explanation is provided here: <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/void"" rel=""noreferrer""><code>void</code> operator</a>.</p>

<p>The reason you’d want to do this with the <code>href</code> of a link is that normally, a <code>javascript:</code> URL will redirect the browser to a plain text version of the result of evaluating that JavaScript. But if the result is <code>undefined</code>, then the browser stays on the same page. <code>void(0)</code> is just a short and simple script that evaluates to <code>undefined</code>.</p>
","1291950"
"HTML text input allows only numeric input","1277828","","<p>Is there a quick way to set an HTML text input (<code>&lt;input type=text /&gt;</code>) to only allow numeric keystrokes (plus '.')?</p>
","<p><strong>JavaScript</strong>
(the most reliable still)</p>

<pre><code>&lt;input type=""text"" onkeypress='return event.charCode &gt;= 48 &amp;&amp; event.charCode &lt;= 57'&gt;
&lt;/input&gt;
</code></pre>

<p>While this is simple, it will not let you use combination keys and other non typeable keys. For a more complete JavaScript solution that also supports input of type number and max length validation, consider using <a href=""https://gist.github.com/nbouvrette/84ef4f498ac06cdd5b60"" rel=""noreferrer"">this Polyfill</a>.</p>

<p><strong>HTML 5</strong> 
with <code>&lt;!DOCTYPE html&gt;</code> has <a href=""https://www.w3.org/TR/html/sec-forms.html#number-state-typenumber"" rel=""noreferrer"">native solution</a>:</p>

<p><code>&lt;input type=""number""&gt;</code></p>

<p>Beware that it <a href=""http://caniuse.com/#feat=input-number"" rel=""noreferrer"">does not behave in standard way in some browsers</a>.</p>

<p>Try <a href=""http://www.w3schools.com/html/tryit.asp?filename=tryhtml5_input_type_number"" rel=""noreferrer"">input type=number</a> to see the HTML5 version in action.</p>

<p>See also <a href=""https://github.com/jonstipe/number-polyfill"" rel=""noreferrer"">https://github.com/jonstipe/number-polyfill</a> for transparent support in older browsers.</p>

<p><strong>jQuery</strong></p>

<pre><code>$(document).ready(function() {
    $(""#txtboxToFilter"").keydown(function (e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
             // Allow: Ctrl/cmd+A
            (e.keyCode == 65 &amp;&amp; (e.ctrlKey === true || e.metaKey === true)) ||
             // Allow: Ctrl/cmd+C
            (e.keyCode == 67 &amp;&amp; (e.ctrlKey === true || e.metaKey === true)) ||
             // Allow: Ctrl/cmd+X
            (e.keyCode == 88 &amp;&amp; (e.ctrlKey === true || e.metaKey === true)) ||
             // Allow: home, end, left, right
            (e.keyCode &gt;= 35 &amp;&amp; e.keyCode &lt;= 39)) {
                 // let it happen, don't do anything
                 return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode &lt; 48 || e.keyCode &gt; 57)) &amp;&amp; (e.keyCode &lt; 96 || e.keyCode &gt; 105)) {
            e.preventDefault();
        }
    });
});
</code></pre>

<p><strong>More complex validation options</strong></p>

<p>If you want to do some other validation bits and pieces, this could be handy:</p>

<p><a href=""http://www.javascript-coder.com/html-form/javascript-form-validation.phtml"" rel=""noreferrer"">http://www.javascript-coder.com/html-form/javascript-form-validation.phtml</a>
<a href=""https://github.com/lockevn/html-numeric-input"" rel=""noreferrer"">https://github.com/lockevn/html-numeric-input</a></p>

<p><strong>But don't forget you still <em>must</em> do server side validation!</strong></p>

<p>for AZERTY keyboard:</p>

<p><strong>jQuery</strong></p>

<pre><code>// Allow: backspace, delete, tab, escape, enter and .
if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
    // Allow: Ctrl+A
    (e.keyCode == 65 &amp;&amp; (e.ctrlKey === true || e.metaKey === true)) ||
    // Allow: Ctrl+C
    (e.keyCode == 67 &amp;&amp; (e.ctrlKey === true || e.metaKey === true)) ||
    // Allow: Ctrl+X
    (e.keyCode == 88 &amp;&amp; (e.ctrlKey === true || e.metaKey === true)) ||
    // Allow: home, end, left, right
    (e.keyCode &gt;= 35 &amp;&amp; e.keyCode &lt;= 39) ||
    //Allow numbers and numbers + shift key
    ((e.shiftKey &amp;&amp; (e.keyCode &gt;= 48 &amp;&amp; e.keyCode &lt;= 57)) || (e.keyCode &gt;= 96 &amp;&amp; e.keyCode &lt;= 105))) {
    // let it happen, don't do anything
    return;
}
// Ensure that it is a number and stop the keypress
if ((!e.shiftKey &amp;&amp; (e.keyCode &lt; 48 || e.keyCode &gt; 57)) || (e.keyCode &lt; 96 || e.keyCode &gt; 105)) {
    e.preventDefault();
}
</code></pre>
","469362"
"How do I check if string contains substring?","1275914","","<p>I have a shopping cart that displays product options in a dropdown menu and if they select ""yes"", I want to make some other fields on the page visible. </p>

<p>The problem is that the shopping cart also includes the price modifier in the text, which can be different for each product. The following code works:</p>

<pre><code>$(document).ready(function() {
    $('select[id=""Engraving""]').change(function() {
        var str = $('select[id=""Engraving""] option:selected').text();
        if (str == ""Yes (+ $6.95)"") {
            $('.engraving').show();
        } else {
            $('.engraving').hide();
        }
    });
});
</code></pre>

<p>However I would rather use something like this, which doesn't work:</p>

<pre><code>$(document).ready(function() {
    $('select[id=""Engraving""]').change(function() {
        var str = $('select[id=""Engraving""] option:selected').text();
        if (str *= ""Yes"") {
            $('.engraving').show();
        } else {
            $('.engraving').hide();
        }
    });
});
</code></pre>

<p>I only want to perform the action if the selected option contains the word ""Yes"", and would ignore the price modifier.</p>
","<p>Like this:</p>

<pre><code>if (str.indexOf(""Yes"") &gt;= 0)
</code></pre>

<p>...or you can use the tilde operator:</p>

<pre><code>if (~str.indexOf(""Yes""))
</code></pre>

<p>This works because <code>indexOf()</code> returns <code>-1</code> if the string wasn't found at all.</p>

<p>Note that this is case-sensitive.<br>
If you want a case-insensitive search, you can write </p>

<pre><code>if (str.toLowerCase().indexOf(""yes"") &gt;= 0)
</code></pre>

<p>Or,</p>

<pre><code>if (/yes/i.test(str))
</code></pre>
","3480785"
"Determine whether an array contains a value","1250379","","<p>I need to determine if a value exists in an array.</p>

<p>I am using the following function:</p>

<pre><code>Array.prototype.contains = function(obj) {
    var i = this.length;
    while (i--) {
        if (this[i] == obj) {
            return true;
        }
    }
    return false;
}
</code></pre>

<p>The above function always returns false.</p>

<p>The array values and the function call is as below:</p>

<pre><code>arrValues = [""Sam"",""Great"", ""Sample"", ""High""]
alert(arrValues.contains(""Sam""));
</code></pre>
","<pre><code>var contains = function(needle) {
    // Per spec, the way to identify NaN is that it is not equal to itself
    var findNaN = needle !== needle;
    var indexOf;

    if(!findNaN &amp;&amp; typeof Array.prototype.indexOf === 'function') {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function(needle) {
            var i = -1, index = -1;

            for(i = 0; i &lt; this.length; i++) {
                var item = this[i];

                if((findNaN &amp;&amp; item !== item) || item === needle) {
                    index = i;
                    break;
                }
            }

            return index;
        };
    }

    return indexOf.call(this, needle) &gt; -1;
};
</code></pre>

<p>You can use it like this:</p>

<pre><code>var myArray = [0,1,2],
    needle = 1,
    index = contains.call(myArray, needle); // true
</code></pre>

<p><a href=""http://codepen.io/anon/pen/mVRNaJ"" rel=""noreferrer"">CodePen validation/usage</a></p>
","1181586"
"How do I correctly clone a JavaScript object?","1243331","","<p>I have an object, <code>x</code>. I'd like to copy it as object <code>y</code>, such that changes to <code>y</code> do not modify <code>x</code>. I realized that copying objects derived from built-in JavaScript objects will result in extra, unwanted properties. This isn't a problem, since I'm copying one of my own, literal-constructed objects.</p>

<p>How do I correctly clone a JavaScript object?</p>
","<h1>Updated answer</h1>

<p>Just use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign"" rel=""noreferrer"">Object.assign()</a> as suggested <a href=""https://stackoverflow.com/a/30042948/4031815"">here</a></p>

<hr>

<h1>Outdated answer</h1>

<p>To do this for any object in JavaScript will not be simple or straightforward. You will run into the problem of erroneously picking up attributes from the object's prototype that should be left in the prototype and not copied to the new instance. If, for instance, you are adding a <code>clone</code> method to <code>Object.prototype</code>, as some answers depict, you will need to explicitly skip that attribute. But what if there are other additional methods added to <code>Object.prototype</code>, or other intermediate prototypes, that you don't know about? In that case, you will copy attributes you shouldn't, so you need to detect unforeseen, non-local attributes with the <a href=""https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Object/hasOwnProperty"" rel=""noreferrer"" title=""Mozilla JavaScript Reference: Object.hasOwnProperty""><code>hasOwnProperty</code></a> method.</p>

<p>In addition to non-enumerable attributes, you'll encounter a tougher problem when you try to copy objects that have hidden properties. For example, <code>prototype</code> is a hidden property of a function. Also, an object's prototype is referenced with the attribute <code>__proto__</code>, which is also hidden, and will not be copied by a for/in loop iterating over the source object's attributes. I think <code>__proto__</code> might be specific to Firefox's JavaScript interpreter and it may be something different in other browsers, but you get the picture. Not everything is enumerable. You can copy a hidden attribute if you know its name, but I don't know of any way to discover it automatically.</p>

<p>Yet another snag in the quest for an elegant solution is the problem of setting up the prototype inheritance correctly. If your source object's prototype is <code>Object</code>, then simply creating a new general object with <code>{}</code> will work, but if the source's prototype is some descendant of <code>Object</code>, then you are going to be missing the additional members from that prototype which you skipped using the <code>hasOwnProperty</code> filter, or which were in the prototype, but weren't enumerable in the first place. One solution might be to call the source object's <code>constructor</code> property to get the initial copy object and then copy over the attributes, but then you still will not get non-enumerable attributes. For example, a <a href=""https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Date"" rel=""noreferrer"" title=""Mozilla JavaScript Reference: Date""><code>Date</code></a> object stores its data as a hidden member:</p>

<pre><code>function clone(obj) {
    if (null == obj || ""object"" != typeof obj) return obj;
    var copy = obj.constructor();
    for (var attr in obj) {
        if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];
    }
    return copy;
}

var d1 = new Date();

/* Executes function after 5 seconds. */
setTimeout(function(){
    var d2 = clone(d1);
    alert(""d1 = "" + d1.toString() + ""\nd2 = "" + d2.toString());
}, 5000);
</code></pre>

<p>The date string for <code>d1</code> will be 5 seconds behind that of <code>d2</code>. A way to make one <code>Date</code> the same as another is by calling the <code>setTime</code> method, but that is specific to the <code>Date</code> class. I don't think there is a bullet-proof general solution to this problem, though I would be happy to be wrong!</p>

<p>When I had to implement general deep copying I ended up compromising by assuming that I would only need to copy a plain <code>Object</code>, <code>Array</code>, <code>Date</code>, <code>String</code>, <code>Number</code>, or <code>Boolean</code>. The last 3 types are immutable, so I could perform a shallow copy and not worry about it changing. I further assumed that any elements contained in <code>Object</code> or <code>Array</code> would also be one of the 6 simple types in that list. This can be accomplished with code like the following:</p>

<pre><code>function clone(obj) {
    var copy;

    // Handle the 3 simple types, and null or undefined
    if (null == obj || ""object"" != typeof obj) return obj;

    // Handle Date
    if (obj instanceof Date) {
        copy = new Date();
        copy.setTime(obj.getTime());
        return copy;
    }

    // Handle Array
    if (obj instanceof Array) {
        copy = [];
        for (var i = 0, len = obj.length; i &lt; len; i++) {
            copy[i] = clone(obj[i]);
        }
        return copy;
    }

    // Handle Object
    if (obj instanceof Object) {
        copy = {};
        for (var attr in obj) {
            if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);
        }
        return copy;
    }

    throw new Error(""Unable to copy obj! Its type isn't supported."");
}
</code></pre>

<p>The above function will work adequately for the 6 simple types I mentioned, as long as the data in the objects and arrays form a tree structure. That is, there isn't more than one reference to the same data in the object. For example:</p>

<pre><code>// This would be cloneable:
var tree = {
    ""left""  : { ""left"" : null, ""right"" : null, ""data"" : 3 },
    ""right"" : null,
    ""data""  : 8
};

// This would kind-of work, but you would get 2 copies of the 
// inner node instead of 2 references to the same copy
var directedAcylicGraph = {
    ""left""  : { ""left"" : null, ""right"" : null, ""data"" : 3 },
    ""data""  : 8
};
directedAcyclicGraph[""right""] = directedAcyclicGraph[""left""];

// Cloning this would cause a stack overflow due to infinite recursion:
var cyclicGraph = {
    ""left""  : { ""left"" : null, ""right"" : null, ""data"" : 3 },
    ""data""  : 8
};
cyclicGraph[""right""] = cyclicGraph;
</code></pre>

<p>It will not be able to handle any JavaScript object, but it may be sufficient for many purposes as long as you don't assume that it will just work for anything you throw at it.</p>
","728694"
"Encode URL in JavaScript?","1239674","","<p>How do you safely encode a URL using JavaScript such that it can be put into a GET string?</p>

<pre><code>var myUrl = ""http://example.com/index.html?param=1&amp;anotherParam=2"";
var myOtherUrl = ""http://example.com/index.html?url="" + myUrl;
</code></pre>

<p>I assume that you need to encode the <code>myUrl</code> variable on that second line?</p>
","<p>Check out the built-in function <code>encodeURIComponent(str)</code> and <code>encodeURI(str)</code>.<br>
In your case, this should work:</p>

<pre><code>var myOtherUrl = 
       ""http://example.com/index.html?url="" + encodeURIComponent(myUrl);
</code></pre>
","332888"
"How can I add a key/value pair to a JavaScript object?","1215385","","<p>Here is my object literal:</p>

<pre><code>var obj = {key1: value1, key2: value2};
</code></pre>

<p>How can I add <code>{key3: value3}</code> to the object?</p>
","<p>There are two ways to add new <strong>properties</strong> to an object:</p>

<pre><code>var obj = {
    key1: value1,
    key2: value2
};
</code></pre>

<h3>Using dot notation:</h3>

<pre><code>obj.key3 = ""value3"";
</code></pre>

<h3>Using square bracket notation:</h3>

<pre><code>obj[""key3""] = ""value3"";
</code></pre>

<p>The first form is used when you know the name of the property. The second form is used when the name of the property is dynamically determined. Like in this example:</p>

<pre><code>var getProperty = function (propertyName) {
    return obj[propertyName];
};

getProperty(""key1"");
getProperty(""key2"");
getProperty(""key3"");
</code></pre>

<hr>

<p>A <em>real</em> JavaScript array can be constructed using either:</p>

<h3>The Array literal notation:</h3>

<pre><code>var arr = [];
</code></pre>

<h3>The Array constructor notation:</h3>

<pre><code>var arr = new Array();
</code></pre>
","1168814"
"How can I format numbers as dollars currency string in JavaScript?","1214067","","<p>I would like to format a price in JavaScript.<br>
I'd like a function which takes a <code>float</code> as an argument and returns a <code>string</code> formatted like this:</p>

<pre><code>""$ 2,500.00""
</code></pre>

<p>What's the best way to do this?</p>
","<p>Ok, based on what you said, i'm using this:</p>

<pre><code>var DecimalSeparator = Number(""1.2"").toLocaleString().substr(1,1);

var AmountWithCommas = Amount.toLocaleString();
var arParts = String(AmountWithCommas).split(DecimalSeparator);
var intPart = arParts[0];
var decPart = (arParts.length &gt; 1 ? arParts[1] : '');
decPart = (decPart + '00').substr(0,2);

return '£ ' + intPart + DecimalSeparator + decPart;
</code></pre>

<p>I'm open to improvement suggestions (i'd prefer not to include YUI just to do this :-) )
I already know I should be detecting the ""."" instead of just using it as the decimal separator...</p>
","149150"
"How can I display a JavaScript object?","1209557","","<p>How do I display the content of a JavaScript object in a string format like when we <code>alert</code> a variable?</p>

<p>The same formatted way I want to display an object.</p>
","<p>If you want to print the object for debugging purposes, I suggest instead installing <a href=""http://getfirebug.com"" rel=""noreferrer"">Firebug for Firefox</a> and using the code:</p>

<pre><code>console.log(obj)
</code></pre>
","957633"
"How do JavaScript closures work?","1180979","","<p>How would you explain JavaScript closures to someone with a knowledge of the concepts they consist of (for example functions, variables and the like), but does not understand closures themselves?</p>

<p>I have seen <a href=""http://en.wikipedia.org/wiki/Scheme_%28programming_language%29"" rel=""noreferrer"">the Scheme example</a> given on Wikipedia, but unfortunately it did not help.</p>
","<h1>JavaScript closures for beginners</h1>

<blockquote>Submitted by Morris on Tue, 2006-02-21 10:19.  Community-edited since.</blockquote>

<h2>Closures are not magic</h2>

<p>This page explains closures so that a programmer can understand them &mdash; using working JavaScript code. It is not for gurus or functional programmers.</p>

<p>Closures are <em>not hard</em> to understand once the core concept is grokked. However, they are impossible to understand by reading any academic papers or academically oriented information about them!</p>

<p>This article is intended for programmers with some programming experience in a mainstream language, and who can read the following JavaScript function:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function sayHello(name) {
  var text = 'Hello ' + name;
  var say = function() { console.log(text); }
  say();
}
sayHello('Joe');</code></pre>
</div>
</div>
</p>

<h2>An example of a closure</h2>

<p>Two one sentence summaries:</p>

<ul>
<li><p>A closure is one way of supporting <a href=""https://en.wikipedia.org/wiki/First-class_function"" rel=""noreferrer"">first-class functions</a>; it is an expression that can reference variables within its scope (when it was first declared), be assigned to a variable, be passed as an argument to a function, or be returned as a function result. </p></li>
<li><p>Or, a closure is a stack frame which is allocated when a function starts its execution, and <em>not freed</em> after the function returns (as if a 'stack frame' were allocated on the heap rather than the stack!).</p></li>
</ul>

<p>The following code returns a reference to a function:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function sayHello2(name) {
  var text = 'Hello ' + name; // Local variable
  var say = function() { console.log(text); }
  return say;
}
var say2 = sayHello2('Bob');
say2(); // logs ""Hello Bob""</code></pre>
</div>
</div>
</p>

<p>Most JavaScript programmers will understand how a reference to a function is returned to a variable (<code>say2</code>) in the above code. If you don't, then you need to look at that before you can learn closures. A programmer using C would think of the function as returning a pointer to a function, and that the variables <code>say</code> and <code>say2</code> were each a pointer to a function.</p>

<p>There is a critical difference between a C pointer to a function and a JavaScript reference to a function. In JavaScript, you can think of a function reference variable as having both a pointer to a function <em>as well</em> as a hidden pointer to a closure.</p>

<p>The above code has a closure because the anonymous function <code>function() { console.log(text); }</code> is declared <em>inside</em> another function, <code>sayHello2()</code> in this example. In JavaScript, if you use the <code>function</code> keyword inside another function, you are creating a closure.</p>

<p>In C and most other common languages, <em>after</em> a function returns, all the local variables are no longer accessible because the stack-frame is destroyed.</p>

<p>In JavaScript, if you declare a function within another function, then the local variables can remain accessible after returning from the function you called. This is demonstrated above, because we call the function <code>say2()</code> after we have returned from <code>sayHello2()</code>. Notice that the code that we call references the variable <code>text</code>, which was a <em>local variable</em> of the function <code>sayHello2()</code>.</p>

<pre><code>function() { console.log(text); } // Output of say2.toString();
</code></pre>

<p>Looking at the output of <code>say2.toString()</code>, we can see that the code refers to the variable <code>text</code>. The anonymous function can reference <code>text</code> which holds the value <code>'Hello Bob'</code> because the local variables of <code>sayHello2()</code> are kept in a closure.</p>

<p>The magic is that in JavaScript a function reference also has a secret reference to the closure it was created in &mdash; similar to how delegates are a method pointer plus a secret reference to an object.</p>

<h2>More examples</h2>

<p>For some reason, closures seem really hard to understand when you read about them, but when you see some examples it becomes clear how they work (it took me a while).
I recommend working through the examples carefully until you understand how they work. If you start using closures without fully understanding how they work, you would soon create some very weird bugs!</p>

<h3>Example 3</h3>

<p>This example shows that the local variables are not copied &mdash; they are kept by reference. It is kind of like keeping a stack-frame in memory when the outer function exits!</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function say667() {
  // Local variable that ends up within closure
  var num = 42;
  var say = function() { console.log(num); }
  num++;
  return say;
}
var sayNumber = say667();
sayNumber(); // logs 43</code></pre>
</div>
</div>
</p>

<h3>Example 4</h3>

<p>All three global functions have a common reference to the <em>same</em> closure because they are all declared within a single call to <code>setupSomeGlobals()</code>.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var gLogNumber, gIncreaseNumber, gSetNumber;
function setupSomeGlobals() {
  // Local variable that ends up within closure
  var num = 42;
  // Store some references to functions as global variables
  gLogNumber = function() { console.log(num); }
  gIncreaseNumber = function() { num++; }
  gSetNumber = function(x) { num = x; }
}

setupSomeGlobals();
gIncreaseNumber();
gLogNumber(); // 43
gSetNumber(5);
gLogNumber(); // 5

var oldLog = gLogNumber;

setupSomeGlobals();
gLogNumber(); // 42

oldLog() // 5</code></pre>
</div>
</div>
</p>

<p>The three functions have shared access to the same closure &mdash; the local variables of <code>setupSomeGlobals()</code> when the three functions were defined.</p>

<p>Note that in the above example, if you call <code>setupSomeGlobals()</code> again, then a new closure (stack-frame!) is created. The old <code>gLogNumber</code>, <code>gIncreaseNumber</code>, <code>gSetNumber</code> variables are overwritten with <em>new</em> functions that have the new closure. (In JavaScript, whenever you declare a function inside another function, the inside function(s) is/are recreated again <em>each</em> time the outside function is called.)</p>

<h3>Example 5</h3>

<p>This one is a real gotcha for many people, so you need to understand it. Be very careful if you are defining a function within a loop: the local variables from the closure do not act as you might first think.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function buildList(list) {
    var result = [];
    for (var i = 0; i &lt; list.length; i++) {
        var item = 'item' + i;
        result.push( function() {console.log(item + ' ' + list[i])} );
    }
    return result;
}

function testList() {
    var fnlist = buildList([1,2,3]);
    // Using j only to help prevent confusion -- could use i.
    for (var j = 0; j &lt; fnlist.length; j++) {
        fnlist[j]();
    }
}

 testList() //logs ""item2 undefined"" 3 times</code></pre>
</div>
</div>
</p>

<p>The line <code>result.push( function() {console.log(item + ' ' + list[i])}</code> adds a reference to an anonymous function three times to the result array. If you are not so familiar with anonymous functions think of it like:</p>

<pre><code>pointer = function() {console.log(item + ' ' + list[i])};
result.push(pointer);
</code></pre>

<p>Note that when you run the example, <code>""item2 undefined""</code> is alerted three times! This is because just like previous examples, there is only one closure for the local variables for <code>buildList</code>. When the anonymous functions are called on the line <code>fnlist[j]()</code>; they all use the same single closure, and they use the current value for <code>i</code> and <code>item</code> within that one closure (where <code>i</code> has a value of <code>3</code> because the loop had completed, and <code>item</code> has a value of <code>'item2'</code>). Note we are indexing from 0 hence <code>item</code> has a value of <code>item2</code>. And the i++ will increment <code>i</code> to the value <code>3</code>.</p>

<h3>Example 6</h3>

<p>This example shows that the closure contains any local variables that were declared inside the outer function before it exited. Note that the variable <code>alice</code> is actually declared after the anonymous function. The anonymous function is declared first; and when that function is called it can access the <code>alice</code> variable because <code>alice</code> is in the same scope (JavaScript does <a href=""https://stackoverflow.com/a/3725763/1269037"">variable hoisting</a>).
Also <code>sayAlice()()</code> just directly calls the function reference returned from <code>sayAlice()</code> &mdash; it is exactly the same as what was done previously but without the temporary variable.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function sayAlice() {
    var say = function() { console.log(alice); }
    // Local variable that ends up within closure
    var alice = 'Hello Alice';
    return say;
}
sayAlice()();// logs ""Hello Alice""</code></pre>
</div>
</div>
</p>

<p>Tricky: note also that the <code>say</code> variable is also inside the closure, and could be accessed by any other function that might be declared within <code>sayAlice()</code>, or it could be accessed recursively within the inside function.</p>

<h3>Example 7</h3>

<p>This final example shows that each call creates a separate closure for the local variables. There is <em>not</em> a single closure per function declaration. There is a closure for <em>each call</em> to a function.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function newClosure(someNum, someRef) {
    // Local variables that end up within closure
    var num = someNum;
    var anArray = [1,2,3];
    var ref = someRef;
    return function(x) {
        num += x;
        anArray.push(num);
        console.log('num: ' + num +
            '; anArray: ' + anArray.toString() +
            '; ref.someVar: ' + ref.someVar + ';');
      }
}
obj = {someVar: 4};
fn1 = newClosure(4, obj);
fn2 = newClosure(5, obj);
fn1(1); // num: 5; anArray: 1,2,3,5; ref.someVar: 4;
fn2(1); // num: 6; anArray: 1,2,3,6; ref.someVar: 4;
obj.someVar++;
fn1(2); // num: 7; anArray: 1,2,3,5,7; ref.someVar: 5;
fn2(2); // num: 8; anArray: 1,2,3,6,8; ref.someVar: 5;</code></pre>
</div>
</div>
</p>

<h2>Summary</h2>

<p>If everything seems completely unclear then the best thing to do is to play with the examples. Reading an explanation is much harder than understanding examples.
My explanations of closures and stack-frames, etc. are not technically correct &mdash; they are gross simplifications intended to help understanding. Once the basic idea is grokked, you can pick up the details later.</p>

<h2>Final points:</h2>

<ul>
<li>Whenever you use <code>function</code> inside another function, a closure is used.</li>
<li>Whenever you use <code>eval()</code> inside a function, a closure is used. The text you <code>eval</code> can reference local variables of the function, and within <code>eval</code> you can even create new local variables by using <code>eval('var foo = …')</code></li>
<li>When you use <code>new Function(…)</code> (the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"" rel=""noreferrer"">Function constructor</a>) inside a function, it does not create a closure. (The new function cannot reference the local variables of the outer function.)</li>
<li>A closure in JavaScript is like keeping a copy of all the local variables, just as they were when a function exited.</li>
<li>It is probably best to think that a closure is always created just an entry to a function, and the local variables are added to that closure.</li>
<li>A new set of local variables is kept every time a function with a closure is called (given that the function contains a function declaration inside it, and a reference to that inside function is either returned or an external reference is kept for it in some way).</li>
<li>Two functions might look like they have the same source text, but have completely different behaviour because of their 'hidden' closure. I don't think JavaScript code can actually find out if a function reference has a closure or not.</li>
<li>If you are trying to do any dynamic source code modifications (for example: <code>myFunction = Function(myFunction.toString().replace(/Hello/,'Hola'));</code>), it won't work if <code>myFunction</code> is a closure (of course, you would never even think of doing source code string substitution at runtime, but...).</li>
<li>It is possible to get function declarations within function declarations within functions &mdash; and you can get closures at more than one level.</li>
<li>I think normally a closure is the term for both the function along with the variables that are captured. Note that I do not use that definition in this article!</li>
<li>I suspect that closures in JavaScript differ from those normally found in functional languages.</li>
</ul>

<h2>Links</h2>

<ul>
<li>Douglas Crockford's simulated <a href=""http://www.crockford.com/javascript/private.html"" rel=""noreferrer"">private attributes and private methods</a> for an object, using closures.</li>
<li>A great explanation of how closures can <a href=""https://www.codeproject.com/Articles/12231/Memory-Leakage-in-Internet-Explorer-revisited"" rel=""noreferrer"">cause memory leaks in IE</a> if you are not careful.</li>
</ul>

<h2>Thanks</h2>

<p>If you have <em>just</em> learned closures (here or elsewhere!), then I am interested in any feedback from you about any changes you might suggest that could make this article clearer. Send an email to morrisjohns.com (morris_closure @). Please note that I am not a guru on JavaScript &mdash; nor on closures.</p>

<hr>

<p>Original post by Morris can be found in the <a href=""http://web.archive.org/web/20080209105120/http:/blog.morrisjohns.com/javascript_closures_for_dummies"" rel=""noreferrer"">Internet Archive</a>.</p>
","111111"
"Compare two dates with JavaScript","1180431","","<p>Can someone suggest a way to compare the values of <strong>two dates</strong> greater than, less than, and not in the past using JavaScript? The values will be coming from text boxes...</p>
","<p>The <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date"" rel=""noreferrer"">Date object</a> will do what you want - construct one for each date, then compare them using the <code>&gt;</code>, <code>&lt;</code>, <code>&lt;=</code> or <code>&gt;=</code>. </p>

<p>The <code>==</code>, <code>!=</code>, <code>===</code>, and <code>!==</code> operators require you to use <code>date.getTime()</code> as in </p>

<pre><code>var d1 = new Date();
var d2 = new Date(d1);
var same = d1.getTime() === d2.getTime();
var notSame = d1.getTime() !== d2.getTime();
</code></pre>

<p>to be clear just checking for equality directly with the data objects won't work</p>

<pre><code>var d1 = new Date();
var d2 = new Date(d1);

console.log(d1 == d2);   // prints false (wrong!) 
console.log(d1 === d2);  // prints false (wrong!)
console.log(d1 != d2);   // prints true  (wrong!)
console.log(d1 !== d2);  // prints true  (wrong!)
console.log(d1.getTime() === d2.getTime()); // prints true (correct)
</code></pre>

<p>I suggest you use drop-downs or some similar constrained form of date entry rather than text boxes, though, lest you find yourself in input validation hell.</p>
","493018"
"JavaScript equivalent to printf/string.format","1179985","","<p>I'm looking for a good JavaScript equivalent of the C/PHP <code>printf()</code> or for C#/Java programmers, <code>String.Format()</code> (<code>IFormatProvider</code> for .NET).</p>

<p>My basic requirement is a thousand separator format for numbers for now, but something that handles lots of combinations (including dates) would be good.</p>

<p>I realize Microsoft's <a href=""http://en.wikipedia.org/wiki/Ajax_%28programming%29"" rel=""noreferrer"">Ajax</a> library provides a version of <code>String.Format()</code>, but we don't want the entire overhead of that framework.</p>
","<p>Try <a href=""https://github.com/alexei/sprintf.js"" rel=""noreferrer"">sprintf() for JavaScript</a>.</p>

<hr>

<p><strong>Update</strong>    Ok, if you really want to do a simple format method on your own, don’t do the replacements successively but do them simultaneously.</p>

<p>Because most of the other proposals that are mentioned fail when a replace string of previous replacement does also contain a format sequence like this:</p>

<pre><code>""{0}{1}"".format(""{1}"", ""{0}"")
</code></pre>

<p>Normally you would expect the output to be <code>{1}{0}</code> but the actual output is <code>{1}{1}</code>. So do a simultaneously replacement instead like in <a href=""https://stackoverflow.com/questions/610406/javascript-printf-string-format/4673436#4673436"">fearphage’s suggestion</a>.</p>
","610415"
"Checking if a key exists in a JavaScript object?","1170203","","<p>How do I check if a particular key exists in a JavaScript object or array?</p>

<p>If a key doesn't exist, and I try to access it, will it return false? Or throw an error?</p>
","<p>Checking for undefined-ness is not an accurate way of testing whether a key exists. What if the key exists but the value is actually <code>undefined</code>?</p>

<pre><code>var obj = { key: undefined };
obj[""key""] != undefined // false, but the key exists!
</code></pre>

<p>You should instead use the <code>in</code> operator:</p>

<pre><code>""key"" in obj // true, regardless of the actual value
</code></pre>

<p>If you want to check if a key doesn't exist, remember to use parenthesis:</p>

<pre><code>!(""key"" in obj) // true if ""key"" doesn't exist in object
!""key"" in obj   // ERROR!  Equivalent to ""false in obj""
</code></pre>

<p>Or, if you want to particularly test for properties of the object instance (and not inherited properties), use <code>hasOwnProperty</code>:</p>

<pre><code>obj.hasOwnProperty(""key"") // true
</code></pre>

<p><strong>EDIT:</strong> For performance comparison between the methods that are <code>in</code>, <code>hasOwnProperty</code> and key is <code>undefined</code>, see this <a href=""http://jsben.ch/#/WqlIl"" rel=""noreferrer""><strong>benchmark</strong></a></p>
","1098955"
"How do I add a class to a given element?","1165113","","<p>I have an element that already has a class:</p>

<pre><code>&lt;div class=""someclass""&gt;
    &lt;img ... id=""image1"" name=""image1"" /&gt;
&lt;/div&gt;
</code></pre>

<p>Now I want to create a Javascript function that will add a class to the <code>div</code> (not replace, but add).</p>

<p>How can I do that?</p>
","<p>Add a space plus the name of your new class to the <code>className</code> property of the element. First, put an <code>id</code> on the element so you can easily get a reference.</p>

<pre><code>&lt;div id=""div1"" class=""someclass""&gt;
    &lt;img ... id=""image1"" name=""image1"" /&gt;
&lt;/div&gt;
</code></pre>

<p>Then </p>

<pre><code>var d = document.getElementById(""div1"");
d.className += "" otherclass"";
</code></pre>

<p>See also <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Element/className"" rel=""noreferrer"">element.className on MDN</a>.</p>
","507157"
"How do I loop through or enumerate a JavaScript object?","1163253","","<p>I have a JavaScript object like the following:</p>

<pre><code>var p = {
    ""p1"": ""value1"",
    ""p2"": ""value2"",
    ""p3"": ""value3""
};
</code></pre>

<p>Now I want to loop through all <code>p</code> elements (<code>p1</code>,<code>p2</code>,<code>p3</code>...) and get their keys and values. How can I do that?</p>

<p>I can modify the JavaScript object if necessary. My ultimate goal is to loop through some key value pairs and if possible I want to avoid using <code>eval</code>.</p>
","<p>You can use the <code>for-in</code> loop as shown by others. However, you also have to make sure that the key you get is an actual property of an object, and doesn't come from the prototype.</p>

<p><strong>Here is the snippet:</strong>
<div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var p = {
    ""p1"": ""value1"",
    ""p2"": ""value2"",
    ""p3"": ""value3""
};

for (var key in p) {
    if (p.hasOwnProperty(key)) {
        console.log(key + "" -&gt; "" + p[key]);
    }
}</code></pre>
</div>
</div>
</p>
","684692"
"How can I convert a string to boolean in JavaScript?","1161894","","<p>Can I convert a string representing a boolean value (e.g., 'true', 'false') into a intrinsic type in JavaScript?</p>

<p>I have a hidden form in HTML that is updated based upon a user's selection within a list. This form contains some fields which represent boolean values and are dynamically populated with an intrinsic boolean value. However, once this value is placed into the hidden input field it becomes a string.</p>

<p>The only way I could find to determine the field's boolean value, once it was converted into a string, was to depend upon the literal value of its string representation.</p>

<pre><code>var myValue = document.myForm.IS_TRUE.value;
var isTrueSet = myValue == 'true';
</code></pre>

<p>Is there a better way to accomplish this?</p>
","<h1>Do:</h1>

<pre><code>var isTrueSet = (myValue == 'true');
</code></pre>

<hr>

<h2>Unnecessary:</h2>

<p>You could make it stricter by using the identity operator (<code>===</code>), which doesn't make any implicit type conversions when the compared variables have different types, instead of the equality operator (<code>==</code>), which does:</p>

<pre><code>var isTrueSet = (myValue === 'true');
</code></pre>

<hr>

<h2>Don't:</h2>

<p>You should probably <strong>be cautious about using these two methods</strong> for your specific needs:</p>

<pre><code>var myBool = Boolean(""false"");  // == true

var myBool = !!""false"";  // == true
</code></pre>

<p>Any string which isn't the empty string will evaluate to <code>true</code> by using them. Although they're the cleanest methods I can think of concerning to boolean conversion, I think they're not what you're looking for.</p>
","264037"
"Scroll to the top of the page using JavaScript/jQuery?","1159927","","<p>I've a <code>&lt;button&gt;</code> on the page, when this button is pressed a hidden <code>&lt;div&gt;</code> is shown using jQuery.</p>

<p>How do I scroll to the top of the page using a JavaScript/jQuery command in that function? It is desirable even if the scroll bar instantly jumps to the top. I'm not looking for a smooth scrolling.</p>
","<p>If you don't need the change to animate then you don't need to use any special plugins - I'd just use the native JavaScript window.scrollTo method -- passing in 0,0 will scroll the page to the top left instantly.</p>

<pre><code>window.scrollTo(x-coord, y-coord);
</code></pre>

<p>Parameters    </p>

<ul>
<li>x-coord is the pixel along the horizontal axis.  </li>
<li>y-coord is the pixel along the vertical axis. </li>
</ul>
","1145012"
"What is the best way to detect a mobile device in jQuery?","1156313","","<p>Is there a solid way to detect whether or not a user is using a mobile device in jQuery? Something similar to the CSS @media attribute? I would like to run a different script if the browser is on a handheld device.</p>

<p>The jQuery <code>$.browser</code> function is not what I am looking for.</p>
","<p>Instead of using jquery you can use simple javascript to detect it:</p>

<pre><code>if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {
 // some code..
}
</code></pre>

<p>or you can combine them both to make it more accessible through jQuery...</p>

<pre><code>$.browser.device = (/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(navigator.userAgent.toLowerCase()));
</code></pre>

<p>now <code>$.browser</code> will return <code>""device""</code> for all above devices</p>

<p>Note: <code>$.browser</code> removed on <a href=""http://jquery.com/upgrade-guide/1.9/#jquery-browser-removed"" rel=""noreferrer""><strong>jQuery v1.9.1</strong></a>. But you can use this by using jQuery migration plugin <a href=""https://stackoverflow.com/a/15072522/2724173""><strong>Code</strong></a></p>

<hr>

<p>A more thorough version:</p>

<pre><code>var isMobile = false; //initiate as false
// device detection
if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) 
    || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0,4))) isMobile = true;
</code></pre>
","3540295"
"Length of a JavaScript object","1151580","","<p>If I have a JavaScript object, say</p>

<pre><code>var myObject = new Object();
myObject[""firstname""] = ""Gareth"";
myObject[""lastname""] = ""Simpson"";
myObject[""age""] = 21;
</code></pre>

<p>is there a built-in or accepted best practice way to get the length of this object?</p>
","<p>The most robust answer (i.e. that captures the intent of what you're trying to do while causing the fewest bugs) would be:</p>

<pre><code>Object.size = function(obj) {
    var size = 0, key;
    for (key in obj) {
        if (obj.hasOwnProperty(key)) size++;
    }
    return size;
};

// Get the size of an object
var size = Object.size(myArray);
</code></pre>

<p>There's a sort of convention in JavaScript that you <a href=""https://stackoverflow.com/questions/10757455/object-prototype-is-verboten"">don't add things to Object.prototype</a>, because it can break enumerations in various libraries. Adding methods to Object is usually safe, though.</p>

<hr>

<p><strong>Here's an update as of 2016 and <a href=""http://kangax.github.io/compat-table/es5/"" rel=""noreferrer"">widespread deployment of ES5</a> and beyond.</strong>  For IE9+ and all other modern ES5+ capable browsers, you can use <code>Object.keys()</code> so the above code just becomes:</p>

<pre><code>var size = Object.keys(myObj).length;
</code></pre>

<p>This doesn't have to modify any existing prototype since <code>Object.keys()</code> is now built in.</p>
","6700"
"HTTP GET request in JavaScript?","1134916","","<p>I need to do an <a href=""http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods"" rel=""noreferrer"">HTTP GET</a> request in JavaScript. What's the best way to do that?</p>

<p>I need to do this in a Mac OS X dashcode widget.</p>
","<p>You can use functions provided by the hosting environment through javascript:</p>

<pre><code>function httpGet(theUrl)
{
    var xmlHttp = new XMLHttpRequest();
    xmlHttp.open( ""GET"", theUrl, false ); // false for synchronous request
    xmlHttp.send( null );
    return xmlHttp.responseText;
}
</code></pre>

<p>However, synchronous requests are discouraged, so you might want to use this instead:</p>

<pre><code>function httpGetAsync(theUrl, callback)
{
    var xmlHttp = new XMLHttpRequest();
    xmlHttp.onreadystatechange = function() { 
        if (xmlHttp.readyState == 4 &amp;&amp; xmlHttp.status == 200)
            callback(xmlHttp.responseText);
    }
    xmlHttp.open(""GET"", theUrl, true); // true for asynchronous 
    xmlHttp.send(null);
}
</code></pre>

<blockquote>
  <p>Note: Starting with Gecko 30.0 (Firefox 30.0 / Thunderbird 30.0 / SeaMonkey 2.27), <strong>synchronous requests on the main thread have been deprecated</strong> due to the negative effects to the user experience.</p>
</blockquote>
","4033310"
"Trigger a button click with JavaScript on the Enter key in a text box","1130249","","<p>I have one text input and one button (see below). How can I use JavaScript to <strong>trigger the button's click event</strong> when the <kbd>Enter</kbd> key is pressed inside the text box?</p>

<p>There is already a different submit button on my current page, so I can't simply make the button a submit button. And, I <em>only</em> want the <kbd>Enter</kbd> key to click this specific button if it is pressed from within this one text box, nothing else.</p>

<pre><code>&lt;input type=""text"" id=""txtSearch"" /&gt;
&lt;input type=""button"" id=""btnSearch"" value=""Search"" onclick=""doSomething();"" /&gt;
</code></pre>
","<p>In jQuery, the following would work:</p>

<pre><code>$(""#id_of_textbox"").keyup(function(event) {
    if (event.keyCode === 13) {
        $(""#id_of_button"").click();
    }
});
</code></pre>

<p>Or in plain JavaScript, the following would work:</p>

<pre><code>document.getElementById(""id_of_textbox"")
    .addEventListener(""keyup"", function(event) {
    event.preventDefault();
    if (event.keyCode === 13) {
        document.getElementById(""id_of_button"").click();
    }
});
</code></pre>
","155263"
"How to change the href for a hyperlink using jQuery","1128008","","<p>How can you change the href for a hyperlink using jQuery?</p>
","<pre><code>$(""a"").attr(""href"", ""http://www.google.com/"")
</code></pre>

<p>...Will modify the href of all hyperlinks to point to Google. You probably want a somewhat more refined selector though. For instance, if you have a mix of link source (hyperlink) and link target (a.k.a. ""anchor"") anchor tags:</p>

<pre><code>&lt;a name=""MyLinks""&gt;&lt;/a&gt;
&lt;a href=""http://www.codeproject.com/&gt;The CodeProject&lt;/a&gt;
</code></pre>

<p>...Then you probably don't want to accidentally add <code>href</code> attributes to them. For safety then, we can specify that our selector will only match <code>&lt;a&gt;</code> tags with an existing <code>href</code> attribute:</p>

<pre><code>$(""a[href]"") //...
</code></pre>

<p>Of course, you'll probably have something more interesting in mind. If you want to match an anchor with a specific existing <code>href</code>, you might use something like this:</p>

<pre><code>$(""a[href='http://www.google.com/']"").attr('href', 'http://www.live.com/')
</code></pre>

<p>This will find links where the <code>href</code> exactly matches the string <code>http://www.google.com/</code>. A more involved task might be matching, then updating only part of the <code>href</code>:</p>

<pre><code>$(""a[href^='http://stackoverflow.com']"")
   .each(function()
   { 
      this.href = this.href.replace(/^http:\/\/beta\.stackoverflow\.com/, 
         ""http://stackoverflow.com"");
   });
</code></pre>

<p>The first part selects only links where the href <em>starts</em> with <code>http://stackoverflow.com</code>. Then, a function is defined that uses a simple regular expression to replace this part of the URL with a new one. Note the flexibility this gives you - any sort of modification to the link could be done here.</p>
","179717"
"How to replace innerHTML of a div using jQuery?","1125905","","<p>How could I achieve the following:</p>

<pre><code>document.all.regTitle.innerHTML = 'Hello World';
</code></pre>

<p>Using jQuery where <code>regTitle</code> is my div ID?</p>
","<pre><code>$(""#regTitle"").html(""Hello World"");
</code></pre>
","1309454"
"Convert JS object to JSON string","1119848","","<p>If I defined an object in JS with:</p>

<pre><code>var j={""name"":""binchen""};
</code></pre>

<p>How can I convert the object to JSON? The output string should be:</p>

<pre><code>'{""name"":""binchen""}'
</code></pre>
","<p>All current browsers have native JSON support built in. So as long as you're not dealing with prehistoric browsers like IE6/7 you can do it just as easily as that:</p>

<pre><code>var j={""name"":""binchen""};
JSON.stringify(j); // '{""name"":""binchen""}'
</code></pre>
","4162803"
"jQuery disable/enable submit button","1111575","","<p>I have this html:</p>

<pre><code>&lt;input type=""text"" name=""textField"" /&gt;
&lt;input type=""submit"" value=""send"" /&gt;
</code></pre>

<p>How can I do something like this:</p>

<ul>
<li>When the text field is empty the submit should be disabled (disabled=""disabled"").</li>
<li>When something is typed in the text field to remove the disabled attribute.</li>
<li>If the text field becomes empty again(the text is deleted) the submit button should be disabled again.</li>
</ul>

<p>I tried something like this:</p>

<pre><code>$(document).ready(function(){
    $('input[type=""submit""]').attr('disabled','disabled');
    $('input[type=""text""]').change(function(){
        if($(this).val != ''){
            $('input[type=""submit""]').removeAttr('disabled');
        }
    });
});
</code></pre>

<p>... but it doesn't work. Any ideas? Thanks.</p>
","<p>The problem is that the change event fires only when focus is moved away from the input (e.g. someone clicks off the input or tabs out of it).  Try using keyup instead:</p>

<pre><code>$(document).ready(function() {
     $(':input[type=""submit""]').prop('disabled', true);
     $('input[type=""text""]').keyup(function() {
        if($(this).val() != '') {
           $(':input[type=""submit""]').prop('disabled', false);
        }
     });
 });
</code></pre>
","1594992"
"Create GUID / UUID in JavaScript?","1101268","","<p>I'm trying to create globally-unique identifiers in JavaScript.  I'm not sure what routines are available on all browsers, how ""random"" and seeded the built-in random number generator is, etc..</p>

<p>The GUID / UUID should be at least 32 characters and should stay in the ASCII range to avoid trouble when passing them around.</p>
","<p>There have been a couple attempts at this. The question is: do you want actual GUIDs, or just random numbers that <em>look</em> like GUIDs? It's easy enough to generate random numbers.</p>

<pre><code>function guid() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000)
      .toString(16)
      .substring(1);
  }
  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
    s4() + '-' + s4() + s4() + s4();
}
</code></pre>

<p>However, note that such values <strong>are not genuine GUIDs</strong>.</p>

<p><strike>
There's no way to generate real GUIDs in Javascript, because they depend on properties of the local computer that browsers do not expose. You'll need to use OS-specific services like ActiveX: <a href=""http://p2p.wrox.com/topicindex/20339.htm"" rel=""noreferrer"">http://p2p.wrox.com/topicindex/20339.htm</a>
</strike></p>

<p>Edit: not correct - RFC4122 allows random (""version 4"") GUIDs.  See other answers for specifics.</p>

<p><strong>Note</strong>: the provided code snippet does not follow RFC4122 which requires that the version (<code>4</code>) has to be integrated into the generated output string. <strong>Do not use this answer</strong> if you need compliant GUIDs.</p>

<p>Use:</p>

<pre><code>var uuid = guid();
</code></pre>

<h1>Demo:</h1>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function guid() {
  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
    s4() + '-' + s4() + s4() + s4();
}

function s4() {
  return Math.floor((1 + Math.random()) * 0x10000)
    .toString(16)
    .substring(1);
}

document.getElementById('jsGenId').addEventListener('click', function() {
  document.getElementById('jsIdResult').value = guid();
})</code></pre>
<pre class=""snippet-code-css lang-css prettyprint-override""><code>input { font-family: monospace; }</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;button id=""jsGenId"" type=""button""&gt;Generate GUID&lt;/button&gt;
&lt;br&gt;
&lt;input id=""jsIdResult"" type=""text"" placeholder=""Results will be placed here..."" readonly size=""40""/&gt;</code></pre>
</div>
</div>
</p>
","105074"
"Check if object is array?","1101043","","<p>I'm trying to write a function that either accepts a list of strings, or a single string. If it's a string, then I want to convert it to an array with just the one item. Then I can loop over it without fear of an error. </p>

<p>So how do I check if the variable is an array?</p>

<hr>

<p>I've rounded up the various solutions below and created a <a href=""http://jsperf.com/js-isarray-comparison"" rel=""noreferrer"">jsperf test</a>.</p>
","<p>I would first check if your implementation supports <code>isArray</code>:</p>

<pre><code>if (Array.isArray)
    return Array.isArray(v);
</code></pre>

<p>You could also try using the <code>instanceof</code> operator</p>

<pre><code>v instanceof Array
</code></pre>
","4775741"
"JavaScript chop/slice/trim off last character in string","1096574","","<p>I have a string, <code>12345.00</code>, and I would like it to return <code>12345.0</code>.</p>

<p>I have looked at <code>trim</code>, but it looks like it is only trimming whitespace and <code>slice</code> which I don't see how this would work. Any suggestions?</p>
","<p>You can use the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring"" rel=""noreferrer"">substring</a> function:</p>

<pre><code>var str = ""12345.00"";
str = str.substring(0, str.length - 1); // ""12345.0""
</code></pre>

<p>This is the accepted answer, but as per the conversations below, the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice"" rel=""noreferrer"">slice</a> syntax is much clearer:</p>

<pre><code>var str = ""12345.00"";
str = str.slice(0, -1); // ""12345.0""
</code></pre>
","952945"
"How to Loop through plain JavaScript object with objects as members?","1092800","","<p>How can I loop through all members in a JavaScript object including values that are objects.</p>

<p>For example, how could I loop through this (accessing the ""your_name"" and ""your_message"" for each)?</p>

<pre><code>var validation_messages = {
    ""key_1"": {
        ""your_name"": ""jimmy"",
        ""your_msg"": ""hello world""
    },
    ""key_2"": {
        ""your_name"": ""billy"",
        ""your_msg"": ""foo equals bar""
    }
}
</code></pre>
","<pre><code>for (var key in validation_messages) {
    // skip loop if the property is from prototype
    if (!validation_messages.hasOwnProperty(key)) continue;

    var obj = validation_messages[key];
    for (var prop in obj) {
        // skip loop if the property is from prototype
        if(!obj.hasOwnProperty(prop)) continue;

        // your code
        alert(prop + "" = "" + obj[prop]);
    }
}
</code></pre>
","921808"
"JavaScript post request like a form submit","1081991","","<p>I'm trying to direct a browser to a different page. If I wanted a GET request, I might say</p>

<pre><code>document.location.href = 'http://example.com/q=a';
</code></pre>

<p>But the resource I'm trying to access won't respond properly unless I use a POST request. If this were not dynamically generated, I might use the HTML</p>

<pre><code>&lt;form action=""http://example.com/"" method=""POST""&gt;
  &lt;input type=""hidden"" name=""q"" value=""a""&gt;
&lt;/form&gt;
</code></pre>

<p>Then I would just submit the form from the DOM.</p>

<p>But really I would like JavaScript code that allows me to say</p>

<pre><code>post_to_url('http://example.com/', {'q':'a'});
</code></pre>

<p>What's the best cross browser implementation?</p>

<p><strong>Edit</strong> </p>

<p>I'm sorry I was not clear. I need a solution that changes the location of the browser, just like submitting a form. If this is possible with <a href=""http://en.wikipedia.org/wiki/XMLHttpRequest"" rel=""noreferrer"">XMLHttpRequest</a>, it is not obvious. And this should not be asynchronous, nor use XML, so Ajax is not the answer.</p>
","<pre><code>function post(path, params, method) {
    method = method || ""post""; // Set method to post by default if not specified.

    // The rest of this code assumes you are not using a library.
    // It can be made less wordy if you use one.
    var form = document.createElement(""form"");
    form.setAttribute(""method"", method);
    form.setAttribute(""action"", path);

    for(var key in params) {
        if(params.hasOwnProperty(key)) {
            var hiddenField = document.createElement(""input"");
            hiddenField.setAttribute(""type"", ""hidden"");
            hiddenField.setAttribute(""name"", key);
            hiddenField.setAttribute(""value"", params[key]);

            form.appendChild(hiddenField);
        }
    }

    document.body.appendChild(form);
    form.submit();
}
</code></pre>

<p>Example:</p>

<pre><code>post('/contact/', {name: 'Johnny Bravo'});
</code></pre>

<p><strong>EDIT</strong>: Since this has gotten upvoted so much, I'm guessing people will be copy-pasting this a lot. So I added the <code>hasOwnProperty</code> check to fix any inadvertent bugs.</p>
","133997"
"How do I test for an empty JavaScript object?","1078494","","<p>After an AJAX request, sometimes my application may return an empty object, like:</p>

<pre><code>var a = {};
</code></pre>

<p>How can I check whether that's the case?</p>
","<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys#Browser_compatibility"" rel=""noreferrer"">ECMA 5+</a>:</p>

<pre><code>// because Object.keys(new Date()).length === 0;
// we have to do some additional check
Object.keys(obj).length === 0 &amp;&amp; obj.constructor === Object
</code></pre>

<p>Pre-ECMA 5:</p>

<pre><code>function isEmpty(obj) {
    for(var prop in obj) {
        if(obj.hasOwnProperty(prop))
            return false;
    }

    return JSON.stringify(obj) === JSON.stringify({});
}
</code></pre>

<p><a href=""http://api.jquery.com/jQuery.isEmptyObject/"" rel=""noreferrer"">jQuery</a>:</p>

<pre><code>jQuery.isEmptyObject({}); // true
</code></pre>

<p><a href=""https://lodash.com/docs#isEmpty"" rel=""noreferrer"">lodash</a>:</p>

<pre><code>_.isEmpty({}); // true
</code></pre>

<p><a href=""http://underscorejs.org/#isEmpty"" rel=""noreferrer"">Underscore</a>:</p>

<pre><code>_.isEmpty({}); // true
</code></pre>

<p><a href=""https://github.com/hapijs/hoek"" rel=""noreferrer"">Hoek</a></p>

<pre><code>Hoek.deepEqual({}, {}); // true
</code></pre>

<p><a href=""http://docs.sencha.com/extjs/6.0.2/modern/Ext.html#method-isEmpty"" rel=""noreferrer"">ExtJS</a></p>

<pre><code>Ext.Object.isEmpty({}); // true
</code></pre>

<p><a href=""https://docs.angularjs.org/api/ng/function/angular.equals"" rel=""noreferrer"">AngularJS (version 1)</a></p>

<pre><code>angular.equals({}, {}); // true
</code></pre>

<p><a href=""http://ramdajs.com/docs/#isEmpty"" rel=""noreferrer"">Ramda</a></p>

<pre><code>R.isEmpty({}); // true
</code></pre>
","32108184"
"How do I redirect with Javascript?","1074716","","<p>How do you redirect to a page from another page with javascript?</p>
","<p>To redirect to another page, you can use:</p>

<pre><code>window.location = ""http://www.yoururl.com"";
</code></pre>
","4745622"
"Change the selected value of a drop-down list with jQuery","1070784","","<p>I have a drop-down list with known values. What I'm trying to do is set the drop down list to a particular value that I know exists using jQuery.  Using regular JavaScript, I would do something like:</p>

<pre><code>ddl = document.getElementById(""ID of element goes here"");
ddl.value = 2; // 2 being the value I want to set it too.
</code></pre>

<p>However, I need to do this with jQuery, because I'm using a CSS class for my selector (stupid <a href=""http://en.wikipedia.org/wiki/ASP.NET"" rel=""noreferrer"">ASP.NET</a> client ids...).</p>

<p>Here are a few things I've tried:</p>

<pre><code>$(""._statusDDL"").val(2); // Doesn't find 2 as a value.
$(""._statusDDL"").children(""option"").val(2) // Also failed.
</code></pre>

<p>How can I do it with jQuery?</p>

<p><strong>Update</strong></p>

<p>So as it turns out, I had it right the first time with:</p>

<pre><code>$(""._statusDDL"").val(2);
</code></pre>

<p>When I put an alert just above it works fine, but when I remove the alert and let it run at full speed, I get the error</p>

<blockquote>
  <p>Could not set the selected property. Invalid Index</p>
</blockquote>

<p>I'm not sure if it's a bug with jQuery or Internet Explorer 6 (I'm guessing Internet Explorer 6), but it's terribly annoying.</p>
","<p><a href=""http://docs.jquery.com/Attributes/val#val"" rel=""noreferrer"">jQuery's documentation</a> states:</p>

<blockquote>
  <p>[jQuery.val] checks, or <strong><em>selects</em></strong>, all the radio buttons, checkboxes, and select options that match the set of values.</p>
</blockquote>

<p>This behavior is in <code>jQuery</code> versions <code>1.2</code> and above.</p>

<p>You most likely want this:</p>

<pre><code>$(""._statusDDL"").val('2');
</code></pre>
","499413"
"Deleting array elements in JavaScript - delete vs splice","1068295","","<p>What is the difference between using <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/delete"" rel=""noreferrer"">the <code>delete</code> operator</a> on the array element as opposed to using <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/splice"" rel=""noreferrer"">the <code>Array.splice</code> method</a>? </p>

<p>For example:</p>

<pre><code>myArray = ['a', 'b', 'c', 'd'];

delete myArray[1];
//  or
myArray.splice (1, 1);
</code></pre>

<p>Why even have the splice method if I can delete array elements like I can with objects?</p>
","<p><code>delete</code> will delete the object property, but will not reindex the array or update its length. This makes it appears as if it is undefined:</p>

<pre><code>&gt; myArray = ['a', 'b', 'c', 'd']
  [""a"", ""b"", ""c"", ""d""]
&gt; delete myArray[0]
  true
&gt; myArray
  [undefined, ""b"", ""c"", ""d""]
</code></pre>

<p><a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/splice"" rel=""nofollow noreferrer""><code>myArray.splice(start, deleteCount)</code></a> actually removes the element from the array:</p>

<pre><code>&gt; myArray = ['a', 'b', 'c', 'd']
  [""a"", ""b"", ""c"", ""d""]
&gt; myArray.splice(0, 2)
  [""a"", ""b""]
&gt; myArray
  [""c"", ""d""]
</code></pre>
","500617"
"How to insert an item into an array at a specific index?","1066011","","<p>I am looking for a Javascript array insert method, in the style of:</p>

<pre><code>arr.insert(index, item)
</code></pre>

<p>Preferably in jQuery, but any Javascript implementation will do at this point.</p>
","<p>What you want is the <strong><a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice"" rel=""noreferrer""><code>splice</code></a></strong> function on the native array object.</p>

<p><code>arr.splice(index, 0, item);</code> will insert <code>item</code> into <code>arr</code> at the specified index (deleting <code>0</code> items first, that is, it's just an insert).</p>

<p>In this example we will create an array and add an element to it into index 2:</p>

<pre><code>var arr = [];
arr[0] = ""Jani"";
arr[1] = ""Hege"";
arr[2] = ""Stale"";
arr[3] = ""Kai Jim"";
arr[4] = ""Borge"";

console.log(arr.join());
arr.splice(2, 0, ""Lene"");
console.log(arr.join());
</code></pre>

<p>The output of the code above will be:</p>

<pre><code>Jani,Hege,Stale,Kai Jim,Borge
Jani,Hege,Lene,Stale,Kai Jim,Borge
</code></pre>
","586189"
"How do I check if a JavaScript array value is empty or null?","1055466","","<p>Will this work for testing whether a value at position ""index"" exists or not, or is there a better way:</p>

<pre><code>if(arrayName[index]==""""){
     // do stuff
}
</code></pre>
","<p>All arrays in JavaScript contain <code>array.length</code> elements, starting with <code>array[0]</code> up until <code>array[array.length - 1]</code>.  By definition, an array element with index <code>i</code> is said to be part of the array if <code>i</code> is between <code>0</code> and <code>array.length - 1</code> inclusive.</p>

<p>That is, JavaScript arrays are linear, starting with zero and going to a maximum, and arrays don't have a mechanism for excluding certain values or ranges from the array. To find out if a value exists at a given position index (where index is 0 or a positive integer), you literally just use</p>

<pre><code>if (index &lt; array.length) {
  // do stuff
}
</code></pre>

<p>However, it <em>is</em> possible for some array values to be null, <code>undefined</code>, <code>NaN</code>, <code>Infinity</code>, 0, or a whole host of different values.  For example, if you add array values by increasing the <code>array.length</code> property, any new values will be <code>undefined</code>.  </p>

<p>To determine if a given value is something meaningful, or has been defined.  That is, <strong>not</strong> <code>undefined</code>, or <code>null</code>:</p>

<pre><code>if (typeof array[index] !== 'undefined') {
</code></pre>

<p>or</p>

<pre><code>if (typeof array[index] !== 'undefined' &amp;&amp; array[index] !== null) {
</code></pre>

<p>Interestingly, because of JavaScript's comparison rules, my last example can be optimised down to:</p>

<pre><code>if (array[index] != null) {
  // The == and != operator consider null equal to only null or undefined
</code></pre>
","2672411"
"jQuery.click() vs onClick","1051131","","<p>I have a huge jQuery application, and I'm using the below two methods for click events.</p>

<p><strong>First method</strong></p>

<h3>HTML</h3>

<pre><code>&lt;div id=""myDiv""&gt;Some Content&lt;/div&gt;
</code></pre>

<h3>jQuery</h3>

<pre><code>$('#myDiv').click(function(){
    //Some code
});
</code></pre>

<p><strong>Second method</strong></p>

<h3>HTML</h3>

<pre><code>&lt;div id=""myDiv"" onClick=""divFunction()""&gt;Some Content&lt;/div&gt;
</code></pre>

<h3>JavaScript function call</h3>

<pre><code>function divFunction(){
    //Some code
}
</code></pre>

<p>I use either the first or second method in my application. Which one is better? Better for performance? And standard?</p>
","<p>Using <code>$('#myDiv').click(function(){</code> is <strong>better</strong> as it follows standard event registration model. (jQuery <a href=""https://github.com/jquery/jquery/blob/6e995583a11b63bf1d94142da6408955ee93e7cc/src/event.js#L97-102"">internally</a> uses <a href=""https://developer.mozilla.org/en-US/docs/DOM/element.addEventListener""><code>addEventListener</code></a> and <a href=""http://msdn.microsoft.com/en-us/library/ie/ms536343%28v=vs.85%29.aspx""><code>attachEvent</code></a>). </p>

<p>Basically registering an event in <a href=""http://www.quirksmode.org/js/events_advanced.html"">modern way</a> is the <a href=""http://en.wikipedia.org/wiki/Unobtrusive_JavaScript"">unobtrusive</a> way of handling events. Also to register more than one event listener for the target you can call <code>addEventListener()</code> for the same target. </p>

<pre><code>var myEl = document.getElementById('myelement');

myEl.addEventListener('click', function() {
    alert('Hello world');
}, false);

myEl.addEventListener('click', function() {
    alert('Hello world again!!!');
}, false);
</code></pre>

<p><a href=""http://jsfiddle.net/aj55x/1/"">http://jsfiddle.net/aj55x/1/</a> </p>

<blockquote>
  <p><strong><a href=""https://developer.mozilla.org/en-US/docs/DOM/element.addEventListener#Why_use_addEventListener.3F"">Why use addEventListener?</a></strong> (From MDN)</p>
  
  <p>addEventListener is the way to register an event listener as specified
  in W3C DOM. Its benefits are as follows:</p>
  
  <ul>
  <li>It allows adding more than a single handler for an event. This is particularly useful for DHTML libraries or Mozilla extensions that
  need to work well even if other libraries/extensions are used.</li>
  <li>It gives you finer-grained control of the phase when the listener gets activated (capturing vs. bubbling)</li>
  <li>It works on any DOM element, not just HTML elements.</li>
  </ul>
</blockquote>

<p>More about Modern event registration -> <a href=""http://www.quirksmode.org/js/events_advanced.html"">http://www.quirksmode.org/js/events_advanced.html</a></p>

<p>Other methods such as setting the <a href=""https://developer.mozilla.org/en-US/docs/DOM/event#HTML_attribute"">HTML attributes</a>, example: </p>

<pre><code>&lt;button onclick=""alert('Hello world!')""&gt;
</code></pre>

<p>Or <a href=""https://developer.mozilla.org/en-US/docs/DOM/event#DOM_element_properties"">DOM element properties</a>, example: </p>

<pre><code>myEl.onclick = function(event){alert('Hello world');}; 
</code></pre>

<p>are old and they can be over written easily. </p>

<p><strong><em>HTML attribute</em></strong> should be avoided as It makes the markup bigger and less readable. Concerns of content/structure and behavior are not well-separated, making a bug harder to find.</p>

<p>The problem with the <strong><em>DOM element properties</em></strong> method is that only one event handler can be bound to an element per event.</p>

<p>More about Traditional event handling -> <a href=""http://www.quirksmode.org/js/events_tradmod.html"">http://www.quirksmode.org/js/events_tradmod.html</a></p>

<p>MDN Reference: <a href=""https://developer.mozilla.org/en-US/docs/DOM/event"">https://developer.mozilla.org/en-US/docs/DOM/event</a></p>
","12627478"
"Get the size of the screen, current web page and browser window","1049331","","<p>How can I get <code>windowWidth</code>, <code>windowHeight</code>, <code>pageWidth</code>, <code>pageHeight</code>, <code>screenWidth</code>, <code>screenHeight</code>, <code>pageX</code>, <code>pageY</code>, <code>screenX</code>, <code>screenY</code> which will work in all major browsers?</p>

<p><img src=""https://i.stack.imgur.com/6xPdH.png"" alt=""screenshot describing which values are wanted""></p>
","<p>If you are using jQuery, you can get the size of the window or the document using jQuery methods:</p>

<pre><code>$(window).height();   // returns height of browser viewport
$(document).height(); // returns height of HTML document (same as pageHeight in screenshot)
$(window).width();   // returns width of browser viewport
$(document).width(); // returns width of HTML document (same as pageWidth in screenshot)
</code></pre>

<p>For screen size you can use the <code>screen</code> object in the following way:</p>

<pre><code>screen.height;
screen.width;
</code></pre>
","3437825"
"Is there a standard function to check for null, undefined, or blank variables in JavaScript?","1043358","","<p>Is there a universal JavaScript function that checks that a variable has a value and ensures that it's not <code>undefined</code> or <code>null</code>? I've got this code, but I'm not sure if it covers all cases:</p>

<pre><code>function isEmpty(val){
    return (val === undefined || val == null || val.length &lt;= 0) ? true : false;
}
</code></pre>
","<p>You can just check if the <em>variable</em> has a <code>truthy</code> value or not. That means</p>

<pre><code>if( value ) {
}
</code></pre>

<p>will evaluate to <code>true</code> if <code>value</code> is <strong>not</strong>:</p>

<ul>
<li>null</li>
<li>undefined</li>
<li>NaN</li>
<li>empty string ("""")</li>
<li>0</li>
<li>false</li>
</ul>

<p>The above list represents all possible <code>falsy</code> values in ECMA-/Javascript. Find it in the <a href=""http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf"" rel=""noreferrer"">specification</a> at the <code>ToBoolean</code> section.</p>

<p>Furthermore, if you do not <strong>know</strong> whether a variable exists (that means, if it was <em>declared</em>) you should check with the <code>typeof</code> operator. For instance</p>

<pre><code>if( typeof foo !== 'undefined' ) {
    // foo could get resolved and it's defined
}
</code></pre>

<p>If you can be sure that a <em>variable</em> is declared at least, you should directly check if it has a <code>truthy</code> value like shown above.</p>

<p>Further read: <a href=""http://typeofnan.blogspot.com/2011/01/typeof-is-fast.html"" rel=""noreferrer"">http://typeofnan.blogspot.com/2011/01/typeof-is-fast.html</a></p>
","5515349"
"JavaScript function in href vs. onclick","1041725","","<p>I want to run a simple JavaScript function on a click without any redirection.</p>

<p>Is there any difference or benefit between putting the JavaScript call in the <code>href</code> attribute  (like this: </p>

<pre><code>&lt;a href=""javascript:my_function();window.print();""&gt;....&lt;/a&gt;
</code></pre>

<p>) vs. putting it in the <code>onclick</code> attribute (binding it to the <code>onclick</code> event)?</p>
","<p>Putting the onclick within the href would offend those who believe strongly in separation of content from behavior/action. The argument is that your html content should remain focused solely on content, not on presentation or behavior.</p>

<p>The typical path these days is to use a javascript library (eg. jquery) and create an event handler using that library. It would look something like:</p>

<pre><code>$('a').click( function(e) {e.preventDefault(); /*your_code_here;*/ return false; } );
</code></pre>
","1070788"
"jQuery Ajax POST example with PHP","1041266","","<p>I am trying to send data from a form to a database. Here is the form I am using:</p>

<pre><code>&lt;form name=""foo"" action=""form.php"" method=""POST"" id=""foo""&gt;
    &lt;label for=""bar""&gt;A bar&lt;/label&gt;
    &lt;input id=""bar"" name=""bar"" type=""text"" value="""" /&gt;
    &lt;input type=""submit"" value=""Send"" /&gt;
&lt;/form&gt;
</code></pre>

<p>The typical approach would be to submit the form, but this causes the browser to redirect. Using jQuery and <a href=""http://en.wikipedia.org/wiki/Ajax_%28programming%29"" rel=""noreferrer"">Ajax</a>, is it possible to capture all of the form's data and submit it to a PHP script (in example, <em>form.php</em>)?</p>
","<p>Basic usage of <a href=""https://api.jquery.com/jQuery.ajax/"" rel=""noreferrer""><code>.ajax</code></a> would look something like this:</p>

<p><strong>HTML:</strong></p>

<pre><code>&lt;form id=""foo""&gt;
    &lt;label for=""bar""&gt;A bar&lt;/label&gt;
    &lt;input id=""bar"" name=""bar"" type=""text"" value="""" /&gt;

    &lt;input type=""submit"" value=""Send"" /&gt;
&lt;/form&gt;
</code></pre>

<p><strong>JQuery:</strong></p>

<pre><code>// Variable to hold request
var request;

// Bind to the submit event of our form
$(""#foo"").submit(function(event){

    // Prevent default posting of form - put here to work in case of errors
    event.preventDefault();

    // Abort any pending request
    if (request) {
        request.abort();
    }
    // setup some local variables
    var $form = $(this);

    // Let's select and cache all the fields
    var $inputs = $form.find(""input, select, button, textarea"");

    // Serialize the data in the form
    var serializedData = $form.serialize();

    // Let's disable the inputs for the duration of the Ajax request.
    // Note: we disable elements AFTER the form data has been serialized.
    // Disabled form elements will not be serialized.
    $inputs.prop(""disabled"", true);

    // Fire off the request to /form.php
    request = $.ajax({
        url: ""/form.php"",
        type: ""post"",
        data: serializedData
    });

    // Callback handler that will be called on success
    request.done(function (response, textStatus, jqXHR){
        // Log a message to the console
        console.log(""Hooray, it worked!"");
    });

    // Callback handler that will be called on failure
    request.fail(function (jqXHR, textStatus, errorThrown){
        // Log the error to the console
        console.error(
            ""The following error occurred: ""+
            textStatus, errorThrown
        );
    });

    // Callback handler that will be called regardless
    // if the request failed or succeeded
    request.always(function () {
        // Reenable the inputs
        $inputs.prop(""disabled"", false);
    });

});
</code></pre>

<p><em>Note: Since jQuery 1.8, <code>.success()</code>, <code>.error()</code> and <code>.complete()</code> are deprecated in favor of <code>.done()</code>, <code>.fail()</code> and <code>.always()</code>.</em></p>

<p><em>Note: Remember that the above snippet has to be done after DOM ready, so you should put it inside a <a href=""https://api.jquery.com/ready/"" rel=""noreferrer""><code>$(document).ready()</code></a> handler (or use the <code>$()</code> shorthand).</em></p>

<p><em>Tip: You can <a href=""http://www.jquerybyexample.net/2012/06/what-is-chaining-in-jquery.html"" rel=""noreferrer"">chain</a> the callback handlers like this: <code>$.ajax().done().fail().always();</code></em></p>

<p><strong>PHP (that is, form.php):</strong></p>

<pre><code>// You can access the values posted by jQuery.ajax
// through the global variable $_POST, like this:
$bar = isset($_POST['bar']) ? $_POST['bar'] : null;
</code></pre>

<p><em>Note: Always <a href=""https://stackoverflow.com/questions/1314518/sanitizing-users-data-in-get-by-php"">sanitize posted data</a>, to prevent injections and other malicious code.</em></p>

<p>You could also use the shorthand <a href=""https://api.jquery.com/jQuery.post/"" rel=""noreferrer""><code>.post</code></a> in place of <code>.ajax</code> in the above JavaScript code:</p>

<pre><code>$.post('/form.php', serializedData, function(response) {
    // Log the response to the console
    console.log(""Response: ""+response);
});
</code></pre>

<p><em>Note: The above JavaScript code is made to work with jQuery 1.8 and later, but it should work with previous versions down to jQuery 1.5.</em></p>
","5004276"
"How can I select an element by name with jQuery?","1039333","","<p>Have a table column I'm trying to expand and hide: </p>

<p>jQuery seems to hide the td elements when I select it by <a href=""http://docs.jquery.com/Selectors/class#class"" rel=""noreferrer"">class</a> but not by element <a href=""http://docs.jquery.com/Selectors/element#element"" rel=""noreferrer"">name</a>.  </p>

<p>For example, why does: </p>

<pre><code>$("".bold"").hide();  // selecting by class works
$(""tcol1"").hide();  // select by element name does not work
</code></pre>

<p>Note the HTML below, the second column has the same name for all rows.  How could I create this collection using the name attribute?</p>

<pre><code>&lt;tr&gt;    
    &lt;td&gt;data1&lt;/td&gt;
    &lt;td name=""tcol1"" class=""bold""&gt; data2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;    
    &lt;td&gt;data1&lt;/td&gt;
    &lt;td name=""tcol1"" class=""bold""&gt; data2&lt;/td&gt;
&lt;/tr&gt;  
&lt;tr&gt;    
    &lt;td&gt;data1&lt;/td&gt;
    &lt;td name=""tcol1"" class=""bold""&gt; data2&lt;/td&gt;
&lt;/tr&gt;
</code></pre>
","<p>you can use the attribute selector</p>

<pre><code>$('td[name=tcol1]') // matches exactly 'tcol1'

$('td[name^=tcol]') // matches those that begin with 'tcol'

$('td[name$=tcol]') // matches those that end with 'tcol'

$('td[name*=tcol]') // matches those that contain 'tcol'
</code></pre>
","1107264"
"jQuery - setting the selected value of a select control via its text description","1019551","","<p>I have a select control, and in a javascript variable I have a text string.</p>

<p>Using jQuery I want to set the selected element of the select control to be the item with the text description I have (as opposed to the value, which I don't have).</p>

<p>I know setting it by value is pretty trivial. e.g.</p>

<pre><code>$(""#my-select"").val(myVal);
</code></pre>

<p>But I'm a bit stumped on doing it via the text description. I guess there must be a way of getting the value out from the text description, but my brain is too Friday afternoon-ed to be able to work it out.</p>
","<p>Given this HTML:</p>

<pre><code>&lt;select&gt;
    &lt;option value=""0""&gt;One&lt;/option&gt;
    &lt;option value=""1""&gt;Two&lt;/option&gt;
&lt;/select&gt;
</code></pre>

<p><strong>Select by description for jQuery v1.6+:</strong></p>

<pre><code>var text1 = 'Two';
$(""select option"").filter(function() {
    //may want to use $.trim in here
    return $(this).text() == text1; 
}).prop('selected', true);
</code></pre>

<p><strong>Select by description for jQuery versions below 1.6 and greater than or equal to 1.4</strong>:
<a href=""https://stackoverflow.com/a/3644500/31532"">https://stackoverflow.com/a/3644500/31532</a></p>

<pre><code>var text1 = 'Two';
$(""select option"").filter(function() {
    //may want to use $.trim in here
    return $(this).text() == text1; 
}).attr('selected', true);
</code></pre>

<p>Note that while this approach will work in versions that are above 1.6 but less than 1.9, it has been deprecated since 1.6. It <em><a href=""https://stackoverflow.com/questions/14366220/optionselected-not-working-jquery-1-9"">will not work</a></em> in jQuery 1.9+.</p>

<p><strong>Select by description for previous versions:</strong></p>

<p><code>val()</code> should handle both cases. Are you not seeing it?</p>

<p>Eg:</p>

<pre><code>$('select').val('1'); // selects ""Two""
$('select').val('Two'); // also selects ""Two""
</code></pre>
","496126"
"window.onload vs document.onload","1017750","","<p>Which is more widely supported: <code>window.onload</code> or <code>document.onload</code>?</p>
","<h2>window.onload</h2>

<p><strong>When do they fire?</strong></p>

<p><a href=""https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers.onload"" rel=""noreferrer"">window.onload</a></p>

<ul>
<li>By default, it is fired when the entire page loads, including its content (images, css, scripts, etc.)</li>
<li>In some browsers it now takes over the role of document.onload and fires when the DOM is ready as well.</li>
</ul>

<p>document.onload</p>

<ul>
<li>It is called when the DOM is ready which can be prior to images and other external content is loaded.</li>
</ul>

<p><strong>How well are they supported?</strong></p>

<p>window.onload appears to be the most widely supported. In fact, some of the most modern browsers have in a sense replaced document.onload with window.onload. Browser support issues are most likely the reason why many people are starting to use libraries such as <a href=""http://jquery.com/"" rel=""noreferrer"">jQuery</a> to handle the checking for the document being ready like so:</p>

<pre><code>$(document).ready(function() { /* code here */ });
$(function() { /* code here */ });
</code></pre>

<hr>

<p>For the purpose of history:</p>

<p><strong>window.onload vs body.onload</strong></p>

<p>As a note, a similar question was asked on <a href=""http://www.codingforums.com/archive/index.php/t-106229.html"" rel=""noreferrer"">codingforums</a> a while back regarding the usage of <code>window.onload</code> over <code>body.onload</code>. The result seemed to be that you should use <strong>window.onload</strong> because it is good to separate your structure from the action.</p>
","588048"
"Get class name using jQuery","1013906","","<p>I want to get the class name using jQuery</p>

<p>And if it has an id </p>

<pre><code>&lt;div class=""myclass""&gt;&lt;/div&gt;
</code></pre>
","<p>After getting the element as jQuery object via other means than its class, then</p>

<pre><code>var className = $('#sidebar div:eq(14)').attr('class');
</code></pre>

<p>should do the trick. For the ID use <code>.attr('id')</code>.</p>

<p>If you are inside an event handler or other jQuery method, where the element is the pure DOM node without wrapper, you can use:</p>

<pre><code>this.className // for classes, and
this.id // for IDs
</code></pre>

<p>Both are standard DOM methods and well supported in all browsers.</p>
","2400396"
"Safely turning a JSON string into an object","1009408","","<p>Given a string of JSON data, how can you safely turn that string into a JavaScript object?</p>

<p>Obviously you can do this unsafely with something like...</p>

<pre><code>var obj = eval(""("" + json + ')');
</code></pre>

<p>...but that leaves us vulnerable to the json string containing other code, which it seems very dangerous to simply eval.</p>
","<pre><code>JSON.parse(jsonString);
</code></pre>

<p>Is a pure JavaScript approach so long as you can require a reasonably modern browser.</p>

<p>See also <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse"" rel=""noreferrer"">https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse</a></p>
","5686237"
"Disable same origin policy in Chrome","1008981","","<p>Is there a way to disable the <a href=""https://en.wikipedia.org/wiki/Same_origin_policy"" rel=""noreferrer"">same origin policy</a> on Google's <a href=""http://en.wikipedia.org/wiki/Google_Chrome"" rel=""noreferrer"">Chrome</a> browser?</p>

<p>This is strictly for development, not production, use.</p>
","<p>Close chrome (or chromium) and restart with the <code>--disable-web-security</code> argument. I just tested this and verified that I can access the contents of an iframe with src=""http://google.com"" embedded in a page served from ""localhost"" (tested under chromium 5 / ubuntu). For me the exact command was:</p>

<p><strong>Note  :  Kill all chrome instances before running command</strong></p>

<pre><code>chromium-browser --disable-web-security --user-data-dir
</code></pre>

<p>The browser will warn you that ""you are using an unsupported command line"" when it first opens, which you can ignore.</p>

<p>From the chromium source:</p>

<pre><code>// Don't enforce the same-origin policy. (Used by people testing their sites.)
const wchar_t kDisableWebSecurity[] = L""disable-web-security"";
</code></pre>

<hr>

<p>Before Chrome 48, you could just use:</p>

<pre><code>chromium-browser --disable-web-security
</code></pre>
","3177718"
"Remove element by id","1007896","","<p>When removing an element with standard JavaScript, you must go to its parent first:</p>

<pre><code>var element = document.getElementById(""element-id"");
element.parentNode.removeChild(element);
</code></pre>

<p>Having to go to the parent node first seems a bit odd to me, is there a reason JavaScript works like this?</p>
","<p>The DOM is organized in a tree of nodes, where each node has a value, along with a list of references to its child nodes. So <code>element.parentNode.removeChild(element)</code> mimics exactly what is happening internally: First you go the the parent node, then remove the reference to the child node.</p>

<p>As of DOM4, a helper function is provided to do the same thing: <a href=""https://developer.mozilla.org/en/docs/Web/API/ChildNode.remove""><code>element.remove()</code></a>. This <a href=""http://caniuse.com/#search=remove"">works in 87% of browsers</a> (as of 2016), but not IE 11. If you need to support older browsers, you can:</p>

<ul>
<li>Remove elements via the parent node, as in <a href=""https://www.google.com/search?q=What%20is%20the%20answer%20to%20the%20ultimate%20question%20of%20life,%20the%20universe,%20and%20everything%3F"">the question</a>,</li>
<li>modify the native DOM functions, as in <a href=""https://stackoverflow.com/a/18120786/405550"">Johan Dettmar's answer</a>, or</li>
<li>use a <a href=""https://github.com/WebReflection/dom4#dom4"">DOM4 polyfill</a>.</li>
</ul>
","27710003"
"JQuery - $ is not defined","998358","","<p>I have a simple jquery click event</p>

<pre><code>&lt;script type=""text/javascript""&gt;
    $(function() {
        $('#post').click(function() {
            alert(""test""); 
        });
    });
&lt;/script&gt;
</code></pre>

<p>and a jquery reference defined in the site.master</p>

<pre><code>&lt;script src=""&lt;%=ResolveUrl(""~/Scripts/jquery-1.3.2.js"")%&gt;"" type=""text/javascript""&gt;&lt;/script&gt;
</code></pre>

<p>I have checked that the script is being resolved correctly, i'm able to see the markup and view the script directly in firebug, so i must be being found. However i am still getting:</p>

<blockquote>
  <p>$ is not defined</p>
</blockquote>

<p>and non of the jquery works. I've also tried the various variations of this like $(document).ready and jQuery etc.</p>

<p>It's an MVC 2 app on .net 3.5, i'm sure i'm being really dense, everywhere on google says check the file is reference correctly, which i have checked and checked again, please advise! :/</p>
","<p>That error can only be caused by one of three things:</p>

<ol>
<li>Your JavaScript file is not being properly loaded into your page</li>
<li>You have a botched version of jQuery.  This could happen because someone edited the core file, or a plugin may have overwritten the $ variable.</li>
<li>You have JavaScript running before the page is fully loaded, and as such, before jQuery is fully loaded.</li>
</ol>

<p>You should check the <a href=""http://getfirebug.com/"" rel=""noreferrer"">Firebug</a> <em>net</em> panel to see if the file is actually being loaded properly.  If not, it will be highlighted red and will say ""404"" beside it.  If the file is loading properly, that means that the issue is number 2.</p>

<p>Make sure all jQuery javascript code is being run inside a code block such as:</p>

<pre><code>$(document).ready(function () {
  //your code here
});
</code></pre>

<p>This will ensure that your code is being loaded <strong>after</strong> jQuery has been initialized.</p>

<p>One final thing to check is to make sure that you are not loading any plugins <strong>before</strong> you load jQuery.  Plugins extend the ""$"" object, so if you load a plugin before loading jQuery core, then you'll get the error you described.</p>

<p><strong>Note:</strong> If you're loading code which does not require jQuery to run it does not need to be placed inside the jQuery ready handler. That code may be separated using <a href=""http://devdocs.io/dom/document/readystate"" rel=""noreferrer""><code>document.readyState</code></a>.</p>
","2195167"
"Set a default parameter value for a JavaScript function","995200","","<p>I would like a JavaScript function to have optional arguments which I set a default on, which gets used if the value isn't defined.  In Ruby you can do it like this:</p>

<pre><code>def read_file(file, delete_after = false)
  # code
end
</code></pre>

<p>Does this work in JavaScript?</p>

<pre><code>function read_file(file, delete_after = false) {
  // Code
}
</code></pre>
","<p>From ES6/ES2015, default parameters is in the language specification.</p>

<pre><code>function read_file(file, delete_after = false) {
  // Code
}
</code></pre>

<p>just works.</p>

<p>Reference: <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/default_parameters"" rel=""noreferrer"">Default Parameters - MDN</a></p>

<blockquote>
  <p>Default function parameters allow formal parameters to be initialized with default values if <strong>no value</strong> or <strong>undefined</strong> is passed.</p>
</blockquote>

<p>You can also <a href=""http://exploringjs.com/es6/ch_parameter-handling.html#sec_named-parameters"" rel=""noreferrer"">simulate default <em>named</em> parameters via destructuring</a>:</p>

<pre><code>// the `= {}` below lets you call the function without any parameters
function myFor({ start = 5, end = 1, step = -1 } = {}) { // (A)
    // Use the variables `start`, `end` and `step` here
    ···
}
</code></pre>

<p><strong>Pre ES2015</strong>,</p>

<p>There are a lot of ways, but this is my preferred method - it lets you pass in anything you want, including false or null. (<code>typeof null == ""object""</code>)</p>

<pre><code>function foo(a, b) {
  a = typeof a !== 'undefined' ? a : 42;
  b = typeof b !== 'undefined' ? b : 'default_b';
  ...
}
</code></pre>
","894877"
"Getting the ID of the element that fired an event","987887","","<p>Is there any way to get the ID of the element that fires an event?</p>

<p>I'm thinking something like:</p>

<pre><code>&lt;html&gt;
  &lt;head&gt;
    &lt;script type=""text/javascript"" src=""starterkit/jquery.js""&gt;&lt;/script&gt;
    &lt;script type=""text/javascript""&gt;
      $(document).ready(function () {
        $(""a"").click(function () {
          var test = caller.id;
          alert(test.val());
        });
      });
    &lt;/script&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;form class=""item"" id=""aaa""&gt;
      &lt;input class=""title""&gt;&lt;/input&gt;
    &lt;/form&gt;
    &lt;form class=""item"" id=""bbb""&gt;
      &lt;input class=""title""&gt;&lt;/input&gt;
    &lt;/form&gt;
  &lt;/body&gt;

&lt;/html&gt;
</code></pre>

<p>Except of course that the var <code>test</code> should contain the id <code>""aaa""</code>, if the event is fired from the first form, and <code>""bbb""</code>, if the event is fired from the second form.</p>
","<p>In jQuery <code>event.target</code> always refers to the element that triggered the event, where <code>'event'</code> is the parameter passed to the function. <a href=""http://api.jquery.com/category/events/event-object/"" rel=""noreferrer"">http://api.jquery.com/category/events/event-object/</a></p>

<pre><code>$(document).ready(function() {
    $(""a"").click(function(event) {
        alert(event.target.id);
    });
});
</code></pre>

<p>Note also that <code>'this'</code> will also work, but that it is not a jQuery object, so if you wish to use a jQuery function on it then you must refer to it as <code>'$(this)'</code>, e.g.:</p>

<pre><code>$(document).ready(function() {
    $(""a"").click(function(event) {
        // this.append wouldn't work
        $(this).append("" Clicked"");
    });
});
</code></pre>
","48684"
"How do I convert a string into an integer in JavaScript?","983533","","<p>How do I convert a <code>string</code> into an <code>integer</code> in JavaScript?</p>
","<p>The simplest way would be to use the native <code>Number</code> function:</p>

<pre><code>var x = Number(""1000"")
</code></pre>

<p>If that doesn't work for you, then there are the <strong>parseInt</strong>, <strong>unary plus</strong>, <strong>parseFloat with floor</strong>, and <strong>Math.round</strong> methods.</p>

<p>parseInt:</p>

<pre><code>var x = parseInt(""1000"", 10); // you want to use radix 10
    // so you get a decimal number even with a leading 0 and an old browser ([IE8, Firefox 20, Chrome 22 and older][1])
</code></pre>

<p>unary plus
if your string is already in the form of an integer:</p>

<pre><code>var x = +""1000"";
</code></pre>

<p>if your string is or might be a float and you want an integer:</p>

<pre><code>var x = Math.floor(""1000.01""); //floor automatically converts string to number
</code></pre>

<p>or, if you're going to be using Math.floor several times:</p>

<pre><code>var floor = Math.floor;
var x = floor(""1000.01"");
</code></pre>

<p>If you're the type who forgets to put the radix in when you call parseInt, you can use parseFloat and round it however you like. Here I use floor.</p>

<pre><code>var floor = Math.floor;
var x = floor(parseFloat(""1000.01""));
</code></pre>

<p>Interestingly, Math.round (like Math.floor) will do a string to number conversion, so if you want the number rounded (or if you have an integer in the string), this is a great way, maybe my favorite:</p>

<pre><code>var round = Math.round;
var x = round(""1000""); //equivalent to round(""1000"",0)
</code></pre>
","1133814"
"jQuery get specific option tag text","981440","","<p>All right, say I have this:</p>

<pre><code>&lt;select id='list'&gt;
    &lt;option value='1'&gt;Option A&lt;/option&gt;
    &lt;option value='2'&gt;Option B&lt;/option&gt;
    &lt;option value='3'&gt;Option C&lt;/option&gt;
&lt;/select&gt;
</code></pre>

<p>What would the selector look like if I wanted to get ""Option B"" when I have the value '2'?</p>

<p>Please note that this is not asking how to get the <em>selected</em> text value, but just any one of them, whether selected or not, depending on the value attribute. I tried:</p>

<pre><code>$(""#list[value='2']"").text();
</code></pre>

<p>But it is not working.</p>
","<p>It's looking for an element with id <code>list</code> which has a property <code>value</code> equal to 2. What you want is the <code>option</code> child of the <code>list</code>.</p>

<pre><code>$(""#list option[value='2']"").text()
</code></pre>
","196687"
"How does Access-Control-Allow-Origin header work?","976585","","<p>Apparently, I have completely misunderstood its semantics. I thought of something like this:</p>

<ol>
<li>A client downloads javascript code MyCode.js from http://siteA - <strong>the origin</strong>.</li>
<li>The response header of MyCode.js contains <strong>Access-Control-Allow-Origin: http://siteB</strong>, which I thought meant that MyCode.js was allowed to make cross-origin references to the site B.</li>
<li>The client triggers some functionality of MyCode.js, which in turn make requests to http://siteB, which should be fine, despite being cross-origin requests.</li>
</ol>

<p>Well, I am wrong. It does not work like this at all. So, I have read <a href=""http://en.wikipedia.org/wiki/Cross-origin_resource_sharing"">Cross-origin resource sharing</a> and attempted to read <a href=""http://www.w3.org/TR/cors/."">Cross-Origin Resource Sharing in w3c recommendation</a></p>

<p>One thing is sure - I still do not understand how am I supposed to use this header. </p>

<p>I have full control of both site A and site B. How do I enable the javascript code downloaded from the site A to access resources on the site B using this header?</p>

<p>P.S.</p>

<p>I do not want to utilize JSONP.</p>
","<p><code>Access-Control-Allow-Origin</code> is a <a href=""http://www.html5rocks.com/en/tutorials/cors/"" rel=""noreferrer"">CORS (Cross-Origin Resource Sharing) header</a>.</p>

<p>When Site A tries to fetch content from Site B,  Site B can send an <code>Access-Control-Allow-Origin</code> response header to tell the browser that the content of this page is accessible to certain origins. (An <em>origin</em> is a <a href=""https://stackoverflow.com/a/19542686/710446"">domain, plus a scheme and port number</a>.)  By default, Site B's pages are <a href=""https://en.wikipedia.org/wiki/Same-origin_policy"" rel=""noreferrer"">not accessible to any other origin</a>; using the <code>Access-Control-Allow-Origin</code> header opens a door for cross-origin access by specific requesting origins.</p>

<p>For each resource/page that Site B wants to make accessible to Site A, Site B should serve its pages with the response header:</p>

<pre><code>Access-Control-Allow-Origin: http://siteA.com
</code></pre>

<p>Modern browsers will not block cross-domain requests outright.  If Site A requests a page from Site B, the browser will actually fetch the requested page <em>on the network level</em> and check if the response headers list Site A as a permitted requester domain.  If Site B has not indicated that Site A is allowed to access this page, the browser will trigger the <code>XMLHttpRequest</code>'s <code>error</code> event and  deny the response data to the requesting JavaScript code.</p>

<h1>Non-simple requests</h1>

<p>What happens on the network level can be <em>slightly</em> more complex than explained above. If the request is a <a href=""http://www.html5rocks.com/en/tutorials/cors/#toc-handling-a-not-so-simple-request"" rel=""noreferrer"">""non-simple"" request</a>, the browser first sends a data-less ""preflight"" OPTIONS request, to verify that the server will accept the request. A request is non-simple when either (or both):</p>

<ul>
<li>using an HTTP verb other than GET or POST (e.g. PUT, DELETE)</li>
<li>using non-simple request headers; the only simple requests headers are:

<ul>
<li><code>Accept</code></li>
<li><code>Accept-Language</code></li>
<li><code>Content-Language</code></li>
<li><code>Content-Type</code> (this is only simple when its value is <code>application/x-www-form-urlencoded</code>, <code>multipart/form-data</code>, or <code>text/plain</code>)</li>
</ul></li>
</ul>

<p>If the server responds to the OPTIONS preflight with appropriate response headers (<code>Access-Control-Allow-Headers</code> for non-simple headers, <code>Access-Control-Allow-Methods</code> for non-simple verbs) that match the non-simple verb and/or non-simple headers, then the browser sends the actual request.</p>

<p>Supposing that Site A wants to send a PUT request for <code>/somePage</code>, with a non-simple <code>Content-Type</code> value of <code>application/json</code>, the browser would first send a preflight request:</p>

<pre><code>OPTIONS /somePage HTTP/1.1
Origin: http://siteA.com
Access-Control-Request-Method: PUT
Access-Control-Request-Headers: Content-Type
</code></pre>

<p>Note that <code>Access-Control-Request-Method</code> and <code>Access-Control-Request-Headers</code> are added by the browser automatically; you do not need to add them. This OPTIONS preflight gets the successful response headers:</p>

<pre><code>Access-Control-Allow-Origin: http://siteA.com
Access-Control-Allow-Methods: GET, POST, PUT
Access-Control-Allow-Headers: Content-Type
</code></pre>

<p>When sending the actual request (after preflight is done), the behavior is identical to how a simple request is handled. In other words, a non-simple request whose preflight is successful is treated the same as a simple request (i.e., the server must still send <code>Access-Control-Allow-Origin</code> again for the actual response).</p>

<p>The browsers sends the actual request:</p>

<pre><code>PUT /somePage HTTP/1.1
Origin: http://siteA.com
Content-Type: application/json

{ ""myRequestContent"": ""JSON is so great"" }
</code></pre>

<p>And the server sends back an <code>Access-Control-Allow-Origin</code>, just as it would for a simple request:</p>

<pre><code>Access-Control-Allow-Origin: http://siteA.com
</code></pre>

<p>See <a href=""https://stackoverflow.com/a/13400954/710446"">Understanding XMLHttpRequest over CORS</a> for a little more information about non-simple requests.</p>
","10636765"
"jQuery Ajax File Upload","970837","","<p>Can I use the following jQuery code to perform file upload using post method of an Ajax request ?</p>

<pre><code>$.ajax({
    type: ""POST"",
    timeout: 50000,
    url: url,
    data: dataString,
    success: function (data) {
        alert('success');
        return false;
    }
});
</code></pre>

<p>If it is possible, do I need to fill ""data"" part? Is it the correct way? I only post the file to the server side.</p>

<p>I have been Googling around, but what I found was a plugin while in my plan I do not want to use it. At least for the moment.</p>
","<p>file upload is <strike>not</strike> possible through ajax.
You can upload file, without refreshing page by using IFrame.
you can check further detail <a href=""http://www.ajaxf1.com/tutorial/ajax-file-upload-tutorial.html"" rel=""noreferrer"">here</a></p>

<p><strong>UPDATE:</strong></p>

<p>With XHR2, File upload through AJAX is supported. E.g. through <a href=""https://developer.mozilla.org/en-US/docs/Web/Guide/Using_FormData_Objects"" rel=""noreferrer"">FormData</a> object, but unfortunately it is not supported by all/old browsers.</p>

<p>FormData support starts from following desktop browsers versions.
IE 10+,
Firefox 4.0+,
Chrome 7+,
Safari 5+,
Opera 12+</p>

<p>For more detail, see <a href=""https://developer.mozilla.org/en-US/docs/XMLHttpRequest/FormData"" rel=""noreferrer"">MDN link</a></p>
","2320097"
"Check if element exists in jQuery","966688","","<p>How do I check if an element exists if the element is created by <code>.append()</code> method?
<code>$('elemId').length</code> doesn't work for me.</p>
","<blockquote>
  <p><code>$('elemId').length</code> doesn't work for
  me.</p>
</blockquote>

<p>You need to put <code>#</code> before element id:</p>

<pre><code>$('#elemId').length
---^
</code></pre>

<hr>

<p>With vanilla JavaScript, you don't need the hash (<code>#</code>) e.g. <code>document.getElementById('id_here')</code> , however when using jQuery, you do need to put hash to target elements based on <code>id</code> just like CSS.</p>
","4592511"
"JavaScript that executes after page load","964297","","<p>I'm executing an external script, using a <code>&lt;script&gt;</code> inside <code>&lt;head&gt;</code>.</p>

<p>Now since the script executes <strong>before</strong> the page has loaded, I can't access the <code>&lt;body&gt;</code>, among other things. I'd like to execute some JavaScript after the document has been ""loaded"" (HTML fully downloaded and in-RAM). Are there any events that I can hook onto when my script executes, that will get triggered on page load?</p>
","<p>These solutions will work:</p>

<pre><code>&lt;body onload=""script();""&gt;
</code></pre>

<p>or</p>

<pre><code>document.onload = function ...
</code></pre>

<p>or even</p>

<pre><code>window.onload = function ...
</code></pre>

<p>Note that <strong>the last option is a better way to go</strong> since it is <a href=""http://en.wikipedia.org/wiki/Unobtrusive_JavaScript"" rel=""noreferrer"">unobstrusive</a> and is <a href=""https://stackoverflow.com/questions/807878/javascript-that-executes-after-page-load#comment617710_807891"">considered more standard</a>.</p>
","807895"
"How do I return the response from an asynchronous call?","958803","","<p>I have a function <code>foo</code> which makes an Ajax request. How can I return the response from <code>foo</code>?</p>

<p>I tried to return the value from the <code>success</code> callback as well as assigning the response to a local variable inside the function and return that one, but none of those ways actually return the response.</p>

<pre><code>function foo() {
    var result;

    $.ajax({
        url: '...',
        success: function(response) {
            result = response;
            // return response; // &lt;- I tried that one as well
        }
    });

    return result;
}

var result = foo(); // It always ends up being `undefined`.
</code></pre>
","<blockquote>
  <p><em><code>-&gt;</code> For a more general explanation of async behaviour with different examples, please see</em> <a href=""https://stackoverflow.com/q/23667086/218196"">Why is my variable unaltered after I modify it inside of a function? - Asynchronous code reference</a>  </p>
  
  <p><em><code>-&gt;</code> If you already understand the problem, skip to the possible solutions below.</em></p>
</blockquote>

<h1>The problem</h1>

<p>The <strong>A</strong> in <a href=""https://en.wikipedia.org/wiki/Ajax_(programming)"" rel=""noreferrer"">Ajax</a> stands for <a href=""https://www.merriam-webster.com/dictionary/asynchronous"" rel=""noreferrer""><strong>asynchronous</strong></a> . That means sending the request (or rather receiving the response) is taken out of the normal execution flow. In your example, <code>$.ajax</code> returns immediately and the next statement, <code>return result;</code>, is executed before the function you passed as <code>success</code> callback was even called.</p>

<p>Here is an analogy which hopefully makes the difference between synchronous and asynchronous flow clearer: </p>

<h2>Synchronous</h2>

<p>Imagine you make a phone call to a friend and ask him to look something up for you. Although it might take a while, you wait on the phone and stare into space, until your friend gives you the answer that you needed.</p>

<p>The same is happening when you make a function call containing ""normal"" code:</p>

<pre><code>function findItem() {
    var item;
    while(item_not_found) {
        // search
    }
    return item;
}

var item = findItem();

// Do something with item
doSomethingElse();
</code></pre>

<p>Even though <code>findItem</code> might take a long time to execute, any code coming after <code>var item = findItem();</code> has to <em>wait</em> until the function returns the result.</p>

<h2>Asynchronous</h2>

<p>You call your friend again for the same reason. But this time you tell him that you are in a hurry and he should <em>call you back</em> on your mobile phone. You hang up, leave the house and do whatever you planned to do. Once your friend calls you back, you are dealing with the information he gave to you.</p>

<p>That's exactly what's happening when you do an Ajax request. </p>

<pre><code>findItem(function(item) {
    // Do something with item
});
doSomethingElse();
</code></pre>

<p>Instead of waiting for the response, the execution continues immediately and the statement after the Ajax call is executed. To get the response eventually, you provide a function to be called once the response was received, a <em>callback</em> (notice something? <em>call back</em> ?). Any statement coming after that call is executed before the callback is called.</p>

<hr>

<hr>

<h1>Solution(s)</h1>

<p><strong>Embrace the asynchronous nature of JavaScript!</strong> While certain asynchronous operations provide synchronous counterparts (so does ""Ajax""), it's generally discouraged to use them, especially in a browser context.</p>

<p>Why is it bad do you ask?</p>

<p>JavaScript runs in the UI thread of the browser and any long running process will lock the UI, making it unresponsive. Additionally, there is an upper limit on the execution time for JavaScript and the browser will ask the user whether to continue the execution or not. </p>

<p>All of this is really bad user experience. The user won't be able to tell whether everything is working fine or not. Furthermore, the effect will be worse for users with a slow connection.</p>

<p>In the following we will look at three different solutions that are all building on top of each other:</p>

<ul>
<li><strong>Promises with <code>async/await</code></strong> (ES2017+, available in older browsers if you use a transpiler or regenerator)</li>
<li><strong>Callbacks</strong> (popular in node)</li>
<li><strong>Promises with <code>then()</code></strong> (ES2015+, available in older browsers if you use one of the many promise libraries)</li>
</ul>

<p><strong>All three are available in current browsers, and node 7+.</strong> </p>

<hr>

<h2>ES2017+: Promises with <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function"" rel=""noreferrer""><code>async/await</code></a></h2>

<p>The new ECMAScript version released in 2017 introduced <em>syntax-level support</em> for asynchronous functions. With the help of <code>async</code> and <code>await</code>, you can write asynchronous in a ""synchronous style"". Make no mistake though: The code is still asynchronous, but it's easier to read/understand.</p>

<p><code>async/await</code> builds on top of promises: an <code>async</code> function always returns a promise. <code>await</code> ""unwraps"" a promise and either result in the value the promise was resolved with or throws an error if the promise was rejected.</p>

<p><strong>Important:</strong> You can only use <code>await</code> inside an <code>async</code> function. That means that at the very top level, you still have to work directly with the promise.</p>

<p>You can read more about <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function"" rel=""noreferrer""><code>async</code></a> and <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await"" rel=""noreferrer""><code>await</code></a> on MDN.</p>

<p>Here is an example that builds on top of delay above:</p>

<pre><code>// Using 'superagent' which will return a promise.
var superagent = require('superagent')

// This is isn't declared as `async` because it already returns a promise
function delay() {
  // `delay` returns a promise
  return new Promise(function(resolve, reject) {
    // Only `delay` is able to resolve or reject the promise
    setTimeout(function() {
      resolve(42); // After 3 seconds, resolve the promise with value 42
    }, 3000);
  });
}


async function getAllBooks() {
  try {
    // GET a list of book IDs of the current user
    var bookIDs = await superagent.get('/user/books');
    // wait for a second (just for the sake of this example)
    await delay(1000);
    // GET information about each book
    return await superagent.get('/books/ids='+JSON.stringify(bookIDs));
  } catch(error) {
    // If any of the awaited promises was rejected, this catch block
    // would catch the rejection reason
    return null;
  }
}

// Async functions always return a promise
getAllBooks()
  .then(function(books) {
    console.log(books);
  });
</code></pre>

<p>Newer <a href=""https://kangax.github.io/compat-table/es2016plus/#test-async_functions"" rel=""noreferrer"">browser</a> and <a href=""http://node.green/#ES2017-features-async-functions"" rel=""noreferrer"">node</a> versions support <code>async/await</code>. You can also support older environments by transforming your code to ES5 with the help of <a href=""https://github.com/facebook/regenerator"" rel=""noreferrer"">regenerator</a> (or tools that use regenerator, such as <a href=""https://babeljs.io/"" rel=""noreferrer"">Babel</a>).</p>

<hr>

<h2>Let functions accept <em>callbacks</em></h2>

<p>A callback is simply a function passed to another function. That other function can call the function passed whenever it is ready. In the context of an asynchronous process, the callback will be called whenever the asynchronous process is done. Usually, the result is passed to the callback.</p>

<p>In the example of the question, you can make <code>foo</code> accept a callback and use it as <code>success</code> callback. So this</p>

<pre><code>var result = foo();
// Code that depends on 'result'
</code></pre>

<p>becomes</p>

<pre><code>foo(function(result) {
    // Code that depends on 'result'
});
</code></pre>

<p>Here we defined the function ""inline"" but you can pass any function reference:</p>

<pre><code>function myCallback(result) {
    // Code that depends on 'result'
}

foo(myCallback);
</code></pre>

<p><code>foo</code> itself is defined as follows:</p>

<pre><code>function foo(callback) {
    $.ajax({
        // ...
        success: callback
    });
}
</code></pre>

<p><code>callback</code> will refer to the function we pass to <code>foo</code> when we call it and we simply pass it on to <code>success</code>. I.e. once the Ajax request is successful, <code>$.ajax</code> will call <code>callback</code> and pass the response to the callback (which can be referred to with <code>result</code>, since this is how we defined the callback).</p>

<p>You can also process the response before passing it to the callback:</p>

<pre><code>function foo(callback) {
    $.ajax({
        // ...
        success: function(response) {
            // For example, filter the response
            callback(filtered_response);
        }
    });
}
</code></pre>

<p>It's easier to write code using callbacks than it may seem. After all, JavaScript in the browser is heavily event-driven (DOM events). Receiving the Ajax response is nothing else but an event.<br>
Difficulties could arise when you have to work with third-party code, but most problems can be solved by just thinking through the application flow.</p>

<hr>

<h2>ES2015+: Promises with <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"" rel=""noreferrer"">then()</a></h2>

<p>The <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"" rel=""noreferrer"">Promise API</a> is a new feature of ECMAScript 6 (ES2015), but it has good <a href=""http://caniuse.com/#feat=promises"" rel=""noreferrer"" title=""caniuse"">browser support</a> already. There are also many libraries which implement the standard Promises API and provide additional methods to ease the use and composition of asynchronous functions (e.g. <a href=""https://github.com/petkaantonov/bluebird"" rel=""noreferrer"">bluebird</a>).</p>

<p>Promises are containers for <em>future</em> values. When the promise receives the value (it is <em>resolved</em>) or when it is cancelled (<em>rejected</em>), it notifies all of its ""listeners"" who want to access this value.</p>

<p>The advantage over plain callbacks is that they allow you to decouple your code and they are easier to compose.</p>

<p>Here is a simple example of using a promise:</p>

<pre><code>function delay() {
  // `delay` returns a promise
  return new Promise(function(resolve, reject) {
    // Only `delay` is able to resolve or reject the promise
    setTimeout(function() {
      resolve(42); // After 3 seconds, resolve the promise with value 42
    }, 3000);
  });
}

delay()
  .then(function(v) { // `delay` returns a promise
    console.log(v); // Log the value once it is resolved
  })
  .catch(function(v) {
    // Or do something else if it is rejected 
    // (it would not happen in this example, since `reject` is not called).
  });
</code></pre>

<p>Applied to our Ajax call we could use promises like this:</p>

<pre><code>function ajax(url) {
  return new Promise(function(resolve, reject) {
    var xhr = new XMLHttpRequest();
    xhr.onload = function() {
      resolve(this.responseText);
    };
    xhr.onerror = reject;
    xhr.open('GET', url);
    xhr.send();
  });
}

ajax(""/echo/json"")
  .then(function(result) {
    // Code depending on result
  })
  .catch(function() {
    // An error occurred
  });
</code></pre>

<p>Describing all the advantages that promise offer is beyond the scope of this answer, but if you write new code, you should seriously consider them. They provide a great abstraction and separation of your code.</p>

<p>More information about promises: <a href=""http://www.html5rocks.com/en/tutorials/es6/promises/"" rel=""noreferrer"">HTML5 rocks - JavaScript Promises</a></p>

<h3>Side note: jQuery's deferred objects</h3>

<p><a href=""https://stackoverflow.com/questions/4866721/what-are-deferred-objects"">Deferred objects</a> are jQuery's custom implementation of promises (before the Promise API was standardized). They behave almost like promises but expose a slightly different API.</p>

<p>Every Ajax method of jQuery already returns a ""deferred object"" (actually a promise of a deferred object) which you can just return from your function:</p>

<pre><code>function ajax() {
    return $.ajax(...);
}

ajax().done(function(result) {
    // Code depending on result
}).fail(function() {
    // An error occurred
});
</code></pre>

<h3>Side note: Promise gotchas</h3>

<p>Keep in mind that promises and deferred objects are just <em>containers</em> for a future value, they are not the value itself. For example, suppose you had the following:</p>

<pre><code>function checkPassword() {
    return $.ajax({
        url: '/password',
        data: {
            username: $('#username').val(),
            password: $('#password').val()
        },
        type: 'POST',
        dataType: 'json'
    });
}

if (checkPassword()) {
    // Tell the user they're logged in
}
</code></pre>

<p>This code misunderstands the above asynchrony issues. Specifically, <code>$.ajax()</code> doesn't freeze the code while it checks the '/password' page on your server - it sends a request to the server and while it waits, immediately returns a jQuery Ajax Deferred object, not the response from the server. That means the <code>if</code> statement is going to always get this Deferred object, treat it as <code>true</code>, and proceed as though the user is logged in. Not good.</p>

<p>But the fix is easy:</p>

<pre><code>checkPassword()
.done(function(r) {
    if (r) {
        // Tell the user they're logged in
    } else {
        // Tell the user their password was bad
    }
})
.fail(function(x) {
    // Tell the user something bad happened
});
</code></pre>

<hr>

<hr>

<h2>Not recommended: Synchronous ""Ajax"" calls</h2>

<p>As I mentioned, some(!) asynchronous operations have synchronous counterparts. I don't advocate their use, but for completeness' sake, here is how you would perform a synchronous call:</p>

<h3>Without jQuery</h3>

<p>If you directly use a <a href=""http://www.w3.org/TR/XMLHttpRequest/"" rel=""noreferrer""><code>XMLHTTPRequest</code></a> object, pass <code>false</code> as third argument to <a href=""http://www.w3.org/TR/XMLHttpRequest/#the-open%28%29-method"" rel=""noreferrer""><code>.open</code></a>.</p>

<h3>jQuery</h3>

<p>If you use <a href=""http://api.jquery.com/jQuery.ajax/"" rel=""noreferrer"">jQuery</a>, you can set the <code>async</code> option to <code>false</code>. Note that this option is <em>deprecated</em> since jQuery 1.8.
You can then either still use a <code>success</code> callback or access the <code>responseText</code> property of the <a href=""http://api.jquery.com/jQuery.ajax/#jqXHR"" rel=""noreferrer"">jqXHR object</a>:</p>

<pre><code>function foo() {
    var jqXHR = $.ajax({
        //...
        async: false
    });
    return jqXHR.responseText;
}
</code></pre>

<p>If you use any other jQuery Ajax method, such as <code>$.get</code>, <code>$.getJSON</code>, etc., you have to change it to <code>$.ajax</code> (since you can only pass configuration parameters to <code>$.ajax</code>).</p>

<p><strong>Heads up!</strong> It is not possible to make a synchronous <a href=""https://stackoverflow.com/questions/2067472/please-explain-jsonp"">JSONP</a> request. JSONP by its very nature is always asynchronous (one more reason to not even consider this option).</p>
","14220323"
"Window.location.href and Window.open () methods in JavaScript","957661","","<p>What is the difference between <code>window.location.href</code> and <code>window.open ()</code> methods in JavaScript?</p>
","<p><code>window.location.href</code> is <strong>not</strong> a method, it's a property that will tell you the current URL location of the browser. Changing the value of the property will redirect the page.</p>

<p><code>window.open()</code> is a method that you can pass a URL to that you want to open in a new window. For example:</p>

<p><strong>window.location.href example:</strong></p>

<pre><code>window.location.href = 'http://www.google.com'; //Will take you to Google.
</code></pre>

<p><strong>window.open() example:</strong></p>

<pre><code>window.open('http://www.google.com'); //This will open Google in a new window.
</code></pre>

<p><hr />
Additional Information:</p>

<p><code>window.open()</code> can be passed additional parameters. See: <a href=""http://www.javascript-coder.com/window-popup/javascript-window-open.phtml"">window.open tutorial</a></p>
","7077808"
"Converting string to date in js","948737","","<p>How can I convert a string to date in js?</p>

<pre><code>var st = ""date in some format""
var dt = new date();

var dt_st= //st in date format same as dt
</code></pre>
","<p>The best string format for string parsing is the date ISO format together with the JavaScript Date object constructor. </p>

<p>Examples of ISO format: <code>YYYY-MM-DD</code> or <code>YYYY-MM-DDTHH:MM:SS</code>.</p>

<p><strong>But wait!</strong>  Just using the ""ISO format"" doesn't work reliably by itself. String are sometimes parsed as UTC and sometimes as localtime (based on browser vendor and version). The best practice should always be to store dates as UTC and make computations as UTC.</p>

<p>To parse a date as UTC, append a <strong>Z</strong> - e.g.: <code>new Date('2011-04-11T10:20:30Z')</code>.</p>

<p>To display a date in UTC, use <code>.toUTCString()</code>,<br>
to display a date in user's local time, use <code>.toString()</code>.</p>

<p>More info on <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date"" rel=""noreferrer"">MDN | Date</a> and <a href=""https://stackoverflow.com/a/40768745/584192"">this answer</a>.</p>

<p>For old Internet Explorer compatibility (IE versions less than 9 do not support ISO format in Date constructor), you should split datetime string representation to it's parts and then you can use constructor using datetime parts, e.g.:  <code>new Date('2011', '04' - 1, '11', '11', '51', '00')</code>. Note that the number of the month must be 1 less.</p>

<hr>

<p><strong>Alternate method - use an appropriate library:</strong></p>

<p>You can also take advantage of the library <a href=""http://momentjs.com"" rel=""noreferrer"">Moment.js</a> that allows parsing date with the specified time zone.</p>
","5619588"
"How to open a Bootstrap modal window using jQuery?","943098","","<p>I'm using Twitter Bootstrap modal window functionality. When someone clicks submit on my form, I want to show the modal window upon clicking the ""submit button"" in the form.</p>

<pre><code>&lt;form id=""myform"" class=""form-wizard""&gt;
    &lt;h2 class=""form-wizard-heading""&gt;BootStap Wizzard Form&lt;/h2&gt;
    &lt;input type=""text"" value=""""/&gt;
    &lt;input type=""submit""/&gt;
&lt;/form&gt;

&lt;!-- Modal --&gt;
&lt;div id=""myModal"" class=""modal hide fade"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true""&gt;
    &lt;div class=""modal-header""&gt;
        &lt;button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true""&gt;×&lt;/button&gt;
        &lt;h3 id=""myModalLabel""&gt;Modal header&lt;/h3&gt;
    &lt;/div&gt;
    &lt;div class=""modal-body""&gt;
        &lt;p&gt;One fine body…&lt;/p&gt;
    &lt;/div&gt;
    &lt;div class=""modal-footer""&gt;
        &lt;button class=""btn"" data-dismiss=""modal"" aria-hidden=""true""&gt;Close&lt;/button&gt;
        &lt;button class=""btn btn-primary""&gt;Save changes&lt;/button&gt;
    &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p>jQuery:</p>

<pre><code>$('#myform').on('submit', function(ev) {
    $('#my-modal').modal({
        show: 'false'
    }); 


    var data = $(this).serializeObject();
    json_data = JSON.stringify(data);
    $(""#results"").text(json_data); 
    $("".modal-body"").text(json_data); 

    // $(""#results"").text(data);

    ev.preventDefault();
});
</code></pre>
","<p>Bootstrap has a few functions that can be called manually on modals:</p>

<pre><code>$('#myModal').modal('toggle');
$('#myModal').modal('show');
$('#myModal').modal('hide');
</code></pre>

<p>You can see more here: <a href=""http://getbootstrap.com/javascript/#modals"" rel=""noreferrer"">Bootstrap modal component</a></p>

<p>Specifically the <a href=""http://getbootstrap.com/javascript/#modals-methods"" rel=""noreferrer"">methods section</a>.</p>

<p>So you would need to change:</p>

<pre><code>$('#my-modal').modal({
    show: 'false'
}); 
</code></pre>

<p>to:</p>

<pre><code>$('#myModal').modal('show'); 
</code></pre>

<p>If you're looking to make a custom popup of your own, here's a suggested video from another community member:</p>

<p><a href=""https://www.youtube.com/watch?v=zK4nXa84Km4"" rel=""noreferrer"">https://www.youtube.com/watch?v=zK4nXa84Km4</a></p>
","13183713"
"How to check a radio button with jQuery?","941372","","<p>I try to check a radio button with jQuery. Here's my code:</p>

<pre><code>&lt;form&gt;
    &lt;div id='type'&gt;
        &lt;input type='radio' id='radio_1' name='type' value='1' /&gt;
        &lt;input type='radio' id='radio_2' name='type' value='2' /&gt;
        &lt;input type='radio' id='radio_3' name='type' value='3' /&gt; 
    &lt;/div&gt;
&lt;/form&gt;
</code></pre>

<p>And the JavaScript: </p>

<pre><code>jQuery(""#radio_1"").attr('checked', true);
</code></pre>

<p>Doesn't work:</p>

<pre><code>jQuery(""input[value='1']"").attr('checked', true);
</code></pre>

<p>Doesn't work:</p>

<pre><code>jQuery('input:radio[name=""type""]').filter('[value=""1""]').attr('checked', true);
</code></pre>

<p>Doesn't work:</p>

<p>Do you have another idea? What am I missing?</p>
","<p>For versions of jQuery equal or above (>=) 1.6, use:</p>

<pre><code>$(""#radio_1"").prop(""checked"", true);
</code></pre>

<p>For versions prior to (&lt;) 1.6, use:</p>

<pre><code>$(""#radio_1"").attr('checked', 'checked');
</code></pre>

<p><strong>Tip:</strong> You may also want to call <code>click()</code> or <code>change()</code> on the radio button afterwards. <em>See comments for more info.</em></p>
","5665942"
"jQuery Get Selected Option From Dropdown","937928","","<p>Usually I use <code>$(""#id"").val()</code> to return the value of the selected option, but this time it doesn't work.
The selected tag has the id <code>aioConceptName</code></p>

<p><strong>html code</strong></p>

<pre><code>&lt;label&gt;Name&lt;/label&gt;
&lt;input type=""text"" name=""name"" /&gt;
&lt;select id=""aioConceptName""&gt;
    &lt;option&gt;choose io&lt;/option&gt;
    &lt;option&gt;roma&lt;/option&gt;
    &lt;option&gt;totti&lt;/option&gt;
&lt;/select&gt;
</code></pre>
","<p>For dropdown options you probably want something like this:</p>

<pre><code>var conceptName = $('#aioConceptName').find("":selected"").text();
</code></pre>

<p>The reason <code>val()</code> doesn't do the trick is because clicking an option doesn't change the value of the dropdown--it just adds the <code>:selected</code> property to the selected option which is a <em>child</em> of the dropdown.</p>
","10659117"
"JavaScript check if variable exists (is defined/initialized)","933793","","<p>Which method of checking if a variable has been initialized is better/correct?
(Assuming the variable could hold anything (string, int, object, function, etc.))</p>

<pre><code>if (elem) { // or !elem
</code></pre>

<p>or</p>

<pre><code>if (typeof(elem) !== 'undefined') {
</code></pre>

<p>or</p>

<pre><code>if (elem != null) {
</code></pre>
","<p>The <code>typeof</code> operator will check if the variable is really undefined.</p>

<pre><code>if (typeof variable === 'undefined') {
    // variable is undefined
}
</code></pre>

<p>The <code>typeof</code> operator, unlike the other operators, doesn't throw a <em>ReferenceError</em> exception when used with an undeclared variable.</p>

<p>However, do note that <code>typeof null</code> will return <code>""object""</code>. We have to be careful to avoid the mistake of initializing a variable to <code>null</code>. To be safe, this is what we could use instead:</p>

<pre><code>if (typeof variable === 'undefined' || variable === null) {
    // variable is undefined or null
}
</code></pre>

<hr>

<p>For more info on using strict comparison <code>===</code> instead of simple equality <code>==</code>, see:<br><a href=""https://stackoverflow.com/q/359494/584192"">Which equals operator (== vs ===) should be used in JavaScript comparisons?</a></p>
","6509422"
"Creating multiline strings in JavaScript","925511","","<p>I have the following code in Ruby. I want to convert this code into JavaScript. what's the equivalent code in JS?</p>

<pre><code>text = &lt;&lt;""HERE""
This
Is
A
Multiline
String
HERE
</code></pre>
","<h3>Update:</h3>

<p>ECMAScript 6 (ES6) introduces a new type of literal, namely <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings"" rel=""noreferrer""><strong>template literals</strong></a>. They have many features, variable interpolation among others, but most importantly for this question, they can be multiline.</p>

<p>A template literal is delimited by <em>backticks</em>:</p>

<pre><code>var html = `
  &lt;div&gt;
    &lt;span&gt;Some HTML here&lt;/span&gt;
  &lt;/div&gt;
`;
</code></pre>

<p>(Note: I'm not advocating to use HTML in strings)</p>

<p><a href=""https://kangax.github.io/compat-table/es6/#template_strings"" rel=""noreferrer"">Browser support is OK</a>, but you can use <a href=""https://babeljs.io/"" rel=""noreferrer"">transpilers</a> to be more compatible.</p>

<hr>

<h3>Original ES5 answer:</h3>

<p>Javascript doesn't have a here-document syntax. You can escape the literal newline, however, which comes close:</p>

<pre><code>""foo \
bar""
</code></pre>
","805113"
"Is there a link to the ""latest"" jQuery library on Google APIs?","923885","","<p>I use the following for a jQuery link in my <code>&lt;script&gt;</code> tags:</p>

<pre><code>http://ajax.googleapis.com/ajax/libs/jquery/1.2.6/jquery.js
</code></pre>

<p>Is there a link to the ""latest"" version? Something like the following (which doesn't work):</p>

<pre><code>http://ajax.googleapis.com/ajax/libs/jquery/latest/jquery.js
</code></pre>

<p>(Obviously not necessarily a great plan to link your code to potentially changing libraries but useful in development.)</p>
","<p><strong>Up until jQuery 1.11.1</strong>, you could use the following URLs to get the latest version of jQuery:</p>

<ul>
<li><a href=""http://code.jquery.com/jquery-latest.min.js"" rel=""noreferrer"">http://code.jquery.com/jquery-latest.min.js</a> - jQuery hosted (minified)</li>
<li><a href=""http://code.jquery.com/jquery-latest.js"" rel=""noreferrer"">http://code.jquery.com/jquery-latest.js</a> - jQuery hosted (uncompressed)</li>
<li><a href=""http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"" rel=""noreferrer"">http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js</a> - Google hosted (minified)</li>
<li><a href=""http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.js"" rel=""noreferrer"">http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.js</a> - Google hosted (uncompressed)</li>
</ul>

<p>For example:</p>

<pre><code>&lt;script src=""http://code.jquery.com/jquery-latest.min.js""
        type=""text/javascript""&gt;&lt;/script&gt;
</code></pre>

<hr>

<p>However, since jQuery 1.11.1, both jQuery and Google stopped updating these URL's; they will <em>forever</em> be fixed at 1.11.1. There is no supported alternative URL to use. For an explanation of why this is the case, see this blog post; <a href=""http://blog.jquery.com/2014/07/03/dont-use-jquery-latest-js/"" rel=""noreferrer"">Don't use jquery-latest.js</a>.</p>

<p>Both hosts support <code>https</code> as well as <code>http</code>, so change the protocol as you see fit (or use a <a href=""http://www.paulirish.com/2010/the-protocol-relative-url/"" rel=""noreferrer"">protocol relative URI</a>)</p>

<p>See also: <a href=""https://developers.google.com/speed/libraries/devguide"" rel=""noreferrer"">https://developers.google.com/speed/libraries/devguide</a></p>
","441429"
"Find object by id in an array of JavaScript objects","923217","","<p>I've got an array:</p>

<pre><code>myArray = [{'id':'73','foo':'bar'},{'id':'45','foo':'bar'}, etc.]
</code></pre>

<p>I'm unable to change the structure of the array. I'm being passed an id of <code>45</code>, and I want to get <code>'bar'</code> for that object in the array. </p>

<p>How do I do this in JavaScript or using jQuery?</p>
","<p>As you are already using jQuery, you can use the <a href=""http://api.jquery.com/jQuery.grep/"">grep</a> function which is intended for searching an array:</p>

<pre><code>var result = $.grep(myArray, function(e){ return e.id == id; });
</code></pre>

<p>The result is an array with the items found. If you know that the object is always there and that it only occurs once, you can just use <code>result[0].foo</code> to get the value. Otherwise you should check the length of the resulting array. Example:</p>

<pre><code>if (result.length == 0) {
  // not found
} else if (result.length == 1) {
  // access the foo property using result[0].foo
} else {
  // multiple items found
}
</code></pre>
","7364307"
"How do I set/unset a cookie with jQuery?","918159","","<p>How do I set and unset a cookie using jQuery, for example create a cookie named <code>test</code> and set the value to <code>1</code>?</p>
","<p>See the plugin:</p>

<p><a href=""https://github.com/carhartl/jquery-cookie"" rel=""noreferrer"">https://github.com/carhartl/jquery-cookie</a></p>

<p>You can then do:</p>

<pre><code>$.cookie(""test"", 1);
</code></pre>

<p>To delete:</p>

<pre><code>$.removeCookie(""test"");
</code></pre>

<p>Additionally, to set a timeout of a certain number of days (10 here) on the cookie:</p>

<pre><code>$.cookie(""test"", 1, { expires : 10 });
</code></pre>

<p>If the expires option is omitted, then the cookie becomes a session cookie and is deleted when the browser exits.</p>

<p>To cover all the options:</p>

<pre><code>$.cookie(""test"", 1, {
   expires : 10,           // Expires in 10 days

   path    : '/',          // The value of the path attribute of the cookie
                           // (Default: path of page that created the cookie).

   domain  : 'jquery.com', // The value of the domain attribute of the cookie
                           // (Default: domain of page that created the cookie).

   secure  : true          // If set to true the secure attribute of the cookie
                           // will be set and the cookie transmission will
                           // require a secure protocol (defaults to false).
});
</code></pre>

<p>To read back the value of the cookie:</p>

<pre><code>var cookieValue = $.cookie(""test"");
</code></pre>

<p>You may wish to specify the path parameter if the cookie was created on a different path to the current one:</p>

<pre><code>var cookieValue = $.cookie(""test"", { path: '/foo' });
</code></pre>

<p><strong>UPDATE (April 2015):</strong></p>

<p>As stated in the comments below, the team that worked on the original plugin has removed the jQuery dependency in a new project (<a href=""https://github.com/js-cookie/js-cookie"" rel=""noreferrer"">https://github.com/js-cookie/js-cookie</a>) which has the same functionality and general syntax as the jQuery version. Apparently the original plugin isn't going anywhere though.</p>
","1458728"
"Modify the URL without reloading the page","909665","","<p>Is there any way I can modify the URL of the current page without reloading the page?</p>

<p>I would like to access the portion <strong>before</strong> the # hash if possible.</p>

<p>I only need to change the portion <strong>after</strong> the domain, so its not like I'm violating cross-domain policies.</p>

<pre><code> window.location.href = ""www.mysite.com/page2.php"";  // sadly this reloads
</code></pre>
","<p>This can now be done in Chrome, Safari, FF4+, and IE10pp4+!</p>

<p>See this question's answer for more info:
<a href=""https://stackoverflow.com/questions/3338642/updating-address-bar-with-new-url-without-hash-or-reloading-the-page"">Updating address bar with new URL without hash or reloading the page</a></p>

<p>Example:</p>

<pre><code> function processAjaxData(response, urlPath){
     document.getElementById(""content"").innerHTML = response.html;
     document.title = response.pageTitle;
     window.history.pushState({""html"":response.html,""pageTitle"":response.pageTitle},"""", urlPath);
 }
</code></pre>

<p>You can then use <code>window.onpopstate</code> to detect the back/forward button navigation:</p>

<pre><code>window.onpopstate = function(e){
    if(e.state){
        document.getElementById(""content"").innerHTML = e.state.html;
        document.title = e.state.pageTitle;
    }
};
</code></pre>

<hr>

<p>For a more in-depth look at manipulating browser history see <a href=""https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Manipulating_the_browser_history"" rel=""noreferrer"">this MDN article</a>.</p>
","3354511"
"What does ""use strict"" do in JavaScript, and what is the reasoning behind it?","902590","","<p>Recently, I ran some of my JavaScript code through Crockford's <a href=""http://www.jslint.com/"" rel=""noreferrer"">JSLint</a>, and it gave the following error:</p>

<blockquote>
  <p>Problem at line 1 character 1: Missing ""use strict"" statement.</p>
</blockquote>

<p>Doing some searching, I realized that some people add <code>""use strict"";</code> into their JavaScript code. Once I added the statement, the error stopped appearing. Unfortunately, Google did not reveal much of the history behind this string statement. Certainly it must have something to do with how the JavaScript is interpreted by the browser, but I have no idea what the effect would be.</p>

<p>So what is <code>""use strict"";</code> all about, what does it imply, and is it still relevant?</p>

<p>Do any of the current browsers respond to the <code>""use strict"";</code> string or is it for future use?</p>
","<p>This article about Javascript Strict Mode might interest you: <a href=""http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/"" rel=""noreferrer"">John Resig - ECMAScript 5 Strict Mode, JSON, and More</a></p>

<p>To quote some interesting parts:</p>

<blockquote>
  <p>Strict Mode is a new feature in ECMAScript 5 that allows you to place a program, or a function, in a ""strict"" operating context. This strict context prevents certain actions from being taken and throws more exceptions.</p>
</blockquote>

<p>And:</p>

<blockquote>
  <p>Strict mode helps out in a couple ways:</p>
  
  <ul>
  <li>It catches some common coding bloopers, throwing exceptions.</li>
  <li>It prevents, or throws errors, when relatively ""unsafe"" actions are taken (such as gaining access to the global object).</li>
  <li>It disables features that are confusing or poorly thought out.</li>
  </ul>
</blockquote>

<p>Also note you can apply ""strict mode"" to the whole file... Or you can use it only for a specific function <em>(still quoting from John Resig's article)</em>:</p>

<blockquote>
<pre><code>// Non-strict code...

(function(){
  ""use strict"";

  // Define your library strictly...
})();

// Non-strict code... 
</code></pre>
</blockquote>

<p>Which might be helpful if you have to mix old and new code ;-)</p>

<p>So, I suppose it's a bit like the <code>""use strict""</code> you can use in Perl <em>(hence the name?)</em>: it helps you make fewer errors, by detecting more things that could lead to breakages.</p>

<p>Currently, it's <a href=""http://caniuse.com/#use-strict"" rel=""noreferrer""><strong>supported by all major browsers</strong></a> <em>(bar IE 9 and below)</em>.</p>
","1335881"
"Detecting an undefined object property","900908","","<p>What's the best way of checking if an object property in JavaScript is undefined?</p>
","<p>Use:</p>

<pre><code>if (typeof something === ""undefined"") {
    alert(""something is undefined"");
}
</code></pre>

<p>If an object variable which have some properties you can use same thing like this:</p>

<pre><code>if (typeof my_obj.someproperties === ""undefined""){
    console.log('the property is not available...'); // print into console
}
</code></pre>
","416327"
"How do I detect a click outside an element?","890098","","<p>I have some HTML menus, which I show completely when a user clicks on the head of these menus. I would like to hide these elements when the user clicks outside the menus' area.</p>

<p>Is something like this possible with jQuery?</p>

<pre><code>$(""#menuscontainer"").clickOutsideThisElement(function() {
    // Hide the menus
});
</code></pre>
","<blockquote>
  <p>NOTE: Using <code>stopEventPropagation()</code> is something that should be avoided as it breaks normal event flow in the DOM. See <a href=""https://css-tricks.com/dangers-stopping-event-propagation/"" rel=""noreferrer"">this article</a> for more information. Consider using <a href=""https://stackoverflow.com/a/3028037/561309"">this method</a> instead.</p>
</blockquote>

<p>Attach a click event to the document body which closes the window. Attach a separate click event to the window which stops propagation to the document body.</p>

<pre><code>$(window).click(function() {
//Hide the menus if visible
});

$('#menucontainer').click(function(event){
    event.stopPropagation();
});
</code></pre>
","153047"
"Generate random number between two numbers in JavaScript","865825","","<p>Is there a way to generate a random number in a specified range (e.g. from 1 to 6: 1, 2, 3, 4, 5, or 6) in JavaScript?</p>
","<p>If you wanted to get between 1 and 6, you would calculate:</p>

<pre><code>Math.floor(Math.random() * 6) + 1  
</code></pre>

<p>Where:  </p>

<ul>
<li>1 is the start number    </li>
<li>6 is the number of possible results (1 + start <em>(6)</em> - end <em>(1)</em>)</li>
</ul>
","4960020"
"How to check a not-defined variable in JavaScript","864561","","<p>I wanted to check whether the variable is defined or not. For example, the following throws a not-defined error  </p>

<pre><code>alert( x );
</code></pre>

<p>How can I catch this error?</p>
","<p>In JavaScript, <code>null</code> is an object. There's another value for things that don't exist, <code>undefined</code>. The DOM returns <code>null</code> for almost all cases where it fails to find some structure in the document, but in JavaScript itself <code>undefined</code> is the value used.</p>

<p>Second, no, there is not a direct equivalent. If you really want to check for specifically for <code>null</code>, do:</p>

<pre><code>if (yourvar === null) // Does not execute if yourvar is `undefined`
</code></pre>

<p>If you want to check if a variable exists, that can only be done with <code>try</code>/<code>catch</code>, since <code>typeof</code> will treat an undeclared variable and a variable declared with the value of <code>undefined</code> as equivalent.</p>

<p>But, to check if a variable is declared <em>and</em> is not <code>undefined</code>:</p>

<pre><code>if (typeof yourvar !== 'undefined') // Any scope
</code></pre>

<p>If you know the variable exists, and want to check whether there's any value stored in it:</p>

<pre><code>if (yourvar !== undefined)
</code></pre>

<p>If you want to know if a member exists independent but don't care what its value is:</p>

<pre><code>if ('membername' in object) // With inheritance
if (object.hasOwnProperty('membername')) // Without inheritance
</code></pre>

<p>If you want to to know whether a variable is <a href=""https://developer.mozilla.org/en-US/docs/Glossary/Truthy"" rel=""noreferrer"">truthy</a>:</p>

<pre><code>if (yourvar)
</code></pre>

<p><a href=""http://lists.evolt.org/archive/Week-of-Mon-20050214/099714.html"" rel=""noreferrer"">Source</a></p>
","858193"
"Writing files in Node.js","861957","","<p>I've been trying to find a way to write to a file when using Node.js, but with no success. How can I do that?</p>
","<p>There are a lot of details in the <a href=""http://nodejs.org/docs/latest/api/fs.html"" rel=""noreferrer"">filesystem API</a>. The most common way (as far as I know) is:</p>

<pre><code>var fs = require('fs');
fs.writeFile(""/tmp/test"", ""Hey there!"", function(err) {
    if(err) {
        return console.log(err);
    }

    console.log(""The file was saved!"");
}); 
</code></pre>
","2497040"
"Best way to find if an item is in a JavaScript array?","857431","","<p>What is the best way to find if an object is in an array?</p>

<p>This is the best way I know:</p>

<pre><code>function include(arr, obj) {
    for(var i=0; i&lt;arr.length; i++) {
        if (arr[i] == obj) return true;
    }
}

include([1,2,3,4], 3); // true
include([1,2,3,4], 6); // undefined
</code></pre>
","<pre><code>function include(arr,obj) {
    return (arr.indexOf(obj) != -1);
}
</code></pre>

<p>EDIT: 
This will not work on IE6, 7 or 8 though. The best workaround is to define it yourself if it's not present:</p>

<ol>
<li><p><a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf"" rel=""noreferrer"">Mozilla's</a> (ECMA-262) version:</p>

<pre><code>  if (!Array.prototype.indexOf)
  {

       Array.prototype.indexOf = function(searchElement /*, fromIndex */)

    {


    ""use strict"";

    if (this === void 0 || this === null)
      throw new TypeError();

    var t = Object(this);
    var len = t.length &gt;&gt;&gt; 0;
    if (len === 0)
      return -1;

    var n = 0;
    if (arguments.length &gt; 0)
    {
      n = Number(arguments[1]);
      if (n !== n)
        n = 0;
      else if (n !== 0 &amp;&amp; n !== (1 / 0) &amp;&amp; n !== -(1 / 0))
        n = (n &gt; 0 || -1) * Math.floor(Math.abs(n));
    }

    if (n &gt;= len)
      return -1;

    var k = n &gt;= 0
          ? n
          : Math.max(len - Math.abs(n), 0);

    for (; k &lt; len; k++)
    {
      if (k in t &amp;&amp; t[k] === searchElement)
        return k;
    }
    return -1;
  };

}
</code></pre></li>
<li><p><a href=""https://stackoverflow.com/questions/143847/best-way-to-find-an-item-in-a-javascript-array#144172"">Daniel James</a>'s version:</p>

<pre><code>if (!Array.prototype.indexOf) {
  Array.prototype.indexOf = function (obj, fromIndex) {
    if (fromIndex == null) {
        fromIndex = 0;
    } else if (fromIndex &lt; 0) {
        fromIndex = Math.max(0, this.length + fromIndex);
    }
    for (var i = fromIndex, j = this.length; i &lt; j; i++) {
        if (this[i] === obj)
            return i;
    }
    return -1;
  };
}
</code></pre></li>
<li><p><a href=""https://stackoverflow.com/questions/143847/best-way-to-find-an-item-in-a-javascript-array#144664"">roosteronacid</a>'s version:</p>

<pre><code>Array.prototype.hasObject = (
  !Array.indexOf ? function (o)
  {
    var l = this.length + 1;
    while (l -= 1)
    {
        if (this[l - 1] === o)
        {
            return true;
        }
    }
    return false;
  } : function (o)
  {
    return (this.indexOf(o) !== -1);
  }
);
</code></pre></li>
</ol>
","143863"
"How to get the data-id attribute?","854632","","<p>I'm using the jquery quicksand plugin. I need to get the data-id of the clicked item and pass it to a webservice.
How do I get the data-id attribute? I'm using the <code>.live()</code> method to re-bind the click event for sorted items.</p>

<p>Html looks like this:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>$(""#list li"").live('click', function() {
  //  ret = DetailsView.GetProject($(this).attr(""#data-id""), OnComplete, OnTimeOut, OnError);
  alert($(this).attr(""#data-id""));
});</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;ul id=""list"" class=""grid""&gt;
  &lt;li data-id=""id-40"" class=""win""&gt;
    &lt;a id=""ctl00_cphBody_ListView1_ctrl0_SelectButton"" class=""project"" href=""#""&gt;
      &lt;img src=""themes/clean/images/win.jpg"" class=""project-image"" alt="""" /&gt;
    &lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;</code></pre>
</div>
</div>
</p>
","<p>To get the contents of the attribute <code>data-id</code> (like in <code>&lt;a data-id=""123""&gt;link&lt;/a&gt;</code>) you have to use</p>

<pre><code>$(this).attr(""data-id"") // will return the string ""123""
</code></pre>

<p>or <a href=""http://api.jquery.com/data/"" rel=""noreferrer""><code>.data()</code></a> (if you use newer jQuery >= 1.4.3)</p>

<pre><code>$(this).data(""id"") // will return the number 123
</code></pre>

<p><strong>and the part after <code>data-</code> must be lowercase, e.g. <code>data-idNum</code> will not work, but <code>data-idnum</code> will.</strong></p>
","5309947"
"How to get image size (height & width) using JavaScript?","849353","","<p>Are there any jQuery or pure JS APIs or methods to get the dimensions of an image on the page?</p>
","<p><a href=""https://developer.mozilla.org/en/DOM/element.clientWidth"" rel=""noreferrer"">clientWidth</a> and <a href=""https://developer.mozilla.org/en/DOM/element.clientheight"" rel=""noreferrer"">clientHeight</a> are DOM properties that show the current in-browser size of the inner dimensions of a DOM element (excluding margin and border). So in the case of an IMG element, this will get the actual dimensions of the visible image.</p>

<pre><code>var img = document.getElementById('imageid'); 
//or however you get a handle to the IMG
var width = img.clientWidth;
var height = img.clientHeight;
</code></pre>
","623174"
"Set the value of an input field","844062","","<p>How would you set the default value of a form <code>&lt;input&gt;</code> text field in JavaScript?</p>
","<p>This is one way of doing it:</p>

<pre><code>document.getElementById(""mytext"").value = ""My value"";
</code></pre>
","7609144"
"Show/hide 'div' using JavaScript","839037","","<p>For a website I'm doing, I want to load one div, and hide another, then have two buttons that will toggle views between the div using JavaScript.</p>

<p><strong>This is my current code</strong></p>

<pre><code>&lt;script type=""text/javascript""&gt;
    function replaceContentInContainer(target, source) {
        document.getElementById(target).innerHTML = document.getElementById(source).innerHTML;
    }
    function replaceContentInOtherContainer(replace_target, source){
        document.getElementById(replace_target).innerHTML = document.getElementById(source).innerHTML;
    }
&lt;/script&gt;
</code></pre>

<p><strong>Current HTML:</strong></p>

<pre><code>&lt;html&gt;
    &lt;button onClick=""replaceContentInContainer('target', 'replace_target')""&gt;View Portfolio&lt;/button&gt;
    &lt;button onClick=""replaceContentInOtherContainer('replace_target', 'target')""&gt;View Results&lt;/button&gt;

    &lt;div&gt;
        &lt;span id=""target""&gt;div1&lt;/span&gt;
    &lt;/div&gt;

    &lt;div style=""display:none""&gt;
        &lt;span id=""replace_target""&gt;div2&lt;/span&gt;
    &lt;/div&gt;
</code></pre>

<p>The second function that replaces div2 is not working, but the first one is.</p>
","<h3>How to show or hide an element:</h3>

<p>In order to show or hide an element, manipulate the element's <a href=""https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style"">style property</a>. In most cases, you probably just want to change the element's <a href=""https://developer.mozilla.org/en-US/docs/Web/CSS/display""><code>display</code> property</a>:</p>

<pre><code>element.style.display = 'none';           // Hide
element.style.display = 'block';          // Show
element.style.display = 'inline';         // Show
element.style.display = 'inline-block';   // Show
</code></pre>

<p>Alternatively, if you would still like the element to occupy space (like if you were to hide a table cell), you could change the element's <a href=""https://developer.mozilla.org/en-US/docs/Web/CSS/visibility""><code>visibility</code> property</a> instead:</p>

<pre><code>element.style.visibility = 'hidden';      // Hide
element.style.visibility = 'visible';     // Show
</code></pre>

<h3>Hiding a collection of elements:</h3>

<p>If you want to hide a collection of elements, just iterate over each element and change the element's <code>display</code> to <code>none</code>:</p>

<pre><code>function hide (elements) {
  elements = elements.length ? elements : [elements];
  for (var index = 0; index &lt; elements.length; index++) {
    elements[index].style.display = 'none';
  }
}
</code></pre>



<pre><code>// Usage:
hide(document.querySelectorAll('.target'));
hide(document.querySelector('.target'));
hide(document.getElementById('target'));
</code></pre>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>hide(document.querySelectorAll('.target'));

function hide (elements) {
  elements = elements.length ? elements : [elements];
  for (var index = 0; index &lt; elements.length; index++) {
    elements[index].style.display = 'none';
  }
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div class=""target""&gt;This div will be hidden.&lt;/div&gt;

&lt;span class=""target""&gt;This span will be hidden as well.&lt;/span&gt;</code></pre>
</div>
</div>
</p>

<h3>Showing a collection of elements:</h3>

<p>Most of the time, you will probably just be toggling between <code>display: none</code> and <code>display: block</code>, which means that the following <em>may</em> be sufficient when showing a collection of elements.</p>

<p>You can optionally specify the desired <code>display</code> as the second argument if you don't want it to default to <code>block</code>.</p>

<pre><code>function show (elements, specifiedDisplay) {
  elements = elements.length ? elements : [elements];
  for (var index = 0; index &lt; elements.length; index++) {
    elements[index].style.display = specifiedDisplay || 'block';
  }
}
</code></pre>



<pre><code>// Usage:
var elements = document.querySelectorAll('.target');
show(elements);

show(elements, 'inline-block'); // The second param allows you to specify a display value
</code></pre>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var elements = document.querySelectorAll('.target');

show(elements, 'inline-block'); // The second param allows you to specify a display value

show(document.getElementById('hidden-input'));

function show (elements, specifiedDisplay) {
  elements = elements.length ? elements : [elements];
  for (var index = 0; index &lt; elements.length; index++) {
    elements[index].style.display = specifiedDisplay || 'block';
  }
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div class=""target"" style=""display: none""&gt;This hidden div should have a display of 'inline-block' when it is shown.&lt;/div&gt;

&lt;span&gt;Inline span..&lt;/span&gt;

&lt;input id=""hidden-input"" /&gt;</code></pre>
</div>
</div>
</p>

<p>Alternatively, a better approach for showing the element(s) would be to merely remove the inline <code>display</code> styling in order to revert it back to its initial state. Then check the computed <code>display</code> style of the element in order to determine whether it is being hidden by a cascaded rule. If so, then show the element.</p>

<pre><code>function show (elements, specifiedDisplay) {
  var computedDisplay, element, index;

  elements = elements.length ? elements : [elements];
  for (index = 0; index &lt; elements.length; index++) {
    element = elements[index];

    // Remove the element's inline display styling
    element.style.display = '';
    computedDisplay = window.getComputedStyle(element, null).getPropertyValue('display');

    if (computedDisplay === 'none') {
        element.style.display = specifiedDisplay || 'block';
    }
  }
}
</code></pre>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>show(document.querySelectorAll('.target'));

function show (elements, specifiedDisplay) {
  var computedDisplay, element, index;

  elements = elements.length ? elements : [elements];
  for (index = 0; index &lt; elements.length; index++) {
    element = elements[index];

    // Remove the element's inline display styling
    element.style.display = '';
    computedDisplay = window.getComputedStyle(element, null).getPropertyValue('display');

    if (computedDisplay === 'none') {
        element.style.display = specifiedDisplay || 'block';
    }
  }
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;span class=""target"" style=""display: none""&gt;Should revert back to being inline.&lt;/span&gt;

&lt;span class=""target"" style=""display: none""&gt;Inline as well.&lt;/span&gt;

&lt;div class=""target"" style=""display: none""&gt;Should revert back to being block level.&lt;/div&gt;

&lt;span class=""target"" style=""display: none""&gt;Should revert back to being inline.&lt;/span&gt;</code></pre>
</div>
</div>
</p>

<p>(If you want to take it a step further, you could even mimic what jQuery does and determine the element's default browser styling by appending the element to a blank <code>iframe</code> (without a conflicting stylesheet) and then retrieve the computed styling. In doing so, you will know the true initial <code>display</code> property value of the element and you won't have to hardcode a value in order to get the desired results.)</p>

<h3>Toggling the display:</h3>

<p>Similarly, if you would like to toggle the <code>display</code> of an element or collection of elements, you could simply iterate over each element and determine whether it is visible by checking the computed value of the <code>display</code> property. If it's visible, set the <code>display</code> to <code>none</code>, otherwise remove the inline <code>display</code> styling, and if it's still hidden, set the <code>display</code> to the specified value or the hardcoded default, <code>block</code>.</p>

<pre><code>function toggle (elements, specifiedDisplay) {
  var element, index;

  elements = elements.length ? elements : [elements];
  for (index = 0; index &lt; elements.length; index++) {
    element = elements[index];

    if (isElementHidden(element)) {
      element.style.display = '';

      // If the element is still hidden after removing the inline display
      if (isElementHidden(element)) {
        element.style.display = specifiedDisplay || 'block';
      }
    } else {
      element.style.display = 'none';
    }
  }
  function isElementHidden (element) {
    return window.getComputedStyle(element, null).getPropertyValue('display') === 'none';
  }
}
</code></pre>



<pre><code>// Usage:
document.getElementById('toggle-button').addEventListener('click', function () {
  toggle(document.querySelectorAll('.target'));
});
</code></pre>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>document.getElementById('toggle-button').addEventListener('click', function () {
    toggle(document.querySelectorAll('.target'));
});

function toggle (elements, specifiedDisplay) {
  var element, index;

  elements = elements.length ? elements : [elements];
  for (index = 0; index &lt; elements.length; index++) {
    element = elements[index];

    if (isElementHidden(element)) {
      element.style.display = '';

      // If the element is still hidden after removing the inline display
      if (isElementHidden(element)) {
        element.style.display = specifiedDisplay || 'block';
      }
    } else {
      element.style.display = 'none';
    }
  }
  function isElementHidden (element) {
    return window.getComputedStyle(element, null).getPropertyValue('display') === 'none';
  }
}</code></pre>
<pre class=""snippet-code-css lang-css prettyprint-override""><code>.target { display: none; }</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;button id=""toggle-button""&gt;Toggle display&lt;/button&gt;

&lt;span class=""target""&gt;Toggle the span.&lt;/span&gt;

&lt;div class=""target""&gt;Toggle the div.&lt;/div&gt;</code></pre>
</div>
</div>
</p>
","21070237"
"How to move an element into another element?","834052","","<p>I would like to move one DIV element inside another. For example, I want to move this (including all children):</p>

<pre><code>&lt;div id=""source""&gt;
...
&lt;/div&gt;
</code></pre>

<p>into this:</p>

<pre><code>&lt;div id=""destination""&gt;
...
&lt;/div&gt;
</code></pre>

<p>so that I have this:</p>

<pre><code>&lt;div id=""destination""&gt;
  &lt;div id=""source""&gt;
    ...
  &lt;/div&gt;
&lt;/div&gt;
</code></pre>
","<p>You may want to use the <a href=""http://api.jquery.com/appendTo/"" rel=""noreferrer""><code>appendTo</code></a> function (which adds to the end of the element):</p>

<pre><code>$(""#source"").appendTo(""#destination"");
</code></pre>

<p>Alternatively you could use the <a href=""http://api.jquery.com/prependTo/"" rel=""noreferrer""><code>prependTo</code></a> function (which adds to the beginning of the element):</p>

<pre><code>$(""#source"").prependTo(""#destination"");
</code></pre>
","1279963"
"Convert a Unix timestamp to time in JavaScript","833117","","<p>I am storing time in a MySQL database as a Unix timestamp and that gets sent to some JavaScript code. How would I get just the time out of it?</p>

<p>For example, in HH/MM/SS format.</p>
","<pre><code>// Create a new JavaScript Date object based on the timestamp
// multiplied by 1000 so that the argument is in milliseconds, not seconds.
var date = new Date(unix_timestamp*1000);
// Hours part from the timestamp
var hours = date.getHours();
// Minutes part from the timestamp
var minutes = ""0"" + date.getMinutes();
// Seconds part from the timestamp
var seconds = ""0"" + date.getSeconds();

// Will display time in 10:30:23 format
var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);
</code></pre>

<p>For more information regarding the Date object, please refer to <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date"" rel=""noreferrer"">MDN</a> or the <a href=""http://ecma-international.org/ecma-262/5.1/#sec-15.9"" rel=""noreferrer"">ECMAScript 5 specification</a>.</p>
","847196"
"var functionName = function() {} vs function functionName() {}","830151","","<p>I've recently started maintaining someone else's JavaScript code. I'm fixing bugs, adding features and also trying to tidy up the code and make it more consistent.</p>

<p>The previous developer uses two ways of declaring functions and I can't work out if there is a reason behind it or not.</p>

<p>The two ways are:</p>

<pre><code>var functionOne = function() {
    // Some code
};
</code></pre>



<pre><code>function functionTwo() {
    // Some code
}
</code></pre>

<p>What are the reasons for using these two different methods and what are the pros and cons of each? Is there anything that can be done with one method that can't be done with the other?</p>
","<p>The difference is that <code>functionOne</code> is a function expression and so only defined when that line is reached, whereas <code>functionTwo</code> is a function declaration and is defined as soon as its surrounding function or script is executed (due to <a href=""http://adripofjavascript.com/blog/drips/variable-and-function-hoisting.html"" rel=""noreferrer"">hoisting</a>).  </p>

<p>For example, a function expression:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>// TypeError: undefined is not a function
functionOne();

var functionOne = function() {
  console.log(""Hello!"");
};</code></pre>
</div>
</div>
</p>

<p>And, a function declaration:   </p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>// Outputs: ""Hello!""
functionTwo();

function functionTwo() {
  console.log(""Hello!"");
}</code></pre>
</div>
</div>
</p>

<p>This also means you can't conditionally define functions using function declarations:</p>

<pre><code>if (test) {
   // Error or misbehavior
   function functionThree() { doSomething(); }
}
</code></pre>

<p>The above actually defines <code>functionThree</code> irrespective of <code>test</code>'s value &mdash; unless <code>use strict</code> is in effect, in which case it simply raises an error.</p>
","336868"
"How to check if a string ""StartsWith"" another string?","829172","","<p>How would I write the equivalent of C#'s <a href=""http://msdn.microsoft.com/en-us/library/baketfxw.aspx"" rel=""noreferrer""><code>String.StartsWith</code></a> in JavaScript?</p>

<pre><code>var haystack = 'hello world';
var needle = 'he';

//haystack.startsWith(needle) == true
</code></pre>

<p>Note: This is an old question, and as pointed out in the comments ECMAScript 2015 (ES6) introduced the <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith"" rel=""noreferrer""><code>.startsWith</code></a> method. However, at the time of writing this update (2015) <a href=""http://kangax.github.io/compat-table/es6/#test-String.prototype_methods_String.prototype.startsWith"" rel=""noreferrer"">browser support is far from complete</a>.</p>
","<p>You can use ECMAScript 6's <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith"" rel=""noreferrer""><code>String.prototype.startsWith()</code></a> method, but it's <a href=""http://kangax.github.io/compat-table/es6/#test-String.prototype_methods_String.prototype.startsWith"" rel=""noreferrer"">not yet supported in all browsers</a>. You'll want to use a shim/polyfill to add it on browsers that don't support it. Creating an implementation that complies with <a href=""http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype.startswith"" rel=""noreferrer"">all the details laid out in the spec</a> is a little complicated, and the version defined in this answer won't do; if you want a faithful shim, use either:</p>

<ul>
<li><a href=""https://github.com/mathiasbynens/String.prototype.startsWith"" rel=""noreferrer"">Matthias Bynens's <code>String.prototype.startsWith</code> shim</a>, or</li>
<li>The <a href=""https://github.com/paulmillr/es6-shim"" rel=""noreferrer"">es6-shim</a>, which shims as much of the ES6 spec as possible, including <code>String.prototype.startsWith</code>.</li>
</ul>

<p>Once you've shimmed the method (or if you're only supporting browsers and JavaScript engines that already have it), you can use it like this:</p>

<pre><code>""Hello World!"".startsWith(""He""); // true

var haystack = ""Hello world"";
var prefix = 'orl';
haystack.startsWith(prefix); // false
</code></pre>
","646643"
"How can I merge properties of two JavaScript objects dynamically?","819224","","<p>I need to be able to merge two (very simple) JavaScript objects at runtime.  For example I'd like to:</p>

<pre><code>var obj1 = { food: 'pizza', car: 'ford' }
var obj2 = { animal: 'dog' }

obj1.merge(obj2);

//obj1 now has three properties: food, car, and animal
</code></pre>

<p>Does anyone have a script for this or know of a built in way to do this?  I do not need recursion, and I do not need to merge functions, just methods on flat objects.</p>
","<p><strong>ECMAScript 2015 (ES6) Standard Method</strong></p>

<pre><code>/* For the case in question, you would do: */
Object.assign(obj1, obj2);

/** There's no limit to the number of objects you can merge.
 *  All objects get merged into the first object. 
 *  Only the object in the first argument is mutated and returned.
 *  Later properties overwrite earlier properties with the same name. */
const allRules = Object.assign({}, obj1, obj2, obj3, etc);
</code></pre>

<p>(see <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Browser_compatibility"" rel=""noreferrer"">MDN JavaScript Reference</a>)</p>

<hr>

<p><strong>Method for ES5 and Earlier</strong></p>

<pre><code>for (var attrname in obj2) { obj1[attrname] = obj2[attrname]; }
</code></pre>

<p>Note that this will simply add all attributes of <code>obj2</code> to <code>obj1</code> which might not be what you want if you still want to use the unmodified <code>obj1</code>.</p>

<p>If you're using a framework that craps all over your prototypes then you have to get fancier with checks like <code>hasOwnProperty</code>, but that code will work for 99% of cases.</p>

<p>Example function:</p>

<pre><code>/**
 * Overwrites obj1's values with obj2's and adds obj2's if non existent in obj1
 * @param obj1
 * @param obj2
 * @returns obj3 a new object based on obj1 and obj2
 */
function merge_options(obj1,obj2){
    var obj3 = {};
    for (var attrname in obj1) { obj3[attrname] = obj1[attrname]; }
    for (var attrname in obj2) { obj3[attrname] = obj2[attrname]; }
    return obj3;
}
</code></pre>
","171256"
"How to set value of input text using jQuery","819132","","<p>I have an input text which is this:</p>

<pre><code>&lt;div class=""editor-label""&gt;
    @Html.LabelFor(model =&gt; model.EmployeeId, ""Employee Number"")
&lt;/div&gt;

&lt;div class=""editor-field textBoxEmployeeNumber""&gt;
    @Html.EditorFor(model =&gt; model.EmployeeId) 
    @Html.ValidationMessageFor(model =&gt; model.EmployeeId)
&lt;/div&gt;
</code></pre>

<p>I want to set the value of this input text using jquery so i did this:</p>

<pre><code>&lt;script type=""text/javascript"" language=""javascript""&gt;
    $(function() {
        $('.textBoxEmployeeNumber').val(""fgg"");
    });
&lt;/script&gt; 
</code></pre>

<p>however, it is not working... what is the error in my syntax?</p>
","<p>Your selector is retrieving the text box's surrounding <code>&lt;div class='textBoxEmployeeNumber'&gt;</code> instead of the input inside it.</p>

<pre><code>// Access the input inside the div with this selector:
$(function () {
  $('.textBoxEmployeeNumber input').val(""fgg"");
});
</code></pre>

<h3>Update after seeing output HTML</h3>

<p>If the ASP.NET code reliably outputs the HTML <code>&lt;input&gt;</code> with an id attribute <code>id='EmployeeId'</code>, you can more simply just use:</p>

<pre><code>$(function () {
  $('#EmployeeId').val(""fgg"");
});
</code></pre>

<p>Failing this, you will need to verify in your browser's error console that you don't have other script errors causing this to fail.  The first example above <a href=""http://jsfiddle.net/a2fDQ/"">works correctly in this demonstration.</a></p>
","10611215"
"JavaScript string newline character?","818611","","<p>Is <code>\n</code> the universal newline character sequence in Javascript for all platforms? If not, how do I determine the character for the current environment?</p>

<p>I'm not asking about the HTML newline element (<code>&lt;BR/&gt;</code>). I'm asking about the newline character sequence used within JavaScript strings.</p>
","<p>I've just tested a few browsers using this silly bit of JavaScript:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function log_newline(msg, test_value) {
  if (!test_value) { 
    test_value = document.getElementById('test').value;
  }
  console.log(msg + ': ' + (test_value.match(/\r/) ? 'CR' : '')
              + ' ' + (test_value.match(/\n/) ? 'LF' : ''));
}

log_newline('HTML source');
log_newline('JS string', ""foo\nbar"");
log_newline('JS template literal', `bar
baz`);</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;textarea id=""test"" name=""test""&gt;

&lt;/textarea&gt;</code></pre>
</div>
</div>
</p>

<p>IE8 and Opera 9 on Windows use <code>\r\n</code>. All the other browsers I tested (Safari 4 and Firefox 3.5 on Windows, and Firefox 3.0 on Linux) use <code>\n</code>. They can all handle <code>\n</code> just fine when setting the value, though IE and Opera will convert that back to <code>\r\n</code> again internally. There's a SitePoint article with some more details called <a href=""http://www.sitepoint.com/line-endings-in-javascript/"" rel=""noreferrer"">Line endings in Javascript</a>.</p>

<p>Note also that this is independent of the actual line endings in the HTML file itself (both <code>\n</code> and <code>\r\n</code> give the same results).</p>

<p>When submitting a form, all browsers canonicalize newlines to <code>%0D%0A</code> in URL encoding. To see that, load e.g. <code>data:text/html,&lt;form&gt;&lt;textarea name=""foo""&gt;foo%0abar&lt;/textarea&gt;&lt;input type=""submit""&gt;&lt;/form&gt;</code> and press the submit button. (Some browsers block the load of the submitted page, but you can see the URL-encoded form values in the console.) </p>

<p>I don't think you really need to do much of any determining, though. If you just want to split the text on newlines, you could do something like this:</p>

<pre><code>lines = foo.value.split(/\r\n|\r|\n/g);
</code></pre>
","1156388"
"Generating random whole numbers in JavaScript in a specific range?","812686","","<p>How can I generate a random whole number between two specified variables in Javascript, e.g. <code>x = 4</code> and <code>y = 8</code> would output any of 4, 5, 6, 7, 8?</p>
","<p>There are some examples on the <a href=""https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Math/random"" rel=""noreferrer"">Mozilla Developer Network</a> page:</p>

<pre><code>/**
 * Returns a random number between min (inclusive) and max (exclusive)
 */
function getRandomArbitrary(min, max) {
    return Math.random() * (max - min) + min;
}

/**
 * Returns a random integer between min (inclusive) and max (inclusive)
 * Using Math.round() will give you a non-uniform distribution!
 */
function getRandomInt(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}
</code></pre>

<hr>

<p>Here's the logic behind it. It's a simple rule of three:</p>

<p><code>Math.random()</code> returns a <code>Number</code> between 0 (inclusive) and 1 (exclusive). So we have an interval like this:</p>

<pre><code>[0 .................................... 1)
</code></pre>

<p>Now, we'd like a number between <code>min</code> (inclusive) and <code>max</code> (exclusive):</p>

<pre><code>[0 .................................... 1)
[min .................................. max)
</code></pre>

<p>We can use the <code>Math.random</code> to get the correspondent in the [min, max) interval. But, first we should factor a little bit the problem by subtracting <code>min</code> from the second interval:</p>

<pre><code>[0 .................................... 1)
[min - min ............................ max - min)
</code></pre>

<p>This gives:</p>

<pre><code>[0 .................................... 1)
[0 .................................... max - min)
</code></pre>

<p>We may now apply <code>Math.random</code> and then calculate the correspondent. Let's choose a random number:</p>

<pre><code>                Math.random()
                    |
[0 .................................... 1)
[0 .................................... max - min)
                    |
                    x (what we need)
</code></pre>

<p>So, in order to find <code>x</code>, we would do:</p>

<pre><code>x = Math.random() * (max - min);
</code></pre>

<p>Don't forget to add <code>min</code> back, so that we get a number in the [min, max) interval:</p>

<pre><code>x = Math.random() * (max - min) + min;
</code></pre>

<p>That was the first function from MDN. The second one, returns an integer between <code>min</code> and <code>max</code>, both inclusive.</p>

<p>Now for getting integers, you could use <code>round</code>, <code>ceil</code> or <code>floor</code>.</p>

<p>You could use <code>Math.round(Math.random() * (max - min)) + min</code>, this however gives a non-even distribution. Both, <code>min</code> and <code>max</code> only have approximately half the chance to roll:</p>

<pre><code>min...min+0.5...min+1...min+1.5   ...    max-0.5....max
└───┬───┘└────────┬───────┘└───── ... ─────┘└───┬──┘   ← Math.round()
   min          min+1                          max
</code></pre>

<p>With <code>max</code> excluded from the interval, it has an even less chance to roll than <code>min</code>.</p>

<p>With <code>Math.floor(Math.random() * (max - min +1)) + min</code> you have a perfectly even distribution.</p>

<pre><code>min.... min+1... min+2 ... max-1... max.... max+1 (is excluded from interval)
|        |        |         |        |        |
└───┬───┘└───┬───┘└─── ... ┘└───┬───┘└───┬───┘   ← Math.floor()
   min     min+1               max-1    max
</code></pre>

<p>You can't use <code>ceil()</code> and <code>-1</code> in that equation because <code>max</code> now had a slightly less chance to roll, but you can roll the (unwanted) <code>min-1</code> result too.</p>
","1527820"
"How do you remove all the options of a select box and then add one option and select it with jQuery?","811034","","<p>Using core jQuery, how do you remove all the options of a select box, then add one option and select it?</p>

<p>My select box is the following.</p>

<pre><code>&lt;Select id=""mySelect"" size=""9"" &lt;/Select&gt;
</code></pre>

<p>EDIT: The following code was helpful with chaining. However, (in Internet&nbsp;Explorer) <code>.val('whatever')</code> did not select the option that was added. (I did use the same 'value' in both <code>.append</code> and <code>.val</code>.)</p>

<pre><code>$('#mySelect').find('option').remove().end().append('&lt;option value=""whatever""&gt;text&lt;/option&gt;').val('whatever');
</code></pre>

<p>EDIT: Trying to get it to mimic this code, I use the following code whenever the page/form is reset. This select box is populated by a set of radio buttons. <code>.focus()</code> was closer, but the option did not appear selected like it does with <code>.selected= ""true""</code>. Nothing is wrong with my existing code - I am just trying to learn jQuery.</p>

<pre><code>var mySelect = document.getElementById('mySelect');
mySelect.options.length = 0;
mySelect.options[0] = new Option (""Foo (only choice)"", ""Foo"");
mySelect.options[0].selected=""true"";
</code></pre>

<p>EDIT: selected answer was close to what I needed. This worked for me:</p>

<pre><code>$('#mySelect').children().remove().end().append('&lt;option selected value=""whatever""&gt;text&lt;/option&gt;') ;
</code></pre>

<p>But both answers led me to my final solution..</p>
","<pre><code>$('#mySelect')
    .find('option')
    .remove()
    .end()
    .append('&lt;option value=""whatever""&gt;text&lt;/option&gt;')
    .val('whatever')
;
</code></pre>
","47829"
"Difference between == and === in JavaScript","803694","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/359494/javascript-vs-does-it-matter-which-equal-operator-i-use"">Javascript === vs == : Does it matter which &ldquo;equal&rdquo; operator I use?</a>   </p>
</blockquote>



<p>What is the difference between <code>==</code> and <code>===</code> in JavaScript?  I have also seen <code>!=</code> and <code>!==</code> operators.  Are there more such operators?</p>
","<p><code>===</code> and <code>!==</code> are strict comparison operators:</p>

<blockquote>
  <p>JavaScript has both strict and
  type-converting equality comparison.
  For strict equality the objects being
  compared must have the same type and:</p>
  
  <ul>
  <li>Two strings are strictly equal when they have the same sequence of
  characters, same length, and same
  characters in corresponding positions.</li>
  <li>Two numbers are strictly equal when they are numerically equal (have
  the same number value). NaN is not
  equal to anything, including NaN.
  Positive and negative zeros are equal
  to one another.</li>
  <li>Two Boolean operands are strictly equal if both are true or
  both are false.</li>
  <li>Two objects are strictly equal if they refer to the same Object.</li>
  <li>Null and Undefined types are == (but not ===). [I.e. (Null==Undefined) is true but (Null===Undefined) is false]</li>
  </ul>
</blockquote>

<p><a href=""https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Operators/Comparison_Operators"" rel=""noreferrer"">Comparison Operators - MDC</a></p>
","523647"
"Serializing to JSON in jQuery","791724","","<p>I need to serialize an object to JSON. I'm using jQuery. Is there a ""standard"" way to do this?</p>

<p>My specific situation: I have an array defined as shown below:</p>

<pre><code>var countries = new Array();
countries[0] = 'ga';
countries[1] = 'cd';
...
</code></pre>

<p>and I need to turn this into a string to pass to <code>$.ajax()</code> like this:</p>

<pre><code>$.ajax({
    type: ""POST"",
    url: ""Concessions.aspx/GetConcessions"",
    data: ""{'countries':['ga','cd']}"",
...
</code></pre>
","<p><a href=""https://github.com/douglascrockford/JSON-js"" rel=""noreferrer"">JSON-js</a> - JSON in JavaScript.</p>

<p>To convert an object to a string, use <code>JSON.stringify</code>:</p>

<pre><code>var json_text = JSON.stringify(your_object, null, 2);
</code></pre>

<p>To convert a JSON string to object, use <code>JSON.parse</code>:</p>

<pre><code>var your_object = JSON.parse(json_text);
</code></pre>

<p>It was recently recommended by <a href=""http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/"" rel=""noreferrer"">John Resig</a>:</p>

<blockquote>
  <p>...PLEASE start migrating
  your JSON-using applications over to
  Crockford's json2.js. It is fully
  compatible with the ECMAScript 5
  specification and gracefully degrades
  if a native (faster!) implementation
  exists.</p>
  
  <p>In fact, I just landed a change in jQuery yesterday that utilizes the
  JSON.parse method if it exists, now
  that it has been completely specified.</p>
</blockquote>

<p>I tend to trust what he says on JavaScript matters :)</p>

<p><a href=""http://caniuse.com/json"" rel=""noreferrer"">Newer browsers</a> support the <a href=""http://ecma262-5.com/ELS5_Section_15.htm#Section_15.12"" rel=""noreferrer"">JSON object</a> natively. The current version of Crockford's JSON library will only define <code>JSON.stringify</code> and <code>JSON.parse</code> if they're not already defined, leaving any browser native implementation intact.</p>
","912247"
"Storing Objects in HTML5 localStorage","779283","","<p>I'd like to store a JavaScript object in HTML5 <code>localStorage</code>, but my object is apparently being converted to a string.</p>

<p>I can store and retrieve primitive JavaScript types and arrays using <code>localStorage</code>, but objects don't seem to work.  Should they? </p>

<p>Here's my code:</p>

<pre><code>var testObject = { 'one': 1, 'two': 2, 'three': 3 };
console.log('typeof testObject: ' + typeof testObject);
console.log('testObject properties:');
for (var prop in testObject) {
    console.log('  ' + prop + ': ' + testObject[prop]);
}

// Put the object into storage
localStorage.setItem('testObject', testObject);

// Retrieve the object from storage
var retrievedObject = localStorage.getItem('testObject');

console.log('typeof retrievedObject: ' + typeof retrievedObject);
console.log('Value of retrievedObject: ' + retrievedObject);
</code></pre>

<p>The console output is</p>

<pre class=""lang-none prettyprint-override""><code>typeof testObject: object
testObject properties:
  one: 1
  two: 2
  three: 3
typeof retrievedObject: string
Value of retrievedObject: [object Object]
</code></pre>

<p>It looks to me like the <code>setItem</code> method is converting the input to a string before storing it.</p>

<p>I see this behavior in Safari, Chrome, and Firefox, so I assume it's my misunderstanding of the <a href=""http://www.w3.org/TR/webstorage/"" rel=""noreferrer"">HTML5 Web Storage</a> spec, not a browser-specific bug or limitation.</p>

<p>I've tried to make sense of the <em>structured clone</em> algorithm described in <a href=""http://www.w3.org/TR/html5/infrastructure.html"" rel=""noreferrer"">http://www.w3.org/TR/html5/infrastructure.html</a>.  I don't fully understand what it's saying, but maybe my problem has to do with my object's properties not being enumerable (???)  </p>

<p>Is there an easy workaround?</p>

<hr>

<p>Update: The W3C eventually changed their minds about the structured-clone specification, and decided to change the spec to match the implementations.  See <a href=""https://www.w3.org/Bugs/Public/show_bug.cgi?id=12111"" rel=""noreferrer"">https://www.w3.org/Bugs/Public/show_bug.cgi?id=12111</a>. So this question is no longer 100% valid, but the answers still may be of interest.</p>
","<p>Looking at the <a href=""http://developer.apple.com/safari/library/documentation/iPhone/Conceptual/SafariJSDatabaseGuide/Name-ValueStorage/Name-ValueStorage.html#//apple_ref/doc/uid/TP40007256-CH6-SW1"" rel=""noreferrer"">Apple</a>, <a href=""https://developer.mozilla.org/en/DOM/Storage"" rel=""noreferrer"">Mozilla</a> and <a href=""http://msdn.microsoft.com/en-us/library/cc197050(VS.85).aspx"" rel=""noreferrer"">Microsoft</a> documentation, the functionality seems to be limited to handle only string key/value pairs.</p>

<p>A workaround can be to <a href=""http://www.json.org/js.html"" rel=""noreferrer""><em>stringify</em></a> your object before storing it, and later parse it when you retrieve it:</p>

<pre><code>var testObject = { 'one': 1, 'two': 2, 'three': 3 };

// Put the object into storage
localStorage.setItem('testObject', JSON.stringify(testObject));

// Retrieve the object from storage
var retrievedObject = localStorage.getItem('testObject');

console.log('retrievedObject: ', JSON.parse(retrievedObject));
</code></pre>
","2010948"
"Trim string in JavaScript?","771750","","<p>How do I trim a string in JavaScript?</p>
","<p>All browsers since IE9+ have <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim"" rel=""noreferrer""><code>trim()</code></a>.</p>

<p>For those browsers who does not support <code>trim()</code>, you can use this polyfill from <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim"" rel=""noreferrer"">MDN</a>:</p>

<pre><code>if (!String.prototype.trim) {
    (function() {
        // Make sure we trim BOM and NBSP
        var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
        String.prototype.trim = function() {
            return this.replace(rtrim, '');
        };
    })();
}
</code></pre>

<hr>

<p>See this:</p>

<pre><code>String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g, '');};

String.prototype.ltrim=function(){return this.replace(/^\s+/,'');};

String.prototype.rtrim=function(){return this.replace(/\s+$/,'');};

String.prototype.fulltrim=function(){return this.replace(/(?:(?:^|\n)\s+|\s+(?:$|\n))/g,'').replace(/\s+/g,' ');};
</code></pre>
","498995"
"""Thinking in AngularJS"" if I have a jQuery background?","766557","","<p>Suppose I'm familiar with developing client-side applications in <a href=""http://jquery.com/"" rel=""noreferrer"">jQuery</a>, but now I'd like to start using <a href=""http://angularjs.org/"" rel=""noreferrer"">AngularJS</a>. Can you describe the paradigm shift that is necessary? Here are a few questions that might help you frame an answer:</p>

<ul>
<li>How do I architect and design client-side web applications differently? What is the biggest difference?</li>
<li>What should I stop doing/using; What should I start doing/using instead?</li>
<li>Are there any server-side considerations/restrictions?</li>
</ul>

<p>I'm not looking for a detailed comparison between <code>jQuery</code> and <code>AngularJS</code>.</p>
","<h1>1. Don't design your page, and then change it with <a href=""http://en.wikipedia.org/wiki/Document_Object_Model"" rel=""noreferrer"">DOM</a> manipulations</h1>

<p>In jQuery, you design a page, and then you make it dynamic. This is because jQuery was designed for augmentation and has grown incredibly from that simple premise.</p>

<p>But in AngularJS, you must start from the ground up with your architecture in mind. Instead of starting by thinking ""I have this piece of the DOM and I want to make it do X"", you have to start with what you want to accomplish, then go about designing your application, and then finally go about designing your view.</p>

<h1>2. Don't augment jQuery with AngularJS</h1>

<p>Similarly, don't start with the idea that jQuery does X, Y, and Z, so I'll just add AngularJS on top of that for models and controllers. This is <em>really</em> tempting when you're just starting out, which is why I always recommend that new AngularJS developers don't use jQuery at all, at least until they get used to doing things the ""Angular Way"".</p>

<p>I've seen many developers here and on the mailing list create these elaborate solutions with jQuery plugins of 150 or 200 lines of code that they then glue into AngularJS with a collection of callbacks and <code>$apply</code>s that are confusing and convoluted; but they eventually get it working! The problem is that in <strong>most</strong> cases that jQuery plugin could be rewritten in AngularJS in a fraction of the code, where suddenly everything becomes comprehensible and straightforward.</p>

<p>The bottom line is this: when solutioning, first ""think in AngularJS""; if you can't think of a solution, ask the community; if after all of that there is no easy solution, <em>then</em> feel free to reach for the jQuery. But don't let jQuery become a crutch or you'll never master AngularJS.</p>

<h1>3. Always think in terms of architecture</h1>

<p>First know that <a href=""http://en.wikipedia.org/wiki/Single-page_application"" rel=""noreferrer"">single-page applications</a> are <em>applications</em>. They're <em>not</em> webpages. So we need to think like a server-side developer <em>in addition</em> to thinking like a client-side developer. We have to think about how to divide our application into individual, extensible, testable components.</p>

<p>So then <em>how</em> do you do that? How do you ""think in AngularJS""? Here are some general principles, contrasted with jQuery.</p>

<h2>The view is the ""official record""</h2>

<p>In jQuery, we programmatically change the view. We could have a dropdown menu defined as a <code>ul</code> like so:</p>

<pre class=""lang-html prettyprint-override""><code>&lt;ul class=""main-menu""&gt;
    &lt;li class=""active""&gt;
        &lt;a href=""#/home""&gt;Home&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
        &lt;a href=""#/menu1""&gt;Menu 1&lt;/a&gt;
        &lt;ul&gt;
            &lt;li&gt;&lt;a href=""#/sm1""&gt;Submenu 1&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=""#/sm2""&gt;Submenu 2&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=""#/sm3""&gt;Submenu 3&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;
        &lt;a href=""#/home""&gt;Menu 2&lt;/a&gt;
    &lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>In jQuery, in our application logic, we would activate it with something like:</p>

<pre class=""lang-js prettyprint-override""><code>$('.main-menu').dropdownMenu();
</code></pre>

<p>When we just look at the view, it's not immediately obvious that there is any functionality here. For small applications, that's fine. But for non-trivial applications, things quickly get confusing and hard to maintain.</p>

<p>In AngularJS, though, the view is the official record of view-based functionality. Our <code>ul</code> declaration would look like this instead:</p>

<pre class=""lang-html prettyprint-override""><code>&lt;ul class=""main-menu"" dropdown-menu&gt;
    ...
&lt;/ul&gt;
</code></pre>

<p>These two do the same thing, but in the AngularJS version anyone looking at the template knows what's supposed to happen. Whenever a new member of the development team comes on board, she can look at this and then <em>know</em> that there is a directive called <code>dropdownMenu</code> operating on it; she doesn't need to intuit the right answer or sift through any code. The view told us what was supposed to happen. Much cleaner.</p>

<p>Developers new to AngularJS often ask a question like: how do I find all links of a specific kind and add a directive onto them. The developer is always flabbergasted when we reply: you don't. But the reason you don't do that is that this is like half-jQuery, half-AngularJS, and no good. The problem here is that the developer is trying to ""do jQuery"" in the context of AngularJS. That's never going to work well. The view <em>is</em> the official record. Outside of a directive (more on this below), you never, ever, <em>never</em> change the DOM. And directives are applied <em>in the view</em>, so intent is clear.</p>

<p>Remember: don't design, and then mark up. You must architect, and then design.</p>

<h2>Data binding</h2>

<p>This is by far one of the most awesome features of AngularJS and cuts out a lot of the need to do the kinds of DOM manipulations I mentioned in the previous section. AngularJS will automatically update your view so you don't have to! In jQuery, we respond to events and then update content. Something like:</p>

<pre class=""lang-js prettyprint-override""><code>$.ajax({
  url: '/myEndpoint.json',
  success: function ( data, status ) {
    $('ul#log').append('&lt;li&gt;Data Received!&lt;/li&gt;');
  }
});
</code></pre>

<p>For a view that looks like this:</p>

<pre class=""lang-html prettyprint-override""><code>&lt;ul class=""messages"" id=""log""&gt;
&lt;/ul&gt;
</code></pre>

<p>Apart from mixing concerns, we also have the same problems of signifying intent that I mentioned before. But more importantly, we had to manually reference and update a DOM node. And if we want to delete a log entry, we have to code against the DOM for that too. How do we test the logic apart from the DOM? And what if we want to change the presentation?</p>

<p>This a little messy and a trifle frail. But in AngularJS, we can do this:</p>

<pre class=""lang-js prettyprint-override""><code>$http( '/myEndpoint.json' ).then( function ( response ) {
    $scope.log.push( { msg: 'Data Received!' } );
});
</code></pre>

<p>And our view can look like this:</p>

<pre class=""lang-html prettyprint-override""><code>&lt;ul class=""messages""&gt;
    &lt;li ng-repeat=""entry in log""&gt;{{ entry.msg }}&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>But for that matter, our view could look like this:</p>

<pre class=""lang-html prettyprint-override""><code>&lt;div class=""messages""&gt;
    &lt;div class=""alert"" ng-repeat=""entry in log""&gt;
        {{ entry.msg }}
    &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p>And now instead of using an unordered list, we're using Bootstrap alert boxes. And we never had to change the controller code! But more importantly, no matter <em>where</em> or <em>how</em> the log gets updated, the view will change too. Automatically. Neat!</p>

<p>Though I didn't show it here, the data binding is two-way. So those log messages could also be editable in the view just by doing this: <code>&lt;input ng-model=""entry.msg"" /&gt;</code>. And there was much rejoicing.</p>

<h2>Distinct model layer</h2>

<p>In jQuery, the DOM is kind of like the model. But in AngularJS, we have a separate model layer that we can manage in any way we want, completely independently from the view. This helps for the above data binding, maintains <a href=""http://en.wikipedia.org/wiki/Separation_of_concerns"" rel=""noreferrer"">separation of concerns</a>, and introduces far greater testability. Other answers mentioned this point, so I'll just leave it at that.</p>

<h2>Separation of concerns</h2>

<p>And all of the above tie into this over-arching theme: keep your concerns separate. Your view acts as the official record of what is supposed to happen (for the most part); your model represents your data; you have a service layer to perform reusable tasks; you do DOM manipulation and augment your view with directives; and you glue it all together with controllers. This was also mentioned in other answers, and the only thing I would add pertains to testability, which I discuss in another section below.</p>

<h2>Dependency injection</h2>

<p>To help us out with separation of concerns is <a href=""http://en.wikipedia.org/wiki/Dependency_injection"" rel=""noreferrer"">dependency injection</a> (DI). If you come from a server-side language (from <a href=""http://en.wikipedia.org/wiki/Java_%28programming_language%29"" rel=""noreferrer"">Java</a> to <a href=""http://en.wikipedia.org/wiki/PHP"" rel=""noreferrer"">PHP</a>) you're probably familiar with this concept already, but if you're a client-side guy coming from jQuery, this concept can seem anything from silly to superfluous to hipster. But it's not. :-)</p>

<p>From a broad perspective, DI means that you can declare components very freely and then from any other component, just ask for an instance of it and it will be granted. You don't have to know about loading order, or file locations, or anything like that. The power may not immediately be visible, but I'll provide just one (common) example: testing.</p>

<p>Let's say in our application, we require a service that implements server-side storage through a <a href=""http://en.wikipedia.org/wiki/Representational_State_Transfer"" rel=""noreferrer"">REST</a> API and, depending on application state, local storage as well. When running tests on our controllers, we don't want to have to communicate with the server - we're testing the <em>controller</em>, after all. We can just add a mock service of the same name as our original component, and the injector will ensure that our controller gets the fake one automatically - our controller doesn't and needn't know the difference.</p>

<p>Speaking of testing...</p>

<h1>4. Test-driven development - <em>always</em></h1>

<p>This is really part of section 3 on architecture, but it's so important that I'm putting it as its own top-level section.</p>

<p>Out of all of the many jQuery plugins you've seen, used, or written, how many of them had an accompanying test suite? Not very many because jQuery isn't very amenable to that. But AngularJS is.</p>

<p>In jQuery, the only way to test is often to create the component independently with a sample/demo page against which our tests can perform DOM manipulation. So then we have to develop a component separately and <em>then</em> integrate it into our application. How inconvenient! So much of the time, when developing with jQuery, we opt for iterative instead of test-driven development. And who could blame us?</p>

<p>But because we have separation of concerns, we can do test-driven development iteratively in AngularJS! For example, let's say we want a super-simple directive to indicate in our menu what our current route is. We can declare what we want in the view of our application:</p>

<pre class=""lang-html prettyprint-override""><code>&lt;a href=""/hello"" when-active&gt;Hello&lt;/a&gt;
</code></pre>

<p>Okay, now we can write a test for the non-existent <code>when-active</code> directive:</p>

<pre class=""lang-js prettyprint-override""><code>it( 'should add ""active"" when the route changes', inject(function() {
    var elm = $compile( '&lt;a href=""/hello"" when-active&gt;Hello&lt;/a&gt;' )( $scope );

    $location.path('/not-matching');
    expect( elm.hasClass('active') ).toBeFalsey();

    $location.path( '/hello' );
    expect( elm.hasClass('active') ).toBeTruthy();
}));
</code></pre>

<p>And when we run our test, we can confirm that it fails. Only now should we create our directive:</p>

<pre class=""lang-js prettyprint-override""><code>.directive( 'whenActive', function ( $location ) {
    return {
        scope: true,
        link: function ( scope, element, attrs ) {
            scope.$on( '$routeChangeSuccess', function () {
                if ( $location.path() == element.attr( 'href' ) ) {
                    element.addClass( 'active' );
                }
                else {
                    element.removeClass( 'active' );
                }
            });
        }
    };
});
</code></pre>

<p>Our test now passes <em>and</em> our menu performs as requested. Our development is <em>both</em> iterative <em>and</em> test-driven. Wicked-cool.</p>

<h1>5. Conceptually, directives are <em>not</em> packaged jQuery</h1>

<p>You'll often hear ""only do DOM manipulation in a directive"". <strong>This is a necessity.</strong> Treat it with due deference!</p>

<p>But let's dive a little deeper...</p>

<p>Some directives just decorate what's already in the view (think <code>ngClass</code>) and therefore sometimes do DOM manipulation straight away and then are basically done. But if a directive is like a ""widget"" and has a template, it should <em>also</em> respect separation of concerns. That is, the template <em>too</em> should remain largely independent from its implementation in the link and controller functions.</p>

<p>AngularJS comes with an entire set of tools to make this very easy; with <code>ngClass</code> we can dynamically update the class; <code>ngModel</code> allows two-way data binding; <code>ngShow</code> and <code>ngHide</code> programmatically show or hide an element; and many more - including the ones we write ourselves. In other words, we can do all kinds of awesomeness <em>without</em> DOM manipulation. The less DOM manipulation, the easier directives are to test, the easier they are to style, the easier they are to change in the future, and the more re-usable and distributable they are.</p>

<p>I see lots of developers new to AngularJS using directives as the place to throw a bunch of jQuery. In other words, they think ""since I can't do DOM manipulation in the controller, I'll take that code put it in a directive"". While that certainly is much better, it's often <em>still wrong</em>.</p>

<p>Think of the logger we programmed in section 3. Even if we put that in a directive, we <em>still</em> want to do it the ""Angular Way"". It <em>still</em> doesn't take any DOM manipulation! There are lots of times when DOM manipulation is necessary, but it's a <em>lot</em> rarer than you think! Before doing DOM manipulation <em>anywhere</em> in your application, ask yourself if you really need to. There might be a better way.</p>

<p>Here's a quick example that shows the pattern I see most frequently. We want a toggleable button. (Note: this example is a little contrived and a skosh verbose to represent more complicated cases that are solved in exactly the same way.)</p>

<pre class=""lang-js prettyprint-override""><code>.directive( 'myDirective', function () {
    return {
        template: '&lt;a class=""btn""&gt;Toggle me!&lt;/a&gt;',
        link: function ( scope, element, attrs ) {
            var on = false;

            $(element).click( function () {
                on = !on;
                $(element).toggleClass('active', on);
            });
        }
    };
});
</code></pre>

<p>There are a few things wrong with this:</p>

<ol>
<li>First, jQuery was never necessary. There's nothing we did here that needed jQuery at all!</li>
<li>Second, even if we already have jQuery on our page, there's no reason to use it here; we can simply use <code>angular.element</code> and our component will still work when dropped into a project that doesn't have jQuery.</li>
<li>Third, even assuming jQuery <em>was</em> required for this directive to work, jqLite (<code>angular.element</code>) will <em>always</em> use jQuery if it was loaded! So we needn't use the <code>$</code> - we can just use <code>angular.element</code>.</li>
<li>Fourth, closely related to the third, is that jqLite elements needn't be wrapped in <code>$</code> - the <code>element</code> that is passed to the <code>link</code> function would <em>already be</em> a jQuery element! </li>
<li>And fifth, which we've mentioned in previous sections, why are we mixing template stuff into our logic?</li>
</ol>

<p>This directive can be rewritten (even for very complicated cases!) much more simply like so:</p>

<pre class=""lang-js prettyprint-override""><code>.directive( 'myDirective', function () {
    return {
        scope: true,
        template: '&lt;a class=""btn"" ng-class=""{active: on}"" ng-click=""toggle()""&gt;Toggle me!&lt;/a&gt;',
        link: function ( scope, element, attrs ) {
            scope.on = false;

            scope.toggle = function () {
                scope.on = !scope.on;
            };
        }
    };
});
</code></pre>

<p>Again, the template stuff is in the template, so you (or your users) can easily swap it out for one that meets any style necessary, and the <strong>logic</strong> never had to be touched. Reusability - boom!</p>

<p>And there are still all those other benefits, like testing - it's easy! No matter what's in the template, the directive's internal API is never touched, so refactoring is easy. You can change the template as much as you want without touching the directive. And no matter what you change, your tests still pass.</p>

<p>w00t!</p>

<p>So if directives aren't just collections of jQuery-like functions, what are they? Directives are actually <strong>extensions of HTML</strong>. If HTML doesn't do something you need it to do, you write a directive to do it for you, and then use it just as if it was part of HTML.</p>

<p>Put another way, if AngularJS doesn't do something out of the box, think how the team would accomplish it to fit right in with <code>ngClick</code>, <code>ngClass</code>, et al.</p>

<h1>Summary</h1>

<p>Don't even use jQuery. Don't even include it. It will hold you back. And when you come to a problem that you think you know how to solve in jQuery already, before you reach for the <code>$</code>, try to think about how to do it within the confines the AngularJS. If you don't know, ask! 19 times out of 20, the best way to do it doesn't need jQuery and to try to solve it with jQuery results in more work for you.</p>
","15012542"
"How do I completely uninstall Node.js, and reinstall from beginning (Mac OS X)","765601","","

<p>My version of node is always v0.6.1-pre even after I install brew node and NVM install v0.6.19.</p>

<p>My node version is:</p>

<pre class=""lang-none prettyprint-override""><code>node -v
v0.6.1-pre
</code></pre>

<p>NVM says this (after I install a version of node for the first time in one bash terminal):</p>

<pre class=""lang-none prettyprint-override""><code>nvm ls
v0.6.19
current:    v0.6.19
</code></pre>

<p>But when I restart bash, this is what I see:</p>

<pre class=""lang-none prettyprint-override""><code>nvm ls
v0.6.19
current:    v0.6.1-pre
default -&gt; 0.6.19 (-&gt; v0.6.19)
</code></pre>

<p>So where is this phantom node 0.6.1-pre version and how can I get rid of it? I'm trying to install libraries via NPM so that I can work on a project.</p>

<p>I tried using BREW to update before NVM, using ""brew update"" and ""brew install node"". 
I've tried deleting the ""node"" directory in my /usr/local/include and the ""node"" and ""node_modules"" in my ""/usr/local/lib"".
I've tried uninstalling npm and reinstalling it following <a href=""https://superuser.com/questions/268946/uninstall-node-js"">these</a> instructions.</p>

<p>All of this because I was trying to update an older version of node to install the ""zipstream"" library. Now there's folders in my users directory, and the node version STILL isn't up to date, even though NVM says it's using 0.6.19.</p>

<p><strong>Ideally, I'd like to uninstall nodejs, npm, and nvm, and just reinstall the entire thing from scratch on my system.</strong></p>
","<p>Apparently, there was a <code>/Users/myusername/local</code> folder that contained a <code>include</code> with <code>node</code> and <code>lib</code> with <code>node</code> and <code>node_modules</code>. How and why this was created instead of in my <code>/usr/local</code> folder, I do not know.</p>

<p>Deleting these local references fixed the phantom v0.6.1-pre. If anyone has an explanation, I'll choose that as the correct answer.</p>

<p><strong>EDIT:</strong></p>

<p>You may need to do the additional instructions as well:</p>

<pre><code>sudo rm -rf /usr/local/{lib/node{,/.npm,_modules},bin,share/man}/{npm*,node*,man1/node*}
</code></pre>

<p>which is the equivalent of (same as above)...</p>

<pre><code>sudo rm -rf /usr/local/bin/npm /usr/local/share/man/man1/node* /usr/local/lib/dtrace/node.d ~/.npm ~/.node-gyp 
</code></pre>

<p>or (same as above) broken down...</p>

<p>To completely uninstall node + npm is to do the following:</p>

<ol>
<li>go to <strong>/usr/local/lib</strong> and delete any <strong>node</strong> and <strong>node_modules</strong></li>
<li>go to <strong>/usr/local/include</strong> and delete any <strong>node</strong> and <strong>node_modules</strong> directory </li>
<li>if you installed with <strong>brew install node</strong>, then run <strong>brew uninstall node</strong> in your terminal</li>
<li>check your Home directory for any <strong>local</strong> or <strong>lib</strong> or <strong>include</strong> folders, and delete any <strong>node</strong> or <strong>node_modules</strong> from there</li>
<li>go to <strong>/usr/local/bin</strong> and delete any <strong>node</strong> executable</li>
</ol>

<p>You may also need to do :</p>

<p><code>sudo rm -rf /opt/local/bin/node /opt/local/include/node /opt/local/lib/node_modules</code></p>

<p>Then download <strong>nvm</strong> and follow the instructions to install node. The latest versions of node come with <strong>npm</strong>, I believe, but you can also reinstall that as well.</p>
","11178106"
"jQuery document.createElement equivalent?","762851","","<p>I'm refactoring some old JavaScript code and there's a lot of DOM manipulation going on.</p>

<pre><code>var d = document;
var odv = d.createElement(""div"");
odv.style.display = ""none"";
this.OuterDiv = odv;

var t = d.createElement(""table"");
t.cellSpacing = 0;
t.className = ""text"";
odv.appendChild(t);
</code></pre>

<p>I would like to know if there is a better way to do this using jQuery. I've been experimenting with:</p>

<pre><code>var odv = $.create(""div"");
$.append(odv);
// And many more
</code></pre>

<p>But I'm not sure if this is any better.</p>
","<p>here's your example in ""one"" line.</p>

<pre><code>this.$OuterDiv = $('&lt;div&gt;&lt;/div&gt;')
    .hide()
    .append($('&lt;table&gt;&lt;/table&gt;')
        .attr({ cellSpacing : 0 })
        .addClass(""text"")
    )
;
</code></pre>

<hr>

<p><em>Update</em>: I thought I'd update this post since it still gets quite a bit of traffic. In the comments below there's some discussion about <code>$(""&lt;div&gt;"")</code> vs <code>$(""&lt;div&gt;&lt;/div&gt;"")</code> vs <code>$(document.createElement('div'))</code> as a way of creating new elements, and which is ""best"".</p>

<p>I put together <a href=""http://jsbin.com/elula3"" rel=""noreferrer"">a small benchmark</a>, and here's roughly the results of repeating the above options 100,000 times:</p>

<p><strong>jQuery 1.4, 1.5, 1.6</strong></p>

<pre><code>               Chrome 11  Firefox 4   IE9
&lt;div&gt;            440ms      640ms    460ms
&lt;div&gt;&lt;/div&gt;      420ms      650ms    480ms
createElement    100ms      180ms    300ms
</code></pre>

<p><strong>jQuery 1.3</strong></p>

<pre><code>                Chrome 11
&lt;div&gt;             770ms
&lt;div&gt;&lt;/div&gt;      3800ms
createElement     100ms
</code></pre>

<p><strong>jQuery 1.2</strong></p>

<pre><code>                Chrome 11
&lt;div&gt;            3500ms
&lt;div&gt;&lt;/div&gt;      3500ms
createElement     100ms
</code></pre>

<p>I think it's no big surprise, but <code>document.createElement</code> is the fastest method. Of course, before you go off and start refactoring your entire codebase, remember that the differences we're talking about here (in all but the archaic versions of jQuery) equate to about an extra 3 milliseconds <em>per thousand elements</em>. </p>

<p><strong>Update 2</strong></p>

<p>Updated for jQuery 1.7.2 and put the benchmark on JSBen.ch which is probably a bit more scientific than my primitive benchmarks, plus it can be crowdsourced now!</p>

<p><a href=""http://jsben.ch/#/ARUtz"" rel=""noreferrer"">http://jsben.ch/#/ARUtz</a></p>
","268520"
"Convert comma separated string to array","758582","","<p>I have a comma separated string that I want to convert into an array so I can loop through it.</p>

<p>Is there anything built-in to do this?</p>

<p>For e.g. I have this string</p>

<pre><code>var str = ""January,February,March,April,May,June,July,August,September,October,November,December"";
</code></pre>

<p>now want to split this by comma and store in Array object</p>
","<pre><code>var array = string.split(',');
</code></pre>

<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split"" rel=""noreferrer"">MDN reference</a>, mostly helpful for the possibly unexpected behavior of the <code>limit</code> parameter. (Hint: <code>""a,b,c"".split("","", 2)</code> comes out to <code>[""a"", ""b""]</code>, not <code>[""a"", ""b,c""]</code>.)</p>
","2858130"
"How do I do string replace in JavaScript to convert ‘9.61’ to ‘9:61’?","754861","","<p>Given the code line</p>

<pre><code>var value = $(""#text"").val();
</code></pre>

<p>and <code>value = 9.61</code>, I need to convert <code>9.61</code> to <code>9:61</code>. How can I use the JavaScript replace function here?</p>
","<p>Do it like this:</p>

<pre><code>var value = $(""#text"").val(); // value = 9.61 use $(""#text"").text() if you are not on select box...
value = value.replace(""."", "":""); // value = 9:61
// can then use it as
$(""#anothertext"").val(value);
</code></pre>

<hr>

<p>Updated to reflect to current version of jQuery. And also there are a lot of answers here that would best fit to any same situation as this. You, as a developer, need to know which is which.</p>

<h2>Replace all occurrences</h2>

<p>To replace multiple characters at a time use some thing like this: <code>name.replace(/&amp;/g, ""-"")</code>. Here I am replacing all <code>&amp;</code> chars with <code>-</code>. <code>g</code> means ""global""</p>

<p><strong>Note</strong> - you may need to add square brackets to avoid an error - <code>title.replace(/[+]/g, "" "")</code></p>

<blockquote>
  <p>credits vissu and Dante Cullari</p>
</blockquote>
","2146003"
"JavaScript: How do I print a message to the error console?","752470","","<p>How can I print a message to the error console, preferably including a variable? </p>

<p>For example, something like:</p>

<pre><code>print('x=%d', x);
</code></pre>
","<p>Install <a href=""http://en.wikipedia.org/wiki/Firebug_(software)"" rel=""noreferrer"">Firebug</a> and then you can use <code>console.log(...)</code> and <code>console.debug(...)</code>, etc. (see <a href=""http://getfirebug.com/wiki/index.php/Console_Panel#Message_types"" rel=""noreferrer"">the documentation</a> for more).</p>
","164408"
"What is the best way to add options to a select from as a JS object with jQuery?","752209","","<p>What is the best method for adding options to a <code>&lt;select&gt;</code> from a JavaScript object using jQuery?</p>

<p>I'm looking for something that I don't need a plugin to do, but I would also be interested in the plugins that are out there.</p>

<p>This is what I did:</p>

<pre><code>selectValues = { ""1"": ""test 1"", ""2"": ""test 2"" };

for (key in selectValues) {
  if (typeof (selectValues[key] == 'string') {
    $('#mySelect').append('&lt;option value=""' + key + '""&gt;' + selectValues[key] + '&lt;/option&gt;');
  }
}
</code></pre>

<p><strong>A clean/simple solution:</strong></p>

<p>This is a cleaned up and simplified <a href=""https://stackoverflow.com/questions/170986/what-is-the-best-way-to-add-options-to-a-select-from-an-array-with-jquery/171007#171007"">version of matdumsa's</a>:</p>

<pre><code>$.each(selectValues, function(key, value) {
     $('#mySelect')
          .append($('&lt;option&gt;', { value : key })
          .text(value));
});
</code></pre>

<p>Changes from matdumsa's: (1) removed the close tag for the option inside append() and (2) moved the properties/attributes into an map as the second parameter of append().</p>
","<p>Same as other answers, in jQuery fashion:</p>

<pre><code>$.each(selectValues, function(key, value) {   
     $('#mySelect')
         .append($(""&lt;option&gt;&lt;/option&gt;"")
                    .attr(""value"",key)
                    .text(value)); 
});
</code></pre>
","171007"
"Convert array to JSON","751487","","<p>I have an Array (<code>var cars = []</code>) which holds a few integers.
I've added a few values to the array, but I now need to send this array to a page via jQuery's <code>.get</code> method. How can I convert it to a JSON object for sending?</p>
","<p>Script for backward-compatibility: 
<a href=""https://github.com/douglascrockford/JSON-js/blob/master/json2.js"" rel=""noreferrer"">https://github.com/douglascrockford/JSON-js/blob/master/json2.js</a></p>

<p>And call:</p>

<pre><code>var myJsonString = JSON.stringify(yourArray);
</code></pre>

<p><strong>Note:</strong> <em>The JSON object is now part of most modern web browsers (IE 8 &amp; above). See <a href=""http://caniuse.com/json"" rel=""noreferrer"">caniuse</a> for full listing. Credit goes to: @Spudley for his comment below</em></p>
","2295515"
"Getting current date and time in JavaScript","749803","","<p>I have a script that prints the current date and time in JavaScript, but the <code>DATE</code>is allways wrong. Here is the code:</p>

<pre><code>var currentdate = new Date();
var datetime = ""Last Sync: "" + currentdate.getDay() + ""/""+currentdate.getMonth() 
+ ""/"" + currentdate.getFullYear() + "" @ "" 
+ currentdate.getHours() + "":"" 
+ currentdate.getMinutes() + "":"" + currentdate.getSeconds();
</code></pre>

<p>It should print <code>18/04/2012 15:07:33</code> and prints <code>3/3/2012 15:07:33</code></p>

<p>Any help? Thanks</p>
","<p>When calling <code>.getMonth()</code> you need to add +1 to display the correct month.
Javascript count always starts at 0 (look <a href=""http://skillcrush.com/2013/01/17/why-programmers-start-counting-at-zero/"" rel=""noreferrer"">here</a> to check why), so calling <code>.getMonth()</code> in may will return <code>4</code> and not <code>5</code>. </p>

<p>So in your code we can use <code>currentdate.getMonth()+1</code> to output the correct value. In addition:</p>

<ul>
<li><code>.getDate()</code> returns the day of the month <strong>&lt;- this is the one you want</strong></li>
<li><code>.getDay()</code> is a separate method of the <code>Date</code> object which will return an integer representing the current day of the week (0-6) <code>0 == Sunday</code> etc</li>
</ul>

<p>so your code should look like this:</p>

<pre><code>var currentdate = new Date(); 
var datetime = ""Last Sync: "" + currentdate.getDate() + ""/""
                + (currentdate.getMonth()+1)  + ""/"" 
                + currentdate.getFullYear() + "" @ ""  
                + currentdate.getHours() + "":""  
                + currentdate.getMinutes() + "":"" 
                + currentdate.getSeconds();
</code></pre>

<hr>

<blockquote>
  <p>JavaScript Date instances inherit from Date.prototype. You can modify the constructor's prototype object to affect properties and methods inherited by JavaScript Date instances</p>
</blockquote>

<p>You can make use of the prototype constructor for the <code>Date</code> object and create a new method of the <code>Date</code> object to return today's date and time. These new methods or properties will be inherited by all instances of the <code>Date</code> object thus making it especially useful if you need to re-use this functionality.</p>

<pre><code>// For todays date;
Date.prototype.today = function () { 
    return ((this.getDate() &lt; 10)?""0"":"""") + this.getDate() +""/""+(((this.getMonth()+1) &lt; 10)?""0"":"""") + (this.getMonth()+1) +""/""+ this.getFullYear();
}

// For the time now
Date.prototype.timeNow = function () {
     return ((this.getHours() &lt; 10)?""0"":"""") + this.getHours() +"":""+ ((this.getMinutes() &lt; 10)?""0"":"""") + this.getMinutes() +"":""+ ((this.getSeconds() &lt; 10)?""0"":"""") + this.getSeconds();
}
</code></pre>

<p>You can then simply retrieve the date and time by doing the following:</p>

<pre><code>var newDate = new Date();
var datetime = ""LastSync: "" + newDate.today() + "" @ "" + newDate.timeNow();
</code></pre>

<p>Or call the method inline so it would simply be -</p>

<pre><code>var datetime = ""LastSync: "" + new Date().today() + "" @ "" + new Date().timeNow();
</code></pre>
","10211214"
"Sort array of objects by string property value in JavaScript","747983","","<p>I have an array of JavaScript objects:</p>

<pre><code>var objs = [ 
    { first_nom: 'Lazslo', last_nom: 'Jamf'     },
    { first_nom: 'Pig',    last_nom: 'Bodine'   },
    { first_nom: 'Pirate', last_nom: 'Prentice' }
];
</code></pre>

<p>How can I sort them by the value of <code>last_nom</code> in JavaScript?</p>

<p>I know about <code>sort(a,b)</code>, but that only seems to work on strings and numbers. Do I need to add a toString method to my objects?</p>
","<p>It's easy enough to write your own comparison function:</p>

<pre><code>function compare(a,b) {
  if (a.last_nom &lt; b.last_nom)
    return -1;
  if (a.last_nom &gt; b.last_nom)
    return 1;
  return 0;
}

objs.sort(compare);
</code></pre>

<p>Or inline (c/o Marco Demaio): </p>

<pre><code>objs.sort(function(a,b) {return (a.last_nom &gt; b.last_nom) ? 1 : ((b.last_nom &gt; a.last_nom) ? -1 : 0);} ); 
</code></pre>
","1129270"
"$(document).ready equivalent without jQuery","746130","","<p>I have a script that uses <code>$(document).ready</code>, but it doesn't use anything else from jQuery. I'd like to lighten it up by removing the jQuery dependency.</p>

<p>How can I implement my own <code>$(document).ready</code> functionality without using jQuery? I know that  using <code>window.onload</code> will not be the same, as <code>window.onload</code> fires after all images, frames, etc. have been loaded.</p>
","<p>There is a standards based replacement,<code>DOMContentLoaded</code> that is supported by over <a href=""http://caniuse.com/#search=DOMContentLoaded"" rel=""noreferrer"">98% of browsers</a>, though not IE8:</p>

<pre><code>document.addEventListener(""DOMContentLoaded"", function(event) { 
  //do work
});
</code></pre>

<p>jQuery's native function is much more complicated than just window.onload, as depicted below.  </p>

<pre><code>function bindReady(){
    if ( readyBound ) return;
    readyBound = true;

    // Mozilla, Opera and webkit nightlies currently support this event
    if ( document.addEventListener ) {
        // Use the handy event callback
        document.addEventListener( ""DOMContentLoaded"", function(){
            document.removeEventListener( ""DOMContentLoaded"", arguments.callee, false );
            jQuery.ready();
        }, false );

    // If IE event model is used
    } else if ( document.attachEvent ) {
        // ensure firing before onload,
        // maybe late but safe also for iframes
        document.attachEvent(""onreadystatechange"", function(){
            if ( document.readyState === ""complete"" ) {
                document.detachEvent( ""onreadystatechange"", arguments.callee );
                jQuery.ready();
            }
        });

        // If IE and not an iframe
        // continually check to see if the document is ready
        if ( document.documentElement.doScroll &amp;&amp; window == window.top ) (function(){
            if ( jQuery.isReady ) return;

            try {
                // If IE is used, use the trick by Diego Perini
                // http://javascript.nwbox.com/IEContentLoaded/
                document.documentElement.doScroll(""left"");
            } catch( error ) {
                setTimeout( arguments.callee, 0 );
                return;
            }

            // and execute any waiting functions
            jQuery.ready();
        })();
    }

    // A fallback to window.onload, that will always work
    jQuery.event.add( window, ""load"", jQuery.ready );
}
</code></pre>
","800010"
"jQuery - remove style added with .css() function","745570","","<p>I'm changing CSS with jQuery and I wish to remove the styling I'm adding based on the input value:</p>

<pre><code>if(color != '000000') $(""body"").css(""background-color"", color); else // remove style ?
</code></pre>

<p>How can I do this? Note that the line above runs whenever a color is selected using a color picker (ie. when mouse moves over a color wheel).</p>

<p>2nd note: I can't do this with <code>css(""background-color"", ""none"")</code> because it will remove the default styling from the css files. I just want to remove the <code>background-color</code> inline style added by jQuery.</p>
","<p>Changing the property to an empty string appears to do the job.</p>

<p><code>$.css(""background-color"", """");</code></p>
","4036868"
"JavaScript - onClick to get the ID of the clicked button","745058","","<p>How do find the id of the button which is being clicked?</p>

<pre><code>&lt;button id=""1"" onClick=""reply_click()""&gt;&lt;/button&gt;
&lt;button id=""2"" onClick=""reply_click()""&gt;&lt;/button&gt;
&lt;button id=""3"" onClick=""reply_click()""&gt;&lt;/button&gt;

function reply_click()
{
}
</code></pre>
","<p>You need to send the ID as the function parameters. Do it like this:</p>

<pre><code>&lt;button id=""1"" onClick=""reply_click(this.id)""&gt;B1&lt;/button&gt;
&lt;button id=""2"" onClick=""reply_click(this.id)""&gt;B2&lt;/button&gt;
&lt;button id=""3"" onClick=""reply_click(this.id)""&gt;B3&lt;/button&gt;

&lt;script type=""text/javascript""&gt;
function reply_click(clicked_id)
{
    alert(clicked_id);
}
&lt;/script&gt;
</code></pre>

<p>This will send the ID <code>this.id</code> as <code>clicked_id</code> which you can use in your function. <a href=""http://jsfiddle.net/R77EB/""><strong>See it in action here.</strong></a></p>
","4825325"
"JavaScript window resize event","743581","","<p>How can I hook into a browser window resize event?</p>

<p>There's <a href=""https://stackoverflow.com/questions/599288/cross-browser-window-resize-event-javascript-jquery"">a jQuery way of listening for resize events</a> but I would prefer not to bring it into my project for just this one requirement.</p>
","<p>jQuery is just wrapping the standard <code>resize</code> DOM event, eg.</p>

<pre class=""lang-js prettyprint-override""><code>window.onresize = function(event) {
    ...
};
</code></pre>

<p>jQuery <em>may</em> do some work to ensure that the resize event gets fired consistently in all browsers, but I'm not sure if any of the browsers differ, but I'd encourage you to test in Firefox, Safari, and IE.</p>
","641874"
"How to get value of selected radio button?","742467","","<p>I looked everywhere and tried everything to get the selected value from a group of radio buttons. </p>

<p>Here's my HTML:</p>

<pre><code>&lt;div id=""rates""&gt;
  &lt;input type=""radio"" id=""r1"" name=""rate"" value=""Fixed Rate""&gt; Fixed Rate
  &lt;input type=""radio"" id=""r2"" name=""rate"" value=""Variable Rate""&gt; Variable Rate
  &lt;input type=""radio"" id=""r3"" name=""rate"" value=""Multi Rate"" checked=""checked""&gt; Multi Rate  
&lt;/div&gt;
</code></pre>

<p>Here's my .js:</p>

<pre><code>var rates = document.getElementById('rates').value;
var rate_value;
if(rates =='Fixed Rate'){
    rate_value = document.getElementById('r1').value;

}else if(rates =='Variable Rate'){
    rate_value = document.getElementById('r2').value;

}else if(rates =='Multi Rate'){
    rate_value = document.getElementById('r3').value;
}  

document.getElementById('results').innerHTML = rate_value;
</code></pre>

<p>I keep getting undefined.</p>
","<pre><code>var rates = document.getElementById('rates').value;
</code></pre>

<p>The rates element is a <code>div</code>, so it won't have a value. This is probably where the <code>undefined</code> is coming from.</p>

<p>The <code>checked</code> property will tell you whether the element is selected:</p>

<pre><code>if (document.getElementById('r1').checked) {
  rate_value = document.getElementById('r1').value;
}
</code></pre>
","15839312"
"jQuery: Return data after ajax call success","740332","","<p>I have something like this, where it is a simple call to a script that gives me back a value, a string..</p>

<pre><code>function testAjax() {
    $.ajax({
      url: ""getvalue.php"",  
      success: function(data) {
         return data; 
      }
   });
}
</code></pre>

<p>but if I call something like this</p>

<pre><code>var output = testAjax(svar);  // output will be undefined...
</code></pre>

<p>so how can I return the value?
the below code does not seem to work either...</p>

<pre><code>function testAjax() {
    $.ajax({
      url: ""getvalue.php"",  
      success: function(data) {

      }
   });
   return data; 
}
</code></pre>
","<p>The only way to return the data from the function would be to make a synchronous call instead of an asynchronous call, but that would freeze up the browser while it's waiting for the response.</p>

<p>You can pass in a callback function that handles the result:</p>

<pre><code>function testAjax(handleData) {
  $.ajax({
    url:""getvalue.php"",  
    success:function(data) {
      handleData(data); 
    }
  });
}
</code></pre>

<p>Call it like this:</p>

<pre><code>testAjax(function(output){
  // here you use the output
});
// Note: the call won't wait for the result,
// so it will continue with the code here while waiting.
</code></pre>
","5316755"
"Get the last item in an array","738219","","<p>Here is my JavaScript code so far:</p>

<pre><code>var linkElement = document.getElementById(""BackButton"");
var loc_array = document.location.href.split('/');
var newT = document.createTextNode(unescape(capWords(loc_array[loc_array.length-2]))); 
linkElement.appendChild(newT);
</code></pre>

<p>Currently it takes the second to last item in the array from the URL. However I want to do a check for the last item in the array to be ""index.html"" and if so, grab the third to last item instead.</p>
","<pre><code>if(loc_array[loc_array.length-1] == 'index.html'){
 //do something
}else{
 //something else.
}
</code></pre>

<p>In the event that your server serves the same file for ""index.html"" and ""inDEX.htML"" you can also use: <code>.toLowerCase()</code>.</p>

<p>Though, you might want to consider doing this server-side if possible: it will be cleaner and work for people without JS.</p>
","3216041"
"How can you encode a string to Base64 in JavaScript?","733111","","<p>I have a PHP script that can encode a PNG image to a Base64 string.</p>

<p>I'd like to do the same thing using JavaScript. I know how to open files, but I'm not sure how to do the encoding? I'm not used to working with binary data.</p>
","<p>You can use <a href=""https://developer.mozilla.org/En/DOM/Window.btoa"" rel=""noreferrer""><code>btoa()</code></a> and <a href=""https://developer.mozilla.org/en/DOM/window.atob"" rel=""noreferrer""><code>atob()</code></a> to convert to and from base64 encoding.</p>

<p>There appears to be some confusion in the comments regarding what these functions accept/return, so…</p>

<ul>
<li><p><code>btoa()</code> accepts a “string” where each character represents an 8-bit byte – if you pass a string containing characters that can’t be represented in 8 bits, <a href=""https://developer.mozilla.org/en-US/docs/Web/API/window.btoa#Unicode_Strings"" rel=""noreferrer"">it will probably break</a>. This isn’t a problem <em>if</em> you’re actually treating the string as a byte array, but if you’re trying to do something else then you’ll have to encode it first.</p></li>
<li><p><code>atob()</code> returns a “string” where each character represents an 8-bit byte – that is, its value will be between <code>0</code> and <code>0xff</code>. This does <em>not</em> mean it’s ASCII – presumably if you’re using this function at all, you expect to be working with binary data and not text.</p></li>
</ul>

<h3>See also:</h3>

<ul>
<li><a href=""https://stackoverflow.com/questions/1095102/how-do-i-load-binary-image-data-using-javascript-and-xmlhttprequest"">How do I load binary image data using Javascript and XMLHttpRequest?</a></li>
</ul>
","247261"
"Pure JavaScript equivalent of jQuery's $.ready() - how to call a function when the page/DOM is ready for it","724673","","<p>Okay, this might just be a silly question, though I'm sure there are plenty of other people asking the same question from time to time. Me, I just want to make 100% sure about it either way. With jQuery we all know the wonderful</p>

<pre><code>$('document').ready(function(){});
</code></pre>

<p>However, let's say I want to run a function that is written in standard JavaScript with no library backing it, and that I want to launch a function as soon as the page is ready to handle it. What's the proper way to approach this?</p>

<p>I know I can do:</p>

<pre><code>window.onload=""myFunction()"";
</code></pre>

<p>...or I can use the <code>body</code> tag:</p>

<pre><code>&lt;body onload=""myFunction()""&gt;
</code></pre>

<p>...or I can even try at the bottom of the page after everything, but the end <code>body</code> or <code>html</code> tag like:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
   myFunction();
&lt;/script&gt;
</code></pre>

<p>What is a cross-browser(old/new)-compliant method of issuing one or more functions in a manner like jQuery's <code>$.ready()</code>?</p>
","<p>The simplest thing to do in the absence of a framework that does all the cross-browser compatibility for you is to just put a call to your code at the end of the body.  This is faster to execute than an <code>onload</code> handler because this waits only for the DOM to be ready, not for all images to load.  And, this works in every browser.</p>

<pre><code>&lt;html&gt;
&lt;head&gt;
&lt;/head&gt;
&lt;body&gt;
Your HTML here

&lt;script&gt;
// self executing function here
(function() {
   // your page initialization code here
   // the DOM will be available here

})();
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>If you really don't want to do it this way and you need cross browser compatibility and you don't want to wait for <code>window.onload</code>, then you probably should go look at how a framework like jQuery implements it's <code>$(document).ready()</code> method.  It's fairly involved depending upon the capabilities of the browser.</p>

<p>To give you a little idea what jQuery does (which will work wherever the script tag is placed).</p>

<p>If supported, it tries the standard:</p>

<pre><code>document.addEventListener('DOMContentLoaded', fn, false);
</code></pre>

<p>with a fallback to:</p>

<pre><code>window.addEventListener('load', fn, false )
</code></pre>

<p>or for older versions of IE, it uses:</p>

<pre><code>document.attachEvent(""onreadystatechange"", fn);
</code></pre>

<p>with a fallback to:</p>

<pre><code>window.attachEvent(""onload"", fn);
</code></pre>

<p>And, there are some work-arounds in the IE code path that I don't quite follow, but it looks like it has something to do with frames.</p>

<hr>

<p>Here is a full substitute for jQuery's <code>.ready()</code> written in plain javascript:</p>

<pre><code>(function(funcName, baseObj) {
    // The public function name defaults to window.docReady
    // but you can pass in your own object and own function name and those will be used
    // if you want to put them in a different namespace
    funcName = funcName || ""docReady"";
    baseObj = baseObj || window;
    var readyList = [];
    var readyFired = false;
    var readyEventHandlersInstalled = false;

    // call this when the document is ready
    // this function protects itself against being called more than once
    function ready() {
        if (!readyFired) {
            // this must be set to true before we start calling callbacks
            readyFired = true;
            for (var i = 0; i &lt; readyList.length; i++) {
                // if a callback here happens to add new ready handlers,
                // the docReady() function will see that it already fired
                // and will schedule the callback to run right after
                // this event loop finishes so all handlers will still execute
                // in order and no new ones will be added to the readyList
                // while we are processing the list
                readyList[i].fn.call(window, readyList[i].ctx);
            }
            // allow any closures held by these functions to free
            readyList = [];
        }
    }

    function readyStateChange() {
        if ( document.readyState === ""complete"" ) {
            ready();
        }
    }

    // This is the one public interface
    // docReady(fn, context);
    // the context argument is optional - if present, it will be passed
    // as an argument to the callback
    baseObj[funcName] = function(callback, context) {
        if (typeof callback !== ""function"") {
            throw new TypeError(""callback for docReady(fn) must be a function"");
        }
        // if ready has already fired, then just schedule the callback
        // to fire asynchronously, but right away
        if (readyFired) {
            setTimeout(function() {callback(context);}, 1);
            return;
        } else {
            // add the function and context to the list
            readyList.push({fn: callback, ctx: context});
        }
        // if document already ready to go, schedule the ready function to run
        if (document.readyState === ""complete"") {
            setTimeout(ready, 1);
        } else if (!readyEventHandlersInstalled) {
            // otherwise if we don't have event handlers installed, install them
            if (document.addEventListener) {
                // first choice is DOMContentLoaded event
                document.addEventListener(""DOMContentLoaded"", ready, false);
                // backup is window load event
                window.addEventListener(""load"", ready, false);
            } else {
                // must be IE
                document.attachEvent(""onreadystatechange"", readyStateChange);
                window.attachEvent(""onload"", ready);
            }
            readyEventHandlersInstalled = true;
        }
    }
})(""docReady"", window);
</code></pre>

<p>The latest version of the code is shared publicly on GitHub at <a href=""https://github.com/jfriend00/docReady"">https://github.com/jfriend00/docReady</a></p>

<p>Usage:</p>

<pre><code>// pass a function reference
docReady(fn);

// use an anonymous function
docReady(function() {
    // code here
});

// pass a function reference and a context
// the context will be passed to the function as the first argument
docReady(fn, context);

// use an anonymous function with a context
docReady(function(context) {
    // code here that can use the context argument that was passed to docReady
}, ctx);
</code></pre>

<hr>

<p>This has been tested in:</p>

<pre class=""lang-none prettyprint-override""><code>IE6 and up
Firefox 3.6 and up
Chrome 14 and up
Safari 5.1 and up
Opera 11.6 and up
Multiple iOS devices
Multiple Android devices
</code></pre>

<p>Working implementation and test bed: <a href=""http://jsfiddle.net/jfriend00/YfD3C/"">http://jsfiddle.net/jfriend00/YfD3C/</a></p>

<hr>

<p>Here's a summary of how it works:</p>

<ol>
<li>Create an IIFE (immediately invoked function expression) so we can have non-public state variables.</li>
<li>Declare a public function <code>docReady(fn, context)</code></li>
<li>When <code>docReady(fn, context)</code> is called, check if the ready handler has already fired.  If so, just schedule the newly added callback to fire right after this thread of JS finishes with <code>setTimeout(fn, 1)</code>.</li>
<li>If the ready handler has not already fired, then add this new callback to the list of callbacks to be called later.</li>
<li>Check if the document is already ready.  If so, execute all ready handlers.</li>
<li>If we haven't installed event listeners yet to know when the document becomes ready, then install them now.</li>
<li>If <code>document.addEventListener</code> exists, then install event handlers using <code>.addEventListener()</code> for both <code>""DOMContentLoaded""</code> and <code>""load""</code> events.  The ""load"" is a backup event for safety and should not be needed.</li>
<li>If <code>document.addEventListener</code> doesn't exist, then install event handlers using <code>.attachEvent()</code> for <code>""onreadystatechange""</code> and <code>""onload""</code> events.</li>
<li>In the <code>onreadystatechange</code> event, check to see if the <code>document.readyState === ""complete""</code> and if so, call a function to fire all the ready handlers.</li>
<li>In all the other event handlers, call a function to fire all the ready handlers.</li>
<li>In the function to call all the ready handlers, check a state variable to see if we've already fired.  If we have, do nothing.  If we haven't yet been called, then loop through the array of ready functions and call each one in the order they were added.  Set a flag to indicate these have all been called so they are never executed more than once.</li>
<li>Clear the function array so any closures they might be using can be freed.</li>
</ol>

<p>Handlers registered with <code>docReady()</code> are guaranteed to be fired in the order they were registered.</p>

<p>If you call <code>docReady(fn)</code> after the document is already ready, the callback will be scheduled to execute as soon as the current thread of execution completes using <code>setTimeout(fn, 1)</code>.  This allows the calling code to always assume they are async callbacks that will be called later, even if later is as soon as the current thread of JS finishes and it preserves calling order.</p>
","9899701"
"Download File Using Javascript/jQuery","724256","","<p>I have a very similar requirement specified <a href=""https://stackoverflow.com/questions/1296085/download-file-using-jquery"">here</a>.</p>

<p>I need to have the user's browser start a download manually when <code>$('a#someID').click();</code></p>

<p>But I cannot use the <code>window.href</code> method, since it replaces the current page contents with the file you're trying to download. </p>

<p>Instead I want to open the download in new window/tab. How is this possible?</p>
","<p>Use an invisible <code>&lt;iframe&gt;</code>:</p>

<pre><code>&lt;iframe id=""my_iframe"" style=""display:none;""&gt;&lt;/iframe&gt;
&lt;script&gt;
function Download(url) {
    document.getElementById('my_iframe').src = url;
};
&lt;/script&gt;
</code></pre>

<p>To force the browser to download a file it would otherwise be capable of rendering (such as HTML or text files), you need the server to set the file's <a href=""http://en.wikipedia.org/wiki/Internet_media_type"" rel=""noreferrer"">MIME Type</a> to a nonsensical value, such as <code>application/x-please-download-me</code> or alternatively <code>application/octet-stream</code>, which is used for arbitrary binary data.</p>

<p>If you only want to open it in a new tab, the only way to do this is for the user to a click on a link with its <code>target</code> attribute set to <code>_blank</code>.</p>

<p><strong>In jQuery:</strong></p>

<pre><code>$('a#someID').attr({target: '_blank', 
                    href  : 'http://localhost/directory/file.pdf'});
</code></pre>

<p>Whenever that link is clicked, it will download the file in a new tab/window.</p>
","3749395"
"""Cross origin requests are only supported for HTTP."" error when loading a local file","723462","","<p>I'm trying to load a 3D model into Three.js with <code>JSONLoader</code>, and that 3D model is in the same directory as the entire website.</p>

<p>I'm getting the <code>""Cross origin requests are only supported for HTTP.""</code> error, but I don't know what's causing it nor how to fix it.</p>
","<p>My crystal ball says that you are loading the model using either <code>file://</code> or <code>C:/</code>, which stays true to the error message as they are not <code>http://</code></p>

<p>So you can either install a webserver in your local PC or upload the model somewhere else and use <code>jsonp</code> and change the url to <code>http://example.com/path/to/model</code></p>
","10752078"
"How do you check if a variable is an array in JavaScript?","715709","","<p>I would like to check whether a variable is either an array or a single value in JavaScript.</p>

<p>I have found a possible solution...</p>

<pre><code>if (variable.constructor == Array)...
</code></pre>

<p>Is this the best way this can be done?</p>
","<p>There are several ways of checking if an variable is an array or not. The best solution is the one you have chosen.</p>

<pre><code>variable.constructor === Array
</code></pre>

<p>This is the fastest method on Chrome, and most likely all other browsers. All arrays are objects, so checking the constructor property is a fast process for JavaScript engines.</p>

<p>If you are having issues with finding out if an objects property is an array, you must first check if the property is there.</p>

<pre><code>variable.prop &amp;&amp; variable.prop.constructor === Array
</code></pre>

<p>Some other ways are:</p>

<pre><code>variable instanceof Array
</code></pre>

<p>This method runs about <s>1/3 the speed</s> as the first example. Still pretty solid, looks cleaner, if you're all about pretty code and not so much on performance. Note that checking for numbers does not work as <code>variable instanceof Number</code> always returns <code>false</code>. <strong>Update: <code>instanceof</code> now goes 2/3 the speed!</strong></p>

<pre><code>Array.isArray(variable)
</code></pre>

<p>This last one is, in my opinion the ugliest, and it is one of the slowest. Running about 1/5 the speed as the first example. Array.prototype, is actually an array. you can read more about it here <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray"" rel=""noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray</a></p>

<p><strong>So yet another update</strong></p>

<pre><code>Object.prototype.toString.call(variable) === '[object Array]';
</code></pre>

<p>This guy is the slowest for trying to check for an Array. However, this is a one stop shop for any type you're looking for. However, since you're looking for an array, just use the fastest method above.</p>

<p>Also, I ran some test: <a href=""http://jsperf.com/instanceof-array-vs-array-isarray/33"" rel=""noreferrer"">http://jsperf.com/instanceof-array-vs-array-isarray/33</a> So have some fun and check it out.</p>

<p>Note: @EscapeNetscape has created another test as jsperf.com is down. <a href=""http://jsben.ch/#/QgYAV"" rel=""noreferrer"">http://jsben.ch/#/QgYAV</a> I wanted to make sure the original link stay for whenever jsperf comes back online.</p>
","26633883"
"How do I pass command line arguments?","711919","","<p>I have a web server written in <a href=""http://en.wikipedia.org/wiki/Node.js"" rel=""noreferrer"">Node.js</a> and I would like to launch with a specific folder. I'm not sure how to access arguments in JavaScript. I'm running node like this:</p>

<pre><code>$ node server.js folder
</code></pre>

<p>here <code>server.js</code> is my server code. Node.js help says this is possible:</p>

<pre><code>$ node -h
Usage: node [options] script.js [arguments]
</code></pre>

<p>How would I access those arguments in JavaScript? Somehow I was not able to find this information on the web.</p>
","<h1>Standard Method (no library)</h1>

<p>The arguments are stored in <code>process.argv</code></p>

<p>Here are <a href=""http://nodejs.org/docs/latest/api/process.html#process_process_argv"">the node docs on handling command line args:</a></p>

<blockquote>
  <p><code>process.argv</code> is an array containing the command line arguments. The first element will be 'node', the second element will be the name of the JavaScript file. The next elements will be any additional command line arguments.</p>
</blockquote>

<pre><code>// print process.argv
process.argv.forEach(function (val, index, array) {
  console.log(index + ': ' + val);
});
</code></pre>

<p>This will generate:</p>

<pre><code>$ node process-2.js one two=three four
0: node
1: /Users/mjr/work/node/process-2.js
2: one
3: two=three
4: four
</code></pre>
","4351548"
"Check if a variable is a string in JavaScript","709853","","<p>How can I determine whether a variable is a string or something else in JavaScript?</p>
","<p>You can use <code>typeof</code> operator:</p>

<pre><code>var booleanValue = true; 
var numericalValue = 354;
var stringValue = ""This is a String"";
alert(typeof booleanValue) // displays ""boolean""
alert(typeof numericalValue) // displays ""number""
alert(typeof stringValue) // displays ""string""
</code></pre>

<p>Example from <a href=""http://hubpages.com/hub/javascript-typeof-operator"" rel=""noreferrer"">this webpage</a>. (Example was slightly modified though).</p>

<p><a href=""http://www.webreference.com/javascript/reference/core_ref/ops.html"" rel=""noreferrer"">Here's</a> reference for <code>typeof</code> operator.</p>
","4059166"
"How to parse JSON using Node.js?","705655","","<p>How should I parse JSON using Node.js? Is there some module which will validate and parse JSON securely?</p>
","<p>You can simply use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse"" rel=""noreferrer""><code>JSON.parse</code></a>. </p>

<p>node.js is built on <a href=""https://developers.google.com/v8/"" rel=""noreferrer"">V8</a>, which provides the global object <a href=""https://developer.mozilla.org/En/Using_JSON_in_Firefox"" rel=""noreferrer""><strong><code>JSON</code></strong><sup><em>[docs]</em></sup></a>. The definition of the <code>JSON</code> object <a href=""http://es5.github.com/#x15.12"" rel=""noreferrer"">is part of the ECMAScript 5 specification</a>.</p>

<p>Note - <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse"" rel=""noreferrer""><code>JSON.parse</code></a> can tie up the current thread because it is a synchronous method. So if you are planning to parse big JSON objects use a streaming json parser.</p>
","5726756"
"JavaScript sleep/wait before continuing","704453","","<p>I have a JavaScript code that I need to add a sleep/wait function to. The code I am running is already in a function, eg:</p>

<pre><code>function myFunction(time)
{
    alert('time starts now');
    //code to make the program wait before continuing
    alert('time is up')
}
</code></pre>

<p>I have heard that a possible solution might include</p>

<pre><code>setTimeout
</code></pre>

<p>but I am not sure how to use it in this case.</p>

<p>I can't use PHP, as my server does not support it, although using jQuery would be fine.</p>
","<p>JS does not have a sleep function, it has <a href=""https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers.setTimeout"" rel=""noreferrer""><strong>setTimeout()</strong></a> or <a href=""https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers.setInterval"" rel=""noreferrer""><strong>setInterval()</strong></a> functions. </p>

<p>If you can move the code that you need to run after the pause into the <code>setTimeout()</code> callback, you can do something like this:</p>

<pre><code>//code before the pause
setTimeout(function(){
    //do what you need here
}, 2000);
</code></pre>

<p>see example here : <a href=""http://jsfiddle.net/9LZQp/"" rel=""noreferrer"">http://jsfiddle.net/9LZQp/</a></p>

<p>This won't halt the execution of your script, but as long as <code>setTimeout()</code> is an asynchronous function, this code</p>

<pre><code>console.log(""HELLO"");
setTimeout(function(){
    console.log(""THIS IS"");
}, 2000);
console.log(""DOG"");
</code></pre>

<p>will print this in the console:</p>

<pre><code>HELLO
DOG
THIS IS
</code></pre>

<p>(note that <strong>DOG</strong> is printed before <strong>THIS IS</strong>)</p>

<hr>

<p>You can use the following code to simulate a sleep for short periods of time:</p>

<pre><code>function sleep(milliseconds) {
  var start = new Date().getTime();
  for (var i = 0; i &lt; 1e7; i++) {
    if ((new Date().getTime() - start) &gt; milliseconds){
      break;
    }
  }
}
</code></pre>

<p>now, if you want to sleep for 1 second, just use:</p>

<pre><code>sleep(1000);
</code></pre>

<p>example: <a href=""http://jsfiddle.net/HrJku/1/"" rel=""noreferrer"">http://jsfiddle.net/HrJku/1/</a></p>

<p>please note that <strong>this code will keep your script busy for <em>n milliseconds</em>. This will not only stop execution of Javascript on your page, but depending on the browser implementation, may possibly make the page completely unresponsive, and possibly make the entire browser unresponsive</strong>. In other words this is almost always the wrong thing to do.</p>
","16873849"
"Check/Uncheck checkbox with JavaScript?","700583","","<p>How can a checkbox be checked/unchecked using JavaScript or jQuery?</p>
","<p>Javascript:</p>

<pre><code>// Check
document.getElementById(""checkbox"").checked = true;

// Uncheck
document.getElementById(""checkbox"").checked = false;
</code></pre>

<p>jQuery (1.6+):</p>

<pre><code>// Check
$(""#checkbox"").prop(""checked"", true);

// Uncheck
$(""#checkbox"").prop(""checked"", false);
</code></pre>

<p>jQuery (1.5-):</p>

<pre><code>// Check
$(""#checkbox"").attr(""checked"", true);

// Uncheck
$(""#checkbox"").attr(""checked"", false);
</code></pre>
","8206573"
"event.preventDefault() vs. return false","699712","","<p>When I want to prevent other event handlers from executing after a certain event is fired, I can use one of two techniques. I'll use jQuery in the examples, but this applies to plain-JS as well:</p>

<h3>1. <code>event.preventDefault()</code></h3>

<pre><code>$('a').click(function (e) {
    // custom handling here
    e.preventDefault();
});
</code></pre>

<h3>2. <code>return false</code></h3>

<pre><code>$('a').click(function () {
    // custom handling here
    return false;
});
</code></pre>

<p>Is there any significant difference between those two methods of stopping event propagation?</p>

<p>For me, <code>return false;</code> is simpler, shorter and probably less error prone than executing a method. With the method, you have to remember about correct casing, parenthesis, etc. </p>

<p>Also, I have to define the first parameter in callback to be able to call the method. Perhaps, there are some reasons why I should avoid doing it like this and use <code>preventDefault</code> instead? What's the better way?</p>
","<p><code>return false</code> from <em>within a jQuery event handler</em> is effectively the same as calling both  <code>e.preventDefault</code> and <code>e.stopPropagation</code> on the passed <a href=""http://api.jquery.com/category/events/event-object/"" rel=""noreferrer"">jQuery.Event object.</a></p>

<p><code>e.preventDefault()</code> will prevent the default event from occuring, <code>e.stopPropagation()</code> will prevent the event from bubbling up and <code>return false</code> will do both. Note that this behaviour differs from <em>normal</em> (non-jQuery) event handlers, in which, notably, <code>return false</code> does <em>not</em> stop the event from bubbling up.</p>

<p>Source: <a href=""http://ejohn.org/"" rel=""noreferrer"">John Resig</a></p>

<p><a href=""http://www.mail-archive.com/jquery-en@googlegroups.com/msg71371.html"" rel=""noreferrer""><strong>Any benefit to using event.preventDefault() over ""return false"" to cancel out an href click?</strong></a></p>
","1357151"
"jQuery Event Keypress: Which key was pressed?","694529","","<p>With jQuery, how do I find out which key was pressed when I bind to the keypress event?</p>

<pre><code>$('#searchbox input').bind('keypress', function(e) {});
</code></pre>

<p>I want to trigger a submit when <kbd>ENTER</kbd> is pressed.</p>

<p><strong>[Update]</strong></p>

<p>Even though I found the (or better: one) answer myself, there seems to be some room for variation ;)</p>

<p>Is there a difference between <code>keyCode</code> and <code>which</code> - especially if I'm just looking for <kbd>ENTER</kbd>, which will never be a unicode key?</p>

<p>Do some browsers provide one property and others provide the other one? </p>
","<p>Actually this is better:</p>

<pre><code> var code = e.keyCode || e.which;
 if(code == 13) { //Enter keycode
   //Do something
 }
</code></pre>
","302161"
"How do I check for null values in JavaScript?","689968","","<p>How can I check for null values in JavaScript? I wrote the code below but it didn't work.</p>

<pre><code>if (pass == null || cpass == null || email == null || cemail == null || user == null) {      

    alert(""fill all columns"");
    return false;  

}   
</code></pre>

<p>And how can I find errors in my JavaScript programs?</p>
","<p>Javascript is very flexible with regards to checking for ""null"" values.  I'm guessing you're actually looking for empty strings, in which case this simpler code will work:</p>

<pre><code>if(!pass || !cpass || !email || !cemail || !user){
</code></pre>

<p>Which will check for empty strings (<code>""""</code>), <code>null</code>, <code>undefined</code>, <code>false</code> and the numbers <code>0</code> and <code>NaN</code></p>

<p>Please note that if you are specifically checking for numbers it is a common mistake to miss <code>0</code> with this method, and <code>num !== 0</code> is preferred (or <code>num !== -1</code> or <code>~num</code> (hacky code that also checks against <code>-1</code>)) for functions that return <code>-1</code>, e.g. <code>indexOf</code>)</p>
","6003920"
"Uncaught SyntaxError: Unexpected token :","689647","","<p>I am running an AJAX call in my MooTools script, this works fine in Firefox but in Chrome I am getting a <code>Uncaught SyntaxError: Unexpected token :</code> error, I cannot determine why. Commenting out code to determine where the bad code is yields nothing, I am thinking it may be a problem with the JSON being returned. Checking in the console I see the JSON returned is this:</p>

<pre><code>{""votes"":47,""totalvotes"":90}
</code></pre>

<p>I don't see any problems with it, why would this error occur?</p>

<pre><code>vote.each(function(e){
  e.set('send', {
    onRequest : function(){
      spinner.show();
    },
    onComplete : function(){
      spinner.hide();
    },
    onSuccess : function(resp){
      var j = JSON.decode(resp);
      if (!j) return false;
      var restaurant = e.getParent('.restaurant');
      restaurant.getElements('.votes')[0].set('html', j.votes + "" vote(s)"");
      $$('#restaurants .restaurant').pop().set('html', ""Total Votes: "" + j.totalvotes);
      buildRestaurantGraphs();
    }
  });

  e.addEvent('submit', function(e){
    e.stop();
    this.send();
  });
});
</code></pre>
","<p>I have just solved the problem. There was something causing problems with a standard Request call, so this is the code I used instead:</p>

<pre><code>vote.each(function(element){                
  element.addEvent('submit', function(e){
    e.stop();
    new Request.JSON({
      url : e.target.action, 
      onRequest : function(){
        spinner.show();
      },
      onComplete : function(){
        spinner.hide();
      },
      onSuccess : function(resp){
        var j = resp;
        if (!j) return false;
        var restaurant = element.getParent('.restaurant');
        restaurant.getElements('.votes')[0].set('html', j.votes + "" vote(s)"");
        $$('#restaurants .restaurant').pop().set('html', ""Total Votes: "" + j.totalvotes);
        buildRestaurantGraphs();
      }
    }).send(this);
  });
});
</code></pre>

<p>If anyone knows why the standard Request object was giving me problems I would love to know.</p>
","3153134"
"Define global variable in a JavaScript function","688735","","<p>Is it possible to define a global variable in a JavaScript function?</p>

<p>I want use the <code>trailimage</code> variable (declared in the <code>makeObj</code> function) in other functions.</p>

<pre><code>&lt;html xmlns=""http://www.w3.org/1999/xhtml""&gt;
    &lt;head id=""Head1"" runat=""server""&gt;
        &lt;title&gt;&lt;/title&gt;
        &lt;script type=""text/javascript""&gt;
            var offsetfrommouse = [10, -20];
            var displayduration = 0;
            var obj_selected = 0;
            function makeObj(address) {
                **var trailimage = [address, 50, 50];**
                document.write('&lt;img id=""trailimageid"" src=""' + trailimage[0] + '"" border=""0""  style="" position: absolute; visibility:visible; left: 0px; top: 0px; width: ' + trailimage[1] + 'px; height: ' + trailimage[2] + 'px""&gt;');
                obj_selected = 1;
            }

            function truebody() {
                return (!window.opera &amp;&amp; document.compatMode &amp;&amp; document.compatMode != ""BackCompat"") ? document.documentElement : document.body;
            }
            function hidetrail() {
                var x = document.getElementById(""trailimageid"").style;
                x.visibility = ""hidden"";
                document.onmousemove = """";
            }
            function followmouse(e) {
                var xcoord = offsetfrommouse[0];
                var ycoord = offsetfrommouse[1];
                var x = document.getElementById(""trailimageid"").style;
                if (typeof e != ""undefined"") {
                    xcoord += e.pageX;
                    ycoord += e.pageY;
                }
                else if (typeof window.event != ""undefined"") {
                    xcoord += truebody().scrollLeft + event.clientX;
                    ycoord += truebody().scrollTop + event.clientY;
                }
                var docwidth = 1395;
                var docheight = 676;
                if (xcoord + trailimage[1] + 3 &gt; docwidth || ycoord + trailimage[2] &gt; docheight) {
                    x.display = ""none"";
                    alert(""inja"");
                }
                else
                    x.display = """";
                x.left = xcoord + ""px"";
                x.top = ycoord + ""px"";
            }

            if (obj_selected = 1) {
                alert(""obj_selected = true"");
                document.onmousemove = followmouse;
                if (displayduration &gt; 0)
                    setTimeout(""hidetrail()"", displayduration * 1000);
            }
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;form id=""form1"" runat=""server""&gt;
        &lt;img alt="""" id=""house"" src=""Pictures/sides/right.gif"" style=""z-index: 1; left: 372px;
            top: 219px; position: absolute; height: 138px; width: 120px"" onclick=""javascript:makeObj('Pictures/sides/sides-not-clicked.gif');"" /&gt;
        &lt;/form&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>
","<p>Yes, as the others have said, you can use <code>var</code> at global scope (outside of all functions) to declare a global variable:</p>

<pre><code>&lt;script&gt;
var yourGlobalVariable;
function foo() {
    // ...
}
&lt;/script&gt;
</code></pre>

<p>Alternately, you can assign to a property on <code>window</code>:</p>

<pre><code>&lt;script&gt;
function foo() {
    window.yourGlobalVariable = ...;
}
&lt;/script&gt;
</code></pre>

<p>...because in browsers, <s>all global variables</s> global variables declared with <code>var</code> are properties of the <code>window</code> object. (In the latest specification, ECMAScript 2015, the new <code>let</code>, <code>const</code>, and <code>class</code> statements at global scope create globals that aren't properties of the global object; a new concept in ES2015.)</p>

<p>(There's also <a href=""http://blog.niftysnippets.org/2008/03/horror-of-implicit-globals.html"">the horror of implicit globals</a>, but don't do it on purpose and do your best to avoid doing it by accident, perhaps by using ES5's <code>""use strict""</code>.)</p>

<p>All that said: I'd avoid global variables if you possibly can (and you almost certainly can). As I mentioned, they end up being properties of <code>window</code>, and <code>window</code> is already <a href=""http://www.w3.org/TR/Window/""><em>plenty crowded enough</em></a> what with all elements with an <code>id</code> (and many with just a <code>name</code>) being dumped in it (and regardless that upcoming specification, IE dumps just about anything with a <code>name</code> on there).</p>

<p>Instead, wrap your code in a scoping function and use variables local to that scoping function, and make your other functions closures within it:</p>

<pre><code>&lt;script&gt;
(function() { // Begin scoping function
    var yourGlobalVariable; // Global to your code, invisible outside the scoping function
    function foo() {
        // ...
    }
})();         // End scoping function
&lt;/script&gt;
</code></pre>
","5786899"
"Is there a Sleep/Pause/Wait function in JavaScript?","687944","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/951021/what-is-the-javascript-version-of-sleep"">What is the JavaScript version of sleep()?</a></p>
</blockquote>



<p>Is there a JavaScript function that simulates the operation of the <code>sleep</code> function in PHP — a function that pauses code execution for x milliseconds, and then resumes where it left off?</p>

<p>I found some things here on Stack Overflow, but nothing useful.</p>
","<p>You need to re-factor the code into pieces. This doesn't stop execution, it just puts a delay in between the parts.</p>

<pre><code>function partA() {
  ...
  window.setTimeout(partB,1000);
}

function partB() {
   ...
}
</code></pre>
","7854868"
"How to close current tab in a browser window?","687833","","<p>I want to create a link on a webpage that would close current active tab in a browser without closing other tabs in the browser. When user clicks close link, an alert message should appear asking user to confirm with two buttons, ""YES"" and ""NO"". If user clicks ""YES"", close that page and If ""NO"", do nothing.</p>

<p>How can it be done? Any suggestions?</p>
","<p>You will need Javascript to do this. Use <a href=""https://developer.mozilla.org/en/DOM/window.close"" rel=""noreferrer""><code>window.close()</code></a>:</p>

<pre><code>close();
</code></pre>

<p><strong>Note:</strong> the current tab is implied. This is equivalent:</p>

<pre><code>window.close();
</code></pre>

<p>or you can specify a different window.</p>

<p>So:</p>

<pre><code>function close_window() {
  if (confirm(""Close Window?"")) {
    close();
  }
}
</code></pre>

<p>with HTML:</p>

<pre><code>&lt;a href=""javascript:close_window();""&gt;close&lt;/a&gt;
</code></pre>

<p>or:</p>

<pre><code>&lt;a href=""#"" onclick=""close_window();return false;""&gt;close&lt;/a&gt;
</code></pre>

<p>You <code>return false</code> here to prevent the default behavior for the event. Otherwise the browser will attempt to go to that URL (which it obviously isn't).</p>

<p>Now the options on the <a href=""https://developer.mozilla.org/en/DOM/window.confirm"" rel=""noreferrer""><code>window.confirm()</code></a> dialog box will be OK and Cancel (not Yes and No). If you <em>really</em> want Yes and No you'll need to create some kind of modal Javascript dialog box.</p>

<p><strong>Note:</strong> there is browser-specific differences with the above. If you opened the window with Javascript (via <code>window.open()</code>) then you are allowed to close the window with javascript. Firefox disallows you from closing other windows. I believe IE will ask the user for confirmation. Other browsers may vary.</p>
","2076307"
"Remove duplicate values from JS array","687587","","<p>I have a very simple JavaScript array that may or may not contain duplicates.</p>

<pre><code>names = new Array(""Mike"",""Matt"",""Nancy"",""Adam"",""Jenny"",""Nancy"",""Carl"");
</code></pre>

<p>I need to remove the duplicates and put the unique values in a new array.</p>

<p>I could point to all the codes that I've tried but I think it's useless because they don't work. I accept jQuery solutions too.</p>

<h3>Similar question:</h3>

<ul>
<li><a href=""https://stackoverflow.com/questions/840781"">Get all non-unique values (i.e.: duplicate/more than one occurrence) in an array</a></li>
</ul>
","<p>Quick and dirty using jQuery:</p>

<pre><code>var names = [""Mike"",""Matt"",""Nancy"",""Adam"",""Jenny"",""Nancy"",""Carl""];
var uniqueNames = [];
$.each(names, function(i, el){
    if($.inArray(el, uniqueNames) === -1) uniqueNames.push(el);
});
</code></pre>
","9229932"
"Send POST data using XMLHttpRequest","685537","","<p>I'd like to send some data using an XMLHttpRequest in JavaScript.</p>

<p>Say I have the following form in HTML:</p>

<pre><code>&lt;form name=""inputform"" action=""somewhere"" method=""post""&gt;
    &lt;input type=""hidden"" value=""person"" name=""user""&gt;
    &lt;input type=""hidden"" value=""password"" name=""pwd""&gt;
    &lt;input type=""hidden"" value=""place"" name=""organization""&gt;
    &lt;input type=""hidden"" value=""key"" name=""requiredkey""&gt;
&lt;/form&gt;
</code></pre>

<p>How can I write the equivalent using an XMLHttpRequest in JavaScript?</p>
","<p>The code below demonstrates on how to do this.</p>

<pre><code>var http = new XMLHttpRequest();
var url = ""get_data.php"";
var params = ""lorem=ipsum&amp;name=binny"";
http.open(""POST"", url, true);

//Send the proper header information along with the request
http.setRequestHeader(""Content-type"", ""application/x-www-form-urlencoded"");

http.onreadystatechange = function() {//Call a function when the state changes.
    if(http.readyState == 4 &amp;&amp; http.status == 200) {
        alert(http.responseText);
    }
}
http.send(params);
</code></pre>
","9713078"
"Sorting an array of JavaScript objects","681484","","<p>I read the following objects using Ajax and stored them in an array:</p>

<pre><code>var homes = [
    {
        ""h_id"": ""3"",
        ""city"": ""Dallas"",
        ""state"": ""TX"",
        ""zip"": ""75201"",
        ""price"": ""162500""
    }, {
        ""h_id"": ""4"",
        ""city"": ""Bevery Hills"",
        ""state"": ""CA"",
        ""zip"": ""90210"",
        ""price"": ""319250""
    }, {
        ""h_id"": ""5"",
        ""city"": ""New York"",
        ""state"": ""NY"",
        ""zip"": ""00010"",
        ""price"": ""962500""
    }
];
</code></pre>

<p>How do I create a function to sort the objects by the <code>price</code> property in <em>ascending</em> <strong>or</strong> <em>descending</em> order using only JavaScript?</p>
","<p>Sort homes by price in ascending order:</p>

<pre class=""lang-js prettyprint-override""><code>homes.sort(function(a, b) {
    return parseFloat(a.price) - parseFloat(b.price);
});
</code></pre>

<p>Some documentation can be found <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/sort"" rel=""noreferrer"">here</a>.</p>
","979289"
"How to manage a redirect request after a jQuery Ajax call","673530","","<p>I'm using <code>$.post()</code> to call a servlet using Ajax and then using the resulting HTML fragment to replace a <code>div</code> element in the user's current page. However, if the session times out, the server sends a redirect directive to send the user to the login page. In this case, jQuery is replacing the <code>div</code> element with the contents of the login page, forcing the user's eyes to witness a rare scene indeed. </p>

<p>How can I manage a redirect directive from an Ajax call with jQuery 1.2.6?</p>
","<p>The solution that was eventually implemented was to use a wrapper for the callback function of the Ajax call and in this wrapper check for the existence of a specific element on the returned HTML chunk. If the element was found then the wrapper executed a redirection. If not, the wrapper forwarded the call to the actual callback function. </p>

<p>For example, our wrapper function was something like:</p>

<pre><code>function cbWrapper(data, funct){
    if($(""#myForm"", data).length &gt; 0)
        top.location.href=""login.htm"";//redirection
    else
        funct(data);
}
</code></pre>

<p>Then, when making the Ajax call we used something like:</p>

<pre><code>$.post(""myAjaxHandler"", 
       {
        param1: foo,
        param2: bar
       },
       function(data){
           cbWrapper(data, myActualCB);
       }, 
       ""html""
);
</code></pre>

<p>This worked for us because all Ajax calls always returned HTML inside a DIV element that we use to replace a piece of the page. Also, we only needed to redirect to the login page.</p>
","484541"
"How to get current formatted date dd/mm/yyyy in Javascript and append it to an input","673132","","<p>I would like to add a current date to a hidden HTML tag so that it can be sent to the server:</p>

<pre><code>&lt;input type=""hidden"" id=""DATE"" name=""DATE"" value=""WOULD_LIKE_TO_ADD_DATE_HERE""&gt;
</code></pre>

<p>How can I add a formatted date to the VALUE attribute?</p>
","<p>I hope this is what you want: </p>

<pre><code>var today = new Date();
var dd = today.getDate();
var mm = today.getMonth()+1; //January is 0!

var yyyy = today.getFullYear();
if(dd&lt;10){
    dd='0'+dd;
} 
if(mm&lt;10){
    mm='0'+mm;
} 
var today = dd+'/'+mm+'/'+yyyy;
document.getElementById(""DATE"").value = today;
</code></pre>

<p><a href=""https://stackoverflow.com/questions/1531093/how-to-get-current-date-in-javascript"">How do I get the current date in JavaScript?</a></p>
","12409344"
"Generate random string/characters in JavaScript","671888","","<p>I want a 5 character string composed of characters picked randomly from the set <code>[a-zA-Z0-9]</code>.</p>

<p>What's the best way to do this with JavaScript?</p>
","<p>I think this will work for you:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function makeid() {
  var text = """";
  var possible = ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"";

  for (var i = 0; i &lt; 5; i++)
    text += possible.charAt(Math.floor(Math.random() * possible.length));

  return text;
}

console.log(makeid());</code></pre>
</div>
</div>
</p>
","1349426"
"Converting a JS object to an array using jQuery","669089","","<p>My application creates a JavaScript object, like the following:</p>

<pre><code>myObj= {1:[Array-Data], 2:[Array-Data]}
</code></pre>

<p>But I need this object as an array. </p>

<pre><code>array[1]:[Array-Data]
array[2]:[Array-Data]
</code></pre>

<p>So I tried to convert this object to an array by iterating with <code>$.each</code> through the object and adding the element to an array:</p>

<pre><code>x=[]
$.each(myObj, function(i,n) {
    x.push(n);});
</code></pre>

<p>Is there an better way to convert an object to an array or maybe a function?</p>
","<pre><code>var myObj = {
    1: [1, 2, 3],
    2: [4, 5, 6]
};

var array = $.map(myObj, function(value, index) {
    return [value];
});


console.log(array);
</code></pre>

<p>Output:</p>

<pre><code>[[1, 2, 3], [4, 5, 6]]
</code></pre>
","6857636"
"Stop setInterval call in JavaScript","660282","","<p>I am using <code>setInterval(fname, 10000);</code> to call a function every 10 seconds in JavaScript. Is it possible to stop calling it on some event? </p>

<p>I want the user to be able to stop the repeated refresh of data.</p>
","<p><code>setInterval()</code> returns an interval ID, which you can pass to <code>clearInterval()</code>:</p>

<pre><code>var refreshIntervalId = setInterval(fname, 10000);

/* later */
clearInterval(refreshIntervalId);
</code></pre>

<p>See the docs for <a href=""https://developer.mozilla.org/en/DOM/window.setInterval"" rel=""noreferrer""><code>setInterval()</code></a> and <a href=""https://developer.mozilla.org/en/DOM/window.clearInterval"" rel=""noreferrer""><code>clearInterval()</code></a>.</p>
","109091"
"XmlHttpRequest error: Origin null is not allowed by Access-Control-Allow-Origin","660160","","<p>I'm developing a page that pulls images from Flickr and Panoramio via jQuery's AJAX support.</p>

<p>The Flickr side is working fine, but when I try to <code>$.get(url, callback)</code> from Panoramio, I see an error in Chrome's console:</p>

<blockquote>
  <p>XMLHttpRequest cannot load <a href=""http://www.panoramio.com/wapi/data/get_photos?v=1&amp;key=dummykey&amp;tag=test&amp;offset=0&amp;length=20&amp;callback=processImages&amp;minx=-30&amp;miny=0&amp;maxx=0&amp;maxy=150"" rel=""noreferrer"">http://www.panoramio.com/wapi/data/get_photos?v=1&amp;key=dummykey&amp;tag=test&amp;offset=0&amp;length=20&amp;callback=processImages&amp;minx=-30&amp;miny=0&amp;maxx=0&amp;maxy=150</a>. Origin null is not allowed by Access-Control-Allow-Origin.</p>
</blockquote>

<p>If I query that URL from a browser directly it works fine.  What is going on, and can I get around this?  Am I composing my query incorrectly, or is this something that Panoramio does to hinder what I'm trying to do?</p>

<p>Google didn't turn up any useful matches on the <a href=""http://www.google.co.uk/search?q=%22Origin+null+is+not+allowed+by+Access-Control-Allow-Origin%22"" rel=""noreferrer"">error message</a>.</p>

<p><strong>EDIT</strong></p>

<p>Here's some sample code that shows the problem:</p>

<pre><code>$().ready(function () {
  var url = 'http://www.panoramio.com/wapi/data/get_photos?v=1&amp;key=dummykey&amp;tag=test&amp;offset=0&amp;length=20&amp;callback=processImages&amp;minx=-30&amp;miny=0&amp;maxx=0&amp;maxy=150';

  $.get(url, function (jsonp) {
    var processImages = function (data) {
      alert('ok');
    };

    eval(jsonp);
  });
});
</code></pre>

<p>You can <a href=""http://jsfiddle.net/ZfvKm/"" rel=""noreferrer"">run the example online</a>.</p>

<p><strong>EDIT 2</strong></p>

<p>Thanks to Darin for his help with this.  <strong>THE ABOVE CODE IS WRONG.</strong>  Use this instead:</p>

<pre><code>$().ready(function () {
  var url = 'http://www.panoramio.com/wapi/data/get_photos?v=1&amp;key=dummykey&amp;tag=test&amp;offset=0&amp;length=20&amp;minx=-30&amp;miny=0&amp;maxx=0&amp;maxy=150&amp;callback=?';

  $.get(url, function (data) {
    // can use 'data' in here...
  });
});
</code></pre>
","<p>For the record, as far as I can tell, you had two problems:</p>

<ol>
<li><p>You weren't passing a ""jsonp"" type specifier to your <code>$.get</code>, so it was using an ordinary XMLHttpRequest. However, your browser supported CORS (Cross-Origin Resource Sharing) to allow cross-domain XMLHttpRequest if the server OKed it. That's where the <code>Access-Control-Allow-Origin</code> header came in.</p></li>
<li><p>I believe you mentioned you were running it from a file:// URL. There are two ways for CORS headers to signal that a cross-domain XHR is OK. One is to send <code>Access-Control-Allow-Origin: *</code> (which, if you were reaching Flickr via <code>$.get</code>, they must have been doing) while the other was to echo back the contents of the <code>Origin</code> header. However, <code>file://</code> URLs produce a null <code>Origin</code> which can't be authorized via echo-back.</p></li>
</ol>

<p>The first was solved in a roundabout way by Darin's suggestion to use <code>$.getJSON</code>. It does a little magic to change the request type from its default of ""json"" to ""jsonp"" if it sees the substring <code>callback=?</code> in the URL.</p>

<p>That solved the second by no longer trying to perform a CORS request from a <code>file://</code> URL.</p>

<p>To clarify for other people, here are the simple troubleshooting instructions:</p>

<ol>
<li>If you're trying to use JSONP, make sure one of the following is the case:

<ul>
<li>You're using <code>$.get</code> and set <a href=""http://api.jquery.com/jQuery.get/"" rel=""noreferrer""><code>dataType</code></a> to <code>jsonp</code>.</li>
<li>You're using <code>$.getJSON</code> and included <code>callback=?</code> in the URL.</li>
</ul></li>
<li>If you're trying to do a cross-domain XMLHttpRequest via CORS...

<ol>
<li>Make sure you're testing via <code>http://</code>. Scripts running via <code>file://</code> have limited support for CORS.</li>
<li>Make sure the browser <a href=""http://caniuse.com/cors"" rel=""noreferrer"">actually supports CORS</a>. (Opera and Internet Explorer are late to the party)</li>
</ol></li>
</ol>
","3744697"
"How do I call a JavaScript function on page load?","659785","","<p>Traditionally, to call a JavaScript function once the page has loaded, you'd add an <code>onload</code> attribute to the body containing a bit of JavaScript (usually only calling a function):</p>

<pre><code>&lt;body onload=""foo()""&gt;
</code></pre>

<p>When the page has loaded, I want to run some JavaScript code to dynamically populate portions of the page with data from the server. I can't use the <code>onload</code> attribute since I'm using JSP fragments, which have no <code>body</code> element I can add an attribute to.</p>

<p>Is there any other way to call a JavaScript function on load? I'd rather not use jQuery as I'm not very familiar with it.</p>
","<p>If you want the onload method to take parameters, you can do something similar to this:</p>

<pre><code>window.onload = function() {
  yourFunction(param1, param2);
};
</code></pre>

<p>This binds onload to an anonymous function, that when invoked, will run your desired function, with whatever parameters you give it. And, of course, you can run more than one function from inside the anonymous function.</p>
","3842895"
"window.onload vs $(document).ready()","659737","","<p>What are the differences between JavaScript's <a href=""https://developer.mozilla.org/en/docs/Web/API/GlobalEventHandlers/onload"" rel=""noreferrer""><code>window.onload</code></a> and jQuery's <a href=""https://api.jquery.com/ready/"" rel=""noreferrer""><code>$(document).ready()</code></a> method?</p>
","<p>The <code>ready</code> event occurs after the HTML document has been loaded, while the <code>onload</code> event occurs later, when all content (e.g. images) also has been loaded.</p>

<p>The <code>onload</code> event is a standard event in the DOM, while the <code>ready</code> event is specific to jQuery. The purpose of the <code>ready</code> event is that it should occur as early as possible after the document has loaded, so that code that adds functionality to the elements in the page doesn't have to wait for all content to load.</p>
","3698214"
"Preview an image before it is uploaded","653785","","<p>I want to be able to preview a file (image) before it is uploaded.  The preview action should be executed all in the browser without using Ajax to upload the image.</p>

<p>How can I do this?</p>
","<p>Please take a look at the sample code below:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function readURL(input) {

  if (input.files &amp;&amp; input.files[0]) {
    var reader = new FileReader();

    reader.onload = function(e) {
      $('#blah').attr('src', e.target.result);
    }

    reader.readAsDataURL(input.files[0]);
  }
}

$(""#imgInp"").change(function() {
  readURL(this);
});</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;
&lt;form id=""form1"" runat=""server""&gt;
  &lt;input type='file' id=""imgInp"" /&gt;
  &lt;img id=""blah"" src=""#"" alt=""your image"" /&gt;
&lt;/form&gt;</code></pre>
</div>
</div>
</p>

<p>Also, you can <a href=""http://jsfiddle.net/LvsYc/"" rel=""noreferrer"">try this sample here</a>.</p>
","4459419"
"What is the preferred syntax for defining enums in JavaScript?","650957","","<p>What is the preferred syntax for defining enums in JavaScript? Something like:</p>

<pre><code>my.namespace.ColorEnum = {
    RED : 0,
    GREEN : 1,
    BLUE : 2
}

// later on

if(currentColor == my.namespace.ColorEnum.RED) {
   // whatever
}
</code></pre>

<p>Or is there a more preferable idiom?</p>
","<p>I can't post comment to THE answer, so I guess I'd bump the thread since it shows up high in Google.</p>

<p>Since 1.8.5 it's possible to seal and freeze the object, so define the above as:</p>

<pre><code>var DaysEnum = Object.freeze({""monday"":1, ""tuesday"":2, ""wednesday"":3, ...})
</code></pre>

<p>or</p>

<pre><code>var DaysEnum = {""monday"":1, ""tuesday"":2, ""wednesday"":3, ...}
Object.freeze(DaysEnum)
</code></pre>

<p>and voila! JS enums ;)</p>

<p>source: <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/freeze"">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/freeze</a></p>

<p>IMHO quotes aren't needed but I kept them for consistency.</p>
","5040502"
"run function when page is loaded","648076","","<p>I want to run a function when the page is loaded, but I don't want to use it in the body tag.</p>

<p>I have a script that runs if I initialise it in the body -like this:</p>

<pre><code>function codeAddress() {
 code.....
}

&lt;body onLoad=""codeAddress()""&gt;
</code></pre>

<p>But I want to run it without the body <code>onLoad=""codeAddress()""</code> and I have tryed a lot of things, eg this:</p>

<pre><code>window.onload = codeAddress;
</code></pre>

<p>but it is not working?</p>

<p>So how do I run it when the page is loaded?</p>
","<p><code>window.onload = codeAddress;</code> should work - <a href=""http://jsfiddle.net/NEfR2/"">here's a demo</a>, and the full code:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Test&lt;/title&gt;
        &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" /&gt;
        &lt;script type=""text/javascript""&gt;
        function codeAddress() {
            alert('ok');
        }
        window.onload = codeAddress;
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
    
    &lt;/body&gt;
&lt;/html&gt;</code></pre>
</div>
</div>
</p>

<hr>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Test&lt;/title&gt;
        &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" /&gt;
        &lt;script type=""text/javascript""&gt;
        function codeAddress() {
            alert('ok');
        }
        
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body onload=""codeAddress();""&gt;
    
    &lt;/body&gt;
&lt;/html&gt;</code></pre>
</div>
</div>
</p>
","4842622"
"How do I convert a float number to a whole number in JavaScript?","647026","","<p>I'd like to convert a float to a whole number in JavaScript. Actually, I'd like to know how to do BOTH of the standard conversions: by truncating and by rounding. And efficiently, not via converting to a string and parsing.</p>
","<pre><code>var intvalue = Math.floor( floatvalue );
var intvalue = Math.ceil( floatvalue ); 
var intvalue = Math.round( floatvalue );

// `Math.trunc` was added in ECMAScript 6
var intvalue = Math.trunc( floatvalue );
</code></pre>

<p><a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Math"" rel=""noreferrer"">Math object reference</a></p>

<hr>

<h3>Examples</h3>

<strong>Positive</strong>

<pre><code>value = 5.5

Math.floor(value) //  5
Math.ceil(value)  //  6
Math.round(value) //  6
Math.trunc(value) //  5
parseInt(value)   //  5
~~value           //  5
value | 0         //  5
value &gt;&gt; 0        //  5
value &gt;&gt;&gt; 0       //  5
value - value % 1 //  5
</code></pre>

<strong>Negative</strong>

<pre><code>value = -5.5

Math.floor(value) // -6
Math.ceil(value)  // -5
Math.round(value) // -5
Math.trunc(value) // -5
parseInt(value)   // -5
value | 0         // -5
~~value           // -5
value &gt;&gt; 0        // -5
value &gt;&gt;&gt; 0       // 4294967291
value - value % 1 // -5
</code></pre>

<strong>Positive - Larger numbers</strong>

<pre><code>value = Number.MAX_SAFE_INTEGER/10 // 900719925474099.1

Math.floor(value) //  900719925474099
Math.ceil(value)  //  900719925474100
Math.round(value) //  900719925474099
Math.trunc(value) //  900719925474099
parseInt(value)   //  900719925474099
value | 0         //  858993459
~~value           //  858993459
value &gt;&gt; 0        //  858993459
value &gt;&gt;&gt; 0       //  858993459
value - value % 1 //  900719925474099
</code></pre>

<strong>Negative - Larger numbers</strong>

<pre><code>value = Number.MAX_SAFE_INTEGER/10 * -1 // -900719925474099.1

Math.floor(value) // -900719925474100
Math.ceil(value)  // -900719925474099
Math.round(value) // -900719925474099
Math.trunc(value) // -900719925474099
parseInt(value)   // -900719925474099
value | 0         // -858993459
~~value           // -858993459
value &gt;&gt; 0        // -858993459
value &gt;&gt;&gt; 0       //  3435973837
value - value % 1 // -900719925474099
</code></pre>
","596503"
"How do I retrieve an HTML element's actual width and height?","642009","","<p>Suppose that I have a <code>&lt;div&gt;</code> that I wish to center in the browser's display (viewport). To do so, I need to calculate the width and height of the <code>&lt;div&gt;</code> element. </p>

<p>What should I use? Please include information on browser compatibility.</p>
","<p>You should use the <code>.offsetWidth</code> and <code>.offsetHeight</code> properties.
Note they belong to the element, not <code>.style</code>.</p>

<p><code>var width = document.getElementById('foo').offsetWidth;</code></p>
","294273"
"How do I iterate over a JSON structure?","641777","","<p>I have the following JSON structure:</p>

<pre><code>[{ ""id"":""10"", ""class"": ""child-of-9"" }, { ""id"": ""11"", ""classd"": ""child-of-10"" }]
</code></pre>

<p>How do I iterate over it using jQuery or JavaScript?</p>
","<p>Taken from <a href=""http://docs.jquery.com/Utilities/jQuery.each"" rel=""noreferrer"">jQuery docs</a>:</p>

<pre><code>var arr = [ ""one"", ""two"", ""three"", ""four"", ""five"" ];
var obj = { one:1, two:2, three:3, four:4, five:5 };

jQuery.each(arr, function() {
  $(""#"" + this).text(""My id is "" + this + ""."");
  return (this != ""four""); // will stop running to skip ""five""
});

jQuery.each(obj, function(i, val) {
  $(""#"" + i).append(document.createTextNode("" - "" + val));
});
</code></pre>
","1078132"
"How can I make a button redirect my page to another page?","640090","","<p>I have been trying the following:</p>

<pre><code>&lt;form action=""/home"" class=""inline""&gt;
    &lt;button class=""float-left submit-button"" &gt;Home&lt;/button&gt;
&lt;/form&gt;
</code></pre>

<p>It seems to work but it goes to the page ""/home?""</p>

<p>Is there a better way for me to make a button inside a form make the page go to a new location?</p>
","<p>Just add an <code>onclick</code> event to the <code>button</code>:</p>

<pre><code>&lt;button onclick=""location.href = 'www.yoursite.com';"" id=""myButton"" class=""float-left submit-button"" &gt;Home&lt;/button&gt;
</code></pre>

<p>But you shouldn't really have it inline like that, instead, put it in a JS block and give the <code>button</code> an ID:</p>

<pre><code>&lt;button id=""myButton"" class=""float-left submit-button"" &gt;Home&lt;/button&gt;

&lt;script type=""text/javascript""&gt;
    document.getElementById(""myButton"").onclick = function () {
        location.href = ""www.yoursite.com"";
    };
&lt;/script&gt;
</code></pre>
","16562671"
"Why is using ""for...in"" with array iteration a bad idea?","639541","","<p>I've been told not to use <code>for...in</code> with arrays in JavaScript. Why not?</p>
","<p>The reason is that one construct:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var a = []; // Create a new empty array.
a[5] = 5;   // Perfectly legal JavaScript that resizes the array.

for (var i = 0; i &lt; a.length; i++) {
    // Iterate over numeric indexes from 0 to 5, as everyone expects.
    console.log(a[i]);
}

/* Will display:
   undefined
   undefined
   undefined
   undefined
   undefined
   5
*/</code></pre>
</div>
</div>
</p>

<p>can sometimes be totally different from the other:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var a = [];
a[5] = 5;
for (var x in a) {
    // Shows only the explicitly set index of ""5"", and ignores 0-4
    console.log(x);
}

/* Will display:
   5
*/</code></pre>
</div>
</div>
</p>

<p>Also consider that <a href=""http://en.wikipedia.org/wiki/JavaScript"" rel=""noreferrer"">JavaScript</a> libraries might do things like this, which will affect any array you create:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>// Somewhere deep in your JavaScript library...
Array.prototype.foo = 1;

// Now you have no idea what the below code will do.
var a = [1, 2, 3, 4, 5];
for (var x in a){
    // Now foo is a part of EVERY array and 
    // will show up here as a value of 'x'.
    console.log(x);
}

/* Will display:
   0
   1
   2
   3
   4
   foo
*/</code></pre>
</div>
</div>
</p>
","500531"
"How to print a number with commas as thousands separators in JavaScript","638940","","<p>I am trying to print an integer in <a href=""http://en.wikipedia.org/wiki/JavaScript"" rel=""noreferrer"">JavaScript</a> with commas as thousands separators. For example, I want to show the number 1234567 as ""1,234,567"". How would I go about doing this? </p>

<p>Here is how I am doing it:</p>

<pre><code>function numberWithCommas(x) {
    x = x.toString();
    var pattern = /(-?\d+)(\d{3})/;
    while (pattern.test(x))
        x = x.replace(pattern, ""$1,$2"");
    return x;
}
</code></pre>

<p>Is there a simpler or more elegant way to do it? It would be nice if it works with floats also, but that is not necessary. It does not need to be locale-specific to decide between periods and commas. </p>
","<p>I used the idea from Kerry's answer, but simplified it since I was just looking for something simple for my specific purpose. Here is what I did:</p>

<pre><code>const numberWithCommas = (x) =&gt; {
  return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, "","");
}
</code></pre>

<p>This is all you really need to know.</p>

<p>@Neils Bom asked how the regex works. My explanation is sort of long. It won't fit in the comments and I don't know where else to put it so I am doing it here. If anyone has any other suggestions for where to put it, please let me know.</p>

<p>The regex uses 2 lookahead assertions: a positive one to look for any point in the string that has a multiple of 3 digits in a row after it, and a negative assertion to make sure that point only has exactly a multiple of 3 digits. The replacement expression puts a comma there.</p>

<p>For example, if you pass it ""123456789.01"", the positive assertion will match every spot to the left of the 7 (since ""789"" is a multiple of 3 digits, ""678"" is a multiple of 3 digits, ""567"", etc.). The negative assertion checks that the multiple of 3 digits does not have any digits after it. ""789"" has a period after it so it is exactly a multiple of 3 digits, so a comma goes there. ""678"" is a multiple of 3 digits but it has a ""9"" after it, so those 3 digits are part of a group of 4, and a comma does not go there. Similarly for ""567"". ""456789"" is 6 digits, which is a multiple of 3, so a comma goes before that. ""345678"" is a multiple of 3, but it has a ""9"" after it, so no comma goes there. And so on. The ""\B"" keeps the regex from putting a comma at the beginning of the string.</p>

<p>@neu-rah mentioned that this function adds commas in undesirable places if there are more than 3 digits after the decimal point. If this is a problem, you can use this function:</p>

<pre><code>const numberWithCommas = (x) =&gt; {
  var parts = x.toString().split(""."");
  parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, "","");
  return parts.join(""."");
}
</code></pre>
","2901298"
"Detecting a mobile browser","637495","","<p>I'm looking for a function which return boolean value if user has mobile browser or not.</p>

<p>I know that I can use <code>navigator.userAgent</code> and write that function by using regex, but user-agents are too various for different platforms. I doubt that match all possible devices would be easy, and I think this problem has been solved before many times so there should be some kind of complete solution for such task.</p>

<p>I was looking at <a href=""http://detectmobilebrowsers.com"">this site</a>, but sadly the script is so cryptic that I have no idea how to use it for my purpose, which is to create a function which return true / false.</p>
","<h2>Using Regex (from <a href=""http://detectmobilebrowsers.com"" rel=""noreferrer"">detectmobilebrowsers.com</a>):</h2>

<p>Here's a function that uses an insanely long and comprehensive regex which returns a true or false value depending on whether or not the user is browsing with a mobile.</p>

<pre><code>window.mobilecheck = function() {
  var check = false;
  (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);
  return check;
};
</code></pre>

<p>For those wishing to include tablets in this test (though arguably, you shouldn't), you can use the following function:</p>

<pre><code>window.mobileAndTabletcheck = function() {
  var check = false;
  (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);
  return check;
};
</code></pre>

<hr>

<h2>The Original Answer</h2>

<p>You can do this by simply running through a list of devices and checking if the useragent matches anything like so:</p>

<pre><code>function detectmob() { 
 if( navigator.userAgent.match(/Android/i)
 || navigator.userAgent.match(/webOS/i)
 || navigator.userAgent.match(/iPhone/i)
 || navigator.userAgent.match(/iPad/i)
 || navigator.userAgent.match(/iPod/i)
 || navigator.userAgent.match(/BlackBerry/i)
 || navigator.userAgent.match(/Windows Phone/i)
 ){
    return true;
  }
 else {
    return false;
  }
}
</code></pre>

<p>However since you believe that this method is unreliable, You could assume that any device that had a resolution of 800x600 or less was a mobile device too, narrowing your target even more (although these days many mobile devices have much greater resolutions than this)</p>

<p>i.e </p>

<pre><code>function detectmob() {
   if(window.innerWidth &lt;= 800 &amp;&amp; window.innerHeight &lt;= 600) {
     return true;
   } else {
     return false;
   }
}
</code></pre>

<p><strong>Reference:</strong> </p>

<ul>
<li><a href=""http://www.quirksmode.org/js/detect.html"" rel=""noreferrer"">Detecting Browser and Devices with javascript</a></li>
</ul>
","11381730"
"How to merge two arrays in JavaScript and de-duplicate items","633780","","<p>I have two JavaScript arrays:</p>

<pre><code>var array1 = [""Vijendra"",""Singh""];
var array2 = [""Singh"", ""Shakya""];
</code></pre>

<p>I want the output to be:</p>

<pre><code>var array3 = [""Vijendra"",""Singh"",""Shakya""];
</code></pre>

<p>The output array should have repeated words removed.</p>

<p>How do I merge two arrays in JavaScript so that I get only the unique items from each array in the same order they were inserted into the original arrays?</p>
","<p>To just merge the arrays (without removing duplicates) use <code>Array.concat</code>:</p>

<pre><code>var array1 = [""Vijendra"",""Singh""];
var array2 = [""Singh"", ""Shakya""];

var array3 = array1.concat(array2); // Merges both arrays
// [ 'Vijendra', 'Singh', 'Singh', 'Shakya' ]
</code></pre>

<p>Since there is no 'built in' way to remove duplicates (<a href=""http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf"" rel=""noreferrer"">ECMA-262</a> actually has <code>Array.forEach</code> which would be great for this), we have to do it manually:</p>

<pre><code>Array.prototype.unique = function() {
    var a = this.concat();
    for(var i=0; i&lt;a.length; ++i) {
        for(var j=i+1; j&lt;a.length; ++j) {
            if(a[i] === a[j])
                a.splice(j--, 1);
        }
    }

    return a;
};
</code></pre>

<p>Then, to use it:</p>

<pre><code>var array1 = [""Vijendra"",""Singh""];
var array2 = [""Singh"", ""Shakya""];
// Merges both arrays and gets unique items
var array3 = array1.concat(array2).unique(); 
</code></pre>

<p>This will also preserve the order of the arrays (i.e, no sorting needed).</p>

<p>Since many people are annoyed about prototype augmentation of <code>Array.prototype</code> and <code>for in</code> loops, here is a less invasive way to use it:</p>

<pre><code>function arrayUnique(array) {
    var a = array.concat();
    for(var i=0; i&lt;a.length; ++i) {
        for(var j=i+1; j&lt;a.length; ++j) {
            if(a[i] === a[j])
                a.splice(j--, 1);
        }
    }

    return a;
}

var array1 = [""Vijendra"",""Singh""];
var array2 = [""Singh"", ""Shakya""];
    // Merges both arrays and gets unique items
var array3 = arrayUnique(array1.concat(array2));
</code></pre>

<p>For those who are fortunate enough to work with browsers where ES5 is available, you can use <code>Object.defineProperty</code> like this:</p>

<pre><code>Object.defineProperty(Array.prototype, 'unique', {
    enumerable: false,
    configurable: false,
    writable: false,
    value: function() {
        var a = this.concat();
        for(var i=0; i&lt;a.length; ++i) {
            for(var j=i+1; j&lt;a.length; ++j) {
                if(a[i] === a[j])
                    a.splice(j--, 1);
            }
        }

        return a;
    }
});
</code></pre>
","1584377"
"Is there an ""exists"" function for jQuery?","633293","","<p>How can I check the existence of an element in jQuery?</p>

<p>The current code that I have is this:</p>

<pre><code>if ($(selector).length &gt; 0) {
    // Do something
}
</code></pre>

<p>Is there a more elegant way to approach this? Perhaps a plugin or a function?</p>
","<p>In JavaScript, everything is 'truthy' or 'falsy', and for numbers <code>0</code> (and NaN) means <code>false</code>, everything else <code>true</code>. So you could write:</p>

<pre><code>if ($(selector).length)
</code></pre>

<p>You don't need that <code>&gt;0</code> part.</p>
","587408"
"Google Maps JS API v3 - Simple Multiple Marker Example","627211","","<p>Fairly new to the Google Maps Api. I've got an array of data that I want to cycle through and plot on a map. Seems fairly simple, but all the multi-marker tutorials I have found are quite complex.</p>

<p>Let's use the data array from google's site for an example:</p>

<pre><code>var locations = [
  ['Bondi Beach', -33.890542, 151.274856, 4],
  ['Coogee Beach', -33.923036, 151.259052, 5],
  ['Cronulla Beach', -34.028249, 151.157507, 3],
  ['Manly Beach', -33.80010128657071, 151.28747820854187, 2],
  ['Maroubra Beach', -33.950198, 151.259302, 1]
];
</code></pre>

<p>I simply want to plot all of these points and have an infoWindow pop up when clicked to display the name.</p>
","<p>This is the simplest I could reduce it to:</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt; 
&lt;head&gt; 
  &lt;meta http-equiv=""content-type"" content=""text/html; charset=UTF-8"" /&gt; 
  &lt;title&gt;Google Maps Multiple Markers&lt;/title&gt; 
  &lt;script src=""http://maps.google.com/maps/api/js?sensor=false"" 
          type=""text/javascript""&gt;&lt;/script&gt;
&lt;/head&gt; 
&lt;body&gt;
  &lt;div id=""map"" style=""width: 500px; height: 400px;""&gt;&lt;/div&gt;

  &lt;script type=""text/javascript""&gt;
    var locations = [
      ['Bondi Beach', -33.890542, 151.274856, 4],
      ['Coogee Beach', -33.923036, 151.259052, 5],
      ['Cronulla Beach', -34.028249, 151.157507, 3],
      ['Manly Beach', -33.80010128657071, 151.28747820854187, 2],
      ['Maroubra Beach', -33.950198, 151.259302, 1]
    ];

    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 10,
      center: new google.maps.LatLng(-33.92, 151.25),
      mapTypeId: google.maps.MapTypeId.ROADMAP
    });

    var infowindow = new google.maps.InfoWindow();

    var marker, i;

    for (i = 0; i &lt; locations.length; i++) {  
      marker = new google.maps.Marker({
        position: new google.maps.LatLng(locations[i][1], locations[i][2]),
        map: map
      });

      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          infowindow.setContent(locations[i][0]);
          infowindow.open(map, marker);
        }
      })(marker, i));
    }
  &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>Screenshot:</p>

<p><img src=""https://i.imgur.com/mM82YXg.png"" alt=""Google Maps Multiple Markers""></p>

<p>There is some closure magic happening when passing the callback argument to the <code>addListener</code> method. This can be quite a tricky topic, if you are not familiar with how closures work. I would suggest checking out the following Mozilla article for a brief introduction, if it is the case:</p>

<ul>
<li><a href=""https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Working_with_Closures"" rel=""noreferrer"">Mozilla Dev Center: Working with Closures</a></li>
</ul>
","3059129"
"How do I check if an object has a property in JavaScript?","625145","","<p>How do I check if an object has a property in JavaScript?</p>

<p>Consider:</p>

<pre><code>x = {'key': 1};
if ( x.hasOwnProperty('key') ) {
    //Do this
}
</code></pre>

<p>Is that the best way to do it?</p>
","<p>I'm really confused by the answers that have been given - most of them are just outright incorrect. Of course you can have object properties that have undefined, null, or false values. So simply reducing the property check to <code>typeof this[property]</code> or, even worse, <code>x.key</code> will give you completely misleading results.</p>

<p>It depends on what you're looking for. If you want to know if an object physically contains a property (and it is not coming from somewhere up on the prototype chain) then <code>object.hasOwnProperty</code> is the way to go. All modern browsers support it. (It was missing in older versions of Safari - 2.0.1 and older - but those versions of the browser are rarely used any more.)</p>

<p>If what you're looking for is if an object has a property on it that is iterable (when you iterate over the properties of the object, it will appear) then doing: <code>prop in object</code> will give you your desired effect.</p>

<p>Since using <code>hasOwnProperty</code> is probably what you want, and considering that you may want a fallback method, I present to you the following solution:</p>

<pre><code>var obj = {
    a: undefined,
    b: null,
    c: false
};

// a, b, c all found
for ( var prop in obj ) {
    document.writeln( ""Object1: "" + prop );
}

function Class(){
    this.a = undefined;
    this.b = null;
    this.c = false;
}

Class.prototype = {
    a: undefined,
    b: true,
    c: true,
    d: true,
    e: true
};

var obj2 = new Class();

// a, b, c, d, e found
for ( var prop in obj2 ) {
    document.writeln( ""Object2: "" + prop );
}

function hasOwnProperty(obj, prop) {
    var proto = obj.__proto__ || obj.constructor.prototype;
    return (prop in obj) &amp;&amp;
        (!(prop in proto) || proto[prop] !== obj[prop]);
}

if ( Object.prototype.hasOwnProperty ) {
    var hasOwnProperty = function(obj, prop) {
        return obj.hasOwnProperty(prop);
    }
}

// a, b, c found in modern browsers
// b, c found in Safari 2.0.1 and older
for ( var prop in obj2 ) {
    if ( hasOwnProperty(obj2, prop) ) {
        document.writeln( ""Object2 w/ hasOwn: "" + prop );
    }
}
</code></pre>

<p>The above is a working, cross-browser, solution to <code>hasOwnProperty</code>, with one caveat: It is unable to distinguish between cases where an identical property is on the prototype and on the instance - it just assumes that it's coming from the prototype. You could shift it to be more lenient or strict, based upon your situation, but at the very least this should be more helpful.</p>
","136411"
"How do I programmatically set the value of a select box element using JavaScript?","622333","","<p>I have the following HTML <code>&lt;select&gt;</code> element:</p>

<pre><code>&lt;select id=""leaveCode"" name=""leaveCode""&gt;
  &lt;option value=""10""&gt;Annual Leave&lt;/option&gt;
  &lt;option value=""11""&gt;Medical Leave&lt;/option&gt;
  &lt;option value=""14""&gt;Long Service&lt;/option&gt;
  &lt;option value=""17""&gt;Leave Without Pay&lt;/option&gt;
&lt;/select&gt;
</code></pre>

<p>Using a JavaScript function with the <code>leaveCode</code> number as a parameter, how do I select the appropriate option in the list?</p>
","<pre><code>function SelectElement(valueToSelect)
{    
    var element = document.getElementById('leaveCode');
    element.value = valueToSelect;
}
</code></pre>
","78945"
"Get String in YYYYMMDD format from JS date object?","620314","","<p>I'm trying to use JS to turn a <code>date object</code> into a string in <code>YYYYMMDD</code> format.  Is there an easier way than concatenating <code>Date.getYear()</code>, <code>Date.getMonth()</code>, and <code>Date.getDay()</code>?</p>
","<p>Altered piece of code I often use:</p>

<pre><code>Date.prototype.yyyymmdd = function() {
  var mm = this.getMonth() + 1; // getMonth() is zero-based
  var dd = this.getDate();

  return [this.getFullYear(),
          (mm&gt;9 ? '' : '0') + mm,
          (dd&gt;9 ? '' : '0') + dd
         ].join('');
};

var date = new Date();
date.yyyymmdd();
</code></pre>
","3067896"
"How do I split a string, breaking at a particular character?","619186","","<p>I have this string</p>

<pre><code>'john smith~123 Street~Apt 4~New York~NY~12345'
</code></pre>

<p>Using JavaScript, what is the fastest way to parse this into</p>

<pre><code>var name = ""john smith"";
var street= ""123 Street"";
//etc...
</code></pre>
","<p>With JavaScript’s <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split"" rel=""noreferrer""><code>String.prototype.split</code></a> function:</p>

<pre><code>var input = 'john smith~123 Street~Apt 4~New York~NY~12345';

var fields = input.split('~');

var name = fields[0];
var street = fields[1];
// etc.
</code></pre>
","96452"
"jQuery checkbox checked state changed event","618554","","<p>I want an event to fire client side when a checkbox is checked / unchecked:</p>

<pre><code>$('.checkbox').click(function() {
  if ($(this).is(':checked')) {
    // Do stuff
  }
});
</code></pre>

<p>Basically I want it to happen for every checkbox on the page. Is this method of firing on the click and checking the state ok?</p>

<p>I'm thinking there must be a cleaner jQuery way. Anyone know a solution?</p>
","<p>Bind to the <code>change</code> event instead of <code>click</code>. However, you will probably still need to check whether or not the checkbox is checked:</p>

<pre><code>$("".checkbox"").change(function() {
    if(this.checked) {
        //Do stuff
    }
});
</code></pre>

<p><strike>The main benefit of binding to the <code>change</code> event over the <code>click</code> event is that not all clicks on a checkbox will cause it to change state. If you only want to capture events that cause the checkbox to change state, you want the aptly-named <code>change</code> event.</strike> <em>Redacted in comments</em></p>

<p>Also note that I've used <code>this.checked</code> instead of wrapping the element in a jQuery object and using jQuery methods, simply because it's shorter and faster to access the property of the DOM element directly.</p>

<p><strong>Edit</strong> (see comments)</p>

<p>To get all checkboxes you have a couple of options. You can use the <a href=""http://api.jquery.com/checkbox-selector/"" rel=""noreferrer""><code>:checkbox</code></a> pseudo-selector:</p>

<pre><code>$("":checkbox"")
</code></pre>

<p>Or you could use an <a href=""http://api.jquery.com/attribute-equals-selector/"" rel=""noreferrer"">attribute equals</a> selector:</p>

<pre><code>$(""input[type='checkbox']"")
</code></pre>
","8423235"
"What's the difference between using ""let"" and ""var"" to declare a variable?","616159","","<p>ECMAScript 6 introduced <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let"" rel=""noreferrer"">the <code>let</code> statement</a>. I've heard it described as a ""local"" variable, but I'm still not quite sure how it behaves differently than the <code>var</code> keyword.</p>

<p>What are the differences? When should <code>let</code> be used over <code>var</code>?</p>
","<p>The difference is scoping. <code>var</code> is scoped to the nearest function block and <code>let</code> is scoped to the nearest <em>enclosing</em> block, which can be smaller than a function block. Both are global if outside any block.</p>

<p>Also, variables declared with <code>let</code> are not accessible before they are declared in their enclosing block. As seen in the demo, this will throw a ReferenceError exception.</p>

<p><strong><a href=""http://jsfiddle.net/tcCp5/182/"" rel=""noreferrer"">Demo</a>:</strong> </p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var html = '';

write('#### global ####\n');
write('globalVar: ' + globalVar); //undefined, but visible

try {
  write('globalLet: ' + globalLet); //undefined, *not* visible
} catch (exception) {
  write('globalLet: exception');
}

write('\nset variables');

var globalVar = 'globalVar';
let globalLet = 'globalLet';

write('\nglobalVar: ' + globalVar);
write('globalLet: ' + globalLet);

function functionScoped() {
  write('\n#### function ####');
  write('\nfunctionVar: ' + functionVar); //undefined, but visible

  try {
    write('functionLet: ' + functionLet); //undefined, *not* visible
  } catch (exception) {
    write('functionLet: exception');
  }

  write('\nset variables');

  var functionVar = 'functionVar';
  let functionLet = 'functionLet';

  write('\nfunctionVar: ' + functionVar);
  write('functionLet: ' + functionLet);
}

function blockScoped() {
  write('\n#### block ####');
  write('\nblockVar: ' + blockVar); //undefined, but visible

  try {
    write('blockLet: ' + blockLet); //undefined, *not* visible
  } catch (exception) {
    write('functionLet: exception');
  }

  for (var blockVar = 'blockVar', blockIndex = 0; blockIndex &lt; 1; blockIndex++) {
    write('\nblockVar: ' + blockVar); // visible here and whole function
  };

  for (let blockLet = 'blockLet', letIndex = 0; letIndex &lt; 1; letIndex++) {
    write('blockLet: ' + blockLet); // visible only here
  };

  write('\nblockVar: ' + blockVar);

  try {
    write('blockLet: ' + blockLet); //undefined, *not* visible
  } catch (exception) {
    write('functionLet: exception');
  }
}

function write(line) {
  html += (line ? line : '') + '&lt;br /&gt;';
}

functionScoped();
blockScoped();

document.getElementById('results').innerHTML = html;</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;pre id=""results""&gt;&lt;/pre&gt;</code></pre>
</div>
</div>
</p>

<h3>Global:</h3>

<p>They are very similar when used like this outside a function block.</p>

<pre class=""lang-js prettyprint-override""><code>let me = 'go';  // globally scoped
var i = 'able'; // globally scoped
</code></pre>

<p>However, global variables defined with <code>let</code> will not be added as properties on the global <code>window</code> object like those defined with <code>var</code>.</p>

<pre class=""lang-js prettyprint-override""><code>console.log(window.me); // undefined
console.log(window.i); // 'able'
</code></pre>

<h3>Function:</h3>

<p>They are identical when used like this in a function block.</p>

<pre class=""lang-js prettyprint-override""><code>function ingWithinEstablishedParameters() {
    let terOfRecommendation = 'awesome worker!'; //function block scoped
    var sityCheerleading = 'go!'; //function block scoped
}
</code></pre>

<h3>Block:</h3>

<p>Here is the difference. <code>let</code> is only visible in the <code>for()</code> loop and <code>var</code> is visible to the whole function.</p>

<pre class=""lang-js prettyprint-override""><code>function allyIlliterate() {
    //tuce is *not* visible out here

    for( let tuce = 0; tuce &lt; 5; tuce++ ) {
        //tuce is only visible in here (and in the for() parentheses)
        //and there is a separate tuce variable for each iteration of the loop
    }

    //tuce is *not* visible out here
}

function byE40() {
    //nish *is* visible out here

    for( var nish = 0; nish &lt; 5; nish++ ) {
        //nish is visible to the whole function
    }

    //nish *is* visible out here
}
</code></pre>

<h3>Redeclaration:</h3>

<p>Assuming strict mode, <code>var</code> will let you re-declare the same variable in the same scope. On the other hand, <code>let</code> will not:</p>

<pre class=""lang-js prettyprint-override""><code>'use strict';
let me = 'foo';
let me = 'bar'; // SyntaxError: Identifier 'me' has already been declared
</code></pre>

<pre class=""lang-js prettyprint-override""><code>'use strict';
var me = 'foo';
var me = 'bar'; // No problem, `me` is replaced.
</code></pre>
","11444416"
"jQuery get textarea text","615097","","<p>Recently I have started playing with jQuery, and have been following a couple of tutorials. Now I feel slightly competent with using it (it's pretty easy), and I thought it would be cool if I were able to make a 'console' on my webpage (as in, you press the ` key like you do in <a href=""http://en.wiktionary.org/wiki/first-person_shooter"" rel=""noreferrer"">FPS</a> games, etc.), and then have it Ajax itself back to the server in-order to do stuff.</p>

<p>I originally thought the best way would be to just get the text inside the textarea, and then split it, or should I use the keyup event, convert the keycode returned to an ASCII character, append the character to a string and send the string to the server (then empty the string).</p>

<p>I couldn't find any information on getting text from a textarea, all I got was keyup information. Also, how can I convert the keycode returned to an ASCII character?</p>
","<p>Why would you want to convert key strokes to text? Add a button that sends the text inside the textarea to the server when clicked. You can get the text using the value attribute as the poster before has pointed out, or using jQuery's API:</p>

<pre><code>$('input#mybutton').click(function() {
    var text = $('textarea#mytextarea').val();
    //send to server and process response
});
</code></pre>
","144836"
"How to detect pressing Enter on keyboard using jQuery?","613777","","<p>I would like to detect whether the user has pressed <code>Enter</code> using jQuery.</p>

<p>How is this possible? Does it require a plugin?</p>

<p>EDIT: It looks like I need to use the <a href=""http://docs.jquery.com/Events/keypress"" rel=""noreferrer""><code>keypress()</code></a> method. </p>

<p>I wanted to know if anyone knows if there are browser issues with that command - like are there any browser compatibility issues I should know about?</p>
","<p>The whole point of jQuery is that you don't have to worry about browser differences. I am pretty sure you can safely go with <kbd>enter</kbd> being 13 in all browsers. So with that in mind, you can do this:</p>

<pre><code>$(document).keypress(function(e) {
    if(e.which == 13) {
        alert('You pressed enter!');
    }
});
</code></pre>
","979686"
"Format number to always show 2 decimal places","607488","","<p>I would like to format my numbers to always display 2 decimal places, rounding where applicable.</p>

<p>Examples:</p>

<pre><code>number     display
------     -------
1          1.00
1.341      1.34
1.345      1.35
</code></pre>

<p>I have been using this: </p>

<pre><code>parseFloat(num).toFixed(2);
</code></pre>

<p>But it's displaying <code>1</code> as <code>1</code>, rather than <code>1.00</code>.</p>
","<p>This works fine in FF4:</p>

<p><strong><a href=""http://jsfiddle.net/FQTqk/7/"" rel=""noreferrer"">Live Demo</a></strong></p>

<pre><code>parseFloat(Math.round(num3 * 100) / 100).toFixed(2);
</code></pre>

<p>Note that it will <strong>round</strong> to 2 decimal places, so the input <code>1.346</code> will return <code>1.35</code>.</p>
","6134070"
"How to get text box value in JavaScript","606352","","<p>I am trying to use JavaScript to get the value from an HTML text box but value is not coming after white space </p>

<p>For example:</p>

<pre><code>&lt;input type=""text"" name=""txtJob"" value=""software engineer""&gt;
</code></pre>

<p>I only get: ""software"" from the above. I am using a script like this:</p>

<pre><code>var jobValue = document.getElementById('txtJob').value
</code></pre>

<p>How do I get the full value: ""software engineer""?</p>
","<p>+1 Gumbo: ‘id’ is the easiest way to access page elements. IE (pre version 8) will return things with a matching ‘name’ if it can't find anything with the given ID, but this is a bug.</p>

<blockquote>
  <p>i am getting only ""software"".</p>
</blockquote>

<p>id-vs-name won't affect this; I suspect what's happened is that (contrary to the example code) you've forgotten to quote your ‘value’ attribute:</p>

<pre><code>&lt;input type=""text"" name=""txtJob"" value=software engineer&gt;
</code></pre>
","764711"
"JavaScript hide/show element","603167","","<p>How could I hide the 'Edit'-link after I press it? and also can I hide the ""lorem ipsum"" text when I press edit?</p>

<pre><code>&lt;script type=""text/javascript""&gt;
function showStuff(id) {
    document.getElementById(id).style.display = 'block';
}
&lt;/script&gt;


&lt;td class=""post""&gt;

&lt;a href=""#"" onclick=""showStuff('answer1'); return false;""&gt;Edit&lt;/a&gt;
&lt;span id=""answer1"" style=""display: none;""&gt;
&lt;textarea rows=""10"" cols=""115""&gt;&lt;/textarea&gt;
&lt;/span&gt;

Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum 
&lt;/td&gt;
</code></pre>
","<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function showStuff(id, text, btn) {
    document.getElementById(id).style.display = 'block';
    // hide the lorem ipsum text
    document.getElementById(text).style.display = 'none';
    // hide the link
    btn.style.display = 'none';
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;td class=""post""&gt;

&lt;a href=""#"" onclick=""showStuff('answer1', 'text1', this); return false;""&gt;Edit&lt;/a&gt;
&lt;span id=""answer1"" style=""display: none;""&gt;
&lt;textarea rows=""10"" cols=""115""&gt;&lt;/textarea&gt;
&lt;/span&gt;

&lt;span id=""text1""&gt;Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum&lt;/span&gt;
&lt;/td&gt;</code></pre>
</div>
</div>
</p>
","6243000"
"How to clear the canvas for redrawing","603042","","<p>After experimenting with composite operations and drawing images on the canvas I'm now trying to remove images and compositing. How do I do this?</p>

<p>I need to clear the canvas for redrawing other images; this can go on for a while so I don't think drawing a new rectangle every time will be the most efficient option.</p>
","<pre><code>context.clearRect(0, 0, canvas.width, canvas.height);
</code></pre>
","2142549"
"How to trigger a file download when clicking an HTML button or JavaScript","602882","","<p>This is crazy but I don't know how to do this, and because of how common the words are, it's hard to find what I need on search engines. I'm thinking this should be an easy one to answer.</p>

<p>I want a simple file download, that would do the same as this:</p>

<pre><code>&lt;a href=""file.doc""&gt;Download!&lt;/a&gt;
</code></pre>

<p>But I want to use an HTML button, e.g. either of these:</p>

<pre><code>&lt;input type=""button"" value=""Download!""&gt;
&lt;button&gt;Download!&lt;/button&gt;
</code></pre>

<p>Likewise, is it possible to trigger a simple download via JavaScript?</p>

<pre><code>$(""#fileRequest"").click(function(){ /* code to download? */ });
</code></pre>

<p>I'm definitely <em>not</em> looking for a way to create an anchor that looks like a button, use any back-end scripts, or mess with server headers or mime types.</p>
","<p>For the button you can do</p>

<pre><code>&lt;form method=""get"" action=""file.doc""&gt;
   &lt;button type=""submit""&gt;Download!&lt;/button&gt;
&lt;/form&gt;
</code></pre>
","11620761"
"Event binding on dynamically created elements?","602536","","<p>I have a bit of code where I am looping through all the select boxes on a page and binding a <code>.hover</code> event to them to do a bit of twiddling with their width on <code>mouse on/off</code>.</p>

<p>This happens on page ready and works just fine.</p>

<p>The problem I have is that any select boxes I add via Ajax or DOM after the initial loop won't have the event bound.</p>

<p>I have found this plugin (<a href=""http://brandonaaron.net/docs/livequery/#getting-started"" rel=""noreferrer"">jQuery Live Query Plugin</a>), but before I add another 5k to my pages with a plugin, I want to see if anyone knows a way to do this, either with jQuery directly or by another option.</p>
","<p><strong>As of jQuery 1.7</strong> you should use <a href=""https://api.jquery.com/on/#on-events-selector-data-handler"" rel=""noreferrer""><code>jQuery.fn.on</code></a>:</p>

<pre><code>$(staticAncestors).on(eventName, dynamicChild, function() {});
</code></pre>

<hr>

<p><strong>Prior to this</strong>, the recommended approach was to use <a href=""http://api.jquery.com/live"" rel=""noreferrer""><code>live()</code></a>: </p>

<pre><code>$(selector).live( eventName, function(){} );
</code></pre>

<p>However, <code>live()</code> was deprecated in 1.7 in favour of <code>on()</code>, and completely removed in 1.9. The <code>live()</code> signature:</p>

<pre><code>$(selector).live( eventName, function(){} );
</code></pre>

<p>... can be replaced with the following <a href=""http://api.jquery.com/on/"" rel=""noreferrer""><code>on()</code></a> signature:</p>

<pre><code>$(document).on( eventName, selector, function(){} );
</code></pre>

<hr>

<p>For example, if your page was dynamically creating elements with the class name <code>dosomething</code> you would bind the event to a parent which already exists, often <code>document</code>.</p>

<pre><code>$(document).on('mouseover mouseout', '.dosomething', function(){
    // what you want to happen when mouseover and mouseout 
    // occurs on elements that match '.dosomething'
});
</code></pre>

<p>Any parent that exists at the time the event is bound is fine. For example</p>

<pre><code>$('.buttons').on('click', 'button', function(){
    // do something here
});
</code></pre>

<p>would apply to </p>

<pre><code>&lt;div class=""buttons""&gt;
    &lt;!-- &lt;button&gt;s that are generated dynamically and added here --&gt;
&lt;/div&gt;
</code></pre>
","1207393"
"Maximum call stack size exceeded error","602326","","<p>I am using a Direct Web Remoting (DWR) JavaScript library file and am getting an error only in Safari (desktop and iPad)</p>

<p>It says </p>

<blockquote>
  <p>Maximum call stack size exceeded.</p>
</blockquote>

<p>What exactly does this error mean and does it stop processing completely?</p>

<p>Also any fix for <code>Safari</code> browser (Actually on the <code>iPad Safari</code>, it says </p>

<blockquote>
  <p>JS:execution exceeded timeout</p>
</blockquote>

<p>which I am assuming is the same call stack issue)</p>
","<p>It means that somewhere in your code, you are calling a function which in turn calls another function and so forth, until you hit the call stack limit.</p>

<p>This is almost always because of a recursive function with a base case that isn't being met.</p>

<h3>Viewing the stack</h3>

<p>Consider this code...</p>

<pre><code>(function a() {
    a();
})();
</code></pre>

<p>Here is the stack after a handful of calls...</p>

<p><img src=""https://i.stack.imgur.com/aSwnu.png"" alt=""Web Inspector""></p>

<p>As you can see, the call stack grows until it hits a limit: the browser hardcoded stack size or memory exhaustion.</p>

<p>In order to fix it, ensure that your recursive function has a base case which is able to be met...</p>

<pre><code>(function a(x) {
    // The following condition 
    // is the base case.
    if ( ! x) {
        return;
    }
    a(--x);
})(10);
</code></pre>
","6095695"
"How to get browser to navigate to URL in Javascript?","601401","","<p>What is the best (correct, modern, cross-browser, safe) way to get a web browser to navigate to a URL of your choice using Javascript?</p>
","<p>This works in all browsers:</p>

<pre><code>window.location.href = '...';
</code></pre>

<p>If you wanted to change the page without it reflecting in the browser back history, you can do:</p>

<pre><code>window.location.replace('...');
</code></pre>
","1226718"
"How do I get the name of an object's type in JavaScript?","599784","","<p>Is there a JavaScript equivalent of Java's <code>class.getName()</code>?</p>
","<p>You can use</p>

<pre><code>function getType( obj )
{
  return Object.prototype.toString.call(obj);
}
alert( getType( 'str' ) );     // [object String]
alert( getType( 55 ) );        // [object Number]
alert( getType( new Date() ) );// [object Date]
alert( getType( null ) );      // [object Null]
</code></pre>

<p><strong>ES2015 Update</strong>: <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#Function_names_in_classes"" rel=""nofollow noreferrer"">the name of <code>class Foo {}</code> is <code>Foo.name</code></a>.  The name of <code>thing</code>'s class, regardless of <code>thing</code>'s type, is <code>thing.constructor.name</code>. Builtin constructors in an ES2015 environment have the correct <code>name</code> property; for instance <code>(2).constructor.name</code> is <code>""Number""</code>.</p>

<hr>

<p>But here are various hacks that all fall down in one way or another:</p>

<p>Here is a hack that will do what you need - be aware that it modifies the Object's prototype, something people frown upon (usually for good reason)</p>

<pre><code>Object.prototype.getName = function() { 
   var funcNameRegex = /function (.{1,})\(/;
   var results = (funcNameRegex).exec((this).constructor.toString());
   return (results &amp;&amp; results.length &gt; 1) ? results[1] : """";
};
</code></pre>

<p>Now, all of your objects will have the function, <code>getName()</code>, that will return the name of the constructor as a string. I have tested this in <code>FF3</code> and <code>IE7</code>, I can't speak for other implementations.</p>

<p>If you don't want to do that, here is a discussion on the various ways of determining types in JavaScript...</p>

<hr>

<p>I recently updated this to be a bit more exhaustive, though it is hardly that. Corrections welcome...</p>

<h2>Using the <code>constructor</code> property...</h2>

<p>Every <code>object</code> has a value for its <code>constructor</code> property, but depending on how that <code>object</code> was constructed as well as what you want to do with that value, it may or may not be useful. </p>

<p>Generally speaking, you can use the <code>constructor</code> property to test the type of the object like so:</p>

<pre><code>var myArray = [1,2,3];
(myArray.constructor == Array); // true
</code></pre>

<p>So, that works well enough for most needs. That said...</p>

<h3>Caveats</h3>

<p><strong>Will not work <em>AT ALL</em> in many cases</strong></p>

<p>This pattern, though broken, is quite common:</p>

<pre><code>function Thingy() {
}
Thingy.prototype = {
    method1: function() {
    },
    method2: function() {
    }
};
</code></pre>

<p><code>Objects</code> constructed via <code>new Thingy</code> will have a <code>constructor</code> property that points to <code>Object</code>, not <code>Thingy</code>. So we fall right at the outset; you simply cannot trust <code>constructor</code> in a codebase that you don't control.</p>

<p><strong>Multiple Inheritance</strong></p>

<p>An example where it isn't as obvious is using multiple inheritance:</p>

<pre><code>function a() { this.foo = 1;}
function b() { this.bar = 2; }
b.prototype = new a(); // b inherits from a
</code></pre>

<p>Things now don't work as you might expect them to:</p>

<pre><code>var f = new b(); // instantiate a new object with the b constructor
(f.constructor == b); // false
(f.constructor == a); // true
</code></pre>

<p>So, you might get unexpected results if the <code>object</code> your testing has a different <code>object</code> set as its <code>prototype</code>. There are ways around this outside the scope of this discussion.</p>

<p>There are other uses for the <code>constructor</code> property, some of them interesting, others not so much; for now we will not delve into those uses since it isn't relevant to this discussion.</p>

<p><strong>Will not work cross-frame and cross-window</strong></p>

<p>Using <code>.constructor</code> for type checking will break when you want to check the type of objects coming from different <code>window</code> objects, say that of an iframe or a popup window. This is because there's a different version of each core type <code>constructor</code> in each `window', i.e.</p>

<pre><code>iframe.contentWindow.Array === Array // false
</code></pre>

<hr>

<h2>Using the <code>instanceof</code> operator...</h2>

<p>The <code>instanceof</code> operator is a clean way of testing <code>object</code> type as well, but has its own potential issues, just like the <code>constructor</code> property.</p>

<pre><code>var myArray = [1,2,3];
(myArray instanceof Array); // true
(myArray instanceof Object); // true
</code></pre>

<p>But <code>instanceof</code> fails to work for literal values (because literals are not <code>Objects</code>)</p>

<pre><code>3 instanceof Number // false
'abc' instanceof String // false
true instanceof Boolean // false
</code></pre>

<p>The literals need to be wrapped in an <code>Object</code> in order for <code>instanceof</code> to work, for example</p>

<pre><code>new Number(3) instanceof Number // true
</code></pre>

<p>The <code>.constructor</code> check works fine for literals because the <code>.</code> method invocation implicitly wraps the literals in their respective object type</p>

<pre><code>3..constructor === Number // true
'abc'.constructor === String // true
true.constructor === Boolean // true
</code></pre>

<p>Why two dots for the 3? Because Javascript interprets the first dot as a decimal point ;)</p>

<h3>Will not work cross-frame and cross-window</h3>

<p><code>instanceof</code> also will not work across different windows, for the same reason as the <code>constructor</code> property check.</p>

<hr>

<h2>Using the <code>name</code> property of the <code>constructor</code> property...</h2>

<h3>Does not work <em>AT ALL</em> in many cases</h3>

<p>Again, see above; it's quite common for <code>constructor</code> to be utterly and completely wrong and useless.</p>

<h3>Does NOT work in &lt;IE9</h3>

<p>Using <code>myObjectInstance.constructor.name</code> will give you a string containing the name of the <code>constructor</code> function used, but is subject to the caveats about the <code>constructor</code> property that were mentioned earlier.</p>

<p>For IE9 and above, you can <a href=""http://matt.scharley.me/2012/03/monkey-patch-name-ie.html"" rel=""nofollow noreferrer"">monkey-patch in support</a>:</p>

<pre><code>if (Function.prototype.name === undefined &amp;&amp; Object.defineProperty !== undefined) {
    Object.defineProperty(Function.prototype, 'name', {
        get: function() {
            var funcNameRegex = /function\s+([^\s(]+)\s*\(/;
            var results = (funcNameRegex).exec((this).toString());
            return (results &amp;&amp; results.length &gt; 1) ? results[1] : """";
        },
        set: function(value) {}
    });
}
</code></pre>

<p><strong>Updated version</strong> from the article in question. This was added 3 months after the article was published, this is the recommended version to use by the article's author Matthew Scharley. This change was inspired by <a href=""http://matt.scharley.me/2012/03/monkey-patch-name-ie.html#comment-551654096"" rel=""nofollow noreferrer"">comments pointing out potential pitfalls</a> in the previous code.</p>

<pre><code>if (Function.prototype.name === undefined &amp;&amp; Object.defineProperty !== undefined) {
    Object.defineProperty(Function.prototype, 'name', {
        get: function() {
            var funcNameRegex = /function\s([^(]{1,})\(/;
            var results = (funcNameRegex).exec((this).toString());
            return (results &amp;&amp; results.length &gt; 1) ? results[1].trim() : """";
        },
        set: function(value) {}
    });
}
</code></pre>

<hr>

<h2>Using Object.prototype.toString</h2>

<p>It turns out, as <a href=""http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/"" rel=""nofollow noreferrer"">this post details</a>, you can use <code>Object.prototype.toString</code> - the low level and generic implementation of <code>toString</code> - to get the type for all built-in types</p>

<pre><code>Object.prototype.toString.call('abc') // [object String]
Object.prototype.toString.call(/abc/) // [object RegExp]
Object.prototype.toString.call([1,2,3]) // [object Array]
</code></pre>

<p>One could write a short helper function such as</p>

<pre><code>function type(obj){
    return Object.prototype.toString.call(obj).slice(8, -1);
}
</code></pre>

<p>to remove the cruft and get at just the type name</p>

<pre><code>type('abc') // String
</code></pre>

<p>However, it will return <code>Object</code> for all user-defined types.</p>

<hr>

<h2>Caveats for all...</h2>

<p>All of these are subject to one potential problem, and that is the question of how the object in question was constructed. Here are various ways of building objects and the values that the different methods of type checking will return:</p>

<pre><code>// using a named function:
function Foo() { this.a = 1; }
var obj = new Foo();
(obj instanceof Object);          // true
(obj instanceof Foo);             // true
(obj.constructor == Foo);         // true
(obj.constructor.name == ""Foo"");  // true

// let's add some prototypical inheritance
function Bar() { this.b = 2; }
Foo.prototype = new Bar();
obj = new Foo();
(obj instanceof Object);          // true
(obj instanceof Foo);             // true
(obj.constructor == Foo);         // false
(obj.constructor.name == ""Foo"");  // false


// using an anonymous function:
obj = new (function() { this.a = 1; })();
(obj instanceof Object);              // true
(obj.constructor == obj.constructor); // true
(obj.constructor.name == """");         // true


// using an anonymous function assigned to a variable
var Foo = function() { this.a = 1; };
obj = new Foo();
(obj instanceof Object);      // true
(obj instanceof Foo);         // true
(obj.constructor == Foo);     // true
(obj.constructor.name == """"); // true


// using object literal syntax
obj = { foo : 1 };
(obj instanceof Object);            // true
(obj.constructor == Object);        // true
(obj.constructor.name == ""Object""); // true
</code></pre>

<p>While not all permutations are present in this set of examples, hopefully there are enough to provide you with an idea about how messy things might get depending on your needs. Don't assume anything, if you don't understand exactly what you are after, you may end up with code breaking where you don't expect it to because of a lack of grokking the subtleties.</p>

<h3>NOTE:</h3>

<p>Discussion of the <code>typeof</code> operator may appear to be a glaring omission, but it really isn't useful in helping to identify whether an <code>object</code> is a given type, since it is very simplistic. Understanding where <code>typeof</code> is useful is important, but I don't currently feel that it is terribly relevant to this discussion. My mind is open to change though. :)</p>
","332429"
"How to append data to div using JavaScript?","597946","","<p>I'm using AJAX to append data to div element, where I fill the div from JavaScript, how can I append new data to the div without losing the previous data found in div?</p>
","<p>Try this:</p>

<pre><code>var div = document.getElementById('divID');

div.innerHTML += 'Extra stuff';
</code></pre>
","5677816"
"What is the difference between call and apply?","597602","","<p>What is the difference between using call and apply to invoke a function?</p>

<pre><code>var func = function(){
  alert('hello!');
};
</code></pre>

<p><code>func.apply();</code></p>

<p>vs</p>

<pre><code>func.call();
</code></pre>

<p>Are there performance differences between the two methods? When is it best to use call over apply and vice versa?</p>
","<p>The difference is that <code>apply</code> lets you invoke the function with <code>arguments</code> as an array; <code>call</code> requires the parameters be listed explicitly. A useful mnemonic is <em>""<strong>A</strong> for <strong>a</strong>rray and <strong>C</strong> for <strong>c</strong>omma.""</em></p>

<p>See MDN's documentation on <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/apply"" rel=""noreferrer"">apply</a> and <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/call"" rel=""noreferrer"">call</a>.</p>

<p>Pseudo syntax:</p>

<p><code>theFunction.apply(valueForThis, arrayOfArgs)</code></p>

<p><code>theFunction.call(valueForThis, arg1, arg2, ...)</code></p>

<p>There is also, as of ES6, the possibility to <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator"" rel=""noreferrer""><code>spread</code></a> the array for use with the <code>call</code> function, you can see the compatibilities <a href=""http://kangax.github.io/compat-table/es6/"" rel=""noreferrer"">here</a>.</p>

<p>Sample code:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function theFunction(name, profession) {
    console.log(""My name is "" + name + "" and I am a "" + profession +""."");
}
theFunction(""John"", ""fireman"");
theFunction.apply(undefined, [""Susan"", ""school teacher""]);
theFunction.call(undefined, ""Claude"", ""mathematician"");
theFunction.call(undefined, ...[""Matthew"", ""physicist""]); // used with the spread operator</code></pre>
</div>
</div>
</p>
","1986909"
"jQuery AJAX cross domain","596869","","<p>Here are two pages, test.php and testserver.php.</p>

<p><strong>test.php</strong></p>

<pre><code>&lt;script src=""scripts/jq.js"" type=""text/javascript""&gt;&lt;/script&gt;
&lt;script&gt;
    $(function() {
        $.ajax({url:""testserver.php"",
            success:function() {
                alert(""Success"");
            },
            error:function() {
                alert(""Error"");
            },
            dataType:""json"",
            type:""get""
        }
    )})
&lt;/script&gt;
</code></pre>

<p><strong>testserver.php</strong></p>

<pre><code>&lt;?php
$arr = array(""element1"",
             ""element2"",
             array(""element31"",""element32""));
$arr['name'] = ""response"";
echo json_encode($arr);
?&gt;
</code></pre>

<p>Now my problem: when both of these files are on the same server (either localhost or web server), it works and <code>alert(""Success"")</code> is called; If it is on different servers, meaning testserver.php on web server and test.php on localhost, its not working, and <code>alert(""Error"")</code> is executing. Even if the URL inside ajax is changed to <a href=""http://domain.com/path/to/file/testserver.php"" rel=""noreferrer"">http://domain.com/path/to/file/testserver.php</a></p>
","<p>Use <a href=""http://en.wikipedia.org/wiki/JSONP"" rel=""nofollow noreferrer"">JSONP</a>.</p>

<p>jQuery:</p>

<pre><code>$.ajax({
     url:""testserver.php"",
     dataType: 'jsonp', // Notice! JSONP &lt;-- P (lowercase)
     success:function(json){
         // do stuff with json (in this case an array)
         alert(""Success"");
     },
     error:function(){
         alert(""Error"");
     }      
});
</code></pre>

<p>PHP:</p>

<pre><code>&lt;?php
$arr = array(""element1"",""element2"",array(""element31"",""element32""));
$arr['name'] = ""response"";
echo $_GET['callback'].""("".json_encode($arr)."");"";
?&gt;
</code></pre>

<p>The echo might be wrong, it's been a while since I've used php. In any case you need to output <code>callbackName('jsonString')</code> notice the quotes. jQuery will pass it's own callback name, so you need to get that from the GET params.</p>

<p>And as Stefan Kendall posted, <a href=""http://api.jquery.com/jQuery.getJSON/"" rel=""nofollow noreferrer"">$.getJSON()</a> is a shorthand method, but then you need to append <code>'callback=?'</code> to the url as GET parameter (yes, value is ?, jQuery replaces this with its own generated callback method).</p>
","3506306"
"Get all unique values in an array (remove duplicates)","596678","","<p>I have an array of numbers that I need to make sure are unique. I found the code snippet below on the internet and it works great until the array has a zero in it. I found <a href=""https://stackoverflow.com/questions/1890203"">this other script</a> here on SO that looks almost exactly like it, but it doesn't fail.</p>

<p>So for the sake of helping me learn, can someone help me determine where the prototype script is going wrong?</p>

<pre><code>Array.prototype.getUnique = function() {
 var o = {}, a = [], i, e;
 for (i = 0; e = this[i]; i++) {o[e] = 1};
 for (e in o) {a.push (e)};
 return a;
}
</code></pre>

<h3>More answers from duplicate question:</h3>

<ul>
<li><a href=""https://stackoverflow.com/questions/9229645"">Remove Duplicates from JavaScript Array</a></li>
</ul>

<h3>Similar question:</h3>

<ul>
<li><a href=""https://stackoverflow.com/questions/840781"">Get all values with more than one occurrence (i.e.: not unique) in an array</a></li>
</ul>
","<p>With <em>JavaScript 1.6</em> / <em>ECMAScript 5</em> you can use the native <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/filter"" rel=""noreferrer"" title=""filter""><code>filter</code></a> method of an Array in the following way to get an array with unique values:</p>

<pre><code>function onlyUnique(value, index, self) { 
    return self.indexOf(value) === index;
}

// usage example:
var a = ['a', 1, 'a', 2, '1'];
var unique = a.filter( onlyUnique ); // returns ['a', 1, 2, '1']
</code></pre>

<p>The native method <code>filter</code> will loop through the array and leave only those entries that pass the given callback function <code>onlyUnique</code>.</p>

<p><code>onlyUnique</code> checks, if the given value is the first occurring. If not, it must be a duplicate and will not be copied.</p>

<p>This solution works without any extra library like jQuery or prototype.js.</p>

<p>It works for arrays with mixed value types too.</p>

<p>For old Browsers (&lt;ie9), that do not support the native methods <code>filter</code> and <code>indexOf</code> you can find work arounds in the MDN documentation for <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/filter"" rel=""noreferrer"" title=""filter"">filter</a> and <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/indexOf"" rel=""noreferrer"">indexOf</a>.</p>

<p>If you want to keep the last occurrence of a value, simple replace <code>indexOf</code> by <code>lastIndexOf</code>. </p>

<p>With ES6 it could be shorten to this:</p>

<pre><code>// usage example:
var myArray = ['a', 1, 'a', 2, '1'];
var unique = myArray.filter((v, i, a) =&gt; a.indexOf(v) === i); 

// unique is ['a', 1, 2, '1']
</code></pre>

<p>Thanks to <a href=""https://stackoverflow.com/users/124119/camilo-martin"">Camilo Martin</a> for hint in comment. </p>

<p>ES6 has a native object <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set"" rel=""noreferrer""><code>Set</code></a> to store unique values. To get an array with unique values you could do now this:</p>

<pre><code>var myArray = ['a', 1, 'a', 2, '1'];

let unique = [...new Set(myArray)]; 

// unique is ['a', 1, 2, '1']
</code></pre>

<p>The constructor of <code>Set</code> takes an iterable object, like Array, and the spread operator <code>...</code> transform the set back into an Array. Thanks to <a href=""https://stackoverflow.com/users/1737158/lukas-liesis"">Lukas Liese</a> for hint in comment.</p>
","14438954"
"How can I get last characters of a string using JavaScript","595748","","<p>I have </p>

<pre><code>var id=""ctl03_Tabs1"";
</code></pre>

<p>Using JavaScript, how might I get the last five characters or last character?</p>
","<p>You'll want to use the Javascript string method <code>.substr()</code> combined with the <code>.length</code> property.</p>

<pre><code>var id = ""ctl03_Tabs1"";
var lastFive = id.substr(id.length - 5); // =&gt; ""Tabs1""
var lastChar = id.substr(id.length - 1); // =&gt; ""1""
</code></pre>

<p>This gets the characters starting at id.length - 5 and, since the second argument for .substr() is omitted, continues to the end of the string.</p>

<p>You can also use the <code>.slice()</code> method as others have pointed out below.</p>

<p>If you're simply looking to find the characters after the underscore, you could use this:</p>

<pre><code>var tabId = id.split(""_"").pop(); // =&gt; ""Tabs1""
</code></pre>

<p>This splits the string into an array on the underscore and then ""pops"" the last element off the array (which is the string you want).</p>
","5873890"
"if...else within JSP or JSTL","593195","","<p>I have a kind of open-ended question..</p>

<p>I want to have a HTML code based on condition (desktop/ipad)..say Condition 1/Condition 2</p>

<p>I want to have separate HTML snippets for each of these conditions...</p>

<pre><code>if (Condition 1)
Some HTML code for con1
else if (Condition 2)
Some HTML code for con2
</code></pre>

<p>The condition I want to test (in JS) is;</p>

<pre><code>var isiPad = navigator.userAgent.match(/iPad/i) != null;
if (isiPad)
{}
else
{}
</code></pre>

<p>Now this has to be implemented in a .jsp page...</p>

<p>So how do I do that? Should I use JSTL ? 
What is the best way?</p>

<p>The main thing is that only corresponding code should actually be loaded/rendered 
e.g. if condition 1 is true, the HTML code in condition 2 should not be executed at all (apart from being hidden in the browser)</p>
","

<blockquote>
  <p>Should I use JSTL ? </p>
</blockquote>

<p>Yes.</p>

<p>You can use <code>&lt;c:if&gt;</code> and <code>&lt;c:choose&gt;</code> tags to make conditional rendering in jsp using JSTL.</p>

<p>To simulate <strong>if</strong> , you can use:</p>

<pre class=""lang-xml prettyprint-override""><code>&lt;c:if test=""condition""&gt;&lt;/c:if&gt;
</code></pre>

<p>To simulate <strong>if...else</strong>, you can use:</p>

<pre class=""lang-xml prettyprint-override""><code>&lt;c:choose&gt;
    &lt;c:when test=""${param.enter=='1'}""&gt;
        pizza. 
        &lt;br /&gt;
    &lt;/c:when&gt;    
    &lt;c:otherwise&gt;
        pizzas. 
        &lt;br /&gt;
    &lt;/c:otherwise&gt;
&lt;/c:choose&gt;
</code></pre>
","5935934"
"HTML-encoding lost when attribute read from input field","591906","","<p>I’m using JavaScript to pull a value out from a hidden field and display it in a textbox. The value in the hidden field is encoded.</p>

<p>For example,</p>

<pre class=""lang-html prettyprint-override""><code>&lt;input id='hiddenId' type='hidden' value='chalk &amp;amp; cheese' /&gt;
</code></pre>

<p>gets pulled into</p>

<pre class=""lang-html prettyprint-override""><code>&lt;input type='text' value='chalk &amp;amp; cheese' /&gt;
</code></pre>

<p>via some jQuery to get the value from the hidden field (it’s at this point that I lose the encoding):</p>

<pre class=""lang-js prettyprint-override""><code>$('#hiddenId').attr('value')
</code></pre>

<p>The problem is that when I read <code>chalk &amp;amp; cheese</code> from the hidden field, JavaScript seems to lose the encoding. To escape <code>""</code> and <code>'</code>, I want the encoding to remain.</p>

<p>Is there a JavaScript library or a jQuery method that will HTML-encode a string?</p>
","<p>I use these functions:</p>

<pre><code>function htmlEncode(value){
  // Create a in-memory div, set its inner text (which jQuery automatically encodes)
  // Then grab the encoded contents back out. The div never exists on the page.
  return $('&lt;div/&gt;').text(value).html();
}

function htmlDecode(value){
  return $('&lt;div/&gt;').html(value).text();
}
</code></pre>

<p>Basically a div element is created in memory, but it is never appended to the document.</p>

<p>On the <code>htmlEncode</code> function I set the <code>innerText</code> of the element, and retrieve the encoded <code>innerHTML</code>; on the <code>htmlDecode</code> function I set the <code>innerHTML</code> value of the element and the <code>innerText</code> is retrieved.</p>

<p>Check a running example <a href=""http://jsbin.com/ejuru"" rel=""noreferrer"">here</a>.</p>
","1219983"
"Convert character to ASCII code in JavaScript","589047","","<p>How can I convert a character to its ASCII code using JavaScript? </p>

<p>For example:</p>

<blockquote>
  <p>get 10 from ""\n"".</p>
</blockquote>
","<pre><code>""\n"".charCodeAt(0);
</code></pre>
","94049"
"How to convert decimal to hex in JavaScript?","588597","","<p>How do you convert decimal values to their hex equivalent in JavaScript?</p>
","<p>Convert a number to a hexadecimal string with:</p>

<pre><code>hexString = yourNumber.toString(16);
</code></pre>

<p>and reverse the process with:</p>

<pre><code>yourNumber = parseInt(hexString, 16);
</code></pre>
","57805"
"How to call a JavaScript function from PHP?","585826","","<p>How to call a JavaScript function from PHP?</p>

<pre><code>&lt;?php

  jsfunction();
  // or
  echo(jsfunction());
  // or
  // Anything else?
</code></pre>

<p>The following code is from <em>xyz.html</em> (on a button click) it calls a <code>wait()</code> in an external <em>xyz.js</em>. This <code>wait()</code> calls wait.php.</p>

<pre><code>function wait() 
{
  xmlhttp=GetXmlHttpObject();
  var url=""wait.php""; \
  xmlhttp.onreadystatechange=statechanged; 
  xmlhttp.open(""GET"", url, true); 
  xmlhttp.send(null);
} 

function statechanged()
{ 
  if(xmlhttp.readyState==4) {
       document.getElementById(""txt"").innerHTML=xmlhttp.responseText;
  }
}
</code></pre>

<p>and <em>wait.php</em></p>

<pre><code>&lt;?php echo ""&lt;script&gt; loadxml(); &lt;/script&gt;""; 
</code></pre>

<p>where <code>loadxml()</code> calls code from another PHP file the same way. </p>

<p>The <code>loadxml()</code> is working fine otherwise, but it is not being called the way I want it.</p>
","<p>As far as PHP is concerned (or really, a web server in general), an HTML page is nothing more complicated than a big string.</p>

<p>All the fancy work you can do with language like PHP - reading from databases and web services and all that - the ultimate end goal is the exact same basic principle: generate a string of HTML*.</p>

<p>Your big HTML string doesn't become anything more special than that until it's loaded by a web browser. Once a browser loads the page, <em>then</em> all the other magic happens - layout, box model stuff, DOM generation, and many other things, including JavaScript execution.</p>

<p>So, you don't ""call JavaScript from PHP"", you ""include a JavaScript function call in your output"".</p>

<p>There are many ways to do this, but here are a couple.</p>

<p>Using just PHP:</p>

<pre><code>echo '&lt;script type=""text/javascript""&gt;',
     'jsfunction();',
     '&lt;/script&gt;'
;
</code></pre>

<p>Escaping from php mode to direct output mode:</p>

<pre><code>&lt;?php
    // some php stuff
?&gt;
&lt;script type=""text/javascript""&gt;
    jsFunction();
&lt;/script&gt;
</code></pre>

<p>You don't need to return a function name or anything like that.  First of all, stop writing AJAX requests by hand.  You're only making it hard on yourself.  Get jQuery or one of the other excellent frameworks out there.</p>

<p>Secondly, understand that you already are going to be executing javascript code once the response is received from the AJAX call.</p>

<p>Here's an example of what I think you're doing with jQuery's AJAX</p>

<pre><code>$.get(
    'wait.php',
    {},
    function(returnedData) {
        document.getElementById(""txt"").innerHTML = returnedData;

        //  Ok, here's where you can call another function
        someOtherFunctionYouWantToCall();

        // But unless you really need to, you don't have do
        // We're already in the middle of a function execution
        // right here, so you might as well put your code here
    },
    'text'
);

function someOtherFunctionYouWantToCall() {
    // stuff
}
</code></pre>

<p>Now, if you're dead-set on sending a function name from PHP back to the AJAX call, you can do that too.  </p>

<pre><code>$.get(
    'wait.php',
    {},
    function(returnedData) {
        // Assumes returnedData has a javascript function name
        window[returnedData]();
    },
    'text'
);
</code></pre>

<p>* Or JSON or XML etc.</p>
","1045885"
"Using an HTML button to call a JavaScript function","584695","","<p>I am trying to use an HTML button to call a JavaScript function.</p>

<p>Here's the code:</p>

<pre><code>&lt;input type=""button"" value=""Capacity Chart"" onclick=""CapacityChart();""&gt;
</code></pre>

<p>It doesn't seem to work correctly though. Is there a better way to do this?</p>

<p>Here is the link:<a href=""http://projectpath.ideapeoplesite.com/bendel/toolscalculators.html"" rel=""noreferrer"">http://projectpath.ideapeoplesite.com/bendel/toolscalculators.html</a> click on the capacity tab in the bottom left section. The button should generate an alert if the values are not changed and should produce a chart if you enter values.</p>
","<p>There are a few ways to handle events with HTML/DOM.  There's no real right or wrong way but different ways are useful in different situations.  </p>

<p>1: There's defining it in the HTML:</p>

<pre><code>&lt;input id=""clickMe"" type=""button"" value=""clickme"" onclick=""doFunction();"" /&gt;
</code></pre>

<p>2: There's adding it to the DOM property for the event in Javascript:</p>

<pre><code>//- Using a function pointer:
document.getElementById(""clickMe"").onclick = doFunction;

//- Using an anonymous function:
document.getElementById(""clickMe"").onclick = function () { alert('hello!'); };
</code></pre>

<p>3: And there's attaching a function to the event handler using Javascript:</p>

<pre><code>var el = document.getElementById(""clickMe"");
if (el.addEventListener)
    el.addEventListener(""click"", doFunction, false);
else if (el.attachEvent)
    el.attachEvent('onclick', doFunction);
</code></pre>

<p>Both the second and third methods allow for inline/anonymous functions and both must be declared after the element has been parsed from the document.  The first method isn't valid XHTML because the onclick attribute isn't in the XHTML specification.</p>

<p>The 1st and 2nd methods are mutually exclusive, meaning using one (the 2nd) will override the other (the 1st).  The 3rd method will allow you to attach as many functions as you like to the same event handler, even if the 1st or 2nd method has been used too.</p>

<p>Most likely, the problem lies somewhere in your <code>CapacityChart()</code> function.  After visiting your link and running your script, the CapacityChart() function runs and the two popups are opened (one is closed as per the script).  Where you have the following line:</p>

<pre><code>CapacityWindow.document.write(s);
</code></pre>

<p>Try the following instead:</p>

<pre><code>CapacityWindow.document.open(""text/html"");
CapacityWindow.document.write(s);
CapacityWindow.document.close();
</code></pre>

<p><strong>EDIT</strong><br>
When I saw your code I thought you were writing it specifically for IE.  As others have mentioned you will need to replace references to <code>document.all</code> with <code>document.getElementById</code>.  However, you will still have the task of fixing the script after this so I would recommend getting it working in at least IE first as any mistakes you make changing the code to work cross browser could cause even more confusion.  Once it's working in IE it will be easier to tell if it's working in other browsers whilst you're updating the code.</p>
","1947531"
"How can I get jQuery to perform a synchronous, rather than asynchronous, Ajax request?","584088","","<p>I have a JavaScript widget which provides standard extension points. One of them is the <code>beforecreate</code> function. It should return <code>false</code> to prevent an item from being created. </p>

<p>I've added an Ajax call into this function using jQuery:</p>

<pre><code>beforecreate: function (node, targetNode, type, to) {
  jQuery.get('http://example.com/catalog/create/' + targetNode.id + '?name=' + encode(to.inp[0].value),

  function (result) {
    if (result.isOk == false) 
        alert(result.message);
  });
}
</code></pre>

<p>But I want to prevent my widget from creating the item, so I should return <code>false</code> in the mother-function, not in the callback. Is there a way to perform a synchronized Ajax request using jQuery or any other API?</p>
","<p>From the <a href=""http://docs.jquery.com/Ajax/jQuery.ajax"" rel=""noreferrer"">jQuery documentation</a>: you specify the <strong>asynchronous</strong> option to be <strong>false</strong> to get a synchronous Ajax request. Then your callback can set some data before your mother function proceeds.</p>

<p>Here's what your code would look like if changed as suggested:</p>

<pre><code>beforecreate: function (node, targetNode, type, to) {
    jQuery.ajax({
        url: 'http://example.com/catalog/create/' + targetNode.id + '?name=' + encode(to.inp[0].value),
        success: function (result) {
            if (result.isOk == false) alert(result.message);
        },
        async: false
    });
}
</code></pre>
","133327"
"How to list the properties of a JavaScript object","582058","","<p>Say I create an object thus:</p>

<pre><code>var myObject =
        {""ircEvent"": ""PRIVMSG"", ""method"": ""newURI"", ""regex"": ""^http://.*""};
</code></pre>

<p>What is the best way to retrieve a list of the property names? i.e. I would like to end up with some variable 'keys' such that:</p>

<pre><code>keys == [""ircEvent"", ""method"", ""regex""]
</code></pre>
","<p>In modern browsers (IE9+, FF4+, Chrome5+, Opera12+, Safari5+) you can use the built in <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys"" rel=""noreferrer"">Object.keys</a> method:</p>

<pre><code>var keys = Object.keys(myObject);
</code></pre>

<p>The above has a full polyfill but a simplified version is:</p>

<pre><code>var getKeys = function(obj){
   var keys = [];
   for(var key in obj){
      keys.push(key);
   }
   return keys;
}
</code></pre>

<p>Alternatively replace <code>var getKeys</code> with <code>Object.prototype.keys</code> to allow you to call <code>.keys()</code> on any object.  Extending the prototype has some side effects and I wouldn't recommend doing it.</p>
","208020"
"How to remove item from array by value?","580061","","<p>Is there a method to remove an item from a JavaScript array?</p>

<p>Given an array:</p>

<pre><code>var ary = ['three', 'seven', 'eleven'];
</code></pre>

<p>I would like to do something like:</p>

<pre><code>removeItem('seven', ary);
</code></pre>

<p>I've looked into <code>splice()</code> but that only removes by the position number, whereas I need something to remove an item by its value.</p>
","<p>This can be a global function  or a method of a custom object, if you aren't allowed to add to native prototypes. It removes all of the items from the array that match any of the arguments.</p>

<pre><code>Array.prototype.remove = function() {
    var what, a = arguments, L = a.length, ax;
    while (L &amp;&amp; this.length) {
        what = a[--L];
        while ((ax = this.indexOf(what)) !== -1) {
            this.splice(ax, 1);
        }
    }
    return this;
};

var ary = ['three', 'seven', 'eleven'];

ary.remove('seven');

/*  returned value: (Array)
three,eleven
*/
</code></pre>

<p>To make it a global-</p>

<pre><code>function removeA(arr) {
    var what, a = arguments, L = a.length, ax;
    while (L &gt; 1 &amp;&amp; arr.length) {
        what = a[--L];
        while ((ax= arr.indexOf(what)) !== -1) {
            arr.splice(ax, 1);
        }
    }
    return arr;
}
var ary = ['three', 'seven', 'eleven'];
removeA(ary, 'seven');


/*  returned value: (Array)
three,eleven
*/
</code></pre>

<p>And to take care of IE8 and below-</p>

<pre><code>if(!Array.prototype.indexOf) {
    Array.prototype.indexOf = function(what, i) {
        i = i || 0;
        var L = this.length;
        while (i &lt; L) {
            if(this[i] === what) return i;
            ++i;
        }
        return -1;
    };
}
</code></pre>
","3955096"
"What is console.log?","579553","","<p>What is the use of <code>console.log</code>? </p>

<p>Please explain how to use it in JavaScript, with a code example.</p>
","<p>It's not a jQuery feature but a feature for debugging purposes. You can for instance log something to the console when something happens. For instance:</p>

<pre><code>$('#someButton').click(function() {
  console.log('#someButton was clicked');
  // do something
});
</code></pre>

<p>You'd then see <code>#someButton was clicked</code> in Firebug’s “Console” tab (or another tool’s console — e.g. Chrome’s Web Inspector) when you would click the button.</p>

<p>For some reasons, the console object could be unavailable. Then you could check if it is - this is useful as you don't have to remove your debugging code when you deploy to production:</p>

<pre><code>if (window.console &amp;&amp; window.console.log) {
  // console is available
}
</code></pre>
","4539270"
"How to generate a simple popup using jQuery","578173","","<p>I am designing a web page. When we click the content of div named mail, how can I show a popup window containing a label email and text box?</p>
","<p>Something this simple doesn't need a plugin. This might look like a lot of code but it's really pretty simple.</p>

<p>First the CSS - tweak this however you like:</p>

<pre><code>a.selected {
  background-color:#1F75CC;
  color:white;
  z-index:100;
}

.messagepop {
  background-color:#FFFFFF;
  border:1px solid #999999;
  cursor:default;
  display:none;
  margin-top: 15px;
  position:absolute;
  text-align:left;
  width:394px;
  z-index:50;
  padding: 25px 25px 20px;
}

label {
  display: block;
  margin-bottom: 3px;
  padding-left: 15px;
  text-indent: -15px;
}

.messagepop p, .messagepop.div {
  border-bottom: 1px solid #EFEFEF;
  margin: 8px 0;
  padding-bottom: 8px;
}
</code></pre>

<p>And the JavaScript:</p>

<pre><code>function deselect(e) {
  $('.pop').slideFadeToggle(function() {
    e.removeClass('selected');
  });    
}

$(function() {
  $('#contact').on('click', function() {
    if($(this).hasClass('selected')) {
      deselect($(this));               
    } else {
      $(this).addClass('selected');
      $('.pop').slideFadeToggle();
    }
    return false;
  });

  $('.close').on('click', function() {
    deselect($('#contact'));
    return false;
  });
});

$.fn.slideFadeToggle = function(easing, callback) {
  return this.animate({ opacity: 'toggle', height: 'toggle' }, 'fast', easing, callback);
};
</code></pre>

<p>And finally the html:</p>

<pre><code>&lt;div class=""messagepop pop""&gt;
  &lt;form method=""post"" id=""new_message"" action=""/messages""&gt;
    &lt;p&gt;&lt;label for=""email""&gt;Your email or name&lt;/label&gt;&lt;input type=""text"" size=""30"" name=""email"" id=""email"" /&gt;&lt;/p&gt;
    &lt;p&gt;&lt;label for=""body""&gt;Message&lt;/label&gt;&lt;textarea rows=""6"" name=""body"" id=""body"" cols=""35""&gt;&lt;/textarea&gt;&lt;/p&gt;
    &lt;p&gt;&lt;input type=""submit"" value=""Send Message"" name=""commit"" id=""message_submit""/&gt; or &lt;a class=""close"" href=""/""&gt;Cancel&lt;/a&gt;&lt;/p&gt;
  &lt;/form&gt;
&lt;/div&gt;

&lt;a href=""/contact"" id=""contact""&gt;Contact Us&lt;/a&gt;
</code></pre>

<p><a href=""http://jsfiddle.net/SRw67/"" rel=""noreferrer"">Here is a jsfiddle demo and implementation.</a></p>

<p>Depending on the situation you may want to load the popup content via an ajax call. It's best to avoid this if possible as it may give the user a more significant delay before seeing the content. Here couple changes that you'll want to make if you take this approach.</p>

<p>HTML becomes:</p>

<pre><code>&lt;div&gt;
    &lt;div class=""messagepop pop""&gt;&lt;/div&gt; 
    &lt;a href=""/contact"" id=""contact""&gt;Contact Us&lt;/a&gt;
&lt;/div&gt;
</code></pre>

<p>And the general idea of the JavaScript becomes:</p>

<pre><code>$(""#contact"").on('click', function() {
    if($(this).hasClass(""selected"")) {
        deselect();               
    } else {
        $(this).addClass(""selected"");
        $.get(this.href, function(data) {
            $("".pop"").html(data).slideFadeToggle(function() { 
                $(""input[type=text]:first"").focus();
            });
        }
    }
    return false;
});
</code></pre>
","1329605"
"Origin is not allowed by Access-Control-Allow-Origin","576808","","<p>I'm making an <code>Ajax.request</code> to a remote PHP server in a <a href=""https://en.wikipedia.org/wiki/Sencha_Touch"" rel=""noreferrer"">Sencha Touch</a> 2 application (wrapped in <a href=""http://en.wikipedia.org/wiki/PhoneGap"" rel=""noreferrer"">PhoneGap</a>).</p>

<p>The response from the server is the following:</p>

<blockquote>
  <p>XMLHttpRequest cannot load <a href=""http://nqatalog.negroesquisso.pt/login.php"" rel=""noreferrer"">http://nqatalog.negroesquisso.pt/login.php</a>. Origin <code>http://localhost:8888</code> is not allowed by Access-Control-Allow-Origin.</p>
</blockquote>

<p>How can I fix this problem?</p>
","<p>I wrote an article on this issue a while back, <a href=""http://www.cypressnorth.com/blog/programming/cross-domain-ajax-request-with-json-response-for-iefirefoxchrome-safari-jquery/"" rel=""noreferrer"">Cross Domain AJAX</a>.</p>

<p>The easiest way to handle this if you have control of the responding server is to add a response header for:</p>

<pre><code>Access-Control-Allow-Origin: *
</code></pre>

<p>This will allow cross-domain <a href=""http://en.wikipedia.org/wiki/Ajax_%28programming%29"" rel=""noreferrer"">Ajax</a>. In PHP, you'll want to modify the response like so:</p>

<pre><code>&lt;?php header('Access-Control-Allow-Origin: *'); ?&gt;
</code></pre>

<p>You can just put the <code>Header set Access-Control-Allow-Origin *</code> setting in the <a href=""http://en.wikipedia.org/wiki/Apache_HTTP_Server"" rel=""noreferrer"">Apache</a> configuration or htaccess file. It just work like a charm.</p>

<p>From the comments, this is an important note: <em>the wildcard is going to allow any domain to send requests to your host. I recommend replacing the asterisk with a specific domain that you will be running scripts on</em>.</p>
","10143166"
"The ""right"" JSON date format","574135","","<p>I've seen so many different standards for the JSON date format:</p>

<pre><code>""\""\\/Date(1335205592410)\\/\""""         .NET JavaScriptSerializer
""\""\\/Date(1335205592410-0500)\\/\""""    .NET DataContractJsonSerializer
""2012-04-23T18:25:43.511Z""              JavaScript built-in JSON object
""2012-04-21T18:25:43-05:00""             ISO 8601
</code></pre>

<p>Which one is the right one? Or best? Is there any sort of standard on this?</p>
","<p><a href=""http://json.org/"" rel=""noreferrer"" title=""JSON definition"">JSON</a> itself <strong>does not</strong> specify how dates should be represented, but JavaScript does.</p>

<p>You <em>should</em> use the format emitted by <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date"" rel=""noreferrer"" title=""MDN documentation for JavaScript Date""><code>Date</code></a>'s <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toJSON"" rel=""noreferrer"" title=""MDN documentation for toJSON&#40;&#41;""><code>toJSON</code></a> method:</p>

<p><code>2012-04-23T18:25:43.511Z</code></p>

<p>Here's why:</p>

<ol>
<li><p>It's human readable but also succinct</p></li>
<li><p>It sorts correctly</p></li>
<li><p>It includes fractional seconds, which can help re-establish chronology</p></li>
<li><p>It conforms to <a href=""http://en.wikipedia.org/wiki/ISO_8601"" rel=""noreferrer"" title=""ISO8601 on Wikipedia"">ISO 8601</a></p></li>
<li><p>ISO 8601 has been well-established internationally for more than a decade</p></li>
<li><p>ISO 8601 is endorsed by <a href=""http://www.w3.org/TR/NOTE-datetime"" rel=""noreferrer"" title=""W3C datetime"">W3C</a>, <a href=""http://tools.ietf.org/html/rfc3339"" rel=""noreferrer"" title=""RFC3339 on IETF"">RFC3339</a>, and <a href=""http://xkcd.com/1179/"" rel=""noreferrer"" title=""XKCD comic about ISO8601"">XKCD</a></p></li>
</ol>

<p><strong>That being said</strong>, every date library ever written can understand ""milliseconds since 1970"". So for easy portability, ThiefMaster is right.</p>
","15952652"
"Insert HTML into view","570654","","<p>Is it possible to create an HTML fragment in an AngularJS controller and have this HTML shown in the view?</p>

<p>This comes from a requirement to turn an inconsistent JSON blob into a nested list of <code>id : value</code> pairs. Therefore the HTML is created in the controller and I am now looking to display it.</p>

<p>I have created a model property, but cannot render this in the view without it just printing the HTML.</p>

<hr>

<p>Update</p>

<p>It appears that the problem arises from angular rendering the created HTML as a string within quotes. Will attempt to find a way around this.</p>

<p>Example controller :</p>

<pre><code>var SomeController = function () {

    this.customHtml = '&lt;ul&gt;&lt;li&gt;render me please&lt;/li&gt;&lt;/ul&gt;';
}
</code></pre>

<p>Example view :</p>

<pre><code>&lt;div ng:bind=""customHtml""&gt;&lt;/div&gt;
</code></pre>

<p>Gives :</p>

<pre><code>&lt;div&gt;
    ""&lt;ul&gt;&lt;li&gt;render me please&lt;/li&gt;&lt;/ul&gt;""
&lt;/div&gt;
</code></pre>
","<p>For Angular 1.x, use <code>ng-bind-html</code> in the HTML:</p>

<pre><code>&lt;div ng-bind-html=""thisCanBeusedInsideNgBindHtml""&gt;&lt;/div&gt;
</code></pre>

<p>At this point you would get a <code>attempting to use an unsafe value in a safe context</code> error so you need to either use <a href=""https://docs.angularjs.org/api/ngSanitize/service/$sanitize"" rel=""noreferrer"">ngSanitize</a> or <a href=""https://docs.angularjs.org/api/ng/service/$sce"" rel=""noreferrer"">$sce</a> to resolve that.</p>

<h3>$sce</h3>

<p>Use <code>$sce.trustAsHtml()</code> in the controller to convert the html string.</p>

<pre><code> $scope.thisCanBeusedInsideNgBindHtml = $sce.trustAsHtml(someHtmlVar);
</code></pre>

<h3>ngSanitize</h3>

<p>There are 2 steps:</p>

<ol>
<li><p>include the angular-sanitize.min.js resource, i.e.:<br>
<code>&lt;script src=""lib/angular/angular-sanitize.min.js""&gt;&lt;/script&gt;</code></p></li>
<li><p>In a js file (controller or usually app.js), include ngSanitize, i.e.:<br>
<code>angular.module('myApp', ['myApp.filters', 'myApp.services', 'myApp.directives', 'ngSanitize'])</code></p></li>
</ol>
","10971756"
"Converting JSON Object into Javascript array","560603","","<p>I have a JSON object like this coming back as a server response:</p>

<pre><code>{""0"":""1"",""1"":""2"",""2"":""3"",""3"":""4""}
</code></pre>

<p>I want to convert it into JavaScript array like:</p>

<pre><code>[""1"",""2"",""3"",""4""]
</code></pre>

<p>Is there a best way to do this? Wherever I am reading, people are using complex logic using loops. So are there alternative methods to doing this?</p>
","<p>It's actually very straight forward with jQuery's <a href=""http://api.jquery.com/jquery.map/"" rel=""noreferrer""><strong><code>$.map</code></strong></a></p>

<pre><code>var arr = $.map(obj, function(el) { return el });
</code></pre>

<p><a href=""http://jsfiddle.net/8TT4p/"" rel=""noreferrer""><strong>FIDDLE</strong></a></p>

<p>and almost as easy without jQuery as well, converting the keys to an array and then mapping back the values with <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map"" rel=""noreferrer""><strong><code>Array.map</code></strong></a></p>

<pre><code>var arr = Object.keys(obj).map(function(k) { return obj[k] });
</code></pre>

<p><a href=""http://jsfiddle.net/8TT4p/67/"" rel=""noreferrer""><strong>FIDDLE</strong></a></p>

<p>That's assuming it's already parsed as a javascript object, and isn't actually JSON, which is a string format, in that case a run through <code>JSON.parse</code> would be necessary as well.</p>

<p>In ES2015 there's <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values"" rel=""noreferrer""><code>Object.values</code></a> to the rescue, which makes this a breeze</p>

<pre><code>var arr = Object.values(obj);
</code></pre>
","20881336"
"Check if a value is an object in JavaScript","560133","","<p>How do you check if a value is an Object in JavaScript?</p>
","<p>Try using <code>typeof(var)</code> and/or <code>var instanceof something</code>.</p>

<p>EDIT: This answer gives an idea of how to examine variable's properties, but it is <em>not</em> a bulletproof recipe (after all there's no recipe at all!) for checking whether it's an object, far from it. Since people tend to look for something to copy from here without doing any research, I'd highly recommend that they turn to the other, most upvoted (and correct!) answer.</p>
","8511332"
"How to pass variables and data from PHP to JavaScript?","559441","","<p>I have a variable in PHP, and I need its value in my JavaScript code. How can I get my variable from PHP to JavaScript?</p>

<p>I have code that looks like this:</p>

<pre><code>&lt;?php
     ...
     $val = $myService-&gt;getValue(); // makes an api and db call
?&gt;
</code></pre>

<p>I have JavaScript code that needs <code>val</code> and looks along the lines of:</p>

<pre><code>&lt;script&gt;
    myPlugin.start($val); // tried this, didn't work
    &lt;?php myPlugin.start($val); ?&gt; // this didn't work either
    myPlugin.start(&lt;?=$val?&gt; // this works sometimes, but sometimes it fails
&lt;/script&gt;
</code></pre>
","<p>There are actually several approaches to do this. Some require more overhead than others, and some are considered better than others.</p>

<p>In no particular order:</p>

<ol>
<li>Use AJAX to get the data you need from the server.</li>
<li>Echo the data into the page somewhere, and use JavaScript to get the information from the DOM.</li>
<li>Echo the data directly to JavaScript.</li>
</ol>

<p>In this post, we'll examine each of the above methods, and see the pros and cons of each, as well as how to implement them.</p>

<h1>1. Use AJAX to get the data you need from the server</h1>

<p>This method is considered the best, because <strong>your server side and client side scripts are completely separate</strong>.</p>

<h3>Pros</h3>

<ul>
<li><strong>Better separation between layers</strong> - If tomorrow you stop using PHP, and want to move to a servlet, a REST API, or some other service, you don't have to change much of the JavaScript code.</li>
<li><strong>More readable</strong> - JavaScript is JavaScript, PHP is PHP. Without mixing the two, you get more readable code on both languages.</li>
<li><strong>Allows for async data transfer</strong> - Getting the information from PHP might be time/resources expensive. Sometimes you just don't want to wait for the information, load the page, and have the information reach whenever.</li>
<li><strong>Data is not directly found on the markup</strong> - This means that your markup is kept clean of any additional data, and only JavaScript sees it.</li>
</ul>

<h3>Cons</h3>

<ul>
<li><strong>Latency</strong> - AJAX creates an HTTP request, and HTTP requests are carried over network and have network latencies.</li>
<li><strong>State</strong> - Data fetched via a separate HTTP request won't include any information from the HTTP request that fetched the HTML document. You may need this information (e.g. if the HTML document is generated in response to a form submission) and, if you do, will have to transfer it across somehow. If you have ruled out embedding the data in the page (which you have if you are using this technique) then that limits you to cookies/sessions which may be subject to race conditions.</li>
</ul>

<h2>Implementation Example</h2>

<p>With AJAX, you need two pages, one is where PHP generates the output, and the second is where JavaScript gets that output:</p>

<h3>get-data.php</h3>

<pre><code>/* Do some operation here, like talk to the database, the file-session
 * The world beyond, limbo, the city of shimmers, and Canada.
 * 
 * AJAX generally uses strings, but you can output JSON, HTML and XML as well. 
 * It all depends on the Content-type header that you send with your AJAX
 * request. */

echo json_encode(42); //In the end, you need to <strong>echo</strong> the result. 
                      //All data should be <em>json_encode()</em>d.

                      //You can json_encode() any value in PHP, arrays, strings,
                      //even objects.

</code></pre>

<h3>index.php (or whatever the actual page is named like)</h3>

<pre><code>&lt;!-- snip --&gt;
&lt;script&gt;
    function reqListener () {
      console.log(this.responseText);
    }

    var oReq = new XMLHttpRequest(); //New request object
    oReq.onload = function() {
        //This is where you handle what to do with the response.
        //The actual data is found on this.responseText
        alert(this.responseText); //Will alert: 42
    };
    oReq.open(""get"", ""get-data.php"", true);
    //                               ^ Don't block the rest of the execution.
    //                                 Don't wait until the request finishes to 
    //                                 continue.
    oReq.send();
&lt;/script&gt;
&lt;!-- snip --&gt;
</code></pre>

<p>The above combination of the two files will alert <code>42</code> when the file finishes loading.</p>

<h2>Some more reading material</h2>

<ul>
<li><strong><a href=""https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest"" rel=""noreferrer"">Using XMLHttpRequest - MDN</a></strong></li>
<li><strong><a href=""https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest"" rel=""noreferrer"">XMLHttpRequest object reference - MDN</a></strong></li>
<li><strong><a href=""https://stackoverflow.com/questions/14220321/how-to-return-the-response-from-an-ajax-call"">How do I return the response from an asynchronous call?</a></strong></li>
</ul>

<h1>2. Echo the data into the page somewhere, and use JavaScript to get the information from the DOM</h1>

<p>This method is less preferable to AJAX, but it still has its advantages. It's still <em>relatively</em> separated between PHP and JavaScript in a sense that there is no PHP directly in the JavaScript.</p>

<h3>Pros</h3>

<ul>
<li><strong>Fast</strong> - DOM operations are often quick, and you can store and access a lot of data relatively quickly.</li>
</ul>

<h3>Cons</h3>

<ul>
<li><strong>Potentially Unsemantic Markup</strong> - Usually, what happens is that you use some sort of <code>&lt;input type=hidden&gt;</code> to store the information, because it's easier to get the information out of <code>inputNode.value</code>, but doing so means that you have a meaningless element in your HTML. HTML has the <code>&lt;meta&gt;</code> element for data about the document, and HTML 5 introduces <code>data-*</code> attributes for data specifically for reading with JS that can be associated with particular elements.</li>
<li><strong>Dirties up the Source</strong> - Data that PHP generates is outputted directly to the HTML source, meaning that you get a bigger and less focused HTML source.</li>
<li><strong>Harder to get structured data</strong> - Structured data will have to be valid HTML, otherwise you'll have to escape and convert strings yourself.</li>
<li><strong>Tightly couples PHP to your data logic</strong> - Because PHP is used in presentation, you can't separate the two cleanly.</li>
</ul>

<h2>Implementation Example</h2>

<p>With this, the idea is to create some sort of element which will not be displayed to the user, but is visible to JavaScript.</p>

<h3>index.php</h3>

<pre><code>&lt;!-- snip --&gt;
&lt;div id=""dom-target"" style=""display: none;""&gt;
    &lt;?php 
        $output = ""42""; //Again, do some operation, get the output.
        echo htmlspecialchars($output); /* You have to escape because the result
                                           will not be valid HTML otherwise. */
    ?&gt;
&lt;/div&gt;
&lt;script&gt;
    var div = document.getElementById(""dom-target"");
    var myData = div.textContent;
&lt;/script&gt;
&lt;!-- snip --&gt;
</code></pre>

<h1>3. Echo the data directly to JavaScript</h1>

<p>This is probably the easiest to understand, and the most horrible to use. Don't do this unless you know what you're doing.</p>

<h3>Pros</h3>

<ul>
<li><strong>Very easily implemented</strong> - It takes very little to implement this, and understand.</li>
<li><strong>Does not dirty source</strong> - Variables are outputted directly to JavaScript, so the DOM is not affected.</li>
</ul>

<h3>Cons</h3>

<ul>
<li><strong><em>Insecure</em></strong> - PHP has no trivial JavaScript escape functions, and they aren't trivial to implement. Especially when using user inputs, you are <strong>extremely</strong> vulnerable to second tier injections. <strong>Disputed</strong> see comments</li>
<li><strong>Tightly couples PHP to your data logic</strong> - Because PHP is used in presentation, you can't separate the two cleanly.</li>
<li><strong>Structured data is hard</strong> - You can probably do JSON... kinda. But XML and HTML will require special attention.</li>
</ul>

<h2>Implementation Example</h2>

<p>Implementation is relatively straightforward:</p>

<pre><code>&lt;!-- snip --&gt;
&lt;script&gt;
    var data = &lt;?php echo json_encode(""42"", JSON_HEX_TAG); ?&gt;; //Don't forget the extra semicolon!
&lt;/script&gt;
&lt;!-- snip --&gt;
</code></pre>

<p>Good luck!</p>
","23740549"
"Javascript push array values into another array","559163","","<p>I have a javascript array <code>dataArray</code> which I want to push into a new array <code>newArray</code>.  Except I don't want <code>newArray[0]</code> to be <code>dataArray</code>. I want to push in all the values into the new array:</p>

<pre><code>var newArray = [];

newArray.pushValues(dataArray1);
newArray.pushValues(dataArray2);
// ...
</code></pre>

<p>or even better:</p>

<pre><code>var newArray = new Array (
   dataArray1.values(),
   dataArray2.values(),
   // ... where values() (or something equivalent) would push the individual values into the array, rather than the array itself
);
</code></pre>

<p>So now the new array contains all the values of the individual data arrays.  Is there some shorthand like <code>pushValues</code> available so I don't have to iterate over each individual dataArray, adding the values 1 by 1?</p>
","<p>Use the <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/concat"">concat</a> function, like so:</p>

<pre><code>var arrayA = [1, 2];
var arrayB = [3, 4];
var newArray = arrayA.concat(arrayB);
</code></pre>

<p>The value of <code>newArray</code> will be <code>[1, 2, 3, 4]</code> (<code>arrayA</code> and <code>arrayB</code> remain unchanged; <code>concat</code> creates and returns a new array for the result).</p>
","4156145"
"How to connect to SQL Server database from JavaScript in the browser?","556960","","<p>Can anybody give me some sample source code showing how to connect to a SQL Server 2005 database from JavaScript locally? I am learning web programming on my desktop.</p>

<p>Or do I need to use any other scripting language? Suggest some alternatives if you have them, but I am now trying to do it with JavaScript. My SQL Server is locally installed on my desktop — SQL Server Management Studio 2005 and IE7 browser.</p>
","<p>You shouldn´t use client javascript to access databases for several reasons (bad practice, security issues, etc) but if you really want to do this, here is an example:</p>

<pre><code>var connection = new ActiveXObject(""ADODB.Connection"") ;

var connectionstring=""Data Source=&lt;server&gt;;Initial Catalog=&lt;catalog&gt;;User ID=&lt;user&gt;;Password=&lt;password&gt;;Provider=SQLOLEDB"";

connection.Open(connectionstring);
var rs = new ActiveXObject(""ADODB.Recordset"");

rs.Open(""SELECT * FROM table"", connection);
rs.MoveFirst
while(!rs.eof)
{
   document.write(rs.fields(1));
   rs.movenext;
}

rs.close;
connection.close; 
</code></pre>

<p>A better way to connect to a sql server would be to use some server side language like PHP, Java, .NET, among others. Client javascript should be used only for the interfaces.</p>

<p>And there are rumors of an ancient legend about the existence of server javascript, but this is another story. ;)</p>
","857688"
"jQuery/JavaScript: accessing contents of an iframe","554798","","<p>I would like to manipulate the HTML inside an iframe using jQuery.</p>

<p>I thought I'd be able to do this by setting the context of the jQuery function to be the document of the iframe, something like:</p>

<pre><code>$(function(){ //document ready
    $('some selector', frames['nameOfMyIframe'].document).doStuff()
});
</code></pre>

<p>However this doesn't seem to work. A bit of inspection shows me that the variables in <code>frames['nameOfMyIframe']</code> are <code>undefined</code> unless I wait a while for the iframe to load. However, when the iframe loads the variables are not accessible (I get <code>permission denied</code>-type errors).</p>

<p>Does anyone know of a work-around to this?</p>
","<p>I think what you are doing is subject to the <a href=""http://en.wikipedia.org/wiki/Same_origin_policy"" rel=""noreferrer"">same origin policy</a>. This should be the reason why you are getting <em>permission denied type</em> errors.</p>
","364997"
"How can I pretty-print JSON using JavaScript?","554334","","<p>How can I display JSON in an easy-to-read (for human readers) format? I'm looking primarily for indentation and whitespace, with perhaps even colors / font-styles / etc.</p>
","<p><strong><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify"" rel=""noreferrer"">Pretty-printing is implemented natively in <code>JSON.stringify()</code></a></strong>. The third argument enables pretty printing and sets the spacing to use:</p>

<pre><code>var str = JSON.stringify(obj, null, 2); // spacing level = 2
</code></pre>

<p>If you need syntax highlighting, you might use some regex magic like so:</p>

<pre><code>function syntaxHighlight(json) {
    if (typeof json != 'string') {
         json = JSON.stringify(json, undefined, 2);
    }
    json = json.replace(/&amp;/g, '&amp;amp;').replace(/&lt;/g, '&amp;lt;').replace(/&gt;/g, '&amp;gt;');
    return json.replace(/(""(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\""])*""(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g, function (match) {
        var cls = 'number';
        if (/^""/.test(match)) {
            if (/:$/.test(match)) {
                cls = 'key';
            } else {
                cls = 'string';
            }
        } else if (/true|false/.test(match)) {
            cls = 'boolean';
        } else if (/null/.test(match)) {
            cls = 'null';
        }
        return '&lt;span class=""' + cls + '""&gt;' + match + '&lt;/span&gt;';
    });
}
</code></pre>

<p>See in action here: <a href=""http://jsfiddle.net/KJQ9K/554/"" rel=""noreferrer"">jsfiddle</a></p>

<p><strong>Or a full snippet provided below:</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function output(inp) {
    document.body.appendChild(document.createElement('pre')).innerHTML = inp;
}

function syntaxHighlight(json) {
    json = json.replace(/&amp;/g, '&amp;amp;').replace(/&lt;/g, '&amp;lt;').replace(/&gt;/g, '&amp;gt;');
    return json.replace(/(""(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\""])*""(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g, function (match) {
        var cls = 'number';
        if (/^""/.test(match)) {
            if (/:$/.test(match)) {
                cls = 'key';
            } else {
                cls = 'string';
            }
        } else if (/true|false/.test(match)) {
            cls = 'boolean';
        } else if (/null/.test(match)) {
            cls = 'null';
        }
        return '&lt;span class=""' + cls + '""&gt;' + match + '&lt;/span&gt;';
    });
}

var obj = {a:1, 'b':'foo', c:[false,'false',null, 'null', {d:{e:1.3e5,f:'1.3e5'}}]};
var str = JSON.stringify(obj, undefined, 4);

output(str);
output(syntaxHighlight(str));</code></pre>
<pre class=""snippet-code-css lang-css prettyprint-override""><code>pre {outline: 1px solid #ccc; padding: 5px; margin: 5px; }
.string { color: green; }
.number { color: darkorange; }
.boolean { color: blue; }
.null { color: magenta; }
.key { color: red; }</code></pre>
</div>
</div>
</p>
","7220510"
"How to do associative array/hashing in JavaScript","553127","","<p>I want to calculate/store some statistics information using JavaScript, the equivalent code in C# is below (features I need are -- key-value pair, string/int key value pair, manipulate values by keys, etc.), any ideas how to implement the same function in JavaScript? Looks like there is no built-in Dictionary or Hashtable?</p>

<pre><code>Dictionary&lt;string, int&gt; statistics;

statistics[""Foo""] = 10;
statistics[""Goo""] = statistics[""Goo""] + 1;
statistics.Add(""Zoo"", 1);
</code></pre>
","<p>Use <a href=""http://blog.xkoder.com/2008/07/10/javascript-associative-arrays-demystified/"" rel=""noreferrer"">JavaScript objects as associative arrays</a>.</p>

<blockquote>
  <p>Associative Array: In simple words associative arrays use Strings instead of Integer numbers as index.</p>
</blockquote>

<p>Create an object with </p>

<pre><code>var dictionary = {};
</code></pre>

<blockquote>
  <p>Javascript allows you to add properties to objects by using the following syntax:</p>
</blockquote>

<pre><code>Object.yourProperty = value;
</code></pre>

<p>An alternate syntax for the same is:</p>

<pre><code>Object[""yourProperty""] = value;
</code></pre>

<p>If you can also create key to value object maps with the following syntax</p>

<pre><code>var point = { x:3, y:2 };

point[""x""] // =&gt; 3;
point.y // =&gt; 2;
</code></pre>

<blockquote>
  <p>You can iterate through an associative array using the for..in loop construct as follows</p>
</blockquote>

<pre><code>for(key in dict){
  var value = dict[key];
  /* use key/value for intended purpose */
}
</code></pre>
","1208272"
"How to create a dialog with “yes” and “no” options?","547829","","<p>I am going to make a button to take an action and save the data into a database.</p>

<p>Once the user clicks on the button, I want a JavaScript alert to offer “yes” and “cancel” options. If the user selects “yes”, the data will be inserted into the database, otherwise no action will be taken.</p>

<p>How do I display such a dialog?</p>
","<p>You’re probably looking for <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm"" rel=""nofollow noreferrer""><code>confirm()</code></a>, which displays a prompt and returns <code>true</code> or <code>false</code> based on what the user decided:</p>

<pre><code>if (confirm('Are you sure you want to save this thing into the database?')) {
    // Save it!
} else {
    // Do nothing!
}
</code></pre>
","9334684"
"Convert string with commas to array","547740","","<p>How can I convert a string to a JavaScript array?</p>

<p>Look at the code:</p>

<pre><code>var string = ""0,1"";
var array = [string];
alert(array[0]);
</code></pre>

<p>In this case, <code>alert</code> would pop-up a <code>0,1</code>. When it would be an array, it would pop-up a <code>0</code>, and when <code>alert(array[1]);</code> is called, it should pop-up the <code>1</code>.</p>

<p>Is there any chance to convert such string into a JavaScript array?</p>
","<p>For simple array members like that, you can use <code>JSON.parse</code>.</p>

<pre><code>var array = JSON.parse(""["" + string + ""]"");
</code></pre>

<hr>

<p>This gives you an Array of numbers.</p>

<pre><code>[0, 1]
</code></pre>

<p>If you use <code>.split()</code>, you'll end up with an Array of strings.</p>

<pre><code>[""0"", ""1""]
</code></pre>

<hr>

<p>Just be aware that <code>JSON.parse</code> will limit you to the supported data types. If you need values like <code>undefined</code> or functions, you'd need to use <code>eval()</code>, or a JavaScript parser.</p>

<hr>

<p>If you want to use <code>.split()</code>, but you also want an Array of Numbers, you could use <code>Array.prototype.map</code>, though you'd need to shim it for IE8 and lower or just write a traditional loop.</p>

<pre><code>var array = string.split("","").map(Number);
</code></pre>
","13272437"
"How to read a local text file?","546624","","<p>I’m trying to write a simple text file reader by creating a function that takes in the file’s path and converts each line of text into a char array, but it’s not working.</p>

<pre><code>function readTextFile() {
  var rawFile = new XMLHttpRequest();
  rawFile.open(""GET"", ""testing.txt"", true);
  rawFile.onreadystatechange = function() {
    if (rawFile.readyState === 4) {
      var allText = rawFile.responseText;
      document.getElementById(""textSection"").innerHTML = allText;
    }
  }
  rawFile.send();
}
</code></pre>

<p>What is going wrong here?</p>

<p>This still doesn’t seem to work after changing the code a little bit from a <a href=""https://stackoverflow.com/revisions/14446447/1"">previous revision</a> and now it’s giving me an <code>XMLHttpRequest</code> exception 101.</p>

<p>I’ve tested this on Firefox and it works, but in Google Chrome it just won’t work and it keeps giving me an Exception 101. How can I get this to work on not just Firefox, but also on other browsers (especially Chrome)?</p>
","<p>You need to check for status 0 (as when loading files locally with <code>XMLHttpRequest</code>, you don't get a status returned because it's not from a <code>Webserver</code>)</p>

<pre><code>function readTextFile(file)
{
    var rawFile = new XMLHttpRequest();
    rawFile.open(""GET"", file, false);
    rawFile.onreadystatechange = function ()
    {
        if(rawFile.readyState === 4)
        {
            if(rawFile.status === 200 || rawFile.status == 0)
            {
                var allText = rawFile.responseText;
                alert(allText);
            }
        }
    }
    rawFile.send(null);
}
</code></pre>

<p>And specify <code>file://</code> in your filename:</p>

<pre><code>readTextFile(""file:///C:/your/path/to/file.txt"");
</code></pre>
","14446538"
"AngularJS passing data to $http.get request","543631","","<p>I have a function which does a http POST request. The code is specified below. This works fine.</p>

<pre><code> $http({
  url: user.update_path, 
  method: ""POST"",
  data: {user_id: user.id, draft: true}
 });
</code></pre>

<p>I have another function for http GET and i want to send data to that request. But i dont have that option in get.</p>

<pre><code> $http({
  url: user.details_path, 
  method: ""GET"",
  data: {user_id: user.id}
 });
</code></pre>

<p>The syntax for http.get is</p>

<p><strong>get(url, config)</strong></p>

<p>Can someone help me with this.</p>
","<p>An HTTP GET request can't contain data to be posted to the server. However, you can add a query string to the request. </p>

<p>angular.http provides an option for it called <code>params</code>.</p>

<pre><code>$http({
    url: user.details_path, 
    method: ""GET"",
    params: {user_id: user.id}
 });
</code></pre>

<p>See: <a href=""http://docs.angularjs.org/api/ng.$http#get"" rel=""noreferrer"">http://docs.angularjs.org/api/ng.$http#get</a> and <a href=""https://docs.angularjs.org/api/ng/service/$http#usage"" rel=""noreferrer"">https://docs.angularjs.org/api/ng/service/$http#usage</a> (shows the <code>params</code> param)</p>
","13760360"
"Escaping HTML strings with jQuery","543141","","<p>Does anyone know of an easy way to escape HTML from strings in <a href=""http://jquery.com/"" rel=""noreferrer"">jQuery</a>?  I need to be able to pass an arbitrary string and have it properly escaped for display in an HTML page (preventing JavaScript/HTML injection attacks).  I'm sure it's possible to extend jQuery to do this, but I don't know enough about the framework at the moment to accomplish this.</p>
","<p>Since you're using jQuery, you can just set the element's <a href=""http://api.jquery.com/text/"" rel=""noreferrer""><code>text</code></a> property:</p>

<pre><code>// before:
// &lt;div class=""someClass""&gt;text&lt;/div&gt;
var someHtmlString = ""&lt;script&gt;alert('hi!');&lt;/script&gt;"";

// set a DIV's text:
$(""div.someClass"").text(someHtmlString);
// after: 
// &lt;div class=""someClass""&gt;&amp;lt;script&amp;gt;alert('hi!');&amp;lt;/script&amp;gt;&lt;/div&gt;

// get the text in a string:
var escaped = $(""&lt;div&gt;"").text(someHtmlString).html();
// value: 
// &amp;lt;script&amp;gt;alert('hi!');&amp;lt;/script&amp;gt;
</code></pre>
","25207"
"What’s the difference between ""Array()"" and ""[]"" while declaring a JavaScript array?","542892","","<p>What's the real difference between declaring an array like this:</p>

<pre><code>var myArray = new Array();
</code></pre>

<p>and</p>

<pre><code>var myArray = [];
</code></pre>
","<p>There is a difference, but there is no difference in that example.</p>

<p>Using the more verbose method: <code>new Array()</code> does have one extra option in the parameters: if you pass a number to the constructor, you will get an array of that length:</p>

<pre><code>x = new Array(5);
alert(x.length); // 5
</code></pre>

<p>To illustrate the different ways to create an array:</p>

<pre><code>var a = [],            // these are the same
    b = new Array(),   // a and b are arrays with length 0

    c = ['foo', 'bar'],           // these are the same
    d = new Array('foo', 'bar'),  // c and d are arrays with 2 strings

    // these are different:
    e = [3]             // e.length == 1, e[0] == 3
    f = new Array(3),   // f.length == 3, f[0] == undefined

;
</code></pre>
","931875"
"JavaScript set focus to HTML form element","540031","","<p>I have a web form with a text box in it. How do I go about setting focus to the text box by default?</p>

<p>something like this:</p>

<pre><code>&lt;body onload='setFocusToTextBox()'&gt;
</code></pre>

<p>so can anybody help me with it? I don't know how to set focus to the text box with JavaScript.</p>

<pre><code>&lt;script&gt;
function setFocusToTextBox(){
//What to do here
}
&lt;/script&gt;
</code></pre>
","<p>Do this.</p>

<p>If your element is something like this..</p>

<pre><code>&lt;input type=""text"" id=""mytext""/&gt;
</code></pre>

<p>Your script would be</p>

<pre><code>&lt;script&gt;
function setFocusToTextBox(){
    document.getElementById(""mytext"").focus();
}
&lt;/script&gt;
</code></pre>
","17500718"
"In jQuery, how do I select an element by its name attribute?","534118","","<p>I have 3 radio buttons in my web page, like below:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;label for=""theme-grey""&gt;
  &lt;input type=""radio"" id=""theme-grey"" name=""theme"" value=""grey"" /&gt;Grey&lt;/label&gt;
&lt;label for=""theme-pink""&gt;
  &lt;input type=""radio"" id=""theme-pink"" name=""theme"" value=""pink"" /&gt;Pink&lt;/label&gt;
&lt;label for=""theme-green""&gt;
  &lt;input type=""radio"" id=""theme-green"" name=""theme"" value=""green"" /&gt;Green&lt;/label&gt;</code></pre>
</div>
</div>
</p>

<p>In jQuery, I want to get the value of the selected radio button when any of these three are clicked. In jQuery we have id (#) and class (.) selectors, but what if I want to find a radio button by its name, as below?</p>

<pre><code>$(""&lt;radiobutton name attribute&gt;"").click(function(){});
</code></pre>

<p>Please tell me how to solve this problem.</p>
","<p>This should do it, all of this is in the <a href=""http://docs.jquery.com/Selectors/attributeEquals#attributevalue"" rel=""noreferrer"">documentation</a>, which has a very similar example to this:</p>

<pre><code>$(""input:radio[name=theme]"").click(function() {
    var value = $(this).val();
});
</code></pre>

<p>I should also note you have multiple identical IDs in that snippet. This is invalid HTML. Use classes to group set of elements, not IDs, as they should be unique.</p>
","986134"
"How to send FormData objects with Ajax-requests in jQuery?","533699","","<p>The <a href=""http://www.w3.org/TR/XMLHttpRequest2/"" rel=""noreferrer"">XMLHttpRequest Level 2</a> standard (still a working draft) defines the <code>FormData</code> interface. This interface enables appending <code>File</code> objects to XHR-requests (Ajax-requests).</p>

<p>Btw, this is a new feature - in the past, the ""hidden-iframe-trick"" was used (read about that in <a href=""https://stackoverflow.com/questions/6718664/is-it-possible-to-peform-an-asynchronous-cross-domain-file-upload/6963843"">my other question</a>).</p>

<p>This is how it works (example):</p>

<pre><code>var xhr = new XMLHttpRequest(),
    fd = new FormData();

fd.append( 'file', input.files[0] );
xhr.open( 'POST', 'http://example.com/script.php', true );
xhr.onreadystatechange = handler;
xhr.send( fd );
</code></pre>

<p>where <code>input</code> is a <code>&lt;input type=""file""&gt;</code> field, and <code>handler</code> is the success-handler for the Ajax-request.</p>

<p>This works beautifully in all browsers (again, except IE).</p>

<p>Now, I would like to make this functionality work with jQuery. I tried this:</p>

<pre><code>var fd = new FormData();    
fd.append( 'file', input.files[0] );

$.post( 'http://example.com/script.php', fd, handler );
</code></pre>

<p>Unfortunately, that won't work (an ""Illegal invocation"" error is thrown - <a href=""https://i.imgur.com/Uy8Xu.png"" rel=""noreferrer"">screenshot is here</a>). I assume jQuery expects a simple key-value object representing form-field-names / values, and the <code>FormData</code> instance that I'm passing in is apparently incompatible.</p>

<p>Now, since it is possible to pass a <code>FormData</code> instance into <code>xhr.send()</code>, I hope that it is also possible to make it work with jQuery.</p>

<hr>

<p><strong>Update:</strong></p>

<p>I've created a ""feature ticket"" over at jQuery's Bug Tracker. It's here: <a href=""http://bugs.jquery.com/ticket/9995"" rel=""noreferrer"">http://bugs.jquery.com/ticket/9995</a></p>

<p>I was suggested to use an ""Ajax prefilter""...</p>

<hr>

<p><strong>Update:</strong></p>

<p>First, let me give a demo demonstrating what behavior I would like to achieve. </p>

<p>HTML:</p>

<pre><code>&lt;form&gt;
    &lt;input type=""file"" id=""file"" name=""file""&gt;
    &lt;input type=""submit""&gt;
&lt;/form&gt;
</code></pre>

<p>JavaScript:</p>

<pre><code>$( 'form' ).submit(function ( e ) {
    var data, xhr;

    data = new FormData();
    data.append( 'file', $( '#file' )[0].files[0] );

    xhr = new XMLHttpRequest();

    xhr.open( 'POST', 'http://hacheck.tel.fer.hr/xml.pl', true );
    xhr.onreadystatechange = function ( response ) {};
    xhr.send( data );

    e.preventDefault();
});
</code></pre>

<p>The above code results in this HTTP-request:</p>

<p><img src=""https://i.stack.imgur.com/YJYPm.png"" alt=""multipartformdata""></p>

<p><strong>This is what I need</strong> - I want that ""multipart/form-data"" content-type!</p>

<hr>

<p>The proposed solution would be like so:</p>

<pre><code>$( 'form' ).submit(function ( e ) {
    var data;

    data = new FormData();
    data.append( 'file', $( '#file' )[0].files[0] );

    $.ajax({
        url: 'http://hacheck.tel.fer.hr/xml.pl',
        data: data,
        processData: false,
        type: 'POST',
        success: function ( data ) {
            alert( data );
        }
    });

    e.preventDefault();
});
</code></pre>

<p>However, this results in:</p>

<p><img src=""https://i.stack.imgur.com/uU2Gi.png"" alt=""wrongcontenttype""></p>

<p>As you can see, the content type is wrong...</p>
","<p>I believe you could do it like this : </p>

<pre><code>var fd = new FormData();    
fd.append( 'file', input.files[0] );

$.ajax({
  url: 'http://example.com/script.php',
  data: fd,
  processData: false,
  contentType: false,
  type: 'POST',
  success: function(data){
    alert(data);
  }
});
</code></pre>

<p>Setting <code>processData</code> to false lets you prevent jQuery from automatically transforming the data into a query string. See <a href=""http://api.jquery.com/jQuery.ajax/"" rel=""noreferrer"">the docs</a> for more info.</p>

<p>Setting the <code>contentType</code> to false is imperative, since otherwise jQuery <a href=""https://stackoverflow.com/a/5976031/33080"">will set it incorrectly</a>.</p>
","8244082"
"Copying array by value in JavaScript","533665","","<p>When copying an array in JavaScript to another array:</p>

<pre><code>var arr1 = ['a','b','c'];
var arr2 = arr1;
arr2.push('d');  //Now, arr1 = ['a','b','c','d']
</code></pre>

<p>I realized that <code>arr2</code> refers to the same array as <code>arr1</code>, rather than a new, independent array. How can I copy the array to get two independent arrays?</p>
","<p>Use this:</p>

<pre><code>var newArray = oldArray.slice();
</code></pre>

<p>Basically, the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice"" rel=""noreferrer"">slice()</a> operation clones the array and returns the reference to the new array.  Also note that:</p>

<p>For references, strings and numbers (and not the actual object), slice copies object references into the new array. Both the original and new array refer to the same object. If a referenced object changes, the changes are visible to both the new and original arrays.</p>

<p>Primitives such as strings and numbers are immutable so changes to the string or number are impossible. </p>
","7486130"
"Loading local JSON file","533589","","<p>I'm trying to load a local JSON file but it won't work. Here is my JavaScript code (using jQuery:</p>

<pre><code>var json = $.getJSON(""test.json"");
var data = eval(""("" +json.responseText + "")"");
document.write(data[""a""]);
</code></pre>

<p>The test.json file:</p>

<pre><code>{""a"" : ""b"", ""c"" : ""d""}
</code></pre>

<p>Nothing is displayed and Firebug tells me that data is undefined. In Firebug I can see <code>json.responseText</code> and it is good and valid, but it's strange when I copy the line:</p>

<pre><code> var data = eval(""("" +json.responseText + "")"");
</code></pre>

<p>in Firebug's console, it works and I can access data.</p>

<p>Anyone have a solution?</p>
","<p><a href=""http://api.jquery.com/jQuery.getJSON/"" rel=""noreferrer""><code>$.getJSON</code></a> is asynchronous so you should do:</p>

<pre><code>$.getJSON(""test.json"", function(json) {
    console.log(json); // this will show the info it in firebug console
});
</code></pre>
","7346598"
"Add Header in AJAX Request with jQuery","533323","","<p>I would like to add a custom header to an AJAX POST request from jQuery.</p>

<p>I have tried this: </p>

<pre><code>$.ajax({
    type: 'POST',
    url: url,
    headers: {
        ""My-First-Header"":""first value"",
        ""My-Second-Header"":""second value""
    }
    //OR
    //beforeSend: function(xhr) { 
    //  xhr.setRequestHeader(""My-First-Header"", ""first value""); 
    //  xhr.setRequestHeader(""My-Second-Header"", ""second value""); 
    //}
}).done(function(data) { 
    alert(data);
});
</code></pre>

<p>When I send this request and I watch with FireBug, I see this header: </p>

<blockquote>
  <p>OPTIONS xxxx/yyyy HTTP/1.1<br/>
      Host: 127.0.0.1:6666<br/>
      User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:11.0) Gecko/20100101 Firefox/11.0<br/>
      Accept: text/html,application/xhtml+xml,application/xml;q=0.9,<em>/</em>;q=0.8<br/>
      Accept-Language: fr,fr-fr;q=0.8,en-us;q=0.5,en;q=0.3<br/>
      Accept-Encoding: gzip, deflate<br/>
      Connection: keep-alive<br/>
      Origin: null<br/>
      Access-Control-Request-Method: POST<br/>
      <strong>Access-Control-Request-Headers: my-first-header,my-second-header</strong><br/>
      Pragma: no-cache<br/>
      Cache-Control: no-cache<br/></p>
</blockquote>

<p>Why do my custom headers go to <code>Access-Control-Request-Headers</code>: </p>

<blockquote>
  <p>Access-Control-Request-Headers: my-first-header,my-second-header</p>
</blockquote>

<p>I was expecting a header values like this: </p>

<blockquote>
  <p>My-First-Header: first value<br/>
     My-Second-Header: second value</p>
</blockquote>

<p>Is it possible?</p>
","<p>What you saw in Firefox was not the actual request; note that the HTTP method is OPTIONS, not POST.  It was actually the 'pre-flight' request that the browser makes to determine whether a cross-domain AJAX request should be allowed:</p>

<p><a href=""http://www.w3.org/TR/cors/"">http://www.w3.org/TR/cors/</a></p>

<p>The Access-Control-Request-Headers header in the pre-flight request includes the list of headers in the actual request.  The server is then expected to report back whether these headers are supported in this context or not, before the browser submits the actual request.</p>
","12345096"
"How to find if an array contains a specific string in JavaScript/jQuery?","532623","","<p>Can someone tell me how to detect if <code>""specialword""</code> appears in an array? Example:</p>

<pre><code>categories: [
    ""specialword""
    ""word1""
    ""word2""
]
</code></pre>
","<p>You really don't need jQuery for this.</p>

<pre><code>var myarr = [""I"", ""like"", ""turtles""];
var arraycontainsturtles = (myarr.indexOf(""turtles"") &gt; -1);
</code></pre>

<p>or</p>

<pre><code>function arrayContains(needle, arrhaystack)
{
    return (arrhaystack.indexOf(needle) &gt; -1);
}
</code></pre>

<p>It's worth noting that <code>array.indexOf(..)</code> is <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf#Browser_compatibility"" rel=""noreferrer"">not supported in IE &lt; 9</a>, but jQuery's <code>indexOf(...)</code> function will work even for those older versions.  </p>
","15276975"
"Formatting a number with exactly two decimals in JavaScript","531655","","<p>I have this line of code which rounds my numbers to two decimal places. But I get numbers like this: 10.8, 2.4, etc. These are not my idea of two decimal places so how I can improve the following?</p>

<pre><code>Math.round(price*Math.pow(10,2))/Math.pow(10,2);
</code></pre>

<p>I want numbers like 10.80, 2.40, etc. Use of jQuery is fine with me.</p>
","<p>To format a number using fixed-point notation, you can simply use the <a href=""https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Number/toFixed"" rel=""noreferrer"">toFixed</a> method:</p>

<pre><code>(10.8).toFixed(2); // ""10.80""

var num = 2.4;
alert(num.toFixed(2)); // ""2.40""
</code></pre>

<p>Note that <code>toFixed()</code> returns a string.</p>

<p><strong>IMPORTANT</strong>: Note that toFixed does not actually round, 90% of the time, it will return the rounded value but for many cases it doesn't actually work. Try this in your console:</p>

<p><code>2.005.toFixed(2)</code></p>

<p>You will get the wrong answer</p>

<p>There is no natural way of getting a decimal rounding in javascript, you will need your own polyfill or use a library. You can look at mozilla's polyfill for this <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round"" rel=""noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round</a></p>
","1726662"
"Smooth scrolling when clicking an anchor link","530784","","<p>I have a couple of hyperlinks on my page. A FAQ that users will read when they visit my help section.</p>

<p>Using Anchor links, I can make the page scroll towards the anchor and guide the users there.</p>

<p>Is there a way to make that scrolling smooth?</p>

<p>But notice that he's using a custom JavaScript library. Maybe jQuery offers somethings like this baked in?</p>
","<pre><code>$(document).on('click', 'a[href^=""#""]', function (event) {
    event.preventDefault();

    $('html, body').animate({
        scrollTop: $($.attr(this, 'href')).offset().top
    }, 500);
});
</code></pre>

<p>And here's the fiddle: <a href=""http://jsfiddle.net/9SDLw/"" rel=""noreferrer"">http://jsfiddle.net/9SDLw/</a></p>

<hr>

<p>If your target element does not have an ID, and you're linking to it by its <code>name</code>, use this:</p>

<pre><code>$('a[href^=""#""]').click(function () {
    $('html, body').animate({
        scrollTop: $('[name=""' + $.attr(this, 'href').substr(1) + '""]').offset().top
    }, 500);

    return false;
});
</code></pre>

<hr>

<p>For increased performance, you should cache that <code>$('html, body')</code> selector, so that it doesn't run <em>every single time</em> an anchor is clicked:</p>

<pre><code>var $root = $('html, body');

$('a[href^=""#""]').click(function () {
    $root.animate({
        scrollTop: $( $.attr(this, 'href') ).offset().top
    }, 500);

    return false;
});
</code></pre>

<hr>

<p>If you want the URL to be updated, do it within the <code>animate</code> callback:</p>

<pre><code>var $root = $('html, body');

$('a[href^=""#""]').click(function() {
    var href = $.attr(this, 'href');

    $root.animate({
        scrollTop: $(href).offset().top
    }, 500, function () {
        window.location.hash = href;
    });

    return false;
});
</code></pre>
","7717572"
"JavaScript isset() equivalent","530650","","<p>In PHP you can do <code>if(isset($array['foo'])) { ... }</code>. In JavaScript you often use <code>if(array.foo) { ... }</code> to do the same, but this is not exactly the same statement. The condition will also evaluate to false if <code>array.foo</code> does exists but is <code>false</code> or <code>0</code> (and probably other values as well).</p>

<p>What is the perfect equivalent of PHP's <code>isset</code> in JavaScript?</p>

<p>In a broader sense, a general, complete guide on JavaScript's handling of variables that don't exist, variables without a value, etc. would be convenient.</p>
","<p>I generally use the <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Operators/typeof"" rel=""noreferrer""><code>typeof</code></a> operator:    </p>

<pre><code>if (typeof obj.foo !== 'undefined') {
  // your code here
}
</code></pre>

<p>It will return <code>""undefined""</code> either if the property doesn't exist or its value is <code>undefined</code>.</p>

<p><sub>(See also: <a href=""https://stackoverflow.com/questions/3420071/difference-between-undefined-and-not-being-defined-in-javascript/3420160#3420160"">Difference between <code>undefined</code> and not being defined.</a>)</sub></p>

<p>There are other ways to figure out if a property exists on an object, like the <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/HasOwnProperty"" rel=""noreferrer""><code>hasOwnProperty</code></a> method:</p>

<pre><code>if (obj.hasOwnProperty('foo')) {
  // your code here
}
</code></pre>

<p>And the <code>in</code> operator:</p>

<pre><code>if ('foo' in obj) {
  // your code here
}
</code></pre>

<p>The difference between the last two is that the <code>hasOwnProperty</code> method will check if the property exist <em>physically</em> on the object (the property is not inherited).</p>

<p>The <code>in</code> operator will check on all the properties reachable up in the prototype chain, e.g.:</p>

<pre><code>var obj = { foo: 'bar'};

obj.hasOwnProperty('foo'); // true
obj.hasOwnProperty('toString'); // false
'toString' in obj; // true
</code></pre>

<p>As you can see, <code>hasOwnProperty</code> returns <code>false</code> and the <code>in</code> operator returns <code>true</code> when checking the <code>toString</code> method, this method is defined up in the prototype chain, because <code>obj</code> inherits form <code>Object.prototype</code>.</p>
","2281671"
"Setting background-image using jQuery CSS property","530489","","<p>I have an image URL in a <code>imageUrl</code> variable and I am trying to set it as CSS style, using jQuery:</p>

<pre><code>$('myObject').css('background-image', imageUrl);
</code></pre>

<p>This seems to be not working, as:</p>

<pre><code>console.log($('myObject').css('background-image'));
</code></pre>

<p>returns <code>none</code>.</p>

<p>Any idea, what I am doing wrong?</p>
","<p>You probably want this (to make it like a normal CSS background-image declaration):</p>

<pre><code>$('myOjbect').css('background-image', 'url(' + imageUrl + ')');
</code></pre>
","512067"
"How to get current date in jquery?","528732","","<p>I want to know how to use the Date() function in jQuery to get the current date in a <code>yyyy/mm/dd</code> format.</p>
","<p><code>Date()</code> is not part of <code>jQuery</code>, it is one of JavaScript's features.</p>

<p>See <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date"" rel=""noreferrer"">the documentation on Date object</a>.</p>

<p>You can do it like that:</p>

<pre><code>var d = new Date();

var month = d.getMonth()+1;
var day = d.getDate();

var output = d.getFullYear() + '/' +
    (month&lt;10 ? '0' : '') + month + '/' +
    (day&lt;10 ? '0' : '') + day;
</code></pre>

<p>See <a href=""http://jsfiddle.net/nCE9u/"" rel=""noreferrer"">this jsfiddle</a> for a proof.</p>

<p>The code may look like a complex one, because it must deal with months &amp; days being represented by numbers less than <code>10</code> (meaning the strings will have one char instead of two). See <a href=""http://jsfiddle.net/nCE9u/1/"" rel=""noreferrer"">this jsfiddle</a> for comparison.</p>
","8398929"
"Scroll to bottom of div?","528513","","<p>I am creating a chat using ajax requests in rails and I'm trying to get a div to scroll to the bottom without much luck.</p>

<p>I am wrapping everything in this div:</p>

<pre><code>#scroll {
    height:400px;
    overflow:scroll;
}
</code></pre>

<p>Is there a way to keep it scrolled to the bottom by default using JS?</p>

<p>Is there a way to keep it scrolled to the bottom after an ajax request?</p>
","<p>Here's what I use on my site (I didn't write it, I just found it somewhere since I don't know Javascript too well.)</p>

<pre><code>var objDiv = document.getElementById(""your_div"");
objDiv.scrollTop = objDiv.scrollHeight;
</code></pre>
","270628"
"How to break/exit from a each() function in JQuery?","523423","","<p>I have some code:</p>

<pre><code>$(xml).find(""strengths"").each(function() {
   //Code
   //How can i escape from this block based on a condition.
});
</code></pre>

<p>How can i escape from the ""each"" code block based on a condition?</p>

<h3>Update:</h3>

<p>What if we have something like this:</p>

<pre><code>$(xml).find(""strengths"").each(function() {
   $(this).each(function() {
       //I want to break out from both each loops at the same time.
   });
});
</code></pre>

<p>Is it possible to break out from both ""each"" functions from the inner ""each"" function?</p>

<p><strong># 19.03.2013</strong></p>

<p><strong>If you want to continue instead of break out</strong></p>

<pre><code>return true;
</code></pre>
","<p>According to the <a href=""http://docs.jquery.com/Utilities/jQuery.each"" rel=""noreferrer"">documentation</a> you can simply <code>return false;</code> to break:</p>

<pre><code>$(xml).find(""strengths"").each(function() {

    if (iWantToBreak)
        return false;
});
</code></pre>
","1799290"
"Object comparison in JavaScript","523336","","<p>What is the best way to compare objects in JavaScript?</p>

<p>Example:</p>

<pre><code>var user1 = {name : ""nerd"", org: ""dev""};
var user2 = {name : ""nerd"", org: ""dev""};
var eq = user1 == user2;
alert(eq); // gives false
</code></pre>

<p>I know that <strong>two objects are equal if they refer to the exact same object</strong>, but is there a way to check if they have the same attributes' values?</p>

<p>The following way works for me, but is it the only possibility?</p>

<pre><code>var eq = Object.toJSON(user1) == Object.toJSON(user2);
alert(eq); // gives true
</code></pre>
","<p>Unfortunately there is no perfect way, unless you use <code>_proto_</code> recursively and access all non-enumerable properties, but this works in Firefox only.</p>

<p>So the best I can do is to guess usage scenarios.</p>

<hr>

<h2><strong>1) Fast and limited.</strong></h2>

<p>Works when you have simple JSON-style objects without methods and DOM nodes inside:</p>

<pre><code> JSON.stringify(obj1) === JSON.stringify(obj2) 
</code></pre>

<p>The ORDER of the properties IS IMPORTANT, so this method will return false for following objects:</p>

<pre><code> x = {a: 1, b: 2};
 y = {b: 2, a: 1};
</code></pre>

<hr>

<h2><strong>2) Slow and more generic.</strong></h2>

<p>Compares objects without digging into prototypes, then compares properties' projections recursively, and also compares constructors.</p>

<p>This is almost correct algorithm:</p>

<pre><code>function deepCompare () {
  var i, l, leftChain, rightChain;

  function compare2Objects (x, y) {
    var p;

    // remember that NaN === NaN returns false
    // and isNaN(undefined) returns true
    if (isNaN(x) &amp;&amp; isNaN(y) &amp;&amp; typeof x === 'number' &amp;&amp; typeof y === 'number') {
         return true;
    }

    // Compare primitives and functions.     
    // Check if both arguments link to the same object.
    // Especially useful on the step where we compare prototypes
    if (x === y) {
        return true;
    }

    // Works in case when functions are created in constructor.
    // Comparing dates is a common scenario. Another built-ins?
    // We can even handle functions passed across iframes
    if ((typeof x === 'function' &amp;&amp; typeof y === 'function') ||
       (x instanceof Date &amp;&amp; y instanceof Date) ||
       (x instanceof RegExp &amp;&amp; y instanceof RegExp) ||
       (x instanceof String &amp;&amp; y instanceof String) ||
       (x instanceof Number &amp;&amp; y instanceof Number)) {
        return x.toString() === y.toString();
    }

    // At last checking prototypes as good as we can
    if (!(x instanceof Object &amp;&amp; y instanceof Object)) {
        return false;
    }

    if (x.isPrototypeOf(y) || y.isPrototypeOf(x)) {
        return false;
    }

    if (x.constructor !== y.constructor) {
        return false;
    }

    if (x.prototype !== y.prototype) {
        return false;
    }

    // Check for infinitive linking loops
    if (leftChain.indexOf(x) &gt; -1 || rightChain.indexOf(y) &gt; -1) {
         return false;
    }

    // Quick checking of one object being a subset of another.
    // todo: cache the structure of arguments[0] for performance
    for (p in y) {
        if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {
            return false;
        }
        else if (typeof y[p] !== typeof x[p]) {
            return false;
        }
    }

    for (p in x) {
        if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {
            return false;
        }
        else if (typeof y[p] !== typeof x[p]) {
            return false;
        }

        switch (typeof (x[p])) {
            case 'object':
            case 'function':

                leftChain.push(x);
                rightChain.push(y);

                if (!compare2Objects (x[p], y[p])) {
                    return false;
                }

                leftChain.pop();
                rightChain.pop();
                break;

            default:
                if (x[p] !== y[p]) {
                    return false;
                }
                break;
        }
    }

    return true;
  }

  if (arguments.length &lt; 1) {
    return true; //Die silently? Don't know how to handle such case, please help...
    // throw ""Need two or more arguments to compare"";
  }

  for (i = 1, l = arguments.length; i &lt; l; i++) {

      leftChain = []; //Todo: this can be cached
      rightChain = [];

      if (!compare2Objects(arguments[0], arguments[i])) {
          return false;
      }
  }

  return true;
}
</code></pre>

<p>Known issues (well, they have very low priority, probably you'll never notice them):</p>

<ul>
<li>objects with different prototype structure but same projection</li>
<li>functions may have identical text but refer to different closures</li>
</ul>

<p><strong>Tests:</strong> passes tests are from <em><a href=""https://stackoverflow.com/a/16788517/139361"">How to determine equality for two JavaScript objects?</a></em>.</p>
","1144249"
"How to check if element exists in the visible DOM?","523193","","<p>How do you test an element for existence without the use of the <code>getElementById</code> method? I have setup a <a href=""http://jsbin.com/apawi5/3"" rel=""noreferrer"">live demo</a> for reference. I will also print the code on here as well:</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;script&gt;
    var getRandomID = function (size) {
            var str = """",
                i = 0,
                chars = ""0123456789abcdefghijklmnopqurstuvwxyzABCDEFGHIJKLMNOPQURSTUVWXYZ"";
            while (i &lt; size) {
                str += chars.substr(Math.floor(Math.random() * 62), 1);
                i++;
            }
            return str;
        },
        isNull = function (element) {
            var randomID = getRandomID(12),
                savedID = (element.id)? element.id : null;
            element.id = randomID;
            var foundElm = document.getElementById(randomID);
            element.removeAttribute('id');
            if (savedID !== null) {
                element.id = savedID;
            }
            return (foundElm) ? false : true;
        };
    window.onload = function () {
        var image = document.getElementById(""demo"");
        console.log('undefined', (typeof image === 'undefined') ? true : false); // false
        console.log('null', (image === null) ? true : false); // false
        console.log('find-by-id', isNull(image)); // false
        image.parentNode.removeChild(image);
        console.log('undefined', (typeof image === 'undefined') ? true : false); // false ~ should be true?
        console.log('null', (image === null) ? true : false); // false ~ should be true?
        console.log('find-by-id', isNull(image)); // true ~ correct but there must be a better way than this?
    };
    &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div id=""demo""&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>Basically what the above code demonstrates is an element being stored into a variable and then removed from dom. Even though the element has been removed from the dom, the variable retains the element as it was when first declared. In other words, it is not a live reference to the element itself, but rather a replica. As a result, checking the variable's value (the element) for existence will provide an unexpected result.</p>

<p>The <code>isNull</code> function is my attempt to check for an elements existence from a variable, and it works, but I would like to know if there is an easier way to accomplish the same result.</p>

<p>PS: I'm also interested in why JavaScript variables behave like this if anyone knows of some good articles related to the subject.</p>
","<p>It seems some people are landing here, and simply want to know if an element <em>exists</em> (a little bit different to the original question).</p>

<p>That's as simple as using any of the browser's selecting method, and checking it for a <em>truthy</em> value (generally).</p>

<p>For example, if my element had an <code>id</code> of <code>""find-me""</code>, I could simply use...</p>

<pre><code>var elementExists = document.getElementById(""find-me"");
</code></pre>

<p>This is spec'd to either return a reference to the element or <code>null</code>. If you must have a Boolean value, simply toss a <code>!!</code> before the method call.</p>

<p>In addition, you can use some of the many other methods that exist for finding elements, such as (all living off <code>document</code>):</p>

<ul>
<li><code>querySelector()</code>/<code>querySelectorAll()</code></li>
<li><code>getElementsByClassName()</code></li>
<li><code>getElementsByName()</code></li>
</ul>

<p>Some of these methods return a <code>NodeList</code>, so be sure to check its <code>length</code> property, because a <code>NodeList</code> is an object, and therefore <em>truthy</em>.</p>

<hr>

<p>For actually determining if an element exists as part of the visible DOM (like the question originally asked), <a href=""https://stackoverflow.com/a/16820058/31671"">Csuwldcat provides a better solution than rolling your own</a> (as this answer used to contain). That is, to use the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Node.contains"" rel=""noreferrer""><code>contains()</code></a> method on DOM elements.</p>

<p>You could use it like so...</p>

<pre><code>document.body.contains(someReferenceToADomElement);
</code></pre>
","5629730"
"jQuery to loop through elements with the same class","519203","","<p>I have a load of divs with the class <code>testimonial</code> and I want to use jquery to loop through them to check for each div if a specific condition is true. If it is true, it should perform an action.</p>

<p>Does anyone know how I would do this?</p>
","<p>Use each: '<code>i</code>' is the postion in the array, <code>obj</code> is the DOM object that you are iterating (can be accessed through the jQuery wrapper <code>$(this)</code> as well).</p>

<pre><code>$('.testimonial').each(function(i, obj) {
    //test
});
</code></pre>

<p>Check the <a href=""http://api.jquery.com/each/"" rel=""noreferrer"">api reference</a> for more information.</p>
","4735360"
"How do I link a JavaScript file to a HTML file?","518109","","<p>How do you properly link a JavaScript file to a HTML document?</p>

<p>Secondly, how do you use jQuery within a JavaScript file?</p>
","<p>First you need to download JQuery library from <a href=""http://jquery.com/"">http://jquery.com/</a> then 
load the jquery library the following way within your html head tags</p>

<p>then you can test whether the jquery is working by coding your jquery code after the jquery loading script</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html xmlns=""http://www.w3.org/1999/xhtml""&gt;
&lt;head&gt;
&lt;script type=""text/javascript"" src=""jquery-1.8.3.js""&gt;&lt;/script&gt;
&lt;script type=""text/javascript""&gt;
   $(function(){
      alert(""My First Jquery Test"");
   });
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>If you want to use your jquery scripts file seperately you must define the external .js file this way after the jquery library loading.</p>

<pre><code>&lt;script type=""text/javascript"" src=""jquery-1.8.3.js""&gt;&lt;/script&gt;
&lt;script src=""js/YourExternalJQueryScripts.js""&gt;&lt;/script&gt;
</code></pre>
","13739791"
"Full-screen iframe with a height of 100%","515219","","<p>Is iframe height=100% supported in all browsers?</p>

<p>I am using doctype as:</p>

<pre><code>&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
   ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd""&gt;
</code></pre>

<p>In my iframe code, if I say:</p>

<pre><code>&lt;iframe src=""xyz.pdf"" width=""100%"" height=""100%"" /&gt;
</code></pre>

<p>I mean will it actually take the height of the remaining page (as there is another frame on top with fixed height of 50px)
Is this supported in all major browsers (IE/Firefox/Safari) ?</p>

<p>Also regarding scrollbars, even though I say <code>scrolling=""no""</code>, I can see disabled scrollbars in Firefox...How do I completely hide scrollbars and set the iframe height automatically?</p>
","<p>You could use frameset as the previous answer states but if you are insistent on using iFrames, the 2 following examples should work:</p>

<pre><code>&lt;body style=""margin:0px;padding:0px;overflow:hidden""&gt;
    &lt;iframe src=""http://www.youraddress.com"" frameborder=""0"" style=""overflow:hidden;height:100%;width:100%"" height=""100%"" width=""100%""&gt;&lt;/iframe&gt;
&lt;/body&gt;
</code></pre>

<p>An alternative:</p>

<pre><code>&lt;body style=""margin:0px;padding:0px;overflow:hidden""&gt;
    &lt;iframe src=""http://www.youraddress.com"" frameborder=""0"" style=""overflow:hidden;overflow-x:hidden;overflow-y:hidden;height:100%;width:100%;position:absolute;top:0px;left:0px;right:0px;bottom:0px"" height=""100%"" width=""100%""&gt;&lt;/iframe&gt;
&lt;/body&gt;
</code></pre>

<p>To hide scrolling with 2 alternatives as shown above:</p>

<pre><code>&lt;body style=""margin:0px;padding:0px;overflow:hidden""&gt;
    &lt;iframe src=""http://www.youraddress.com"" frameborder=""0"" style=""overflow:hidden;height:150%;width:150%"" height=""150%"" width=""150%""&gt;&lt;/iframe&gt;
&lt;/body&gt;
</code></pre>

<p>Hack with the second example:</p>

<pre><code>&lt;body style=""margin:0px;padding:0px;overflow:hidden""&gt;
    &lt;iframe src=""http://www.youraddress.com"" frameborder=""0"" style=""overflow:hidden;overflow-x:hidden;overflow-y:hidden;height:150%;width:150%;position:absolute;top:0px;left:0px;right:0px;bottom:0px"" height=""150%"" width=""150%""&gt;&lt;/iframe&gt;
&lt;/body&gt;
</code></pre>

<p>To hide the scroll-bars of the iFrame, the parent is made <code>overflow: hidden</code> to hide scrollbars and the iFrame is made to go upto 150% width and height which forces the scroll-bars outside the page and since the body doesn't have scroll-bars one may not expect the iframe to be exceeding the bounds of the page. This hides the scrollbars of the iFrame with full width!</p>
","5868263"
"How to add a tooltip to a div","514770","","<p>I have a div tag as follows:</p>

<pre><code>&lt;html&gt;
    &lt;head&gt;&lt;/head&gt;
    &lt;body&gt;
        &lt;div&gt;
            &lt;label&gt;Name&lt;/label&gt;
            &lt;input type=""text""/&gt;
        &lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>Now I want a simple javascript for displaying a tooltip on :hover the div. Can someone please help me out? The tooltip should also have a fade in/out effect.</p>
","<p>For the basic tooltip, you want:</p>

<pre><code>&lt;div title=""This is my tooltip""&gt;
</code></pre>

<p>For a fancier javascript version, you can look into:</p>

<p><a href=""http://www.designer-daily.com/jquery-prototype-mootool-tooltips-12632"" rel=""noreferrer"">http://www.designer-daily.com/jquery-prototype-mootool-tooltips-12632</a></p>

<p>The above link gives you 12 options for tooltips.</p>
","7117107"
"Format date to MM/dd/yyyy in JavaScript","514169","","<p>I have a dateformat like this <code>'2010-10-11T00:00:00+05:30'</code>. I have to format in to <code>MM/dd/yyyy</code> using JavaScript or jQuery . Anyone help me to do the same.</p>
","<p>Try this; bear in mind that JavaScript months are 0-indexed, whilst days are 1-indexed.</p>

<pre><code>var date = new Date('2010-10-11T00:00:00+05:30');
alert((date.getMonth() + 1) + '/' + date.getDate() + '/' +  date.getFullYear());
</code></pre>
","11591900"
"How to split the string using jQuery or JavaScript?","513198","","<pre><code>&lt;div id=""date""&gt;23/05/2013&lt;/div&gt;
</code></pre>

<p>I want to format this date, first I want to break string at like the 2nd character and have the rest in the next line. And if it possible with jQuery to append two  tags.
as follows:</p>

<blockquote>
  <p><strong>23<br> 05/2013</strong></p>
</blockquote>

<pre><code>&lt;div id=""date""&gt;
&lt;span&gt;23&lt;/span&gt;
05/2013&lt;/div&gt;
</code></pre>

<p>What I did:</p>

<pre><code>&lt;div id=""date""&gt;23/05/2013&lt;/div&gt;
&lt;script type=""text/javascript""&gt;
$(document).ready(function(){
    $(""#date"").text().substring(0, 2) + '&lt;br /&gt;';     
});
&lt;/script&gt;
</code></pre>

<p><a href=""http://jsfiddle.net/K3D6d/"" rel=""noreferrer"">http://jsfiddle.net/K3D6d/</a></p>

<p>But this does not work!<br>
Can someone help with jQuery?<br>
Thank you!</p>
","<p>Using <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split"" rel=""noreferrer""><strong><code>split()</code></strong></a></p>

<p><strong>Snippet :</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var data =$('#date').text();
var arr = data.split('/');
$(""#date"").html(""&lt;span&gt;""+arr[0] + ""&lt;/span&gt;&lt;/br&gt;"" + arr[1]+""/""+arr[2]);	  </code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;
&lt;div id=""date""&gt;23/05/2013&lt;/div&gt;</code></pre>
</div>
</div>
</p>

<h2><a href=""http://jsfiddle.net/K3D6d/5/"" rel=""noreferrer"">Fiddle</a></h2>

<p>When you split this string <code>---&gt;</code> <code>23/05/2013</code> on <code>/</code></p>

<pre><code>var myString = ""23/05/2013"";
var arr = myString.split('/');
</code></pre>

<p>you'll get an array of size <code>3</code></p>

<pre><code>arr[0] --&gt; 23
arr[1] --&gt; 05
arr[2] --&gt; 2013
</code></pre>
","16711645"
"Obtain form input fields using jQuery?","511958","","<p>I have a form with many input fields.</p>

<p>When I catch the submit form event with jQuery, is it possible to get all the input fields of that form in an associative array?</p>
","<pre><code>$('#myForm').submit(function() {
    // get all the inputs into an array.
    var $inputs = $('#myForm :input');

    // not sure if you wanted this, but I thought I'd add it.
    // get an associative array of just the values.
    var values = {};
    $inputs.each(function() {
        values[this.name] = $(this).val();
    });

});
</code></pre>

<hr>

<p>Thanks to the tip from Simon_Weaver, here is another way you could do it, using <a href=""http://api.jquery.com/serializeArray/"" rel=""noreferrer""><code>serializeArray</code></a>:</p>

<pre><code>var values = {};
$.each($('#myForm').serializeArray(), function(i, field) {
    values[field.name] = field.value;
});
</code></pre>

<p>Note that this snippet will fail on <code>&lt;select multiple&gt;</code> elements.</p>

<p>It appears that the <a href=""http://diveintohtml5.ep.io/forms.html"" rel=""noreferrer"">new HTML 5 form inputs</a> don't work with <code>serializeArray</code> in jQuery version 1.3. This works in version 1.4+</p>
","169554"
"Early exit from function?","511196","","<p>I have a function:</p>

<pre><code>function myfunction() {
  if (a == 'stop')  // How can I stop the function here?
}
</code></pre>

<p>Is there something like <code>exit()</code> in JavaScript?</p>
","<p>You can just use <code>return</code>.</p>

<pre><code>function myfunction() {
     if(a == 'stop') 
         return;
}
</code></pre>

<p>This will send a return value of <code>undefined</code> to whatever called the function.</p>

<pre><code>var x = myfunction();

console.log( x );  // console shows undefined
</code></pre>

<p>Of course, you can specify a different return value. Whatever value is returned will be logged to the console using the above example.</p>

<pre><code>return false;
return true;
return ""some string"";
return 12345;
</code></pre>
","3330206"
"Why is null an object and what's the difference between null and undefined?","510461","","<p>Why is <code>null</code> considered an <code>object</code> in JavaScript?</p>

<p>Is checking </p>

<pre><code>if ( object == null )
      Do something
</code></pre>

<p>the same as </p>

<pre><code>if ( !object )
      Do something
</code></pre>

<p>?</p>

<p>And also:</p>

<p>What is the difference between <code>null</code> and <code>undefined</code>?</p>
","<pre><code>(name is undefined)
</code></pre>

<p><strong>You:</strong> What is <code>name</code>?<sup> (*)</sup><br>
<strong>JavaScript:</strong> <code>name</code>? What's a <code>name</code>? I don't know what you're talking about. You haven't ever mentioned any <code>name</code> before. Are you seeing some other scripting language on the (client-)side?</p>

<pre><code>name = null;
</code></pre>

<p><strong>You:</strong> What is <code>name</code>?<br>
<strong>JavaScript:</strong> I don't know.</p>

<p>In short; <code>undefined</code> is where no notion of the thing exists; it has no type, and it's never been referenced before in that scope; <code>null</code> is where the thing is known to exist, but it's not known what the value is.</p>

<p>One thing to remember is that <code>null</code> is not, conceptually, the same as <code>false</code> or <code>""""</code> or such, even if they equate after type casting, i.e.</p>

<pre><code>name = false;
</code></pre>

<p><strong>You:</strong> What is <code>name</code>?<br>
<strong>JavaScript:</strong> Boolean false.</p>

<pre><code>name = '';
</code></pre>

<p><strong>You:</strong> What is <code>name</code>?<br>
<strong>JavaScript:</strong> Empty string</p>

<hr>

<p><sup>*: <code>name</code> in this context is meant as a variable which has never been defined. It could be be any undefined variable. However, name is a property of just about any HTML form element. It goes way, way back and was instituted well before id. It is useful because ids must be unique but names to not have to be. 
</sup></p>
","802371"
"How to get all options of a select using jQuery?","509146","","<p>How can I get all the options of a select through jQuery by passing on its ID?</p>

<p>I am only looking to get their values, not the text.</p>
","<p>Use:</p>

<pre><code>$(""#id option"").each(function()
{
    // Add $(this).val() to your list
});
</code></pre>

<p><a href=""https://api.jquery.com/each/"" rel=""noreferrer"">.each() | jQuery API Documentation</a></p>
","590219"
"pass string parameter in an onclick function","509126","","<p>I would like to pass a parameter (i.e. a string) to an Onclick function. For the moment, I do this:</p>

<pre><code>'&lt;input type=""button"" onClick=""gotoNode(' + result.name + ')"" /&gt;'
</code></pre>

<p>with result.name for example equal to string ""Add"".
When I click on this button, I have an error that says that Add is not defined. Since this functioncall works perfect with a numeric parameter, I assume that it has something to do with the symbols """" in the string.
Did anyone had this problem before?</p>
","<p>It's looks like you're building dom elements from strings. You just need to add some quotes around result.name:</p>

<pre><code>'&lt;input type=""button"" onClick=""gotoNode(\'' + result.name + '\')"" /&gt;'
</code></pre>

<p>You should really be doing this with proper DOM methods though.</p>

<pre><code>var inputElement = document.createElement('input');
inputElement.type = ""button""
inputElement.addEventListener('click', function(){
    gotoNode(result.name);
});

​document.body.appendChild(inputElement);​
</code></pre>

<p>Just be aware that if this is a loop or something, <code>result</code> will change before the event fires and you'd need to create an additional scope bubble to shadow the changing variable.</p>
","9643489"
"How do I check that a number is float or integer?","509106","","<p>How to find that a number is <code>float</code> or <code>integer</code>?</p>

<pre><code>1.25 --&gt; float  
1 --&gt; integer  
0 --&gt; integer  
0.25 --&gt; float
</code></pre>
","<p>check for a remainder when dividing by 1:</p>

<pre><code>function isInt(n) {
   return n % 1 === 0;
}
</code></pre>

<p>If you don't know that the argument is a number you need two tests:</p>

<pre><code>function isInt(n){
    return Number(n) === n &amp;&amp; n % 1 === 0;
}

function isFloat(n){
    return Number(n) === n &amp;&amp; n % 1 !== 0;
}
</code></pre>
","3886106"
"Fastest method to replace all instances of a character in a string","508672","","<p>What is the fastest way to replace all instances of a <code>string/character</code> in a string in <code>Javascript</code>? A <code>while</code>, a <code>for-loop</code>, a <code>regular expression</code>?</p>
","<p>The easiest would be to use a regular expression with <code>g</code> flag to replace all instances:</p>

<pre><code>str.replace(/foo/g, ""bar"")
</code></pre>

<p>This will replace all occurrences of <code>foo</code> with <code>bar</code> in the string <code>str</code>. If you just have a string, you can convert it to a RegExp object like this:</p>

<pre><code>var pattern = ""foobar"",
    re = new RegExp(pattern, ""g"");
</code></pre>
","2116614"
"Get Radio Button Value with Javascript","506195","","<p>I'm having some strange problem with my JS program. I had this working properly but for some reason it's no longer working. I just want to find the value of the radio button (which one is selected) and return it to a variable. For some reason it keeps returning undefined. Here is my code:</p>

<pre><code>function findSelection(field) {
    var test = 'document.theForm.' + field;
    var sizes = test;

    alert(sizes);
        for (i=0; i &lt; sizes.length; i++) {
            if (sizes[i].checked==true) {
            alert(sizes[i].value + ' you got a value');     
            return sizes[i].value;
        }
    }
}
</code></pre>

<p>submitForm:</p>

<pre><code>function submitForm() {

    var genderS =  findSelection(""genderS"");
    alert(genderS);
}
</code></pre>

<p>HTML:</p>

<pre><code>&lt;form action=""#n"" name=""theForm""&gt;

    &lt;label for=""gender""&gt;Gender: &lt;/label&gt;
    &lt;input type=""radio"" name=""genderS"" value=""1"" checked&gt; Male
    &lt;input type=""radio"" name=""genderS"" value=""0"" &gt; Female&lt;br&gt;&lt;br&gt;
    &lt;a href=""javascript: submitForm()""&gt;Search&lt;/A&gt;
&lt;/form&gt;
</code></pre>
","<p>JavaScript:</p>

<pre><code>var radios = document.getElementsByName('genderS');

for (var i = 0, length = radios.length; i &lt; length; i++)
{
 if (radios[i].checked)
 {
  // do whatever you want with the checked radio
  alert(radios[i].value);

  // only one radio can be logically checked, don't check the rest
  break;
 }
}
</code></pre>

<p><a href=""http://jsfiddle.net/Xxxd3/610/"" rel=""noreferrer"">http://jsfiddle.net/Xxxd3/610/</a></p>

<p>Edit: Thanks HATCHA and jpsetung for your edit suggestions.</p>
","9618826"
"JavaScript unit test tools for TDD","503623","","<p>I've looked into and considered many JavaScript unit tests and testing tools, but have been unable to find a suitable option to remain fully TDD compliant. So, is there a JavaScript unit test tool that is fully TDD compliant?</p>
","<h2><a href=""http://karma-runner.github.io"" rel=""noreferrer"">Karma</a> or <a href=""http://angular.github.io/protractor/#/"" rel=""noreferrer"">Protractor</a></h2>

<p>Karma is a JavaScript test-runner built with Node.js and meant for unit testing.</p>

<p>The Protractor is for end-to-end testing and uses Selenium Web Driver to drive tests.</p>

<p>Both have been made by the Angular team. You can use any assertion-library you want with either.</p>

<p>Screencast: <a href=""http://www.youtube.com/watch?v=MVw8N3hTfCI"" rel=""noreferrer"">Karma Getting started</a></p>

<p><strong>related</strong>:</p>

<ul>
<li><a href=""https://stackoverflow.com/questions/21732379/should-i-be-using-protractor-or-karma-for-my-end-to-end-testing/21733114#21733114"">Should I be using Protractor or Karma for my end-to-end testing?</a></li>
<li><a href=""https://stackoverflow.com/questions/17070522/can-protractor-and-karma-be-used-together"">Can Protractor and Karma be used together?</a></li>
</ul>

<p><strong>pros</strong>:</p>

<ul>
<li>Uses node.js, so compatible with Win/OS X/Linux</li>
<li>Run tests from browser or headless with PhantomJS</li>
<li>Run on multiple clients at once</li>
<li>Option to launch, capture, and automatically shutdown browsers</li>
<li>Option to run server/clients on development computer or separately</li>
<li>Run tests from command line (can be integrated into ant/maven)</li>
<li>Write tests xUnit or BDD style</li>
<li>Supports multiple JavaScript test frameworks</li>
<li>Auto-run tests on save</li>
<li>Proxies requests cross-domain</li>
<li>Possible to customize:

<ul>
<li>Extend it to wrap other test-frameworks (Jasmine, Mocha, QUnit built-in)</li>
<li>Your own assertions/refutes</li>
<li>Reporters</li>
<li>Browser Launchers</li>
</ul></li>
<li>Plugin for WebStorm</li>
<li>Supported by Netbeans IDE</li>
</ul>

<p><strong>Cons</strong>:</p>

<ul>
<li>Does <a href=""https://stackoverflow.com/a/16660909/1175496"">not support NodeJS (i.e. backend)</a> testing</li>
<li>No plugin for Eclipse (yet)</li>
<li>No history of previous test results </li>
</ul>

<h2><a href=""http://busterjs.org/"" rel=""noreferrer"">Buster.js</a></h2>

<p>A JavaScript test-runner built with Node.js. Very modular and flexible. It comes with its own assertion library, but you can add your own if you like. The <a href=""http://docs.busterjs.org/en/latest/modules/referee/"" rel=""noreferrer"">assertions library</a> is decoupled, so you can also use it with other test-runners. Instead of using <code>assert(!...)</code> or <code>expect(...).not...</code>, it uses <code>refute(...)</code> which is a nice twist imho.</p>

<blockquote>
  <p>A browser JavaScript testing toolkit. It does browser testing with browser automation (think JsTestDriver), qunit style static HTML page testing, testing in headless browsers (phantomjs, jsdom, ...), and more. Take a look at <a href=""http://docs.busterjs.org/en/latest/overview/"" rel=""noreferrer"">the overview</a>!</p>
  
  <p>A Node.js testing toolkit. You get the same test case library, assertion library, etc. This is also great for hybrid browser and Node.js code. Write your test case with Buster.JS and run it both in Node.js and in a real browser.</p>
</blockquote>

<p>Screencast: <a href=""http://www.youtube.com/watch?v=VSFGAl1BekY"" rel=""noreferrer"">Buster.js Getting started</a> (2:45)</p>

<p><strong>pros</strong>:</p>

<ul>
<li>Uses node.js, so compatible with Win/OS X/Linux</li>
<li>Run tests from browser or headless with PhantomJS (soon)</li>
<li>Run on multiple clients at once</li>
<li>Supports NodeJS testing</li>
<li>Don't need to run server/clients on development computer (no need for IE)</li>
<li>Run tests from command line (can be integrated into ant/maven)</li>
<li>Write tests xUnit or BDD style</li>
<li>Supports multiple JavaScript test frameworks</li>
<li>Defer tests instead of commenting them out</li>
<li>SinonJS built in</li>
<li><a href=""http://www.youtube.com/watch?v=gKVej9SAzH4"" rel=""noreferrer"">Auto-run tests on save</a></li>
<li>Proxies requests cross-domain</li>
<li>Possible to customize:

<ul>
<li>Extend it to wrap other test-frameworks (JsTestDriver built in)</li>
<li>Your own assertions/refutes</li>
<li>Reporters (xunit XML, traditional dots, specification, tap, teamcity and more built in)</li>
<li>Customize/replace the HTML that is used to run the browser-tests</li>
</ul></li>
<li>TextMate and Emacs integration</li>
</ul>

<p><strong>Cons</strong>:</p>

<ul>
<li>Stil in beta so can be buggy</li>
<li>No plugin for Eclipse/IntelliJ (yet)</li>
<li>Doesn't group results by os/browser/version like TestSwarm *. It does, however, print out the browser name and version in the test results.</li>
<li>No history of previous test results like TestSwarm *</li>
<li>Doesn't fully work on windows <a href=""http://docs.busterjs.org/en/latest/developers/windows/"" rel=""noreferrer"">as of May 2014</a></li>
</ul>

<p>* TestSwarm is also a Continuous Integration server, while you need a separate CI server for Buster.js. It does, however, output xUnit XML reports, so it should be easy to integrate with <a href=""http://hudson-ci.org/"" rel=""noreferrer"">Hudson</a>, <a href=""http://www.atlassian.com/software/bamboo/overview"" rel=""noreferrer"">Bamboo</a> or other CI servers.</p>

<h2><a href=""https://github.com/jquery/testswarm/"" rel=""noreferrer"">TestSwarm</a></h2>

<p><a href=""https://github.com/jquery/testswarm"" rel=""noreferrer"">https://github.com/jquery/testswarm</a></p>

<p>TestSwarm is officially no longer under active development as stated on their GitHub webpage. They recommend Karma, browserstack-runner, or Intern.</p>

<h2>BrowserSwarm</h2>

<p>The website <code>www.browserswarm.com</code> is dead and there are no recent search results for BrowserSwarm. It appears to have died. </p>

<p><strike>BrowserSwarm is a project from appendTo, Sauce Labs and the Internet Explorer team. It is essentially a hosted forked version of TestSwarm.</strike> </p>

<p><strike>In addition to all the advantages to TestSwarm, BrowserSwarm already has all the browsers connected to the swarm and ready to test your code, therefore not requiring you to add clients yourself or maintaining installations of browsers. Time is also saved from the hassle of setting up and configuring TestSwarm.</strike></p>

<h2><a href=""https://github.com/pivotal/jasmine/"" rel=""noreferrer"">Jasmine</a></h2>

<p><img src=""https://i.stack.imgur.com/q4Bct.png"" alt=""Jasmine""></p>

<p>This is a client-side test-runner that might interest developers familiar with Ruby or Ruby on Rails. The syntax is based on <a href=""http://rspec.info/"" rel=""noreferrer"">RSpec</a> that's used for testing in Rails projects.</p>

<blockquote>
  <p>Jasmine is a behavior-driven development framework for testing your JavaScript code. It does not depend on any other JavaScript frameworks. It does not require a DOM.</p>
</blockquote>

<p>If you have experience with this test-runner, please contribute with more info :)</p>

<p>Project home: <a href=""https://github.com/pivotal/jasmine/"" rel=""noreferrer"">http://jasmine.github.io/</a></p>

<h2><a href=""http://qunitjs.com/"" rel=""noreferrer"">QUnit</a></h2>

<p>QUnit focuses on testing JavaScript in the browser while providing as much convenience to the developer as possible. Blurb from the site:</p>

<blockquote>
  <p>QUnit is a powerful, easy-to-use JavaScript unit test suite. It's used by the jQuery, jQuery UI and jQuery Mobile projects and is capable of testing any generic JavaScript code</p>
</blockquote>

<p>QUnit shares some history with TestSwarm (above):</p>

<blockquote>
  <p>QUnit was originally developed by John Resig as part of jQuery. In 2008 it got its own home, name and API documentation, allowing others to use it for their unit testing as well. At the time it still depended on jQuery. A rewrite in 2009 fixed that, now QUnit runs completely standalone.
  QUnit's assertion methods follow the CommonJS Unit Testing specification, which was to some degree influenced by QUnit.</p>
</blockquote>

<p>Project home: <a href=""http://qunitjs.com/"" rel=""noreferrer"">http://qunitjs.com/</a></p>

<h2><a href=""http://sinonjs.org"" rel=""noreferrer"">Sinon</a></h2>

<p>Another great tool is <a href=""http://sinonjs.org"" rel=""noreferrer"">sinon.js</a> by Christian Johansen, the author of <a href=""http://tddjs.com/"" rel=""noreferrer"">Test-Driven JavaScript Development</a>. Best described by himself:</p>

<blockquote>
  <p>Standalone test spies, stubs and mocks
  for JavaScript. No dependencies works
  with any unit testing framework.</p>
</blockquote>

<h2><a href=""http://theintern.io"" rel=""noreferrer"">Intern</a></h2>

<p>The <a href=""http://theintern.io/#compare"" rel=""noreferrer"">Intern Web site</a> provides a direct feature comparison to the other testing frameworks on this list. It offers more features out of the box than any other JavaScript-based testing system.</p>

<h2><a href=""http://mochajs.org"" rel=""noreferrer"">mocha.js</a></h2>

<p>I'm totally unqualified to comment on mocha.js's features, strengths, and weaknesses,
but it was just recommended to me by someone I trust in the JS community.</p>

<p>List of features, as reported by its web site:</p>

<ul>
<li>browser support</li>
<li>simple async support, including promises</li>
<li>test coverage reporting</li>
<li>string diff support</li>
<li>javascript API for running tests</li>
<li>proper exit status for CI support etc</li>
<li>auto-detects and disables coloring for non-ttys</li>
<li>maps uncaught exceptions to the correct test case</li>
<li>async test timeout support</li>
<li>test-specific timeouts</li>
<li>growl notification support</li>
<li>reports test durations</li>
<li>highlights slow tests</li>
<li>file watcher support</li>
<li>global variable leak detection</li>
<li>optionally run tests that match a regexp</li>
<li>auto-exit to prevent ""hanging"" with an active loop</li>
<li>easily meta-generate suites &amp; test-cases</li>
<li>mocha.opts file support</li>
<li>clickable suite titles to filter test execution</li>
<li>node debugger support</li>
<li>detects multiple calls to done()</li>
<li>use any assertion library you want</li>
<li>extensible reporting, bundled with 9+ reporters</li>
<li>extensible test DSLs or ""interfaces""</li>
<li>before, after, before each, after each hook</li>
<li>arbitrary transpiler support (coffee-script etc)</li>
<li>TextMate bundle</li>
</ul>

<h2><a href=""http://www.yolpo.com"" rel=""noreferrer"">yolpo</a></h2>

<p><img src=""https://i.imgur.com/5HKEWSW.png"" alt=""yolpo""></p>

<p>Yolpo is a tool to visualize the execution of javascript. Javascript API developers are encouraged to write their use cases to show and tell their api. Such use cases forms the basis of regression tests.</p>

<h2><a href=""https://github.com/sindresorhus/ava"" rel=""noreferrer"">AVA</a></h2>

<p><a href=""https://github.com/sindresorhus/ava"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/43HiK.png"" alt=""AVA logo""></a></p>

<p>Futuristic test runner with built-in support for ES2015. Even though JavaScript is single-threaded, IO in Node.js can happen in parallel due to its async nature. AVA takes advantage of this and runs your tests concurrently, which is especially beneficial for IO heavy tests. In addition, test files are run in parallel as separate processes, giving you even better performance and an isolated environment for each test file.</p>

<ul>
<li>Minimal and fast</li>
<li>Simple test syntax</li>
<li>Runs tests concurrently</li>
<li>Enforces writing atomic tests</li>
<li>No implicit globals</li>
<li>Isolated environment for each test file</li>
<li>Write your tests in ES2015</li>
<li>Promise support</li>
<li>Generator function support</li>
<li>Async function support</li>
<li>Observable support</li>
<li>Enhanced asserts</li>
<li>Optional TAP output</li>
<li>Clean stack traces</li>
</ul>
","680713"
"How to retrieve POST query parameters?","502409","","<p>Here is my simple form:</p>

<pre class=""lang-html prettyprint-override""><code>&lt;form id=""loginformA"" action=""userlogin"" method=""post""&gt;
    &lt;div&gt;
        &lt;label for=""email""&gt;Email: &lt;/label&gt;
        &lt;input type=""text"" id=""email"" name=""email""&gt;&lt;/input&gt;
    &lt;/div&gt;
&lt;input type=""submit"" value=""Submit""&gt;&lt;/input&gt;
&lt;/form&gt;
</code></pre>

<p>Here is my <a href=""https://en.wikipedia.org/wiki/Express.js"">Express.js</a>/Node.js code:</p>

<pre><code>app.post('/userlogin', function(sReq, sRes){    
    var email = sReq.query.email.;   
}
</code></pre>

<p>I tried <code>sReq.query.email</code> or <code>sReq.query['email']</code> or <code>sReq.params['email']</code>, etc. None of them work. They all return <code>undefined</code>. </p>

<p>When I change to a Get call, it works, so .. any idea?</p>
","<p>Things have <a href=""https://expressjs.com/en/changelog/4x.html#4.16.0"" rel=""noreferrer"">changed</a> once again starting <strong>Express 4.16.0</strong>, you can now use <code>express.json()</code> and <code>express.urlencoded()</code> just like in <strong>Express 3.0</strong>.</p>

<p>This was <a href=""https://github.com/senchalabs/connect#middleware"" rel=""noreferrer"">different</a> starting <strong>Express 4.0 to 4.15</strong>:</p>

<pre><code>$ npm install --save body-parser
</code></pre>

<p>and then:</p>

<pre><code>var bodyParser = require('body-parser')
app.use( bodyParser.json() );       // to support JSON-encoded bodies
app.use(bodyParser.urlencoded({     // to support URL-encoded bodies
  extended: true
})); 
</code></pre>

<p>The rest is like in <strong>Express 3.0</strong>:</p>

<p>Firstly you need to add some middleware to parse the post data of the body.</p>

<p>Add one or both of the following lines of code:</p>

<pre><code>app.use(express.json());       // to support JSON-encoded bodies
app.use(express.urlencoded()); // to support URL-encoded bodies
</code></pre>

<p>Then, in your handler, use the <a href=""http://expressjs.com/api.html#req.body"" rel=""noreferrer""><code>req.body</code></a> object:</p>

<pre><code>// assuming POST: name=foo&amp;color=red            &lt;-- URL encoding
//
// or       POST: {""name"":""foo"",""color"":""red""}  &lt;-- JSON encoding

app.post('/test-page', function(req, res) {
    var name = req.body.name,
        color = req.body.color;
    // ...
});
</code></pre>

<hr>

<p>Note that the use of <a href=""http://expressjs.com/api.html#bodyParser"" rel=""noreferrer""><code>express.bodyParser()</code></a> is not recommended.</p>

<pre><code>app.use(express.bodyParser());
</code></pre>

<p>...is equivalent to:</p>

<pre><code>app.use(express.json());
app.use(express.urlencoded());
app.use(express.multipart());
</code></pre>

<p>Security concerns exist with <code>express.multipart()</code>, and so it is better to explicitly add support for the specific encoding type(s) you require. If you do need multipart encoding (to support uploading files for example) then you should <a href=""https://groups.google.com/forum/#!msg/express-js/iP2VyhkypHo/5AXQiYN3RPcJ"" rel=""noreferrer"">read this</a>.</p>
","12008719"
"Remove empty elements from an array in Javascript","502080","","<p>How do I remove empty elements from an array in JavaScript? </p>

<p>Is there a straightforward way, or do I need to loop through it and remove them manually?</p>
","<p>I use this method, extending the native Array prototype:</p>

<pre><code>Array.prototype.clean = function(deleteValue) {
  for (var i = 0; i &lt; this.length; i++) {
    if (this[i] == deleteValue) {         
      this.splice(i, 1);
      i--;
    }
  }
  return this;
};

test = new Array("""", ""One"", ""Two"", """", ""Three"", """", ""Four"").clean("""");
test2 = [1, 2,, 3,, 3,,,,,, 4,, 4,, 5,, 6,,,,];
test2.clean(undefined);
</code></pre>

<p>Or you can simply push the existing elements into other array:</p>

<pre><code>// Will remove all falsy values: undefined, null, 0, false, NaN and """" (empty string)
function cleanArray(actual) {
  var newArray = new Array();
  for (var i = 0; i &lt; actual.length; i++) {
    if (actual[i]) {
      newArray.push(actual[i]);
    }
  }
  return newArray;
}

cleanArray([1, 2,, 3,, 3,,,,,, 4,, 4,, 5,, 6,,,,]);
</code></pre>
","281335"
"Detecting an ""invalid date"" Date instance in JavaScript","500957","","<p>I'd like to tell the difference between valid and invalid date objects in JS, but couldn't figure out how:</p>

<pre><code>var d = new Date(""foo"");
console.log(d.toString()); // shows 'Invalid Date'
console.log(typeof d); // shows 'object'
console.log(d instanceof Date); // shows 'true'
</code></pre>

<p>Any ideas for writing an <code>isValidDate</code> function?</p>

<ul>
<li>Ash recommended <code>Date.parse</code> for parsing date strings, which gives an authoritative way to check if the date string is valid.</li>
<li>What I would prefer, if possible, is have my API accept a Date instance and to be able to check/assert whether it's valid or not. Borgar's solution does that, but I need to test it across browsers. I also wonder whether there's a more elegant way.</li>
<li>Ash made me consider not having my API accept <code>Date</code> instances at all, this would be easiest to validate.</li>
<li>Borgar suggested testing for a <code>Date</code> instance, and then testing for the <code>Date</code>'s time value. If the date is invalid, the time value is <code>NaN</code>. I checked with <a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-time-values-and-time-range"" rel=""noreferrer"">ECMA-262</a> and this behavior is in the standard, which is exactly what I'm looking for.</li>
</ul>
","<p>Here's how I would do it:</p>

<pre><code>if ( Object.prototype.toString.call(d) === ""[object Date]"" ) {
  // it is a date
  if ( isNaN( d.getTime() ) ) {  // d.valueOf() could also work
    // date is not valid
  }
  else {
    // date is valid
  }
}
else {
  // not a date
}
</code></pre>
","1353711"
"HTTP Content-Type Header and JSON","499527","","<p>Ok so I have always been trying to avoid using most of the HTTP protocol's properties or how ever you may please to call them for the sake of fear of the unknown. However I said to myself that I'm going to face fear today and start using headers purposely. What I have been trying to achieve here is send <code>json</code> data to the browser and use it right away. For example if I have an ajax handler function on ready state 4 which looks like so</p>

<pre><code>function ajaxHandler(response){
    alert(response.text);
}
</code></pre>

<p>and I have set the content-type header in my php</p>

<pre><code>header('Content-Type: application/json');
echo json_encode(array('text' =&gt; 'omrele'));
</code></pre>

<p>My question is: Why can't I directly access the property from the handler function, when the browser is clearly told that the incoming data is <code>application/json</code>?</p>
","<p>The <code>Content-Type</code> header is just used as info for your application.  The browser doesn't care what it is.  The browser just returns you the data from the AJAX call.  If you want to parse it as JSON, you need to do that on your own.</p>

<p>The header is there so your app can detect what data was returned and how it should handle it.  You need to look at the header, and if it's <code>application/json</code> then parse it as JSON.</p>

<p>This is actually how jQuery works.  If you don't tell it what to do with the result, it uses the <code>Content-Type</code> to detect what to do with it.</p>
","20620606"
"How to reset a form using jQuery with .reset() method","499154","","<p>I had working code that could reset my form when I click on a reset button. However after my code is getting longer, I realize that it doesn't work anymore. </p>

<pre><code> &lt;div id=""labels""&gt;
        &lt;table class=""config""&gt;
            &lt;thead&gt;
                &lt;tr&gt;
                    &lt;th colspan=""4""; style= ""padding-bottom: 20px; color:#6666FF; text-align:left; font-size: 1.5em""&gt;Control Buttons Configuration&lt;/th&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;th&gt;Index&lt;/th&gt;
                    &lt;th&gt;Switch&lt;/th&gt;
                    &lt;th&gt;Response Number&lt;/th&gt;
                    &lt;th&gt;Description&lt;/th&gt;
                &lt;/tr&gt;
            &lt;/thead&gt;
            &lt;tbody&gt;

                &lt;form id=""configform"" name= ""input"" action=""#"" method=""get""&gt;
                &lt;tr&gt;&lt;td style=""text-align: center""&gt;1&lt;/td&gt;
                    &lt;td&gt;&lt;img src= ""static/switch.png"" height=""100px"" width=""108px""&gt;&lt;/td&gt;
                    &lt;td id=""small""&gt;&lt;input style=""background: white; color: black;"" type=""text"" value="""" id=""number_one""&gt;&lt;/td&gt;
                    &lt;td&gt;&lt;input style=""background: white; color: black;"" type=""text""  id=""label_one""&gt;&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td style=""text-align: center""&gt;2&lt;/td&gt;
                    &lt;td&gt;&lt;img src= ""static/switch.png"" height=""100px"" width=""108px""&gt;&lt;/td&gt;
                    &lt;td id=""small""&gt;&lt;input style=""background: white; color: black;"" type=""text"" id = ""number_two"" value=""""&gt;&lt;/td&gt;
                    &lt;td&gt;&lt;input style=""background: white; color: black;"" type=""text""  id = ""label_two""&gt;&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td style=""text-align: center""&gt;3&lt;/td&gt;
                    &lt;td&gt;&lt;img src= ""static/switch.png"" height=""100px"" width=""108px""&gt;&lt;/td&gt;
                    &lt;td id=""small""&gt;&lt;input style=""background: white; color: black;"" type=""text"" id=""number_three"" value=""""&gt;&lt;/td&gt;
                    &lt;td&gt;&lt;input style=""background: white; color: black;"" type=""text"" id=""label_three""&gt;&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td style=""text-align: center""&gt;4&lt;/td&gt;
                    &lt;td&gt;&lt;img src= ""static/switch.png"" height=""100px"" width=""108px""&gt;&lt;/td&gt;
                    &lt;td id=""small""&gt;&lt;input style=""background: white; color: black;"" type=""text"" id=""number_four"" value=""""&gt;&lt;/td&gt;
                    &lt;td&gt;&lt;input style=""background: white; color: black;"" type=""text"" id=""label_three""&gt;&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;&lt;/td&gt;
                    &lt;td&gt;&lt;input type=""submit"" id=""configsubmit"" value=""Submit""&gt;&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;&lt;input type=""reset"" id=""configreset"" value=""Reset""&gt;&lt;/td&gt;
                &lt;/tr&gt;

                &lt;/form&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;

    &lt;/div&gt;
</code></pre>

<p>And my jQuery:</p>

<pre><code> $('#configreset').click(function(){
            $('#configform')[0].reset();
 });
</code></pre>

<p>Is there some source that I should include in my codes in order for the <code>.reset()</code> method to work? Previously I was using:</p>

<pre><code>&lt;script src=""static/jquery.min.js""&gt;
&lt;/script&gt;
&lt;script src=""static/jquery.mobile-1.2.0.min.js""&gt;
&lt;/script&gt;
</code></pre>

<p>and the <code>.reset()</code> method was working. </p>

<p>Currently I'm using</p>

<pre><code>&lt;script src=""static/jquery-1.9.1.min.js""&gt;&lt;/script&gt;      
&lt;script src=""static/jquery-migrate-1.1.1.min.js""&gt;&lt;/script&gt;
&lt;script src=""static/jquery.mobile-1.3.1.min.js""&gt;&lt;/script&gt;
</code></pre>

<p>Could it possibly be one of the reason?</p>
","<p>I've finally solve the problem!!
@RobG was right about the <code>form</code> tag and <code>table</code> tag. <strong>the <code>form</code> tag should be placed outside the table.</strong> with that, </p>

<pre><code>&lt;td&gt;&lt;input type=""reset"" id=""configreset"" value=""Reset""&gt;&lt;/td&gt;
</code></pre>

<p>works without the need of jquery or anything else. simple click on the button and tadaa~ the whole form is reset ;) brilliant!</p>
","16555544"
"Print <div id=""printarea""></div> only?","496516","","<p>How do I print the indicated div (without manually disabling all other content on the page)?</p>

<p>I want to avoid a new preview dialog, so creating a new window with this content is not useful.</p>

<p>The page contains a couple of tables, one of them contains the div I want to print - the table is styled with visual styles for the web, that should not show in print.</p>
","<p>Here is a general solution, using <strong>CSS only</strong>, which I have verified to work.</p>

<pre><code>@media print {
  body * {
    visibility: hidden;
  }
  #section-to-print, #section-to-print * {
    visibility: visible;
  }
  #section-to-print {
    position: absolute;
    left: 0;
    top: 0;
  }
}
</code></pre>

<p>Alternative approaches aren't so good. Using <code>display</code> is tricky because if any element has <code>display:none</code> then none of its descendants will display either. To use it, you have to change the structure of your page.</p>

<p>Using <code>visibility</code> works better since you can turn on visibility for descendants. The invisible elements still affect the layout though, so I move <code>section-to-print</code> to the top left so it prints properly.</p>
","2618980"
"jquery get querystring from URL","496275","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/901115/how-can-i-get-query-string-values"">How can I get query string values?</a>  </p>
</blockquote>



<p>I have the following URL:</p>

<pre class=""lang-none prettyprint-override""><code>http://www.mysite.co.uk/?location=mylocation1
</code></pre>

<p>What I need is to get the value of <code>location</code> from the URL into a variable and then use it in a jQuery code:</p>

<pre><code>var thequerystring = ""getthequerystringhere""

$('html,body').animate({scrollTop: $(""div#"" + thequerystring).offset().top}, 500);
</code></pre>

<p>Does anyone know how to grab that value using JavaScript or jQuery?</p>
","<p>From: <a href=""http://jquery-howto.blogspot.com/2009/09/get-url-parameters-values-with-jquery.html"" rel=""noreferrer"">http://jquery-howto.blogspot.com/2009/09/get-url-parameters-values-with-jquery.html</a></p>

<p>This is what you need :)</p>

<p>The following code will return a JavaScript Object containing the URL parameters:</p>

<pre><code>// Read a page's GET URL variables and return them as an associative array.
function getUrlVars()
{
    var vars = [], hash;
    var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&amp;');
    for(var i = 0; i &lt; hashes.length; i++)
    {
        hash = hashes[i].split('=');
        vars.push(hash[0]);
        vars[hash[0]] = hash[1];
    }
    return vars;
}
</code></pre>

<p>For example, if you have the URL:</p>

<pre><code>http://www.example.com/?me=myValue&amp;name2=SomeOtherValue
</code></pre>

<p>This code will return:</p>

<pre><code>{
    ""me""    : ""myValue"",
    ""name2"" : ""SomeOtherValue""
}
</code></pre>

<p>and you can do:</p>

<pre><code>var me = getUrlVars()[""me""];
var name2 = getUrlVars()[""name2""];
</code></pre>
","4656873"
"Print the contents of a DIV","495841","","<p>Whats the best way to print the contents of a DIV?</p>
","<p>Slight changes over earlier version - tested on CHROME</p>

<pre><code>function PrintElem(elem)
{
    var mywindow = window.open('', 'PRINT', 'height=400,width=600');

    mywindow.document.write('&lt;html&gt;&lt;head&gt;&lt;title&gt;' + document.title  + '&lt;/title&gt;');
    mywindow.document.write('&lt;/head&gt;&lt;body &gt;');
    mywindow.document.write('&lt;h1&gt;' + document.title  + '&lt;/h1&gt;');
    mywindow.document.write(document.getElementById(elem).innerHTML);
    mywindow.document.write('&lt;/body&gt;&lt;/html&gt;');

    mywindow.document.close(); // necessary for IE &gt;= 10
    mywindow.focus(); // necessary for IE &gt;= 10*/

    mywindow.print();
    mywindow.close();

    return true;
}
</code></pre>
","2255438"
"Calling JavaScript Function From CodeBehind","494686","","<p>I am new to JavaScript Programming and C# Programming.
Can someone provide good examples of calling a Javascript function From CodeBehind and ViceVersa.</p>

<p>Thank You</p>
","<p>You may try this :</p>

<pre><code>Page.ClientScript.RegisterStartupScript(this.GetType(),""CallMyFunction"",""MyFunction()"",true);
</code></pre>
","13141587"
"jQuery: What's the difference between '$(this)' and 'this'?","493486","","<p>I am currently working through this tutorial: <a href=""http://docs.jquery.com/Tutorials:Getting_Started_with_jQuery"" rel=""noreferrer"">Getting Started with jQuery</a></p>

<p>For the two examples below:</p>

<pre><code>$(""#orderedlist"").find(""li"").each(function (i) {
    $(this).append("" BAM! "" + i);
});
$(""#reset"").click(function () {
    $(""form"").each(function () {
        this.reset();
    });
});
</code></pre>

<p>Notice in the first example, we use <code>$(this)</code> to append some text inside of each <code>li</code> element. In the second example we use <code>this</code> directly when resetting the form.</p>

<p><code>$(this)</code> seems to be used a lot more often than <code>this</code>.</p>

<p>My guess is in the first example, <code>$()</code> is converting each <code>li</code> element into a jQuery object which understands the <code>append()</code> function whereas in the second example <code>reset()</code> can be called directly on the form.</p>

<p>Basically we need <code>$()</code> for special jQuery-only functions.</p>

<p>Is this correct?</p>
","<p>Yes you only need $() when you're using jQuery. If you want jQuery's help to do DOM things just keep this in mind.</p>

<pre><code>$(this)[0] === this
</code></pre>

<p>Basically every time you get a set of elements back jQuery turns it into a <a href=""https://learn.jquery.com/using-jquery-core/jquery-object/"" rel=""noreferrer"">jQuery object</a>. If you know you only have one result, it's going to be in the first element.</p>

<pre><code>$(""#myDiv"")[0] === document.getElementById(""myDiv"");
</code></pre>

<p>And so on...</p>
","1051797"
"How do I disable right click on my web page?","493465","","<p>Can I disable right click on my web page without using JavaScript? I ask this because most browsers allow user to disable JavaScript.</p>

<p>If not, how do I use JavaScript to disable right click?</p>
","<p>You can do that with JavaScript by adding an event listener for the ""contextmenu"" event and calling the <a href=""https://developer.mozilla.org/en/docs/Web/API/Event/preventDefault"" rel=""noreferrer""><code>preventDefault()</code></a> method:</p>

<pre><code>document.addEventListener('contextmenu', event =&gt; event.preventDefault());
</code></pre>

<p>That being said: <strong>DON'T DO IT.</strong></p>

<p>Why? Because it achieves nothing other than annoying users. Also many browsers have a security option to disallow disabling of the right click (context) menu anyway.</p>

<p>Not sure why you'd want to. If it's out of some misplaced belief that you can protect your source code or images that way, think again: you can't.</p>
","737043"
"How do I update each dependency in package.json to the latest version?","492460","","<p>I copied package.json from another project and now want to bump all of the dependencies to their latest versions since this is a fresh project and I don't mind fixing something if it breaks.</p>

<p>What's the easiest way to do this?</p>

<p>The best way I know of now is to run <code>npm info express version</code> then update package.json manually for each one. There must be a better way.</p>

<pre><code>{
  ""name"": ""myproject"",
  ""description"": ""my node project"",
  ""version"": ""1.0.0"",
  ""engines"": {
    ""node"": ""0.8.4"",
    ""npm"": ""1.1.65""
  },
  ""private"": true,
  ""dependencies"": {
    ""express"": ""~3.0.3"", // how do I get these bumped to latest?
    ""mongodb"": ""~1.2.5"",
    ""underscore"": ""~1.4.2"",
    ""rjs"": ""~2.9.0"",
    ""jade"": ""~0.27.2"",
    ""async"": ""~0.1.22""
  }
}
</code></pre>

<hr>

<p>I am now a collaborator on <a href=""https://github.com/tjunnone/npm-check-updates"" rel=""noreferrer"">npm-check-updates</a>, which is a great solution to this problem.</p>
","<p>Looks like <a href=""https://www.npmjs.org/package/npm-check-updates"" rel=""noreferrer"">npm-check-updates</a> is the only way to make this happen now.</p>

<pre><code>npm i -g npm-check-updates
npm-check-updates -u
npm install
</code></pre>

<hr>

<p>On npm &lt;3.11:</p>

<p>Simply change every dependency's version to <code>*</code>, then run <code>npm update --save</code>.  (<strong>Note:</strong> <a href=""https://github.com/npm/npm/issues/13555"" rel=""noreferrer"">broken in recent (3.11) versions of npm</a>).</p>

<p>Before:</p>

<pre><code>  ""dependencies"": {
    ""express"": ""*"",
    ""mongodb"": ""*"",
    ""underscore"": ""*"",
    ""rjs"": ""*"",
    ""jade"": ""*"",
    ""async"": ""*""
  }
</code></pre>

<p>After:</p>

<pre><code>  ""dependencies"": {
    ""express"": ""~3.2.0"",
    ""mongodb"": ""~1.2.14"",
    ""underscore"": ""~1.4.4"",
    ""rjs"": ""~2.10.0"",
    ""jade"": ""~0.29.0"",
    ""async"": ""~0.2.7""
  }
</code></pre>

<hr>

<p>Of course, this is the blunt hammer of updating dependencies.  It's fine if&mdash;as you said&mdash;the project is empty and nothing can break.</p>

<p>On the other hand, if you're working in a more mature project, you probably want to verify that there are no breaking changes in your dependencies before upgrading.</p>

<p>To see which modules are outdated, just run <a href=""https://docs.npmjs.com/cli/outdated"" rel=""noreferrer""><code>npm outdated</code></a>.  It will list any installed dependencies that have newer versions available.</p>
","16074029"
"Remove Object from Array using JavaScript","491124","","<p>How can I remove an object from an array? 
I wish to remove the object that includes name ""Kristian"" from ""someArray"". For example:</p>

<pre><code>someArray = [{name:""Kristian"", lines:""2,5,10""},
             {name:""John"", lines:""1,19,26,96""}];
</code></pre>

<p><strong>I want to achieve:</strong></p>

<pre><code>someArray = [{name:""John"", lines:""1,19,26,96""}];
</code></pre>
","<p>You can use several methods to remove an item from it:</p>

<pre><code>//1
someArray.shift(); // first element removed
//2
someArray = someArray.slice(1); // first element removed
//3
someArray.splice(0,1); // first element removed
//4
someArray.pop(); // last element removed
</code></pre>

<p>If you want to remove element at position <code>x</code>, use:</p>

<pre><code>someArray.splice(x,1);
</code></pre>

<p>Reply to the comment of <a href=""https://stackoverflow.com/users/995721/chill182"">@chill182</a>: you can remove one or more elements from an array using <code>Array.filter</code> (see <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter"" rel=""noreferrer""><strong>MDN</strong></a>), e.g.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>someArray = [{name:""Kristian"", lines:""2,5,10""},
             {name:""John"", lines:""1,19,26,96""},
             {name:""Brian"",lines:""3,9,62,36"" }];
johnRemoved = someArray.filter(function(el) {
    return el.name !== ""John"";
});

console.log(JSON.stringify(johnRemoved, null, ' '));</code></pre>
</div>
</div>
</p>
","10024926"
"How to uncheck a radio button?","489323","","<p>I have group of radio buttons that I want to uncheck after an AJAX form is submitted using jQuery. I have the following function:</p>

<pre><code>function clearForm(){
  $('#frm input[type=""text""]').each(function(){
      $(this).val("""");  
  });
  $('#frm input[type=""radio"":checked]').each(function(){
      $(this).checked = false;  
  });
 }
</code></pre>

<p>With the help of this function, I can clear the values at the text boxes, but I can't clear the values of the radio buttons.</p>

<p>By the way, I also tried <code>$(this).val("""");</code> but that didn't work.</p>
","<p>either (plain js)</p>

<pre><code>this.checked = false;
</code></pre>

<p>or (jQuery)</p>

<pre><code>$(this).prop('checked', false);
// Note that the pre-jQuery 1.6 idiom was
// $(this).attr('checked', false);
</code></pre>

<p>See <a href=""http://api.jquery.com/prop/"" rel=""noreferrer""><strong>jQuery prop() help page</strong></a> for an explanation on the difference between <em>attr()</em> and <em>prop()</em> and why prop() is now preferable.<br>
prop() was introduced with jQuery 1.6 in May 2011.</p>
","2117571"
"How do you access the matched groups in a JavaScript regular expression?","488146","","<p>I want to match a portion of a string using a <a href=""http://en.wikipedia.org/wiki/Regular_expression"" rel=""noreferrer"">regular expression</a> and then access that parenthesized substring:</p>

<pre><code>var myString = ""something format_abc""; // I want ""abc""

var arr = /(?:^|\s)format_(.*?)(?:\s|$)/.exec(myString);

console.log(arr);     // Prints: ["" format_abc"", ""abc""] .. so far so good.
console.log(arr[1]);  // Prints: undefined  (???)
console.log(arr[0]);  // Prints: format_undefined (!!!)
</code></pre>

<p>What am I doing wrong?</p>

<hr>

<p>I've discovered that there was nothing wrong with the regular expression code above: the actual string which I was testing against was this:</p>

<pre><code>""date format_%A""
</code></pre>

<p>Reporting that ""%A"" is undefined seems a very strange behaviour, but it is not directly related to this question, so I've opened a new one, <em><a href=""https://stackoverflow.com/questions/432826/why-is-a-matched-substring-returning-undefined-in-javascript"">Why is a matched substring returning ""undefined"" in JavaScript?</a></em>.</p>

<hr>

<p>The issue was that <code>console.log</code> takes its parameters like a <code>printf</code> statement, and since the string I was logging (<code>""%A""</code>) had a special value, it was trying to find the value of the next parameter.</p>
","<p>You can access capturing groups like this:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var myString = ""something format_abc"";
var myRegexp = /(?:^|\s)format_(.*?)(?:\s|$)/g;
var match = myRegexp.exec(myString);
console.log(match[1]); // abc</code></pre>
</div>
</div>
</p>

<p>And if there are multiple matches you can iterate over them:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var myString = ""something format_abc"";
var myRegexp = /(?:^|\s)format_(.*?)(?:\s|$)/g;
match = myRegexp.exec(myString);
while (match != null) {
  // matched text: match[0]
  // match start: match.index
  // capturing group n: match[n]
  console.log(match[0])
  match = myRegexp.exec(myString);
}</code></pre>
</div>
</div>
</p>
","432503"
"Ways to circumvent the same-origin policy","487268","","<h2>The same origin policy</h2>

<p>I wanted to make a community wiki regarding HTML/JS <strong>same-origin policies</strong> to hopefully help anyone searching for this topic. This is one of the most searched-for topics on SO and there is no consolidated wiki for it so here I go :)</p>

<blockquote>
  <p>The same origin policy prevents a
  document or script loaded from one
  origin from getting or setting
  properties of a document from another
  origin. This policy dates all the way
  back to Netscape Navigator 2.0.</p>
</blockquote>

<h2>What are some of your favorite ways to go around same-origin policies?</h2>

<p>Please keep examples verbose and preferably also link your sources.</p>
","<h2>The <code>document.domain</code> method</h2>

<ul>
<li>Method type: <strong>iframe</strong>.</li>
</ul>

<p>Note that this is an iframe method that sets the value of document.domain to a suffix of the current domain. If it does so, the shorter domain is used for subsequent origin checks. For example, assume a script in the document at <code>http://store.company.com/dir/other.html</code> executes the following statement:</p>

<pre><code>document.domain = ""company.com"";
</code></pre>

<p>After that statement executes, the page would pass the origin check with <code>http://company.com/dir/page.html</code>. However, by the same reasoning, company.com could not set <code>document.domain</code>  to <code>othercompany.com</code>.</p>

<p>With this method, you would be allowed to exectue javascript from an iframe sourced on a subdomain on a page sourced on the main domain. This method is not suited for cross-domain resources as browsers like Firefox will not allow you to change the <code>document.domain</code> to a completely alien domain.</p>

<p>Source: <a href=""https://developer.mozilla.org/en/Same_origin_policy_for_JavaScript"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en/Same_origin_policy_for_JavaScript</a></p>

<h2>The Cross-Origin Resource Sharing method</h2>

<ul>
<li>Method type: <strong>AJAX</strong>.</li>
</ul>

<p><a href=""http://www.w3.org/TR/access-control/"" rel=""nofollow noreferrer"">Cross-Origin Resource Sharing</a> (CORS) is a W3C Working Draft that defines how the browser and server must communicate when accessing sources across origins. The basic idea behind CORS is to use custom HTTP headers to allow both the browser and the server to know enough about each other to determine if the request or response should succeed or fail.</p>

<p>For a simple request, one that uses either <code>GET</code> or <code>POST</code> with no custom headers and whose body is <code>text/plain</code>, the request is sent with an extra header called <code>Origin</code>. The Origin  header contains the origin (protocol, domain name, and port) of the requesting page so that the server can easily determine whether or not it should serve a response. An example <code>Origin</code> header might look like this:</p>

<pre><code>Origin: http://www.stackoverflow.com
</code></pre>

<p>If the server decides that the request should be allowed, it sends a <code>Access-Control-Allow-Origin</code> header echoing back the same origin that was sent or <code>*</code> if it’s a public resource. For example:</p>

<pre><code>Access-Control-Allow-Origin: http://www.stackoverflow.com
</code></pre>

<p>If this header is missing, or the origins don’t match, then the browser disallows the request. If all is well, then the browser processes the request. Note that neither the requests nor responses include cookie information.</p>

<p>The Mozilla team suggests in <a href=""http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/"" rel=""nofollow noreferrer"">their post about CORS</a> that you should check for the existence of the <code>withCredentials</code>  property to determine if the browser supports CORS via XHR. You can then couple with the existence of the <code>XDomainRequest</code> object to cover all browsers:</p>

<pre><code>function createCORSRequest(method, url){
    var xhr = new XMLHttpRequest();
    if (""withCredentials"" in xhr){
        xhr.open(method, url, true);
    } else if (typeof XDomainRequest != ""undefined""){
        xhr = new XDomainRequest();
        xhr.open(method, url);
    } else {
        xhr = null;
    }
    return xhr;
}

var request = createCORSRequest(""get"", ""http://www.stackoverflow.com/"");
if (request){
    request.onload = function() {
        // ...
    };
    request.onreadystatechange = handler;
    request.send();
}
</code></pre>

<p>Note that for the CORS method to work, you need to have access to any type of server header mechanic and can't simply access any third-party resource.</p>

<p>Source: <a href=""http://www.nczonline.net/blog/2010/05/25/cross-domain-ajax-with-cross-origin-resource-sharing/"" rel=""nofollow noreferrer"">http://www.nczonline.net/blog/2010/05/25/cross-domain-ajax-with-cross-origin-resource-sharing/</a></p>

<h2>The <code>window.postMessage</code> method</h2>

<ul>
<li>Method type: <strong>iframe</strong>.</li>
</ul>

<p><code>window.postMessage</code>, when called, causes a <code>MessageEvent</code> to be dispatched at the target window when any pending script that must be executed completes (e.g. remaining event handlers if <code>window.postMessage</code> is called from an event handler, previously-set pending timeouts, etc.). The <code>MessageEvent</code> has the type message, a <code>data</code> property which is set to the string value of the first argument provided to <code>window.postMessage</code>, an <code>origin</code> property corresponding to the origin of the main document in the window calling <code>window.postMessage</code> at the time <code>window.postMessage</code> was called, and a <code>source</code> property which is the window from which <code>window.postMessage</code> is called.</p>

<p>To use <code>window.postMessage</code>, an event listener must be attached:</p>

<pre><code>    // Internet Explorer
    window.attachEvent('onmessage',receiveMessage);

    // Opera/Mozilla/Webkit
    window.addEventListener(""message"", receiveMessage, false);
</code></pre>

<p>And a <code>receiveMessage</code> function must be declared:</p>

<pre><code>function receiveMessage(event)
{
    // do something with event.data;
}
</code></pre>

<p>The off-site iframe must also send events properly via <code>postMessage</code>:</p>

<pre><code>&lt;script&gt;window.parent.postMessage('foo','*')&lt;/script&gt;
</code></pre>

<p>Any window may access this method on any other window, at any time, regardless of the location of the document in the window, to send it a message. Consequently, any event listener used to receive messages must  first check the identity of the sender of the message, using the origin  and possibly source properties. This cannot be understated: <strong>Failure to check the <code>origin</code> and possibly <code>source</code> properties enables cross-site scripting attacks.</strong></p>

<p>Source: <a href=""https://developer.mozilla.org/en/DOM/window.postMessage"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en/DOM/window.postMessage</a></p>
","3076648"
"How to get all properties values of a Javascript Object (without knowing the keys)?","487232","","<p>If there is an Javascript object: </p>

<pre><code>var objects={...};
</code></pre>

<p>Suppose, it has more than 50 properties, without knowing the property names (that's without knowing the 'keys') how to get each property value in a loop?</p>
","<p>By using a simple <code>for..in</code> loop:</p>

<pre><code>for(var key in objects) {
    var value = objects[key];
}
</code></pre>
","7306683"
"Check if option is selected with jQuery, if not select a default","486721","","<p>Using jQuery, how do you check if there is an option selected in a select menu, and if not, assign one of the options as selected.</p>

<p>(The select is generated with a maze of PHP functions in an app I just inherited, so this is a quick fix while I get my head around those :)</p>
","<p>While I'm not sure about exactly what you want to accomplish, this bit of code worked for me.</p>

<pre><code>&lt;select id=""mySelect"" multiple=""multiple""&gt;
  &lt;option value=""1""&gt;First&lt;/option&gt;
  &lt;option value=""2""&gt;Second&lt;/option&gt;
  &lt;option value=""3""&gt;Third&lt;/option&gt;
  &lt;option value=""4""&gt;Fourth&lt;/option&gt;
&lt;/select&gt;

&lt;script type=""text/javascript""&gt; 
$(document).ready(function() {
  if (!$(""#mySelect option:selected"").length) {
    $(""#mySelect option[value='3']"").attr('selected', 'selected');
  }
});
&lt;/script&gt;
</code></pre>
","149820"
"Download a file by jQuery.Ajax","485391","","<p>I have a Struts2 action in the server side for file downloading.</p>

<pre><code>&lt;action name=""download"" class=""com.xxx.DownAction""&gt;
    &lt;result name=""success"" type=""stream""&gt;
        &lt;param name=""contentType""&gt;text/plain&lt;/param&gt;
        &lt;param name=""inputName""&gt;imageStream&lt;/param&gt;
        &lt;param name=""contentDisposition""&gt;attachment;filename={fileName}&lt;/param&gt;
        &lt;param name=""bufferSize""&gt;1024&lt;/param&gt;
    &lt;/result&gt;
&lt;/action&gt;
</code></pre>

<p>However when I call the action using the jQuery:</p>

<pre><code>$.post(
  ""/download.action"",{
    para1:value1,
    para2:value2
    ....
  },function(data){
      console.info(data);
   }
);
</code></pre>

<p>in Firebug I see the data is retrieved with the <strong>Binary stream</strong>. I wonder how to open the <strong>file downloading window</strong> with which the user can save the file locally?</p>
","<p><a href=""https://stackoverflow.com/a/7660817/107768"">Bluish</a> is completely right about this, you can't do it through Ajax because JavaScript cannot save files directly to a user's computer (out of security concerns). Unfortunately pointing the <em>main window's</em> URL at your file download means you have little control over what the user experience is when a file download occurs.</p>

<p>I created <a href=""http://johnculviner.com/post/2012/03/22/Ajax-like-feature-rich-file-downloads-with-jQuery-File-Download.aspx"" rel=""noreferrer"">jQuery File Download</a> which allows for an ""Ajax like"" experience with file downloads complete with OnSuccess and OnFailure callbacks to provide for a better user experience. Take a look at my <a href=""http://johnculviner.com/post/2012/03/22/Ajax-like-feature-rich-file-downloads-with-jQuery-File-Download.aspx"" rel=""noreferrer"">blog post</a> on the common problem that the plugin solves and some ways to use it and also a <a href=""http://jqueryfiledownload.apphb.com/"" rel=""noreferrer"">demo of jQuery File Download in action</a>. Here is the <a href=""http://github.com/johnculviner/jquery.fileDownload/blob/master/src/Scripts/jquery.fileDownload.js"" rel=""noreferrer"">source</a></p>

<p>Here is a simple use case demo using the plugin <a href=""http://github.com/johnculviner/jquery.fileDownload/blob/master/src/Scripts/jquery.fileDownload.js"" rel=""noreferrer"">source</a> with promises. The <a href=""http://jqueryfiledownload.apphb.com/"" rel=""noreferrer"">demo page</a> includes many other, 'better UX' examples as well.</p>

<pre><code>$.fileDownload('some/file.pdf')
    .done(function () { alert('File download a success!'); })
    .fail(function () { alert('File download failed!'); });
</code></pre>

<p>Depending on what browsers you need to support you may be able to use <a href=""https://github.com/eligrey/FileSaver.js/"" rel=""noreferrer"">https://github.com/eligrey/FileSaver.js/</a> which allows more explicit control than the IFRAME method jQuery File Download uses.</p>
","9970672"
"How can you check for a #hash in a URL using JavaScript?","484769","","<p>I have some jQuery JavaScript code that I want to run only when there is a hash (#) anchor link in a URL. How can you check for this character using JavaScript? I need a simple catch-all test that would detect URLs like these:</p>

<ul>
<li>example.com/page.html#anchor</li>
<li>example.com/page.html#anotheranchor</li>
</ul>

<p>Basically something along the lines of:</p>

<pre><code>if (thereIsAHashInTheUrl) {        
    do this;
} else {
    do this;
}
</code></pre>

<p>If anyone could point me in the right direction, that would be much appreciated.</p>
","<p>Simple:</p>

<pre><code>if(window.location.hash) {
  // Fragment exists
} else {
  // Fragment doesn't exist
}
</code></pre>
","298513"
"Adjust width height of iframe to fit with content in it","484542","","<p>I need a solution for auto-adjusting the width and height of an iframe to barely fit its content. The point is that the width and height can be changed after the iframe has been loaded. I guess I need an event action to deal with the change in dimensions of the body contained in the iframe.</p>
","<pre><code>&lt;script type=""application/javascript""&gt;

function resizeIFrameToFitContent( iFrame ) {

    iFrame.width  = iFrame.contentWindow.document.body.scrollWidth;
    iFrame.height = iFrame.contentWindow.document.body.scrollHeight;
}

window.addEventListener('DOMContentLoaded', function(e) {

    var iFrame = document.getElementById( 'iFrame1' );
    resizeIFrameToFitContent( iFrame );

    // or, to resize all iframes:
    var iframes = document.querySelectorAll(""iframe"");
    for( var i = 0; i &lt; iframes.length; i++) {
        resizeIFrameToFitContent( iframes[i] );
    }
} );

&lt;/script&gt;

&lt;iframe src=""usagelogs/default.aspx"" id=""iFrame1""&gt;&lt;/iframe&gt;
</code></pre>
","819455"
"How to Get Element By Class in JavaScript?","484126","","<p>I want to replace the contents within a html element so I'm using the following function for that:</p>

<pre><code>function ReplaceContentInContainer(id,content) {
   var container = document.getElementById(id);
   container.innerHTML = content;
}

ReplaceContentInContainer('box','This is the replacement text');

&lt;div id='box'&gt;&lt;/div&gt;
</code></pre>

<p>The above works great but the problem is I have more than one html element on a page that I want to replace the contents of. So I can't use ids but classes instead. I have been told that javascript does not support any type of inbuilt get element by class function. So how can the above code be revised to make it work with classes instead of ids? </p>

<p>P.S. I don't want to use jQuery for this.</p>
","<p>This code should work in all browsers.</p>

<pre><code>function replaceContentInContainer(matchClass, content) {
    var elems = document.getElementsByTagName('*'), i;
    for (i in elems) {
        if((' ' + elems[i].className + ' ').indexOf(' ' + matchClass + ' ')
                &gt; -1) {
            elems[i].innerHTML = content;
        }
    }
}
</code></pre>

<p>The way it works is by looping through all of the elements in the document, and searching their class list for <code>matchClass</code>. If a match is found, the contents is replaced.</p>

<p><a href=""http://jsfiddle.net/AXdtH/2/"" rel=""noreferrer"">jsFiddle Example, using Vanilla JS (i.e. no framework)</a></p>
","3808886"
"How to disable scrolling temporarily?","484063","","<p>I'm using the scrollTo jQuery plugin and would like to know if it is somehow possible to temporarily disable scrolling on the window element through Javascript? The reason I'd like to disable scrolling is that when you scroll while scrollTo is animating, it gets really ugly ;)</p>

<p>Of course, I could do a <code>$(""body"").css(""overflow"", ""hidden"");</code> and then put it back to auto when the animation stops, but it would be better if the scrollbar was still visible but inactive.</p>
","<p>The <code>scroll</code> event cannot be canceled. But you can do it by <strong>canceling</strong> these interaction events:<br>
<strong>Mouse</strong> <em>&amp;</em> <strong>Touch scroll</strong> and <strong>Buttons</strong> associated with scrolling.</p>

<h2>[<a href=""http://output.jsbin.com/xatidu/4/"" rel=""noreferrer"">Working demo</a>]</h2>

<pre><code>// left: 37, up: 38, right: 39, down: 40,
// spacebar: 32, pageup: 33, pagedown: 34, end: 35, home: 36
var keys = {37: 1, 38: 1, 39: 1, 40: 1};

function preventDefault(e) {
  e = e || window.event;
  if (e.preventDefault)
      e.preventDefault();
  e.returnValue = false;  
}

function preventDefaultForScrollKeys(e) {
    if (keys[e.keyCode]) {
        preventDefault(e);
        return false;
    }
}

function disableScroll() {
  if (window.addEventListener) // older FF
      window.addEventListener('DOMMouseScroll', preventDefault, false);
  window.onwheel = preventDefault; // modern standard
  window.onmousewheel = document.onmousewheel = preventDefault; // older browsers, IE
  window.ontouchmove  = preventDefault; // mobile
  document.onkeydown  = preventDefaultForScrollKeys;
}

function enableScroll() {
    if (window.removeEventListener)
        window.removeEventListener('DOMMouseScroll', preventDefault, false);
    window.onmousewheel = document.onmousewheel = null; 
    window.onwheel = null; 
    window.ontouchmove = null;  
    document.onkeydown = null;  
}
</code></pre>
","4770179"
"Get the value of checked checkbox?","483286","","<p>So I've got code that looks like this:</p>

<pre><code>&lt;input class=""messageCheckbox"" type=""checkbox"" value=""3"" name=""mailId[]""&gt;
&lt;input class=""messageCheckbox"" type=""checkbox"" value=""1"" name=""mailId[]""&gt;
</code></pre>

<p>I just need Javascript to get the value of whatever checkbox is currently checked.</p>

<p><strong>EDIT</strong>: To add, there will only be ONE checked box.</p>
","<p><em>For modern browsers</em>:</p>

<pre><code>var checkedValue = document.querySelector('.messageCheckbox:checked').value;
</code></pre>

<p><em>By using <code>jQuery</code></em>:</p>

<pre><code>var checkedValue = $('.messageCheckbox:checked').val();
</code></pre>

<p><em>Pure javascript without <code>jQuery</code></em>:</p>

<pre><code>var checkedValue = null; 
var inputElements = document.getElementsByClassName('messageCheckbox');
for(var i=0; inputElements[i]; ++i){
      if(inputElements[i].checked){
           checkedValue = inputElements[i].value;
           break;
      }
}
</code></pre>
","11599728"
"How do I remove a key from a JavaScript object?","482840","","<p>Let's say we have an object with this format:</p>

<pre><code>var thisIsObject= {
   'Cow' : 'Moo',
   'Cat' : 'Meow',
   'Dog' : 'Bark'
};
</code></pre>

<p>I wanted to do a function that removes by key:</p>

<pre><code>removeFromObjectByKey('Cow');
</code></pre>
","<p>The <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/delete"" rel=""noreferrer""><code>delete</code></a> operator allows you to remove a property from an object.  </p>

<p>The following examples all do the same thing.</p>

<pre><code>// Example 1
var key = ""Cow"";
delete thisIsObject[key]; 

// Example 2
delete thisIsObject[""Cow""];

// Example 3
delete thisIsObject.Cow;
</code></pre>

<p>If you're interested, read <a href=""http://perfectionkills.com/understanding-delete/"" rel=""noreferrer"">Understanding Delete</a> for an in-depth explanation.</p>
","3455416"
"How to reload or re-render the entire page using AngularJS","482755","","<p>After rendering the entire page based on several user contexts and having made several <code>$http</code> requests, I want the user to be able to switch contexts and re-render everything again (resending all <code>$http</code> requests, etc). If I just redirect the user somewhere else, things work properly:</p>

<pre><code>$scope.on_impersonate_success = function(response) {
  //$window.location.reload(); // This cancels any current request
  $location.path('/'); // This works as expected, if path != current_path
};

$scope.impersonate = function(username) {
  return auth.impersonate(username)
    .then($scope.on_impersonate_success, $scope.on_auth_failed);
};
</code></pre>

<p>If I use <code>$window.location.reload()</code>, then some of the <code>$http</code> requests on <code>auth.impersonate(username)</code> that are waiting for a response get cancelled, so I can't use that. Also, the hack <code>$location.path($location.path())</code> doesn't work either (nothing happens).</p>

<p>Is there another way to re-render the page without manually issuing all requests again?</p>
","<p>For the record, to force angular to re-render the current page, you can use:</p>

<pre><code>$route.reload();
</code></pre>

<p>According to AngularJS <a href=""http://docs.angularjs.org/api/ngRoute/service/$route"" rel=""noreferrer"">documentation</a>:</p>

<blockquote>
  <p>Causes $route service to reload the current route even if $location hasn't changed.</p>
  
  <p>As a result of that, ngView creates new scope, reinstantiates the controller.</p>
</blockquote>
","16821726"
"Optimum way to compare strings in Javascript?","482249","","<p>I am trying to optimize a function which does binary search of strings in Javascript.</p>

<p>Binary search requires you to know whether the key is <code>==</code> the pivot or <code>&lt;</code> the pivot.</p>

<p>But this requires two string comparisons in Javascript, unlike in <code>C</code> like languages which have the <code>strcmp()</code> function that returns three values (-1, 0, +1) for (less than, equal, greater than).</p>

<p>Is there such a native function in Javascript, that can return a ternary value so that just one comparison is required in each iteration of the binary search?</p>
","<p>You can use the <code>localeCompare()</code> method. </p>

<pre><code>string_a.localeCompare(string_b);

/* Expected Returns:

 0:  exact match

-1:  string_a &lt; string_b

 1:  string_a &gt; string_b

 */
</code></pre>

<p>Further Reading:</p>

<ul>
<li><a href=""https://stackoverflow.com/questions/1179366/is-there-a-javascript-strcmp"">Stack Overflow - Is there a JavaScript strcmp()?</a></li>
<li><a href=""http://www.tutorialspoint.com/javascript/string_localecompare.htm"" rel=""noreferrer"">Tutorials Point - Javascript String - localeCompare() Method</a></li>
</ul>
","2167619"
"How do you launch the JavaScript debugger in Google Chrome?","481851","","<p>When using Google Chrome, I want to debug some JavaScript code. How can I do that?</p>
","<p>Windows: <kbd>CTRL</kbd>-<kbd>SHIFT</kbd>-<kbd>J</kbd> OR F12</p>

<p>Mac: <kbd>⌥</kbd>-<kbd>⌘</kbd>-<kbd>J</kbd></p>

<p>Also available through the wrench menu (Tools > JavaScript Console):</p>

<p><img src=""https://i.stack.imgur.com/Ktv4E.png"" alt=""JavaScript Console Menu""></p>
","66434"
"Array.size() vs Array.length","479411","","<p>What is the difference between the two?</p>

<p>So I know that <code>array.size()</code> is a function while <code>array.length</code> is a property. Is there a usecase for using one over the other? Is one more efficient (I would imagine <code>.length</code> to be significantly faster as it is a property rather then a method call?) Why would one ever use the slower option? Are there some browsers that are incompatible with one or the other?</p>

<pre><code>  var x = [];
  console.log(x.size());
  console.log(x.length);
  console.log(x.size()==x.length);
  x =[1,2,3];
  console.log(x.size());
  console.log(x.length);
  console.log(x.size()==x.length);
</code></pre>

<p>Will print:</p>

<pre><code>  0, 0, true
  3, 3, true
</code></pre>
","<h2>Array.size() is not a valid method</h2>

<p><strong>Always use the length property</strong></p>

<p>There is a library or script adding the size method to the array prototype since this is not a native array method. This is commonly done to add support for a custom getter. An example of using this would be when you want to get the size in memory of an array (which is the only thing I can think of that would be useful for this name).</p>

<p>Underscore.js unfortunately defines a <code>size</code> method which actually returns the length of an object or array. Since unfortunately the length property of a function is defined as the number of named arguments the function declares they had to use an alternative and size was chosen (count would have been a better choice).</p>
","14202745"
"Convert object string to JSON","478262","","<p>How can I convert a string that describes an object into a JSON string using JavaScript (or jQuery)?</p>

<p>e.g: Convert this (<em>NOT</em> a valid JSON string): 
</p>

<pre><code>var str = ""{ hello: 'world', places: ['Africa', 'America', 'Asia', 'Australia'] }""
</code></pre>

<p>into this:</p>

<pre class=""lang-js prettyprint-override""><code>str = '{ ""hello"": ""world"", ""places"": [""Africa"", ""America"", ""Asia"", ""Australia""] }'
</code></pre>

<p>I would love to avoid using <code>eval()</code> if possible.</p>
","<p><strong>If the string is from a trusted source</strong>, you could use <code>eval</code> then <code>JSON.stringify</code> the result. Like this:</p>

<pre><code>var str = ""{ hello: 'world', places: ['Africa', 'America', 'Asia', 'Australia'] }"";
var json = JSON.stringify(eval(""("" + str + "")""));
</code></pre>

<p>Note that when you <code>eval</code> an object literal, it has to be wrapped in parentheses, otherwise the braces are parsed as a block instead of an object.</p>

<p>I also agree with the comments under the question that it would be much better to just encode the object in valid JSON to begin with and avoid having to parse, encode, then presumably parse it <em>again</em>. HTML supports single-quoted attributes (just be sure to HTML-encode any single quotes inside strings).</p>
","9036552"
"How can I convert string to datetime with format specification in JavaScript?","477229","","<p>How can I convert a string to a date time object in javascript by specifying a format string?</p>

<p>I am looking for something like:</p>

<pre><code>var dateTime = convertToDateTime(""23.11.2009 12:34:56"", ""dd.MM.yyyy HH:mm:ss"");
</code></pre>
","<p>I think this can help you: <a href=""http://www.mattkruse.com/javascript/date/"" rel=""noreferrer"">http://www.mattkruse.com/javascript/date/</a></p>

<p>There's a <code>getDateFromFormat()</code> function that you can tweak a little to solve your problem.</p>

<p>Update: there's an updated version of the samples available at <a href=""http://www.javascripttoolbox.com/lib/date/index.php"" rel=""noreferrer"">javascripttoolbox.com</a></p>
","476121"
"Javascript if else shorthand","476772","","<p>Can I write the 'if else' shorthand without the else? </p>

<p>eg:</p>

<pre><code>var x=1;

x==2? dosomething:doNothingButContinueCode;   
</code></pre>

<p>I've noticed putting 'null' for the else works but I have no idea why or if that's a good idea. </p>

<p>EDIT: Some of you seem bemused why I'd bother trying this. Rest assured it's purely out of curiosity. I like messing around with js.  </p>
","<p>This is also an option:</p>

<pre><code>x == 2 &amp;&amp; dosomething();
</code></pre>

<p><code>dosomething()</code> will only be called if <code>x == 2</code>. This is called <a href=""http://www.openjs.com/articles/syntax/short_circuit_operators.php"">Short-circuiting</a>.</p>

<p>It is not commonly used in cases like this and you really shouldn't write code like this. I encourage this approach instead:</p>

<pre><code>if(x == 2) { dosomething(); }
</code></pre>

<p>You should write readable code at all times; if you are worried about file size, just create a minified version of it with help of one of the thousands of JS compressors. (I recommend Google's <a href=""http://closure-compiler.appspot.com/home"">Closure Compiler</a>)</p>
","11069385"
"How do I declare a namespace in JavaScript?","475345","","<p>How do I create a namespace in JavaScript so that my objects and functions aren't overwritten by other same-named objects and functions? I've used the following:</p>

<pre><code>if (Foo == null || typeof(Foo) != ""object"") { var Foo = new Object();}
</code></pre>

<p>Is there a more elegant or succinct way of doing this?</p>
","<p>I like this:</p>

<pre><code>var yourNamespace = {

    foo: function() {
    },

    bar: function() {
    }
};

...

yourNamespace.foo();
</code></pre>
","881556"
"Is object empty?","474481","","<p>What is the fastest way to check if an object is empty or not?</p>

<p>Is there a faster and better way than this:</p>

<pre><code>function count_obj(obj){
    var i = 0;
    for(var key in obj){
        ++i;
    }

    return i;
}
</code></pre>
","<p>I'm assuming that by <em>empty</em> you mean ""has no properties of its own"".</p>

<pre><code>// Speed up calls to hasOwnProperty
var hasOwnProperty = Object.prototype.hasOwnProperty;

function isEmpty(obj) {

    // null and undefined are ""empty""
    if (obj == null) return true;

    // Assume if it has a length property with a non-zero value
    // that that property is correct.
    if (obj.length &gt; 0)    return false;
    if (obj.length === 0)  return true;

    // If it isn't an object at this point
    // it is empty, but it can't be anything *but* empty
    // Is it empty?  Depends on your application.
    if (typeof obj !== ""object"") return true;

    // Otherwise, does it have any properties of its own?
    // Note that this doesn't handle
    // toString and valueOf enumeration bugs in IE &lt; 9
    for (var key in obj) {
        if (hasOwnProperty.call(obj, key)) return false;
    }

    return true;
}
</code></pre>

<p>Examples:</p>

<pre><code>isEmpty(""""), // true
isEmpty(33), // true (arguably could be a TypeError)
isEmpty([]), // true
isEmpty({}), // true
isEmpty({length: 0, custom_property: []}), // true

isEmpty(""Hello""), // false
isEmpty([1,2,3]), // false
isEmpty({test: 1}), // false
isEmpty({length: 3, custom_property: [1,2,3]}) // false
</code></pre>

<p>If you only need to handle <a href=""http://caniuse.com/#search=use-strict"">ECMAScript5 browsers</a>, you can use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames""><code>Object.getOwnPropertyNames</code></a> instead of the <a href=""https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Object/hasOwnProperty""><code>hasOwnProperty</code></a> loop:</p>

<pre><code>if (Object.getOwnPropertyNames(obj).length &gt; 0) return false;
</code></pre>

<p>This will ensure that even if the object only has non-enumerable properties <code>isEmpty</code> will still give you the correct results.</p>
","4994244"
"How to short circuit Array.forEach like calling break?","473863","","<pre><code>[1,2,3].forEach(function(el) {
    if(el === 1) break;
});
</code></pre>

<p>How can I do this using the new <code>forEach</code> method in JavaScript?</p>
","<p>There's no built-in ability to <code>break</code> in <code>forEach</code>. To interrupt execution you would have to throw an exception of some sort. eg.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var BreakException = {};

try {
  [1, 2, 3].forEach(function(el) {
    console.log(el);
    if (el === 2) throw BreakException;
  });
} catch (e) {
  if (e !== BreakException) throw e;
}</code></pre>
</div>
</div>
</p>

<p>JavaScript exceptions aren't terribly pretty. A traditional <code>for</code> loop might be more appropriate if you really need to <code>break</code> inside it. </p>

<h2>Use <a href=""https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Array/some"" rel=""noreferrer""><code>Array#some</code></a></h2>

<p>Instead, use <a href=""https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Array/some"" rel=""noreferrer""><code>Array#some</code></a>:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>[1, 2, 3].some(function(el) {
  console.log(el);
  return el === 2;
});</code></pre>
</div>
</div>
</p>

<p>This works because <code>some</code> returns <code>true</code> as soon as any of the callbacks, executed in array order, return <code>true</code>, short-circuiting the execution of the rest.</p>

<p><code>some</code>, its inverse <a href=""https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Array/every"" rel=""noreferrer""><code>every</code></a> (which will stop on a <code>return false</code>), and <code>forEach</code> are all ECMAScript Fifth Edition methods which will need to be added to the <code>Array.prototype</code> on browsers where they're missing.</p>
","2641374"
"How to detect Safari, Chrome, IE, Firefox and Opera browser?","473819","","<p>I have 5 addons / extensions for FF, Chrome, IE, Opera and Safari. </p>

<p>I need the code to recognize the user browser and redirect (on click in an install button) to download the corresponding addon.</p>
","<p>Googling for browser reliable detection often results in checking the User agent string. This method is <strong>not</strong> reliable, because it's trivial to spoof this value.<br>
I've written a method to detect browsers by <a href=""https://en.wikipedia.org/wiki/Duck_typing"" rel=""noreferrer"">duck-typing</a>.</p>

<p>Only use the browser detection method if it's truly necessary, such as showing browser-specific instructions to install an extension. <strong>Use feature detection when possible.</strong></p>

<p>Demo: <a href=""https://jsfiddle.net/311aLtkz/"" rel=""noreferrer"">https://jsfiddle.net/311aLtkz/</a></p>

<pre><code>// Opera 8.0+
var isOpera = (!!window.opr &amp;&amp; !!opr.addons) || !!window.opera || navigator.userAgent.indexOf(' OPR/') &gt;= 0;

// Firefox 1.0+
var isFirefox = typeof InstallTrigger !== 'undefined';

// Safari 3.0+ ""[object HTMLElementConstructor]"" 
var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) { return p.toString() === ""[object SafariRemoteNotification]""; })(!window['safari'] || (typeof safari !== 'undefined' &amp;&amp; safari.pushNotification));

// Internet Explorer 6-11
var isIE = /*@cc_on!@*/false || !!document.documentMode;

// Edge 20+
var isEdge = !isIE &amp;&amp; !!window.StyleMedia;

// Chrome 1+
var isChrome = !!window.chrome &amp;&amp; !!window.chrome.webstore;

// Blink engine detection
var isBlink = (isChrome || isOpera) &amp;&amp; !!window.CSS;
</code></pre>

<h2>Analysis of reliability</h2>

<p>The <a href=""https://stackoverflow.com/revisions/9851769/1"">previous method</a> depended on properties of the rendering engine (<a href=""https://developer.mozilla.org/En/CSS/Box-sizing#Browser_compatibility"" rel=""noreferrer""><code>-moz-box-sizing</code></a> and <code>-webkit-transform</code>) to detect the browser. These prefixes will eventually be dropped, so to make detection even more robust, I switched to browser-specific characteristics:</p>

<ul>
<li>Internet Explorer: JScript's <a href=""https://msdn.microsoft.com/en-us/library/8ka90k2e(v=vs.94).aspx"" rel=""noreferrer"">Conditional compilation</a> (up until IE9) and <a href=""https://msdn.microsoft.com/en-us/library/ie/cc196988%28v=vs.85%29.aspx"" rel=""noreferrer""><code>document.documentMode</code></a>.</li>
<li>Edge: In Trident and Edge browsers, Microsoft's implementation exposes the <code>StyleMedia</code> constructor. Excluding Trident leaves us with Edge.</li>
<li>Firefox: Firefox's API to install add-ons: <a href=""https://developer.mozilla.org/en-US/docs/XPInstall_API_Reference/InstallTrigger_Object"" rel=""noreferrer""><code>InstallTrigger</code></a></li>
<li>Chrome: The global <code>chrome</code> object, containing several properties including a documented <a href=""https://developer.chrome.com/extensions/webstore"" rel=""noreferrer""><code>chrome.webstore</code></a> object.</li>
<li>Safari: A unique naming pattern in its naming of constructors. This is the least durable method of all listed properties and guess what? In Safari 9.1.3 it was fixed. So we are checking against <code>SafariRemoteNotification</code>, which was introduced after version 7.1, to cover all Safaris from 3.0 and upwards. </li>
<li>Opera: <code>window.opera</code> has existed for years, but <a href=""https://dev.opera.com/blog/300-million-users-and-move-to-webkit/"" rel=""noreferrer"">will be dropped</a> when Opera replaces its engine with Blink + V8 (used by Chromium).  

<ul>
<li>Update 1: <a href=""http://blogs.opera.com/desktop/2013/05/opera-next-15-0-released/"" rel=""noreferrer"">Opera 15 has been released</a>, its UA string looks like Chrome, but with the addition of ""OPR"". In this version the <code>chrome</code> object is defined (but <code>chrome.webstore</code> isn't). Since Opera tries hard to clone Chrome, I use user agent sniffing for this purpose.</li>
<li>Update 2: <code>!!window.opr &amp;&amp; opr.addons</code> can be used to detect <a href=""https://dev.opera.com/extensions/addons.html"" rel=""noreferrer"">Opera 20+</a> (evergreen).</li>
</ul></li>
<li>Blink: <code>CSS.supports()</code> <a href=""http://caniuse.com/#feat=css-supports-api"" rel=""noreferrer"">was introduced in Blink</a> once Google switched on Chrome 28. It's of course, the same Blink used in Opera.</li>
</ul>

<h2>Successfully tested in:</h2>

<ul>
<li>Firefox 0.8 - 44</li>
<li>Chrome 1.0 - 48</li>
<li>Opera 8.0 - 34</li>
<li>Safari 3.0 - 10</li>
<li>IE 6 - 11</li>
<li>Edge - 20-25</li>
</ul>

<blockquote>
  <p>Updated in November 2016 to include detection of Safari browsers from 9.1.3 and upwards</p>
</blockquote>
","9851769"
".prop() vs .attr()","473746","","<p>So <a href=""http://api.jquery.com/category/version/1.6/"" rel=""noreferrer"">jQuery 1.6</a> has the new function <a href=""http://api.jquery.com/prop/"" rel=""noreferrer""><code>prop()</code></a>.</p>

<pre><code>$(selector).click(function(){
    //instead of:
    this.getAttribute('style');
    //do i use:
    $(this).prop('style');
    //or:
    $(this).attr('style');
})
</code></pre>

<p>or in this case do they do the same thing?</p>

<p>And if I <em>do</em> have to switch to using <code>prop()</code>, all the old <code>attr()</code> calls will break if i switch to 1.6?</p>

<p><strong>UPDATE</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>selector = '#id'

$(selector).click(function() {
    //instead of:
    var getAtt = this.getAttribute('style');
    //do i use:
    var thisProp = $(this).prop('style');
    //or:
    var thisAttr = $(this).attr('style');

    console.log(getAtt, thisProp, thisAttr);
});</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.6.0/jquery.min.js""&gt;&lt;/script&gt;
&lt;div id='id' style=""color: red;background: orange;""&gt;test&lt;/div&gt;</code></pre>
</div>
</div>
</p>

<p>(see also this fiddle: <a href=""http://jsfiddle.net/maniator/JpUF2/"" rel=""noreferrer"">http://jsfiddle.net/maniator/JpUF2/</a>)</p>

<p>The console logs the <code>getAttribute</code> as a string, and the <code>attr</code> as a string, but the <code>prop</code> as a <code>CSSStyleDeclaration</code>, Why? And how does that affect my coding in the future?</p>
","<p><strong>Update 1 November 2012</strong></p>

<p>My original answer applies specifically to jQuery 1.6. My advice remains the same but jQuery 1.6.1 changed things slightly: in the face of the predicted pile of broken websites, the jQuery team <a href=""http://blog.jquery.com/2011/05/12/jquery-1-6-1-released/"" rel=""noreferrer"">reverted <code>attr()</code> to something close to (but not exactly the same as) its old behaviour for Boolean attributes</a>. John Resig also <a href=""http://ejohn.org/blog/jquery-16-and-attr/"" rel=""noreferrer"">blogged about it</a>. I can see the difficulty they were in but still disagree with the recommendation to prefer <code>attr()</code>.</p>

<p><strong>Original answer</strong></p>

<p>If you've only ever used jQuery and not the DOM directly, this could be a confusing change, although it is definitely an improvement conceptually. Not so good for the bazillions of sites using jQuery that will break as a result of this change though.</p>

<p>I'll summarize the main issues:</p>

<ul>
<li>You usually want <code>prop()</code> rather than <code>attr()</code>.</li>
<li>In the majority of cases, <code>prop()</code> does what <code>attr()</code> used to do. Replacing calls to <code>attr()</code> with <code>prop()</code> in your code will generally work.</li>
<li>Properties are generally simpler to deal with than attributes. An attribute value may only be a string whereas a property can be of any type. For example, the <code>checked</code> property is a Boolean, the <code>style</code> property is an object with individual properties for each style, the <code>size</code> property is a number.</li>
<li>Where both a property and an attribute with the same name exists, usually updating one will update the other, but this is not the case for certain attributes of inputs, such as <code>value</code> and <code>checked</code>: for these attributes, the property always represents the current state while the attribute (except in old versions of IE) corresponds to the default value/checkedness of the input (reflected in the <code>defaultValue</code> / <code>defaultChecked</code> property).</li>
<li>This change removes some of the layer of magic jQuery stuck in front of attributes and properties, meaning jQuery developers will have to learn a bit about the difference between properties and attributes. This is a good thing.</li>
</ul>

<p>If you're a jQuery developer and are confused by this whole business about properties and attributes, you need to take a step back and learn a little about it, since jQuery is no longer trying so hard to shield you from this stuff. For the authoritative but somewhat dry word on the subject, there's the specs: <a href=""http://www.w3.org/TR/dom/"" rel=""noreferrer"">DOM4</a>, <a href=""http://www.w3.org/TR/DOM-Level-2-HTML/"" rel=""noreferrer"">HTML DOM</a>, <a href=""http://www.w3.org/TR/DOM-Level-2-Core"" rel=""noreferrer"">DOM Level 2</a>, <a href=""http://www.w3.org/TR/DOM-Level-3-Core/"" rel=""noreferrer"">DOM Level 3</a>. Mozilla's DOM documentation is valid for most modern browsers and is easier to read than the specs, so you may find their <a href=""https://developer.mozilla.org/en/gecko_dom_reference"" rel=""noreferrer"">DOM reference</a> helpful. There's a <a href=""https://developer.mozilla.org/en/DOM/element#Properties"" rel=""noreferrer"">section on element properties</a>.</p>

<p>As an example of how properties are simpler to deal with than attributes, consider a checkbox that is initially checked. Here are two possible pieces of valid HTML to do this:</p>

<pre><code>&lt;input id=""cb"" type=""checkbox"" checked&gt;
&lt;input id=""cb"" type=""checkbox"" checked=""checked""&gt;
</code></pre>

<p>So, how do you find out if the checkbox is checked with jQuery? Look on Stack Overflow and you'll commonly find the following suggestions:</p>

<ul>
<li><code>if ( $(""#cb"").attr(""checked"") === true ) {...}</code></li>
<li><code>if ( $(""#cb"").attr(""checked"") == ""checked"" ) {...}</code></li>
<li><code>if ( $(""#cb"").is("":checked"") ) {...}</code></li>
</ul>

<p>This is actually the simplest thing in the world to do with the <code>checked</code> Boolean property, which has existed and worked flawlessly in every major scriptable browser since 1995:</p>

<p><code>if (document.getElementById(""cb"").checked) {...}</code></p>

<p>The property also makes checking or unchecking the checkbox trivial:</p>

<p><code>document.getElementById(""cb"").checked = false</code></p>

<p>In jQuery 1.6, this unambiguously becomes</p>

<p><code>$(""#cb"").prop(""checked"", false)</code></p>

<p>The idea of using the <code>checked</code> attribute for scripting a checkbox is unhelpful and unnecessary. The property is what you need.</p>

<ul>
<li>It's not obvious what the correct way to check or uncheck the checkbox is using the <code>checked</code> attribute</li>
<li>The attribute value reflects the default rather than the current visible state (except in some older versions of IE, thus making things still harder). The attribute tells you nothing about the whether the checkbox on the page is checked. See <a href=""http://jsfiddle.net/VktA6/49/"" rel=""noreferrer"">http://jsfiddle.net/VktA6/49/</a>.</li>
</ul>
","5876747"
"Selecting last element in JavaScript array","473418","","<p>I'm making an application that updates a user's location and path in real time and displays this on a Google Map. I have functionality that allows multiple users to be tracked at the same time using an object, which is updated every second. </p>

<p>Right now, when a user pressed a button in the Android app, the coordinates are sent to a database and each time the location changes, a marker is updated on the map (and a polyline is formed). </p>

<p>Since I have multiple users, I send a unique and randomly generated alphanumeric string so that I can display an individual path for each user. When the JS pulls this data from the database, it checks if the user exists, if it does not, it creates a new key with the value being a list. It would look something like this:</p>

<pre><code>loc = {f096012e-2497-485d-8adb-7ec0b9352c52: [new google.maps.LatLng(39, -86),
                                              new google.maps.LatLng(38, -87),
                                              new google.maps.LatLng(37, -88)],
       44ed0662-1a9e-4c0e-9920-106258dcc3e7: [new google.maps.LatLng(40, -83),
                                              new google.maps.LatLng(41, -82),
                                              new google.maps.LatLng(42, -81)]}
</code></pre>

<p>What I'm doing is storing a list of coordinates as the value of the key, which is the user's ID. My program keeps updating this list each time the location is changed by adding to the list (this works properly). </p>

<p>What I need to do is update the marker's location each time the location changes. I would like to do this by selecting the last item in the array since that would be the last known location. Right now, each time the location is changed a new marker is added to the map (each one of the points in the example would show a marker at that location) so markers continue to be added. </p>

<p>I would use a ´for (x in loc)` statement each time the location updates to grab the last location from the list and use that to update the marker. How do I select this last element from the array within the hash?</p>
","<h2>How to access last element of an array</h2>

<p>It looks like that:</p>

<pre class=""lang-js prettyprint-override""><code>var my_array = /* some array here */;
var last_element = my_array[my_array.length - 1];
</code></pre>

<p>Which in your case looks like this:</p>

<pre class=""lang-js prettyprint-override""><code>var array1 = loc['f096012e-2497-485d-8adb-7ec0b9352c52'];
var last_element = array1[array1.length - 1];
</code></pre>

<p>or, in longer version, without creating new variables:</p>

<pre class=""lang-js prettyprint-override""><code>loc['f096012e-2497-485d-8adb-7ec0b9352c52'][loc['f096012e-2497-485d-8adb-7ec0b9352c52'].length - 1];
</code></pre>

<h2>How to add a method for getting it simpler</h2>

<p>If you are a fan for creating functions/shortcuts to fulfill such tasks, the following code:</p>

<pre><code>if (!Array.prototype.last){
    Array.prototype.last = function(){
        return this[this.length - 1];
    };
};
</code></pre>

<p>will allow you to get the last element of an array by invoking array's <code>last()</code> method, in your case eg.:</p>

<pre><code>loc['f096012e-2497-485d-8adb-7ec0b9352c52'].last();
</code></pre>

<p>You can check that it works here: <a href=""http://jsfiddle.net/D4NRN/"" rel=""noreferrer"">http://jsfiddle.net/D4NRN/</a></p>
","9050354"
"How to trigger event in JavaScript?","472936","","<p>I have attached an event to a text box using <code>addEventListener</code>. It works fine. My problem arose when I wanted to trigger the event programmatically from another function. </p>

<p>How can I do it?</p>
","<p>You can use <a href=""http://msdn.microsoft.com/en-us/library/ms536423%28VS.85%29.aspx"" rel=""noreferrer"">fireEvent</a> on IE 8 or lower, and w3c's <a href=""https://developer.mozilla.org/en/DOM/element.dispatchEvent"" rel=""noreferrer"">dispatchEvent</a> on most other browsers. To create the event you want to fire, you can use either <code>createEvent</code> or <code>createEventObject</code> depending on the browser.</p>

<p>Here is a self-explanatory piece of code (from prototype) that fires an event <code>dataavailable</code> on an <code>element</code>:</p>

<pre><code>  var event; // The custom event that will be created

  if (document.createEvent) {
    event = document.createEvent(""HTMLEvents"");
    event.initEvent(""dataavailable"", true, true);
  } else {
    event = document.createEventObject();
    event.eventType = ""dataavailable"";
  }

  event.eventName = ""dataavailable"";

  if (document.createEvent) {
    element.dispatchEvent(event);
  } else {
    element.fireEvent(""on"" + event.eventType, event);
  }
</code></pre>
","2490876"
"Abort Ajax requests using jQuery","472432","","<p>Using jQuery, how can I <strong>cancel/abort an Ajax request</strong> that I have not yet received the response from?</p>
","<p>Most of the jQuery Ajax methods return an XMLHttpRequest (or the equivalent) object, so you can just use <code>abort()</code>.</p>

<p>See the documentation:</p>

<ul>
<li><a href=""http://msdn.microsoft.com/en-us/library/ms535920%28VS.85%29.aspx"" rel=""noreferrer"">abort Method</a> (<a href=""http://en.wikipedia.org/wiki/Microsoft_Developer_Network"" rel=""noreferrer"">MSDN</a>). Cancels the current HTTP request.</li>
<li><a href=""https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/abort"" rel=""noreferrer"">abort()</a> (<a href=""http://en.wikipedia.org/wiki/Mozilla_Developer_Network"" rel=""noreferrer"">MDN</a>). If the request has been sent already, this method will abort the request.</li>
</ul>



<pre><code>var xhr = $.ajax({
    type: ""POST"",
    url: ""some.php"",
    data: ""name=John&amp;location=Boston"",
    success: function(msg){
       alert( ""Data Saved: "" + msg );
    }
});

//kill the request
xhr.abort()
</code></pre>

<p><strong>UPDATE:</strong>
As of jQuery 1.5 the returned object is a wrapper for the native XMLHttpRequest object called jqXHR. This object appears to expose all of the native properties and methods so the above example still works. See <em><a href=""http://api.jquery.com/jQuery.ajax/#jqXHR"" rel=""noreferrer"">The jqXHR Object</a></em> (jQuery API documentation).</p>

<p><strong>UPDATE 2:</strong>
As of jQuery 3, the ajax method returns a promise without extra methods (like abort), so this will no longer work. See the <a href=""http://blog.jquery.com/2016/01/14/jquery-3-0-beta-released/"" rel=""noreferrer"">3.0 blog here</a>. One way around this is to control the xhr object through the <code>xhr</code> property. Here is a crude example:</p>

<pre><code>var xhr = new window.XMLHttpRequest();
var request = $.ajax({
    url : url,
    xhr : function(){
        return xhr;
    }
});
xhr.abort();
</code></pre>
","446626"
"Remove ALL white spaces from text","472236","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/3794919/replace-all-spaces-in-a-string-with"">Replace all spaces in a string with &#39;+&#39;</a>  </p>
</blockquote>



<pre><code>$(""#topNav"" + $(""#breadCrumb2nd"").text().replace("" "", """")).addClass(""current"");
</code></pre>

<p>This is a snippet from my code. I want to add a class to an ID after getting another ID's text property. The problem with this, is the ID holding the text I need, contains gaps between the letters. </p>

<p>I would like the white spaces removed. I have tried <code>TRIM()</code>and <code>REPLACE()</code> but this only partially works. The <code>REPLACE()</code> only removes the 1st space.</p>
","<p>You have to tell replace() to repeat the regex:</p>

<pre><code>.replace(/ /g,'')
</code></pre>

<p>The <strong>g</strong> character means to repeat the search through the entire string.  Read about this, and other RegEx modifiers available in JavaScript <a href=""http://www.w3schools.com/jsref/jsref_obj_regexp.asp"" rel=""noreferrer"">here</a>.</p>

<p>If you want to match all whitespace, and not just the literal space character, use <code>\s</code> as well:</p>

<pre><code>.replace(/\s/g,'')
</code></pre>
","6623263"
"How do I find out which DOM element has the focus?","472233","","<p>I would like to find out, in Javascript, which element currently has focus. I've been looking through the DOM and haven't found what I need, yet. Is there a way to do this, and how?</p>

<p>The reason I was looking for this:</p>

<p>I'm trying to make keys like the arrows and <code>enter</code> navigate through a table of input elements. Tab works now, but enter and arrows do not by default it seems. I've got the key handling part set up but now I need to figure out how to move the focus over in the event handling functions.</p>
","<p>Use <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement"" rel=""noreferrer""><code>document.activeElement</code></a>, it is supported in all major browsers.</p>

<p>Previously, if you were trying to find out what form field has focus, you could not. To emulate detection within older browsers, add a ""focus"" event handler to all fields and record the last-focused field in a variable. Add a ""blur"" handler to clear the variable upon a blur event for the last-focused field.</p>

<p>Related links:</p>

<ul>
<li><a href=""https://developer.mozilla.org/en/DOM/document.activeElement#Browser_compatibility"" rel=""noreferrer"">activeElement Browser Compatibility</a></li>
<li><a href=""https://stackoverflow.com/questions/3328320/jquery-alternative-for-document-activeelement"">jQuery alternative for document.activeElement</a></li>
</ul>
","497108"
"Refresh/reload the content in Div using jquery/ajax","471885","","<p>I want to reload a div on click of a button. I do not want to reload the full page.</p>

<p>Here is my code:</p>

<p>HTML:</p>

<pre><code>&lt;div role=""button"" class=""marginTop50 marginBottom""&gt;
    &lt;input type=""button"" id=""getCameraSerialNumbers"" value=""Capture Again"" class=""disabled"" /&gt;
    &lt;input type=""button"" id=""confirmNext""  value=""Confirm &amp; Proceed"" class=""disabled marginLeft50"" /&gt;
&lt;/div&gt;
</code></pre>

<p>On click of <code>&lt;input type=""button"" id=""getCameraSerialNumbers"" value=""Capture Again""&gt;</code> Button a <code>&lt;div id=""list""&gt;....&lt;/div&gt;</code> should reload without loading or refreshing full page.</p>

<p>Below is the Jquery which I tried, but not working:-</p>

<pre><code>$(""#getCameraSerialNumbers"").click(function () {
    $(""#step1Content"").load();
});
</code></pre>

<p>Please suggest.</p>

<p>Here is the DIV on my page, which contains Pictures and Serial numbers of some products... Which will be coming from database 1st time on the Page Load. But Is User faces some issue he'll click tthe ""Capture Again"" button ""<code>&lt;input type=""button"" id=""getCameraSerialNumbers"" value=""Capture Again""&gt;</code>"" which will load those information again.</p>

<p>The HTML Code of Div:-</p>

<pre><code>&lt;div id=""step1Content"" role=""Step1ShowCameraCaptures"" class=""marginLeft""&gt;

&lt;form&gt;
    &lt;h1&gt;Camera Configuration&lt;/h1&gt;
    &lt;!-- Step 1.1 - Image Captures Confirmation--&gt;
    &lt;div id=""list""&gt;
        &lt;div&gt;
            &lt;p&gt;
                &lt;a id=""pickheadImageLightBox"" data-lightbox=""image-1"" title="""" href=""""&gt;
                    &lt;img alt="""" id=""pickheadImage"" src="""" width=""250"" height=""200"" /&gt;
                &lt;/a&gt;
            &lt;/p&gt;
            &lt;p&gt;
                &lt;strong&gt;Pickhead Camera Serial No:&lt;/strong&gt;&lt;br /&gt;
                &lt;span id=""pickheadImageDetails""&gt;&lt;/span&gt;
            &lt;/p&gt;
        &lt;/div&gt;
        &lt;div&gt;
            &lt;p&gt;
                &lt;a id=""processingStationSideImageLightBox"" data-lightbox=""image-1"" title="""" href=""""&gt;
                    &lt;img alt="""" id=""processingStationSideImage"" src="""" width=""250"" height=""200"" /&gt;
                &lt;/a&gt;
            &lt;/p&gt;
            &lt;p&gt;
                &lt;strong&gt;Processing Station Top Camera Serial No:&lt;/strong&gt;&lt;br /&gt;
                &lt;span id=""processingStationSideImageDetails""&gt;&lt;/span&gt;
            &lt;/p&gt;
        &lt;/div&gt;
        &lt;div&gt;
            &lt;p&gt;
                &lt;a id=""processingStationTopImageLightBox"" data-lightbox=""image-1"" title="""" href=""""&gt;
                    &lt;img alt="""" id=""processingStationTopImage"" src="""" width=""250"" height=""200"" /&gt;
                &lt;/a&gt;
            &lt;/p&gt;
            &lt;p&gt;
                &lt;strong&gt;Processing Station Side Camera Serial No:&lt;/strong&gt;&lt;br /&gt;
                &lt;span id=""processingStationTopImageDetails""&gt;&lt;/span&gt;
            &lt;/p&gt;
        &lt;/div&gt;
        &lt;div&gt;
            &lt;p&gt;
                &lt;a id=""cardScanImageLightBox"" data-lightbox=""image-1"" title="""" href=""""&gt;
                    &lt;img alt="""" id=""cardScanImage"" src="""" width=""250"" height=""200"" /&gt;
                &lt;/a&gt;
            &lt;/p&gt;
            &lt;p&gt;
                &lt;strong&gt;Card Scan Camera Serial No:&lt;/strong&gt;&lt;br /&gt;
                &lt;span id=""cardScanImageDetails""&gt;&lt;/span&gt;
            &lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=""clearall""&gt;&lt;/div&gt;

    &lt;div class=""marginTop50""&gt;
        &lt;p&gt;&lt;input type=""radio"" name=""radio1"" id=""optionYes"" /&gt;Yes, the infomation captured is correct.&lt;/p&gt;
        &lt;p&gt;&lt;input type=""radio"" name=""radio1"" id=""optionNo"" /&gt;No, Please capture again.&lt;/p&gt;
    &lt;/div&gt;
    &lt;div role=""button"" class=""marginTop50 marginBottom""&gt;
        &lt;input type=""button"" id=""getCameraSerialNumbers"" value=""Capture Again"" class=""disabled"" /&gt;
        &lt;input type=""button"" id=""confirmNext""  value=""Confirm &amp; Proceed"" class=""disabled marginLeft50"" /&gt;
    &lt;/div&gt;
&lt;/form&gt;
</code></pre>

<p></p>

<p>Now on click of <code>&lt;input type=""button"" id=""getCameraSerialNumbers"" value=""Capture Again"" class=""disabled"" /&gt;</code> button, the information which is in <code>&lt;div id=""list""&gt;... &lt;/div&gt;</code>  should be loaded again. </p>

<p>Please let me know if you need some more information.</p>
","<p>I always use this, works perfect.</p>

<pre><code>$(document).ready(function(){
        $(function(){
        $('#ideal_form').submit(function(e){
                e.preventDefault();
                var form = $(this);
                var post_url = form.attr('action');
                var post_data = form.serialize();
                $('#loader3', form).html('&lt;img src=""../../images/ajax-loader.gif"" /&gt;       Please wait...');
                $.ajax({
                    type: 'POST',
                    url: post_url, 
                    data: post_data,
                    success: function(msg) {
                        $(form).fadeOut(800, function(){
                            form.html(msg).fadeIn().delay(2000);

                        });
                    }
                });
            });
        });
         });
</code></pre>
","21135348"
"How do I check if an object has a key in JavaScript?","470933","","<p>Which is the right thing to do?</p>

<pre><code>if (myObj['key'] == undefined)
</code></pre>

<p>or</p>

<pre><code>if (myObj['key'] == null)
</code></pre>

<p>or</p>

<pre><code>if (myObj['key'])
</code></pre>
","<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaSccript/Reference/Operators/in"" rel=""noreferrer"">Try the javascript <strong>in</strong> operator.</a></p>

<pre><code>if ('key' in myObj)
</code></pre>

<p>And the inverse.</p>

<pre><code>if (!('key' in myObj))
</code></pre>

<p><strong>Be careful!</strong> The <code>in</code> operator matches all object keys, including those in the object's prototype chain.</p>

<p>Use <code>myObj.hasOwnProperty('key')</code> to check an object's own keys and will only return <code>true</code> if <code>key</code> is available on <code>myObj</code> directly:</p>

<pre><code>myObj.hasOwnProperty('key')
</code></pre>

<p>Unless you have a specific reason to use the <code>in</code> operator, using <code>myObj.hasOwnProperty('key')</code> produces the result most code is looking for.</p>
","455366"
"When to use double or single quotes in JavaScript?","470123","","<p><code>console.log(""double"");</code> vs <code>console.log('single');</code></p>

<p>I see more and more JavaScript libraries out there using single quotes when handling strings. What are the reasons to use one over the other? I thought they're pretty much interchangeable.</p>
","<p>The most likely reason for use of single vs double in different libraries is programmer preference and/or API consistency.</p>

<p>Other than being consistent, use whichever best suits the string:.</p>

<p>Using the other type of quote as a literal:</p>

<pre><code>alert('Say ""Hello""');
alert(""Say 'Hello'"");
</code></pre>

<p>…but this can get complicated…</p>

<pre><code>alert(""It's \""game\"" time."");
alert('It\'s ""game"" time.');
</code></pre>

<p>Another option, new in ES6, are <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals"" rel=""noreferrer"">Template literals</a> which use the <code>back-tick</code> character:</p>

<pre><code>alert(`Use ""double"" and 'single' quotes in the same string`);
alert(`The escape the \` back-tick character in a string`);
</code></pre>

<p>Template literals offer a clean syntax for: variable interpolation, multi-line strings, and more.</p>
","242833"
"Check if element is visible after scrolling","469703","","<p>I'm loading elements via AJAX. Some of them are only visible if you scroll down the page.<br>
Is there any way I can know if an element is now in the visible part of the page?</p>
","<p>This should do the trick:</p>

<pre><code>function isScrolledIntoView(elem)
{
    var docViewTop = $(window).scrollTop();
    var docViewBottom = docViewTop + $(window).height();

    var elemTop = $(elem).offset().top;
    var elemBottom = elemTop + $(elem).height();

    return ((elemBottom &lt;= docViewBottom) &amp;&amp; (elemTop &gt;= docViewTop));
}
</code></pre>

<p><strong>Simple Utility Function</strong>
This will allow you to call a utility function that accepts the element you're looking for and if you want the element to be fully in view or partially.</p>

<pre><code>function Utils() {

}

Utils.prototype = {
    constructor: Utils,
    isElementInView: function (element, fullyInView) {
        var pageTop = $(window).scrollTop();
        var pageBottom = pageTop + $(window).height();
        var elementTop = $(element).offset().top;
        var elementBottom = elementTop + $(element).height();

        if (fullyInView === true) {
            return ((pageTop &lt; elementTop) &amp;&amp; (pageBottom &gt; elementBottom));
        } else {
            return ((elementTop &lt;= pageBottom) &amp;&amp; (elementBottom &gt;= pageTop));
        }
    }
};

var Utils = new Utils();
</code></pre>

<p><strong>Usage</strong></p>

<pre><code>var isElementInView = Utils.isElementInView($('#flyout-left-container'), false);

if (isElementInView) {
    console.log('in view');
} else {
    console.log('out of view');
}
</code></pre>
","488073"
"How do you convert a JavaScript date to UTC?","469328","","<p>Suppose a user of your website enters a date range.</p>

<pre><code>2009-1-1 to 2009-1-3
</code></pre>

<p>You need to send this date to a server for some processing, but the server expects all dates and times to be in UTC. </p>

<p>Now suppose the user is in Alaska or Hawaii or Fiji. Since they are in a timezone quite different from UTC, the date range needs to be converted to something like this:</p>

<pre><code>2009-1-1T8:00:00 to 2009-1-4T7:59:59
</code></pre>

<p>Using the JavaScript Date object, how would you convert the first ""localized"" date range into something the server will understand?</p>
","<p>The format you need is created with the <code>.toISOString()</code> method.  For older browsers (ie8 and under), which don't natively support this method, the shim can be found <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/toISOString"" rel=""noreferrer"">here</a>: </p>

<p>This will give you the ability to do what you need:</p>

<pre><code>var isoDate = new Date('yourdatehere').toISOString();
</code></pre>

<p>For Timezone work, <a href=""http://momentjs.com/"" rel=""noreferrer"">moment.js and moment.js timezone</a> are really invaluable tools...especially for navigating timezones between client and server javascript.</p>
","11957822"
"Playing audio with Javascript?","469324","","<p>I am making a game with HTML5 and Javascript.</p>

<p>How could I play game audio via Javascript?</p>
","<p>If you don't want to mess with HTML elements:</p>

<pre class=""lang-js prettyprint-override""><code>var audio = new Audio('audio_file.mp3');
audio.play();
</code></pre>

<p>This uses the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement"" rel=""noreferrer""><code>HTMLAudioElement</code></a> interface, which plays audio the same way as the <a href=""https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio"" rel=""noreferrer""><code>&lt;audio&gt;</code> element</a>.</p>

<p>If you need more functionality, I used the <a href=""http://goldfirestudios.com/blog/104/howler.js-Modern-Web-Audio-Javascript-Library"" rel=""noreferrer"">howler.js</a> library and found it simple and useful.</p>
","18628124"
"How do I bind to list of checkbox values with AngularJS?","467767","","<p>I have a few checkboxes:</p>

<pre><code>&lt;input type='checkbox' value=""apple"" checked&gt;
&lt;input type='checkbox' value=""orange""&gt;
&lt;input type='checkbox' value=""pear"" checked&gt;
&lt;input type='checkbox' value=""naartjie""&gt;
</code></pre>

<p>That I would like to bind to a list in my controller such that whenever a checkbox is changed the controller maintains a list of all the checked values, for example, <code>['apple', 'pear']</code>.</p>

<p>ng-model seems to only be able to bind the value of one single checkbox to a variable in the controller.</p>

<p>Is there another way to do it so that I can bind the four checkboxes to a list in the controller?</p>
","<p>There are two ways to approach this problem. Either use a simple array or an array of objects. Each solution has it pros and cons. Below you'll find one for each case.</p>

<hr>

<h3>With a simple array as input data</h3>

<p>The HTML could look like:</p>

<pre><code>&lt;label ng-repeat=""fruitName in fruits""&gt;
  &lt;input
    type=""checkbox""
    name=""selectedFruits[]""
    value=""{{fruitName}}""
    ng-checked=""selection.indexOf(fruitName) &gt; -1""
    ng-click=""toggleSelection(fruitName)""
  &gt; {{fruitName}}
&lt;/label&gt;
</code></pre>

<p>And the appropriate controller code would be:</p>

<pre><code>app.controller('SimpleArrayCtrl', ['$scope', function SimpleArrayCtrl($scope) {

  // Fruits
  $scope.fruits = ['apple', 'orange', 'pear', 'naartjie'];

  // Selected fruits
  $scope.selection = ['apple', 'pear'];

  // Toggle selection for a given fruit by name
  $scope.toggleSelection = function toggleSelection(fruitName) {
    var idx = $scope.selection.indexOf(fruitName);

    // Is currently selected
    if (idx &gt; -1) {
      $scope.selection.splice(idx, 1);
    }

    // Is newly selected
    else {
      $scope.selection.push(fruitName);
    }
  };
}]);
</code></pre>

<p><strong>Pros</strong>: Simple data structure and toggling by name is easy to handle</p>

<p><strong>Cons</strong>: Add/remove is cumbersome as two lists (the input and selection) have to be managed</p>

<hr>

<h3>With an object array as input data</h3>

<p>The HTML could look like:</p>

<pre><code>&lt;label ng-repeat=""fruit in fruits""&gt;
  &lt;!--
    - Use `value=""{{fruit.name}}""` to give the input a real value, in case the form gets submitted
      traditionally

    - Use `ng-checked=""fruit.selected""` to have the checkbox checked based on some angular expression
      (no two-way-data-binding)

    - Use `ng-model=""fruit.selected""` to utilize two-way-data-binding. Note that `.selected`
      is arbitrary. The property name could be anything and will be created on the object if not present.
  --&gt;
  &lt;input
    type=""checkbox""
    name=""selectedFruits[]""
    value=""{{fruit.name}}""
    ng-model=""fruit.selected""
  &gt; {{fruit.name}}
&lt;/label&gt;
</code></pre>

<p>And the appropriate controller code would be:</p>

<pre><code>app.controller('ObjectArrayCtrl', ['$scope', 'filterFilter', function ObjectArrayCtrl($scope, filterFilter) {

  // Fruits
  $scope.fruits = [
    { name: 'apple',    selected: true },
    { name: 'orange',   selected: false },
    { name: 'pear',     selected: true },
    { name: 'naartjie', selected: false }
  ];

  // Selected fruits
  $scope.selection = [];

  // Helper method to get selected fruits
  $scope.selectedFruits = function selectedFruits() {
    return filterFilter($scope.fruits, { selected: true });
  };

  // Watch fruits for changes
  $scope.$watch('fruits|filter:{selected:true}', function (nv) {
    $scope.selection = nv.map(function (fruit) {
      return fruit.name;
    });
  }, true);
}]);
</code></pre>

<p><strong>Pros</strong>: Add/remove is very easy</p>

<p><strong>Cons</strong>: Somewhat more complex data structure and toggling by name is cumbersome or requires a helper method</p>

<hr>

<p><strong>Demo</strong>: <a href=""http://jsbin.com/ImAqUC/1/"" rel=""noreferrer"">http://jsbin.com/ImAqUC/1/</a></p>
","14520103"
"JavaScript: location.href to open in new window/tab?","467157","","<p>I have a JavaScript file from a third party developer. It has a has link which replaces the current page with the target. I want to have this page opened in a new tab.</p>

<p>This is what I have so far:</p>

<pre><code>if (command == 'lightbox') {
 location.href=""https://support.wwf.org.uk/earth_hour/index.php?type=individual"";
}
</code></pre>

<p>Can anyone help me out?</p>
","<pre><code>window.open(
  'https://support.wwf.org.uk/earth_hour/index.php?type=individual',
  '_blank' // &lt;- This is what makes it open in a new window.
);
</code></pre>
","5141926"
"How to add a “readonly” attribute to an <input>?","466337","","<p>How can I add <code>readonly</code> to a specific <code>&lt;input&gt;</code>? <code>.attr('readonly')</code> does not work.</p>
","<p>jQuery &lt;1.9</p>

<pre><code>$('#inputId').attr('readonly', true);
</code></pre>

<p>jQuery 1.9+</p>

<pre><code>$('#inputId').prop('readonly', true);
</code></pre>

<p>Read more about <a href=""https://stackoverflow.com/q/5874652/340046"">difference between prop and attr</a></p>
","1306723"
"typeof !== ""undefined"" vs. != null","465761","","<p>I often see JavaScript code which checks for undefined parameters etc. this way:</p>

<pre><code>if (typeof input !== ""undefined"") {
    // do stuff
}
</code></pre>

<p>This seems kind of wasteful, since it involves both a type lookup and a string comparison, not to mention its verbosity. It's needed because 'undefined' could be renamed, though. My question is: How is that code any better than this approach:</p>

<pre><code>if (null != input) {
    // do stuff
}
</code></pre>

<p>As far as I know, you can't redefine null, so it's not going to break unexpectedly. And, because of the type-coercion of the != operator, this checks for both undefined and null... which is often exactly what you want (e.g. for optional function parameters). Yet this form does not seem widespread, and it even causes JSLint to yell at you for using the evil != operator. Why is this considered bad style?</p>
","<p><code>typeof</code> allows the identifier to never have been declared before. So it's safer in that regard:</p>

<pre><code>if(typeof neverDeclared == ""undefined"") //no errors

if(neverDeclared == null) //throws ReferenceError: neverDeclared is not defined
</code></pre>
","2703122"
"Get difference between 2 dates in JavaScript?","465666","","<p>How do I get the difference between 2 dates in full days (I don't want any fractions of a day)</p>

<pre><code>var date1 = new Date('7/11/2010');
var date2 = new Date('12/12/2010');
var diffDays = date2.getDate() - date1.getDate(); 
alert(diffDays)
</code></pre>

<p>I tried the above but this did not work.</p>
","<p><a href=""http://jsfiddle.net/JS69L/1/"" rel=""noreferrer"">Here is one way</a>:</p>

<pre><code>var date1 = new Date(""7/13/2010"");
var date2 = new Date(""12/15/2010"");
var timeDiff = Math.abs(date2.getTime() - date1.getTime());
var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24)); 
alert(diffDays);
</code></pre>

<p>Observe that we need to enclose the date in quotes. The rest of the code gets the time difference in milliseconds and then divides to get the number of days. Date expects mm/dd/yyyy format.</p>
","3224854"
"Using jQuery to center a DIV on the screen","465052","","<p>How do I go about setting a <code>&lt;div&gt;</code> in the center of the screen using jQuery?</p>
","<p>I like adding functions to jQuery so this function would help:</p>

<pre><code>jQuery.fn.center = function () {
    this.css(""position"",""absolute"");
    this.css(""top"", Math.max(0, (($(window).height() - $(this).outerHeight()) / 2) + 
                                                $(window).scrollTop()) + ""px"");
    this.css(""left"", Math.max(0, (($(window).width() - $(this).outerWidth()) / 2) + 
                                                $(window).scrollLeft()) + ""px"");
    return this;
}
</code></pre>

<p>Now we can just write:</p>

<pre><code>$(element).center();
</code></pre>

<p>Demo: <a href=""http://jsfiddle.net/DerekL/GbDw9/"" rel=""noreferrer"">Fiddle</a> (with added parameter)</p>
","210733"
"How to compare arrays in JavaScript?","463495","","<p>I'd like to compare two arrays... ideally, efficiently. Nothing fancy, just <code>true</code> if they are identical, and <code>false</code> if not. Not surprisingly, the comparison operator doesn't seem to work.</p>

<pre><code>var a1 = [1,2,3];
var a2 = [1,2,3];
console.log(a1==a2);    // Returns false
console.log(JSON.stringify(a1)==JSON.stringify(a2));    // Returns true
</code></pre>

<p>JSON encoding each array does, but is there a faster or ""better"" way to simply compare arrays without having to iterate through each value?</p>
","<p>I can't really believe that so many people want to compare <strong>arrays as strings</strong>. So, though this is old question, I will add the <strong>right</strong> way to compare arrays - loop through them and compare every value:  </p>

<h2>The right way:</h2>

<pre><code>// Warn if overriding existing method
if(Array.prototype.equals)
    console.warn(""Overriding existing Array.prototype.equals. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code."");
// attach the .equals method to Array's prototype to call it on any array
Array.prototype.equals = function (array) {
    // if the other array is a falsy value, return
    if (!array)
        return false;

    // compare lengths - can save a lot of time 
    if (this.length != array.length)
        return false;

    for (var i = 0, l=this.length; i &lt; l; i++) {
        // Check if we have nested arrays
        if (this[i] instanceof Array &amp;&amp; array[i] instanceof Array) {
            // recurse into the nested arrays
            if (!this[i].equals(array[i]))
                return false;       
        }           
        else if (this[i] != array[i]) { 
            // Warning - two different object instances will never be equal: {x:20} != {x:20}
            return false;   
        }           
    }       
    return true;
}
// Hide method from for-in loops
Object.defineProperty(Array.prototype, ""equals"", {enumerable: false});
</code></pre>

<h3>Usage:</h3>

<pre><code>[1, 2, [3, 4]].equals([1, 2, [3, 2]]) === false;
[1, ""2,3""].equals([1, 2, 3]) === false;
[1, 2, [3, 4]].equals([1, 2, [3, 4]]) === true;
[1, 2, 1, 2].equals([1, 2, 1, 2]) === true;
</code></pre>

<p>You may say ""<em>But it is much faster to compare strings - no loops...</em>"" well, then you should note there ARE loops. First recursive loop that converts Array to string and second, that compares two strings. So this method <strong>is faster than use of string</strong>.</p>

<p><sub>I believe that larger amounts of data should be always stored in arrays, not in objects. However if you use objects, they can be partially compared too.<br>
<strong>Here's how:</strong></sub></p>

<h2>Comparing objects:</h2>

<p>I've stated above, that two object <strong>instances</strong> will never be equal, even if they contain same data at the moment:</p>

<pre><code>({a:1, foo:""bar"", numberOfTheBeast: 666}) == ({a:1, foo:""bar"", numberOfTheBeast: 666})  //false
</code></pre>

<p>This has a reason, since there may be, for example <a href=""https://stackoverflow.com/a/201471/607407"">private variables within objects.</a></p>

<p>However, if you just use object structure to contain data, comparing is still possible:</p>

<pre><code>Object.prototype.equals = function(object2) {
    //For the first loop, we only check for types
    for (propName in this) {
        //Check for inherited methods and properties - like .equals itself
        //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty
        //Return false if the return value is different
        if (this.hasOwnProperty(propName) != object2.hasOwnProperty(propName)) {
            return false;
        }
        //Check instance type
        else if (typeof this[propName] != typeof object2[propName]) {
            //Different types =&gt; not equal
            return false;
        }
    }
    //Now a deeper check using other objects property names
    for(propName in object2) {
        //We must check instances anyway, there may be a property that only exists in object2
            //I wonder, if remembering the checked values from the first loop would be faster or not 
        if (this.hasOwnProperty(propName) != object2.hasOwnProperty(propName)) {
            return false;
        }
        else if (typeof this[propName] != typeof object2[propName]) {
            return false;
        }
        //If the property is inherited, do not check any more (it must be equa if both objects inherit it)
        if(!this.hasOwnProperty(propName))
          continue;

        //Now the detail check and recursion

        //This returns the script back to the array comparing
        /**REQUIRES Array.equals**/
        if (this[propName] instanceof Array &amp;&amp; object2[propName] instanceof Array) {
                   // recurse into the nested arrays
           if (!this[propName].equals(object2[propName]))
                        return false;
        }
        else if (this[propName] instanceof Object &amp;&amp; object2[propName] instanceof Object) {
                   // recurse into another objects
                   //console.log(""Recursing to compare "", this[propName],""with"",object2[propName], "" both named \""""+propName+""\"""");
           if (!this[propName].equals(object2[propName]))
                        return false;
        }
        //Normal value comparison for strings and numbers
        else if(this[propName] != object2[propName]) {
           return false;
        }
    }
    //If everything passed, let's say YES
    return true;
}  
</code></pre>

<p>However, remember that this one is to serve in comparing JSON like data, not class instances and other stuff. If you want to compare mor complicated objects, look at <a href=""https://stackoverflow.com/a/1144249/607407"">this answer and it's superlong function</a>.<br>
To make this work with <code>Array.equals</code> you must edit the original function a little bit:</p>

<pre><code>...
    // Check if we have nested arrays
    if (this[i] instanceof Array &amp;&amp; array[i] instanceof Array) {
        // recurse into the nested arrays
        if (!this[i].equals(array[i]))
            return false;
    }
    /**REQUIRES OBJECT COMPARE**/
    else if (this[i] instanceof Object &amp;&amp; array[i] instanceof Object) {
        // recurse into another objects
        //console.log(""Recursing to compare "", this[propName],""with"",object2[propName], "" both named \""""+propName+""\"""");
        if (!this[i].equals(array[i]))
            return false;
        }
    else if (this[i] != array[i]) {
...
</code></pre>

<p>I made a <a href=""http://jsfiddle.net/Darker/SBtu2/"" rel=""noreferrer"">little test tool for both of the functions</a>.</p>

<h2>Bonus: Nested arrays with <code>indexOf</code> and <code>contains</code></h2>

<p><a href=""https://stackoverflow.com/questions/7837456/how-to-compare-arrays-in-javascript/14853974?noredirect=1#comment59337127_14853974"">Samy Bencherif has prepared</a> useful functions for the case you're searching for a specific object in nested arrays, which are available here: <a href=""https://jsfiddle.net/SamyBencherif/8352y6yw/"" rel=""noreferrer"">https://jsfiddle.net/SamyBencherif/8352y6yw/</a></p>
","14853974"
"How does JavaScript .prototype work?","463285","","<p>I'm not that into dynamic programming languages, but I've written my fair share of JavaScript code. I never really got my head around this prototype-based programming, does any one know how this works? </p>

<pre><code>var obj = new Object(); // not a functional object
obj.prototype.test = function() { alert('Hello?'); }; // this is wrong!

function MyObject() {} // a first class functional object
MyObject.prototype.test = function() { alert('OK'); } // OK
</code></pre>

<p>I remember a lot discussion I had with people a while back (I'm not exactly sure what I'm doing) but as I understand it, there's no concept of a class. It's just an object, and instances of those objects are clones of the original, right?</p>

<p>But what is the exact purpose of this <code>.prototype</code> property in JavaScript? How does it relate to instantiating objects?</p>

<hr>

<h3>Edit</h3>

<p>These <a href=""http://ejohn.org/apps/learn/#64"" rel=""noreferrer"">slides</a> really helped a lot to understand this topic.</p>
","<p>Every JavaScript object has an internal property called <em>[[Prototype]]</em>. If you look up a property via <code>obj.propName</code> or <code>obj['propName']</code> and the object does not have such a property - which can be checked via <code>obj.hasOwnProperty('propName')</code> - the runtime looks up the property in the object referenced by [[Prototype]] instead. If the prototype-object also doesn't have such a property, its prototype is checked in turn, thus walking the original object's <em>prototype-chain</em> until a match is found or its end is reached.</p>

<p>Some JavaScript implementations allow direct access to the [[Prototype]] property, eg via a non-standard property named <code>__proto__</code>. In general, it's only possible to set an object's prototype during object creation: If you create a new object via <code>new Func()</code>, the object's [[Prototype]] property will be set to the object referenced by <code>Func.prototype</code>.</p>

<p>This allows to simulate classes in JavaScript, although JavaScript's inheritance system is - as we have seen - prototypical, and not class-based:</p>

<p>Just think of constructor functions as classes and the properties of the prototype (ie of the object referenced by the constructor function's <code>prototype</code> property) as shared members, ie members which are the same for each instance. In class-based systems, methods are implemented the same way for each instance, so methods are normally added to the prototype, whereas an object's fields are instance-specific and therefore added to the object itself during construction.</p>
","572996"
"How do you get a list of the names of all files present in a directory in Node.js?","461781","","<p>I'm trying to get a list of the names of all the files present in a directory using Node.js.  I want output that is an array of filenames. How can I do this?</p>
","<p>You can use the <a href=""https://nodejs.org/api/fs.html#fs_fs_readdir_path_options_callback"" rel=""noreferrer""><code>fs.readdir</code></a> or <a href=""https://nodejs.org/api/fs.html#fs_fs_readdirsync_path_options"" rel=""noreferrer""><code>fs.readdirSync</code></a> methods.</p>

<p><strong>fs.readdir</strong></p>

<pre><code>const testFolder = './tests/';
const fs = require('fs');

fs.readdir(testFolder, (err, files) =&gt; {
  files.forEach(file =&gt; {
    console.log(file);
  });
})
</code></pre>

<p><strong>fs.readdirSync</strong></p>

<pre><code>const testFolder = './tests/';
const fs = require('fs');

fs.readdirSync(testFolder).forEach(file =&gt; {
  console.log(file);
})
</code></pre>

<p>The difference between the two methods, is that the first one is asynchronous, so you have to provide a callback function that will be executed when the read process ends.</p>

<p>The second is synchronous, it will returns the file name array, but it will stop any further execution of your code until the read process ends.</p>
","2727191"
"JavaScript open in a new window, not tab","461592","","<p>I have a select box that calls <code>window.open(url)</code> when an item is selected.  Firefox will open the page in a new tab by default.  However, I would like the page to open in a new window, not a new tab.  </p>

<p>How can I accomplish this?</p>
","<p>Give the window a 'specs' parameter with width/height.  See <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Window.open#Position_and_size_features"" rel=""noreferrer"">here</a> for all the possible options.</p>

<pre><code>window.open(url, windowName, ""height=200,width=200"");
</code></pre>

<p>When you specify a width/height, it will open it in a new window instead of a tab.</p>
","726803"
"How to use Basic Auth with jQuery and AJAX?","461429","","<p>I am trying to create a basic auth through browser, but I can't really get there.</p>

<p>If this script won't be here the browser auth will take over, but I want to tell the browser that the user is about to make the authentication.</p>

<p>The address should be something like:</p>

<pre><code>http://username:password@server.in.local/
</code></pre>

<p>I have a form:</p>

<pre><code>&lt;form name=""cookieform"" id=""login"" method=""post""&gt;
      &lt;input type=""text"" name=""username"" id=""username"" class=""text""/&gt;
      &lt;input type=""password"" name=""password"" id=""password"" class=""text""/&gt;
      &lt;input type=""submit"" name=""sub"" value=""Submit"" class=""page""/&gt;
&lt;/form&gt;
</code></pre>

<p>And a script:</p>

<pre><code>var username = $(""input#username"").val();
var password = $(""input#password"").val();  

function make_base_auth(user, password) {
  var tok = user + ':' + password;
  var hash = Base64.encode(tok);
  return ""Basic "" + hash;
}
$.ajax
  ({
    type: ""GET"",
    url: ""index1.php"",
    dataType: 'json',
    async: false,
    data: '{""username"": ""' + username + '"", ""password"" : ""' + password + '""}',
    success: function (){
    alert('Thanks for your comment!'); 
    }
});
</code></pre>
","<p>Use jQuery's <a href=""http://api.jquery.com/jQuery.ajax/"" rel=""noreferrer""><code>beforeSend</code></a> callback to add an HTTP header with the authentication information:</p>

<pre><code>beforeSend: function (xhr) {
    xhr.setRequestHeader (""Authorization"", ""Basic "" + btoa(username + "":"" + password));
},
</code></pre>
","5507289"
"How to unset a JavaScript variable?","460622","","<p>I have a global variable in JavaScript (actually a <code>window</code> property, but I don't think it matters) which was already populated by a previous script but I don't want another script that will run later to see its value or that it was even defined.</p>

<p>I've put <code>some_var = undefined</code> and it works for the purpose of testing <code>typeof some_var == ""undefined""</code> but I really do not think it's the right way to go about it.</p>

<p>What do you think?</p>
","<p>I know this is an old thread, but the selected answer isn't clear enough for me.</p>

<p>The point is the delete operator removes a property from an object. It cannot remove a variable. So the answer to the question depends on how the global variable or property is defined.</p>

<p>(1) If it is created with var, it cannot be deleted.</p>

<p>For example:</p>

<pre><code>var g_a = 1; //create with var, g_a is a variable 
delete g_a; //return false
console.log(g_a); //g_a is still 1
</code></pre>

<p>(2) If it is created without var, it can be deleted.</p>

<pre><code>g_b = 1; //create without var, g_b is a property 
delete g_b; //return true
console.log(g_b); //error, g_b is not defined
</code></pre>

<h2>Technical Explanation</h2>

<h3>1. Using <code>var</code></h3>

<p>In this case the reference <code>g_a</code> is created in what the ECMAScript spec calls ""<a href=""http://www.ecma-international.org/ecma-262/5.1/#sec-10.3""><em>VariableEnvironment</em></a>"" that is attached to the current scope - this may be the a function execution context in the case of using <code>var</code> inside a function (though it may be get a little more complicated when you consider <code>let</code>) or in the case of ""global"" code the <em>VariableEnvironment</em> is attached to the global object (often <code>window</code>).</p>

<p>References in the <em>VariableEnvironment</em> are not normally deletable - the process detailed in <a href=""http://www.ecma-international.org/ecma-262/5.1/#sec-10.5"">ECMAScript 10.5</a> explains this in detail, but suffice it to say that unless your code is executed in an <code>eval</code> context (which most browser-based development consoles use), then variables declared with <code>var</code> cannot be deleted.</p>

<h3>2. Without Using <code>var</code></h3>

<p>When trying to assign a value to a name without using the <code>var</code> keyword, Javascript tries to locate the named reference in what the ECMAScript spec calls ""<a href=""http://www.ecma-international.org/ecma-262/5.1/#sec-10.3""><em>LexicalEnvironment</em></a>"", and the main difference is that <em>LexicalEvironment</em>s are nested - that is a <em>LexicalEnvironment</em> has a parent (what the ECMAScript spec calls ""outer environment reference"") and when Javscript fails to locate the reference in a <em>LexicalEenvironment</em>, it looks in the parent <em>LexicalEnvironment</em> (as detailed in <a href=""http://www.ecma-international.org/ecma-262/5.1/#sec-10.3.1"">10.3.1</a> and <a href=""http://www.ecma-international.org/ecma-262/5.1/#sec-10.2.2.1"">10.2.2.1</a>). The top level <em>LexicalEnvironment</em> is the ""<a href=""http://www.ecma-international.org/ecma-262/5.1/#sec-10.2.3""><em>global environment</em></a>"", and that is bound to the global object in that its references are the global object's properties. So if you try to access a name that was not declared using a <code>var</code> keyword in the current scope or any outer scopes, Javascript will eventually fetch a property of the <code>window</code> object to serve as that reference. As we've learned before, properties on objects can be deleted.</p>

<h3>Notes</h3>

<ol>
<li><p>It is important to remember that <code>var</code> declarations are ""hoisted"" - i.e. they are always considered to have happened in the beginning of the scope that they are in - though not the value initialization that may be done in a <code>var</code> statement - that is left where it is. So in the following code, <code>a</code> is a reference from the <em>VariableEnvironment</em> and not the <code>window</code> property and its value will be <code>10</code> at the end of the code:</p>

<p><code>function test() { a = 5; var a = 10; }</code></p></li>
<li><p>The above discussion is when ""strict mode"" is not enabled. Lookup rules are a bit different when using ""strict mode"" and lexical references that would have resolved to window properties without ""strict mode"" will raise ""undeclared variable"" errors under ""strict mode"". I didn't really understand where this is specified, but its how browsers behave.</p></li>
</ol>
","25919959"
"Check whether variable is number or string in JavaScript","458273","","<p>Does anyone know how can I check whether a variable is a number or a string in JavaScript?</p>
","<p>If you're dealing with literal notation, and not constructors, you can use <a href=""https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Operators/Special_Operators/typeof_Operator"" rel=""noreferrer"">typeof</a>:.</p>

<pre><code>typeof ""Hello World""; // string
typeof 123;           // number
</code></pre>

<p>If you're creating numbers and strings via a constructor, such as <code>var foo = new String(""foo"")</code>, you should keep in mind that <code>typeof</code> may return <code>object</code> for <code>foo</code>. </p>

<p>Perhaps a more foolproof method of checking the type would be to utilize the method found in <a href=""http://underscorejs.org/#"" rel=""noreferrer"">underscore.js</a> (annotated source can be found <a href=""http://underscorejs.org/docs/underscore.html#section-107"" rel=""noreferrer"">here</a>),</p>

<pre><code>var toString = Object.prototype.toString;

_.isString = function (obj) {
  return toString.call(obj) == '[object String]';
}
</code></pre>

<p>This returns a boolean <code>true</code> for the following:</p>

<pre><code>_.isString(""Jonathan""); // true
_.isString(new String(""Jonathan"")); // true
</code></pre>
","1303650"
"Detect if an element is visible","458206","","<p>Using <code>.fadeIn()</code> and <code>.fadeOut()</code>, I have been hiding/showing an element on my page, but with two buttons, one for hide and one for show. I now want to have one button to toggle both. Therefore, my question is how do I detect if the element is visible or not?</p>

<p>My HTML as it is:</p>

<pre><code>&lt;a onclick=""showTestElement()""&gt;Show&lt;/a&gt;
&lt;a onclick=""hideTestElement()""&gt;Hide&lt;/a&gt;
</code></pre>

<p>My JS as it is:</p>

<pre><code>&lt;script&gt;
    function showTestElement(){
        $('#testElement').fadeIn('fast');
    }

    function hideTestElement(){
        $('#testElement').fadeOut('fast');
    }
&lt;/script&gt;
</code></pre>

<p>My HTML as I would like to have it:</p>

<pre><code>&lt;a onclick=""toggleTestElement()""&gt;Show/Hide&lt;/a&gt;
</code></pre>

<p>My JS as  I would like to have it, although pure jQuery would be nice:</p>

<pre><code>&lt;script&gt;
    function toggleTestElement(){
        if (document.getElementById('testElement').***IS_VISIBLE***) {
            $('#testElement').fadeOut('fast');
        }
        else{
            $('#testElement').fadeIn('fast');
        }
    }
&lt;/script&gt;
</code></pre>

<p>Any help gratefully received..</p>
","<p>You're looking for:</p>

<pre><code>.is(':visible')
</code></pre>

<p>Although you should probably change your selector to use jQuery considering you're using it in other places anyway:</p>

<pre><code>if($('#testElement').is(':visible')) {
    // Code
}
</code></pre>

<p>It is important to note that if any one of a target element's parent elements are hidden, then <code>.is(':visible')</code> on the child will return <code>false</code> (which makes sense).</p>

<h3>jQuery 3</h3>

<p><code>:visible</code> has had a reputation for being quite a slow selector as it has to traverse up the DOM tree inspecting a bunch of elements. There's good news for jQuery 3, however, as <a href=""http://blog.jquery.com/2015/07/13/jquery-3-0-and-jquery-compat-3-0-alpha-versions-released/"" rel=""noreferrer"">this post</a> explains (<kbd>Ctrl</kbd> + <kbd>F</kbd> for <code>:visible</code>):</p>

<blockquote>
  <p>Thanks to some detective work by Paul Irish at Google, we identified some cases where we could skip a bunch of extra work when custom selectors like :visible are used many times in the same document. That particular case is up to 17 times faster now!</p>
  
  <p>Keep in mind that even with this improvement, selectors like :visible and :hidden can be expensive because they depend on the browser to determine whether elements are actually displaying on the page. That may require, in the worst case, a complete recalculation of CSS styles and page layout! While we don’t discourage their use in most cases, we recommend testing your pages to determine if these selectors are causing performance issues.</p>
</blockquote>

<hr>

<p>Expanding even further to your specific use case, there is a built in jQuery function called <a href=""http://api.jquery.com/fadeToggle/"" rel=""noreferrer""><code>$.fadeToggle()</code></a>:</p>

<pre><code>function toggleTestElement() {
    $('#testElement').fadeToggle('fast');
}
</code></pre>
","8774101"
"Passing data to a bootstrap modal","457326","","<p>I've got a couple of hyperlinks that each have an ID attached. When I click on this link, I want to open a modal ( <a href=""http://twitter.github.com/bootstrap/javascript.html#modals"" rel=""noreferrer"">http://twitter.github.com/bootstrap/javascript.html#modals</a> ), and pass this ID to the modal. I searched on google, but I couldn't find anything that could help me.</p>

<p>This is the code:</p>

<pre><code>&lt;a data-toggle=""modal"" data-id=""@book.Id"" title=""Add this item"" class=""open-AddBookDialog""&gt;&lt;/a&gt;
</code></pre>

<p>Which should open:</p>

<pre><code>&lt;div class=""modal hide"" id=""addBookDialog""&gt;
    &lt;div class=""modal-body""&gt;
        &lt;input type=""hidden"" name=""bookId"" id=""bookId"" value=""""/&gt;
    &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p>With this piece of code:    </p>

<pre><code>$(document).ready(function () {
    $("".open-AddBookDialog"").click(function () {
        $('#bookId').val($(this).data('id'));
        $('#addBookDialog').modal('show');
    });
});
</code></pre>

<p>However, when I click the hyperlink, nothing happens. When I give the hyperlink a href=""#addBookDialog"", the modal opens just fine, but it does't contain any data.</p>

<p>I followed this example: <a href=""https://stackoverflow.com/questions/10379624/how-to-pass-values-arguments-to-modal-show-function-in-twitter-bootstrat"">How to pass values arguments to modal.show() function in Bootstrap</a></p>

<p>(and I also tried this: <a href=""https://stackoverflow.com/questions/7845866/how-to-set-the-input-value-in-a-modal-dialogue"">How to set the input value in a modal dialogue?</a>)</p>
","<p>I think you can make this work using jQuery's <a href=""http://api.jquery.com/on/"" rel=""noreferrer"">.on</a> event handler.</p>

<p>Here's a fiddle you can test; just make sure to expand the html frame in the 
fiddle as much as possible so you can view the modal. </p>

<p><a href=""http://jsfiddle.net/Au9tc/605/"" rel=""noreferrer"">http://jsfiddle.net/Au9tc/605/</a></p>

<p><strong>HTML</strong></p>

<pre><code>&lt;p&gt;Link 1&lt;/p&gt;
&lt;a data-toggle=""modal"" data-id=""ISBN564541"" title=""Add this item"" class=""open-AddBookDialog btn btn-primary"" href=""#addBookDialog""&gt;test&lt;/a&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;


&lt;p&gt;Link 2&lt;/p&gt;
&lt;a data-toggle=""modal"" data-id=""ISBN-001122"" title=""Add this item"" class=""open-AddBookDialog btn btn-primary"" href=""#addBookDialog""&gt;test&lt;/a&gt;

&lt;div class=""modal hide"" id=""addBookDialog""&gt;
 &lt;div class=""modal-header""&gt;
    &lt;button class=""close"" data-dismiss=""modal""&gt;×&lt;/button&gt;
    &lt;h3&gt;Modal header&lt;/h3&gt;
  &lt;/div&gt;
    &lt;div class=""modal-body""&gt;
        &lt;p&gt;some content&lt;/p&gt;
        &lt;input type=""text"" name=""bookId"" id=""bookId"" value=""""/&gt;
    &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p><strong>JAVASCRIPT</strong></p>

<pre><code>$(document).on(""click"", "".open-AddBookDialog"", function () {
     var myBookId = $(this).data('id');
     $("".modal-body #bookId"").val( myBookId );
     // As pointed out in comments, 
     // it is superfluous to have to manually call the modal.
     // $('#addBookDialog').modal('show');
});
</code></pre>
","10635652"
"Print content of JavaScript object?","457136","","<p>Typically if we just use <code>alert(object);</code> it will show as <code>[object Object]</code>.  How to print all the content parameters of an object in JavaScript?</p>
","<p>If you are using Firefox, <code>alert(object.toSource())</code> should suffice for simple debugging purposes.</p>
","1625271"
"Uncaught SyntaxError: Unexpected token with JSON.parse","456961","","<p>what causes this error on the third line?</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var products = [{
  ""name"": ""Pizza"",
  ""price"": ""10"",
  ""quantity"": ""7""
}, {
  ""name"": ""Cerveja"",
  ""price"": ""12"",
  ""quantity"": ""5""
}, {
  ""name"": ""Hamburguer"",
  ""price"": ""10"",
  ""quantity"": ""2""
}, {
  ""name"": ""Fraldas"",
  ""price"": ""6"",
  ""quantity"": ""2""
}];
console.log(products);
var b = JSON.parse(products); //unexpected token o</code></pre>
</div>
</div>
</p>

<p><sup>Open console to view error</sup></p>
","<p><code>products</code> is an object.  (creating from an object literal)</p>

<p><code>JSON.parse()</code> is used to convert a <strong>string</strong> containing JSON notation into a Javascript object.</p>

<p>Your code turns the object into a string (by calling <code>.toString()</code>) in order to try to parse it as JSON text.<br>
The default <code>.toString()</code> returns <code>""[object Object]""</code>, which is not valid JSON; hence the error.</p>
","14432182"
"Programmatically change the src of an img tag","456491","","<p>How can I change the <code>src</code> attribute of an <code>img</code> tag using javascript?</p>

<pre><code>&lt;img src=""../template/edit.png"" name=edit-save/&gt;
</code></pre>

<p>at first I have a default src which is ""../template/edit.png"" and I wanted to change it with ""../template/save.png"" onclick.</p>

<p>UPDATED:
here's my html onclick:</p>

<pre><code>&lt;a href='#' onclick='edit()'&gt;&lt;img src=""../template/edit.png"" id=""edit-save""/&gt;&lt;/a&gt;
</code></pre>

<p>and my JS</p>

<pre><code>function edit()
{   
    var inputs = document.myform;
    for(var i = 0; i &lt; inputs.length; i++) {
        inputs[i].disabled = false;
    }
}
</code></pre>

<p>I've tried inserting this inside the edit(), it works but need to click the image twice</p>

<pre><code>var edit_save = document.getElementById(""edit-save"");
    edit_save.onclick = function(){
       this.src = ""../template/save.png"";
    }
</code></pre>
","<p>its ok now</p>

<pre><code>function edit()
{   
    var inputs = document.myform;
    for(var i = 0; i &lt; inputs.length; i++) {
        inputs[i].disabled = false;
    }

    var edit_save = document.getElementById(""edit-save"");

       edit_save.src = ""../template/save.png"";                              
}
</code></pre>
","11723648"
"How to find the sum of an array of numbers","456342","","<p>Given an array <code>[1, 2, 3, 4]</code>, how can I find the sum of its elements? (In this case, the sum would be <code>10</code>.)</p>

<p>I thought <a href=""http://api.jquery.com/jquery.each/"" rel=""noreferrer""><code>$.each</code></a> might be useful, but I'm not sure how to implement it.</p>
","<p>In <a href=""http://en.wikipedia.org/wiki/Lisp_%28programming_language%29"" rel=""noreferrer"">Lisp</a>, this'd be exactly the job for <code>reduce</code>. You'd see this kind of code:</p>

<pre class=""lang-lisp prettyprint-override""><code>(reduce #'+ '(1 2 3)) ; 6
</code></pre>

<p>Fortunately, in JavaScript, we also have <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/Reduce"" rel=""noreferrer""><code>reduce</code></a>! Unfortunately, <code>+</code> is an operator, not a function. But we can make it pretty! Here, look:</p>

<pre><code>var sum = [1, 2, 3].reduce(add, 0);

function add(a, b) {
    return a + b;
}

console.log(sum); // 6
</code></pre>

<p>Isn't that pretty? :-)</p>

<p>Even better! If you're using ECMAScript&nbsp;2015 (aka <a href=""https://en.wikipedia.org/wiki/ECMAScript#Harmony.2C_6th_Edition"" rel=""noreferrer"">ECMAScript&nbsp;6</a>), it can be this pretty:</p>

<pre><code>var sum = [1, 2, 3].reduce((a, b) =&gt; a + b, 0);
console.log(sum); // 6
</code></pre>
","16751601"
"onclick=""location.href='link.html'"" does not load page in Safari","455784","","<p>I cannot get <code>onclick=""location.href='link.html'""</code> to load a new page in Safari (5.0.4).</p>

<p>I am building a drop-down navigation menu using the <code>&lt;select&gt;</code> and <code>&lt;option&gt;</code> HTML tags. I am using the onClick handler to load a new page after a menu-item is clicked, but nothing happens in Safari. (I have successfully tested in FF &amp; Opera.) I know that there are many onClick bugs in Safari, but I haven't found any solutions that address this specific issue.</p>

<p>You can see a sample of my code below:</p>

<pre><code>&lt;select&gt;
    &lt;option onclick=""location.href='unit_01.htm'""&gt;Unit 1&lt;/option&gt;
&lt;/select&gt;
</code></pre>

<p>and</p>

<pre><code>&lt;select&gt;
    &lt;option onclick=""location.href='#5.2'""&gt;Bookmark 2&lt;/option&gt;
&lt;/select&gt;
</code></pre>

<p><em>I do not (and prefer not) to have any javascript embedded in the head section of my HTML.  I am developing the page for someone who does not know how to use javascript--so the simpler the code, the better.)</em>
<br />
<br />
<br />
What JavaScript code would make the menu-item clickable in all-browsers?  (Please verify compatibility with IE.)</p>
","<p>Use jQuery....I know you say you're trying to teach someone javascript, but teach him a cleaner technique... for instance, I could:</p>

<pre><code>&lt;select id=""navigation""&gt;
    &lt;option value=""unit_01.htm""&gt;Unit 1&lt;/option&gt;
    &lt;option value=""#5.2""&gt;Bookmark 2&lt;/option&gt;
&lt;/select&gt;
</code></pre>

<p>And with a little jQuery, you could do:</p>

<pre><code>$(""#navigation"").change(function()
{
    document.location.href = $(this).val();
});
</code></pre>

<p>Unobtrusive, and with clean separation of logic and UI.</p>
","6418671"
"How to tell if a string contains a certain character in JavaScript?","455134","","<p>I have a page with a textbox where a user is supposed to enter a 24 character (letters and numbers, case insensitive) registration code.  I used <code>maxlength</code> to limit the user to entering 24 characters.</p>

<p>The registration codes are typically given as groups of characters separated by dashes, but I would like for the user to enter the codes without the dashes.</p>

<p>How can I write my JavaScript code without jQuery to check that a given string that the user inputs does not contain dashes, or better yet, only contains alphanumeric characters?</p>
","<p>To find ""hello"" in <code>your_string</code></p>

<pre><code>if (your_string.indexOf('hello') &gt; -1)
{
  alert(""hello found inside your_string"");
}
</code></pre>

<p>For the alpha numeric you can use a regular expression:</p>

<p><a href=""http://www.regular-expressions.info/javascript.html"" rel=""noreferrer"">http://www.regular-expressions.info/javascript.html</a></p>

<p><a href=""https://stackoverflow.com/questions/336210/regular-expression-for-alphanumeric-and-underscores"">Alpha Numeric Regular Expression</a></p>
","4444497"
"How do you use a variable in a regular expression?","454465","","<p>I would like to create a String.replaceAll() method in JavaScript and I'm thinking that using a RegEx would be most terse way to do it.  However, I can't figure out how to pass a variable in to a RegEx.  I can do this already which will replace all the instances of ""B"" with ""A"".</p>

<pre><code>""ABABAB"".replace(/B/g, ""A"");
</code></pre>

<p>But I want to do something like this:</p>

<pre><code>String.prototype.replaceAll = function(replaceThis, withThis) {
    this.replace(/replaceThis/g, withThis);
};
</code></pre>

<p>But obviously this will only replace the text ""replaceThis""...so how do I pass this variable in to my RegEx string?</p>
","<p>Instead of using the <code>/regex/g</code> syntax, you can construct a new <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Regular_Expressions"" rel=""noreferrer"">RegExp</a> object:</p>

<pre><code>var replace = ""regex"";
var re = new RegExp(replace,""g"");
</code></pre>

<p>You can dynamically create regex objects this way. Then you will do:</p>

<pre><code>""mystring"".replace(re, ""newstring"");
</code></pre>
","494046"
"Get month name from Date","454324","","<p>How can I generate the name of the month (e.g: Oct/October) from this date object in JavaScript?</p>

<pre><code>var objDate = new Date(""10/11/2009"");
</code></pre>
","<p>Shorter version:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var monthNames = [""January"", ""February"", ""March"", ""April"", ""May"", ""June"",
  ""July"", ""August"", ""September"", ""October"", ""November"", ""December""
];

var d = new Date();
document.write(""The current month is "" + monthNames[d.getMonth()]);</code></pre>
</div>
</div>
</p>
","1643468"
"How do I debug Node.js applications?","452389","","<p>How do I debug a Node.js server application?</p>

<p>Right now I'm mostly using <em>alert debugging</em> with print statements like this:</p>

<pre><code>sys.puts(sys.inspect(someVariable));
</code></pre>

<p>There must be a better way to debug. I know that <a href=""http://en.wikipedia.org/wiki/Google_Chrome"" rel=""noreferrer"">Google Chrome</a> has a command-line debugger. Is this debugger available for Node.js as well?</p>
","<p>The <a href=""http://en.wikipedia.org/wiki/V8_%28JavaScript_engine%29"" rel=""noreferrer"">V8</a> debugger released as part of the Google <a href=""http://code.google.com/p/chromedevtools/"" rel=""noreferrer"">Chrome Developer Tools</a> can be used to debug Node.js scripts. A detailed explanation of how this works can be found in the <a href=""https://github.com/nodejs/node/wiki/Using-Eclipse-as-Node-Applications-Debugger"" rel=""noreferrer"">Node.js GitHub wiki</a>.</p>

<p><strike>There is also <a href=""http://github.com/smtlaissezfaire/ndb"" rel=""noreferrer"">ndb</a>, a command line debugger written in Node.js itself.</strike></p>
","2536734"
"Get class list for element with jQuery","452320","","<p>Is there a way in jQuery to loop through or assign to an array all of the classes that are assigned to an element?</p>

<p>ex.</p>

<pre><code>&lt;div class=""Lorem ipsum dolor_spec sit amet""&gt;Hello World!&lt;/div&gt;
</code></pre>

<p>I will be looking for a ""special"" class as in ""dolor_spec"" above.  I know that I could use hasClass() but the actual class name may not necessarily be known at the time.</p>
","<p>You can use <code>document.getElementById('divId').className.split(/\s+/);</code> to get you an array of class names.</p>

<p>Then you can iterate and find the one you want.</p>

<pre><code>var classList = document.getElementById('divId').className.split(/\s+/);
for (var i = 0; i &lt; classList.length; i++) {
    if (classList[i] === 'someClass') {
        //do something
    }
}
</code></pre>

<p>jQuery does not really help you here...</p>

<pre><code>var classList = $('#divId').attr('class').split(/\s+/);
$.each(classList, function(index, item) {
    if (item === 'someClass') {
        //do something
    }
});
</code></pre>
","1227309"
"How do I enumerate the properties of a JavaScript object?","451346","","<p>How do I enumerate the properties of a JavaScript object?</p>

<p>I actually want to list all the defined variables and their values, but I've learned that defining a variable actually creates a property of the window object.</p>
","<p>Simple enough:</p>

<pre><code>for(var propertyName in myObject) {
   // propertyName is what you want
   // you can get the value like this: myObject[propertyName]
}
</code></pre>

<p>Now, you will not get private variables this way because they are not available.</p>

<hr>

<p>EDIT: <a href=""https://stackoverflow.com/questions/85992/how-do-i-enumerate-the-properties-of-a-javascript-object#86306"">@bitwiseplatypus</a> is correct that unless you use the <code>hasOwnProperty()</code> method, you will get properties that are inherited - however, I don't know why anyone familiar with object-oriented programming would expect anything less! Typically, someone that brings this up has been subjected to Douglas Crockford's warnings about this, which still confuse me a bit. Again, inheritance is a normal part of OO languages and is therefore part of JavaScript, notwithstanding it being prototypical.</p>

<p>Now, that said, <code>hasOwnProperty()</code> <em>is</em> useful for filtering, but we don't need to sound a warning as if there is something dangerous in getting inherited properties.</p>

<p>EDIT 2: <a href=""https://stackoverflow.com/questions/85992/how-do-i-enumerate-the-properties-of-a-javascript-object#86306"">@bitwiseplatypus</a> brings up the situation that would occur should someone add properties/methods to your objects at a point in time later than when you originally wrote your objects (via its prototype) - while it is true that this might cause unexpected behavior, I personally don't see that as my problem entirely. Just a matter of opinion. Besides, what if I design things in such a way that I use prototypes during the construction of my objects and yet have code that iterates over the properties of the object and I want all inherited properties? I wouldn't use <code>hasOwnProperty()</code>. Then, let's say, someone adds new properties later. Is that my fault if things behave badly at that point? I don't think so. I think this is why jQuery, as an example, has specified ways of extending how it works (via <code>jQuery.extend</code> and <code>jQuery.fn.extend</code>).</p>
","86014"
"How to efficiently count the number of keys/properties of an object in JavaScript?","450445","","<p>What's the fastest way to count the number of keys/properties of an object?  It it possible to do this without iterating over the object?  i.e. without doing</p>

<pre><code>var count = 0;
for (k in myobj) if (myobj.hasOwnProperty(k)) count++;
</code></pre>

<p>(Firefox did provide a magic <code>__count__</code> property, but this was removed somewhere around version 4.)</p>
","<p>To do this in any ES5-compatible environment, such as <a href=""http://nodejs.org"">Node</a>, Chrome, IE 9+, FF 4+, or Safari 5+:</p>

<pre class=""lang-js prettyprint-override""><code>Object.keys(obj).length
</code></pre>

<ul>
<li><a href=""http://kangax.github.com/es5-compat-table/"">Browser compatibility</a></li>
<li><a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys"">Object.keys documentation</a> 
<ul>
<li>(includes a method you can add to non-ECMA5 browsers)</li>
</ul></li>
</ul>
","4889658"
"How to pass parameters on onChange of html select","449931","","<p>I am a novice at JavaScript and jQuery. I want to show one combobox-A, which is an HTML <code>&lt;select&gt;</code> with its selected <code>id</code> and contents at the other place on onChange(). </p>

<p>How can I pass the complete combobox with its select <code>id</code>, and how can I pass other parameters on fire of the onChange event?</p>
","<pre class=""lang-js prettyprint-override""><code>function getComboA(selectObject) {
    var value = selectObject.value;  
}
</code></pre>

<pre class=""lang-html prettyprint-override""><code>&lt;select id=""comboA"" onchange=""getComboA(this)""&gt;
&lt;option value=""""&gt;Select combo&lt;/option&gt;
&lt;option value=""Value1""&gt;Text1&lt;/option&gt;
&lt;option value=""Value2""&gt;Text2&lt;/option&gt;
&lt;option value=""Value3""&gt;Text3&lt;/option&gt;
&lt;/select&gt;
</code></pre>

<p>The above example gets you the selected value of combo box on <a href=""https://developer.mozilla.org/en-US/docs/DOM/element.onchange"" rel=""noreferrer"">OnChange</a> event.</p>
","5024082"
"Remove all child elements of a DOM node in JavaScript","448099","","<p>How would I go about removing all of the child elements of a DOM node in JavaScript?</p>

<p>Say I have the following (ugly) HTML:</p>

<pre><code>&lt;p id=""foo""&gt;
    &lt;span&gt;hello&lt;/span&gt;
    &lt;div&gt;world&lt;/div&gt;
&lt;/p&gt;
</code></pre>

<p>And I grab the node I want like so:</p>

<pre><code>var myNode = document.getElementById(""foo"");
</code></pre>

<p>How could I remove the children of <code>foo</code> so that just <code>&lt;p id=""foo""&gt;&lt;/p&gt;</code> is left?</p>

<p>Could I just do:</p>

<pre><code>myNode.childNodes = new Array();
</code></pre>

<p>or should I be using some combination of <code>removeElement</code>?</p>

<p>I'd like the answer to be straight up DOM; though extra points if you also provide an answer in jQuery along with the DOM-only answer.</p>
","<p>Option 1 (much slower, see comments below):</p>

<pre><code>var myNode = document.getElementById(""foo"");
myNode.innerHTML = '';
</code></pre>

<p>Option 2 (much faster):</p>

<pre><code>var myNode = document.getElementById(""foo"");
while (myNode.firstChild) {
    myNode.removeChild(myNode.firstChild);
}
</code></pre>
","3955238"
"OnChange event handler for radio button (INPUT type=""radio"") doesn't work as one value","447127","","<p>I'm looking for a generalized solution for this.</p>

<p>Consider 2 radio type inputs with the same name. When submitted, the one that is checked determines the value that gets sent with the form:</p>

<pre><code>&lt;input type=""radio"" name=""myRadios"" onchange=""handleChange1();"" value=""1"" /&gt;
&lt;input type=""radio"" name=""myRadios"" onchange=""handleChange2();"" value=""2"" /&gt;
</code></pre>

<p>The change event does not fire when a radio button is de-selected. So if the radio with value=""1"" is already selected and the user selects the second, handleChange1() does not run. This presents a problem (for me anyway) in that there is no event where I can can catch this de-selection.</p>

<p>What I would like is a workaround for the onchange event for the checkbox group value or alternatively an oncheck event that detects not only when a radio is checked but also when it is unchecked.</p>

<p>I'm sure some of you have run into this problem before. What are some workarounds (or ideally what is the right way to handle this)? I just want to catch the change event, access the previously checked radio as well as the newly checked radio.</p>

<p>P.S.<br>
onclick seems like a better (cross-browser) event to indicate when a radio is checked but it still does not solve the un-checked problem.</p>

<p>I suppose it makes sense why onchange for a checkbox type does work in a case like this since it changes the value that it submits when you check or un-check it. I wish the radio buttons behaved more like a SELECT element's onchange but what can you do...</p>
","<pre><code>&lt;form name=""myForm""&gt;
    &lt;input type=""radio"" name=""myRadios""  value=""1"" /&gt;
    &lt;input type=""radio"" name=""myRadios""  value=""2"" /&gt;
&lt;/form&gt;

&lt;script&gt;
    var rad = document.myForm.myRadios;
    var prev = null;
    for(var i = 0; i &lt; rad.length; i++) {
        rad[i].onclick = function() {
            (prev)? console.log(prev.value):null;
            if(this !== prev) {
                prev = this;
            }
            console.log(this.value)
        };
    }
&lt;/script&gt;
</code></pre>
","8997289"
"What is Node.js?","447044","","<p>I don't fully get what <a href=""http://en.wikipedia.org/wiki/Node.js"" rel=""nofollow noreferrer"">Node.js</a> is all about. Maybe it's because I am mainly a web based business application developer. What is it and what is the use of it?</p>

<p>My understanding so far is that:</p>

<ol>
<li>The programming model is event driven, especially the way it handles <a href=""http://en.wikipedia.org/wiki/Input/output"" rel=""nofollow noreferrer"">I/O</a>.</li>
<li>It uses <a href=""http://en.wikipedia.org/wiki/JavaScript"" rel=""nofollow noreferrer"">JavaScript</a> and the parser is <a href=""http://en.wikipedia.org/wiki/V8_%28JavaScript_engine%29"" rel=""nofollow noreferrer"">V8</a>.</li>
<li>It can be easily used to create concurrent server applications.</li>
</ol>

<p>Are my understandings correct? If yes, then what are the benefits of evented I/O, is it just more for the concurrency stuff? Also, is the direction of Node.js to become a framework like, JavaScript based (V8 based) programming model?</p>
","<p>I think the advantages are:</p>

<ol>
<li><p>Web development in a dynamic language (JavaScript) on a VM that is incredibly fast (V8). It is much faster than Ruby, Python, or Perl.</p></li>
<li><p>Ability to handle thousands of concurrent connections with minimal overhead on a single process.</p></li>
<li><p>JavaScript is perfect for event loops with first class function objects and closures. People already know how to use it this way having used it in the browser to respond to user initiated events.</p></li>
<li><p>A lot of people already know JavaScript, even people who do not claim to be programmers. It is arguably the most popular programming language.</p></li>
<li><p>Using JavaScript on a web server as well as the browser reduces the impedance mismatch between the two programming environments which can communicate data structures via JSON that work the same on both sides of the equation. Duplicate form validation code can be shared between server and client, etc.</p></li>
</ol>
","1902991"
"Changing an element's ID with jQuery","446513","","<p>I need to change an element's ID using jQuery.  </p>

<p>Apparently these don't work:</p>

<pre><code>jQuery(this).prev(""li"").attr(""id"")=""newid""
jQuery(this).prev(""li"")=""newid""
</code></pre>

<p>I found out that I can make it happen with the following code:</p>

<pre><code>jQuery(this).prev(""li"")show(function() {
    this.id=""newid"";
});
</code></pre>

<p>But that doesn't seem right to me. There must be a better way, no? Also, in case there isn't, what other method can I use instead of show/hide or other effects? Obviously I don't want to show/hide or affect the element every time, just to change its ID.</p>

<p>(Yep, I'm a jQuery newbie.)</p>

<p><strong>Edit</strong><br>
I can't use classes in this case, I must use IDs.</p>
","<p>Your syntax is incorrect, you should pass the value as the second parameter:</p>

<pre><code>jQuery(this).prev(""li"").attr(""id"",""newId"");
</code></pre>
","347808"
"How do you get the length of a string?","446354","","<p>How do you get the length of a string in jQuery?</p>
","<p>You don't need jquery, just use <code>yourstring.length</code>. See reference <a href=""https://www.w3schools.com/jsref/jsref_length_string.asp"" rel=""noreferrer"">here</a> and also <a href=""http://www.quirksmode.org/js/strings.html"" rel=""noreferrer"">here</a>.</p>
","1044110"
"Convert dd-mm-yyyy string to date","446059","","<p>i am trying to convert a string in the format dd-mm-yyyy into a date object in JavaScript using the following:</p>

<pre><code> var from = $(""#datepicker"").val();
 var to = $(""#datepickertwo"").val();
 var f = new Date(from);
 var t = new Date(to);
</code></pre>

<p><code>(""#datepicker"").val()</code> contains a date in the format dd-mm-yyyy. 
When I do the following, I get ""Invalid Date"":</p>

<pre><code>alert(f);
</code></pre>

<p>Is this because of the '-' symbol? How can I overcome this?</p>
","<p>Parse the string into the parts you need:</p>

<pre><code>var from = $(""#datepicker"").val().split(""-"");
var f = new Date(from[2], from[1] - 1, from[0]);
</code></pre>

<p><strong>Why not use a regex?</strong></p>

<p>Because you know you'll be working on a string made up of three parts, separated by hyphens.</p>

<p>However, if you were looking for that same string within another string, regex would be the way to go.</p>

<p><strong>Reuse</strong></p>

<p>Because you're doing this more than once in your sample code, and maybe elsewhere in your code base, wrap it up in a function:</p>

<pre><code>function toDate(dateStr) {
    var parts = dateStr.split(""-"");
    return new Date(parts[2], parts[1] - 1, parts[0]);
}
</code></pre>

<p>Using as:</p>

<pre><code>var from = $(""#datepicker"").val();
var to = $(""#datepickertwo"").val();
var f = toDate(from);
var t = toDate(to);
</code></pre>

<p>Or if you don't mind jQuery in your function:</p>

<pre><code>function toDate(selector) {
    var from = $(selector).val().split(""-"");
    return new Date(from[2], from[1] - 1, from[0]);
}
</code></pre>

<p>Using as:</p>

<pre><code>var f = toDate(""#datepicker"");
var t = toDate(""#datepickertwo"");
</code></pre>

<p><strong>Modern JavaScript</strong></p>

<p>If you're able to use more modern JS, array destructuring is a nice touch also:</p>

<pre><code>function toDate(dateStr) {
    const [day, month, year] = dateStr.split(""-"")
    return new Date(year, month - 1, day)
}
</code></pre>
","7151607"
"How can I add new array elements at the beginning of an array in JavaScript?","445864","","<p>I have a need to add or prepend elements at the beginning of an array.</p>

<p>For example, if my array looks like below:</p>

<pre><code>[23, 45, 12, 67]
</code></pre>

<p>And the response from my AJAX call is <code>34</code>, I want the updated array to be like the following:</p>

<pre><code>[34, 23, 45, 12, 67]
</code></pre>

<p>Currently I am planning to do it like this:</p>

<pre><code>var newArray = [];
newArray.push(response);

for (var i = 0; i &lt; theArray.length; i++) {
    newArray.push(theArray[i]);
}

theArray = newArray;
delete newArray;
</code></pre>

<p>Is there any better way to do this? Does JavaScript have any built-in functionality that does this?</p>

<p>The complexity of my method is <code>O(n)</code> and it would be really interesting to see better implementations.</p>
","<p>Use <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/unshift"" rel=""noreferrer""><code>unshift</code></a>. It's like <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/push"" rel=""noreferrer""><code>push</code></a>, except it adds elements to the beginning of the array instead of the end.</p>

<ul>
<li><code>unshift</code>/<code>push</code> - add an element to the beginning/end of an array</li>
<li><code>shift</code>/<code>pop</code>  - remove and return the first/last element of and array</li>
</ul>

<p>A simple diagram...</p>

<pre class=""lang-none prettyprint-override""><code>   unshift -&gt; array &lt;- push
   shift   &lt;- array -&gt; pop
</code></pre>

<p>and chart:</p>

<pre class=""lang-none prettyprint-override""><code>          add  remove  start  end
   push    X                   X
    pop           X            X
unshift    X             X
  shift           X      X
</code></pre>

<p>Check out the <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array"" rel=""noreferrer"">MDN Array documentation</a>. Virtually every language that has the ability to push/pop elements from an array will also have the ability to unshift/shift (sometimes called <code>push_front</code>/<code>pop_front</code>) elements, you should never have to implement these yourself.</p>
","8073687"
"Integer division with remainder in JavaScript?","444913","","<p>In JavaScript, how do I get:</p>

<ol>
<li>the whole number of times a given integer goes into another?</li>
<li>the remainder?</li>
</ol>
","<p>For some number <code>y</code> and some divisor <code>x</code> compute the quotient (<code>quotient</code>) and remainder (<code>remainder</code>) as:</p>

<pre><code>var quotient = Math.floor(y/x);
var remainder = y % x;
</code></pre>
","4228376"
"Base64 encoding and decoding in client-side Javascript","443102","","<p>Are there any methods in JavaScript that could be used to encode and decode a string using base64 encoding?</p>
","<p>Some browsers such as Firefox, Chrome, Safari, Opera and IE10+ can handle Base64 natively. Take a look at this <a href=""https://stackoverflow.com/questions/246801/how-can-you-encode-to-base64-using-javascript/247261#247261"">Stackoverflow question</a>. It's using <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Base64_encoding_and_decoding"" rel=""noreferrer""><code>btoa()</code> and <code>atob()</code> functions</a>.</p>

<p>For server-side JavaScript, there's a <a href=""https://npmjs.org/package/btoa"" rel=""noreferrer"">btoa package for Node.JS</a>.</p>

<p>If you are going for a cross-browser solution, there are existing libraries like <a href=""https://code.google.com/p/crypto-js/#Encoders"" rel=""noreferrer"">CryptoJS</a> or code like:</p>

<p><a href=""http://ntt.cc/2008/01/19/base64-encoder-decoder-with-javascript.html"" rel=""noreferrer"">http://ntt.cc/2008/01/19/base64-encoder-decoder-with-javascript.html</a></p>

<p>With the latter, you need to thoroughly test the function for cross browser compatibility. And error <a href=""https://stackoverflow.com/a/14596140/1269037"">has already been reported</a>.</p>
","2820329"
"How to include js file in another js file?","442885","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/2145914/including-a-js-file-within-a-js-file"">Including a .js file within a .js file</a>  </p>
</blockquote>



<p>How can I include a js file into another js file , so as to stick to the <a href=""http://en.wikipedia.org/wiki/Don%27t_repeat_yourself"" rel=""noreferrer"">DRY principle</a> and avoid duplication of code.</p>
","<p>You can only include a script file in an HTML page, not in another script file. That said, you <em>can</em> write JavaScript which loads your ""included"" script into the same page:</p>

<pre><code>var imported = document.createElement('script');
imported.src = '/path/to/imported/script';
document.head.appendChild(imported);
</code></pre>

<p>There's a good chance your code depends on your ""included"" script, however, in which case it may fail because the browser will load the ""imported"" script asynchronously. Your best bet will be to simply use a third-party library like jQuery or YUI, which solves this problem for you.</p>

<pre><code>// jQuery
$.getScript('/path/to/imported/script.js', function()
{
    // script is now loaded and executed.
    // put your dependent JS here.
});
</code></pre>
","4634669"
"document.getElementById().value and document.getElementById().checked not working for IE","442473","","<p>I tried to assign a new value into the hidden input and checkbox of an input form. It's working fine in Firefox but not in IE (I'm using IE 7). Does anyone know what is wrong with my code?</p>

<p>HTML:</p>

<pre><code>&lt;input type=""hidden"" id=""msg"" name=""msg"" value="""" style=""display:none""/&gt;
&lt;input type=""checkbox"" name=""sp"" value=""100"" id=""sp_100""&gt;
</code></pre>

<p>Javascript:</p>

<pre><code>var Msg=""abc"";
document.getElementById('msg').value = Msg;
document.getElementById('sp_100').checked = true;
</code></pre>
","<p>Have a look at <a href=""http://www.jquery.com/"" rel=""nofollow noreferrer"">jQuery</a>, a cross-browser library that will make your life a lot easier.</p>

<pre><code>var msg = 'abc';
$('#msg').val(msg);
$('#sp_100').attr('checked', 'checked');
</code></pre>
","973068"
"How to replace all dots in a string using JavaScript","441968","","<p>I want to replace all the occurrences of a dot(<code>.</code>) in a JavaScript string</p>

<p>For example, I have:</p>

<pre><code>var mystring = 'okay.this.is.a.string';
</code></pre>

<p>I want to get: <code>okay this is a string</code>.</p>

<p>So far I tried:</p>

<pre><code>mystring.replace(/./g,' ')
</code></pre>

<p>but this ends up with all the string replaced to spaces.</p>
","<p>You need to escape the <code>.</code> because it has the meaning of ""an arbitrary character"" in a regular expression.</p>

<pre><code>mystring.replace(/\./g,' ')
</code></pre>
","2390793"
"HTML form readonly SELECT tag/input","441177","","<p>According to HTML specs, the <code>select</code> tag in HTML doesn't have a <code>readonly</code> attribute, only a <code>disabled</code> attribute. So if you want to keep the user from changing the dropdown, you have to use <code>disabled</code>.</p>

<p>The only problem is that disabled HTML form inputs don't get included in the POST / GET data.</p>

<p>What's the best way to emulate the <code>readonly</code> attribute for a <code>select</code> tag, and still get the POST data?</p>
","<p>You should keep the <code>select</code> element <code>disabled</code> but also add another hidden <code>input</code> with the same name and value.</p>

<p>If you reenable your SELECT, you should copy its value to the hidden input in an onchange event and disable (or remove) the hidden input.</p>

<p>Here is a demo:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>$('#mainform').submit(function() {
    $('#formdata_container').show();
    $('#formdata').html($(this).serialize());
    return false;
});

$('#enableselect').click(function() {
    $('#mainform input[name=animal]')
        .attr(""disabled"", true);
    
    $('#animal-select')
        .attr('disabled', false)
    	.attr('name', 'animal');
    
    $('#enableselect').hide();
    return false;
});</code></pre>
<pre class=""snippet-code-css lang-css prettyprint-override""><code>#formdata_container {
    padding: 10px;
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;
&lt;div&gt;
    &lt;form id=""mainform""&gt;
        &lt;select id=""animal-select"" disabled=""true""&gt;
            &lt;option value=""cat"" selected&gt;Cat&lt;/option&gt;
            &lt;option value=""dog""&gt;Dog&lt;/option&gt;
            &lt;option value=""hamster""&gt;Hamster&lt;/option&gt;
        &lt;/select&gt;
        &lt;input type=""hidden"" name=""animal"" value=""cat""/&gt;
        &lt;button id=""enableselect""&gt;Enable&lt;/button&gt;
        
        &lt;select name=""color""&gt;
            &lt;option value=""blue"" selected&gt;Blue&lt;/option&gt;
            &lt;option value=""green""&gt;Green&lt;/option&gt;
            &lt;option value=""red""&gt;Red&lt;/option&gt;
        &lt;/select&gt;

        &lt;input type=""submit""/&gt;
    &lt;/form&gt;
&lt;/div&gt;

&lt;div id=""formdata_container"" style=""display:none""&gt;
    &lt;div&gt;Submitted data:&lt;/div&gt;
    &lt;div id=""formdata""&gt;
    &lt;/div&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
</p>
","368834"
"Selecting and manipulating CSS pseudo-elements such as ::before and ::after using jQuery","440938","","<p>Is there any way to select/manipulate CSS pseudo-elements such as <code>::before</code> and <code>::after</code> (and the old version with one semi-colon) using jQuery?</p>

<p>For example, my stylesheet has the following rule:</p>

<pre class=""lang-css prettyprint-override""><code>.span::after{ content:'foo' }
</code></pre>

<p>How can I change 'foo' to 'bar' using jQuery?</p>
","<p>You could also pass the content to the pseudo element with a data attribute and then use jQuery to manipulate that:</p>

<p>In HTML:</p>

<pre><code>&lt;span&gt;foo&lt;/span&gt;
</code></pre>

<p>In jQuery:</p>

<pre><code>$('span').hover(function(){
    $(this).attr('data-content','bar');
});
</code></pre>

<p>In CSS: </p>

<pre class=""lang-css prettyprint-override""><code>span:after {
    content: attr(data-content) ' any other text you may want';
}
</code></pre>

<p>If you want to prevent the 'other text' from showing up, you could combine this with seucolega's solution like this:</p>

<p>In HTML:</p>

<pre><code>&lt;span&gt;foo&lt;/span&gt;
</code></pre>

<p>In jQuery:</p>

<pre><code>$('span').hover(function(){
    $(this).addClass('change').attr('data-content','bar');
});
</code></pre>

<p>In CSS: </p>

<pre class=""lang-css prettyprint-override""><code>span.change:after {
    content: attr(data-content) ' any other text you may want';
}
</code></pre>
","5734583"
"How to get an input text value in JavaScript","439053","","<p>How go get an input text value in JavaScript?</p>

<pre><code>&lt;script language=""javascript"" type=""text/javascript""&gt;
    lol = document.getElementById('lolz').value;
    function kk(){
    alert(lol);
    }
&lt;/script&gt;

&lt;body&gt;
    &lt;input type=""text"" name=""enter"" class=""enter"" value="""" id=""lolz""/&gt;
    &lt;input type=""button"" value=""click"" OnClick=""kk()""/&gt;
&lt;/body&gt;
</code></pre>

<p>When I put <code>lol = document.getElementById('lolz').value;</code> outside of the function <code>kk()</code>, like shown above, it doesn't work, but when I put it inside, it works. Can anyone tell me why?</p>
","<p>The reason you function doesn't work when <code>lol</code> is defined outside it, is because the <a href=""https://developer.mozilla.org/en-US/docs/Using_the_W3C_DOM_Level_1_Core"" rel=""noreferrer"">DOM</a> isn't loaded yet when the JavaScript is first run. Because of that, <code>getElementById</code> will return <code>null</code> (<a href=""https://developer.mozilla.org/en-US/docs/DOM/document.getElementById"" rel=""noreferrer"">see MDN</a>).</p>

<p>You've already found the most obvious solution: by calling <code>getElementById</code> inside the function, the DOM will be loaded and ready by the time the function is called, and the element will be found like you expect it to.</p>

<p>There are a few other solutions. One is to wait until the entire document is loaded, like this:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
    var lolz;
    function onload() { 
        lolz = document.getElementById('lolz');
    }
    function kk(){
        alert(lolz.value);
    }
&lt;/script&gt;

&lt;body onload=""onload();""&gt;
    &lt;input type=""text"" name=""enter"" class=""enter"" value="""" id=""lolz""/&gt;
    &lt;input type=""button"" value=""click"" onclick=""kk();""/&gt;
&lt;/body&gt;
</code></pre>

<p>Note the <code>onload</code> attribute of the <code>&lt;body&gt;</code> tag. <em>(On a side note: the <code>language</code> attribute of the <code>&lt;script&gt;</code> tag is deprecated. Don't use it.)</em></p>

<p>There is, however, a problem with <code>onload</code>: it waits until <strong>everything</strong> (including images, etc.) is loaded.</p>

<p>The other option is to wait until the DOM is ready (which is usually much earlier than <code>onload</code>). This can be done with ""plain"" JavaScript, but it's much easier to use a DOM library like <a href=""http://jquery.com/"" rel=""noreferrer"">jQuery</a>.</p>

<p>For example:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
    $(document).ready(function() {
        var lolz = $('#lolz');
        var kk = $('#kk');
        kk.click(function() {
            alert(lolz.val());
        });
    });
&lt;/script&gt;

&lt;body&gt;
    &lt;input type=""text"" name=""enter"" class=""enter"" value="""" id=""lolz""/&gt;
    &lt;input type=""button"" value=""click"" id=""kk"" /&gt;
&lt;/body&gt;
</code></pre>

<p>jQuery's <a href=""http://api.jquery.com/ready/"" rel=""noreferrer"">.ready()</a> takes a function as an argument. The function will be run as soon as the DOM is ready. This second example also uses <a href=""http://api.jquery.com/click/"" rel=""noreferrer"">.click()</a> to bind kk's <code>onclick</code> handler, instead of doing that inline in the HTML.</p>
","11811079"
"Adding elements to object","437684","","<p>I need to populate a json file, now I have something like this:</p>

<pre><code>{""element"":{""id"":10,""quantity"":1}}
</code></pre>

<p>And I need to add another ""element"". My first step is putting that json in a Object type using <code>cart = JSON.parse</code>, now I need to add the new element.
I supposed I must use <code>cart.push</code> to add another element, I tried this:</p>

<pre><code>var element = {};
element.push({ id: id, quantity: quantity });
cart.push(element);
</code></pre>

<p>But I got error ""Object has no method push"" when I try to do <code>element.push</code>, and I think I'm doing something VERY wrong because I'm not telling the ""element"" anywhere.</p>

<p>How can I do that?</p>

<p><strong>Edit:</strong> sorry to all I had a LOT of confusion in my head.</p>

<p>I thought I can get only object type when taking data from <code>JSON.parse</code>, but I get what I put in the JSON in the first place.</p>

<p>Putting array instead of object solved my problem, I used lots of suggestions got here too, thank you all!</p>
","<p>Your element is not an array, however your cart needs to be an array in order to support many element objects. Code example:</p>

<pre><code>var element = {}, cart = [];
element.id = id;
element.quantity = quantity;
cart.push(element);
</code></pre>

<p>If you want cart to be an array of objects in the form <code>{ element: { id: 10, quantity: 1} }</code> then perform:</p>

<pre><code>var element = {}, cart = [];
element.id = id;
element.quantity = quantity;
cart.push({element: element});
</code></pre>

<p><code>JSON.stringify()</code> was mentioned as a concern in the comment:</p>

<pre><code>&gt;&gt; JSON.stringify([{a: 1}, {a: 2}]) 
      ""[{""a"":1},{""a"":2}]"" 
</code></pre>
","14234687"
"jQuery: Get selected element tag name","437002","","<p>Is there an easy way to get a tag name?</p>

<p>For example, if I am given <code>$('a')</code> into a function, I want to get <code>'a'</code>.</p>
","<p>You can call <code>.prop(""tagName"")</code>. Examples:</p>

<pre><code>jQuery(""&lt;a&gt;"").prop(""tagName""); //==&gt; ""A""
jQuery(""&lt;h1&gt;"").prop(""tagName""); //==&gt; ""H1""
jQuery(""&lt;coolTagName999&gt;"").prop(""tagName""); //==&gt; ""COOLTAGNAME999""
</code></pre>

<p><br>
If writing out <code>.prop(""tagName"")</code> is tedious, you can create a custom function like so:</p>

<pre><code>jQuery.fn.tagName = function() {
  return this.prop(""tagName"");
};
</code></pre>

<p>Examples:</p>

<pre><code>jQuery(""&lt;a&gt;"").tagName(); //==&gt; ""A""
jQuery(""&lt;h1&gt;"").tagName(); //==&gt; ""H1""
jQuery(""&lt;coolTagName999&gt;"").tagName(); //==&gt; ""COOLTAGNAME999""
</code></pre>

<p><br>
Note that tag names are, by convention, returned <b>CAPITALIZED</b>. If you want the returned tag name to be all lowercase, you can edit the custom function like so:</p>

<pre><code>jQuery.fn.tagNameLowerCase = function() {
  return this.prop(""tagName"").toLowerCase();
};
</code></pre>

<p>Examples:</p>

<pre><code>jQuery(""&lt;a&gt;"").tagNameLowerCase(); //==&gt; ""a""
jQuery(""&lt;h1&gt;"").tagNameLowerCase(); //==&gt; ""h1""
jQuery(""&lt;coolTagName999&gt;"").tagNameLowerCase(); //==&gt; ""cooltagname999""
</code></pre>
","5347371"
"How to check if the URL contains a given string?","436341","","<p>How could I do something like this:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
$(document).ready(function () {
    if(window.location.contains(""franky"")) // This doesn't work, any suggestions?
    {
         alert(""your url contains the name franky"");
    }
});
&lt;/script&gt;
</code></pre>
","<p>You need add href property and check <code>indexOf</code> instead of <code>contains</code></p>

<pre><code>&lt;script type=""text/javascript""&gt;
$(document).ready(function () {
    if(window.location.href.indexOf(""franky"") &gt; -1) {
       alert(""your url contains the name franky"");
    }
});
&lt;/script&gt;
</code></pre>
","4597085"
"Static variables in JavaScript","435876","","<p>How can I create static variables in Javascript?</p>
","<p>If you come from a class-based, strongly typed object-oriented language <em>(like Java, C++ or C#)</em> I assume that you are trying to create a variable or method associated to a ""type"" but not to an instance.</p>

<p>An example using a ""classical"" approach, with constructor functions maybe could help you to catch the concepts of basic OO JavaScript:</p>

<pre><code>function MyClass () { // constructor function
  var privateVariable = ""foo"";  // Private variable 

  this.publicVariable = ""bar"";  // Public variable 

  this.privilegedMethod = function () {  // Public Method
    alert(privateVariable);
  };
}

// Instance method will be available to all instances but only load once in memory 
MyClass.prototype.publicMethod = function () {    
  alert(this.publicVariable);
};

// Static variable shared by all instances
MyClass.staticProperty = ""baz"";

var myInstance = new MyClass();
</code></pre>

<p><code>staticProperty</code> is defined in the MyClass object (which is a function) and has nothing to do with its created instances, JavaScript treats functions as <a href=""http://en.wikipedia.org/wiki/First-class_function"" rel=""noreferrer"">first-class objects</a>, so being an object, you can assign properties to a function.</p>
","1535687"
"How do you create a JavaScript Date object with a set timezone without using a string representation","435189","","<p>I have a web page with three dropdowns for day, month and year. If I use the JavaScript Date constructor that takes numbers then I get a Date object for my current timezone:</p>

<pre><code>new Date(xiYear, xiMonth, xiDate)
</code></pre>

<p>Give the correct date but it thinks that date is GMT+01:00 due to daylight savings time.</p>

<p>The problem here is that I then give this Date to an Ajax method and when the date is deserialised on the server it has been converted to GMT and so lost an hour which moves the day back by one.
Now I could just pass the day, month, and year individually into the Ajax method but it seems that there ought to be a better way.</p>

<p>The accepted answer pointed me in the right direction, however just using <code>setUTCHours</code> by itself changed:</p>

<pre><code>Apr 5th 00:00 GMT+01:00 
</code></pre>

<p>to</p>

<pre><code>Apr 4th 23:00 GMT+01:00
</code></pre>

<p>I then also had to set the UTC date, month and year to end up with</p>

<pre><code>Apr 5th 01:00 GMT+01:00
</code></pre>

<p>which is what I wanted</p>
","<p>using <code>.setUTCHours()</code> it would be possible to actually set dates in UTC-time, which would allow you to use UTC-times throughout the system.</p>

<p><strike>You cannot set it using UTC in the constructor though, unless you specify a date-string.</strike></p>

<p>Using <code>new Date(Date.UTC(year, month, day, hour, minute, second))</code> you can create a Date-object from a specific UTC time.</p>
","439871"
"How to send an email from JavaScript","434875","","<p>I want my website to have the ability to send an email without refreshing the page. So I want to use Javascript.</p>

<pre><code>&lt;form action=""javascript:sendMail();"" name=""pmForm"" id=""pmForm"" method=""post""&gt;
Enter Friend's Email:
&lt;input name=""pmSubject"" id=""pmSubject"" type=""text"" maxlength=""64"" style=""width:98%;"" /&gt;
&lt;input name=""pmSubmit"" type=""submit"" value=""Invite"" /&gt;
</code></pre>

<p>Here is how I want to call the function, but I'm not sure what to put into the javascript function. From the research I've done I found an example that uses the mailto method, but my understanding is that doesn't actually send directly from the site.  </p>

<p>So my question is where can I find what to put inside the JavaScript function to send an email directly from the website.</p>

<pre><code>function sendMail() {
    /* ...code here...    */
}
</code></pre>
","<p>You can't send an email directly with javascript.</p>

<p>You can, however, open the user's mail client:</p>

<pre><code>window.open('mailto:test@example.com');
</code></pre>

<p>There are also some parameters to pre-fill the subject and the body:</p>

<pre><code>window.open('mailto:test@example.com?subject=subject&amp;body=body');
</code></pre>

<hr>

<p>Another solution would be to do an ajax call to your server, so that the server sends the email. Be careful not to allow anyone to send any email through your server.</p>
","7381162"
"How to disable html button using JavaScript?","434504","","<p>I've read that you can disable (make physically unclickable) a html button simply but appending 'disable' to its tag, but not as an attribute, as follows:</p>

<pre><code>&lt;input type=""button"" name=myButton value=""disable"" disabled&gt;
</code></pre>

<p>Since this setting is not an attribute, how can I add this in dynamically via JavaScript to disable a button that was previously enabled?</p>
","<blockquote>
  <p>Since this setting is not an attribute</p>
</blockquote>

<p>It is an attribute.</p>

<p>Some attributes are defined as boolean, which means you can specify their value and leave everything else out. i.e. Instead of disabled=""<b>disabled</b>"", you include only the bold part. In HTML 4, you <em>should</em> include only the bold part as the full version is marked as <a href=""http://www.w3.org/TR/html4/appendix/notes.html#h-B.3.3"" rel=""noreferrer"">a feature with limited support</a> (although that is less true now then when the spec was written).</p>

<p>As of HTML 5, the rules have changed and now you include only the name and not the value. This makes no practical difference because the name and the value are the same.</p>

<p>The <a href=""http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html#ID-50886781"" rel=""noreferrer"">DOM property</a> is also called <code>disabled</code> and is a boolean that takes <code>true</code> or <code>false</code>.</p>

<pre><code>foo.disabled = true;
</code></pre>

<p>In theory you can also <code>foo.setAttribute('disabled', 'disabled');</code> and <code>foo.removeAttribute(""disabled"")</code>, but I wouldn't trust this with older versions of Internet Explorer (which are notoriously buggy when it comes to <code>setAttribute</code>).</p>
","3014678"
"JavaScript case insensitive string comparison","433944","","<p>How do I perform case insensitive string comparison in JavaScript?</p>
","<p>The simplest way to do it (if you're not worried about special Unicode characters) is to call <code>toUpperCase</code>:</p>

<pre><code>var areEqual = string1.toUpperCase() === string2.toUpperCase();
</code></pre>
","2140644"
"Add new value to an existing array in JavaScript","432257","","<p>In PHP, I'd do something like:</p>

<pre><code>$array = array();
$array[] = ""value1"";
$array[] = ""value2"";
$array[] = ""value3"";
</code></pre>

<p>How would I do the same thing in JavaScript?</p>
","<p>You don't need jQuery for that. Use regular javascript</p>

<pre><code>var arr = new Array();
// or var arr = [];
arr.push('value1');
arr.push('value2');
</code></pre>

<p>Note: In javascript, you can also use Objects as Arrays, but still have access to the Array prototypes. This makes the object behave like an array:</p>

<pre><code>var obj = new Object();
Array.prototype.push.call(obj, 'value');
</code></pre>

<p>will create an object that looks like:</p>

<pre><code>{
    0: 'value',
    length: 1
}
</code></pre>

<p>You can access the vaules just like a normal array f.ex <code>obj[0]</code>.</p>
","1996755"
"Preloading images with jQuery","431715","","<p>I'm looking for a quick and easy way to preload images with JavaScript. I'm using jQuery if that's important.</p>

<p>I saw this here (<a href=""http://nettuts.com/tutorials/javascript-ajax/the-definitive-guide-to-creating-a-practical-jquery-plugin/"" rel=""noreferrer"">http://nettuts.com...</a>):</p>

<pre><code>function complexLoad(config, fileNames) {
  for (var x = 0; x &lt; fileNames.length; x++) {
    $(""&lt;img&gt;"").attr({
      id: fileNames[x],
      src: config.imgDir + fileNames[x] + config.imgFormat,
      title: ""The "" + fileNames[x] + "" nebula""
    }).appendTo(""#"" + config.imgContainer).css({ display: ""none"" });
  }
};
</code></pre>

<p>But, it looks a bit over-the-top for what I want!</p>

<p>I know there are jQuery plugins out there that do this but they all seem a bit big (in size); I just need a quick, easy and short way of preloading images!</p>
","<p>Quick <em>and</em> easy:</p>

<pre><code>function preload(arrayOfImages) {
    $(arrayOfImages).each(function(){
        $('&lt;img/&gt;')[0].src = this;
        // Alternatively you could use:
        // (new Image()).src = this;
    });
}

// Usage:

preload([
    'img/imageName.jpg',
    'img/anotherOne.jpg',
    'img/blahblahblah.jpg'
]);
</code></pre>

<p>Or, if you want a jQuery plugin:</p>

<pre><code>$.fn.preload = function() {
    this.each(function(){
        $('&lt;img/&gt;')[0].src = this;
    });
}

// Usage:

$(['img1.jpg','img2.jpg','img3.jpg']).preload();
</code></pre>
","476681"
"Are there constants in JavaScript?","430720","","<p>Is there a way to use constants in JavaScript?</p>

<p>If not, what's the common practice for specifying variables that are used as constants?</p>
","<p>ES2015, the latest version of JavaScript, has a notion of <code>const</code>:</p>

<pre><code>const MY_CONSTANT = ""some-value"";
</code></pre>

<p>This will work in <a href=""http://caniuse.com/#search=const"" rel=""noreferrer"">pretty much all browsers except IE 8, 9 and 10</a>. Some may also need <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode"" rel=""noreferrer"">strict mode</a> enabled.</p>

<p>You could use conventions like ALL_CAPS to show that certain values should not be modified if you are not writing ES2015 code:</p>

<pre><code>var MY_CONSTANT = ""some-value"";
</code></pre>
","130399"
"How to create an array of object literals in a loop?","430674","","<p>I need to create an array of object literals like this:</p>

<pre><code>var myColumnDefs = [
    {key:""label"", sortable:true, resizeable:true},
    {key:""notes"", sortable:true,resizeable:true},......
</code></pre>

<p>In a loop like this:</p>

<pre><code>for (var i = 0; i &lt; oFullResponse.results.length; i++) {
    console.log(oFullResponse.results[i].label);
}
</code></pre>

<p>The value of <code>key</code> should be <code>results[i].label</code> in each element of the array.</p>
","<pre><code>var arr = [];
var len = oFullResponse.results.length;
for (var i = 0; i &lt; len; i++) {
    arr.push({
        key: oFullResponse.results[i].label,
        sortable: true,
        resizeable: true
    });
}
</code></pre>
","1290138"
"How to randomize (shuffle) a JavaScript array?","429980","","<p>I have an array like this:</p>

<pre><code>var arr1 = [""a"", ""b"", ""c"", ""d""];
</code></pre>

<p>How can I randomize / shuffle it?</p>
","<p>The de-facto unbiased shuffle algorithm is the Fisher-Yates (aka Knuth) Shuffle.</p>

<p>See <a href=""https://github.com/coolaj86/knuth-shuffle"" rel=""noreferrer"">https://github.com/coolaj86/knuth-shuffle</a></p>

<p>You can see a <a href=""http://bost.ocks.org/mike/shuffle/"" rel=""noreferrer"">great visualization here</a> (and the original post <a href=""http://sedition.com/perl/javascript-fy.html"" rel=""noreferrer"">linked to this</a>)</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function shuffle(array) {
  var currentIndex = array.length, temporaryValue, randomIndex;

  // While there remain elements to shuffle...
  while (0 !== currentIndex) {

    // Pick a remaining element...
    randomIndex = Math.floor(Math.random() * currentIndex);
    currentIndex -= 1;

    // And swap it with the current element.
    temporaryValue = array[currentIndex];
    array[currentIndex] = array[randomIndex];
    array[randomIndex] = temporaryValue;
  }

  return array;
}

// Used like so
var arr = [2, 11, 37, 42];
arr = shuffle(arr);
console.log(arr);</code></pre>
</div>
</div>
</p>

<p>Some more info <a href=""http://en.wikipedia.org/wiki/Fisher-Yates_shuffle"" rel=""noreferrer"">about the algorithm</a> used.</p>
","2450976"
"How to get first character of string?","429781","","<p>I have a string, and I need to get its first character.</p>

<pre><code>var x = 'somestring';
alert(x[0]); //in ie7 returns undefined
</code></pre>

<p>How can I fix my code?</p>
","<p>What you want is <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charAt"" rel=""noreferrer""><code>charAt</code></a>.</p>

<pre><code>var x = 'some string';
alert(x.charAt(0)); // alerts 's'
</code></pre>
","3427148"
"jQuery animate backgroundColor","429731","","<p>I am trying to animate a change in backgroundColor using jQuery on mouseover.</p>

<p>I have checked some example and I seem to have it right, it works with other properties like fontSize, but with backgroundColor I get and ""Invalid Property"" js error.
The element I am working with is a div.</p>

<pre><code>$("".usercontent"").mouseover(function() {
    $(this).animate({ backgroundColor: ""olive"" }, ""slow"");
});
</code></pre>

<p>Any ideas?</p>
","<p>The color plugin is only 4kb so much cheaper than the UI library.  Of course you'll want to use a <a href=""http://github.com/jquery/jquery-color"" rel=""noreferrer"">decent version</a> of the plugin and not <a href=""http://plugins.jquery.com/project/color"" rel=""noreferrer"">some buggy old thing</a> which doesn't handle Safari and crashes when the transitions are too fast.  Since a minified version isn't supplied you might like test various compressors and <a href=""http://compressorrater.thruhere.net/"" rel=""noreferrer"">make your own</a> min version.  YUI gets the best compression in this case needing only 2317 bytes and since it is so small - here it is:</p>

<pre><code>(function (d) {
    d.each([""backgroundColor"", ""borderBottomColor"", ""borderLeftColor"", ""borderRightColor"", ""borderTopColor"", ""color"", ""outlineColor""], function (f, e) {
        d.fx.step[e] = function (g) {
            if (!g.colorInit) {
                g.start = c(g.elem, e);
                g.end = b(g.end);
                g.colorInit = true
            }
            g.elem.style[e] = ""rgb("" + [Math.max(Math.min(parseInt((g.pos * (g.end[0] - g.start[0])) + g.start[0]), 255), 0), Math.max(Math.min(parseInt((g.pos * (g.end[1] - g.start[1])) + g.start[1]), 255), 0), Math.max(Math.min(parseInt((g.pos * (g.end[2] - g.start[2])) + g.start[2]), 255), 0)].join("","") + "")""
        }
    });

    function b(f) {
        var e;
        if (f &amp;&amp; f.constructor == Array &amp;&amp; f.length == 3) {
            return f
        }
        if (e = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(f)) {
            return [parseInt(e[1]), parseInt(e[2]), parseInt(e[3])]
        }
        if (e = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(f)) {
            return [parseFloat(e[1]) * 2.55, parseFloat(e[2]) * 2.55, parseFloat(e[3]) * 2.55]
        }
        if (e = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(f)) {
            return [parseInt(e[1], 16), parseInt(e[2], 16), parseInt(e[3], 16)]
        }
        if (e = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(f)) {
            return [parseInt(e[1] + e[1], 16), parseInt(e[2] + e[2], 16), parseInt(e[3] + e[3], 16)]
        }
        if (e = /rgba\(0, 0, 0, 0\)/.exec(f)) {
            return a.transparent
        }
        return a[d.trim(f).toLowerCase()]
    }
    function c(g, e) {
        var f;
        do {
            f = d.css(g, e);
            if (f != """" &amp;&amp; f != ""transparent"" || d.nodeName(g, ""body"")) {
                break
            }
            e = ""backgroundColor""
        } while (g = g.parentNode);
        return b(f)
    }
    var a = {
        aqua: [0, 255, 255],
        azure: [240, 255, 255],
        beige: [245, 245, 220],
        black: [0, 0, 0],
        blue: [0, 0, 255],
        brown: [165, 42, 42],
        cyan: [0, 255, 255],
        darkblue: [0, 0, 139],
        darkcyan: [0, 139, 139],
        darkgrey: [169, 169, 169],
        darkgreen: [0, 100, 0],
        darkkhaki: [189, 183, 107],
        darkmagenta: [139, 0, 139],
        darkolivegreen: [85, 107, 47],
        darkorange: [255, 140, 0],
        darkorchid: [153, 50, 204],
        darkred: [139, 0, 0],
        darksalmon: [233, 150, 122],
        darkviolet: [148, 0, 211],
        fuchsia: [255, 0, 255],
        gold: [255, 215, 0],
        green: [0, 128, 0],
        indigo: [75, 0, 130],
        khaki: [240, 230, 140],
        lightblue: [173, 216, 230],
        lightcyan: [224, 255, 255],
        lightgreen: [144, 238, 144],
        lightgrey: [211, 211, 211],
        lightpink: [255, 182, 193],
        lightyellow: [255, 255, 224],
        lime: [0, 255, 0],
        magenta: [255, 0, 255],
        maroon: [128, 0, 0],
        navy: [0, 0, 128],
        olive: [128, 128, 0],
        orange: [255, 165, 0],
        pink: [255, 192, 203],
        purple: [128, 0, 128],
        violet: [128, 0, 128],
        red: [255, 0, 0],
        silver: [192, 192, 192],
        white: [255, 255, 255],
        yellow: [255, 255, 0],
        transparent: [255, 255, 255]
    }
})(jQuery);
</code></pre>
","2302005"
"JavaScript error (Uncaught SyntaxError: Unexpected end of input)","429493","","<p>I have some JavaScript code that works in FireFox but not in Chrome or IE. </p>

<p>In the Chrome JS Console I get the follow error: </p>

<blockquote>
  <p>""Uncaught SyntaxError: Unexpected end of input"".</p>
</blockquote>

<p>The JavaScript code I am using is:</p>

<pre><code>&lt;script&gt;
 $(function() {
 $(""#mewlyDiagnosed"").hover(function() {
    $(""#mewlyDiagnosed"").animate({'height': '237px', 'top': ""-75px""});
 }, function() {
    $(""#mewlyDiagnosed"").animate({'height': '162px', 'top': ""0px""});
 });
&lt;/script&gt;
</code></pre>

<p>It says the error is on the last line which is });</p>
","<p>Add a second <code>});</code>.</p>

<p>When properly indented, your code reads</p>

<pre><code>$(function() {
    $(""#mewlyDiagnosed"").hover(function() {
        $(""#mewlyDiagnosed"").animate({'height': '237px', 'top': ""-75px""});
    }, function() {
        $(""#mewlyDiagnosed"").animate({'height': '162px', 'top': ""0px""});
    });
MISSING!
</code></pre>

<p>You never closed the outer <code>$(function() {</code>.</p>
","3983103"
"SecurityError: Blocked a frame with origin from accessing a cross-origin frame","429035","","<p>I am loading an <code>&lt;iframe&gt;</code> in my HTML page and trying to access the elements within it using Javascript, but when I try to execute my code, I get the following error:</p>

<pre class=""lang-none prettyprint-override""><code>SecurityError: Blocked a frame with origin ""http://www.&lt;domain&gt;.com"" from accessing a cross-origin frame.
</code></pre>

<p>Can you please help me to find a solution so that I can access the elements in the frame?</p>

<p>I am using this code for testing, but in vain:</p>

<pre><code>$(document).ready(function() {
    var iframeWindow = document.getElementById(""my-iframe-id"").contentWindow;

    iframeWindow.addEventListener(""load"", function() {
        var doc = iframe.contentDocument || iframe.contentWindow.document;
        var target = doc.getElementById(""my-target-id"");

        target.innerHTML = ""Found it!"";
    });
});
</code></pre>
","<h2>Same-origin security policy</h2>

<p>You <strong>can't</strong> access an <code>&lt;iframe&gt;</code> with Javascript, it would be a huge security flaw if you could do it. For the <a href=""https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy"" rel=""noreferrer"">same-origin policy</a> <strong>browsers block scripts trying to access a frame with a different origin</strong>.  </p>

<p>Origin is considered different if at least one of the following parts of the address isn't maintained: </p>

<pre class=""lang-none prettyprint-override""><code>&lt;protocol&gt;://&lt;hostname&gt;:&lt;port&gt;/path/to/page.html 
</code></pre>

<p><strong>Protocol</strong>, <strong>hostname</strong> and <strong>port</strong> must be the same of your domain, if you want to access a frame. </p>

<h3>Examples</h3>

<p>Here's what would happen trying to access the following URLs from <code>http://www.example.com/home/index.html</code> </p>

<pre class=""lang-none prettyprint-override""><code>URL                                             RESULT 
http://www.example.com/home/other.html       -&gt; Success 
http://www.example.com/dir/inner/another.php -&gt; Success 
http://www.example.com:80                    -&gt; Success (default port for HTTP) 
http://www.example.com:2251                  -&gt; Failure: different port 
http://data.example.com/dir/other.html       -&gt; Failure: different hostname 
https://www.example.com/home/index.html.html -&gt; Failure: different protocol 
ftp://www.example.com:21                     -&gt; Failure: different protocol &amp; port 
https://google.com/search?q=james+bond       -&gt; Failure: different hostname &amp; protocol 
</code></pre>

<h2>Workaround</h2>

<p>Even though same-origin policy blocks scripts from accessing the content of sites with a different origin, <strong>if you own both the pages, you can work around this problem using <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage"" rel=""noreferrer""><code>window.postMessage</code></a> and its relative <code>message</code> event</strong> to send messages between the two pages, like this: </p>

<ul>
<li><p>In your main page: </p>

<pre><code>var frame = document.getElementById('your-frame-id'); 

frame.contentWindow.postMessage(/*any variable or object here*/, '*'); 
</code></pre></li>
<li><p>In your <code>&lt;iframe&gt;</code> (contained in the main page): </p>

<pre><code>window.addEventListener('message', function(event) { 

    // IMPORTANT: Check the origin of the data! 
    if (~event.origin.indexOf('http://yoursite.com')) { 
        // The data has been sent from your site 

        // The data sent with postMessage is stored in event.data 
        console.log(event.data); 
    } else { 
        // The data hasn't been sent from your site! 
        // Be careful! Do not use it. 
        return; 
    } 
}); 
</code></pre></li>
</ul>

<p>This method can be applied in <strong>both directions</strong>, creating a listener in the main page too, and receiving responses from the frame. The same logic can also be implemented in pop-ups and basically any new window generated by the main page (e.g. using <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Window/open"" rel=""noreferrer""><code>window.open()</code></a>) as well, without any difference.</p>

<h2>Disabling same-origin policy in <em>your</em> browser</h2>

<p>There already are some good answers about this topic (I just found them googling), so, for the browsers where this is possible, I'll link the relative answer. However, please remember that <strong>disabling the same-origin policy (or the CORS) will only affect <em>your</em> browser</strong>. Also, running a browser with same-origin security settings disabled grants <em>any</em> website access to cross-origin resources, so it's very unsafe and <strong>should be done for development purposes only</strong>.</p>

<ul>
<li><a href=""https://stackoverflow.com/questions/3102819/disable-same-origin-policy-in-chrome"">Google Chrome</a></li>
<li><a href=""https://stackoverflow.com/questions/17088609/disable-firefox-same-origin-policy"">Mozilla Firefox</a></li>
<li>Apple Safari: not possible, <a href=""https://stackoverflow.com/a/38228168/3889449"">only CORS</a>.</li>
<li>Opera: not possible.</li>
<li>Microsoft Edge: not possible.</li>
<li>Microsoft Internet Explorer: not possible, <a href=""https://stackoverflow.com/questions/20947359/disable-same-origin-policy-internet-explorer"">only CORS</a>. </li>
</ul>
","25098153"
"How to loop through array in jQuery?","428751","","<p>I am trying to loop through an array. I have the following code:</p>

<pre><code> var substr = currnt_image_list.split(','); //This will split up 21,32,234,223,
</code></pre>

<p>Am trying to get all the data out of the array. Can some one lead me in the right path please?</p>
","<hr>

<p>(Update: My <a href=""https://stackoverflow.com/a/9329476/157247"">other answer here</a> lays out the non-jQuery options much more thoroughly. The third option below, <code>jQuery.each</code>, isn't in it though.)</p>

<hr>

<p>Three options:</p>

<h3>Generic loop:</h3>

<pre><code>var i;
for (i = 0; i &lt; substr.length; ++i) {
    // do something with `substr[i]`
}
</code></pre>

<p><strong>Advantages</strong>: Straight-forward, no dependency on jQuery, easy to understand, no issues with preserving the meaning of <code>this</code> within the body of the loop, no unnecessary overhead of function calls (e.g., in <em>theory</em> faster, though in fact you'd have to have so many elements that the odds are you'd have other problems; <a href=""http://blog.niftysnippets.org/2012/02/foreach-and-runtime-cost.html"" rel=""noreferrer"">details</a>).</p>

<h3>ES5's <code>forEach</code>:</h3>

<p>As of ECMAScript5, arrays have a <code>forEach</code> function on them which makes it easy to loop through the array:</p>

<pre><code>substr.forEach(function(item) {
    // do something with `item`
});
</code></pre>

<p><a href=""http://ecma-international.org/ecma-262/5.1/#sec-15.4.4.18"" rel=""noreferrer"">Link to docs</a></p>

<p><em>(Note: There are lots of other functions, not just <code>forEach</code>; see <a href=""https://stackoverflow.com/a/9329476/157247"">the answer referenced above</a> for details.)</em></p>

<p><strong>Advantages</strong>: Declarative, can use a prebuilt function for the iterator if you have one handy, if your loop body is complex the scoping of a function call is sometimes useful, no need for an <code>i</code> variable in your containing scope.</p>

<p><strong>Disadvantages</strong>: Not all browsers have it yet, although most do, and you can always use an ES5 shim (a search will list several) to provide it on browsers that don't have it yet. If you're using <code>this</code> in the containing code, you have to stick it in a variable so you can use it within the function or pass it as a second argument to <code>forEach</code>, since within the iteration function, <code>this</code> will be <code>undefined</code> (in strict mode) or the global object (<code>window</code>) in non-strict mode unless you give <code>forEach</code> a specific value for it.</p>

<h3>jQuery.each:</h3>

<pre><code>jQuery.each(substr, function(index, item) {
    // do something with `item` (or `this` is also `item` if you like)
});
</code></pre>

<p>(<a href=""http://api.jquery.com/jQuery.each/"" rel=""noreferrer"">Link to docs</a>)</p>

<p><strong>Advantages</strong>: All of the same advantages as <code>forEach</code>, plus you know it's there since you're using jQuery.</p>

<p><strong>Disadvantages</strong>: If you're using <code>this</code> in the containing code, you have to stick it in a variable so you can use it within the function, since <code>this</code> means something else within the function.</p>

<p>You can avoid the <code>this</code> thing though, by either using <a href=""http://api.jquery.com/jQuery.proxy"" rel=""noreferrer""><code>$.proxy</code></a>:</p>

<pre><code>jQuery.each(substr, $.proxy(function(index, item) {
    // do something with `item` (`this` is the same as it was outside)
}, this));
</code></pre>

<p>...or <code>Function#bind</code>:</p>

<pre><code>jQuery.each(substr, function(index, item) {
    // do something with `item` (`this` is the same as it was outside)
}.bind(this));
</code></pre>

<p>...or in ES2015 (""ES6""), an arrow function:</p>

<pre><code>jQuery.each(substr, (index, item) =&gt; {
    // do something with `item` (`this` is the same as it was outside)
});
</code></pre>

<h3>What <strong>NOT</strong> to do:</h3>

<p><strong>Don't</strong> use <code>for..in</code> for this (or if you do, do it with proper safeguards). You'll see people saying to (in fact, briefly there was an answer here saying that), but <code>for..in</code> does not do what many people think it does (it does something even more useful!). Specifically, <code>for..in</code> loops through the enumerable property names of an object (not the indexes of an array). Since arrays are objects, and their only enumerable properties <em>by default</em> are the indexes, it mostly seems to sort of work in a bland deployment. But it's not a safe assumption that you can just use it for that. Here's an exploration: <a href=""http://jsbin.com/exohi/3"" rel=""noreferrer"">http://jsbin.com/exohi/3</a></p>

<p>I should soften the ""don't"" above. If you're dealing with sparse arrays (e.g., the array has 15 elements in total but their indexes are strewn across the range 0 to 150,000 for some reason, and so the <code>length</code> is 150,001), <strong>and</strong> if you use appropriate safeguards like <code>hasOwnProperty</code> and checking the property name is really numeric (see link above), <code>for..in</code> can be a perfectly reasonable way to avoid lots of unnecessary loops, since only the populated indexes will be enumerated.</p>
","3943526"
"Javascript how to remove text from a string","428634","","<p>I've got a string that has <code>data-123</code> as its value. How in <code>jQuery</code> or <code>Javascript</code> would I go in and remove the <code>data-</code> from the string while leaving the <code>123</code>?</p>
","<p>No jQuery needed.</p>

<pre><code>var ret = ""data-123"".replace('data-','');
console.log(ret);   //prints: 123
</code></pre>

<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace"" rel=""noreferrer"">Docs.</a></p>

<hr>

<p>For all occurrences to be discarded use:</p>

<pre><code>var ret = ""data-123"".replace(/data-/g,'');
</code></pre>

<p>PS: The replace function returns a new string and leaves the original string unchanged, so use the function return value after the replace() call.</p>
","10398941"
"Capture HTML Canvas as gif/jpg/png/pdf?","428576","","<p>Is it possible to capture or print what's displayed in an html canvas as an image or pdf? </p>

<p>I'd like to generate an image via canvas, and be able to generate a png from that image.</p>
","<p>Oops. Original answer was specific to a similar question. This has been revised: </p>

<pre><code>var canvas = document.getElementById(""mycanvas"");
var img    = canvas.toDataURL(""image/png"");
</code></pre>

<p>with the value in IMG you can write it out as a new Image like so:</p>

<pre><code>document.write('&lt;img src=""'+img+'""/&gt;');
</code></pre>
","3514404"
"Detecting input change in jQuery?","428338","","<p>When using jquery <code>.change</code> on an <code>input</code> the event will only be fired when the input loses focus</p>

<p>In my case, I need to make a call to the service (check if value is valid) as soon as the input value is changed. How could I accomplish this?</p>
","<p><strong>UPDATED for clarification and example</strong></p>

<p>examples: <a href=""http://jsfiddle.net/pxfunc/5kpeJ/"" rel=""noreferrer"">http://jsfiddle.net/pxfunc/5kpeJ/</a></p>

<p><strong>Method 1. <code>input</code> event</strong></p>

<p>In modern browsers use the <a href=""http://www.whatwg.org/specs/web-apps/current-work/multipage/common-input-element-attributes.html#event-input-input"" rel=""noreferrer""><code>input</code></a> event.  This event will fire when the user is typing into a text field, pasting, undoing, basically anytime the value changed from one value to another.</p>

<p>In jQuery do that like this</p>

<pre><code>$('#someInput').bind('input', function() { 
    $(this).val() // get the current value of the input field.
});
</code></pre>

<p>starting with jQuery 1.7, replace <code>bind</code> with <code>on</code>:</p>

<pre><code>$('#someInput').on('input', function() { 
    $(this).val() // get the current value of the input field.
});
</code></pre>

<p><strong>Method 2. <code>keyup</code> event</strong></p>

<p>For older browsers use the <code>keyup</code> event (this will fire once a key on the keyboard has been released, this event can give a sort of false positive because when ""w"" is released the input value is changed and the <code>keyup</code> event fires, but also when the ""shift"" key is released the <code>keyup</code> event fires but no change has been made to the input.).  Also this method doesn't fire if the user right-clicks and pastes from the context menu:</p>

<pre><code>$('#someInput').keyup(function() {
    $(this).val() // get the current value of the input field.
});
</code></pre>

<p><strong>Method 3. Timer (<code>setInterval</code> or <code>setTimeout</code>)</strong></p>

<p>To get around the limitations of <code>keyup</code> you can set a timer to periodically check the value of the input to determine a change in value.  You can use <code>setInterval</code> or <code>setTimeout</code> to do this timer check.  See the marked answer on this SO question: <a href=""https://stackoverflow.com/q/6139954/222714"">jQuery textbox change event</a> or see the fiddle for a working example using <code>focus</code> and <code>blur</code> events to start and stop the timer for a specific input field</p>
","6458946"
"jQuery selectors on custom data attributes using HTML5","426937","","<p>I would like to know what selectors are available for these data attributes that come with HTML5.</p>

<p>Taking this piece of HTML as an example:</p>

<pre><code>&lt;ul data-group=""Companies""&gt;
  &lt;li data-company=""Microsoft""&gt;&lt;/li&gt;
  &lt;li data-company=""Google""&gt;&lt;/li&gt;
  &lt;li data-company =""Facebook""&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>Are there selectors to get:</p>

<ul>
<li>All elements with <code>data-company=""Microsoft""</code> below <code>""Companies""</code></li>
<li>All elements with <code>data-company!=""Microsoft""</code> below <code>""Companies""</code></li>
<li>In other cases is it possible to use other selectors like ""contains, less than, greater than, etc..."".</li>
</ul>
","<pre><code>$(""ul[data-group='Companies'] li[data-company='Microsoft']"") //Get all elements with data-company=""Microsoft"" below ""Companies""

$(""ul[data-group='Companies'] li:not([data-company='Microsoft'])"") //get all elements with data-company!=""Microsoft"" below ""Companies""
</code></pre>

<p>Look in to <a href=""http://api.jquery.com/category/selectors/"">jQuery Selectors</a> :contains is a selector</p>

<p>here is info on the <a href=""http://api.jquery.com/contains-selector/"">:contains selector</a></p>
","4146566"
"Strip HTML from Text JavaScript","426739","","<p>Is there an easy way to take a string of html in JavaScript and strip out the html? </p>
","<p>If you're running in a browser, then the easiest way is just to <a href=""http://jsfiddle.net/8JSZX/"" rel=""noreferrer"">let the browser do it for you...</a></p>

<pre><code>function strip(html)
{
   var tmp = document.createElement(""DIV"");
   tmp.innerHTML = html;
   return tmp.textContent || tmp.innerText || """";
}
</code></pre>
","822486"
"Chrome Uncaught Syntax Error: Unexpected Token ILLEGAL","425924","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/12719859/syntaxerror-unexpected-token-illegal"">SyntaxError: Unexpected token ILLEGAL</a>  </p>
</blockquote>



<p>Receiving the subject error when Chrome tries to load the script file on the page. It says it's at the last line of the javascript file. I can't seem to find anything wrong with it. No errors in firefox, and the script works as expected. Just using form validation</p>

<pre><code>// JavaScript Document
$(function() {
  $('#wm-form').submit(function() {
    var errors = false;
    var errorMsg = """";
    $('.required').each(function() {
      if(!validField($(this))) {
        errorMsg += $(this).attr('name').capitalize() + "" cannot be blank\n"";
        errors = true;
      }
    });
    var emailAddress = $('#email');
    if(isValid(emailAddress) &amp;&amp; !(/^(([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5}){1,25})+([;.](([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5}){1,25})+)*$/.test(emailAddress.val()))) {
      errorMsg += ""Not a valid email address. Please enter in a correctly formatted email address"";
      errors = true;
    }
    if(errors) {
      alert(errorMsg);
      return false;
    }
  });

  $('.form-focus').click(function() {
    $(document).scrollTop(0);
    $('#first_name').focus();
    return false;
  });
});

function validField(element) {
  if(!isValid(element.val()) || (element.attr('placeholder') &amp;&amp; element.attr('placeholder') == element.val()) || 
    (element.attr('type') == 'radio' &amp;&amp; !checkedRadio(element))) {
    return false;
  }
  else {
    return true;
  }
}

function isValid(ele) {
  if(ele == null || ele == '') {
    return false;
  }
  else {
    return true;
  }
}

String.prototype.capitalize = function() {
    return this.charAt(0).toUpperCase() + this.slice(1);
};

function checkedRadio (element) {
  var valid = false;
  $('input[name=""'+ element.attr(""name"") +'""]:checked').each(function() {
    valid = true;
  });

  return valid;
}​
</code></pre>
","<p>There's some sort of bogus character at the end of that source.  Try deleting the last line and adding it back.</p>

<p>I can't figure out exactly what's there, yet ...</p>

<p><em>edit</em> &mdash; I think it's a zero-width space, Unicode 200B.  Seems pretty weird and I can't be sure of course that it's not a Stackoverflow artifact, but when I copy/paste that last function including the complete last line into the Chrome console, I get your error.</p>

<p>A notorious source of such characters are websites like <a href=""http://jsfiddle.net"">jsfiddle</a>.  I'm not saying that there's anything wrong with them &mdash; it's just a side-effect of something, maybe the use of content-editable input widgets.</p>

<p>If you suspect you've got a case of this ailment, and you're on MacOS or Linux/Unix, the <code>od</code> command line tool can show you (albeit in a fairly ugly way) the numeric values in the characters of the source code file. Some IDEs and editors can show ""funny"" characters as well. Note that such characters aren't <em>always</em> a problem. It's perfectly OK (in most reasonable programming languages, anyway) for there to be embedded Unicode characters in string constants, for example. The problems start happening when the language parser encounters the characters when it doesn't expect them.</p>
","5733398"
"How to remove spaces from a string using JavaScript?","425753","","<p>How to remove spaces in a string? For instance:</p>

<p>Input  : <code>'/var/www/site/Brand new document.docx'</code><br>
Output : <code>'/var/www/site/Brandnewdocument.docx'</code></p>

<p>Thanks</p>
","<p>This?</p>

<pre><code>str = str.replace(/\s/g, '');
</code></pre>

<p>Example</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var str = '/var/www/site/Brand new document.docx';

document.write( str.replace(/\s/g, '') );</code></pre>
</div>
</div>
</p>

<hr>

<p><strong>Update:</strong> Based on <a href=""https://stackoverflow.com/questions/5964373/is-there-a-difference-between-s-g-and-s-g"">this question</a>, this:</p>

<pre><code>str = str.replace(/\s+/g, '');
</code></pre>

<p>is a better solution. It produces the same result, but it does it faster.</p>

<p><strong>The Regex</strong></p>

<p><code>\s</code> is the regex for ""whitespace"", and <code>g</code> is the ""global"" flag, meaning match ALL <code>\s</code> (whitespaces). </p>

<p>A great explanation for <code>+</code> can be found <a href=""https://stackoverflow.com/questions/5964373/is-there-a-difference-between-s-g-and-s-g"">here</a>.</p>

<p>As a side note, you could replace the content between the single quotes to anything you want, so you can replace whitespace with any other string.</p>
","5963202"
"JavaScript Hashmap Equivalent","422146","","<p>As made clear in update 3 on <a href=""https://stackoverflow.com/questions/367440/javascript-associative-array-without-tostring-etc#367454"">this answer</a>, this notation:</p>

<pre><code>var hash = {};
hash[X]
</code></pre>

<p>does not actually hash the object <code>X</code>; it actually just converts <code>X</code> to a string (via <code>.toString()</code> if it's an object, or some other built-in conversions for various primitive types) and then looks that string up, without hashing it, in ""<code>hash</code>"". Object equality is also not checked - if two different objects have the same string conversion, they will just overwrite each other.</p>

<p>Given this - are there any efficient implementations of hashmaps in javascript? (For example, the 2nd Google result of <a href=""http://www.google.com/search?rlz=1C1GGLS_en-USUS299US303&amp;sourceid=chrome&amp;ie=UTF-8&amp;q=javascript+hashmap"" rel=""noreferrer""><code>javascript hashmap</code></a> yields an implementation which is O(n) for any operation. Various other results ignore the fact that different objects with equivalent string representations overwrite each other.</p>
","<p>Why not hash your objects yourself manually, and use the resulting strings as keys for a regular JavaScript dictionary? After all you are in the best position to know what makes your objects unique. That's what I do.</p>

<p>Example:</p>

<pre><code>var key = function(obj){
  // some unique object-dependent key
  return obj.totallyUniqueEmployeeIdKey; // just an example
};

var dict = {};

dict[key(obj1)] = obj1;
dict[key(obj2)] = obj2;
</code></pre>

<p>This way you can control indexing done by JavaScript without heavy lifting of memory allocation, and overflow handling.</p>

<p>Of course, if you truly want the ""industrial-grade solution"", you can build a class parameterized by the key function, and with all necessary API of the container, but &hellip; we use JavaScript, and trying to be simple and lightweight, so this functional solution is simple and fast.</p>

<p>The key function can be as simple as selecting right attributes of the object, e.g., a key, or a set of keys, which are already unique, a combination of keys, which are unique together, or as complex as using some cryptographic hashes like in <a href=""http://archive.dojotoolkit.org/nightly/dojotoolkit/dojox/encoding/"" rel=""noreferrer"">DojoX Encoding</a>, or <a href=""http://archive.dojotoolkit.org/nightly/dojotoolkit/dojox/uuid/"" rel=""noreferrer"">DojoX UUID</a>. While the latter solutions may produce unique keys, personally I try to avoid them at all costs, especially, if I know what makes my objects unique.</p>

<p><strong>Update in 2014:</strong> Answered back in 2008 this simple solution still requires more explanations. Let me clarify the idea in a Q&amp;A form.</p>

<p><em>Your solution doesn't have a real hash. Where is it???</em></p>

<p>JavaScript is a high-level language. Its basic primitive
(<a href=""http://en.wikipedia.org/wiki/JavaScript_syntax#Objects"" rel=""noreferrer"">Object</a>)
includes a hash table to keep properties. This hash table is usually written
in a low-level language for efficiency. Using a simple object with string keys we use an efficiently implemented hash table with no efforts on our part.</p>

<p><em>How do you know they use hash?</em></p>

<p>There are three major ways to keep a collection of objects addressable by a key:</p>

<ul>
<li>Unordered. In this case to retrieve an object by its key we have to go over all keys stopping when we find it. On average it will take n/2 comparisons.</li>
<li>Ordered.

<ul>
<li>Example #1: a sorted array &mdash; doing a binary search we will find our key after ~log2(n) comparisons on average. Much better.</li>
<li>Example #2: a tree. Again it'll be ~log(n) attempts.</li>
</ul></li>
<li>Hash table. On average it requires a constant time. Compare: O(n) vs. O(log n) vs. O(1). Boom.</li>
</ul>

<p>Obviously JavaScript objects use hash tables in some form to handle general cases.</p>

<p><em>Do browser vendors really use hash tables???</em></p>

<p>Really.</p>

<ul>
<li>Chrome/node.js/<a href=""https://github.com/v8/v8/"" rel=""noreferrer"">V8</a>: 
<a href=""https://github.com/v8/v8/blob/master/src/objects.h#L1680"" rel=""noreferrer"">JSObject</a>. Look for
<a href=""https://github.com/v8/v8/blob/master/src/objects.h#L3618"" rel=""noreferrer"">NameDictionary</a> and
<a href=""https://github.com/v8/v8/blob/master/src/objects.h#L3606"" rel=""noreferrer"">NameDictionaryShape</a> with
pertinent details in <a href=""https://github.com/v8/v8/blob/master/src/objects.cc"" rel=""noreferrer"">objects.cc</a>
and <a href=""https://github.com/v8/v8/blob/master/src/objects-inl.h"" rel=""noreferrer"">objects-inl.h</a>.</li>
<li>Firefox/<a href=""https://github.com/mozilla/gecko-dev"" rel=""noreferrer"">Gecko</a>:
<a href=""https://github.com/mozilla/gecko-dev/blob/master/js/src/jsobj.h#L99"" rel=""noreferrer"">JSObject</a>,
<a href=""https://github.com/mozilla/gecko-dev/blob/master/js/src/vm/NativeObject.h#L349"" rel=""noreferrer"">NativeObject</a>, and
<a href=""https://github.com/mozilla/gecko-dev/blob/master/js/src/vm/NativeObject.h#L1238"" rel=""noreferrer"">PlainObject</a> with pertinent details in
<a href=""https://github.com/mozilla/gecko-dev/blob/master/js/src/jsobj.cpp"" rel=""noreferrer"">jsobj.cpp</a> and
<a href=""https://github.com/mozilla/gecko-dev/blob/master/js/src/vm/NativeObject.cpp"" rel=""noreferrer"">vm/NativeObject.cpp</a>.</li>
</ul>

<p><em>Do they handle collisions?</em></p>

<p>Yes. See above. If you found a collision on unequal strings, please do not hesitate to file a bug with a vendor.</p>

<p><em>So what is your idea?</em></p>

<p>If you want to hash an object, find what makes it unique and use it as a key. Do not try to calculate real hash or emulate hash tables &mdash; it is already efficiently handled by the underlying JavaScript object.</p>

<p>Use this key with JavaScript <code>Object</code> to leverage its built-in hash table while steering clear of possible clashes with default properties.</p>

<p>Examples to get you started:</p>

<ul>
<li>If your objects include a unique user name &mdash; use it as a key.</li>
<li>If it includes a unique customer number &mdash; use it as a key.

<ul>
<li>If it includes unique government-issued numbers like an SSN, or a passport number, and your system doesn't allow duplicates &mdash; use it as a key.</li>
</ul></li>
<li>If a combination of fields is unique &mdash; use it as a key.

<ul>
<li>State abbreviation + driver license number makes an excellent key.</li>
<li>Country abbreviation + passport number is an excellent key too.</li>
</ul></li>
<li>Some function on fields, or a whole object, can return a unique value &mdash; use it as a key.</li>
</ul>

<p><em>I used your suggestion and cached all objects using a user name. But some wise guy is named ""toString"", which is a built-in property! What should I do now?</em></p>

<p>Obviously, if it is even remotely possible that the resulting key will exclusively consists of Latin characters, you should do something about it. For example, add any non-Latin Unicode character you like at the beginning or at the end to un-clash with default properties: ""#toString"", ""#MarySmith"". If a composite key is used, separate key components using some kind of non-Latin delimiter: ""name,city,state"".</p>

<p>In general this is the place, where we have to be creative, and select the easiest keys with given limitations (uniqueness, potential clashes with default properties).</p>

<p>Note: unique keys do not clash by definition, while potential hash clashes will be handled by the underlying <code>Object</code>.</p>

<p><em>Why don't you like industrial solutions?</em></p>

<p>IMHO, the best code is no code at all: it has no errors, requires no maintenance, easy to understand, and executes instantaneously. All ""hash tables in JavaScript"" I saw were >100 lines of code, and involved multiple objects. Compare it with: <code>dict[key] = value</code>.</p>

<p>Another point: is it even possible to beat a performance of a primordial object written in a low-level language, using JavaScript and the very same primordial objects to implement what is already implemented?</p>

<p><em>I still want to hash my objects without any keys!</em></p>

<p>We are in luck: ECMAScript 6 (scheduled for mid 2015 release, give or take 1-2 years after that to become widespread) defines
<a href=""https://people.mozilla.org/~jorendorff/es6-draft.html#sec-map-objects"" rel=""noreferrer"">map</a> and
<a href=""https://people.mozilla.org/~jorendorff/es6-draft.html#sec-set-objects"" rel=""noreferrer"">set</a>.</p>

<p>Judging by the definition they can use object's address as a key, which makes objects instantly distinct without artificial keys. OTOH, two different, yet identical objects, will be mapped as distinct.</p>
","368504"
"Getting value of HTML Checkbox from onclick/onchange events","421634","","<pre><code>&lt;input type=""checkbox"" onclick=""onClickHandler()"" onchange=""onChangeHandler()"" /&gt;
</code></pre>

<p>From within <code>onClickHandler</code> and/or <code>onChangeHandler</code>, how can I determine whether the new state of the checkbox?</p>
","<p><strong>The short answer:</strong></p>

<p>Use the <code>click</code> event, which won't fire until after the value has been updated, and fires when you want it to:</p>

<pre><code>&lt;label&gt;&lt;input type='checkbox' onclick='handleClick(this);'&gt;Checkbox&lt;/label&gt;

function handleClick(cb) {
  display(""Clicked, new value = "" + cb.checked);
}
</code></pre>

<p><a href=""http://jsbin.com/ijoqep/3"">Live example</a> | <a href=""http://jsbin.com/ijoqep/3/edit"">Source</a></p>

<p><strong>The longer answer:</strong></p>

<p>The <code>change</code> event handler isn't called until the <code>checked</code> state has been updated (<a href=""http://jsbin.com/ijoqep/1"">live example</a> | <a href=""http://jsbin.com/ijoqep/1/edit"">source</a>), but because (as Tim Büthe points out in the comments) IE doesn't fire the <code>change</code> event until the checkbox loses focus, you don't get the notification proactively. Worse, with IE if you click a <em>label</em> for the checkbox (rather than the checkbox itself) to update it, you can get the impression that you're getting the old value (try it with IE here by clicking the label: <a href=""http://jsbin.com/ijoqep/2"">live example</a> | <a href=""http://jsbin.com/ijoqep/2/edit"">source</a>). This is because if the checkbox has focus, clicking the label takes the focus away from it, firing the <code>change</code> event with the old value, and then the <code>click</code> happens setting the new value and setting focus back on the checkbox. Very confusing.</p>

<p>But you can avoid all of that unpleasantness if you use <code>click</code> instead.</p>

<p>I've used DOM0 handlers (<code>onxyz</code> attributes) because that's what you asked about, but for the record, I would generally recommend hooking up handlers in code (DOM2's <code>addEventListener</code>, or <code>attachEvent</code> in older versions of IE) rather than using <code>onxyz</code> attributes. That lets you attach multiple handlers to the same element and lets you avoid making all of your handlers global functions.</p>

<hr>

<p>An earlier version of this answer used this code for <code>handleClick</code>:</p>

<pre><code>function handleClick(cb) {
  setTimeout(function() {
    display(""Clicked, new value = "" + cb.checked);
  }, 0);
}
</code></pre>

<p>The goal seemed to be to allow the click to complete before looking at the value. As far as I'm aware, there's no reason to do that, and I have no idea why I did. The value is changed before the <code>click</code> handler is called. In fact, the spec is <a href=""http://www.w3.org/TR/html5/forms.html#checkbox-state-%28type=checkbox%29"">quite clear about that</a>. The version without <code>setTimeout</code> works perfectly well in every browser I've tried (even IE6). I can only assume I was thinking about some <em>other</em> platform where the change isn't done until after the event. In any case, no reason to do that with HTML checkboxes.</p>
","4471462"
"How can I get form data with JavaScript/jQuery?","421526","","<p>Is there a simple, one-line way to get the data of a form as it would be if it was to be submitted in the classic HTML-only way?</p>

<p>For example, in:</p>

<pre><code>&lt;form&gt;
 &lt;input type=""radio"" name=""foo"" value=""1"" checked=""checked"" /&gt;
 &lt;input type=""radio"" name=""foo"" value=""0"" /&gt;
 &lt;input name=""bar"" value=""xxx"" /&gt;
 &lt;select name=""this""&gt;
  &lt;option value=""hi"" selected=""selected""&gt;Hi&lt;/option&gt;
  &lt;option value=""ho""&gt;Ho&lt;/option&gt;
&lt;/form&gt;
</code></pre>

<p>Out:</p>

<pre><code>{
 ""foo"": ""1"",
 ""bar"": ""xxx"",
 ""this"": ""hi""
}
</code></pre>

<p>Something like this is too simple, since it does not (correctly) include textareas, selects, radio buttons and checkboxes:</p>

<pre><code>$(""#form input"").each(function() {
 data[theFieldName] = theFieldValue;
});
</code></pre>
","<pre><code>$('form').serialize() //this produces: ""foo=1&amp;bar=xxx&amp;this=hi""
</code></pre>

<p><a href=""http://jsbin.com/UpASuHo/113/edit?html,js,output"" rel=""noreferrer"">demo</a></p>
","2276477"
"How to get a JavaScript object's class?","421109","","<p>I created a JavaScript object, but how I can determine the class of that object?</p>

<p>I want something similar to Java's <code>.getClass()</code> method. </p>
","<p>There's no exact counterpart to Java's <a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#getClass()"" rel=""noreferrer""><code>getClass()</code></a> in JavaScript. Mostly that's due to JavaScript being a <a href=""http://en.wikipedia.org/wiki/Prototype-based_programming"" rel=""noreferrer"">prototype-based language</a>, as opposed to Java being a <a href=""http://en.wikipedia.org/wiki/Class-based_programming"" rel=""noreferrer"">class-based</a> one.</p>

<p>Depending on what you need <code>getClass()</code> for, there are several options in JavaScript: </p>

<ul>
<li><a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/typeof"" rel=""noreferrer""><code>typeof</code></a></li>
<li><a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/instanceof"" rel=""noreferrer""><code>instanceof</code></a></li>
<li><code>obj.</code><a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/constructor"" rel=""noreferrer""><code>constructor</code></a></li>
<li><code>func.</code><a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/prototype"" rel=""noreferrer""><code>prototype</code></a>, <code>proto</code>.<a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/isPrototypeOf"" rel=""noreferrer""><code>isPrototypeOf</code></a></li>
</ul>

<p>A few examples:</p>

<pre><code>function Foo() {}
var foo = new Foo();

typeof Foo;             // == ""function""
typeof foo;             // == ""object""

foo instanceof Foo;     // == true
foo.constructor.name;   // == ""Foo""
Foo.name                // == ""Foo""    

Foo.prototype.isPrototypeOf(foo);   // == true

Foo.prototype.bar = function (x) {return x+x;};
foo.bar(21);            // == 42
</code></pre>

<p>Note: if you are compiling your code with Uglify it will change non-global class names. To prevent this, Uglify has a <a href=""https://github.com/mishoo/UglifyJS2"" rel=""noreferrer""><code>--mangle</code></a> param that you can set to false is using <a href=""https://github.com/terinjokes/gulp-uglify"" rel=""noreferrer"">gulp</a> or <a href=""https://github.com/gruntjs/grunt-contrib-uglify"" rel=""noreferrer"">grunt</a>.</p>
","1249554"
"How to apply !important using .css()?","420765","","<p>I am having trouble applying a style that is <code>!important</code>. I’ve tried:</p>

<pre class=""lang-js prettyprint-override""><code>$(""#elem"").css(""width"", ""100px !important"");
</code></pre>

<p>This does <strong>nothing</strong>; no width style whatsoever is applied. Is there a jQuery-ish way of applying such a style without having to overwrite <code>cssText</code> (which would mean I’d need to parse it first, etc.)?</p>

<p><strong>Edit</strong>: I should add that I have a stylesheet with an <code>!important</code> style that I am trying to override with an <code>!important</code> style inline, so using <code>.width()</code> and the like does not work since it gets overridden by my external <code>!important</code> style.</p>

<p>Also, the value that will override the previous value <strong>is computed</strong>, so I cannot simply create another external style.</p>
","<p>I think I've found a real solution. I've made it into a new function:</p>

<p><code>jQuery.style(name, value, priority);</code></p>

<p>You can use it to get values with <code>.style('name')</code> just like <code>.css('name')</code>, get the CSSStyleDeclaration with <code>.style()</code>, and also set values - with the ability to specify the priority as 'important'. See <a href=""https://developer.mozilla.org/en/DOM/CSSStyleDeclaration"" rel=""noreferrer"">this</a>.</p>

<h2>Demo</h2>

<pre><code>var div = $('someDiv');
console.log(div.style('color'));
div.style('color', 'red');
console.log(div.style('color'));
div.style('color', 'blue', 'important');
console.log(div.style('color'));
console.log(div.style().getPropertyPriority('color'));
</code></pre>

<p>Here's the output:</p>

<pre><code>null
red
blue
important
</code></pre>

<h2>The Function</h2>

<pre><code>(function($) {    
  if ($.fn.style) {
    return;
  }

  // Escape regex chars with \
  var escape = function(text) {
    return text.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, ""\\$&amp;"");
  };

  // For those who need them (&lt; IE 9), add support for CSS functions
  var isStyleFuncSupported = !!CSSStyleDeclaration.prototype.getPropertyValue;
  if (!isStyleFuncSupported) {
    CSSStyleDeclaration.prototype.getPropertyValue = function(a) {
      return this.getAttribute(a);
    };
    CSSStyleDeclaration.prototype.setProperty = function(styleName, value, priority) {
      this.setAttribute(styleName, value);
      var priority = typeof priority != 'undefined' ? priority : '';
      if (priority != '') {
        // Add priority manually
        var rule = new RegExp(escape(styleName) + '\\s*:\\s*' + escape(value) +
            '(\\s*;)?', 'gmi');
        this.cssText =
            this.cssText.replace(rule, styleName + ': ' + value + ' !' + priority + ';');
      }
    };
    CSSStyleDeclaration.prototype.removeProperty = function(a) {
      return this.removeAttribute(a);
    };
    CSSStyleDeclaration.prototype.getPropertyPriority = function(styleName) {
      var rule = new RegExp(escape(styleName) + '\\s*:\\s*[^\\s]*\\s*!important(\\s*;)?',
          'gmi');
      return rule.test(this.cssText) ? 'important' : '';
    }
  }

  // The style function
  $.fn.style = function(styleName, value, priority) {
    // DOM node
    var node = this.get(0);
    // Ensure we have a DOM node
    if (typeof node == 'undefined') {
      return this;
    }
    // CSSStyleDeclaration
    var style = this.get(0).style;
    // Getter/Setter
    if (typeof styleName != 'undefined') {
      if (typeof value != 'undefined') {
        // Set style property
        priority = typeof priority != 'undefined' ? priority : '';
        style.setProperty(styleName, value, priority);
        return this;
      } else {
        // Get style property
        return style.getPropertyValue(styleName);
      }
    } else {
      // Get CSSStyleDeclaration
      return style;
    }
  };
})(jQuery);
</code></pre>

<p>See <a href=""https://developer.mozilla.org/en/DOM/CSSStyleDeclaration"" rel=""noreferrer"">this</a> for examples of how to read and set the CSS values. My issue was that I had already set <code>!important</code> for the width in my CSS to avoid conflicts with other theme CSS, but any changes I made to the width in jQuery would be unaffected since they would be added to the style attribute.</p>

<h2>Compatibility</h2>

<p>For setting with the priority using the <code>setProperty</code> function, <a href=""http://help.dottoro.com/ljdpsdnb.php"" rel=""noreferrer"">This Article</a> says there is support for IE 9+ and all other browsers. I have tried with IE 8 and it has failed, which is why I built support for it in my functions (see above). It will work on all other browsers using setProperty, but it will need my custom code to work in &lt; IE 9.</p>
","8894528"
"How do I load an HTML page in a <div> using JavaScript?","420065","","<p>I want home.html to load in <code>&lt;div id=""content""&gt;</code>.   </p>

<pre><code>&lt;div id=""topBar""&gt; &lt;a href =""#"" onclick=""load_home()""&gt; HOME &lt;/a&gt; &lt;/div&gt;
&lt;div id =""content""&gt; &lt;/div&gt;
&lt;script&gt;
      function load_home(){
            document.getElementById(""content"").innerHTML='&lt;object type=""type/html"" data=""home.html"" &gt;&lt;/object&gt;';
  }
&lt;/script&gt;
</code></pre>

<p>This works fine when I use Firefox. When I use Google Chrome, it asks for plug-in. How do I get it working in Google Chrome?</p>
","<p>I finally found the answer of my problem. The solution is </p>

<pre><code>function load_home() {
     document.getElementById(""content"").innerHTML='&lt;object type=""text/html"" data=""home.html"" &gt;&lt;/object&gt;';
}
</code></pre>
","17642783"
"Launch Bootstrap Modal on page load","419476","","<p>I don't know javascript at all. The bootstrap documentation says to </p>

<blockquote>
  <p>Call the modal via javascript: $('#myModal').modal(options)</p>
</blockquote>

<p>I have no clue how to call this on a page load. Using the supplied code on the bootstrap page I can successfully call the Modal on an element click, but I want it to load immediately on a page load.</p>
","<p>Just wrap the modal you want to call on page load inside a jQuery <code>load</code> event on the head section of your document and it should popup, like so:</p>

<p><strong>JS</strong></p>

<pre><code>&lt;script type=""text/javascript""&gt;
    $(window).on('load',function(){
        $('#myModal').modal('show');
    });
&lt;/script&gt;
</code></pre>

<p><strong>HTML</strong></p>

<pre><code>&lt;div class=""modal hide fade"" id=""myModal""&gt;
  &lt;div class=""modal-header""&gt;
    &lt;a class=""close"" data-dismiss=""modal""&gt;×&lt;/a&gt;
    &lt;h3&gt;Modal header&lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class=""modal-body""&gt;
    &lt;p&gt;One fine body…&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class=""modal-footer""&gt;
    &lt;a href=""#"" class=""btn""&gt;Close&lt;/a&gt;
    &lt;a href=""#"" class=""btn btn-primary""&gt;Save changes&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p>You can still call the modal within your page with by calling it with a link like so:</p>

<pre><code>&lt;a class=""btn"" data-toggle=""modal"" href=""#myModal"" &gt;Launch Modal&lt;/a&gt;
</code></pre>
","10234834"
"How do I change the background color with JavaScript?","419292","","<p>Anyone know a simple method to swap the background color of a webpage using JavaScript?</p>
","<p>Modify the JavaScript property <code>document.body.style.background</code>.</p>

<p>For example:</p>

<pre><code>function changeBackground(color) {
   document.body.style.background = color;
}

&lt;BODY onload=""changeBackground('red');""&gt;
</code></pre>

<p>Note: this does depend a bit on how your page is put together, for example if you're using a DIV container with a different background colour you will need to modify the background colour of that instead of the document body.</p>
","197761"
"Set Value of Input Using Javascript Function","419270","","<p>I'm currently using a YUI gadget.  I also do have a Javascript function to validate the output that comes from the <code>div</code> that YUI draws for me:</p>

<pre><code>Event.on(""addGadgetUrl"", ""click"", function(){
        /* line x ------&gt;*/     var url = Dom.get(""gadget_url"").value;
                if (url == """") {
                    error.innerHTML = ""&lt;p&gt; error"" /&gt;&lt;/p&gt;"";
                } else {
        /* line y ---&gt; */ 
                       /*  I need to add some code in here to set the value of ""gadget_url"" by """" */
                }
            }, null, true);
</code></pre>

<p>Here is my <code>div</code>:</p>

<pre><code>&lt;div&gt;
&lt;p&gt;URL&lt;/p&gt;
&lt;input type=""text"" name=""gadget_url"" id=""gadget_url"" style=""width: 350px;"" class=""input""/&gt;
&lt;input type=""button"" id=""addGadgetUrl"" value=""add gadget""/&gt;
&lt;br&gt;
&lt;span id=""error""&gt;&lt;/span&gt;
&lt;/div&gt;
</code></pre>

<p>As you can see my question is, how can I set the value of <code>gadget_url</code> to be <code>""""</code>?</p>
","<p>Try...
for YUI</p>

<p><code>Dom.get(""gadget_url"").set(""value"","""");</code></p>

<p>with normal <code>Javascript</code></p>

<p><code>document.getElementById('gadget_url').value = '';</code></p>

<p>with JQuery</p>

<pre><code>$(""#gadget_url"").val("""");
</code></pre>
","5700542"
"How to decide when to use Node.js?","419036","","<p>I am new to this kind of stuff, but lately I've been hearing a lot about how good <a href=""http://en.wikipedia.org/wiki/Node.js"" rel=""nofollow noreferrer"">Node.js</a> is. Considering how much I love working with jQuery and JavaScript in general, I can't help but wonder how to decide when to use Node.js. The web application I have in mind is something like <a href=""https://en.wikipedia.org/wiki/Bitly"" rel=""nofollow noreferrer"">Bitly</a> - takes some content, archives it. </p>

<p>From all the homework I have been doing in the last few days, I obtained the following information. Node.js </p>

<ul>
<li>is a command-line tool that can be run as a regular web server and lets one run JavaScript programs</li>
<li>utilizes the great <a href=""http://en.wikipedia.org/wiki/V8_%28JavaScript_engine%29"" rel=""nofollow noreferrer"">V8 JavaScript engine</a></li>
<li>is very good when you need to do several things at the same time</li>
<li>is event-based so all the wonderful <a href=""http://en.wikipedia.org/wiki/Ajax_%28programming%29"" rel=""nofollow noreferrer"">Ajax</a>-like stuff can be done on the server side</li>
<li>lets us share code between the browser and the backend</li>
<li>lets us talk with MySQL</li>
</ul>

<p>Some of the sources that I have come across are:</p>

<ul>
<li><a href=""http://www.stoimen.com/blog/2010/11/16/diving-into-node-js-introduction-and-installation/"" rel=""nofollow noreferrer"">Diving into Node.js – Introduction and Installation</a></li>
<li><a href=""http://debuggable.com/posts/understanding-node-js:4bd98440-45e4-4a9a-8ef7-0f7ecbdd56cb"" rel=""nofollow noreferrer"">Understanding NodeJS</a></li>
<li><a href=""http://blog.osbutler.com/categories/node-by-example/?page=3"" rel=""nofollow noreferrer"">Node by Example</a> (<a href=""http://archive.is/exhaR"" rel=""nofollow noreferrer"">Archive.is</a>)</li>
<li><a href=""http://dailyjs.com/2010/11/01/node-tutorial/"" rel=""nofollow noreferrer"">Let’s Make a Web App: NodePad</a></li>
</ul>

<p>Considering that Node.js can be run almost out-of-the-box on <a href=""http://en.wikipedia.org/wiki/Amazon_Elastic_Compute_Cloud"" rel=""nofollow noreferrer"">Amazon's EC2</a> instances, I am trying to understand what type of problems require Node.js as opposed to any of the mighty kings out there like <a href=""http://en.wikipedia.org/wiki/PHP"" rel=""nofollow noreferrer"">PHP</a>, <a href=""http://en.wikipedia.org/wiki/Python_%28programming_language%29"" rel=""nofollow noreferrer"">Python</a> and <a href=""http://en.wikipedia.org/wiki/Ruby_%28programming_language%29"" rel=""nofollow noreferrer"">Ruby</a>. I understand that it really depends on the expertise one has on a language, but my question falls more into the general category of: When to use a particular framework and what type of problems is it particularly suited for?</p>
","<p>You did a great job of summarizing what's awesome about Node.js. My feeling is that Node.js is especially suited for applications where you'd like to maintain a persistent connection from the browser back to the server. Using a technique known as <a href=""http://en.wikipedia.org/wiki/Push_technology#Long_polling"" rel=""noreferrer"">""long-polling""</a>, you can write an application that sends updates to the user in real time. Doing long polling on many of the web's giants, like <a href=""http://en.wikipedia.org/wiki/Ruby_on_Rails"" rel=""noreferrer"">Ruby on Rails</a> or <a href=""http://en.wikipedia.org/wiki/Django_%28web_framework%29"" rel=""noreferrer"">Django</a>, would create immense load on the server, because each active client eats up one server process. This situation amounts to a <a href=""http://en.wikipedia.org/wiki/Tarpit_(networking)"" rel=""noreferrer"">tarpit</a> attack. When you use something like Node.js, the server has no need of maintaining separate threads for each open connection.  </p>

<p>This means you can create a <a href=""https://github.com/rivalslayer/node_chat"" rel=""noreferrer"">browser-based chat application</a> in Node.js that takes almost no system resources to serve a great many clients. Any time you want to do this sort of long-polling, Node.js is a great option.  </p>

<p>It's worth mentioning that Ruby and Python both have tools to do this sort of thing (<a href=""http://rubyeventmachine.com/"" rel=""noreferrer"">eventmachine</a> and <a href=""https://twistedmatrix.com/trac/"" rel=""noreferrer"">twisted</a>, respectively), but that Node.js does it exceptionally well, and from the ground up. JavaScript is exceptionally well situated to a callback-based concurrency model, and it excels here. Also, being able to serialize and deserialize with JSON native to both the client and the server is pretty nifty. </p>

<p>I look forward to reading other answers here, this is a fantastic question. </p>

<p>It's worth pointing out that Node.js is also great for situations in which you'll be reusing a lot of code across the client/server gap. The <a href=""http://meteor.com"" rel=""noreferrer"">Meteor framework</a> makes this really easy, and a lot of folks are suggesting this might be the future of web development. I can say from experience that it's a whole lot of fun to write code in Meteor, and a big part of this is spending less time thinking about how you're going to restructure your data, so the code that runs in the browser can easily manipulate it and pass it back. </p>

<p>Here's an article on Pyramid and long-polling, which turns out to be very easy to set up with a little help from gevent: <a href=""http://michael.merickel.org/2011/6/21/tictactoe-and-long-polling-with-pyramid/"" rel=""noreferrer""><em>TicTacToe and Long Polling with Pyramid</em></a>.</p>
","5062670"
"Accessing the web page's HTTP Headers in JavaScript","418069","","<p>How do I access a page's HTTP response headers via JavaScript?</p>

<p>Related to <a href=""https://stackoverflow.com/questions/220149/how-do-i-access-the-http-request-header-fields-via-javascript""><strong>this question</strong></a>, which was modified to ask about accessing two specific HTTP headers.</p>

<blockquote>
  <p><strong>Related:</strong><br>
  <a href=""https://stackoverflow.com/questions/220149/how-do-i-access-the-http-request-header-fields-via-javascript"">How do I access the HTTP request header fields via JavaScript?</a></p>
</blockquote>
","<p>Unfortunately, there isn't an API to give you the HTTP response headers for your initial page request. That was the original question posted here. It has been <a href=""https://stackoverflow.com/questions/12258705/how-can-i-read-the-current-headers-without-making-a-new-request-with-js"">repeatedly asked</a>, too, because some people would like to get the actual response headers of the original page request without issuing another one.</p>

<h1><br/>For AJAX Requests:</h1>

<p>If an HTTP request is made over AJAX, it is possible to get the response headers with the <strong><code>getAllResponseHeaders()</code></strong> method. It's part of the XMLHttpRequest API. To see how this can be applied, check out the <em><code>fetchSimilarHeaders()</code></em> function below. Note that this is a work-around to the problem that won't be reliable for some applications.</p>

<pre><code>myXMLHttpRequest.getAllResponseHeaders();
</code></pre>

<ul>
<li><p>The API was specified in the following candidate recommendation for XMLHttpRequest: <a href=""http://www.w3.org/TR/XMLHttpRequest/#the-getresponseheader-method"" rel=""noreferrer"">XMLHttpRequest - W3C Candidate Recommendation 3 August 2010</a></p></li>
<li><p>Specifically, the <code>getAllResponseHeaders()</code> method was specified in the following section: <a href=""http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders()-method"" rel=""noreferrer"">w3.org: <code>XMLHttpRequest</code>: the <code>getallresponseheaders()</code> method</a> </p></li>
<li><p>The MDN documentation is good, too: <a href=""https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"" rel=""noreferrer"">developer.mozilla.org: <code>XMLHttpRequest</code></a>.</p></li>
</ul>

<p>This will not give you information about the original page request's HTTP response headers, but it could be used to make educated guesses about what those headers were. More on that is described next.</p>

<h1><br/>Getting header values from the Initial Page Request:</h1>

<p>This question was first asked several years ago, asking specifically about how to get at the original HTTP response headers for the <em>current page</em> (i.e. the same page inside of which the javascript was running). This is quite a different question than simply getting the response headers for any HTTP request. For the initial page request, the headers aren't readily available to javascript. Whether the header values you need will be reliably and sufficiently consistent if you request the same page again via AJAX will depend on your particular application.</p>

<p>The following are a few suggestions for getting around that problem.</p>

<h2><br/>1. Requests on Resources which are largely static</h2>

<p>If the response is largely static and the headers are not expected to change much between requests, you could make an AJAX request for the same page you're currently on and assume that they're they are the same values which were part of the page's HTTP response. This could allow you to access the headers you need using the nice XMLHttpRequest API described above.</p>

<pre><code>function fetchSimilarHeaders (callback) {
    var request = new XMLHttpRequest();
    request.onreadystatechange = function () {
        if (request.readyState === 4) {
            //
            // The following headers may often be similar
            // to those of the original page request...
            //
            if (callback &amp;&amp; typeof callback === 'function') {
                callback(request.getAllResponseHeaders());
            }
        }
    };

    //
    // Re-request the same page (document.location)
    // We hope to get the same or similar response headers to those which 
    // came with the current page, but we have no guarantee.
    // Since we are only after the headers, a HEAD request may be sufficient.
    //
    request.open('HEAD', document.location, true);
    request.send(null);
}
</code></pre>

<p>This approach will be problematic if you truly have to rely on the values being consistent between requests, since you can't fully guarantee that they are the same. It's going to depend on your specific application and whether you know that the value you need is something that won't be changing from one request to the next.</p>

<h2><br/>2. Make Inferences</h2>

<p>There are <strong>some BOM properties</strong> (Browser Object Model) which the browser determines by looking at the headers. Some of these properties reflect HTTP headers directly (e.g. <code>navigator.userAgent</code> is set to the value of the HTTP <code>User-Agent</code> header field). By sniffing around the available properties you might be able to find what you need, or some clues to indicate what the HTTP response contained.</p>

<h2><br/>3. Stash them</h2>

<p>If you control the server side, you can access any header you like as you construct the full response. Values could be passed to the client with the page, stashed in some markup or perhaps in an inlined JSON structure. If you wanted to have every HTTP request header available to your javascript, you could iterate through them on the server and send them back as hidden values in the markup. It's probably not ideal to send header values this way, but you could certainly do it for the specific value you need. This solution is arguably inefficient, too, but it would do the job if you needed it.</p>
","220233"
"How to add onload event to a div element?","417820","","<p>How do you add an onload event to an element?  Can I use:</p>

<pre><code>&lt;div onload=""oQuickReply.swap();"" &gt;&lt;/div&gt;
</code></pre>

<p>for this?</p>
","<p>No, you can't. The easiest way to make it work would be to put the function call directly after the element </p>

<p>Example:</p>

<pre><code>...
&lt;div id=""somid""&gt;Some content&lt;/div&gt;
&lt;script type=""text/javascript""&gt;
   oQuickReply.swap('somid');
&lt;/script&gt;
...
</code></pre>

<p>or - even better - just in front of <code>&lt;/body&gt;</code>:</p>

<pre><code>...
&lt;script type=""text/javascript""&gt;
   oQuickReply.swap('somid');
&lt;/script&gt;
&lt;/body&gt;
</code></pre>

<p>...so it doesn't block the following content from loading.</p>
","4059124"
"How to get full path of selected file on change of <input type=‘file’> using javascript, jquery-ajax?","416005","","<p>How to get full path of file while selecting file using <code>&lt;input type=‘file’&gt;</code></p>

<pre><code>&lt;input type=""file"" id=""fileUpload""&gt;
&lt;script type=""text/javascript""&gt;
function getFilePath(){
     $('input[type=file]').change(function () {
         var filePath=$('#fileUpload').val(); 
     });
}
&lt;/script&gt;
</code></pre>

<p>but the filePath var contains <code>only name</code> of selected file, not the <code>full path</code>. <br/>
I searched it on net, but it seems that for security reasons browsers (FF,chrome) just give name of file.<br/>
Is there any other way to get full path of selected file?</p>
","<p>For security reasons browsers do not allow this, i.e. JavaScript in browser has no access to the File System, however using HTML5 File API, only Firefox provides a <code>mozFullPath</code> property, but if you try to get the value it returns an empty string:</p>

<pre><code>$('input[type=file]').change(function () {
    console.log(this.files[0].mozFullPath);
});
</code></pre>

<p><a href=""http://jsfiddle.net/SCK5A/"" rel=""nofollow noreferrer"">http://jsfiddle.net/SCK5A/</a></p>

<p>So don't waste your time.</p>

<p>edit: If you need the file's path for reading a file you can use the <a href=""https://developer.mozilla.org/en/docs/Web/API/FileReader"" rel=""nofollow noreferrer"">FileReader</a> API instead. Here is a related question on SO: <a href=""https://stackoverflow.com/questions/4459379/preview-an-image-before-it-is-uploaded""><strong>Preview an image before it is uploaded.</strong></a></p>
","15201258"
"How do I replace text inside a div element?","415556","","<p>I need to set the text within a DIV element dynamically. What is the best, browser safe approach? I have prototypejs and scriptaculous available.</p>

<pre><code>&lt;div id=""panel""&gt;
  &lt;div id=""field_name""&gt;TEXT GOES HERE&lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p>Here's what the function will look like:</p>

<pre><code>function showPanel(fieldName) {
  var fieldNameElement = document.getElementById('field_name');
  //Make replacement here
}
</code></pre>
","<p>I would use Prototype's <code>update</code> method which supports plain text, an HTML snippet or any JavaScript object that defines a <code>toString</code> method.</p>

<pre><code>$(""field_name"").update(""New text"");
</code></pre>

<ul>
<li><a href=""http://www.prototypejs.org/api/element/update"" rel=""noreferrer"">Element.update documentation</a></li>
</ul>
","121859"
"How to get object length","413733","","<p>Is there any built-in function that can return the length of an object?</p>

<p>For example, I have <code>a = { 'a':1,'b':2,'c':3 }</code> which should return <code>3</code>. If I use <code>a.length</code> it returns <code>undefined</code>.</p>

<p>It could be a simple loop function, but I'd like to know if there's a built-in function?</p>

<p>There is a related question (<a href=""https://stackoverflow.com/questions/3241782/length-of-a-json-object"">Length of a JSON object</a>) - in the chosen answer the user advises to transform object into an array, which is not pretty comfortable for my task.</p>
","<p>For browsers supporting <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/keys"" rel=""noreferrer"">Object.keys()</a> you can simply do:</p>

<pre><code>Object.keys(a).length;
</code></pre>

<p>Otherwise (notably in IE &lt; 9), you can loop through the object yourself with a <code>for (x in y)</code> loop:</p>

<pre><code>var count = 0;
var i;

for (i in a) {
    if (a.hasOwnProperty(i)) {
        count++;
    }
}
</code></pre>

<p>The <code>hasOwnProperty</code> is there to make sure that you're only counting properties from the object literal, and not properties it ""inherits"" from its prototype.</p>
","5533226"
"Get random item from JavaScript array","413376","","<pre><code>var items = Array(523,3452,334,31,...5346);
</code></pre>

<p>How do I get random item from <code>items</code>?</p>
","<pre><code>var item = items[Math.floor(Math.random()*items.length)];
</code></pre>
","5915122"
"jQuery's jquery-1.10.2.min.map is triggering a 404 (Not Found)","413135","","<p>I'm seeing error messages about a file, <code>min.map</code>, being not found:</p>

<blockquote>
  <p>GET jQuery's jquery-1.10.2.min.map is triggering a 404 (Not Found)</p>
</blockquote>

<hr>

<h3>Screenshot</h3>

<p><img src=""https://i.stack.imgur.com/M6CMw.png"" alt=""enter image description here""></p>

<p>Where is this coming from?</p>
","<p>If Chrome DevTools is reporting a 404 for a .map file (maybe <code>jquery-1.10.2.min.map</code>, <code>jquery.min.map</code> or <code>jquery-2.0.3.min.map</code>, but can happen with anything) first thing to know is this is only requested when using the DevTools. 
<strong>Your users will not be hitting this 404.</strong></p>

<p>Now you can fix this or disable the sourcemap functionality. </p>

<h2>Fix: get the files</h2>

<p>Next, it's an easy fix. Head to <a href=""http://jquery.com/download/"">http://jquery.com/download/</a> and click the <strong>Download the map file</strong> link for your version, and you'll want the uncompressed file downloaded as well.</p>

<p><img src=""https://i.stack.imgur.com/lfwrB.png"" alt=""enter image description here""></p>

<p>Having the map file in place allows you do debug your minified jQuery via the original sources, which will save a lot of time and frustration if you don't like dealing with variable names like <code>a</code> and <code>c</code>. </p>

<p>More about sourcemaps here: <a href=""http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/"">An Introduction to JavaScript Source Maps</a></p>

<h2>Dodge: disable sourcemaps</h2>

<p>Instead of getting the files, you can alternatively disable JavaScript source maps completely for now, in your settings. This is a fine choice if you never plan on debugging JavaScript on this page.
Use the cog icon in the bottom right of the DevTools, to open settings, then:
<img src=""https://i.stack.imgur.com/Ezwue.png"" alt=""enter image description here""></p>
","18365316"
"endsWith in JavaScript","412812","","<p>How can I check if a string ends with a particular character in JavaScript?</p>

<p>Example: I have a string </p>

<pre><code>var str = ""mystring#"";
</code></pre>

<p>I want to know if that string is ending with <code>#</code>. How can I check it?</p>

<ol>
<li><p>Is there a <code>endsWith()</code> method in JavaScript?</p></li>
<li><p>One solution I have is take the length of the string and get the last character and check it.</p></li>
</ol>

<p>Is this the best way or there is any other way?</p>
","<p><strong>UPDATE (Nov 24th, 2015):</strong></p>

<p>This answer is originally posted in the year 2010 (SIX years back.) so please take note of these insightful comments:</p>

<ul>
<li><p><a href=""https://stackoverflow.com/users/570040/shauna"">Shauna</a> - Update for Googlers - Looks like ECMA6 adds this function. The MDN article also shows a polyfill. <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith"" rel=""noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith</a></p></li>
<li><p><a href=""https://stackoverflow.com/users/157247/t-j-crowder"">T.J. Crowder</a> - Creating substrings isn't expensive on modern browsers; it may well have been in 2010 when this answer was posted. These days, the simple <code>this.substr(-suffix.length) === suffix</code> approach is fastest on Chrome, the same on IE11 as indexOf, and only 4% slower (fergetaboutit territory) on Firefox: <a href=""http://jsperf.com/endswith-stackoverflow/14"" rel=""noreferrer"">jsperf.com/endswith-stackoverflow/14</a> And faster across the board when the result is false: <a href=""http://jsperf.com/endswith-stackoverflow-when-false"" rel=""noreferrer"">jsperf.com/endswith-stackoverflow-when-false</a> <strong>Of course, with ES6 adding endsWith, the point is moot. :-)</strong></p></li>
</ul>

<hr>

<p><strong>ORIGINAL ANSWER:</strong></p>

<p>I know this is a year old question... but I need this too and I need it to work cross-browser so... <strong>combining everyone's answer and comments</strong> and simplifying it a bit:</p>

<pre><code>String.prototype.endsWith = function(suffix) {
    return this.indexOf(suffix, this.length - suffix.length) !== -1;
};
</code></pre>

<ul>
<li>Doesn't create a substring</li>
<li>Uses native <code>indexOf</code> function for fastest results</li>
<li>Skip unnecessary comparisons using the second parameter of <code>indexOf</code> to skip ahead</li>
<li>Works in Internet Explorer</li>
<li>NO Regex complications</li>
</ul>

<hr>

<p>Also, if you don't like stuffing things in native data structure's prototypes, here's a standalone version:</p>

<pre><code>function endsWith(str, suffix) {
    return str.indexOf(suffix, str.length - suffix.length) !== -1;
}
</code></pre>

<hr>

<p><strong>EDIT:</strong> As noted by @hamish in the comments, if you want to err on the safe side and check if an implementation has already been provided, you can just adds a <code>typeof</code> check like so:</p>

<pre><code>if (typeof String.prototype.endsWith !== 'function') {
    String.prototype.endsWith = function(suffix) {
        return this.indexOf(suffix, this.length - suffix.length) !== -1;
    };
}
</code></pre>
","2548133"
"Invoking JavaScript code in an iframe from the parent page","412719","","<p>Basically, I have an iframe embedded in a page and the iframe has some <a href=""http://en.wikipedia.org/wiki/JavaScript"" rel=""noreferrer"">JavaScript</a> routines I need to invoke from the parent page.</p>

<p>Now the opposite is quite simple as you only need to call <code>parent.functionName()</code>, but unfortunately I need exactly the opposite of that.</p>

<p>Please note that my problem is not changing the source <a href=""http://en.wikipedia.org/wiki/Uniform_Resource_Locator"" rel=""noreferrer"">URL</a> of the iframe, but invoking a function defined in the iframe.</p>
","<p>Assume your iFrame's id is ""targetFrame"" and the function you want to call is <code>targetFunction()</code>:</p>

<pre><code>document.getElementById('targetFrame').contentWindow.targetFunction();
</code></pre>

<p>You can also access the frame using <code>window.frames</code> instead of <code>document.getElementById</code>.</p>

<pre><code>// this option does not work in most of latest versions of chrome and Firefox
window.frames[0].frameElement.contentWindow.targetFunction(); 
</code></pre>
","251453"
"What is the scope of variables in JavaScript?","411770","","<p>What is the scope of variables in javascript? Do they have the same scope inside as opposed to outside a function? Or does it even matter? Also, where are the variables stored if they are defined globally?</p>
","<p>I think about the best I can do is give you a bunch of examples to study.
Javascript programmers are practically ranked by how well they understand scope.
It can at times be quite counter-intuitive.</p>

<ol>
<li><p><strong>A globally-scoped variable</strong></p>

<pre><code>// global scope
var a = 1;

function one() {
  alert(a); // alerts '1'
}
</code></pre></li>
<li><p><strong>Local scope</strong></p>

<pre><code>// global scope
var a = 1;

function two(a) {
  // local scope
  alert(a); // alerts the given argument, not the global value of '1'
}

// local scope again
function three() {
  var a = 3;
  alert(a); // alerts '3'
}
</code></pre></li>
<li><p><strong>Intermediate</strong>: <em>No such thing as block scope in JavaScript</em> (ES5; ES6 introduces <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let"" rel=""noreferrer""><code>let</code></a>)</p>

<p>a.</p>

<pre><code>var a = 1;

function four() {
  if (true) {
    var a = 4;
  }

  alert(a); // alerts '4', not the global value of '1'
}
</code></pre>

<p>b.</p>

<pre><code>var a = 1;

function one() {
  if (true) {
    let a = 4;
  }

  alert(a); // alerts '1' because the 'let' keyword uses block scoping
}
</code></pre></li>
<li><p><strong>Intermediate</strong>: <em>Object properties</em></p>

<pre><code>var a = 1;

function Five() {
  this.a = 5;
}

alert(new Five().a); // alerts '5'
</code></pre></li>
<li><p><strong>Advanced</strong>: <em>Closure</em></p>

<pre><code>var a = 1;

var six = (function() {
  var a = 6;

  return function() {
    // JavaScript ""closure"" means I have access to 'a' in here,
    // because it is defined in the function in which I was defined.
    alert(a); // alerts '6'
  };
})();
</code></pre></li>
<li><p><strong>Advanced</strong>: <em>Prototype-based scope resolution</em></p>

<pre><code>var a = 1;

function seven() {
  this.a = 7;
}

// [object].prototype.property loses to
// [object].property in the lookup chain. For example...

// Won't get reached, because 'a' is set in the constructor above.
seven.prototype.a = -1;

// Will get reached, even though 'b' is NOT set in the constructor.
seven.prototype.b = 8;

alert(new seven().a); // alerts '7'
alert(new seven().b); // alerts '8'
</code></pre>

<hr></li>
<li><p><strong>Global+Local</strong>: <em>An extra complex Case</em></p>

<pre><code>var x = 5;

(function () {
    console.log(x);
    var x = 10;
    console.log(x); 
})();
</code></pre>

<p>This will print out <code>undefined</code> and <code>10</code> rather than <code>5</code> and <code>10</code> since JavaScript always moves variable declarations (not initializations) to the top of the scope, making the code equivalent to:</p>

<pre><code>var x = 5;

(function () {
    var x;
    console.log(x);
    x = 10;
    console.log(x); 
})();
</code></pre></li>
<li><p><strong>Catch clause-scoped variable</strong></p>

<pre><code>var e = 5;
console.log(e);
try {
    throw 6;
} catch (e) {
    console.log(e);
}
console.log(e);
</code></pre>

<p>This will print out <code>5</code>, <code>6</code>, <code>5</code>. Inside the catch clause <code>e</code> shadows global and local variables. But this special scope is only for the caught variable. If you write <code>var f;</code> inside the catch clause, then it's exactly the same as if you had defined it before or after the try-catch block.</p></li>
</ol>
","500459"
"Pass a JavaScript function as parameter","410441","","<p>How do I pass a function as a parameter without the function executing in the ""parent"" function or using <code>eval()</code>? (Since I've read that it's insecure.)</p>

<p>I have this:</p>

<pre><code>addContact(entityId, refreshContactList());
</code></pre>

<p>It works, but the problem is that <code>refreshContactList</code> fires when the function is called, rather than when it's used in the function.</p>

<p>I could get around it using <code>eval()</code>, but it's not the best practice, according to what I've read. How can I pass a function as a parameter in JavaScript?</p>
","<p>You just need to remove the parenthesis:</p>

<pre><code>addContact(entityId, refreshContactList);
</code></pre>

<p>This then passes the function without executing it first.</p>

<p>Here is an example:</p>

<pre><code>function addContact(id, refreshCallback) {
    refreshCallback();
    // You can also pass arguments if you need to
    // refreshCallback(id);
}

function refreshContactList() {
    alert('Hello World');
}

addContact(1, refreshContactList);
</code></pre>
","13286241"
"How to pass json POST data to Web API method as an object?","409515","","<p>ASP.NET MVC4 Web API application defines post method to save customer.
Customer is passed in json format in POST request body.
Customer parameter in post method contains null values for properties.</p>

<p>How to fix this so that posted data will passed as customer object ?</p>

<p>If possible Content-Type: application/x-www-form-urlencoded should used since I dont know how to change it in javascript method which posts form.</p>

<p>Controller:</p>

<pre><code>public class CustomersController : ApiController {

  public object Post([FromBody] Customer customer)
        {
            return Request.CreateResponse(HttpStatusCode.OK,
            new
            {
                customer = customer
            });
        }
    }
}

public class Customer
    {
        public string company_name { get; set; }
        public string contact_name { get; set; }
     }
</code></pre>

<p>Request:</p>

<pre><code>POST http://localhost:52216/api/customers HTTP/1.1
Accept: application/json, text/javascript, */*; q=0.01
X-Requested-With: XMLHttpRequest
Content-Type: application/x-www-form-urlencoded; charset=UTF-8

{""contact_name"":""sdfsd"",""company_name"":""ssssd""}
</code></pre>
","<p><strong>EDIT</strong> : 31/10/2017</p>

<p>The same code/approach will work for <strong>Asp.Net Core 2.0</strong> as well. The major difference is, In asp.net core, both web api controllers and Mvc controllers are merged together to single controller model. So your return type might be <code>IActionResult</code> or  one of it's implementation (Ex :<code>OkObjectResult</code>)</p>

<hr>

<p>Use</p>

<pre><code>contentType:""application/json""
</code></pre>

<p>You need to use <code>JSON.stringify</code> method to convert it to JSON string when you send it,</p>

<p>And the model binder will bind the json data to your class object.</p>

<p>The below code will work fine (tested)</p>

<pre><code>$(function () {
    var customer = {contact_name :""Scott"",company_name:""HP""};
    $.ajax({
        type: ""POST"",
        data :JSON.stringify(customer),
        url: ""api/Customer"",
        contentType: ""application/json""
    });
});
</code></pre>

<p><strong>Result</strong></p>

<p><img src=""https://i.stack.imgur.com/69yQt.png"" alt=""enter image description here""></p>

<p><code>contentType</code> property tells the server that we are sending the data in JSON format. Since we sent a JSON data structure,model binding will happen properly.</p>

<p>If you inspect the ajax request's headers, you can see that  the <code>Content-Type</code> value is set as <code>application/json</code>.</p>

<p>If you do not specify contentType explicitly, It will use the default content type which is <code>application/x-www-form-urlencoded;</code> </p>

<hr>

<p><em>Edit on Nov 2015 to address other possible issues raised in comments</em></p>

<h2>Posting a complex object</h2>

<p>Let's say you have a complex view model class as your web api action method parameter like this</p>

<pre><code>public class CreateUserViewModel
{
   public int Id {set;get;}
   public string Name {set;get;}  
   public List&lt;TagViewModel&gt; Tags {set;get;}
}
public class TagViewModel
{
  public int Id {set;get;}
  public string Code {set;get;}
}
</code></pre>

<p>and your web api end point is like</p>

<pre><code>public class ProductController : Controller
{
    [HttpPost]
    public CreateUserViewMode Save([FromBody] CreateUserViewModel m)
    {
        // I am just returning the posted model as it is. 
        // You may do other stuff and return different response.
        // Ex : missileService.LaunchMissile(m);
        return m;
    }
}
</code></pre>

<p><em>At the time of this writing, ASP.NET MVC 6 is the latest stable version and in MVC6, Both Web api controllers and MVC controllers are inheriting from <code>Microsoft.AspNet.Mvc.Controller</code> base class.</em></p>

<p>To send data to the method from client side, the below code should work fine</p>

<pre><code>//Build an object which matches the structure of our view model class
var model = {
    Name: ""Shyju"",
    Id: 123,
    Tags: [{ Id: 12, Code: ""C"" }, { Id: 33, Code: ""Swift"" }]
};

$.ajax({
    type: ""POST"",
    data: JSON.stringify(model),
    url: ""../product/save"",
    contentType: ""application/json""
}).done(function(res) {       
    console.log('res', res);
    // Do something with the result :)
});
</code></pre>

<h2>Model binding works for some properties, but not all ! Why ?</h2>

<p>If you do not decorate the web api method parameter with <code>[FromBody]</code> attribute</p>

<pre><code>[HttpPost]
public CreateUserViewModel Save(CreateUserViewModel m)
{
    return m;
}
</code></pre>

<p>And send the model(raw javascript object, not in JSON format) without specifying the contentType property value</p>

<pre><code>$.ajax({
    type: ""POST"",
    data: model,
    url: ""../product/save""
}).done(function (res) {
     console.log('res', res);
});
</code></pre>

<p>Model binding will work for the flat properties on the model, not the properties where the type is complex/another type. In our case, <code>Id</code> and <code>Name</code> properties will be properly bound to the parameter <code>m</code>, But the <code>Tags</code> property will be an empty list.</p>

<p>The same problem will occur if you are using the short version, <code>$.post</code> which will use the default Content-Type when sending the request.</p>

<pre><code>$.post(""../product/save"", model, function (res) {
    //res contains the markup returned by the partial view
    console.log('res', res);
});
</code></pre>
","20226220"
"How to call multiple JavaScript functions in onclick event?","408512","","<p>Is there any way to use the <code>onclick</code> html attribute to call more than one JavaScript function?</p>
","<pre><code>onclick=""doSomething();doSomethingElse();""
</code></pre>

<p>But really, you're better off not using <code>onclick</code> at all and attaching the event handler to the DOM node through your Javascript code.  This is known as <a href=""http://en.wikipedia.org/wiki/Unobtrusive_JavaScript"" rel=""noreferrer"">unobtrusive javascript</a>.     </p>
","3910750"
"Why does Google prepend while(1); to their JSON responses?","408297","","<p>Why does Google prepend <code>while(1);</code> to their (private) JSON responses?</p>

<p>For example, here's a response while turning a calendar on and off in <a href=""https://calendar.google.com/calendar/about/"" rel=""noreferrer"">Google Calendar</a>:</p>

<pre><code>while(1);[['u',[['smsSentFlag','false'],['hideInvitations','false'],
  ['remindOnRespondedEventsOnly','true'],
  ['hideInvitations_remindOnRespondedEventsOnly','false_true'],
  ['Calendar ID stripped for privacy','false'],['smsVerifiedFlag','true']]]]
</code></pre>

<p>I would assume this is to prevent people from doing an <code>eval()</code> on it, but all you'd really have to do is replace the <code>while</code> and then you'd be set. I would assume the eval prevention is to make sure people write safe JSON parsing code.</p>

<p>I've seen this used in a couple of other places, too, but a lot more so with Google (Mail, Calendar, Contacts, etc.) Strangely enough, <a href=""https://www.google.com/docs/about/"" rel=""noreferrer"">Google Docs</a> starts with <code>&amp;&amp;&amp;START&amp;&amp;&amp;</code> instead, and Google Contacts seems to start with <code>while(1); &amp;&amp;&amp;START&amp;&amp;&amp;</code>.</p>

<p>What's going on here?</p>
","<p>It prevents <a href=""http://haacked.com/archive/2009/06/25/json-hijacking.aspx"" rel=""noreferrer"">JSON hijacking</a>.</p>

<p>Contrived example: say Google has a URL like <code>mail.google.com/json?action=inbox</code> which returns the first 50 messages of your inbox in JSON format. Evil websites on other domains can't make AJAX requests to get this data due to the same-origin policy, but they can include the URL via a <code>&lt;script&gt;</code> tag. The URL is visited with <em>your</em> cookies, and by <a href=""http://ejohn.org/blog/re-securing-json/"" rel=""noreferrer"">overriding the global array constructor or accessor methods</a> they can have a method called whenever an object (array or hash) attribute is set, allowing them to read the JSON content.</p>

<p>The <code>while(1);</code> or <code>&amp;&amp;&amp;BLAH&amp;&amp;&amp;</code> prevents this: an AJAX request at <code>mail.google.com</code> will have full access to the text content, and can strip it away. But a <code>&lt;script&gt;</code> tag insertion blindly executes the JavaScript without any processing, resulting in either an infinite loop or a syntax error.</p>

<p>This does not address the issue of <a href=""https://en.wikipedia.org/wiki/Cross-site_request_forgery"" rel=""noreferrer"">cross-site request forgery</a>.</p>
","2669766"
"How can I expand and collapse a <div> using javascript?","408029","","<p>I have created a list on my site.  This list is created by a foreach loop that builds with information from my database.  Each item is a container with different sections, so this is not a list like 1, 2, 3... etc.  I am listing repeating sections with information.  In each section, there is a subsection.  The general build is as follows:</p>

<pre><code>&lt;div&gt;
    &lt;fieldset class=""majorpoints"" onclick=""majorpointsexpand($(this).find('legend').innerHTML)""&gt;
    &lt;legend class=""majorpointslegend""&gt;Expand&lt;/legend&gt;
    &lt;div style=""display:none"" &gt;
        &lt;ul&gt;
            &lt;li&gt;&lt;/li&gt;
            &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p>So, I am trying to call a function with onclick=""majorpointsexpand($(this).find('legend').innerHTML)""</p>

<p>The div I am trying to manipulate is style=""display:none"" by default, and I want to use javascript to make it visible on click.</p>

<p>The ""$(this).find('legend').innerHTML"" is attempting to pass, in this case, ""Expand"" as an argument in the function.</p>

<p>Here is the javascript:</p>

<pre><code>function majorpointsexpand(expand)
    {
        if (expand == ""Expand"")
            {
                document.write.$(this).find('div').style = ""display:inherit"";
                document.write.$(this).find('legend').innerHTML = ""Collapse"";
            }
        else
            {
                document.write.$(this).find('div').style = ""display:none"";
                document.write.$(this).find('legend').innerHTML = ""Expand"";
            }
    }
</code></pre>

<p>I am almost 100% sure my problem is syntax, and I don't have much of a grasp on how javascript works.</p>

<p>I do have jQuery linked to the document with:</p>

<pre><code>&lt;script src=""http://code.jquery.com/jquery-1.9.1.min.js""&gt;&lt;/script&gt;
</code></pre>

<p>In the <code>&lt;head&gt;&lt;/head&gt;</code> section.</p>
","<p>Okay, so you've got two options here :</p>

<ol>
<li>Use jQuery UI's accordion - its nice, easy and fast. See more info <a href=""http://jqueryui.com/accordion/"" rel=""noreferrer"">here</a></li>
<li>Or, if you still wanna do this by yourself, you could remove the <code>fieldset</code> (its not semantically right to use it for this anyway) and create a structure by yourself.</li>
</ol>

<p>Here's how you do that. Create a HTML structure like this :</p>

<pre><code>&lt;div class=""container""&gt;
    &lt;div class=""header""&gt;&lt;span&gt;Expand&lt;/span&gt;

    &lt;/div&gt;
    &lt;div class=""content""&gt;
        &lt;ul&gt;
            &lt;li&gt;This is just some random content.&lt;/li&gt;
            &lt;li&gt;This is just some random content.&lt;/li&gt;
            &lt;li&gt;This is just some random content.&lt;/li&gt;
            &lt;li&gt;This is just some random content.&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p>With this CSS: (This is to hide the <code>.content</code> stuff when the page loads.</p>

<pre><code>.container .content {
    display: none;
    padding : 5px;
}
</code></pre>

<p>Then, using jQuery, write a <code>click</code> event for the header.</p>

<pre><code>$("".header"").click(function () {

    $header = $(this);
    //getting the next element
    $content = $header.next();
    //open up the content needed - toggle the slide- if visible, slide up, if not slidedown.
    $content.slideToggle(500, function () {
        //execute this after slideToggle is done
        //change text of header based on visibility of content div
        $header.text(function () {
            //change text based on condition
            return $content.is("":visible"") ? ""Collapse"" : ""Expand"";
        });
    });

});
</code></pre>

<p>Here's a demo : <a href=""http://jsfiddle.net/hungerpain/eK8X5/7/"" rel=""noreferrer"">http://jsfiddle.net/hungerpain/eK8X5/7/</a></p>
","17460277"
"Submitting a form on 'Enter' with jQuery?","407871","","<p>I have a bog-standard login form - an email text field, a password field and a submit button on an AIR project that's using HTML/jQuery.  When I hit Enter on the form, the entire form's contents vanish, but the form isn't submitted.  Does anyone know if this is a Webkit issue (Adobe AIR uses Webkit for HTML), or if I've bunged things up?</p>

<p>I tried: </p>

<pre><code>$('.input').keypress(function (e) {
  if (e.which == 13) {
    $('form#login').submit();
  }
});
</code></pre>

<p>But that neither stopped the clearing behavior, or submitted the form.  There's no action associated with the form - could that be the issue?  Can I put a javascript function in the action?</p>
","<pre><code>$('.input').keypress(function (e) {
  if (e.which == 13) {
    $('form#login').submit();
    return false;    //&lt;---- Add this line
  }
});
</code></pre>

<p>NOTE: You accepted bendewey's answer, but it is incorrect with its description of e.preventDefault(). Check out this stackoverflow answer:
<a href=""https://stackoverflow.com/questions/1357118/event-preventdefault-vs-return-false"">event.preventDefault() vs. return false</a></p>

<p>Essentially, ""return false"" is the same as calling <code>e.preventDefault</code> and <code>e.stopPropagation()</code>.</p>
","12518467"
"Equivalent of jQuery .hide() to set visibility: hidden","407189","","<p>In jQuery, there are <code>.hide()</code> and <code>.show()</code> methods which sets the CSS <code>display: none</code> setting. </p>

<p>Is there an equivalent function which would set the <code>visibility: hidden</code> setting? </p>

<p>I know I can use <code>.css()</code> but I prefer some function like <code>.hide()</code> or so. Thanks.</p>
","<p>You could make your own plugins.</p>

<pre><code>jQuery.fn.visible = function() {
    return this.css('visibility', 'visible');
};

jQuery.fn.invisible = function() {
    return this.css('visibility', 'hidden');
};

jQuery.fn.visibilityToggle = function() {
    return this.css('visibility', function(i, visibility) {
        return (visibility == 'visible') ? 'hidden' : 'visible';
    });
};
</code></pre>

<p>If you want to overload the original jQuery <code>toggle()</code>, which I don't recommend...</p>

<pre><code>!(function($) {
    var toggle = $.fn.toggle;
    $.fn.toggle = function() {
        var args = $.makeArray(arguments),
            lastArg = args.pop();

        if (lastArg == 'visibility') {
            return this.visibilityToggle();
        }

        return toggle.apply(this, arguments);
    };
})(jQuery);
</code></pre>

<p><a href=""http://jsfiddle.net/uxTeU/"" rel=""noreferrer"">jsFiddle</a>.</p>
","9614662"
"Using jQuery to test if an input has focus","406587","","<p>On the front page of a site I am building, several <code>&lt;div&gt;</code>s use the CSS <code>:hover</code> pseudo-class to add a border when the mouse is over them. One of the <code>&lt;div&gt;</code>s contains a <code>&lt;form&gt;</code> which, using jQuery, will keep the border if an input within it has focus. This works perfectly except that IE6 does not support <code>:hover</code> on any elements other than <code>&lt;a&gt;</code>s. So, for this browser only we are using jQuery to mimic CSS <code>:hover</code> using the <code>$(#element).hover()</code> method. The only problem is, now that jQuery handles both the form <code>focus()</code> <em>and</em> <code>hover()</code>, when an input has focus then the user moves the mouse in and out, the border goes away.</p>

<p>I was thinking we could use some kind of conditional to stop this behavior. For instance, if we tested on mouse out if any of the inputs had focus, we could stop the border from going away. AFAIK, there is no <code>:focus</code> selector in jQuery, so I'm not sure how to make this happen. Any ideas?</p>
","<h2>jQuery 1.6+</h2>

<p>jQuery added a <a href=""http://api.jquery.com/focus-selector/"" rel=""noreferrer""><code>:focus</code></a> selector so we no longer need to add it ourselves. Just use <code>$("".."").is("":focus"")</code></p>

<h2>jQuery 1.5 and below</h2>

<p><strong>Edit:</strong> As times change, we find better methods for testing focus, the new favorite is <a href=""https://gist.github.com/450017"" rel=""noreferrer"">this gist from Ben Alman</a>:</p>

<pre><code>jQuery.expr[':'].focus = function( elem ) {
  return elem === document.activeElement &amp;&amp; ( elem.type || elem.href );
};
</code></pre>

<p>Quoted from Mathias Bynens <a href=""https://stackoverflow.com/questions/967096/using-jquery-to-test-if-an-input-has-focus/5391608#5391608"">here</a>:</p>

<blockquote>
  <p>Note that the <code>(elem.type || elem.href)</code> test was added to filter out false positives like body. This way, we make sure to filter out all elements except form controls and hyperlinks.</p>
</blockquote>

<p>You're defining a new selector. See <a href=""http://docs.jquery.com/Plugins/Authoring"" rel=""noreferrer"">Plugins/Authoring</a>. Then you can do:</p>

<pre><code>if ($(""..."").is("":focus"")) {
  ...
}
</code></pre>

<p>or:</p>

<pre><code>$(""input:focus"").doStuff();
</code></pre>

<h2>Any jQuery</h2>

<p>If you just want to figure out which element has focus, you can use </p>

<pre><code>$(document.activeElement)
</code></pre>

<p>If you aren't sure if the version will be 1.6 or lower, you can add the <code>:focus</code> selector if it is missing:</p>

<pre><code>(function ( $ ) {
    var filters = $.expr["":""];
    if ( !filters.focus ) { 
        filters.focus = function( elem ) {
           return elem === document.activeElement &amp;&amp; ( elem.type || elem.href );
        };
    }
})( jQuery );
</code></pre>
","2684561"
"How to remove all CSS classes using jQuery?","406586","","<p>Instead of individually calling <code>$(""#item"").removeClass()</code> for every single class an element might have, is there a single function which can be called which removes all CSS classes from the given element? </p>

<p>Both jQuery and raw JavaScript will work.</p>
","<pre><code>$(""#item"").removeClass();
</code></pre>

<p>Calling <code>removeClass</code> with no parameters will remove all of the item's classes.</p>

<hr>

<p>You can also use (but is not necessarily recommended, the <em>correct</em> way is the one above):</p>

<pre><code>$(""#item"").removeAttr('class');
$(""#item"").attr('class', '');
$('#item')[0].className = '';
</code></pre>

<p>If you didn't have jQuery, then this would be pretty much your only option:</p>

<pre><code>document.getElementById('item').className = '';
</code></pre>
","1424991"
"""document.getElementByClass is not a function""","406506","","<p>I am trying to run a function onClick of any button with <code>class=""stopMusic""</code>. I'm getting an error in Firebug </p>

<blockquote>
  <p>document.getElementByClass is not a function</p>
</blockquote>

<p>Here is my code:</p>

<pre><code>var stopMusicExt = document.getElementByClass(""stopButton"");
    stopButton.onclick = function() {
        var ta = document.getElementByClass(""stopButton"");
        document['player'].stopMusicExt(ta.value);
        ta.value = """";
    };
</code></pre>
","<p>You probably meant <code>document.getElementsByClassName()</code> (and then grabbing the first item off the resulting node list):</p>

<pre><code>var stopMusicExt = document.getElementsByClassName(""stopButton"")[0];

stopButton.onclick = function() {
    var ta = document.getElementsByClassName(""stopButton"")[0];
    document['player'].stopMusicExt(ta.value);
    ta.value = """";
};
</code></pre>

<p>You may still get the error</p>

<blockquote>
  <p><code>document.getElementsByClassName</code> is not a function</p>
</blockquote>

<p>in older browsers, though, in which case you can provide a fallback implementation if you need to support those older browsers.</p>
","7480511"
"How to get the jQuery $.ajax error response text?","405864","","<p>I am sending an error response to my jQuery.
However, I can not get the response text (in the example below this would be <strong>Gone to the beach</strong>)</p>

<p>The only thing jQuery says is 'error'.</p>

<p>See this example for details:</p>

<p>php</p>

<pre><code>&lt;?
    header('HTTP/1.1 500 Internal Server Error');
    print ""Gone to the beach""
?&gt;
</code></pre>

<p>jQuery</p>

<pre><code>$.ajax({
    type:     ""post"",
    data:     {id: 0},
    cache:    false,
    url:      ""doIt.php"",
    dataType: ""text"",
    error: function (request, error) {
        console.log(arguments);
        alert("" Can't do because: "" + error);
    },
    success: function () {
        alert("" Done ! "");
    }
});
</code></pre>

<p>Now my result ist:</p>

<p>log:</p>

<pre><code> [XMLHttpRequest readyState=4 status=500, ""error"", undefined]
</code></pre>

<p>alert:</p>

<blockquote>
  <p>Can't do because: error</p>
</blockquote>

<p>Any ideas?</p>
","<p>Try:</p>

<pre><code>error: function(xhr, status, error) {
  var err = eval(""("" + xhr.responseText + "")"");
  alert(err.Message);
}
</code></pre>
","1637051"
"How to pop an alert message box using PHP?","405478","","<p>How to pop an alert message box using PHP?</p>
","<p>You could use Javascript:</p>

<pre><code>// This is in the PHP file and sends a Javascript alert to the client
$message = ""wrong answer"";
echo ""&lt;script type='text/javascript'&gt;alert('$message');&lt;/script&gt;"";
</code></pre>
","13851576"
"How to detect scroll position of page using jQuery","405276","","<p>I am having following jQuery functionality in my website, what it does that is it uses <code>window.scroll()</code>  function to recognize when the windows changes scroll position changes and at the change call few function to load data from server.</p>

<p>The problem is the <code>.scroll()</code> function is called as soon as there is even a little change in the scroll position and load data at the bottom however what I wish to achieve is load new data when the scroll/page position reaches at the bottom, like is happens for Facebook feed.</p>

<p>But I am not sure how to detect scroll position using jQuery?</p>

<pre><code>function getData() {
  $.getJSON('Get/GetData?no=1', function (responseText) {
    //Load some data from the server
  })
};

$(window).scroll(function () {
    getData();
});
</code></pre>
","<p>You can extract the scroll position using <a href=""http://api.jquery.com/scrollTop/""><code>jQuery's .scrollTop() method</code></a></p>

<pre><code>$(window).scroll(function (event) {
    var scroll = $(window).scrollTop();
    // Do something
});
</code></pre>
","17441121"
"How to show an alert box in PHP?","404618","","<p>I want to display an alert box showing a message with PHP.</p>

<p>Here is my PHP code:</p>

<pre><code>&lt;?php  
  header(""Location:form.php"");

  echo '&lt;script language=""javascript""&gt;';
  echo 'alery(message successfully sent)';  //not showing an alert box.
  echo '&lt;/script&gt;';
  exit;
?&gt;
</code></pre>

<p>But it is not working.  How do I show an alert Box in PHP?</p>
","<p>use this code</p>

<pre><code>echo '&lt;script language=""javascript""&gt;';
echo 'alert(""message successfully sent"")';
echo '&lt;/script&gt;';
</code></pre>

<p>The problem was:</p>

<ol>
<li>you missed <code>""</code> </li>
<li>It should be <code>alert</code> not <code>alery</code></li>
</ol>
","13837459"
"How to create dictionary and add key–value pairs dynamically?","404376","","<p>From post:</p>

<p><a href=""https://stackoverflow.com/questions/2494294/sending-a-json-array-to-be-received-as-a-dictionarystring-string/7196027#7196027"">Sending a JSON array to be received as a Dictionary&lt;string,string&gt;</a></p>

<p>I’m trying to do this same thing as that post. The only issue is that I don’t know what the keys and the values are upfront. So I need to be able to dynamically add the key and value pairs and I don’t know how to do that.</p>

<p>Does anyone know how to create that object and add key value pairs dynamically?</p>

<p>I’ve tried:</p>

<pre><code>var vars = [{key:""key"", value:""value""}];
vars[0].key = ""newkey"";
vars[0].value = ""newvalue"";
</code></pre>

<p>But that doesn’t work.</p>
","<pre><code>var dict = []; // create an empty array

dict.push({
    key:   ""keyName"",
    value: ""the value""
});
// repeat this last part as needed to add more key/value pairs
</code></pre>

<p>Basically, you're creating an object literal with 2 properties (called <code>key</code> and <code>value</code>) and inserting it (using <code>push()</code>) into the array.</p>

<hr>

<p><strong>Edit:</strong> So almost 5 years later, this answer is getting downvotes because it's not creating an ""normal"" JS object literal (aka map, aka hash, aka dictionary).<br>
It <em>is</em> however creating the structure that OP asked for (and which is illustrated in the other question linked to), which is <em>an array of object literals</em>, each with <code>key</code> and <code>value</code> properties. Don't ask me why that structure was required, but it's the one that was asked for.</p>

<p>But, but, if what you want in a plain JS object - and <em>not</em> the structure OP asked for - see <a href=""https://stackoverflow.com/a/22315575/167996"">tcll's answer</a>, though the bracket notation is a bit cumbersome if you just have simple keys that are valid JS names. You can just do this:</p>

<pre><code>// object literal with properties
var dict = {
  key1: ""value1"",
  key2: ""value2""
  // etc.
};
</code></pre>

<p>Or use regular dot-notation to set properties after creating an object:</p>

<pre><code>// empty object literal with properties added afterward
var dict = {};
dict.key1 = ""value1"";
dict.key2 = ""value2"";
// etc.
</code></pre>

<p>You <em>do</em> want the bracket notation if you've got keys that have spaces in them, special characters, or things like that. E.g:</p>

<pre><code>var dict = {};

// this obviously won't work
dict.some invalid key (for multiple reasons) = ""value1"";

// but this will
dict[""some invalid key (for multiple reasons)""] = ""value1"";
</code></pre>

<p>You also want bracket notation if your keys are dynamic:</p>

<pre><code>dict[firstName + "" "" + lastName] = ""some value"";
</code></pre>

<p>Note that keys (property names) are always strings, and non-string values will be coerced to a string when used as a key. E.g. a <code>Date</code> object gets converted to its string representation:</p>

<pre><code>dict[new Date] = ""today's value"";

console.log(dict);
// =&gt; {
//      ""Sat Nov 04 2016 16:15:31 GMT-0700 (PDT)"": ""today's value""
//    }
</code></pre>

<p>Note however that this doesn't necessarily ""just work"", as many objects will have a string representation like <code>""[object Object]""</code> which doesn't make for a non-unique key. So be wary of something like:</p>

<pre><code>var objA = { a: 23 },
    objB = { b: 42 };

dict[objA] = ""value for objA"";
dict[objB] = ""value for objB"";

console.log(dict);
// =&gt; { ""[object Object]"": ""value for objB"" }
</code></pre>

<p>Despite <code>objA</code> and <code>objB</code> being completely different and unique elements, they both have the same basic string representation: <code>""[object Object]""</code>.</p>

<p>The reason <code>Date</code> doesn't behave like this is that the <code>Date</code> prototype has a custom <code>toString</code> method which overrides the default string representation. And you can do the same:</p>

<pre><code>// a simple constructor with a toString prototypal method
function Foo() {
  this.myRandomNumber = Math.random() * 1000 | 0;
}

Foo.prototype.toString = function () {
  return ""Foo instance #"" + this.myRandomNumber;
};

dict[new Foo] = ""some value"";

console.log(dict);
// =&gt; {
//      ""Foo instance #712"": ""some value""
//    }
</code></pre>

<p>(Note that since the above uses a <em>random</em> number, name collisions can still occur very easily. It's just to illustrate an implementation of <code>toString</code>.)</p>

<p>So when trying to use objects as keys, JS will use the object's own <code>toString</code> implementation, if any, or use the default string representation.</p>
","7196296"
"Sorting JavaScript Object by property value","404367","","<p>If I have a JavaScript object such as:</p>

<pre><code>var list = {
  ""you"": 100, 
  ""me"": 75, 
  ""foo"": 116, 
  ""bar"": 15
};
</code></pre>

<p>Is there a way to sort the properties based on value? So that I end up with</p>

<pre><code>list = {
  ""bar"": 15, 
  ""me"": 75, 
  ""you"": 100, 
  ""foo"": 116
};
</code></pre>

<p>I'm having a real brain-dead moment regarding this.</p>
","<p>Move them to an array, sort that array, and then use that array for your purposes.</p>

<p>Here's a solution I found via Google:</p>

<pre><code>var maxSpeed = {
    car: 300, 
    bike: 60, 
    motorbike: 200, 
    airplane: 1000,
    helicopter: 400, 
    rocket: 8 * 60 * 60
};
var sortable = [];
for (var vehicle in maxSpeed) {
    sortable.push([vehicle, maxSpeed[vehicle]]);
}

sortable.sort(function(a, b) {
    return a[1] - b[1];
});

//[[""bike"", 60], [""motorbike"", 200], [""car"", 300],
//[""helicopter"", 400], [""airplane"", 1000], [""rocket"", 28800]]
</code></pre>

<hr>

<p>Once you have the array, you could rebuild the object from the array in the order you like, thus achieving exactly what you set out to do. That would work in all the browsers I know of, but it would be dependent on an implementation quirk, and could break at any time. You should never make assumptions about the order of elements in a JavaScript object.</p>
","1069840"
"How to submit a form with JavaScript by clicking a link?","402280","","<p>Instead of a submit button I have a link:</p>

<pre><code>&lt;form&gt;

  &lt;a href=""#""&gt; submit &lt;/a&gt;

&lt;/form&gt;
</code></pre>

<p>Can I make it submit the form when it is clicked?</p>
","<h3>The best way</h3>

<p>The best way is to insert an appropriate input tag:</p>

<pre class=""lang-html prettyprint-override""><code>&lt;input type=""submit"" value=""submit"" /&gt;
</code></pre>

<h3>The best JS way</h3>

<pre class=""lang-html prettyprint-override""><code>&lt;form id=""form-id""&gt;
  &lt;button id=""your-id""&gt;submit&lt;/button&gt;
&lt;/form&gt;
</code></pre>

<pre class=""lang-js prettyprint-override""><code>var form = document.getElementById(""form-id"");

document.getElementById(""your-id"").addEventListener(""click"", function () {
  form.submit();
});
</code></pre>

<p>Enclose the latter JavaScript code by an <code>DOMContentLoaded</code> event (choose only <code>load</code> for <a href=""https://stackoverflow.com/questions/2414750/difference-between-domcontentloaded-and-load-events"">backward compatiblity</a>) if you haven't already done so:</p>

<pre><code>window.addEventListener(""DOMContentLoaded"", function () {
  var form = document.... // copy the last code block!
});
</code></pre>

<h3>The easy, not recommandable way (the former answer)</h3>

<p>Add an <code>onclick</code> attribute to the link and an <code>id</code> to the form:</p>

<pre><code>&lt;form id=""form-id""&gt;

  &lt;a href=""#"" onclick=""document.getElementById('form-id').submit();""&gt; submit &lt;/a&gt;

&lt;/form&gt;
</code></pre>

<h3>All ways</h3>

<p>Whatever way you choose, you have call <code>formObject.submit()</code> eventually (where <code>formObject</code> is the DOM object of the <code>&lt;form&gt;</code> tag).</p>

<p>You also have to bind such an event handler, which calls <code>formObject.submit()</code>, so it gets called when the user clicked a specific link or button. There are two ways:</p>

<ul>
<li><p><em>Recommended:</em> Bind an event listener to the DOM object.</p>

<pre><code>// 1. Acquire a reference to our &lt;form&gt;.
//    This can also be done by setting &lt;form name=""blub""&gt;:
//       var form = document.forms.blub;

var form = document.getElementById(""form-id"");


// 2. Get a reference to our preferred element (link/button, see below) and
//    add an event listener for the ""click"" event.
document.getElementById(""your-id"").addEventListener(""click"", function () {
  form.submit();
});
</code></pre></li>
<li><p><em>Not recommended:</em> Insert inline JavaScript. There are several reasons why this technique is not recommendable. One major argument is that you mix markup (HTML) with scripts (JS). The code becomes unorganized and rather unmaintainable.</p>

<pre><code>&lt;a href=""#"" onclick=""document.getElementById('form-id').submit();""&gt;submit&lt;/a&gt;

&lt;button onclick=""document.getElementById('form-id').submit();""&gt;submit&lt;/button&gt;
</code></pre></li>
</ul>

<p>Now, we come to the point at which you have to decide for the UI element which triggers the submit() call.</p>

<ol>
<li><p>A button</p>

<pre><code>&lt;button&gt;submit&lt;/button&gt;
</code></pre></li>
<li><p>A link</p>

<pre><code>&lt;a href=""#""&gt;submit&lt;/a&gt;
</code></pre></li>
</ol>

<p>Apply the aforementioned techniques in order to add an event listener.</p>
","6799546"
"How do I remove objects from a javascript associative array?","401545","","<p>Suppose I have this code:  </p>

<pre><code>var myArray = new Object();
myArray[""firstname""] = ""Bob"";
myArray[""lastname""] = ""Smith"";
myArray[""age""] = 25;
</code></pre>

<p>Now if I wanted to remove ""lastname""?....is there some equivalent of<br>
<code>myArray[""lastname""].remove()</code>?</p>

<p>(I need the element gone because the number of elements is important and I want to keep things clean.)</p>
","<p>Use the ""delete"" keyword in Javascript.</p>

<pre><code>delete myArray[""lastname""];
</code></pre>

<hr>

<p>EDIT:</p>

<p>In some JavaScript engine, the delete keyword might hurt performance as it will undo compile / JIT optimization.</p>

<p><a href=""http://www.html5rocks.com/en/tutorials/speed/v8/"" rel=""noreferrer"">http://www.html5rocks.com/en/tutorials/speed/v8/</a>
<a href=""http://www.smashingmagazine.com/2012/11/writing-fast-memory-efficient-javascript/"" rel=""noreferrer"">http://www.smashingmagazine.com/2012/11/writing-fast-memory-efficient-javascript/</a></p>
","346022"
"How can I pass a parameter to a setTimeout() callback?","401132","","<p>I have some JavaScript code that looks like:</p>

<pre><code>function statechangedPostQuestion()
{
  //alert(""statechangedPostQuestion"");
  if (xmlhttp.readyState==4)
  {
    var topicId = xmlhttp.responseText;
    setTimeout(""postinsql(topicId)"",4000);
  }
}

function postinsql(topicId)
{
  //alert(topicId);
}
</code></pre>

<p>I get a error that <code>topicId</code> is not defined
Everything was working before i used the <code>setTimeout()</code> function. </p>

<p>I want my <code>postinsql(topicId)</code> function to be called after some time. 
What should i do?</p>
","<pre><code>setTimeout(function() {
    postinsql(topicId);
}, 4000)
</code></pre>

<p>You need to feed an anonymous function as a parameter instead of a string, the latter method shouldn't even work per the ECMAScript specification but browsers are just lenient. This is the proper solution, don't ever rely on passing a string as a 'function' when using <code>setTimeout()</code> or <code>setInterval()</code>, it's slower because it has to be evaluated and it just isn't right.</p>

<p><strong>UPDATE:</strong></p>

<p>As Hobblin said in his comments to the question, now you can pass arguments to the function inside setTimeout using <code>Function.prototype.bind()</code></p>

<p>Example:</p>

<pre><code>setTimeout(postinsql.bind(null, topicId), 4000);
</code></pre>
","1190656"
"Javascript: How to filter object array based on attributes?","400868","","<p>I have the following JavaScript array of real estate home objects:</p>

<pre><code>var json = {
    'homes': [{
            ""home_id"": ""1"",
            ""price"": ""925"",
            ""sqft"": ""1100"",
            ""num_of_beds"": ""2"",
            ""num_of_baths"": ""2.0"",
        }, {
            ""home_id"": ""2"",
            ""price"": ""1425"",
            ""sqft"": ""1900"",
            ""num_of_beds"": ""4"",
            ""num_of_baths"": ""2.5"",
        },
        // ... (more homes) ...     
    ]
}

var xmlhttp = eval('(' + json + ')');
homes = xmlhttp.homes;
</code></pre>

<p>What I would like to do is be able to perform a filter on the object to return a subset of ""home"" objects.</p>

<p>For example, I want to be able to filter based on: <code>price</code>, <code>sqft</code>, <code>num_of_beds</code>, and <code>num_of_baths</code>.</p>

<p><strong>Question:</strong> How can I perform something in JavaScript like the pseudo-code below:</p>

<pre><code>var newArray = homes.filter(
    price &lt;= 1000 &amp; 
    sqft &gt;= 500 &amp; 
    num_of_beds &gt;=2 &amp; 
    num_of_baths &gt;= 2.5 );
</code></pre>

<p>Note, the syntax does not have to be exactly like above. This is just an example.</p>
","<p>You can use the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter"" rel=""noreferrer""><code>Array.prototype.filter</code></a> method:</p>

<pre><code>var newArray = homes.filter(function (el) {
  return el.price &lt;= 1000 &amp;&amp;
         el.sqft &gt;= 500 &amp;&amp;
         el.num_of_beds &gt;=2 &amp;&amp;
         el.num_of_baths &gt;= 2.5;
});
</code></pre>

<p>Live Example:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var obj = {
    'homes': [{
            ""home_id"": ""1"",
            ""price"": ""925"",
            ""sqft"": ""1100"",
            ""num_of_beds"": ""2"",
            ""num_of_baths"": ""2.0"",
        }, {
            ""home_id"": ""2"",
            ""price"": ""1425"",
            ""sqft"": ""1900"",
            ""num_of_beds"": ""4"",
            ""num_of_baths"": ""2.5"",
        },
        // ... (more homes) ...     
    ]
};
// (Note that because `price` and such are given as strings in your object,
// the below relies on the fact that &lt;= and &gt;= with a string and number
// will coerce the string to a number before comparing.)
var newArray = obj.homes.filter(function (el) {
  return el.price &lt;= 1000 &amp;&amp;
         el.sqft &gt;= 500 &amp;&amp;
         el.num_of_beds &gt;= 2 &amp;&amp;
         el.num_of_baths &gt;= 1.5; // Changed this so a home would match
});
console.log(newArray);</code></pre>
</div>
</div>
</p>

<p>This method is part of the new <a href=""http://www.ecma-international.org/publications/standards/Ecma-262.htm"" rel=""noreferrer"">ECMAScript 5th Edition</a> standard, and can be found on almost all modern browsers.</p>

<p>For IE, you can include the following method for compatibility:</p>

<pre><code>if (!Array.prototype.filter) {
  Array.prototype.filter = function(fun /*, thisp*/) {
    var len = this.length &gt;&gt;&gt; 0;
    if (typeof fun != ""function"")
    throw new TypeError();

    var res = [];
    var thisp = arguments[1];
    for (var i = 0; i &lt; len; i++) {
      if (i in this) {
        var val = this[i];
        if (fun.call(thisp, val, i, this))
        res.push(val);
      }
    }
    return res;
  };
}
</code></pre>
","2722213"
"How to check for an undefined or null variable in JavaScript?","400464","","<p>We are frequently using the following code pattern in our JavaScript code</p>

<pre><code>if (typeof(some_variable) != 'undefined' &amp;&amp; some_variable != null)
{
    // Do something with some_variable
}
</code></pre>

<p>Is there a less verbose way of checking that has the same effect?</p>

<p>According to some forums and literature saying simply the following should have the same effect.</p>

<pre><code>if (some_variable)
{
    // Do something with some_variable
}
</code></pre>

<p>Unfortunately, <a href=""http://en.wikipedia.org/wiki/Firebug_%28software%29"" rel=""noreferrer"">Firebug</a> evaluates such a statement as error on runtime when <code>some_variable</code> is undefined, whereas the first one is just fine for it. Is this only an (unwanted) behavior of Firebug or is there really some difference between those two ways?</p>
","<p>You have to differentiate between two cases</p>

<p>1) Undefined <em>variables</em> , like 'foo'. You'll get an error if you access an undefined variable in any context other than typeof. </p>

<pre><code>  if(typeof someUndefVar == whatever) -- works
  if(someUndefVar) -- error  
</code></pre>

<p>So, for variables, the typeof check is a must. On the other side, it's only rarely needed - you usually <em>know</em> if your variables are defined or not.</p>

<p>2) Undefined <em>properties</em> , like <code>someExistingObj.someUndefProperty</code>. An undefined property doesn't yield an error and simply returns ""undefined"", which, when converted to boolean, evaluates to false. So, if you don't care about '0' and 'false', <code>if(obj.undefProp)</code> is ok. There's a common idiom based on this fact:</p>

<pre><code> value = obj.prop || defaultValue
</code></pre>

<p>which means ""if obj has a prop, use that, otherwise default"".</p>

<p>Some people consider this behavior confusing, arguing that it leads to hard-to-find errors and recommend using <a href=""https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Operators/Special_Operators/in_Operator"" rel=""noreferrer"">in operator</a> instead</p>

<pre><code> value = ('prop' in obj) ? obj.prop : defaultValue
</code></pre>
","2559513"
"Check if array is empty or exists","400147","","<p>For the first page load I need to check if there is <code>image_array</code> load last image, otherwise block preview buttons; alert user to push new image button; create empty array to put there images;</p>

<p>The problem is that <code>image_array</code> in the <code>else</code> fires all time. If array exists - it just overrides it, but alert dosent work.</p>

<pre><code>if(image_array.length &gt; 0)
    $('#images').append('&lt;img src=""'+image_array[image_array.length-1]+'"" class=""images"" id=""1"" /&gt;');
else{
    $('#prev_image').attr('disabled', 'true');
    $('#next_image').attr('disabled', 'true');
    alert('Please get new image');
    var image_array = [];
}
</code></pre>

<p>UPDATE
Before loading html i have something like this</p>

<pre><code>&lt;?php if(count($images) != 0): ?&gt;
&lt;script type=""text/javascript""&gt;
    &lt;?php echo ""image_array = "".json_encode($images);?&gt;
&lt;/script&gt;
&lt;?php endif; ?&gt;
</code></pre>
","<pre><code>if (typeof image_array !== 'undefined' &amp;&amp; image_array.length &gt; 0) {
    // the array is defined and has at least one element
}
</code></pre>

<p>Your problem may be happening due to a mix of implicit global variables and variable hoisting. Make sure you use <code>var</code> whenever declaring a variable:</p>

<pre><code>&lt;?php echo ""var image_array = "".json_encode($images);?&gt;
// add var  ^^^ here
</code></pre>

<p>And then make sure you never accidently redeclare that variable later:</p>

<pre><code>else {
    ...
    image_array = []; // no var here
}
</code></pre>
","11743671"
"Check whether a string matches a regex in JS","400073","","<p>I want to use JavaScript (can be with jQuery) to do some client-side validation to check whether a string matches the regex:</p>

<pre><code>^([a-z0-9]{5,})$
</code></pre>

<p>Ideally it would be an expression that returned true or false. </p>

<p>I'm a JavaScript newbie, does <code>match()</code> do what I need? It seems to check whether part of a string matches a regex, not the whole thing. </p>
","<p>Use <code>regex.test()</code> if all you want is a boolean result:</p>

<pre><code>/^([a-z0-9]{5,})$/.test('abc1');   // false

/^([a-z0-9]{5,})$/.test('abc12');   // true

/^([a-z0-9]{5,})$/.test('abc123');   // true
</code></pre>

<p>...and you could remove the <code>()</code> from your regexp since you've no need for a capture.</p>
","6603043"
"How to read an external local JSON file in Javascript","399674","","<p>I have saved a JSON file in my local system and created a Javascript file in order to read the JSON file and print data out, for instance. Here is the JSON file: </p>

<pre><code>{""resource"":""A"",""literals"":[""B"",""C"",""D""]}
</code></pre>

<p>Lets say this is the path where it takes you to the JSON file: </p>

<pre><code>/Users/Documents/workspace/test.json
</code></pre>

<p>Could anyone please help me with writing a simple piece of codes to read the JSON file and print the data inside it in Javascript. I am very new to Javascript and need something simple to start with. Your assistance would be very much appreciated. </p>
","<p>You <strong>cannot</strong> make a AJAX call to a local resource as the request is made using HTTP.</p>

<p>A workaround is to run a local webserver, serve up the file and make the AJAX call to localhost.</p>

<p>In terms of helping you write code to read JSON, you should read the documentation for <code>jQuery.getJSON()</code>:</p>

<p><a href=""http://api.jquery.com/jQuery.getJSON/"" rel=""noreferrer"">http://api.jquery.com/jQuery.getJSON/</a></p>
","19706080"
"Check if an element is present in an array","399396","","<p>The function I am using now to check this is the following:</p>

<pre><code>function inArray(needle,haystack)
{
    var count=haystack.length;
    for(var i=0;i&lt;count;i++)
    {
        if(haystack[i]===needle){return true;}
    }
    return false;
}
</code></pre>

<p>It works. What I'm looking for is whether there is a better way of doing this.</p>
","<p><strong>ECMAScript 2016</strong> incorporates an <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes"" rel=""noreferrer""><code>includes()</code></a> method for arrays that specifically solves the answer, and so is now the preferred method. <em>(As of June 2016 you will need to use a polyfill until the method is implemented natively in all major browsers.)</em></p>

<pre><code>[1, 2, 3].includes(2);     // true
[1, 2, 3].includes(4);     // false
[1, 2, 3].includes(3, 3);  // false
</code></pre>
","38073833"
"How can I change the default width of a Twitter Bootstrap modal box?","398441","","<p>I tried the following:</p>

<pre><code>   &lt;div class=""modal hide fade modal-admin"" id=""testModal"" style=""display: none;""&gt;
        &lt;div class=""modal-header""&gt;
          &lt;a data-dismiss=""modal"" class=""close""&gt;×&lt;/a&gt;
          &lt;h3 id='dialog-heading'&gt;&lt;/h3&gt;
        &lt;/div&gt;
        &lt;div class=""modal-body""&gt;
            &lt;div id=""dialog-data""&gt;&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=""modal-footer""&gt;
          &lt;a data-dismiss=""modal"" class=""btn"" &gt;Close&lt;/a&gt;
          &lt;a class=""btn btn-primary"" id=""btnSaveChanges""&gt;Save changes&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
</code></pre>

<p>And this Javascript:</p>

<pre><code>    $('.modal-admin').css('width', '750px');
    $('.modal-admin').css('margin', '100px auto 100px auto');
    $('.modal-admin').modal('show')
</code></pre>

<p>The result is not what I expected. The modal top left is positioned in the center of the screen. </p>

<p>Can anyone help me. Has anyone else tried this. I assume it's not an unusual thing to want to do.</p>
","<p><strong>UPDATE:</strong></p>

<p>In <code>bootstrap 3</code> you need to change the modal-dialog.
So in this case you can add the class <code>modal-admin</code> in the place where <code>modal-dialog</code> stands.</p>

<p><strong>Original Answer (Bootstrap &lt; 3)</strong></p>

<p>Is there a certain reason you're trying to change it with JS/jQuery? </p>

<p>You can easily do it with just CSS, which means you don't have to do your styling in the document.
In your own custom CSS file, you add:</p>

<pre><code>body .modal {
    /* new custom width */
    width: 560px;
    /* must be half of the width, minus scrollbar on the left (30px) */
    margin-left: -280px;
}
</code></pre>

<p>In your case:</p>

<pre><code>body .modal-admin {
    /* new custom width */
    width: 750px;
    /* must be half of the width, minus scrollbar on the left (30px) */
    margin-left: -375px;
}
</code></pre>

<p>The reason I put body before the selector is so that it takes a higher priority than the default. This way you can add it to an custom CSS file, and without worries update Bootstrap. </p>
","10169597"
"AngularJS 1.2 $injector:modulerr","398191","","<p>When using angular 1.2 instead of 1.07 the following piece of code is not valid anymore, why?</p>

<pre><code>'use strict';

var app = angular.module('myapp', []);

app.config(['$routeProvider', '$locationProvider',
    function($routeProvider, $locationProvider) {
        $locationProvider.html5Mode(true);
        $routeProvider.
        when('/', {
            templateUrl: 'part.html',
            controller: 'MyCtrl'
        }).
        otherwise({
            redirectTo: '/'
        });
    }
]);
</code></pre>

<p>the issue is in the injector configuration part (app.config):</p>

<pre><code>Uncaught Error: [$injector:modulerr] http://errors.angularjs.org/1.2.0rc1/$injector/modulerr?p0=muninn&amp;p1=Error%…eapis.com%2Fajax%2Flibs%2Fangularjs%2F1.2.0rc1%2Fangular.min.js%3A31%3A252) 
</code></pre>

<p>If I remember correctly this issue started with angular 1.1.6.</p>
","<p>The problem was caused by missing inclusion of ngRoute module. Since version 1.1.6 it's a separate part:</p>

<pre><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/angularjs/1.2.0rc1/angular-route.min.js""&gt;&lt;/script&gt;

var app = angular.module('myapp', ['ngRoute']);
</code></pre>
","18287586"
"Where should I put <script> tags in HTML markup?","396802","","<p>When embedding JavaScript in an HTML document, where is the proper place to put the <code>&lt;script&gt;</code> tags and included JavaScript? I seem to recall that you are not supposed to place these in the <code>&lt;head&gt;</code> section, but placing at the beginning of the <code>&lt;body&gt;</code> section is bad, too, since the JavaScript will have to be parsed before the page is rendered completely (or something like that). This seems to leave the <em>end</em> of the <code>&lt;body&gt;</code> section as a logical place for <code>&lt;script&gt;</code> tags.</p>

<p>So, where <em>is</em> the right place to put the <code>&lt;script&gt;</code> tags?</p>

<p>(This question references <a href=""https://stackoverflow.com/questions/436154/why-does-the-call-to-this-jquery-function-fail-in-firefox"">this question</a>, in which it was suggested that JavaScript function calls should be moved from <code>&lt;a&gt;</code> tags to <code>&lt;script&gt;</code> tags. I'm specifically using jQuery, but more general answers are also appropriate.)</p>
","<p>Here's what happens when a browser loads a website with a <code>&lt;script&gt;</code> tag on it:</p>

<ol>
<li>Fetch the HTML page (e.g. index.html)</li>
<li>Begin parsing the HTML</li>
<li>The parser encounters a <code>&lt;script&gt;</code> tag referencing an external script file.</li>
<li>The browser requests the script file. Meanwhile, the parser blocks and stops parsing the other HTML on your page.</li>
<li>After some time the script is downloaded and subsequently executed.</li>
<li>The parser continues parsing the rest of the HTML document.</li>
</ol>

<p>Step 4 causes a bad user experience. Your website basically stops loading until you've downloaded all scripts. If there's one thing that users hate it's waiting for a website to load.</p>

<h2>Why does this even happen?</h2>

<p>Any script can insert its own HTML via <code>document.write()</code> or other DOM manipulations. This implies that the parser has to wait until the script has been downloaded &amp; executed before it can safely parse the rest of the document. After all, the script <em>could</em> have inserted its own HTML in the document.</p>

<p>However, most javascript developers no longer manipulate the DOM <em>while</em> the document is loading. Instead, they wait until the document has been loaded before modifying it. For example:</p>

<pre><code>&lt;!-- index.html --&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;My Page&lt;/title&gt;
        &lt;script type=""text/javascript"" src=""my-script.js""&gt;&lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;div id=""user-greeting""&gt;Welcome back, user&lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>Javascript:</p>

<pre><code>// my-script.js
document.addEventListener(""DOMContentLoaded"", function() { 
    // this function runs when the DOM is ready, i.e. when the document has been parsed
    document.getElementById(""user-greeting"").textContent = ""Welcome back, Bart"";
});
</code></pre>

<p>Because your browser does not know my-script.js isn't going to modify the document until it has been downloaded &amp; executed, the parser stops parsing.</p>

<h2>Antiquated recommendation</h2>

<p>The old approach to solving this problem was to put <code>&lt;script&gt;</code> tags at the bottom of your <code>&lt;body&gt;</code>, because this ensures the parser isn't blocked until the very end. </p>

<p>This approach has its own problem: the browser cannot start downloading the scripts until the entire document is parsed. For larger websites with large scripts &amp; stylesheets, being able to download the script as soon as possible is very important for performance. If your website doesn't load within 2 seconds, people will go to another website.</p>

<p>In an optimal solution, the browser would start downloading your scripts as soon as possible, while at the same time parsing the rest of your document.</p>

<h2>The modern approach</h2>

<p>Today, browsers support the <code>async</code> and <code>defer</code> attributes on scripts. These attributes tell the browser it's safe to continue parsing while the scripts are being downloaded.</p>

<h3>async</h3>

<pre><code>&lt;script type=""text/javascript"" src=""path/to/script1.js"" async&gt;&lt;/script&gt;
&lt;script type=""text/javascript"" src=""path/to/script2.js"" async&gt;&lt;/script&gt;
</code></pre>

<p>Scripts with the async attribute are executed asynchronously. This means the script is executed as soon as it's downloaded, without blocking the browser in the meantime.<br>
This implies that it's possible to script 2 is downloaded &amp; executed before script 1.  </p>

<p>According to <a href=""http://caniuse.com/#feat=script-async"" rel=""noreferrer"">http://caniuse.com/#feat=script-async</a>, 90% of all browsers support this.</p>

<h3>defer</h3>

<pre><code>&lt;script type=""text/javascript"" src=""path/to/script1.js"" defer&gt;&lt;/script&gt;
&lt;script type=""text/javascript"" src=""path/to/script2.js"" defer&gt;&lt;/script&gt;
</code></pre>

<p>Scripts with the defer attribute are executed in order (i.e. first script 1, then script 2). This also does not block the browser.</p>

<p>Unlike async scripts, defer scripts are only executed after the entire document has been loaded.</p>

<p>According to <a href=""http://caniuse.com/#feat=script-defer"" rel=""noreferrer"">http://caniuse.com/#feat=script-defer</a>, 90% of all browsers support this. 92% support it at least partially.</p>

<p>An important note on browser compatibility: in some circumstances IE &lt;= 9 may execute deferred scripts out of order. If you need to support those browsers, please read <a href=""https://github.com/h5bp/lazyweb-requests/issues/42"" rel=""noreferrer"">this</a> first!</p>

<h1>Conclusion</h1>

<p>The current state-of-the-art is to put scripts in the <code>&lt;head&gt;</code> tag and use the <code>async</code> or <code>defer</code> attributes. This allows your scripts to be downloaded asap without blocking your browser.</p>

<p>The good thing is that your website should still load correctly on the 20% of browsers that do not support these attributes while speeding up the other 80%.</p>
","24070373"
"Get the browser viewport dimensions with JavaScript","396344","","<p>I want to provide my visitors the ability to see images in high quality, is there any way I can detect the window size?</p>

<p>Or better yet, the viewport size of the browser with JavaScript? See green area here:</p>

<p><a href=""https://i.stack.imgur.com/zYrB7.jpg"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/zYrB7.jpg"" alt=""""></a></p>
","<h2><b>Cross-browser</b> <a href=""http://dev.w3.org/csswg/mediaqueries/#width"" rel=""noreferrer""><code>@media (width)</code></a> and <a href=""http://dev.w3.org/csswg/mediaqueries/#height"" rel=""noreferrer""><code>@media (height)</code></a> values&nbsp;</h2>

<pre><code>var w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
var h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
</code></pre>

<h2><code>window.innerWidth</code> and <code>.innerHeight</code></h2>

<ul>
<li>gets <a href=""http://www.w3.org/TR/CSS2/visuren.html#viewport"" rel=""noreferrer"">CSS viewport</a> <code>@media (width)</code> and <code>@media (height)</code> which include scrollbars</li>
<li><code>initial-scale</code> and zoom <a href=""https://github.com/ryanve/verge/issues/13"" rel=""noreferrer"">variations</a> may cause mobile values to <b>wrongly</b> scale down to what PPK calls the <a href=""http://www.quirksmode.org/mobile/viewports2.html"" rel=""noreferrer"">visual viewport</a> and be smaller than the <code>@media</code> values</li>
<li>zoom may cause values to be 1px off due to native rounding</li>
<li><code>undefined</code> in IE8-</li>
</ul>

<h2><code>document.documentElement.clientWidth</code> and <code>.clientHeight</code></h2>

<ul>
<li>equals CSS viewport width <strong>minus</strong> scrollbar width</li>
<li>matches <code>@media (width)</code> and <code>@media (height)</code> when there is <strong>no</strong> scrollbar</li>
<li><a href=""https://github.com/jquery/jquery/blob/1.9.1/src/dimensions.js#L12-L17"" rel=""noreferrer"">same as</a> <code>jQuery(window).width()</code> which <a href=""https://api.jquery.com/width/"" rel=""noreferrer"">jQuery</a> <em>calls</em> the browser viewport</li>
<li><a href=""http://www.quirksmode.org/mobile/tableViewport.html"" rel=""noreferrer"">available cross-browser</a></li>
<li><a href=""https://github.com/ryanve/verge/issues/22#issuecomment-341944009"" rel=""noreferrer"">inaccurate if doctype is missing</a></li>
</ul>

<h2>Resources</h2>

<ul>
<li><a href=""http://ryanve.com/lab/dimensions/"" rel=""noreferrer"">Live outputs for various dimensions</a> </li>
<li><a href=""http://github.com/ryanve/verge"" rel=""noreferrer""><b>verge</b></a> uses cross-browser viewport techniques </li>
<li><a href=""http://github.com/ryanve/actual"" rel=""noreferrer""><b>actual</b></a> uses <code>matchMedia</code> to obtain precise dimensions in any unit</li>
</ul>
","8876069"
"Javascript regexp number only check","394481","","<pre><code>hash = window.location.hash.substr(1);
var reg = new RegExp('^[0-9]$');
console.log(reg.test(hash));
</code></pre>

<p>I get false on both ""123"" and ""123f"". I would like to check if the hash only contains numbers. Did I miss something?</p>
","<pre><code>var reg = /^\d+$/;
</code></pre>

<p>should do it.  The original matches anything that consists of exactly one digit.</p>
","9011554"
"how to set textbox value in jquery","393614","","<p>How do I properly load the a certain value into a textbox using jquery?Tried the one below but I get the <code>[object Object]</code> as output. Please enlighten me on this, I'm new to jquery.</p>

<pre><code> proc = function(x,y) {
        var str1 = $('#pid').value;
        var str2 = $('#qtytobuy').value;
     var str3= $('#subtotal').load('compz.php?prodid=' + x + '&amp;qbuys=' + y);
    $('#subtotal').val(str3);
    }
</code></pre>

<p>And here's the html form:</p>

<pre><code>&lt;form name=""yoh"" method=""get""&gt; 
Product id: &lt;input type=""text"" name=""pid""  value=""""&gt;&lt;br/&gt;

Quantity to buy:&lt;input type=""text"" name=""qtytobuy""  value="""" onkeyup=""proc(document.yoh.pid.value, this.value);""&gt;&lt;/br&gt;

Subtotal:&lt;input type=""text"" name=""subtotal"" id=""subtotal""  value=""""&gt;&lt;/br&gt;
&lt;div id=""compz""&gt;&lt;/div&gt;

&lt;/form&gt;
</code></pre>
","<p>I think you want to set the response of the call to the URL <code>'compz.php?prodid=' + x + '&amp;qbuys=' + y</code> as value of the textbox right? If so, you have to do something like:</p>

<pre><code>$.get('compz.php?prodid=' + x + '&amp;qbuys=' + y, function(data) {
    $('#subtotal').val(data);
});
</code></pre>

<p>Reference: <a href=""http://api.jquery.com/jQuery.get/"" rel=""noreferrer""><code>get()</code></a></p>

<p>You have two errors in your code:</p>

<ul>
<li><p><a href=""http://api.jquery.com/load/"" rel=""noreferrer""><code>load()</code></a> puts the <strong>HTML</strong> returned from the Ajax into the specified element:</p>

<blockquote>
  <p>Load data from the server and place the returned HTML into the matched element.</p>
</blockquote>

<p>You cannot set the value of a textbox with that method.</p></li>
<li><p><code>$(selector).load()</code> returns the a jQuery <em>object</em>. By default an object is converted to <code>[object Object]</code> when treated as string.</p></li>
</ul>

<p><strong>Further clarification</strong>:</p>

<p>Assuming your URL returns <code>5</code>.  </p>

<p>If your HTML looks like:</p>

<pre><code>&lt;div id=""foo""&gt;&lt;/div&gt;
</code></pre>

<p>then the result of</p>

<pre><code>$('#foo').load('/your/url');
</code></pre>

<p>will be</p>

<pre><code>&lt;div id=""foo""&gt;5&lt;/div&gt;
</code></pre>

<p>But in your code, you have an input element. <strong>Theoretically</strong> (it is not valid HTML and does not work as you noticed), an equivalent call would result in</p>

<pre><code>&lt;input id=""foo""&gt;5&lt;/input&gt;
</code></pre>

<p>But you actually need</p>

<pre><code>&lt;input id=""foo"" value=""5"" /&gt;
</code></pre>

<p>Therefore, you cannot use <code>load()</code>. You have to use another method, get the response and set it as value yourself. </p>
","4194021"
"Read environment variables in Node.js","393500","","<p>Is there a way I can read environment variables in Node.js code?</p>

<p>Like for example Python's <code>os.environ['HOME']</code>.</p>
","<pre><code>process.env.ENV_VARIABLE
</code></pre>

<p>Where <code>ENV_VARIABLE</code> is the name of the variable you wish to access.</p>

<p>See <a href=""https://nodejs.org/api/process.html#process_process_env"" rel=""noreferrer"">Node.js docs for <code>process.env</code></a>.</p>
","4870450"
"How to detect a textbox's content has changed","393385","","<p>I want to detect whenever a textbox's content has changed. I can use the keyup method, but that will also detect keystrokes which do not generate letters, like the arrow keys. I thought of two methods of doing this using the keyup event:</p>

<ol>
<li>Check explictly if the ascii code of the pressed key is a letter\backspace\delete</li>
<li>Use closures to remember what was the text in the textbox before the key stroke and check whether this has changed.</li>
</ol>

<p>Both look kinda cumbersome. </p>
","<p>Start observing 'input' event instead of 'change'.</p>

<pre><code>jQuery('#some_text_box').on('input', function() {
    // do your stuff
});
</code></pre>

<p>...which is nice and clean, but may be extended further to:</p>

<pre><code>jQuery('#some_text_box').on('input propertychange paste', function() {
    // do your stuff
});
</code></pre>
","9955724"
"Loop inside React JSX","393088","","<p>I'm trying to do something like the following in React JSX (where ObjectRow is a separate component):</p>

<pre><code>&lt;tbody&gt;
    for (var i=0; i &lt; numrows; i++) {
        &lt;ObjectRow/&gt;
    } 
&lt;/tbody&gt;
</code></pre>

<p>I realize and understand why this isn't valid JSX, since JSX maps to function calls. However, coming from template land and being new to JSX, I am unsure how I would achieve the above (adding a component multiple times).</p>
","<p>Think of it like you're just calling JavaScript functions. You can't put a <code>for</code> loop inside a function call:</p>

<pre><code>return tbody(
    for (var i = 0; i &lt; numrows; i++) {
        ObjectRow()
    } 
)
</code></pre>

<p>But you can make an array, and then pass that in:</p>

<pre><code>var rows = [];
for (var i = 0; i &lt; numrows; i++) {
    rows.push(ObjectRow());
}
return tbody(rows);
</code></pre>

<hr>

<p>You can use basically the same structure when working with JSX:</p>

<pre><code>var rows = [];
for (var i = 0; i &lt; numrows; i++) {
    // note: we add a key prop here to allow react to uniquely identify each
    // element in this array. see: https://reactjs.org/docs/lists-and-keys.html
    rows.push(&lt;ObjectRow key={i} /&gt;);
}
return &lt;tbody&gt;{rows}&lt;/tbody&gt;;
</code></pre>

<p>Incidentally, my JavaScript example is almost exactly what that example of JSX transforms into. Play around with <a href=""https://babeljs.io/repl"" rel=""noreferrer"">Babel REPL</a> to get a feel for how JSX works.</p>
","22877049"
"Converting a string to JSON object","392749","","<p>How do you make JS think that a string is JSON ?</p>

<p>I have a function which only works if JSON object is passed to it. If I pass a string to it, with same format as JSON, it doesn't work. So I want to make that function think that the string passed to it is a JSON. The string is indeed in the JSON format.</p>

<p>I also tried the following. I inputted the string through Ajax , with ""handle as"" parameter as ""JSON"", and then when  I passed the result to the function it works.</p>

<p>So I deduced the problem is not with the string. How do I convert this string to JSON? If i get same string through ajax request and then passing it to function works, whereas directly passing it doesn't work. </p>

<p>The string is as follows:</p>

<pre><code>  {
     ""data"": [
   {
  ""id"": ""id1"",
      ""fields"": [
        {
          ""id"": ""name1"",
          ""label"": ""joker"",
          ""unit"": ""year""
        },
         {""id"": ""name2"", ""label"": ""Quantity""},
    ],
      ""rows"": [    data here....

and closing braces..
</code></pre>
","<pre><code>var obj = JSON.parse(string);
</code></pre>

<p>Where <code>string</code> is your json string.</p>
","10976924"
"Smooth scroll to div id jQuery","392452","","<p>I've been trying to get a scroll to div id jquery code to work correctly. Based on another stack overflow question i tried the following</p>

<p>DEMO <a href=""http://jsfiddle.net/kevinPHPkevin/8tLdq/"" rel=""noreferrer"">http://jsfiddle.net/kevinPHPkevin/8tLdq/</a></p>

<pre><code>$('#myButton').click(function() {
   $.scrollTo($('#myDiv'), 1000);
});
</code></pre>

<p>But it didn't work. It just snaps to the div. I also tried</p>

<pre><code>$('#myButton').click(function(event) {
     event.preventDefault();
   $.scrollTo($('#myDiv'), 1000);
});
</code></pre>

<p>With no progress.</p>
","<p>You need to animate the <code>html, body</code></p>

<p>DEMO <a href=""http://jsfiddle.net/kevinPHPkevin/8tLdq/1/"" rel=""noreferrer"">http://jsfiddle.net/kevinPHPkevin/8tLdq/1/</a></p>

<pre><code>$(""#button"").click(function() {
    $('html, body').animate({
        scrollTop: $(""#myDiv"").offset().top
    }, 2000);
});
</code></pre>
","19012631"
"Check if user is using IE with jQuery","392095","","<p>I am calling a function like the one below by click on divs with a certain class. </p>

<p>Is there a way I can check when starting the function if a user is using Internet Explorer and abort / cancel it if they are using other browsers so that it only runs for IE users ? The users here would all be on IE8 or higher versions so I would not need to cover IE7 and lower versions.</p>

<p>If I could tell which browser they are using that would be great but is not required.</p>

<p><strong>Example function:</strong></p>

<pre><code>$('.myClass').on('click', function(event)
{
    // my function
});
</code></pre>
","<p>Use below JavaScript method : </p>

<pre><code>function msieversion() 
{
    var ua = window.navigator.userAgent;
    var msie = ua.indexOf(""MSIE "");

    if (msie &gt; 0) // If Internet Explorer, return version number
    {
        alert(parseInt(ua.substring(msie + 5, ua.indexOf(""."", msie))));
    }
    else  // If another browser, return 0
    {
        alert('otherbrowser');
    }

    return false;
}
</code></pre>

<p>You may find the details on below Microsoft support site : </p>

<p><a href=""http://support.microsoft.com/kb/167820"" rel=""noreferrer"">How to determine browser version from script</a></p>

<p><strong>Update :</strong> (IE 11 support)</p>

<pre><code>function msieversion() {

    var ua = window.navigator.userAgent;
    var msie = ua.indexOf(""MSIE "");

    if (msie &gt; 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./))  // If Internet Explorer, return version number
    {
        alert(parseInt(ua.substring(msie + 5, ua.indexOf(""."", msie))));
    }
    else  // If another browser, return 0
    {
        alert('otherbrowser');
    }

    return false;
}
</code></pre>
","19999868"
"When are you supposed to use escape instead of encodeURI / encodeURIComponent?","391486","","<p>When encoding a query string to be sent to a web server - when do you use <code>escape()</code> and when do you use <code>encodeURI()</code> or <code>encodeURIComponent()</code>:</p>

<p>Use escape:</p>

<pre><code>escape(""% +&amp;="");
</code></pre>

<p>OR</p>

<p>use encodeURI() / encodeURIComponent()</p>

<pre><code>encodeURI(""http://www.google.com?var1=value1&amp;var2=value2"");

encodeURIComponent(""var1=value1&amp;var2=value2"");
</code></pre>
","<h1>escape()</h1>

<p>Special characters are encoded with the exception of: @*_+-./</p>

<p>The hexadecimal form for characters, whose code unit value is 0xFF or less, is a two-digit escape sequence: %xx. For characters with a greater code unit, the four-digit format %uxxxx is used.</p>

<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/escape"" rel=""noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/escape</a></p>

<h1>encodeURI()</h1>

<p>Use encodeURI when you want a working URL. Make this call:</p>

<pre><code>encodeURI(""http://www.example.org/a file with spaces.html"")
</code></pre>

<p>to get:</p>

<pre><code>http://www.example.org/a%20file%20with%20spaces.html
</code></pre>

<p>Don't call encodeURIComponent since it would destroy the URL and return</p>

<pre><code>http%3A%2F%2Fwww.example.org%2Fa%20file%20with%20spaces.html
</code></pre>

<h1>encodeURIComponent()</h1>

<p>Use encodeURIComponent when you want to encode the value of a URL parameter.</p>

<pre><code>var p1 = encodeURIComponent(""http://example.org/?a=12&amp;b=55"")
</code></pre>

<p>Then you may create the URL you need:</p>

<pre><code>var url = ""http://example.net/?param1="" + p1 + ""&amp;param2=99"";
</code></pre>

<p>And you will get this complete URL:</p>

<p><code>http://example.net/?param1=http%3A%2F%2Fexample.org%2F%Ffa%3D12%26b%3D55&amp;param2=99</code></p>

<p>Note that encodeURIComponent does not escape the <code>'</code> character. A common bug is to use it to create html attributes such as <code>href='MyUrl'</code>, which could suffer an injection bug. If you are constructing html from strings, either use <code>""</code> instead of <code>'</code> for attribute quotes, or add an extra layer of encoding (<code>'</code> can be encoded as %27).</p>

<p>For more information on this type of encoding you can check: <a href=""http://en.wikipedia.org/wiki/Percent-encoding"" rel=""noreferrer"">http://en.wikipedia.org/wiki/Percent-encoding</a></p>
","3608791"
"window.onload vs <body onload=""""/>","391197","","<p>What exactly is the difference between the <code>window.onload</code> event and the <code>onload</code> event of the <code>body</code> tag? when do I use which and how should it be done correctly?</p>
","<p><code>window.onload = myOnloadFunc</code> and <code>&lt;body onload=""myOnloadFunc();""&gt;</code> are different ways of using <strong>the same event</strong>. Using <code>window.onload</code> is less obtrusive though - it takes your JavaScript out of the HTML.</p>

<p>All of the common JavaScript libraries, Prototype, ExtJS, Dojo, JQuery, YUI, etc. provide nice wrappers around events that occur as the document is loaded. You can listen for the window onLoad event, and react to that, but onLoad is not fired until all resources have been downloaded, so your event handler won't be executed until that last huge image has been fetched. In some cases that's exactly what you want, in others you might find that listening for when the DOM is ready is more appropriate - this event is similar to onLoad but fires without waiting for images, etc. to download.</p>
","191318"
"Resize HTML5 canvas to fit window","391077","","<p>How can I automatically scale the HTML5 <code>&lt;canvas&gt;</code> element to fit the page?</p>

<p>For example, I can get a <code>&lt;div&gt;</code> to scale by setting the <code>height</code> and <code>width</code> properties to 100%, but a <code>&lt;canvas&gt;</code> won't scale, will it?</p>
","<p>I believe I have found an elegant solution to this:</p>

<p><strong>JavaScript</strong></p>

<pre><code>/* important! for alignment, you should make things
 * relative to the canvas' current width/height.
 */
function draw() {
  var ctx = (a canvas context);
  ctx.canvas.width  = window.innerWidth;
  ctx.canvas.height = window.innerHeight;
  //...drawing code...
}
</code></pre>

<p><strong>CSS</strong></p>

<pre><code>html, body {
  width:  100%;
  height: 100%;
  margin: 0px;
}
</code></pre>

<p>Hasn't had any large negative performance impact for me, so far.</p>
","3078427"
"Return multiple values in JavaScript?","391040","","<p>I am trying to return two values in JavaScript. Is that possible?  </p>

<pre><code>var newCodes = function() {  
    var dCodes = fg.codecsCodes.rs;
    var dCodes2 = fg.codecsCodes2.rs;
    return dCodes, dCodes2;
};
</code></pre>
","<p>No, but you could return an array containing your values:</p>

<pre><code>var newCodes = function() {
    var dCodes = fg.codecsCodes.rs;
    var dCodes2 = fg.codecsCodes2.rs;
    return [dCodes, dCodes2];
};
</code></pre>

<p>Then you can access them like so:</p>

<pre><code>var codes = newCodes();
var dCodes = codes[0];
var dCodes2 = codes[1];
</code></pre>

<p>If you want to put ""labels"" on each of the returned values (easier to maintain), you can return an object:</p>

<pre><code>var newCodes = function() {
    var dCodes = fg.codecsCodes.rs;
    var dCodes2 = fg.codecsCodes2.rs;
    return {
        dCodes: dCodes,
        dCodes2: dCodes2
    };
};
</code></pre>

<p>And to access them:</p>

<pre><code>var codes = newCodes();
var dCodes = codes.dCodes;
var dCodes2 = codes.dCodes2;
</code></pre>
","2917186"
"Wait until all jQuery Ajax requests are done?","390643","","<p>How do I make a function wait until all jQuery Ajax requests are done inside another function?</p>

<p>In short, I need to wait for all Ajax requests to be done before I execute the next. But how?</p>
","<p>jQuery now defines a 'when' function for this purpose.</p>

<p><a href=""http://api.jquery.com/jQuery.when/"" rel=""noreferrer"">http://api.jquery.com/jQuery.when/</a></p>

<p>It accepts any number of Deferred objects as arguments, and executes a function when all of them resolve.</p>

<p>That means, if you want to initiate (for example) four ajax requests, then perform an action when they are done, you could do something like this:</p>

<pre><code>$.when(ajax1(), ajax2(), ajax3(), ajax4()).done(function(a1, a2, a3, a4){
    // the code here will be executed when all four ajax requests resolve.
    // a1, a2, a3 and a4 are lists of length 3 containing the response text,
    // status, and jqXHR object for each of the four ajax calls respectively.
});

function ajax1() {
    // NOTE:  This function must return the value 
    //        from calling the $.ajax() method.
    return $.ajax({
        url: ""someUrl"",
        dataType: ""json"",
        data:  yourJsonData,            
        ...
    });
}
</code></pre>

<p>In my opinion, it makes for a clean and clear syntax, and avoids involving any global variables such as ajaxStart and ajaxStop, which could have unwanted side effects as your page develops.</p>

<p>If you don't know in advance how many ajax arguments you need to wait for (i.e. you want to use a variable number of arguments), it can still be done but is just a little bit trickier. See <a href=""https://stackoverflow.com/q/5627284/1048572"">Pass in an array of Deferreds to $.when()</a> (and maybe <a href=""https://stackoverflow.com/questions/9865586/jquery-when-troubleshooting-with-variable-number-of-arguments"">jQuery .when troubleshooting with variable number of arguments</a>).</p>

<p>If you need deeper control over the failure modes of the ajax scripts etc., you can save the object returned by .when() - it's a jQuery <a href=""http://api.jquery.com/Types/#Promise"" rel=""noreferrer"">Promise</a> object encompassing all of the original ajax queries. You can call .then() or .fail() on it to add detailed success/failure handlers.</p>
","9865124"
"Generate pdf from HTML in div using Javascript","389616","","<p>I have the following html code:</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;body&gt;
        &lt;p&gt;don't print this to pdf&lt;/p&gt;
        &lt;div id=""pdf""&gt;
            &lt;p&gt;&lt;font size=""3"" color=""red""&gt;print this to pdf&lt;/font&gt;&lt;/p&gt;
        &lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>All I want to do is to print to pdf whatever is found in the div with an id of ""pdf"".  This must be done using JavaScript.  The ""pdf"" document should then be automatically downloaded with a filename of ""foobar.pdf""</p>

<p>I've been using jspdf to do this, but the only function it has is ""text"" which accepts only string values.  I want to submit HTML to jspdf, not text.  </p>
","<p><strong>jsPDF is able to use plugins.</strong> In order to enable it to print HTML, you have to include certain plugins and therefore have to do the following:</p>

<ol>
<li>Go to <a href=""https://github.com/MrRio/jsPDF"">https://github.com/MrRio/jsPDF</a> and download the latest Version.</li>
<li>Include the following Scripts in your project:
<ul>
<li>jspdf.js</li>
<li>jspdf.plugin.from_html.js</li>
<li>jspdf.plugin.split_text_to_size.js</li>
<li>jspdf.plugin.standard_fonts_metrics.js</li>
</ul></li>
</ol>

<p>If you want to ignore certain elements, you have to mark them with an ID, which you can then ignore in a special element handler of jsPDF. Therefore your HTML should look like this:</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;body&gt;
    &lt;p id=""ignorePDF""&gt;don't print this to pdf&lt;/p&gt;
    &lt;div&gt;
      &lt;p&gt;&lt;font size=""3"" color=""red""&gt;print this to pdf&lt;/font&gt;&lt;/p&gt;
    &lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>Then you use the following JavaScript code to open the created PDF in a PopUp:</p>

<pre><code>var doc = new jsPDF();          
var elementHandler = {
  '#ignorePDF': function (element, renderer) {
    return true;
  }
};
var source = window.document.getElementsByTagName(""body"")[0];
doc.fromHTML(
    source,
    15,
    15,
    {
      'width': 180,'elementHandlers': elementHandler
    });

doc.output(""dataurlnewwindow"");
</code></pre>

<p>For me this created a nice and tidy PDF that only included the line 'print this to pdf'.</p>

<p>Please note that the special element handlers only deal with IDs in the current version, which is also stated in a <a href=""https://github.com/MrRio/jsPDF/issues/34"">GitHub Issue</a>. It states: </p>

<blockquote>
  <p>Because the matching is done against every element in the node tree, my desire was to make it as fast as possible. In that case, it meant ""Only element IDs are matched"" The element IDs are still done in jQuery style ""#id"", but it does not mean that all jQuery selectors are supported.</p>
</blockquote>

<p>Therefore replacing '#ignorePDF' with class selectors like '.ignorePDF' did not work for me. Instead you will have to add the same handler for each and every element, which you want to ignore like:</p>

<pre><code>var elementHandler = {
  '#ignoreElement': function (element, renderer) {
    return true;
  },
  '#anotherIdToBeIgnored': function (element, renderer) {
    return true;
  }
};
</code></pre>

<p>From the <a href=""http://mrrio.github.io/jsPDF/examples/basic.html"">examples</a> it is also stated that it is possible to select tags like 'a' or 'li'. That might be a little bit to unrestrictive for the most usecases though:</p>

<blockquote>
  <p>We support special element handlers. Register them with jQuery-style
  ID selector for either ID or node name. (""#iAmID"", ""div"", ""span"" etc.)
  There is no support for any other type of selectors (class, of
  compound) at this time.</p>
</blockquote>

<p><strong>One very important thing to add is that you lose all your style information (CSS). Luckily jsPDF is able to nicely format h1, h2, h3 etc., which was enough for my purposes. Additionalyl it will only print text within text nodes, which means that it will not print the values of textareas and the like. Example:</strong></p>

<pre><code>&lt;body&gt;
  &lt;ul&gt;
    &lt;!-- This is printed as the element contains a textnode --&gt;        
    &lt;li&gt;Print me!&lt;/li&gt;
  &lt;/ul&gt;
  &lt;div&gt;
    &lt;!-- This is not printed because jsPDF doesn't deal with the value attribute --&gt;
    &lt;input type=""textarea"" value=""Please print me, too!""&gt;
  &lt;/div&gt;
&lt;/body&gt;
</code></pre>
","24825130"
"map function for objects (instead of arrays)","389409","","<p>I have an object:</p>

<pre><code>myObject = { 'a': 1, 'b': 2, 'c': 3 }
</code></pre>

<p>I am looking for a native method, similar to <code>Array.prototype.map</code> that would be used as follows:</p>

<pre><code>newObject = myObject.map(function (value, label) {
    return value * value;
});

// newObject is now { 'a': 1, 'b': 4, 'c': 9 }
</code></pre>

<p>Does JavaScript have such a <code>map</code> function for objects? (I want this for Node.JS, so I don't care about cross-browser issues.)</p>
","<p>There is no native <code>map</code> to the <code>Object</code> object, but how about this:</p>

<pre><code>Object.keys(myObject).map(function(key, index) {
   myObject[key] *= 2;
});

console.log(myObject);

// =&gt; { 'a': 2, 'b': 4, 'c': 6 }
</code></pre>

<p>But you could easily iterate over an object using <code>for ... in</code>:</p>

<pre><code>for(var key in myObject) {
    if(myObject.hasOwnProperty(key)) {
        myObject[key] *= 2;
    }
}
</code></pre>

<p><strong>Update</strong></p>

<p>A lot of people are mentioning that the previous methods do not return a new object, but rather operate on the object itself. For that matter I wanted to add another solution that returns a new object and leaves the original object as it is:</p>

<pre><code>var newObject = Object.keys(myObject).reduce(function(previous, current) {
    previous[current] = myObject[current] * myObject[current];
    return previous;
}, {});

console.log(newObject);
// =&gt; { 'a': 1, 'b': 4, 'c': 9 }

console.log(myObject);
// =&gt; { 'a': 1, 'b': 2, 'c': 3 }
</code></pre>

<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce"" rel=""noreferrer""><code>Array.prototype.reduce</code></a> reduces an array to a single value by somewhat merging the previous value with the current. The chain is initialized by an empty object <code>{}</code>. On every iteration a new key of <code>myObject</code> is added with its square as value.</p>
","14810722"
"How to convert image into base64 string using javascript","389346","","<p>I need to convert my image to a base64 string so that i can send my image to a server.
Is there any js file for this... ? Else how to convert it</p>
","<p>You can use the HTML5 <code>&lt;canvas&gt;</code> for it:</p>

<p>Create a canvas, load your image into it and then use <a href=""https://developer.mozilla.org/en/DOM/HTMLCanvasElement""><code>toDataURL()</code></a> to get the base64 representation (actually, it's a <code>data:</code> URL but it contains the base64-encoded image).</p>
","6150397"
"Switch statement multiple cases in JavaScript","389061","","<p>I need multiple cases in switch statement in JavaScript, Something like:</p>

<pre><code>switch (varName)
{
   case ""afshin"", ""saeed"", ""larry"": 
       alert('Hey');
       break;

   default: 
       alert('Default case');
       break;
}
</code></pre>

<p>How can I do that? If there's no way to do something like that in JavaScript, I want to know an alternative solution that also follows <a href=""http://c2.com/cgi/wiki?DontRepeatYourself"" rel=""noreferrer"">DRY concept</a>.</p>
","<p>Use the fall-through feature of the <code>switch</code> statement. A matched case will run until a <code>break</code> (or the end of the <code>switch</code> statement) is found, so you could write it like:</p>

<pre><code>switch (varName)
{
   case ""afshin"":
   case ""saeed"":
   case ""larry"": 
       alert('Hey');
       break;

   default: 
       alert('Default case');
}
</code></pre>
","13207939"
"Why am I seeing an ""origin is not allowed by Access-Control-Allow-Origin"" error here?","388889","","<p>I am seeing the following error:</p>

<pre><code>Origin http://localhost:8080 is not allowed by Access-Control-Allow-Origin
</code></pre>

<p>with this code:</p>

<pre><code>var http = new getXMLHttpRequestObject();
var url = ""http://gdata.youtube.com/action/GetUploadToken"";
var sendXML = '&lt;?xml version=""1.0""?&gt;&lt;entry xmlns=""http://www.w3.org/2005/Atom""'+
    'xmlns:media=""http://search.yahoo.com/mrss/'+
    'xmlns:yt=""http://gdata.youtube.com/schemas/2007""&gt;'+
    '&lt;media:group&gt;&lt;media:title type=""plain""&gt;My First API&lt;/media:title&gt;'+
    '&lt;media:description type=""plain""&gt;First API&lt;/media:description&gt;'+
    '&lt;media:category scheme=""http://gdata.youtube.com/schemas/2007/categories.cat""&gt;People&lt;/media:category&gt;'+
    '&lt;media:keywords&gt;first, api&lt;/media:keywords&gt;&lt;/media:group&gt;&lt;/entry&gt;';
http.open(""POST"", url, true);
http.setRequestHeader(""Authorization"", ""AuthSub token="" + AccessToken);
http.setRequestHeader(""X-GData-Key"", ""key=""+ dev_key);
http.setRequestHeader(""Content-Type"", ""application/atom+xml; charset=UTF-8"");

http.onreadystatechange = function() {
    if(http.readyState == 4) {
        alert(http.responseXML);
    }
}
http.send(sendXML);
</code></pre>

<p>What can cause this, and how do I solve it?</p>
","<p>Javascript is limited when making ajax requests outside of the current domain.  </p>

<ul>
<li>Ex 1: your domain is example.com and you want to make a request to test.com => you cannot.   </li>
<li>Ex 2: your domain is example.com and you want to make a request to inner.example.com => you cannot.</li>
<li>Ex 3: your domain is example.com:80 and you want to make a request to example.com:81 => you cannot</li>
<li>EX 4: your domain is example.com and you want to make a request to example.com => you can.</li>
</ul>

<p>Javascript is limited by the ""same origin policy"" for security reasons so that a malicious script cannot contact a remote server and send sensitive data.</p>

<p><a href=""https://en.wikipedia.org/wiki/JSONP"">jsonp</a> is a different way to use javascript. You make a request and results are encapsulated into a callback function which is run in the client. It's the same as linking a new script tag into the head part of your html (you know that you can load scripts from different domains than yours here).<br>
However, to use jsonp the server must be configured properly. If this is not the case you cannot use jsonp and you MUST rely on a server side proxy (PHP, ASP, etc.). There are plenty of guides related to this topic, just google it!</p>
","9311585"
"JavaScript - Replace all commas in a string","388579","","<p>I have a string with multiple commas, and the string replace method will only change the first one:</p>

<pre><code>var mystring = ""this,is,a,test""
mystring.replace("","",""newchar"", -1)
</code></pre>

<p><strong>Result</strong>: <code>""thisnewcharis,a,test""</code></p>

<p>The documentation indicates that the default replaces all, and that ""-1"" also indicates to replace all, but it is unsuccessful. Any thoughts?</p>
","<p>You can use RegExp with <code>g</code> flag.</p>

<pre><code>var mystring = ""this,is,a,test""
mystring.replace(/,/g , ""newchar"");
</code></pre>

<p><strong>DEMO:</strong> <a href=""http://jsfiddle.net/d4N9s/"" rel=""noreferrer"">http://jsfiddle.net/d4N9s/</a></p>
","10610408"
"Can I call jquery click() to follow an <a> link if I haven't bound an event handler to it with bind or click already?","387944","","<p>I have a timer in my JavaScript which needs to emulate clicking a link to go to another page once the time elapses. To do this I'm using jQuery's <code>click()</code> function. I have used <code>$().trigger()</code> and <code>window.location</code> also, and I can make it work as intended with all three.</p>

<p>I've observed some weird behavior with <code>click()</code> and I'm trying to understand what happens and why.</p>

<p>I'm using Firefox for everything I describe in this question, but I am also interested in what other browsers will do with this.</p>

<p>If I have not used <code>$('a').bind('click',fn)</code> or <code>$('a').click(fn)</code> to set an event handler, then calling <code>$('a').click()</code> seems to do nothing at all. It does not call the browser's default handler for this event, as the browser does not load the new page.</p>

<p>However, if I set an event handler first, then it works as expected, even if the event handler does nothing.</p>

<pre><code>$('a').click(function(){return true;}).click();
</code></pre>

<p>This loads the new page as if I had clicked the a myself.</p>

<p>So my question is twofold: Is this weird behavior because I'm doing something wrong somewhere? and why does calling <code>click()</code> do nothing with the default behavior if I haven't created a handler of my own?</p>

<p><strong>EDIT:</strong></p>

<p>As Hoffman determined when he tried to duplicate my results, the outcome I described above doesn't actually happen. I'm not sure what caused the events I observed yesterday, but I'm certain today that it was not what I described in the question.</p>

<p>So the answer is that you can't ""fake"" clicks in the browser and that all jQuery does is call your event handler. You can still use <code>window.location</code> to change page, and that works fine for me.</p>
","<p>Interesting, this is probably a ""feature request"" (ie bug) for jQuery. The jQuery click event only triggers the click action (called onClick event on the DOM) on the element if you bind a jQuery event to the element. You should go to jQuery mailing lists ( <a href=""http://forum.jquery.com/"" rel=""noreferrer"">http://forum.jquery.com/</a> ) and report this. This might be the wanted behavior, but I don't think so.</p>

<p>EDIT:</p>

<p>I did some testing and what you said is wrong, even if you bind a function to an 'a' tag it still doesn't take you to the website specified by the href attribute. Try the following code:</p>

<pre><code>&lt;html&gt;
&lt;head&gt;

&lt;script src=""http://ajax.googleapis.com/ajax/libs/jquery/1.3/jquery.min.js""&gt;&lt;/script&gt;
 &lt;script&gt;
  $(document).ready(function() {
   /* Try to dis-comment this:
   $('#a').click(function () {
    alert('jQuery.click()');
    return true;
   });
   */
  });
  function button_onClick() {
   $('#a').click();
  }
  function a_onClick() {
   alert('a_onClick');
  }
 &lt;/script&gt;

&lt;/head&gt;
&lt;body&gt;
 &lt;input type=""button"" onclick=""button_onClick()""&gt;
 &lt;br&gt;
 &lt;a id='a' href='http://www.google.com' onClick=""a_onClick()""&gt; aaa &lt;/a&gt;

&lt;/body&gt;
&lt;/html&gt; 
</code></pre>

<p>It never goes to google.com unless you directly click on the link (with or without the commented code). Also notice that even if you bind the click event to the link it still doesn't go purple once you click the button. It only goes purple if you click the link directly.</p>

<p>I did some research and it seems that the .click is not suppose to work with 'a' tags because the browser does not suport ""fake clicking"" with javascript. I mean, you can't ""click"" an element with javascript. With 'a' tags you can trigger its onClick event but the link won't change colors (to the visited link color, the default is purple in most browsers). So it wouldn't make sense to make the $().click event work with 'a' tags since the act of going to the href attribute is not a part of the onClick event, but hardcoded in the browser.</p>
","1694803"
"Simplest SOAP example","385448","","<p>What is the simplest SOAP example using Javascript?</p>

<p>To be as useful as possible, the answer should:</p>

<ul>
<li>Be functional (in other words actually work)</li>
<li>Send at least one parameter that can be set elsewhere in the code</li>
<li>Process at least one result value that can be read elsewhere in the code</li>
<li>Work with most modern browser versions</li>
<li>Be as clear and as short as possible, without using an external library</li>
</ul>
","<p>This is the simplest JavaScript SOAP Client I can create. </p>

<pre><code>&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;SOAP JavaScript Client Test&lt;/title&gt;
    &lt;script type=""text/javascript""&gt;
        function soap() {
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.open('POST', 'https://somesoapurl.com/', true);

            // build SOAP request
            var sr =
                '&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;' +
                '&lt;soapenv:Envelope ' + 
                    'xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" ' +
                    'xmlns:api=""http://127.0.0.1/Integrics/Enswitch/API"" ' +
                    'xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" ' +
                    'xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/""&gt;' +
                    '&lt;soapenv:Body&gt;' +
                        '&lt;api:some_api_call soapenv:encodingStyle=""http://schemas.xmlsoap.org/soap/encoding/""&gt;' +
                            '&lt;username xsi:type=""xsd:string""&gt;login_username&lt;/username&gt;' +
                            '&lt;password xsi:type=""xsd:string""&gt;password&lt;/password&gt;' +
                        '&lt;/api:some_api_call&gt;' +
                    '&lt;/soapenv:Body&gt;' +
                '&lt;/soapenv:Envelope&gt;';

            xmlhttp.onreadystatechange = function () {
                if (xmlhttp.readyState == 4) {
                    if (xmlhttp.status == 200) {
                        alert('done. use firebug/console to see network response');
                    }
                }
            }
            // Send the POST request
            xmlhttp.setRequestHeader('Content-Type', 'text/xml');
            xmlhttp.send(sr);
            // send request
            // ...
        }
    &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;form name=""Demo"" action="""" method=""post""&gt;
        &lt;div&gt;
            &lt;input type=""button"" value=""Soap"" onclick=""soap();"" /&gt;
        &lt;/div&gt;
    &lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt; &lt;!-- typo --&gt;
</code></pre>
","11404133"
"Javascript: open new page in same window","385109","","<p>Is there an easy way to modify this code so that the target URL opens in the SAME window?</p>

<pre><code>&lt;a href=""javascript:q=(document.location.href);void(open('http://example.com/submit.php?url='+escape(q),'','resizable,location,menubar,toolbar,scrollbars,status'));""&gt;click here&lt;/a&gt;``
</code></pre>
","<p>The second parameter of <em>window.open()</em> is a string representing the name of the target window.  </p>

<p>Set it to: ""_self"".</p>

<pre><code>&lt;a href=""javascript:q=(document.location.href);void(open('http://example.com/submit.php?url='+escape(q),'_self','resizable,location,menubar,toolbar,scrollbars,status'));""&gt;click here&lt;/a&gt;
</code></pre>

<p><br/>
<strong>Sidenote:</strong>
The following question gives an overview of an arguably better way to bind event handlers to HTML links.</p>

<p><a href=""https://stackoverflow.com/questions/266327/whats-the-best-way-to-replace-links-with-js-functions#266443""><strong>What's the best way to replace links with js functions?</strong></a></p>
","267712"
"How do I escape a single quote ( ' ) in JavaScript?","384830","","<p>Okay, I am basically doing this:</p>

<pre><code>document.getElementById(""something"").innerHTML = ""&lt;img src='something' onmouseover='change(\'ex1\')' /&gt;"";
</code></pre>

<p>I don't want double quotes ("") where I put the \'. I only want a single quote, so I am trying to not make it put a double when it is used. I am trying to reach this in the final outcome.</p>

<pre><code>&lt;img src=""something"" onmouseover=""change('ex1')"" /&gt;
</code></pre>

<p>Escaping isn't working for me.</p>

<p>My marked answer works fine, however, the cleaner (and more professional-looking way, IMO) is  <a href=""https://stackoverflow.com/a/16134953/1754890"">loganfsmyth's answer</a>.</p>
","<p>You should always consider what the browser will see by the end. In this case, it will see this:</p>

<pre><code>&lt;img src='something' onmouseover='change(' ex1')' /&gt;
</code></pre>

<p>In other words, the ""onmouseover"" attribute is just <code>change(</code>, and there's another ""attribute"" called <code>ex1')'</code> with no value.</p>

<p>The truth is, HTML does not use <code>\</code> for an escape character. But it does recognise <code>&amp;quot;</code> and <code>&amp;apos;</code> as escaped quote and apostrophe, respectively.</p>

<p>Armed with this knowledge, use this:</p>

<pre><code>document.getElementById(""something"").innerHTML = ""&lt;img src='something' onmouseover='change(&amp;quot;ex1&amp;quot;)' /&gt;"";
</code></pre>

<p>... That being said, you could just use JavaScript quotes:</p>

<pre><code>document.getElementById(""something"").innerHTML = ""&lt;img src='something' onmouseover='change(\""ex1\"")' /&gt;"";
</code></pre>
","16134951"
"How do I set the value property in AngularJS' ng-options?","384572","","<p>Here is what seems to be bothering a lot of people (including me).</p>

<p>When using the <code>ng-options</code> directive in AngularJS to fill in the options for a <code>&lt;select&gt;</code> tag, I cannot figure out how to set the value for an option. The documentation for this is really unclear - at least for a simpleton like me.</p>

<p>I can set the text for an option easily like so:</p>

<pre><code>ng-options=""select p.text for p in resultOptions""
</code></pre>

<p>When <code>resultOptions</code> is for example:</p>

<pre><code>[
    {
        ""value"": 1,
        ""text"": ""1st""
    },
    {
        ""value"": 2,
        ""text"": ""2nd""
    }
]
</code></pre>

<p>It should be (and probably is) the most simple thing to set the option values, but so far I just don't get it.</p>
","<blockquote>
  <p>See <em><a href=""http://docs.angularjs.org/api/ng.directive:select"">select</a></em></p>
  
  <p><strong>ngOptions(optional)</strong> – {<code>comprehension_expression=</code>} – in one of the
  following forms:</p>
  
  <p><em>For array data sources</em>:
  <code>label for value in array</code>
  <code>select as label for value in array</code>
  <code>label group by group for value in array</code>
  <code>select as label group by group for value in array track by trackexpr</code>
  <em>For object data sources:</em>
  <code>label for (key , value) in object</code>
  <code>select as label for (key , value) in object</code>
  <code>label group by group for (key, value) in object</code>
  <code>select as label group by group for (key, value) in object</code></p>
</blockquote>

<p>In your case, it should be</p>

<pre><code>array = [{ ""value"": 1, ""text"": ""1st"" }, { ""value"": 2, ""text"": ""2nd"" }];

&lt;select ng-options=""obj.value as obj.text for obj in array""&gt;&lt;/select&gt;
</code></pre>

<h2>Update</h2>

<p>With the updates on AngularJS, it is now possible to set the actual value for the <code>value</code> attribute of <code>select</code> element with <code>track by</code> expression.</p>

<pre><code>&lt;select ng-options=""obj.text for obj in array track by obj.value""&gt;
&lt;/select&gt;
</code></pre>

<h2>How to remember this ugly stuff</h2>

<p>To all the people who are having hard time to remember this syntax form: I agree this isn't the most easiest or beautiful syntax. This syntax is kind of an extended version of Python's list comprehensions and knowing that helps me to remember the syntax very easily. It's something like this:</p>

<p>Python code:</p>

<pre><code>my_list = [x**2 for x in [1, 2, 3, 4, 5]]
&gt; [1, 4, 9, 16, 25]

# Let people to be a list of person instances
my_list2 = [person.name for person in people]
&gt; my_list2 = ['Alice', 'Bob']
</code></pre>

<p>This is actually the same syntax as the first one listed above. However, in <code>&lt;select&gt;</code> we usually need to differentiate between the actual value in code and the text shown (the label) in a <code>&lt;select&gt;</code> element.</p>

<p>Like, we need <code>person.id</code> in the code, but we don't want to show the <code>id</code> to the user; we want to show its name. Likewise, we're not interested in the <code>person.name</code> in the code. There comes the <code>as</code> keyword to label stuff. So it becomes like this:</p>

<pre><code>person.id as person.name for person in people
</code></pre>

<p>Or, instead of <code>person.id</code> we could need the <code>person</code> instance/reference itself. See below:</p>

<pre><code>person as person.name for person in people
</code></pre>

<p>For JavaScript objects, the same method applies as well. Just remember that the items in the object is deconstructed with <code>(key, value)</code> pairs.</p>
","12140310"
"What is JSONP all about?","384314","","<p>I understand JSON, but not JSONP. <a href=""http://en.wikipedia.org/wiki/JSON"" rel=""noreferrer"">Wikipedia's document on JSON</a> is (was) the top search result for JSONP. It says this:</p>

<blockquote>
  <p>JSONP or ""JSON with padding"" is a JSON extension wherein a prefix is specified as an input argument of the call itself.</p>
</blockquote>

<p>Huh? What call? That doesn't make any sense to me. JSON is a data format. There's no call.</p>

<p>The <a href=""http://remysharp.com/2007/10/08/what-is-jsonp/"" rel=""noreferrer"">2nd search result</a> is from some guy named <a href=""https://stackoverflow.com/users/22617/remy-sharp"">Remy</a>, who writes this about JSONP:</p>

<blockquote>
  <p>JSONP is script tag injection, passing the response from the server in to a user specified function.</p>
</blockquote>

<p>I can sort of understand that, but it's still not making any sense.</p>

<hr>

<p>So what is JSONP? Why was it created (what problem does it solve)? And why would I use it? </p>

<hr>

<p><strong>Addendum</strong>: I've just created <a href=""http://en.wikipedia.org/wiki/JSONP"" rel=""noreferrer"">a new page for JSONP</a> on Wikipedia; it now has a clear and thorough description of JSONP, based on <a href=""https://stackoverflow.com/users/25330/jvenema"">jvenema</a>'s answer.</p>
","<p>It's actually not too complicated...</p>

<p>Say you're on domain example.com, and you want to make a request to domain example.net. To do so, you need to cross domain boundaries, a no-no in most of browserland. </p>

<p>The one item that bypasses this limitation is &lt;script&gt; tags. When you use a script tag, the domain limitation is ignored, but under normal circumstances, you can't really <strong>do</strong> anything with the results, the script just gets evaluated.</p>

<p>Enter JSONP. When you make your request to a server that is JSONP enabled, you pass a special parameter that tells the server a little bit about your page. That way, the server is able to nicely wrap up its response in a way that your page can handle. </p>

<p>For example, say the server expects a parameter called ""callback"" to enable its JSONP capabilities. Then your request would look like:</p>

<pre class=""lang-none prettyprint-override""><code>http://www.example.net/sample.aspx?callback=mycallback
</code></pre>

<p>Without JSONP, this might return some basic JavaScript object, like so:</p>

<pre><code>{ foo: 'bar' }
</code></pre>

<p>However, with JSONP, when the server receives the ""callback"" parameter, it wraps up the result a little differently, returning something like this:</p>

<pre><code>mycallback({ foo: 'bar' });
</code></pre>

<p>As you can see, it will now invoke the method you specified. So, in your page, you define the callback function:</p>

<pre><code>mycallback = function(data){
  alert(data.foo);
};
</code></pre>

<p>And now, when the script is loaded, it'll be evaluated, and your function will be executed. Voila, cross-domain requests!</p>

<p>It's also worth noting the one major issue with JSONP: you lose a lot of control of the request. For example, there is no ""nice"" way to get proper failure codes back. As a result, you end up using timers to monitor the request, etc, which is always a bit suspect. The proposition for <a href=""http://www.json.org/JSONRequest.html"" rel=""noreferrer"">JSONRequest</a> is a great solution to allowing cross domain scripting, maintaining security, and allowing proper control of the request.</p>

<p>These days (2015), <a href=""http://en.wikipedia.org/wiki/Cross-origin_resource_sharing"" rel=""noreferrer"">CORS</a> is the recommended approach vs. JSONRequest. JSONP is still useful for older browser support, but given the security implications, unless you have no choice CORS is the better choice.</p>
","2067584"
"How to check if a variable is an integer in JavaScript?","384007","","<p>How do I check if a variable is an integer in JavaScript, and throw an alert if it isn't?  I tried this, but it doesn't work:</p>

<pre><code>&lt;html&gt;
    &lt;head&gt;
        &lt;script type=""text/javascript""&gt;
            var data = 22;
            alert(NaN(data));
        &lt;/script&gt;
    &lt;/head&gt;
&lt;/html&gt;
</code></pre>
","<p>Use the === operator (<a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators#Identity_strict_equality_()"" rel=""nofollow noreferrer"">strict equality</a>) as below,</p>

<pre><code>if (data === parseInt(data, 10))
    alert(""data is integer"")
else
    alert(""data is not an integer"")
</code></pre>
","14636652"
"JQuery Ajax Post results in 500 Internal Server Error","383548","","<p>I am trying to perform this AJAX post but for some reason I am getting a server 500 error. I can see it hit break points in the controller. So the problem seems to be on the callback. Anyone?</p>

<pre><code>$.ajax({
type: ""POST"",
    url: ""InlineNotes/Note.ashx?id="" + noteid,
    data: ""{}"",
    dataType: ""json"",

    success: function(data) {
        alert(data[1]);
    },
    error: function(data){
    alert(""fail"");

    }

});
</code></pre>

<p>This is the string that should be returned :</p>

<pre><code>{status:'200', text: 'Something'}
</code></pre>
","<p>I suspect that the server method is throwing an exception after it passes your breakpoint.  Use Firefox/Firebug or the IE8 developer tools to look at the actual response you are getting from the server.  If there has been an exception you'll get the YSOD html, which should help you figure out where to look.</p>

<p>One more thing -- your data property should be {} not ""{}"", the former is an empty object while the latter is a string that is invalid as a query parameter.  Better yet, just leave it out if you aren't passing any data.</p>
","1349219"
"Uncaught TypeError: Cannot read property 'value' of undefined","383212","","<p>I have some javascript code that gives this error</p>

<pre><code>Uncaught TypeError: Cannot read property 'value' of undefined
</code></pre>

<p>Code:</p>

<pre><code>var i1 = document.getElementById('i1');
var i2 = document.getElementById('i2');
var __i = {'user' : document.getElementsByName(""username"")[0], 'pass' : document.getElementsByName(""password"")[0] };
if(  __i.user.value.length &gt;= 1 ) { i1.value = ''; } else { i1.value = 'Acc'; }

if(  __i.pass.value.length &gt;= 1 ) { i2.value = ''; } else { i2.value = 'Pwd'; }
</code></pre>

<p>What does this error mean?</p>
","<p>Seems like one of your values, with a property key of 'value' is undefined. Test that <code>i1</code>, <code>i2</code>and <code>__i</code> are defined before executing the if statements:</p>

<pre><code>var i1 = document.getElementById('i1');
var i2 = document.getElementById('i2');
var __i = {'user' : document.getElementsByName(""username"")[0], 'pass' : document.getElementsByName(""password"")[0] };
if(i1 &amp;&amp; i2 &amp;&amp; __i.user &amp;&amp; __i.pass)
{
    if(  __i.user.value.length &gt;= 1 ) { i1.value = ''; } else { i1.value = 'Acc'; }

    if(  __i.pass.value.length &gt;= 1 ) { i2.value = ''; } else { i2.value = 'Pwd'; }
}
</code></pre>
","6550881"
"Adding/removing items from JSON data with JQuery","383145","","<p>I have a JSON object as follows:</p>

<pre><code>var data = {items: [
    {id: ""1"", name: ""Snatch"", type: ""crime""},
    {id: ""2"", name: ""Witches of Eastwick"", type: ""comedy""},
    {id: ""3"", name: ""X-Men"", type: ""action""},
    {id: ""4"", name: ""Ordinary People"", type: ""drama""},
    {id: ""5"", name: ""Billy Elliot"", type: ""drama""},
    {id: ""6"", name: ""Toy Story"", type: ""children""}
]};
</code></pre>

<p>If I wanted to add/remove items to this list, how would I go about it using JQuery?  I know I can do this quite easily if we simply used an array, but the previous programmer already built the code using JSON, and now the client changed their mind at the last minute and wants this list to be dynamically modifiable.  I want to save time from re-writing all the code to use arrays instead of JSON, so wondering if anyone knows of a way to accomplish this, as I just can't seem to find much information about how to manipulate JSON with JQuery anywhere on the internet.</p>

<p>Many thanks!</p>
","<p>First off, your quoted code is <strong>not</strong> JSON. Your code is JavaScript object literal notation. <a href=""http://json.org"" rel=""noreferrer"">JSON</a> is a subset of that designed for easier parsing.</p>

<p>Your code defines an object (<code>data</code>) containing an array (<code>items</code>) of objects (each with an <code>id</code>, <code>name</code>, and <code>type</code>).</p>

<p>You don't need or want jQuery for this, just JavaScript.</p>

<p><strong>Adding an item:</strong></p>

<pre><code>data.items.push(
    {id: ""7"", name: ""Douglas Adams"", type: ""comedy""}
);
</code></pre>

<p>That adds to the end. See below for adding in the middle.</p>

<p><strong>Removing an item:</strong></p>

<p>There are several ways. The <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice"" rel=""noreferrer""><code>splice</code></a> method is the most versatile:</p>

<pre><code>data.items.splice(1, 3); // Removes three items starting with the 2nd,
                         // (""Witches of Eastwick"", ""X-Men"", ""Ordinary People"")
</code></pre>

<p><code>splice</code> modifies the original array, and returns an array of the items you removed.</p>

<p><strong>Adding in the middle:</strong></p>

<p><code>splice</code> actually does both adding and removing. The signature of the <code>splice</code> method is:</p>

<pre><code>removed_items = arrayObject.splice(index, num_to_remove[, add1[, add2[, ...]]]);
</code></pre>

<ul>
<li><code>index</code> - the index at which to start making changes</li>
<li><code>num_to_remove</code> - starting with that index, remove this many entries</li>
<li><code>addN</code> - ...and then insert these elements</li>
</ul>

<p>So I can add an item in the 3rd position like this:</p>

<pre><code>data.items.splice(2, 0,
    {id: ""7"", name: ""Douglas Adams"", type: ""comedy""}
);
</code></pre>

<p>What that says is: Starting at index 2, remove zero items, and then insert this following item. The result looks like this:</p>

<pre><code>var data = {items: [
    {id: ""1"", name: ""Snatch"", type: ""crime""},
    {id: ""2"", name: ""Witches of Eastwick"", type: ""comedy""},
    {id: ""7"", name: ""Douglas Adams"", type: ""comedy""},     // &lt;== The new item
    {id: ""3"", name: ""X-Men"", type: ""action""},
    {id: ""4"", name: ""Ordinary People"", type: ""drama""},
    {id: ""5"", name: ""Billy Elliot"", type: ""drama""},
    {id: ""6"", name: ""Toy Story"", type: ""children""}
]};
</code></pre>

<p>You can remove some and add some at once:</p>

<pre><code>data.items.splice(1, 3,
    {id: ""7"", name: ""Douglas Adams"", type: ""comedy""},
    {id: ""8"", name: ""Dick Francis"", type: ""mystery""}
);
</code></pre>

<p>...which means: Starting at index 1, remove three entries, then add these two entries. Which results in:</p>

<pre><code>var data = {items: [
    {id: ""1"", name: ""Snatch"", type: ""crime""},
    {id: ""7"", name: ""Douglas Adams"", type: ""comedy""},
    {id: ""8"", name: ""Dick Francis"", type: ""mystery""},
    {id: ""4"", name: ""Ordinary People"", type: ""drama""},
    {id: ""5"", name: ""Billy Elliot"", type: ""drama""},
    {id: ""6"", name: ""Toy Story"", type: ""children""}
]};
</code></pre>
","4538314"
"Failed to load resource: the server responded with a status of 404 (Not Found)","382692","","<p>I can't solve my link problem. Could you help on to this to link CSS and JS File?</p>

<p>CSS:</p>

<pre><code>&lt;link  href=""../Jquery/jquery.multiselect.css"" rel=""stylesheet""/&gt;
&lt;link  href=""../Jquery/style.css"" rel=""stylesheet"" /&gt;
&lt;link  href=""../Jquery/prettify.css"" rel=""stylesheet"" /&gt;
</code></pre>

<p>JS:</p>

<pre><code>&lt;script  src=""../Jquery/jquery.multiselect.js""&gt;&lt;/script&gt;
&lt;script  src=""../Jquery/prettify.js""&gt;&lt;/script&gt;
</code></pre>

<p>Error:</p>

<pre><code>Failed to load resource: the server responded with a status of 404 (Not Found) http://localhost:8080/RetailSmart/jsp/Jquery/jquery.multiselect.css
Failed to load resource: the server responded with a status of 404 (Not Found) http://localhost:8080/RetailSmart/jsp/Jquery/style.css
Failed to load resource: the server responded with a status of 404 (Not Found) http://localhost:8080/RetailSmart/jsp/Jquery/prettify.css
Failed to load resource: the server responded with a status of 404 (Not Found) http://localhost:8080/RetailSmart/jsp/Jquery/jquery.multiselect.js
Failed to load resource: the server responded with a status of 404 (Not Found) http://localhost:8080/RetailSmart/jsp/Jquery/prettify.js
</code></pre>

<p><a href=""https://www.dropbox.com/s/31pwda3u4is4qz0/link.png"">https://www.dropbox.com/s/31pwda3u4is4qz0/link.png</a> Refer this link Directory structure. </p>
","<p>Your files are not under the <strong>jsp folder</strong> that's why it is not found. 
You have to go back again 1 folder
Try this:</p>

<pre><code>     &lt;script  src=""../../Jquery/prettify.js""&gt;&lt;/script&gt;
</code></pre>
","22317358"
"How do I print debug messages in the Google Chrome JavaScript Console?","382131","","<p>How do I print debug messages in the Google Chrome JavaScript Console?</p>

<p>Please note that the JavaScript Console is not the same as the JavaScript Debugger; they have different syntaxes AFAIK, so the <strong>print</strong> command in JavaScript Debugger will not work here. In the JavaScript Console, <code>print()</code> will send the parameter to the printer.</p>
","<p>Executing following code from the browser address bar:</p>

<pre>
javascript: console.log(2);
</pre>

<p>successfully prints message to the ""JavaScript Console"" in Google Chrome.</p>
","217988"
"How to have a default option in Angular.js select box","382077","","<p>I have searched Google and can't find anything on this.</p>

<p>I have this code.</p>

<pre><code>&lt;select ng-model=""somethingHere"" 
        ng-options=""option.value as option.name for option in options""
&gt;&lt;/select&gt;
</code></pre>

<p>With some data like this </p>

<pre><code>options = [{
   name: 'Something Cool',
   value: 'something-cool-value'
}, {
   name: 'Something Else',
   value: 'something-else-value'
}];
</code></pre>

<p>And the output is something like this.</p>

<pre><code>&lt;select ng-model=""somethingHere""  
        ng-options=""option.value as option.name for option in options"" 
        class=""ng-pristine ng-valid""&gt;

    &lt;option value=""?"" selected=""selected""&gt;&lt;/option&gt;
    &lt;option value=""0""&gt;Something Cool&lt;/option&gt;
    &lt;option value=""1""&gt;Something Else&lt;/option&gt;
&lt;/select&gt;
</code></pre>

<p>How is it possible to set the first option in the data as the default value so you would get a result like this.</p>

<pre><code>&lt;select ng-model=""somethingHere"" ....&gt;
    &lt;option value=""0"" selected=""selected""&gt;Something Cool&lt;/option&gt;
    &lt;option value=""1""&gt;Something Else&lt;/option&gt;
&lt;/select&gt;
</code></pre>
","<p>You can simply use <a href=""http://docs.angularjs.org/api/ng.directive:ngInit"">ng-init</a> like this</p>

<pre><code>&lt;select ng-init=""somethingHere = options[0]"" 
        ng-model=""somethingHere"" 
        ng-options=""option.name for option in options""&gt;
&lt;/select&gt;
</code></pre>
","18195305"
"Create an empty object in JavaScript with {} or new Object()?","381829","","<p>There are <strong>two different</strong> ways to create an empty object in JavaScript:</p>

<pre><code>var objectA = {}
var objectB = new Object()
</code></pre>

<p>Is there any difference in how the script engine handles them? Is there any reason to use one over the other?</p>

<p>Similarly it is also possible to create an empty array using different syntax:</p>

<pre><code>var arrayA = []
var arrayB = new Array()
</code></pre>
","<h2>Objects</h2>

<p>There is no benefit to using <code>new Object();</code> -- whereas <code>{};</code> can make your code more compact, and more readable.</p>

<p>For defining empty objects they're technically the same.  The <code>{}</code> syntax is shorter, neater (less Java-ish), and allows you to instantly populate the object inline - like so:</p>

<pre><code>var myObject = {
        title:  'Frog',
        url:    '/img/picture.jpg',
        width:  300,
        height: 200
      };
</code></pre>

<h2>Arrays</h2>

<p>For arrays, there's similarly almost no benefit to ever using <code>new Array();</code> over <code>[];</code> -- with one minor exception:</p>

<pre><code>var emptyArray = new Array(100);
</code></pre>

<p>creates a 100 item long array with all slots containing <code>undefined</code> -- which may be  nice/useful in certain situations (such as <code>(new Array(9)).join('Na-Na ') + 'Batman!'</code>).</p>

<h2>My recommendation</h2>

<ol>
<li>Never use <code>new Object();</code> -- it's clunkier than '{}' and looks silly.</li>
<li>Always use <code>[];</code> -- except when you need to quickly create an ""empty"" array with a predefined length.</li>
</ol>
","252110"
"Is it possible to add dynamically named properties to JavaScript object?","381502","","<p>In JavaScript, I've created an object like so:</p>

<pre><code>var data = {
    'PropertyA': 1,
    'PropertyB': 2,
    'PropertyC': 3
};
</code></pre>

<p>Is it possible to add further properties to this object after it's initial creation if the properties name is not determined until run time? i.e.</p>

<pre><code>var propName = 'Property' + someUserInput
//imagine someUserInput was 'Z', how can I now add a 'PropertyZ' property to 
//my object?
</code></pre>
","<p>Yes.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var data = {
    'PropertyA': 1,
    'PropertyB': 2,
    'PropertyC': 3
};

data[""PropertyD""] = 4;

// dialog box with 4 in it
alert(data.PropertyD);
alert(data[""PropertyD""]);</code></pre>
</div>
</div>
</p>
","1184130"
"How to measure time taken by a function to execute","381004","","<p>I need to get execution time in milliseconds.</p>

<blockquote>
  <p>I originally asked this question back in 2008. The accepted answer
  then was to use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime"" rel=""noreferrer"">new Date().getTime()</a> However, we can all agree now 
  that using the standard <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Performance.now"" rel=""noreferrer"">performance.now()</a> API is more
  appropriate. I am therefore changing the accepted answer to this one.</p>
</blockquote>
","<p>You can use <strong><a href=""https://developer.mozilla.org/en-US/docs/DOM/console.time"" rel=""noreferrer"">console.time</a></strong>: <em>(non-standard)</em></p>

<pre><code>console.time('someFunction');

someFunction(); // run whatever needs to be timed in between the statements

console.timeEnd('someFunction');
</code></pre>

<p><strong><em>Note</strong>:</em> <br>The string being pass to the <code>time()</code> and <code>timeEnd()</code> methods must match<br>(for <em>the timer to finish as expected).</em></p>

<p><br></p>

<h3>Update</h3>

<p>You could use the standard <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Performance.now"" rel=""noreferrer""><strong>performance.now()</strong></a> API, like so:</p>

<pre><code>var t0 = performance.now();
doSomething();
var t1 = performance.now();
console.log(""Call to doSomething took "" + (t1 - t0) + "" milliseconds."")
</code></pre>
","1975103"
"How to output integers with leading zeros in JavaScript","380784","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/1267283/how-can-i-create-a-zerofilled-value-using-javascript"">How can I create a Zerofilled value using JavaScript?</a>  </p>
</blockquote>



<p>I can round to  x amount of decimal places with math.round but is there a way to round left of the decimal? for example 5 becomes 05 if I specify 2 places </p>
","<blockquote>
  <p><em>NOTE</em>: Potentially outdated. ECMAScript 2017 includes <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart"" rel=""noreferrer"">String.prototype.padStart</a></p>
</blockquote>

<p>You're asking for zero padding? Not really rounding. You'll have to convert it to a string since numbers don't make sense with leading zeros. Something like this...</p>

<pre><code>function pad(num, size) {
    var s = num+"""";
    while (s.length &lt; size) s = ""0"" + s;
    return s;
}
</code></pre>

<p>Or if you know you'd never be using more than X number of zeros this might be better. This assumes you'd never want more than 10 digits.</p>

<pre><code>function pad(num, size) {
    var s = ""000000000"" + num;
    return s.substr(s.length-size);
}
</code></pre>

<p>If you care about negative numbers you'll have to strip the ""-"" and readd it.</p>
","2998822"
"Graph visualization library in JavaScript","380247","","<p>I have a data structure that represents a directed graph, and I want to render that dynamically on an HTML page.  These graphs will usually be just a few nodes, maybe ten at the very upper end, so my guess is that performance isn't going to be a big deal. Ideally, I'd like to be able to hook it in with jQuery so that users can tweak the layout manually by dragging the nodes around.</p>

<p>Note: I'm not looking for a charting library.</p>
","<p>I've just put together what you may be looking for: <a href=""http://www.graphdracula.net"" rel=""noreferrer"">http://www.graphdracula.net</a></p>

<p>It's JavaScript with directed graph layouting, SVG and you can even drag the nodes around. Still needs some tweaking, but is totally usable. You create nodes and edges easily with JavaScript code like this:</p>

<pre><code>var g = new Graph();
g.addEdge(""strawberry"", ""cherry"");
g.addEdge(""cherry"", ""apple"");
g.addEdge(""id34"", ""cherry"");
</code></pre>

<p>I used the previously mentioned Raphael JS library (the graffle example) plus some code for a force based graph layout algorithm I found on the net (everything open source, MIT license). If you have any remarks or need a certain feature, I may implement it, just ask!</p>

<hr>

<p>You may want to have a look at other projects, too! Below are two meta-comparisons:</p>

<ul>
<li><p><a href=""http://socialcompare.com/en/comparison/javascript-graphs-and-charts-libraries"" rel=""noreferrer"">SocialCompare</a> has an extensive list of libraries, and the ""Node / edge graph"" line will filter for graph visualization ones.</p></li>
<li><p>DataVisualization.ch has evaluated many libraries, including node/graph ones. Unfortunately there's no direct link so you'll have to filter for ""graph"":<a href=""http://selection.datavisualization.ch/"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/o4lwD.jpg"" alt=""Selection DataVisualization.ch""></a></p></li>
</ul>

<p>Here's a list of similar projects (some have been already mentioned here):</p>

<h3>Pure JavaScript Libraries</h3>

<ul>
<li><p><a href=""http://visjs.org/#gallery"" rel=""noreferrer"">vis.js</a> supports many types of network/edge graphs, plus timelines and 2D/3D charts. Auto-layout, auto-clustering, springy physics engine, mobile-friendly, keyboard navigation, hierarchical layout, animation etc. <a href=""https://github.com/almende/vis"" rel=""noreferrer"">MIT licensed</a> and developed by a Dutch firm specializing in research on self-organizing networks.</p></li>
<li><p><a href=""http://js.cytoscape.org"" rel=""noreferrer"">Cytoscape.js</a> - interactive graph analysis and visualization with mobile support, following jQuery conventions. Funded via NIH grants and developed by by <a href=""https://stackoverflow.com/users/947225/maxkfranz"">@maxkfranz</a> (see <a href=""https://stackoverflow.com/a/10319429/1269037"">his answer below</a>) with help from several universities and other organizations.</p></li>
<li><p><a href=""http://thejit.org/demos.html"" rel=""noreferrer"">The JavaScript InfoVis Toolkit</a> - Jit, an interactive, multi-purpose graph drawing and layout framework. See for example the <a href=""http://philogb.github.io/jit/static/v20/Docs/files/Visualizations/Hypertree-js.html"" rel=""noreferrer"">Hyperbolic Tree</a>. Built by Twitter dataviz architect <a href=""http://www.sencha.com/conference/session/sencha-charting-visualization"" rel=""noreferrer"">Nicolas Garcia Belmonte</a> and <a href=""http://philogb.github.io/infovis/"" rel=""noreferrer"">bought by Sencha</a> in 2010.</p></li>
<li><p><a href=""http://d3js.org/"" rel=""noreferrer"">D3.js</a> Powerful multi-purpose JS visualization library, the successor of Protovis. See the <a href=""http://bl.ocks.org/mbostock/4062045"" rel=""noreferrer"">force-directed graph</a> example, and other graph examples in the <a href=""https://github.com/mbostock/d3/wiki/Gallery"" rel=""noreferrer"">gallery</a>.</p></li>
<li><p><a href=""https://plot.ly./"" rel=""noreferrer"">Plotly's</a> JS visualization library uses D3.js with JS, Python, R, and MATLAB bindings. See a nexworkx example in IPython <a href=""https://plot.ly/ipython-notebooks/network-graphs/"" rel=""noreferrer"">here</a>, human interaction example <a href=""https://plot.ly/ipython-notebooks/bioinformatics/#In-[54]"" rel=""noreferrer"">here</a>, and <a href=""https://github.com/plotly/Embed-API"" rel=""noreferrer"">JS Embed API</a>.</p></li>
<li><p><a href=""http://sigmajs.org/"" rel=""noreferrer"">sigma.js</a> Lightweight but powerful library for drawing graphs</p></li>
<li><p><a href=""http://jsplumbtoolkit.com/"" rel=""noreferrer"">jsPlumb</a> jQuery plug-in for creating interactive connected graphs</p></li>
<li><p><a href=""http://getspringy.com/"" rel=""noreferrer"">Springy</a> - a force-directed graph layout algorithm</p></li>
<li><p><a href=""http://processingjs.org/"" rel=""noreferrer"">Processing.js</a> Javascript port of the Processing library by John Resig</p></li>
<li><p><a href=""http://js-graph-it.sourceforge.net/"" rel=""noreferrer"">JS Graph It</a> - drag'n'drop boxes connected by straight lines. Minimal auto-layout of the lines.</p></li>
<li><p><a href=""http://raphaeljs.com/graffle.html"" rel=""noreferrer"">RaphaelJS's Graffle</a> - interactive graph example of a generic multi-purpose vector drawing library. RaphaelJS can't layout nodes automatically; you'll need another library for that.</p></li>
<li><p><a href=""http://www.jointjs.com/demos"" rel=""noreferrer"">JointJS Core</a> - David Durman's MPL-licensed open source diagramming library. It can be used to create either static diagrams or fully interactive diagramming tools and application builders. Works in browsers supporting SVG. Layout algorithms not-included in the core package</p></li>
<li><p><a href=""https://github.com/jgraph/mxgraph"" rel=""noreferrer"">mxGraph</a> Previously commercial HTML 5 diagramming library, now available under Apache v2.0. mxGraph is the base library used in <a href=""https://www.draw.io?splash=0"" rel=""noreferrer"">draw.io</a>.</p></li>
</ul>

<h3>Commercial libraries</h3>

<ul>
<li><p><a href=""http://gojs.net/latest/index.html"" rel=""noreferrer"">GoJS</a> Interactive graph drawing and layout library</p></li>
<li><p><a href=""http://www.yworks.com/yfileshtml"" rel=""noreferrer"">yFiles for HTML</a> Commercial graph drawing and layout library</p></li>
<li><p><a href=""http://keylines.com/"" rel=""noreferrer"">KeyLines</a> Commercial JS network visualization toolkit</p></li>
<li><p><a href=""https://zoomcharts.com"" rel=""noreferrer"">ZoomCharts</a> Commercial multi-purpose visualization library</p></li>
</ul>

<h3>Abandoned libraries</h3>

<ul>
<li><p><a href=""http://cytoscapeweb.cytoscape.org/"" rel=""noreferrer"">Cytoscape Web</a> Embeddable JS Network viewer (no new features planned; succeeded by Cytoscape.js)</p></li>
<li><p><a href=""http://code.google.com/p/canviz/"" rel=""noreferrer"">Canviz</a> JS <strong>renderer</strong> for Graphviz graphs. <a href=""https://code.google.com/p/canviz/source/list"" rel=""noreferrer"">Abandoned</a> in Sep 2013.</p></li>
<li><p><a href=""http://arborjs.org/"" rel=""noreferrer"">arbor.js</a> Sophisticated graphing with nice physics and eye-candy. Abandoned in May 2012. Several <a href=""https://github.com/samizdatco/arbor/issues/56#issuecomment-62842532"" rel=""noreferrer"">semi-maintained</a> forks exist.</p></li>
<li><p><a href=""http://github.com/jackrusher/jssvggraph"" rel=""noreferrer"">jssvggraph</a> ""The simplest possible force directed graph layout algorithm implemented as a Javascript library that uses SVG objects"". Abandoned in 2012.</p></li>
<li><p><a href=""https://code.google.com/p/jsdot/"" rel=""noreferrer"">jsdot</a> Client side graph drawing application. <a href=""https://code.google.com/p/jsdot/source/list"" rel=""noreferrer"">Abandoned in 2011</a>.</p></li>
<li><p><a href=""http://vis.stanford.edu/protovis/ex/force.html"" rel=""noreferrer"">Protovis</a> Graphical Toolkit for Visualization (JavaScript). Replaced by d3.</p></li>
<li><p><a href=""http://labs.unwieldy.net/moowheel/"" rel=""noreferrer"">Moo Wheel</a> Interactive JS representation for connections and relations (2008)</p></li>
<li><p><a href=""http://www.jsviz.org/"" rel=""noreferrer"">JSViz</a> 2007-era graph visualization script</p></li>
<li><p><a href=""https://github.com/cpettitt/dagre"" rel=""noreferrer"">dagre</a> Graph layout for JavaScript</p></li>
</ul>

<h3>Non-Javascript Libraries</h3>

<ul>
<li><p><a href=""http://www.graphviz.org/"" rel=""noreferrer"">Graphviz</a> Sophisticated graph visualization language</p>

<ul>
<li>Graphviz has been compiled to Javascript using Emscripten <a href=""https://github.com/mdaines/viz.js/"" rel=""noreferrer"">here</a> with an <a href=""http://mdaines.github.io/viz.js/"" rel=""noreferrer"">online interactive demo here</a></li>
</ul></li>
<li><p><a href=""http://flare.prefuse.org/"" rel=""noreferrer"">Flare</a> Beautiful and powerful Flash based graph drawing</p></li>
<li><p><a href=""http://nodebox.net/code/index.php/Graph"" rel=""noreferrer"">NodeBox</a> Python Graph Visualization</p></li>
</ul>
","2366237"
"Uncaught TypeError: undefined is not a function on loading jquery-min.js","380197","","<p>I'm building a normal webpage which requires me to load about five CSS files and ten Javascript files.</p>

<ul>
<li>When loading them separately in the HTML page, my webpage loads fine.</li>
<li><p>Now for production, I concatenated all the Javascript into a single file, in the order needed, and all the CSS into another file. But when I try to run the web page with the concatenated files it throws an error saying:</p>

<p><code>Uncaught TypeError: undefined is not a function</code></p></li>
</ul>

<p>On the line where jquery.min.js is being loaded in the concatenated Javascript file.</p>

<p>What can I do to mitigate this? I want to concatenate all files and minify them for production. Please help.</p>

<p><br>
<strong>EDIT:</strong> I merged the Javascript and CSS in the order they were when they were being loaded individually and were working fine.</p>
","<p>Assuming this problem still has not be resolved, a lot of individual files don't end their code with a semicolon. Most jQuery scripts end with <code>(jQuery)</code> and you need to have <code>(jQuery);</code>.</p>

<p>As separate files the script will load just fine but as one individual file you need the semicolons.</p>
","10884087"
"How to detect if JavaScript is disabled?","379954","","<p>There was a post this morning asking about how many people disable JavaScript. Then I began to wonder what techniques might be used to determine if the user has it disabled. </p>

<p>Does anyone know of some short/simple ways to detect if JavaScript is disabled? My intention is to give a warning that the site is not able to function properly without the browser having JS enabled. </p>

<p>Eventually I would want to redirect them to content that is able to work in the absence of JS, but I need this detection as a placeholder to start.</p>
","<p>I assume that you're trying to decide whether or not to deliver JavaScript-enhanced content.  The best implementations degrade cleanly, so that the site still operates without JavaScript. I also assume that you mean server-side detection, rather than using the <code>&lt;noscript&gt;</code> element for an unexplained reason.</p>

<p>There is not a good way to perform server-side JavaScript detection. As an alternative it is possible to set a cookie using JavaScript, and then test for that cookie using server-side scripting upon subsequent page views.  However this would not be suitable for deciding what content to deliver as it would not be able to distinguish visitors without the cookie from new visitors or visitors who are blocking cookies. </p>
","121259"
"Why does Date.parse give incorrect results?","379821","","<h3>Case One:</h3>

<pre><code>new Date(Date.parse(""Jul 8, 2005""));
</code></pre>

<h3>Output:</h3>

<p>Fri Jul 08 2005 00:00:00 GMT-0700 (PST)</p>

<h3>Case Two:</h3>

<pre><code>new Date(Date.parse(""2005-07-08""));
</code></pre>

<h3>Output:</h3>

<p>Thu Jul 07 2005 17:00:00 GMT-0700 (PST)</p>

<hr />

<p>Why is the second parse incorrect?</p>
","<p>Until the 5th edition spec came out, the <a href=""http://bclary.com/2004/11/07/#a-15.9.4.2"" rel=""noreferrer""><code>Date.parse</code></a> method was completely <em>implementation dependent</em> (<code>new Date(string)</code> is equivalent to <a href=""http://bclary.com/2004/11/07/#a-15.9.4.2"" rel=""noreferrer""><code>Date.parse(string)</code></a> except the latter returns a number rather than a <code>Date</code>). In the 5th edition spec the requirement was added to support a <a href=""http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15"" rel=""noreferrer"">simplified <em>(and slightly incorrect)</em> ISO-8601</a>, but other than that, there was <em>no</em> requirement for what <code>Date.parse</code> / <code>new Date(string)</code> should accept other than that they had to accept whatever <code>Date#toString</code> output (without saying what that was).</p>

<p>I would recommend you to parse your date string manually, and use the <a href=""http://bclary.com/2004/11/07/#a-15.9.3.1"" rel=""noreferrer"">Date constructor</a> with the year, month and day arguments to avoid ambiguity:</p>

<pre><code>// parse a date in yyyy-mm-dd format
function parseDate(input) {
  var parts = input.split('-');
  // new Date(year, month [, day [, hours[, minutes[, seconds[, ms]]]]])
  return new Date(parts[0], parts[1]-1, parts[2]); // Note: months are 0-based
}
</code></pre>
","2587398"
"What is the purpose of Node.js module.exports and how do you use it?","379716","","<p>What is the purpose of Node.js module.exports and how do you use it?</p>

<p>I can't seem to find any information on this, but it appears to be a rather important part of Node.js as I often see it in source code.  </p>

<p>According to the <a href=""http://nodejs.org/docs/v0.4.2/api/globals.html#module"" rel=""noreferrer"">Node.js documentation</a>:</p>

<blockquote>
  <p><strong>module</strong> </p>
  
  <p>A reference to the current
  <code>module</code>. In particular <code>module.exports</code>
  is the same as the exports object. See
  <code>src/node.js</code> for more information.</p>
</blockquote>

<p>But this doesn't really help.</p>

<p>What exactly does <code>module.exports</code> do, and what would a simple example be?</p>
","<p><a href=""http://nodejs.org/api/modules.html#modules_module_exports"" rel=""noreferrer""><code>module.exports</code></a> is the object that's actually returned as the result of a <code>require</code> call.</p>

<p>The <code>exports</code> variable is initially set to that same object (i.e. it's a shorthand ""alias""), so in the module code you would usually write something like this:</p>

<pre><code>var myFunc1 = function() { ... };
var myFunc2 = function() { ... };
exports.myFunc1 = myFunc1;
exports.myFunc2 = myFunc2;
</code></pre>

<p>to export (or ""expose"") the internally scoped functions <code>myFunc1</code> and <code>myFunc2</code>.</p>

<p>And in the calling code you would use:</p>

<pre><code>var m = require('mymodule');
m.myFunc1();
</code></pre>

<p>where the last line shows how the result of <code>require</code> is (usually) just a plain object whose properties may be accessed.</p>

<p>NB: if you overwrite <code>exports</code> then it will no longer refer to <code>module.exports</code>.  So if you wish to assign a new object (or a function reference) to <code>exports</code> then you should also assign that new object to <code>module.exports</code></p>

<hr>

<p>It's worth noting that the name added to the <code>exports</code> object does not have to be the same as the module's internally scoped name for the value that you're adding, so you could have:</p>

<pre><code>var myVeryLongInternalName = function() { ... };
exports.shortName = myVeryLongInternalName;
// add other objects, functions, as required
</code></pre>

<p>followed by:</p>

<pre><code>var m = require('mymodule');
m.shortName(); // invokes module.myVeryLongInternalName
</code></pre>
","5311377"
"How do I create a new line in Javascript?","379132","","<pre><code>var i;
for(i=10; i&gt;=0; i= i-1){
   var s;
   for(s=0; s&lt;i; s = s+1){
    document.write(""*"");
   }
   //i want this to print a new line
   /document.write(?);

}
</code></pre>

<p>I am printing a pyramid of stars, I can't get the new line to print.</p>
","<p>Use the <code>\n</code> for a newline character.</p>

<pre><code>document.write(""\n"");
</code></pre>

<p>You can also have more than one:</p>

<pre><code>document.write(""\n\n\n""); // 3 new lines!  My oh my!
</code></pre>

<p>However, if this is rendering to HTML, you will want to use the HTML tag for a newline:</p>

<pre><code>document.write(""&lt;br&gt;"");
</code></pre>

<p>The string <code>Hello\n\nTest</code> in your source will look like this:</p>

<pre><code>Hello!

Test
</code></pre>

<p>The string <code>Hello&lt;br&gt;&lt;br&gt;Test</code> will look like this in HTML source:</p>

<pre><code>Hello&lt;br&gt;&lt;br&gt;Test
</code></pre>

<p>The HTML one will render as line breaks for the person viewing the page, the <code>\n</code> just drops the text to the next line in the source (if it's on an HTML page).</p>
","5758185"
"Error: Can't set headers after they are sent to the client","379113","","<p>I'm fairly new to Node.js and I am having some issues.</p>

<p>I am using Node.js 4.10 and Express 2.4.3.</p>

<p>When I try to access <a href=""http://127.0.0.1:8888/auth/facebook"" rel=""noreferrer"">http://127.0.0.1:8888/auth/facebook</a>, i'll be redirected to <a href=""http://127.0.0.1:8888/auth/facebook_callback"" rel=""noreferrer"">http://127.0.0.1:8888/auth/facebook_callback</a>.</p>

<p>I then received the following error:</p>

<pre><code>Error: Can't render headers after they are sent to the client.
    at ServerResponse.&lt;anonymous&gt; (http.js:573:11)
    at ServerResponse._renderHeaders (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/patch.js:64:25)
    at ServerResponse.writeHead (http.js:813:20)
    at /home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/auth.strategies/facebook.js:28:15
    at /home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/index.js:113:13
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/strategyExecutor.js:45:39)
    at [object Object].pass (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/authExecutionScope.js:32:3)
    at [object Object].halt (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/authExecutionScope.js:29:8)
    at [object Object].redirect (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/authExecutionScope.js:16:8)
    at [object Object].&lt;anonymous&gt; (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/auth.strategies/facebook.js:77:15)
Error: Can't set headers after they are sent.
    at ServerResponse.&lt;anonymous&gt; (http.js:527:11)
    at ServerResponse.setHeader (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/patch.js:50:20)
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:162:13)
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:195:11)
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:150:23)
    at param (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/router.js:189:13)
    at pass (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/router.js:191:10)
    at Object.router [as handle] (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/router.js:197:6)
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:198:15)
    at Object.auth [as handle] (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/index.js:153:7)
Error: Can't set headers after they are sent.
    at ServerResponse.&lt;anonymous&gt; (http.js:527:11)
    at ServerResponse.setHeader (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/patch.js:50:20)
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:162:13)
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:207:9)
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:150:23)
    at param (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/router.js:189:13)
    at pass (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/router.js:191:10)
    at Object.router [as handle] (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/router.js:197:6)
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:198:15)
    at Object.auth [as handle] (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/index.js:153:7)
Error: Can't set headers after they are sent.
    at ServerResponse.&lt;anonymous&gt; (http.js:527:11)
    at ServerResponse.setHeader (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/patch.js:50:20)
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:162:13)
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:150:23)
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:207:9)
    at Object.auth [as handle] (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/index.js:153:7)
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:198:15)
    at HTTPServer.handle (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:211:3)
    at Object.handle (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:105:14)
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:198:15)
Error: Can't set headers after they are sent.
    at ServerResponse.&lt;anonymous&gt; (http.js:527:11)
    at ServerResponse.setHeader (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/patch.js:50:20)
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:162:13)
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:150:23)
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:207:9)
    at HTTPServer.handle (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:211:3)
    at Object.handle (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:105:14)
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:198:15)
    at /home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/session.js:323:9
    at /home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/session.js:338:9

node.js:134
        throw e; // process.nextTick error, or 'error' event on first tick
        ^
Error: Can't set headers after they are sent.
    at ServerResponse.&lt;anonymous&gt; (http.js:527:11)
    at ServerResponse.setHeader (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/patch.js:50:20)
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:162:13)
    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:207:9)
    at /home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/session.js:323:9
    at /home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/session.js:338:9
    at Array.&lt;anonymous&gt; (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/session/memory.js:57:7)
    at EventEmitter._tickCallback (node.js:126:26)
</code></pre>

<p>The following is my code:</p>

<pre><code>var fbId= ""XXX"";
var fbSecret= ""XXXXXX"";
var fbCallbackAddress= ""http://127.0.0.1:8888/auth/facebook_callback""

var cookieSecret = ""node"";     // enter a random hash for security

var express= require('express');
var auth = require('connect-auth')
var app = express.createServer();


app.configure(function(){
    app.use(express.bodyParser());
    app.use(express.methodOverride());
    app.use(express.cookieParser());
    app.use(express.session({secret: cookieSecret}));
    app.use(auth([
        auth.Facebook({
            appId : fbId,
            appSecret: fbSecret,
            callback: fbCallbackAddress,
            scope: 'offline_access,email,user_about_me,user_activities,manage_pages,publish_stream',
            failedUri: '/noauth'
        })
    ]));
    app.use(app.router);
});


app.get('/auth/facebook', function(req, res) {
  req.authenticate(""facebook"", function(error, authenticated) {
    if (authenticated) {
      res.redirect(""/great"");
      console.log(""ok cool."");
      console.log(res['req']['session']);
    }
  });
});

app.get('/noauth', function(req, res) {
  console.log('Authentication Failed');
  res.send('Authentication Failed');
});

app.get('/great', function( req, res) {
  res.send('Supercoolstuff');
});

app.listen(8888);
</code></pre>

<p>May I know what is wrong with my code?</p>
","<p>The <code>res</code> object in Express is a subclass of <a href=""http://nodejs.org/docs/latest/api/http.html#http.ServerResponse"" rel=""noreferrer"">Node.js's <code>http.ServerResponse</code></a> (<a href=""https://github.com/joyent/node/blob/master/lib/http.js"" rel=""noreferrer"">read the http.js source</a>). You are allowed to call <code>res.setHeader(name, value)</code> as often as you want until you call <code>res.writeHead(statusCode)</code>. After <code>writeHead</code>, the headers are baked in and you can only call <code>res.write(data)</code>, and finally <code>res.end(data)</code>.</p>

<p>The error ""Error: Can't set headers after they are sent."" means that you're already in the Body or Finished state, but some function tried to set a header or statusCode. When you see this error, try to look for anything that tries to send a header after some of the body has already been written. For example, look for callbacks that are accidentally called twice, or any error that happens after the body is sent.</p>

<p>In your case, you called <code>res.redirect()</code>, which caused the response to become Finished. Then your code threw an error (<code>res.req</code> is <code>null</code>). and since the error happened within your actual <code>function(req, res, next)</code> (not within a callback), Connect was able to catch it and then tried to send a 500 error page. But since the headers were already sent, Node.js's <code>setHeader</code> threw the error that you saw.</p>

<h1>Comprehensive list of Node.js/Express response methods and when they must be called:</h1>

<p>Response must be in <strong>Head</strong> and remains in <strong>Head</strong>:</p>

<ol>
<li><a href=""http://nodejs.org/docs/latest/api/http.html#response.writeContinue"" rel=""noreferrer""><code>res.writeContinue()</code></a></li>
<li><a href=""http://nodejs.org/docs/latest/api/http.html#response.statusCode"" rel=""noreferrer""><code>res.statusCode = 404</code></a></li>
<li><a href=""http://nodejs.org/docs/latest/api/http.html#response.setHeader"" rel=""noreferrer""><code>res.setHeader(name, value)</code></a></li>
<li><a href=""http://nodejs.org/docs/latest/api/http.html#response.getHeader"" rel=""noreferrer""><code>res.getHeader(name)</code></a></li>
<li><a href=""http://nodejs.org/docs/latest/api/http.html#response.removeHeader"" rel=""noreferrer""><code>res.removeHeader(name)</code></a></li>
<li><a href=""http://expressjs.com/guide.html#res.header%28%29"" rel=""noreferrer""><code>res.header(key[, val])</code></a> (Express only)</li>
<li><a href=""http://expressjs.com/guide.html#res.charset"" rel=""noreferrer""><code>res.charset = 'utf-8'</code></a> (Express only; only affects Express-specific methods)</li>
<li><a href=""http://expressjs.com/guide.html#res.contenttype%28%29"" rel=""noreferrer""><code>res.contentType(type)</code></a> (Express only)</li>
</ol>

<p>Response must be in <strong>Head</strong> and becomes <strong>Body</strong>:</p>

<ol>
<li><a href=""http://nodejs.org/docs/latest/api/http.html#response.writeHead"" rel=""noreferrer""><code>res.writeHead(statusCode, [reasonPhrase], [headers])</code></a></li>
</ol>

<p>Response can be in either <strong>Head/Body</strong> and remains in <strong>Body</strong>:</p>

<ol>
<li><a href=""http://nodejs.org/docs/latest/api/http.html#response.write"" rel=""noreferrer""><code>res.write(chunk, encoding='utf8')</code></a></li>
</ol>

<p>Response can be in either <strong>Head/Body</strong> and becomes <strong>Finished</strong>:</p>

<ol>
<li><a href=""http://nodejs.org/docs/latest/api/http.html#response.end"" rel=""noreferrer""><code>res.end([data], [encoding])</code></a></li>
</ol>

<p>Response can be in either <strong>Head/Body</strong> and remains in its current state:</p>

<ol>
<li><a href=""http://nodejs.org/docs/latest/api/http.html#response.addTrailers"" rel=""noreferrer""><code>res.addTrailers(headers)</code></a></li>
</ol>

<p>Response must be in <strong>Head</strong> and becomes <strong>Finished</strong>:</p>

<ol>
<li><code>return next([err])</code> (Connect/Express only)</li>
<li>Any exceptions within middleware <code>function(req, res, next)</code> (Connect/Express only)</li>
<li><a href=""http://expressjs.com/guide.html#res.attachment%28%29"" rel=""noreferrer""><code>res.send(body|status[, headers|status[, status]])</code></a> (Express only)</li>
<li><a href=""http://expressjs.com/guide.html#res.attachment%28%29"" rel=""noreferrer""><code>res.attachment(filename)</code></a> (Express only)</li>
<li><a href=""http://expressjs.com/guide.html#res.attachment%28%29"" rel=""noreferrer""><code>res.sendfile(path[, options[, callback]])</code></a> (Express only)</li>
<li><a href=""http://expressjs.com/guide.html#res.attachment%28%29"" rel=""noreferrer""><code>res.json(obj[, headers|status[, status]])</code></a> (Express only)</li>
<li><a href=""http://expressjs.com/guide.html#res.redirect%28%29"" rel=""noreferrer""><code>res.redirect(url[, status])</code></a> (Express only)</li>
<li><a href=""http://expressjs.com/guide.html#res.cookie%28%29"" rel=""noreferrer""><code>res.cookie(name, val[, options])</code></a> (Express only)</li>
<li><a href=""http://expressjs.com/guide.html#res.clearCookie%28%29"" rel=""noreferrer""><code>res.clearCookie(name[, options])</code></a> (Express only)</li>
<li><a href=""http://expressjs.com/guide.html#res.clearCookie%28%29"" rel=""noreferrer""><code>res.render(view[, options[, fn]])</code></a> (Express only)</li>
<li><a href=""http://expressjs.com/guide.html#res.partial%28%29"" rel=""noreferrer""><code>res.partial(view[, options])</code></a> (Express only)</li>
</ol>
","7086621"
"Dynamically creating keys in JavaScript associative array","377973","","<p>How can I dynamically create keys in javascript associative arrays? </p>

<p>All the documentation I've found so far is to update keys that are already created:</p>

<pre><code> arr['key'] = val;
</code></pre>

<p>I have a string like this <code>"" name =  oscar ""</code></p>

<p>And I want to end up with something like this:</p>

<pre><code>{ name: 'whatever' }
</code></pre>

<p>That is I split the string and get the first element, and I want to put that in a dictionary.</p>

<h3>Code</h3>

<pre><code>var text = ' name = oscar '
var dict = new Array();
var keyValuePair = text.split(' = ');
dict[ keyValuePair[0] ] = 'whatever';
alert( dict ); // prints nothing.
</code></pre>
","<p>Use the first example.  If the key doesn't exist it will be added.</p>

<pre><code>var a = new Array();
a['name'] = 'oscar';
alert(a['name']);
</code></pre>

<p>Will pop up a message box containing 'oscar'.</p>

<p>Try:</p>

<pre><code>var text = 'name = oscar'
var dict = new Array()
var keyValuePair = text.replace(/ /g,'').split('=');
dict[ keyValuePair[0] ] = keyValuePair[1];
alert( dict[keyValuePair[0]] );
</code></pre>
","351507"
"Get all non-unique values (i.e.: duplicate/more than one occurrence) in an array","377767","","<p>I need to check a JavaScript array to see if there are any duplicate values. What's the easiest way to do this? I just need to find what the duplicated values are - I don't actually need their indexes or how many times they are duplicated.</p>

<p>I know I can loop through the array and check all the other values for a match, but it seems like there should be an easier way. Any ideas? Thanks!</p>

<h3>Similar question:</h3>

<ul>
<li><a href=""https://stackoverflow.com/questions/1960473"">Get all unique values in an array (remove duplicates)</a></li>
</ul>
","<p>You could sort the array and then run through it and then see if the next (or previous) index is the same as the current. Assuming your sort algorithm is good, this should be less than O(n<sup>2</sup>):</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var arr = [9, 9, 111, 2, 3, 4, 4, 5, 7];
var sorted_arr = arr.slice().sort(); // You can define the comparing function here. 
                                     // JS by default uses a crappy string compare.
                                     // (we use slice to clone the array so the
                                     // original array won't be modified)
var results = [];
for (var i = 0; i &lt; sorted_arr.length - 1; i++) {
    if (sorted_arr[i + 1] == sorted_arr[i]) {
        results.push(sorted_arr[i]);
    }
}

console.log(results);</code></pre>
</div>
</div>
</p>
","840808"
"parse float with two decimal places","377543","","<p>I have the following code. I would like to have it such that if price_result equals an integer, let's say 10, then I would like to add two decimal places. So 10 would be 10.00.
Or if it equals 10.6 would be 10.60. Not sure how to do this.</p>

<pre><code>price_result = parseFloat(test_var.split('$')[1].slice(0,-1));
</code></pre>
","<p>You can use <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Number/toFixed"" rel=""noreferrer"">toFixed()</a> to do that</p>

<pre><code>var twoPlacedFloat = parseFloat(yourString).toFixed(2)
</code></pre>
","4435190"
"How can I check if a javascript variable is function type?","377301","","<p>Suppose I have any variable, which is defined as follows:</p>

<pre><code>var a = function() {/* Statements */};
</code></pre>

<p>I want a function which checks if the type of the variable is function-like. i.e. :</p>

<pre><code>function foo(v) {if (v is function type?) {/* do something */}};
foo(a);
</code></pre>

<p>How can I check if the variable 'a' is of type function in the way defined above?</p>
","<p>Sure underscore's way is more efficient, but the best way to check, when efficiency isn't an issue, is written on underscore's page linked by @Paul Rosania.</p>

<p>Inspired by underscore, the final isFunction function is as follows:</p>

<pre><code>function isFunction(functionToCheck) {
 var getType = {};
 return functionToCheck &amp;&amp; getType.toString.call(functionToCheck) === '[object Function]';
}
</code></pre>
","7356528"
"What is the best way to remove a table row with jQuery?","377291","","<p>What is the best method for removing a table row with jQuery?</p>
","<p>You're right:</p>

<pre><code>$('#myTableRow').remove();
</code></pre>

<p>This works fine if your row has an <code>id</code>, such as:</p>

<pre><code>&lt;tr id=""myTableRow""&gt;&lt;td&gt;blah&lt;/td&gt;&lt;/tr&gt;
</code></pre>

<p>If you don't have an <code>id</code>, you can use any of jQuery's <a href=""http://docs.jquery.com/Selectors"" rel=""noreferrer"">plethora of selectors</a>.</p>
","171006"
"How to submit a form using javascript?","376835","","<p>I have a form with id <code>theForm</code> which has the following div with a submit button inside:</p>

<pre><code>&lt;div id=""placeOrder"" style=""text-align: right; width: 100%; background-color: white;""&gt;
   &lt;button type=""submit"" class='input_submit' style=""margin-right: 15px;"" onClick=""placeOrder()""&gt;Place Order&lt;/button&gt;
&lt;/div&gt;
</code></pre>

<p>When clicked, the function <code>placeOrder()</code> is called. The function changes the innerHTML of the above div to be ""processing ..."" (so the submit button is now gone). </p>

<p>The above code works, but now the problem is that I can't get the form to submit! I've tried putting this in the <code>placeOrder()</code> function:</p>

<pre><code>document.theForm.submit();
</code></pre>

<p>But that doesn't work.</p>

<p>How can I get the form to submit?</p>
","<p>Set the <code>name</code> attribute of your form to <code>""theForm""</code> and your code will work.</p>
","9855665"
"How does inline Javascript (in HTML) work?","376272","","<p>I know this is bad practice. Don't write code like this if at all possible. </p>

<p>Of course, we'll always find ourselves in situations where a clever snippet of inline Javascript can address an issue quickly. </p>

<p>I am pursuing this query in the interest of fully understanding what happens (and the potential pitfalls) when something like this is written: </p>

<pre><code>&lt;a href=""#"" onclick=""alert('Hi')""&gt;Click Me&lt;/a&gt;
</code></pre>

<p>As far as I can tell this is functionally the same as </p>

<pre><code>&lt;script type=""text/javascript""&gt;
   $(function(){ // I use jQuery in this example
       document.getElementById('click_me').onclick = 
           function () { alert('Hi'); };
   });
&lt;/script&gt;
&lt;a href=""#"" id=""click_me""&gt;Click Me&lt;/a&gt;
</code></pre>

<p>Extrapolating from this it seems that the string assigned to attribute <code>onclick</code> is inserted within an anonymous function which is assigned to the element's click handler. Is this actually the case? </p>

<p>Because I'm starting to do things like this: </p>

<pre><code>&lt;a href=""#"" onclick=""$(this).next().fadeIn(); return false;""&gt;Display my next sibling&lt;/a&gt; &lt;!-- Return false in handler so as not to scroll to top of page! --&gt; 
</code></pre>

<p>Which works. But I don't know how much of a hack this is. It looks suspicious because there is no apparent function that is being returned from!</p>

<p>You might ask, why are you doing this, Steve? Inline JS is bad practice! </p>

<p>Well to be quite honest I'm tired of editing three different sections of code just to modify one section of a page, especially when I'm just prototyping something to see if it will work at all. It is so much easier and sometimes even makes sense for the code specifically related to this HTML element to be defined <em>right within</em> the element: When I decide 2 minutes later that this was a terrible, terrible idea I can nuke the entire div (or whatever) and I don't have a bunch of mysterious JS and CSS cruft hanging around in the rest of the page, slowing down rendering ever so slightly. This is similar to the concept of locality of reference but instead of cache misses we're looking at bugs and code bloat. </p>
","<p>You've got it nearly correct, but you haven't accounted for the <code>this</code> value supplied to the inline code.</p>

<pre><code>&lt;a href=""#"" onclick=""alert(this)""&gt;Click Me&lt;/a&gt;
</code></pre>

<p>is actually closer to:</p>

<pre><code>&lt;a href=""#"" id=""click_me""&gt;Click Me&lt;/a&gt;
&lt;script type=""text/javascript""&gt;
document.getElementById('click_me').addEventListener(""click"", function(event) {
    (function(event) {
        alert(this);
    }).call(document.getElementById('click_me'), event);
});
&lt;/script&gt;
</code></pre>

<p>Inline event handlers set <code>this</code> equal to the target of the event.</p>
","10607992"
"Best way to get child nodes","376220","","<p>I was wondering, JavaScript offers a variety of methods to get the first child element from any element, but which is the best? By best, I mean: most cross-browser compatible, fastest, most comprehensive and predictable when it comes to behaviour. A list of methods/properties I use as aliases:</p>

<pre><code>var elem = document.getElementById('container');
var child = elem.children[0];
var child = elem.firstElementChild; // == children[0]
</code></pre>

<p>This works for both cases:</p>

<pre><code>var child = elem.childNodes[0]; // or childNodes[1], see below
</code></pre>

<p>That’s in case of forms, or <code>&lt;div&gt;</code> iteration. If I might encounter text elements:</p>

<pre><code>var child = elem.childNodes; // treat as NodeList
var child = elem.firstChild;
</code></pre>

<p>As far as I can work out, <code>firstChild</code> uses the NodeList from <code>childNodes</code>, and <code>firstElementChild</code> uses <code>children</code>. I’m basing this assumption on the MDN reference:</p>

<blockquote>
  <p><code>childNode</code> is a reference to the first child element of the element node, or <code>null</code> if there isn’t one.</p>
</blockquote>

<p>I’m guessing that, in terms of speed, the difference, if any, will be next to nothing, since <code>firstElementChild</code> is effectively a reference to <code>children[0]</code>, and the <code>children</code> object is already in memory anyway.</p>

<p>What does throw me, is the <code>childNodes</code> object. I’ve used it to take a look at a form, in a table element. While <code>children</code> lists all form elements, <code>childNodes</code> also seems to include whitespace from the HTML code:</p>

<pre><code>console.log(elem.childNodes[0]);
console.log(elem.firstChild);
</code></pre>

<p>Both log <code>&lt;TextNode textContent=""\n ""&gt;</code></p>

<pre><code>console.log(elem.childNodes[1]);
console.log(elem.children[0]);
console.log(elem.firstElementChild);
</code></pre>

<p>All log <code>&lt;input type=""text""</code>…<code>&gt;</code>. How come? I’d understand that one object would allow me to work with the “raw” HTML code, while the other sticks to the DOM, but the <code>childNodes</code> element seems to work on both levels.</p>

<p>To get back to my initial question, my guess would be: if I want the most comprehensive object, <code>childNodes</code> is the way to go, but because of its comprehensiveness, it might not be the most predictable in terms of it returning the element I want/expect at any given moment. Cross-browser support might also prove to be a challenge in that case, though I could be wrong.</p>

<p>Could anyone clarify the distinction between the objects at hand? If there is a speed difference, however negligible, I’d like to know, too. If I’m seeing this all wrong, feel free to educate me.</p>

<hr>

<p>PS: Please, please, I like JavaScript, so yes, I want to deal with this sort of thing. Answers like “jQuery deals with this for you” are not what I’m looking for, hence no <a href=""/questions/tagged/jquery"" class=""post-tag"" title=""show questions tagged &#39;jquery&#39;"" rel=""tag"">jquery</a> tag.</p>
","<p>Sounds like you're overthinking it. You've observed the difference between <code>childNodes</code> and <code>children</code>, which is that <code>childNodes</code> contains all nodes, including text nodes consisting entirely of whitespace, while <code>children</code> is a collection of just the child nodes that are elements. That's really all there is to it.</p>

<p>There is nothing unpredictable about either collection, although there are a couple of issues to be aware of:</p>

<ul>
<li>IE &lt;= 8 do not include white space-only text nodes in <code>childNodes</code> while other browsers do</li>
<li>IE &lt;= 8 includes comment nodes within <code>children</code> while other browsers only have elements</li>
</ul>

<p><code>children</code>, <code>firstElementChild</code> and friends are just conveniences, presenting a filtered view of the DOM restricted to just elements.</p>
","10381659"
"document.getElementById vs jQuery $()","375656","","<p>Is this:</p>

<pre><code>var contents = document.getElementById('contents');
</code></pre>

<p>The same as this:</p>

<pre><code>var contents = $('#contents');
</code></pre>

<p>Given that jQuery is loaded?</p>
","<p>Not exactly!!</p>

<pre><code>document.getElementById('contents'); //returns a HTML DOM Object

var contents = $('#contents');  //returns a jQuery Object
</code></pre>

<hr>

<p>In jQuery, to get the same result as <code>document.getElementById</code>, you can access the jQuery Object and get the first element in the object (Remember JavaScript objects act similar to associative arrays).</p>

<pre><code>var contents = $('#contents')[0]; //returns a HTML DOM Object
</code></pre>
","4070010"
"Remove disabled attribute using JQuery?","373999","","<p>I have to disable inputs at first and then on click of a link to enable them.</p>

<p>This is what I have tried so far, but it doesn't work:</p>

<p>HTML:</p>

<pre><code>&lt;input type=""text"" disabled=""disabled"" class=""inputDisabled"" value=""""&gt;
</code></pre>

<p>jQuery:</p>

<pre><code>$(""#edit"").click(function(event){
   event.preventDefault();
   $('.inputDisabled').removeAttr(""disabled"")
});
</code></pre>

<p>This shows me <code>true</code> and then <code>false</code> but nothing changes for the inputs:</p>

<pre><code>$(""#edit"").click(function(event){
   alert('');
   event.preventDefault();
   alert($('.inputDisabled').attr('disabled'));
   $('.inputDisabled').removeAttr(""disabled"");
   alert($('.inputDisabled').attr('disabled'));
});
</code></pre>
","<p><strong>Always</strong> use the <strong><a href=""http://api.jquery.com/prop/"" rel=""noreferrer""><code>prop()</code></a></strong> method to enable or disable elements when using jQuery (see below for why).</p>

<p>In your case, it would be:</p>

<pre><code>$(""#edit"").click(function(event){
   event.preventDefault();
   $('.inputDisabled').prop(""disabled"", false); // Element(s) are now enabled.
});
</code></pre>

<p><a href=""http://jsfiddle.net/xPEK4/"" rel=""noreferrer"">jsFiddle example here.</a></p>

<hr>

<blockquote>
  <p>Why use <code>prop()</code> when you could use <code>attr()</code>/<code>removeAttr()</code> to do this?</p>
</blockquote>

<p>Basically, <code>prop()</code> should be used when getting or setting <em>properties</em> (such as <code>autoplay</code>, <code>checked</code>, <code>disabled</code> and <code>required</code> amongst others). </p>

<p>By using <code>removeAttr()</code>, you are completely removing the <code>disabled</code> attribute itself - while <code>prop()</code> is merely setting the property's underlying boolean value to false. </p>

<p>While what you want to do <em>can</em> be done using <code>attr()</code>/<code>removeAttr()</code>, it doesn't mean it <em>should</em> be done (and can cause strange/problematic behaviour, as in this case).</p>

<p>The following extracts (taken from the <a href=""http://api.jquery.com/prop/"" rel=""noreferrer"">jQuery documentation for prop()</a>) explain these points in greater detail:</p>

<blockquote>
  <p>""The difference between attributes and properties can be important in
  specific situations. Before jQuery 1.6, the <code>.attr()</code> method sometimes
  took property values into account when retrieving some attributes,
  which could cause inconsistent behavior. As of jQuery 1.6, the <code>.prop()</code>
  method provides a way to explicitly retrieve property values, while
  <code>.attr()</code> retrieves attributes.""</p>
  
  <p>""Properties generally affect the dynamic state of a DOM element without
  changing the serialized HTML attribute. Examples include the <code>value</code>
  property of input elements, the <code>disabled</code> property of inputs and
  buttons, or the <code>checked</code> property of a checkbox. The <code>.prop()</code> method
  should be used to set <code>disabled</code> and <code>checked</code> instead of the <code>.attr()</code>
  method. The <code>.val()</code> method should be used for getting and setting
  <code>value</code>.""</p>
</blockquote>
","13626565"
"How to dynamically change a web page's title?","373089","","<p>I have a webpage that implements a set of tabs each showing different content. The tab clicks do not refresh the page but hide/unhide contents at the client side.</p>

<p>Now there is a requirement to change the page title according to the tab selected on the page ( for SEO reasons ). Is this possible? Can someone suggest a solution to dynamically alter the page title via javascript without reloading the page?</p>
","<p><strong>Update</strong>: as per the comments and reference on <a href=""https://searchengineland.com/tested-googlebot-crawls-javascript-heres-learned-220157"" rel=""noreferrer"">SearchEngineLand</a>
 most web crawlers will index the updated title. Below answer is obsolete. but the code is still applicable.</p>

<blockquote>
  <p>You can just do something like, <code>document.title = ""This is the new
  page title."";</code>, but that would totally defeat the purpose of SEO. Most
  crawlers aren't going to support javascript in the first place, so
  they will take whatever is in the  element as the page title.</p>
  
  <p>If you want this to be compatible with most of the important crawlers,
  you're going to need to actually change the title tag itself, which
  would involve reloading the page (PHP, or the like). You're not going
  to be able to get around that, if you want to change the page title in
  a way that a crawler can see.</p>
</blockquote>
","413455"
"Response to preflight request doesn't pass access control check","372522","","<p>I'm getting this error using ngResource to call a REST API on Amazon Web Services:</p>

<blockquote>
  <p>XMLHttpRequest cannot load
  <a href=""http://server.apiurl.com:8000/s/login?login=facebook"" rel=""noreferrer"">http://server.apiurl.com:8000/s/login?login=facebook</a>. Response to
  preflight request doesn't pass access control check: No
  'Access-Control-Allow-Origin' header is present on the requested
  resource. Origin '<a href=""http://localhost"" rel=""noreferrer"">http://localhost</a>' is therefore not allowed access.
  <em>Error 405</em></p>
</blockquote>

<p>Service:</p>

<pre><code>socialMarkt.factory('loginService', ['$resource', function($resource){    
    var apiAddress = ""http://server.apiurl.com:8000/s/login/"";
    return $resource(apiAddress, { login:""facebook"", access_token: ""@access_token"" ,facebook_id: ""@facebook_id"" }, {
                getUser: {method:'POST'}
            });
}]);
</code></pre>

<p>Controller:</p>

<pre><code>[...]
loginService.getUser(JSON.stringify(fbObj)),
                function(data){
                    console.log(data);
                },
                function(result) {
                    console.error('Error', result.status);
                }
[...]
</code></pre>

<p>I'm using chrome, and I dont know what else to do in order to fix this problem. I've even configured the server to accept headers from origin <code>localhost</code></p>
","<p>You are running into CORS issues.</p>

<p>There are several ways to fix this.</p>

<ol>
<li>Turn off CORS. For example: <a href=""https://stackoverflow.com/questions/3102819/disable-same-origin-policy-in-chrome"">how to turn off cors in chrome</a></li>
<li><a href=""https://chrome.google.com/webstore/detail/allow-control-allow-origi/nlfbmbojpeacfghkpbjhddihlkkiljbi?utm_source=chrome-app-launcher-info-dialog"" rel=""noreferrer"">Use a plugin for your browser</a></li>
<li>Use a proxy such as nginx. <a href=""http://oskarhane.com/avoid-cors-with-nginx-proxy_pass/"" rel=""noreferrer"">example of how to set up</a></li>
</ol>

<p>More verbosely, you are trying to access api.serverurl.com from localhost. This is the exact definition of cross domain request.</p>

<p>By either turning it off just to get your work done (OK, put poor security for you if you visit other sites and just kicks the can down the road) you can use a proxy which makes your browser think all requests come from local host when really you have local server that then calls the remote server. </p>

<p>so api.serverurl.com might become localhost:8000/api and your local nginx or other proxy will send to the correct destination.</p>
","35588856"
"How to execute a JavaScript function when I have its name as a string","372489","","<p>I have the name of a function in JavaScript as a string. How do I convert that into a function pointer so I can call it later?</p>

<p>Depending on the circumstances, I may need to pass various arguments into the method too.</p>

<p>Some of the functions may take the form of <code>namespace.namespace.function(args[...])</code>.</p>
","<p>Don't use eval unless you <em>absolutely, positively</em> have no other choice.</p>

<p>As has been mentioned, using something like this would be the best way to do it:</p>

<pre><code>window[""functionName""](arguments);
</code></pre>

<p>That, however, will not work with a namespace'd function:</p>

<pre><code>window[""My.Namespace.functionName""](arguments); // fail
</code></pre>

<p>This is how you would do that:</p>

<pre><code>window[""My""][""Namespace""][""functionName""](arguments); // succeeds
</code></pre>

<p>In order to make that easier and provide some flexibility, here is a convenience function:</p>

<pre><code>function executeFunctionByName(functionName, context /*, args */) {
  var args = Array.prototype.slice.call(arguments, 2);
  var namespaces = functionName.split(""."");
  var func = namespaces.pop();
  for(var i = 0; i &lt; namespaces.length; i++) {
    context = context[namespaces[i]];
  }
  return context[func].apply(context, args);
}
</code></pre>

<p>You would call it like so:</p>

<pre><code>executeFunctionByName(""My.Namespace.functionName"", window, arguments);
</code></pre>

<p>Note, you can pass in whatever context you want, so this would do the same as above:</p>

<pre><code>executeFunctionByName(""Namespace.functionName"", My, arguments);
</code></pre>
","359910"
"How to show a confirm message before delete?","370696","","<p>I want to get a <em>confirm message</em> on clicking delete (this maybe a button or an image). If the user selects '<code>Ok</code>' then delete is done, else if '<code>Cancel</code>' is clicked nothing happens. </p>

<p>I tried echoing this when the button was clicked, but echoing stuff makes my input boxes and text boxes lose their styles and design. </p>
","<p>Write this in <code>onclick</code> event of the button:</p>

<pre><code>var result = confirm(""Want to delete?"");
if (result) {
    //Logic to delete the item
}
</code></pre>
","9139099"
"I keep getting ""Uncaught SyntaxError: Unexpected token o""","370313","","<p>I'm trying to learn some html/css/javascript, so I'm writing myself a teaching project.</p>

<p>The idea was to have some vocabulary contained in a json file which would then be loaded into a table. I managed to load the file in and print out one of its values, after which I began writing the code to load the values into the table.</p>

<p>After doing that I started getting an error, so I removed all the code I had written, leaving me with only one line (the same line that had worked before) ... only the error is still there.</p>

<p>The error is as follows:</p>

<pre><code>Uncaught SyntaxError: Unexpected token o
(anonymous function)script.js:10
jQuery.Callbacks.firejquery-1.7.js:1064
jQuery.Callbacks.self.fireWithjquery-1.7.js:1182
donejquery-1.7.js:7454
jQuery.ajaxTransport.send.callback
</code></pre>

<p>My javascript code is contained in a separate file and is simply this:</p>

<pre><code>function loadPageIntoDiv(){
    document.getElementById(""wokabWeeks"").style.display = ""block"";
}

function loadWokab(){
    //also tried getJSON which threw the same error
    jQuery.get('wokab.json', function(data) {
        var glacier = JSON.parse(data);
    });
}
</code></pre>

<p>And my JSON file just has the following right now:</p>

<pre><code>[
    {
        ""english"": ""bag"",
        ""kana"": ""kaban"",
        ""kanji"": ""K""
    },

    {
        ""english"": ""glasses"",
        ""kana"": ""megane"",
        ""kanji"": ""M""
    }
]
</code></pre>

<p>Now the error is reported in line 11 which is the <code>var glacier = JSON.parse(data);</code> line.</p>

<p>When I remove the json file I get the error: ""GET <a href=""http://.../wokab.json"" rel=""noreferrer"">http://.../wokab.json</a> 404 (Not Found)"" so I know it's loading it (or at least trying to).</p>
","<p>Looks like jQuery takes a guess about the datatype. It does the JSON parsing even though you're not calling getJSON()-- then when you try to call JSON.parse() on an object, you're getting the error.</p>

<p>Further explanation can be found in <a href=""https://stackoverflow.com/a/33489715/1438029"">Aditya Mittal's answer</a>.</p>
","8081745"
"How to create a jQuery function (a new jQuery method or plugin)?","369630","","<p>I know that in JavaScript the syntax is as follows:</p>

<pre><code>function myfunction(param){
  //some code
}
</code></pre>

<p>Is there a way to declare a function in jQuery that can be added to an element? For example:</p>

<pre><code>$('#my_div').myfunction()
</code></pre>
","<p>From the <a href=""http://docs.jquery.com/Plugins/Authoring"" rel=""noreferrer"">Docs</a>:</p>

<pre><code>(function( $ ){
   $.fn.myfunction = function() {
      alert('hello world');
      return this;
   }; 
})( jQuery );
</code></pre>

<p>Then you do </p>

<pre><code>$('#my_div').myfunction();
</code></pre>
","12093389"
"How to find event listeners on a DOM node when debugging or from the JavaScript code?","369570","","<p>I have a page where some event listeners are attached to input boxes and select boxes. Is there a way to find out which event listeners are observing a particular DOM node and for what event?</p>

<p>Events are attached using:</p>

<ol>
<li><a href=""http://en.wikipedia.org/wiki/Prototype_JavaScript_Framework"" rel=""noreferrer"">Prototype's</a> <code>Event.observe</code>;</li>
<li>DOM's <code>addEventListener</code>;</li>
<li>As element attribute <code>element.onclick</code>.</li>
</ol>
","<p>If you just need to inspect what's happening on a page, you might try the <a href=""http://www.sprymedia.co.uk/article/Visual+Event"" rel=""noreferrer"">Visual Event</a> bookmarklet.</p>

<p><strong>Update</strong>: <a href=""http://www.sprymedia.co.uk/article/Visual+Event+2"" rel=""noreferrer"">Visual Event 2</a> available;</p>
","3426352"
"What's the difference between tilde(~) and caret(^) in package.json?","369531","","<p>After I upgraded to latest stable <code>node</code> and <code>npm</code>, I tried <code>npm install moment --save</code>. It saves the entry in the <code>package.json</code> with the <code>caret(^)</code> prefix. Previously, it was a <code>tilde(~)</code> prefix. </p>

<ol>
<li>Why are these changes made in <code>npm</code>? </li>
<li>What is the difference between <code>tilde(~)</code> and <code>caret(^)</code>?</li>
<li>What is the advantages over others?</li>
</ol>
","<blockquote>
  <p>In the simplest terms, the tilde matches the most recent minor version
  (the middle number). ~1.2.3 will match all 1.2.x versions but will
  miss 1.3.0.</p>
  
  <p>The caret, on the other hand, is more relaxed. It will update you to
  the most recent major version (the first number). ^1.2.3 will match
  any 1.x.x release including 1.3.0, but will hold off on 2.0.0.</p>
</blockquote>

<p><a href=""http://fredkschott.com/post/2014/02/npm-no-longer-defaults-to-tildes/"" rel=""noreferrer"">http://fredkschott.com/post/2014/02/npm-no-longer-defaults-to-tildes/</a></p>
","22345808"
"Working with select using AngularJS's ng-options","369522","","<p>I have read about it in other posts, but I couldn't figure it out.</p>

<p>I have an array,</p>

<pre><code>$scope.items = [
   {ID: '000001', Title: 'Chicago'},
   {ID: '000002', Title: 'New York'},
   {ID: '000003', Title: 'Washington'},
];
</code></pre>

<p>I want to render it as:</p>

<pre><code>&lt;select&gt;
  &lt;option value=""000001""&gt;Chicago&lt;/option&gt;
  &lt;option value=""000002""&gt;New York&lt;/option&gt;
  &lt;option value=""000003""&gt;Washington&lt;/option&gt;
&lt;/select&gt;
</code></pre>

<p>And also I want to select the option with ID=000002.</p>

<p>I have read <em><a href=""http://docs.angularjs.org/api/ng.directive:select"" rel=""noreferrer"">select</a></em> and tried, but I can't figure it out.</p>
","<p>One thing to note is that ngModel is <em>required</em> for ngOptions to work... note the <code>ng-model=""blah""</code> which is saying ""set $scope.blah to the selected value"".</p>

<p>Try this:</p>

<pre><code>&lt;select ng-model=""blah"" ng-options=""item.ID as item.Title for item in items""&gt;&lt;/select&gt;
</code></pre>

<p>Here's more from AngularJS's documentation (if you haven't seen it):</p>

<blockquote>
  <p>for array data sources:</p>
  
  <ul>
  <li>label for value in array</li>
  <li>select as label for value in array</li>
  <li>label group by group for value in array
  = select as label group by group for value in array</li>
  </ul>
  
  <p>for object data sources:</p>
  
  <ul>
  <li>label for (key , value) in object</li>
  <li>select as label for (key , value) in object</li>
  <li>label group by group for (key, value) in object</li>
  <li>select as label group by group for (key, value) in object</li>
  </ul>
</blockquote>

<hr>

<p>For some clarification on option tag values in AngularJS:</p>

<p>When you use <code>ng-options</code>, <strong>the values of option tags written out by ng-options will always be the index of the array item the option tag relates to</strong>. This is because AngularJS actually allows you to select entire objects with select controls, and not just primitive types. For example:</p>

<pre class=""lang-js prettyprint-override""><code>app.controller('MainCtrl', function($scope) {
   $scope.items = [
     { id: 1, name: 'foo' },
     { id: 2, name: 'bar' },
     { id: 3, name: 'blah' }
   ];
});
</code></pre>

<pre class=""lang-html prettyprint-override""><code>&lt;div ng-controller=""MainCtrl""&gt;
   &lt;select ng-model=""selectedItem"" ng-options=""item as item.name for item in items""&gt;&lt;/select&gt;
   &lt;pre&gt;{{selectedItem | json}}&lt;/pre&gt;
&lt;/div&gt;
</code></pre>

<p>The above will allow you to select an entire object into <code>$scope.selectedItem</code> directly. <strong>The point is, with AngularJS, you don't need to worry about what's in your option tag. Let AngularJS handle that; you should only care about what's in your model in your scope.</strong></p>

<p><a href=""http://plnkr.co/edit/SxIvt4KThWLtWvh3PnOh?p=preview"" rel=""noreferrer"">Here is a plunker demonstrating the behavior above, and showing the HTML written out</a></p>

<hr>

<p>Dealing with the default option:</p>

<p>There are a few things I've failed to mention above relating to the default option.</p>

<p><strong>Selecting the first option and removing the empty option:</strong></p>

<p>You can do this by adding a simple <code>ng-init</code> that sets the model (from <code>ng-model</code>) to the first element in the items your repeating in <code>ng-options</code>:</p>

<pre><code>&lt;select ng-init=""foo = foo || items[0]"" ng-model=""foo"" ng-options=""item as item.name for item in items""&gt;&lt;/select&gt;
</code></pre>

<p>Note: This could get a little crazy if <code>foo</code> happens to be initialized properly to something ""falsy"". In that case, you'll want to handle the initialization of <code>foo</code> in your controller, most likely.</p>

<p><strong>Customizing the default option:</strong></p>

<p>This is a little different; here all you need to do is add an option tag as a child of your select, with an empty value attribute, then customize its inner text:</p>

<pre><code>&lt;select ng-model=""foo"" ng-options=""item as item.name for item in items""&gt;
   &lt;option value=""""&gt;Nothing selected&lt;/option&gt;
&lt;/select&gt;
</code></pre>

<p>Note: In this case the ""empty"" option will stay there even after you select a different option. This isn't the case for the default behavior of selects under AngularJS.</p>

<p><strong>A customized default option that hides after a selection is made:</strong></p>

<p>If you wanted your customized default option to go away after you select a value, you can add an ng-hide attribute to your default option:</p>

<pre><code>&lt;select ng-model=""foo"" ng-options=""item as item.name for item in items""&gt;
   &lt;option value="""" ng-if=""foo""&gt;Select something to remove me.&lt;/option&gt;
&lt;/select&gt;
</code></pre>
","13049740"
"Creating a new DOM element from an HTML string using built-in DOM methods or Prototype","369335","","<p>I have an HTML string representing an element: <code>'&lt;li&gt;text&lt;/li&gt;'</code>. I'd like to append it to an element in the DOM (a <code>ul</code> in my case). How can I do this with Prototype or with DOM methods?</p>

<p>(I know i could do this easily in jQuery, but unfortunately we're not using jQuery.)</p>
","<p><strong>Note:</strong> most current browsers support HTML <code>&lt;template&gt;</code> elements, which provide a more reliable way of turning creating elements from strings. See <a href=""https://stackoverflow.com/a/35385518/1709587"">Mark Amery's answer below for details</a>.</p>

<p><strong>For older browsers, and node/jsdom</strong>: (which doesn't yet support <code>&lt;template&gt;</code> elements at the time of writing), use the following method. It's the same thing the libraries use to do to get DOM elements from an HTML string (<a href=""https://stackoverflow.com/questions/1848588/why-does-html-work-and-not-innerhtml-or-appendchild/1849100#1849100"">with some extra work for IE</a> to work around bugs with its implementation of <code>innerHTML</code>):</p>

<pre><code>function createElementFromHTML(htmlString) {
  var div = document.createElement('div');
  div.innerHTML = htmlString.trim();

  // Change this to div.childNodes to support multiple top-level nodes
  return div.firstChild; 
}
</code></pre>

<p>Note that unlike HTML templates this <em>won't</em> work for some elements that cannot legally be children of a <code>&lt;div&gt;</code>, such as <code>&lt;td&gt;</code>s. </p>

<p>If you're already using a library, I would recommend you stick to the library-approved method of creating elements from HTML strings:</p>

<ul>
<li>Prototype has this feature built-into its <a href=""http://prototypejs.org/doc/latest/dom/Element/update/"" rel=""nofollow noreferrer""><code>update()</code> method</a>. </li>
<li>jQuery has it implemented in its <a href=""https://api.jquery.com/jQuery/#jQuery2"" rel=""nofollow noreferrer""><code>jQuery(html)</code></a> and <a href=""https://api.jquery.com/jQuery.parseHTML/"" rel=""nofollow noreferrer""><code>jQuery.parseHTML</code></a> methods.</li>
</ul>
","494348"
"For..In loops in javascript - key value pairs","369015","","<p>I was wondering if there's a way to do something like a PHP foreach loop in JavaSript. The functionality I'm looking for is something like this: (PHP Snippet)</p>

<pre><code>foreach($data as $key =&gt; $value) { }
</code></pre>

<p>I was looking at the JS <code>for..in</code> loop, but there seems to be no way to specify the <code>as</code>. If I do this with a 'normal' for loop (<code>for(var i = 0; i &lt; data.length; i++</code>), is there a way to grab the key => value pairs?</p>
","<pre><code>for (var k in target){
    if (target.hasOwnProperty(k)) {
         alert(""Key is "" + k + "", value is"" + target[k]);
    }
}
</code></pre>

<p><code>hasOwnProperty</code> is used to check if your <code>target</code> really has that property, rather than having inherited it from its prototype. A bit simpler would be:</p>

<pre><code>for (var k in target){
    if (typeof target[k] !== 'function') {
         alert(""Key is "" + k + "", value is"" + target[k]);
    }
}
</code></pre>

<p>It just checks that <code>k</code> is not a method (as if <code>target</code> is <code>array</code> you'll get a lot of methods alerted, e.g. <code>indexOf</code>, <code>push</code>, <code>pop</code>,etc.)</p>
","7241901"
"How do I change the text of a span element in JavaScript","368879","","<p>If I have a span, say:</p>

<pre><code>&lt;span id=""myspan""&gt; hereismytext &lt;/span&gt;
</code></pre>

<p>How do I use JavaScript to change ""hereismytext"" to ""newtext""?</p>
","<pre><code>document.getElementById(""myspan"").innerHTML=""newtext"";
</code></pre>

<p><strong>EDIT</strong>
For modern browsers :</p>

<pre><code>document.getElementById(""myspan"").textContent=""newtext"";
</code></pre>
","1358815"
"Removing an item from a select box","368652","","<p>How do I remove items from, or add items to, a select box? I'm running jQuery, should that make the task easier. Below is an example select box.</p>

<pre><code>&lt;select name=""selectBox"" id=""selectBox""&gt;
    &lt;option value=""option1""&gt;option1&lt;/option&gt;
    &lt;option value=""option2""&gt;option2&lt;/option&gt;
    &lt;option value=""option3""&gt;option3&lt;/option&gt;
    &lt;option value=""option4""&gt;option4&lt;/option&gt;    
&lt;/select&gt;
</code></pre>
","<p>Remove an option:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>$(""#selectBox option[value='option1']"").remove();</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;
&lt;select name=""selectBox"" id=""selectBox""&gt;
  &lt;option value=""option1""&gt;option1&lt;/option&gt;
  &lt;option value=""option2""&gt;option2&lt;/option&gt;
  &lt;option value=""option3""&gt;option3&lt;/option&gt;
  &lt;option value=""option4""&gt;option4&lt;/option&gt;	
&lt;/select&gt;</code></pre>
</div>
</div>
</p>

<p>Add an option:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>$(""#selectBox"").append('&lt;option value=""option5""&gt;option5&lt;/option&gt;');</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;
&lt;select name=""selectBox"" id=""selectBox""&gt;
  &lt;option value=""option1""&gt;option1&lt;/option&gt;
  &lt;option value=""option2""&gt;option2&lt;/option&gt;
  &lt;option value=""option3""&gt;option3&lt;/option&gt;
  &lt;option value=""option4""&gt;option4&lt;/option&gt;	
&lt;/select&gt;</code></pre>
</div>
</div>
</p>
","375573"
"What is JavaScript's highest integer value that a number can go to without losing precision?","368501","","<p>Is this defined by the language? Is there a defined maximum? Is it different in different browsers?</p>
","<p><strong>+/- 9007199254740991</strong></p>

<p><a href=""http://ecma262-5.com/ELS5_HTML.htm#Section_8.5"" rel=""noreferrer"">ECMA Section 8.5 - Numbers</a></p>

<blockquote>
  <p>Note that all the positive and negative integers whose magnitude is no greater than 2<sup>53</sup> are representable in the Number type (indeed, the integer 0 has two representations, +0 and −0). </p>
</blockquote>

<p>They are 64-bit floating point values, the largest exact integral value is 2<sup>53</sup>-1, or <code>9007199254740991</code>. In ES6, this is defined as <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER"" rel=""noreferrer"">Number.MAX_SAFE_INTEGER</a>.</p>

<p>Note that the bitwise operators and shift operators operate on 32-bit ints, so in that case, the max safe integer is 2<sup>31</sup>-1, or 2147483647.  </p>

<p><hr>
Test it out!</p>

<pre><code>var x = 9007199254740992;
var y = -x;
x == x + 1; // true !
y == y - 1; // also true !
// Arithmetic operators work, but bitwise/shifts only operate on int32:
x / 2;      // 4503599627370496
x &gt;&gt; 1;     // 0
x | 1;      // 1
</code></pre>
","307200"
"Is there a (built-in) way in JavaScript to check if a string is a valid number?","368292","","<p>I'm hoping there's something in the same conceptual space as the old VB6 IsNumeric() function?</p>
","<h2>To check if a variable (including a string) is a number, check if it is not a number:</h2>

<p>This works regardless of whether the variable contains is a string or number.</p>

<pre><code>isNaN(num)         // returns true if the variable does NOT contain a valid number
</code></pre>

<h3>Examples</h3>

<pre><code>isNaN(123)         // false
isNaN('123')       // false
isNaN('1e10000')   // false (This translates to Infinity, which is a number)
isNaN('foo')       // true
isNaN('10px')      // true
</code></pre>

<p>Of course, you can negate this if you need to. For example, to implement the <code>IsNumeric</code> example you gave:</p>

<pre><code>function isNumeric(num){
  return !isNaN(num)
}
</code></pre>

<h2>To convert a string containing a number into a number:</h2>

<p>only works if the string <em>only</em> contains numeric characters, else it returns <code>NaN</code>.</p>

<pre><code>+num               // returns the numeric value of the string, or NaN 
                   // if the string isn't purely numeric characters
</code></pre>

<h3>Examples</h3>

<pre><code>+'12'              // 12
+'12.'             // 12
+'12..'            // Nan
+'.12'             // 0.12
+'..12'            // Nan
+'foo'             // NaN
+'12px'            // NaN
</code></pre>

<h2>To convert a string loosely to a number</h2>

<p>useful for converting '12px' to 12, for example:</p>

<pre><code>parseInt(num)      // extracts a numeric value from the 
                   // start of the string, or NaN.
</code></pre>

<h3>Examples</h3>

<pre><code>parseInt('12')     // 12
parseInt('aaa')    // NaN
parseInt('12px')   // 12
parseInt('foo2')   // NaN      These last two may be different
parseInt('12a5')   // 12       from what you expected to see. 
</code></pre>

<h2>Floats</h2>

<p>Bear in mind that, unlike <code>+num</code>, <code>parseInt</code> (as the name suggests) will convert a float into an integer by chopping off everything following the decimal point (if you want to use <code>parseInt()</code> <em>because of</em> this behaviour, <a href=""https://jsperf.com/math-floor-vs-math-round-vs-parseint/33"" rel=""noreferrer"">you're probably better off using another method instead</a>):</p>

<pre><code>+'12.345'          // 12.345
parseInt(12.345)   // 12
parseInt('12.345') // 12
</code></pre>

<h2>Empty strings</h2>

<p>Empty strings may be a little counter-intuitive. <code>+num</code> converts empty strings to zero, and <code>isNaN()</code> assumes the same:</p>

<pre><code>+''                // 0
isNaN('')          // false
</code></pre>

<p>But <code>parseInt()</code> does not agree:</p>

<pre><code>parseInt('')       // NaN
</code></pre>
","175787"
"jQuery event to trigger action when a div is made visible","368292","","<p>I'm using jQuery in my site and I would like to trigger certain actions when a certain div is made visible.</p>

<p>Is it possible to attach some sort of ""isvisible"" event handler to arbitrary divs and have certain code run when they the div is made visible?</p>

<p>I would like something like the following pseudocode:</p>

<pre><code>$(function() {
  $('#contentDiv').isvisible(function() {
    alert(""do something"");
  });
});
</code></pre>

<p>The alert(""do something"") code should not fire until the contentDiv is actually made visible.</p>

<p>Thanks.</p>
","<p>You could always add to the original <a href=""http://api.jquery.com/show/"" rel=""noreferrer"">.show()</a> method so you don't have to trigger events every time you show something or if you need it to work with legacy code:</p>

<h3>Jquery extension:</h3>

<pre><code>jQuery(function($) {

  var _oldShow = $.fn.show;

  $.fn.show = function(speed, oldCallback) {
    return $(this).each(function() {
      var obj         = $(this),
          newCallback = function() {
            if ($.isFunction(oldCallback)) {
              oldCallback.apply(obj);
            }
            obj.trigger('afterShow');
          };

      // you can trigger a before show if you want
      obj.trigger('beforeShow');

      // now use the old function to show the element passing the new callback
      _oldShow.apply(obj, [speed, newCallback]);
    });
  }
});
</code></pre>

<h3>Usage example:</h3>

<pre><code>jQuery(function($) {
  $('#test')
    .bind('beforeShow', function() {
      alert('beforeShow');
    }) 
    .bind('afterShow', function() {
      alert('afterShow');
    })
    .show(1000, function() {
      alert('in show callback');
    })
    .show();
});
</code></pre>

<p>This effectively lets you do something beforeShow and afterShow while still executing the normal behavior of the original .show() method.</p>

<p><sup>You could also create another method so you don't have to override the original .show() method.</sup></p>
","1225238"
"Center a popup window on screen?","367600","","<p>How can we center a popup window opened via javascript <code>window.open</code> function on the center of screen variable to the currently selected screen resolution ?</p>
","<p><strong>SINGLE/DUAL MONITOR FUNCTION</strong> (credit to <a href=""http://www.xtf.dk"" rel=""noreferrer"">http://www.xtf.dk</a> - thank you!)</p>

<p><em>UPDATE: It will also work on windows that aren't maxed out to the screen's width and height now thanks to @Frost!</em></p>

<p>If you're on dual monitor, the window will center horizontally, but not vertically... use this function to account for that.</p>

<pre><code>function PopupCenter(url, title, w, h) {
    // Fixes dual-screen position                         Most browsers      Firefox
    var dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : screen.left;
    var dualScreenTop = window.screenTop != undefined ? window.screenTop : screen.top;

    var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;
    var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;

    var left = ((width / 2) - (w / 2)) + dualScreenLeft;
    var top = ((height / 2) - (h / 2)) + dualScreenTop;
    var newWindow = window.open(url, title, 'scrollbars=yes, width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);

    // Puts focus on the newWindow
    if (window.focus) {
        newWindow.focus();
    }
}
</code></pre>

<p>Usage Example:</p>

<pre><code>PopupCenter('http://www.xtf.dk','xtf','900','500');  
</code></pre>

<p><strong>CREDIT GOES TO: <a href=""http://www.xtf.dk/2011/08/center-new-popup-window-even-on.html"" rel=""noreferrer"">http://www.xtf.dk/2011/08/center-new-popup-window-even-on.html</a></strong> (I wanted to just link out to this page but just in case this website goes down the code is here on SO, cheers!)</p>
","16861050"
"Is there a sleep function in JavaScript?","366278","","<p>Is there a sleep function in JavaScript?</p>
","<p>You can use the <code>setTimeout</code> or <code>setInterval</code> functions.</p>
","1141305"
"How to set time delay in javascript","366175","","<p>I have this a piece of js in my website to switch images but need a delay when you click the image a second time. The delay should be 1000ms. So you would click the img.jpg then the img_onclick.jpg would appear. You would then click the img_onclick.jpg image there should then be a delay of 1000ms before the img.jpg is shown again. </p>

<p>Here is the code:</p>

<pre><code>jQuery(document).ready(function($) {

    $("".toggle-container"").hide();
    $("".trigger"").toggle(function () {
        $(this).addClass(""active"");
        $("".trigger"").find('img').prop('src', 'http://localhost:8888/images/img_onclick.jpg');
    }, function () {
        $(this).removeClass(""active"");
        $("".trigger"").find('img').prop('src', 'http://localhost:8888/images/img.jpg');
    });
    $("".trigger"").click(function () {
        $(this).next("".toggle-container"").slideToggle();
    });
});
</code></pre>
","<p>Use <strong><code>setTimeout()</code></strong>:</p>

<pre><code>var delayInMilliseconds = 1000; //1 second

setTimeout(function() {
  //your code to be executed after 1 second
}, delayInMilliseconds);
</code></pre>

<p>If you want to do it without <code>setTimeout</code>: Refer to <a href=""https://stackoverflow.com/questions/1183872/"">this question</a>.</p>
","17883743"
"Change label text using Javascript","366148","","<p>Why doesn't this work for me? </p>

<pre><code>&lt;script&gt;
  document.getElementById('lbltipAddedComment').innerHTML = 'your tip has been submitted!';
&lt;/script&gt;
&lt;label id=""lbltipAddedComment""&gt;&lt;/label&gt;
</code></pre>
","<p>Because your script runs BEFORE the label exists on the page (in the DOM). Either put the script after the label, or wait until the document has fully loaded (use an OnLoad function, such as the <a href=""http://api.jquery.com/ready/"" rel=""noreferrer""><code>jQuery ready()</code></a> or <a href=""http://www.webreference.com/programming/javascript/onloads/"" rel=""noreferrer"">http://www.webreference.com/programming/javascript/onloads/</a>)</p>

<p>This won't work:</p>

<pre><code>&lt;script&gt;
  document.getElementById('lbltipAddedComment').innerHTML = 'your tip has been submitted!';
&lt;/script&gt;
&lt;label id=""lbltipAddedComment""&gt;test&lt;/label&gt;
</code></pre>

<p>This will work:</p>

<pre><code>&lt;label id=""lbltipAddedComment""&gt;test&lt;/label&gt;
&lt;script&gt;
  document.getElementById('lbltipAddedComment').innerHTML = 'your tip has been submitted!';
&lt;/script&gt;
</code></pre>

<p><a href=""http://jsfiddle.net/fB8Ur/"" rel=""noreferrer"">This example (jsfiddle link)</a> maintains the order (script first, then label) and uses an onLoad:</p>

<pre><code>&lt;label id=""lbltipAddedComment""&gt;test&lt;/label&gt;
&lt;script&gt;
function addLoadEvent(func) {  
      var oldonload = window.onload;  
      if (typeof window.onload != 'function') {  
        window.onload = func;  
      } else {  
        window.onload = function() {  
          if (oldonload) {  
            oldonload();  
          }  
          func();  
        }  
      }  
    }  

   addLoadEvent(function() {  
document.getElementById('lbltipAddedComment').innerHTML = 'your tip has been submitted!';

    });  
&lt;/script&gt;
</code></pre>
","4488756"
"In jQuery, how to attach events to dynamic html elements?","364018","","<p>Suppose I have some jQuery code that attaches an event handler to all elements with class ""myclass"". For example:</p>

<pre><code>$(function(){
    $("".myclass"").click( function() {
        // do something
    });
});
</code></pre>

<p>And my html might be as follows:</p>

<pre><code>&lt;a class=""myclass"" href=""#""&gt;test1&lt;/a&gt;
&lt;a class=""myclass"" href=""#""&gt;test2&lt;/a&gt;
&lt;a class=""myclass"" href=""#""&gt;test3&lt;/a&gt;
</code></pre>

<p>That works with no problem.
However, consider if the ""myclass"" elements were written to the page at some future time.</p>

<p>For example:</p>

<pre><code>&lt;a id=""anchor1"" href=""#""&gt;create link dynamically&lt;/a&gt;
&lt;script type=""text/javascript""&gt;
$(function(){
    $(""#anchor1"").click( function() {
        $(""#anchor1"").append('&lt;a class=""myclass"" href=""#""&gt;test4&lt;/a&gt;');
    });
});
&lt;/script&gt;
</code></pre>

<p>In this case, the ""test4"" link is created when a user clicks on a#anchor1.</p>

<p>The ""test4"" link does not have the click() handler associated with it, even though it has class=""myclass"".</p>

<p>Any idea how I can fix this? </p>

<p>Basically, I would like to write the click() handler once and have it apply to both content present at page load, and content brought in later via Ajax/DHTML.</p>
","<p>I am adding a new answer to reflect changes in later jQuery releases. The .live() method is deprecated as of jQuery 1.7. </p>

<p>From <a href=""http://api.jquery.com/live/"">http://api.jquery.com/live/</a></p>

<blockquote>
  <p>As of jQuery 1.7, the .live() method is deprecated. Use .on() to attach event handlers. Users of older versions of jQuery should use .delegate() in preference to .live(). </p>
</blockquote>

<p>For jQuery 1.7+ you can attach an event handler to a parent element using .on(), and pass the a selector combined with 'myclass' as an argument.</p>

<p>See <a href=""http://api.jquery.com/on/"">http://api.jquery.com/on/</a></p>

<p>So instead of...</p>

<pre><code>$("".myclass"").click( function() {
    // do something
});
</code></pre>

<p>You can write...</p>

<pre><code>$('body').on('click', 'a.myclass', function() {
    // do something
});
</code></pre>

<p>This will work for all a tags with 'myclass' in the body, whether already present or dynamically added later.</p>

<p>The body tag is used here as the example had no closer static surrounding tag, but any parent tag that exists when the .on method call occurs will work. For instance a ul tag for a list which will have dynamic elements added would look like this:</p>

<pre><code>$('ul').on('click', 'li', function() {
    alert( $(this).text() );
});
</code></pre>

<p>As long as the ul tag exists this will work (no li elements need exist yet).</p>
","9331127"
"How to pass JavaScript variables to PHP?","363982","","<p>I want to pass JavaScript variables to PHP using a hidden input in a form. </p>

<p>But I can't get the value of <code>$_POST['hidden1']</code> into <code>$salarieid</code>. Is there something wrong? </p>

<p>Here is the code: </p>

<pre><code>&lt;script type=""text/javascript""&gt;
// view which the user has chosen
function func_load3(name){
    var oForm = document.forms[""myform""];
    var oSelectBox = oForm.select3;
    var iChoice = oSelectBox.selectedIndex;
    //alert(""you have choosen: "" + oSelectBox.options[iChoice].text );
    //document.write(oSelectBox.options[iChoice].text);
    var sa = oSelectBox.options[iChoice].text;
    document.getElementById(""hidden1"").value = sa;
}
&lt;/script&gt;

&lt;form name=""myform"" action=""&lt;?php echo $_SERVER['$PHP_SELF']; ?&gt;"" method=""POST""&gt;
        &lt;input type=""hidden"" name=""hidden1"" id=""hidden1""  /&gt;
&lt;/form&gt;

&lt;?php
   $salarieid = $_POST['hidden1'];
   $query = ""select * from salarie where salarieid = "".$salarieid;
   echo $query;
   $result = mysql_query($query);
?&gt;

&lt;table&gt;
   code for display the query result. 
&lt;/table&gt;
</code></pre>
","<p>You cannot pass variable values from the current page javascript to the current page PHP code... PHP code runs at the server side and it doesn't know anything about what is going on on the client side.</p>

<p>You need to pass variables to PHP code from html-form using another mechanism, such as submitting form on GET or POST methods.</p>

<pre><code>&lt;DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;My Test Form&lt;/title&gt;
  &lt;/head&gt;

  &lt;body&gt;
    &lt;form method=""POST""&gt;
      &lt;p&gt;Please, choose the salary id to proceed result:&lt;/p&gt;
      &lt;p&gt;
        &lt;label for=""salarieids""&gt;SalarieID:&lt;/label&gt;
        &lt;?php
          $query = ""SELECT * FROM salarie"";
          $result = mysql_query($query);
          if ($result) :
        ?&gt;
        &lt;select id=""salarieids"" name=""salarieid""&gt;
          &lt;?php
            while ($row = mysql_fetch_assoc($result)) {
              echo '&lt;option value=""', $row['salaried'], '""&gt;', $row['salaried'], '&lt;/option&gt;'; //between &lt;option&gt;&lt;/option&gt; tags you can output something more human-friendly (like $row['name'], if table ""salaried"" have one) 
            }
          ?&gt;
        &lt;/select&gt;
        &lt;?php endif ?&gt;
      &lt;/p&gt;
      &lt;p&gt;
        &lt;input type=""submit"" value=""Sumbit my choice""/&gt;
      &lt;/p&gt;
    &lt;/form&gt;

    &lt;?php if isset($_POST['salaried']) : ?&gt;
      &lt;?php
        $query = ""SELECT * FROM salarie WHERE salarieid = "" . $_POST['salarieid'];
        $result = mysql_query($query);
        if ($result) :
      ?&gt;
        &lt;table&gt;
          &lt;?php
            while ($row = mysql_fetch_assoc($result)) {
              echo '&lt;tr&gt;';
              echo '&lt;td&gt;', $row['salaried'], '&lt;/td&gt;&lt;td&gt;', $row['bla-bla-bla'], '&lt;/td&gt;' ...; // and others
              echo '&lt;/tr&gt;';
            }
          ?&gt;
        &lt;/table&gt;
      &lt;?php endif?&gt;
    &lt;?php endif ?&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
","1917626"
"Convert JavaScript String to be all lower case?","363591","","<p>How can I convert a JavaScript string value to be in all lower case letters?</p>

<p>Example: ""Your Name"" to ""your name""</p>
","<pre><code>var lowerCaseName = ""Your Name"".toLowerCase();
</code></pre>
","154891"
"How to set a value to a file input in HTML?","362813","","<blockquote>
  <p><strong>Note:</strong></p>
  
  <p>The answers &amp; comments below reflect the state of legacy browsers in 2009. Now you can actually set the value of the file input element dynamically/programatically using JavaScript and a dataTransfer or FileList object in 2017.</p>
  
  <p>See the answer in this question for details as well as a demo:<br><a href=""https://stackoverflow.com/q/47515232/584192"">How to set file input value programatically (i.e.: when drag-dropping files)?</a></p>
</blockquote>

<p>How can I set the value of this?</p>

<pre><code>&lt;input type=""file"" /&gt;
</code></pre>
","<p>You cannot due to security reasons.</p>

<p>Imagine:</p>

<pre><code>&lt;form name=""foo"" method=""post"" enctype=""multipart/form-data""&gt;
    &lt;input type=""file"" value=""c:/passwords.txt""&gt;
&lt;/form&gt;
&lt;script&gt;document.foo.submit();&lt;/script&gt;
</code></pre>

<p>You don't want the websites you visit to be able to do this, do you? =)</p>
","1696884"
"How to make a DIV visible and invisible with JavaScript","362119","","<p>Can you do something like</p>

<pre><code>function showDiv()
{
    [DIV].visible = true;
    //or something
}
</code></pre>

<p>Sorry if this is kind of broad.</p>
","<p>if [DIV] is an element then   </p>

<pre><code>[DIV].style.visibility='visible'
</code></pre>

<p>OR</p>

<pre><code>[DIV].style.visibility='hidden' 
</code></pre>
","9456325"
"JavaScript multidimensional array","362007","","<p>Can anyone give me a sample/example of JavaScript with a multidimensional array of inputs? Hope you could help because I'm still new to the JavaScript.</p>

<p>Like when you input 2 rows and 2 columns the output of it will be 2 rows of input and 2 columns of input.</p>

<p>Like this:</p>

<pre><code>[input][input]                
[input][input]
</code></pre>
","<pre><code>var numeric = [
    ['input1','input2'],
    ['input3','input4']
];
numeric[0][0] == 'input1';
numeric[0][1] == 'input2';
numeric[1][0] == 'input3';
numeric[1][1] == 'input4';

var obj = {
    'row1' : {
        'key1' : 'input1',
        'key2' : 'input2'
    },
    'row2' : {
        'key3' : 'input3',
        'key4' : 'input4'
    }
};
obj.row1.key1 == 'input1';
obj.row1.key2 == 'input2';
obj.row2.key1 == 'input3';
obj.row2.key2 == 'input4';

var mixed = {
    'row1' : ['input1', 'inpu2'],
    'row2' : ['input3', 'input4']
};
mixed.row1[0] == 'input1';
mixed.row1[1] == 'input2';
mixed.row2[0] == 'input3';
mixed.row2[1] == 'input4';
</code></pre>

<p><a href=""http://jsfiddle.net/z4Un3/"" rel=""noreferrer"">http://jsfiddle.net/z4Un3/</a></p>

<p>And if you're wanting to store DOM elements:</p>

<pre><code>var inputs = [
    [
        document.createElement('input'),
        document.createElement('input')
    ],
    [
        document.createElement('input'),
        document.createElement('input')
    ]
];
inputs[0][0].id = 'input1';
inputs[0][1].id = 'input2';
inputs[1][0].id = 'input3';
inputs[1][1].id = 'input4';
</code></pre>

<p>Not real sure how useful the above is until you attach the elements. The below may be more what you're looking for:</p>

<pre><code>&lt;input text=""text"" id=""input5""/&gt;
&lt;input text=""text"" id=""input6""/&gt;
&lt;input text=""text"" id=""input7""/&gt;
&lt;input text=""text"" id=""input8""/&gt;    
var els = [
    [
        document.getElementById('input5'),
        document.getElementById('input6')
    ],
    [
        document.getElementById('input7'),
        document.getElementById('input8')
    ]
];    
els[0][0].id = 'input5';
els[0][1].id = 'input6';
els[1][0].id = 'input7';
els[1][1].id = 'input8';
</code></pre>

<p><a href=""http://jsfiddle.net/z4Un3/3/"" rel=""noreferrer"">http://jsfiddle.net/z4Un3/3/</a></p>

<p>Or, maybe this:</p>

<pre><code>&lt;input text=""text"" value=""4"" id=""input5""/&gt;
&lt;input text=""text"" value=""4"" id=""input6""/&gt;
&lt;br/&gt;
&lt;input text=""text"" value=""2"" id=""input7""/&gt;
&lt;input text=""text"" value=""4"" id=""input8""/&gt;

var els = [
    [
        document.getElementById('input5'),
        document.getElementById('input6')
    ],
    [
        document.getElementById('input7'),
        document.getElementById('input8')
    ]
];

var result = [];

for (var i = 0; i &lt; els.length; i++) {
    result[result.length] = els[0][i].value - els[1][i].value;
}
</code></pre>

<p>Which gives:</p>

<pre><code>[2, 0]
</code></pre>

<p>In the console. If you want to output that to text, you can <code>result.join(' ');</code>, which would give you <code>2 0</code>.</p>

<p><a href=""http://jsfiddle.net/z4Un3/6/"" rel=""noreferrer"">http://jsfiddle.net/z4Un3/6/</a></p>

<p><strong>EDIT</strong></p>

<p>And a working demonstration:</p>

<pre><code>&lt;input text=""text"" value=""4"" id=""input5""/&gt;
&lt;input text=""text"" value=""4"" id=""input6""/&gt;
&lt;br/&gt;
&lt;input text=""text"" value=""2"" id=""input7""/&gt;
&lt;input text=""text"" value=""4"" id=""input8""/&gt;
&lt;br/&gt;
&lt;input type=""button"" value=""Add"" onclick=""add()""/&gt;

// This would just go in a script block in the head
function add() {
    var els = [
        [
            document.getElementById('input5'),
            document.getElementById('input6')
        ],
        [
            document.getElementById('input7'),
            document.getElementById('input8')
        ]
    ];

    var result = [];

    for (var i = 0; i &lt; els.length; i++) {
        result[result.length] = parseInt(els[0][i].value) - parseInt(els[1][i].value);
    }

    alert(result.join(' '));
}
</code></pre>

<p><a href=""http://jsfiddle.net/z4Un3/8/"" rel=""noreferrer"">http://jsfiddle.net/z4Un3/8/</a></p>
","7545670"
"Get the current year in JavaScript","361861","","<p>How do I get the current year in JavaScript?</p>
","<p>Create a <code>new Date()</code> object and call <strong><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getFullYear"" rel=""noreferrer""><code>getFullYear()</code></a></strong>.</p>

<pre><code>(new Date()).getFullYear()
// returns the current year
</code></pre>
","6002276"
"How to make the window full screen with Javascript (stretching all over the screen)","361630","","<p>How can I make a visitor's browser go fullscreen using JavaScript, in a way that works with IE, Firefox and Opera?</p>
","<p>This is as close as you can get to full screen in JavaScript:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
    window.onload = maxWindow;

    function maxWindow() {
        window.moveTo(0, 0);


        if (document.all) {
            top.window.resizeTo(screen.availWidth, screen.availHeight);
        }

        else if (document.layers || document.getElementById) {
            if (top.window.outerHeight &lt; screen.availHeight || top.window.outerWidth &lt; screen.availWidth) {
                top.window.outerHeight = screen.availHeight;
                top.window.outerWidth = screen.availWidth;
            }
        }
    }

&lt;/script&gt; 
</code></pre>
","1125113"
"Tool to Unminify / Decompress JavaScript","361528","","<p>Are there any command line scripts and/or online tools that can reverse the effects of minification similar to how Tidy can clean up horrific HTML?</p>

<p>(I'm specifically looking to unminify a minified JavaScript file, so variable renaming might still be an issue.)</p>
","<p>You can use this : <a href=""http://jsbeautifier.org/"" rel=""noreferrer"">http://jsbeautifier.org/</a>
But it depends on the minify method you are using, this one only formats the code, it doesn't change variable names, nor uncompress base62 encoding.</p>

<p>edit: in fact it can unpack ""packed"" scripts (packed with Dean Edward's packer : <a href=""http://dean.edwards.name/packer/"" rel=""noreferrer"">http://dean.edwards.name/packer/</a>)</p>
","822130"
"How to make a button redirect to another page using jQuery or just Javascript","361158","","<p>I am making a prototype and I want the search button to link to a sample search results page.</p>

<p>How do I make a button redirect to another page when it is clicked using jQuery.</p>
","<p>Without script:</p>

<pre><code>&lt;form action=""where-you-want-to-go""&gt;&lt;input type=""submit""&gt;&lt;/form&gt;
</code></pre>

<p>Better yet, since you are just going somewhere, present the user with the standard interface for ""just going somewhere"":</p>

<pre><code>&lt;a href=""where-you-want-to-go""&gt;ta da&lt;/a&gt;
</code></pre>

<p>Although, the context sounds like ""Simulate a normal search where the user submits a form"", in which case the first option is the way to go.</p>
","2238435"
"How to display div after click the button in Javascript?","360935","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/4357291/javascript-show-element-on-click"">Javascript show element on click</a>  </p>
</blockquote>



<p>I have following DIV . I want to display the DIV after button click .Now it is display none </p>

<pre><code>&lt;div  style=""display:none;"" class=""answer_list"" &gt; WELCOME&lt;/div&gt;
&lt;input type=""button"" name=""answer"" &gt;
</code></pre>
","<p>HTML Code:</p>

<pre><code>&lt;div id=""welcomeDiv""  style=""display:none;"" class=""answer_list"" &gt; WELCOME&lt;/div&gt;
&lt;input type=""button"" name=""answer"" value=""Show Div"" onclick=""showDiv()"" /&gt;
</code></pre>

<p>Javascript:    </p>

<pre><code>function showDiv() {
   document.getElementById('welcomeDiv').style.display = ""block"";
}
</code></pre>

<p>See the Demo: <a href=""http://jsfiddle.net/rathoreahsan/vzmnJ/"" rel=""noreferrer"">http://jsfiddle.net/rathoreahsan/vzmnJ/</a></p>
","6957506"
"Check if object exists in JavaScript","359760","","<p>How do I verify the existence of an object in JavaScript?</p>

<p>The following works:</p>

<pre><code>if (!null)
   alert(""GOT HERE"");
</code></pre>

<p>But this fails:</p>

<pre><code>if (!maybeObject)
   alert(""GOT HERE"");
</code></pre>

<p><strong>Error:</strong> maybeObject is not defined.</p>
","<p>You can safely use the <code>typeof</code> operator on undefined variables.</p>

<p>If it has been assigned any value, including null, typeof will return something other than undefined. typeof always returns a string.</p>

<p>Therefore</p>

<pre><code>if (typeof maybeObject != ""undefined"") {
   alert(""GOT THERE"");
}
</code></pre>
","4186939"
"URL encode sees “&” (ampersand) as “&amp;” HTML entity","359476","","<p>I am encoding a string that will be passed in a URL (via GET). But if I use <code>escape</code>, <code>encodeURI</code> or <code>encodeURIComponent</code>, <code>&amp;</code> will be replaced with <code>%26amp%3B</code>, but I want it to be replaced with <code>%26</code>. What am I doing wrong?</p>
","<p>Without seeing your code, it's hard to answer other than a stab in the dark.  I would guess that the string you're passing to <em>encodeURIComponent()</em>, which is the correct method to use, is coming from the result of accessing the <em>innerHTML</em> property.  The solution is to get the <em>innerText</em>/<em>textContent</em> property value instead:</p>

<pre><code>var str, 
    el = document.getElementById(""myUrl"");

if (""textContent"" in el)
    str = encodeURIComponent(el.textContent);
else
    str = encodeURIComponent(el.innerText);
</code></pre>

<p>If that isn't the case, you can use the <em>replace()</em> method to replace the HTML entity:</p>

<pre><code>encodeURIComponent(str.replace(/&amp;amp;/g, ""&amp;""));
</code></pre>
","3541735"
"Get escaped URL parameter","358634","","<p>I'm looking for a jQuery plugin that can get URL parameters, and support this search string without outputting the JavaScript error: ""malformed URI sequence"". If there isn't a jQuery plugin that supports this, I need to know how to modify it to support this.</p>

<pre><code>?search=%E6%F8%E5
</code></pre>

<p>The value of the URL parameter, when decoded, should be:</p>

<pre><code>æøå
</code></pre>

<p>(the characters are Norwegian).</p>

<p>I don't have access to the server, so I can't modify anything on it.</p>
","<p><strong>You should not use jQuery for something like this!</strong><br>
The modern way is to use small reusable modules through a package-manager like Bower.</p>

<p>I've created a tiny <a href=""https://github.com/sindresorhus/query-string"" rel=""nofollow"">module</a> that can parse the query string into an object. Use it like this:</p>

<pre><code>// parse the query string into an object and get the property
queryString.parse(unescape(location.search)).search;
//=&gt; æøå
</code></pre>
","19992436"
"Escape quotes in JavaScript","356820","","<p>I'm outputting values from a database (it isn't really open to public entry, but it is open to entry by a user at the company -- meaning, I'm not worried about <a href=""http://en.wikipedia.org/wiki/Cross-site_scripting"" rel=""noreferrer"">XSS</a>.)</p>

<p>I'm trying to output a tag like this:</p>

<pre><code>&lt;a href="""" onclick=""DoEdit('DESCRIPTION');""&gt;Click Me&lt;/a&gt;
</code></pre>

<p>DESCRIPTION is actually a value from the database that is something like this:</p>

<pre><code>Prelim Assess ""Mini"" Report
</code></pre>

<p>I've tried replacing "" with \"", but no matter what I try, Firefox keeps chopping off my JavaScript call  after the space after the word <em>Assess</em>, and it is causing all sorts of issues.</p>

<p>I must bemissing the obvious answer, but for the life of me I can't figure it out.</p>

<p>Anyone care to point out my idiocy?</p>

<p>Here is the entire HTML page (it will be an <a href=""http://en.wikipedia.org/wiki/.NET_Framework"" rel=""noreferrer"">ASP.NET</a> page eventually, but in order to solve this I took out everything else but the problem code)</p>

<pre><code>&lt;html&gt;
    &lt;body&gt;
        &lt;a href=""#"" onclick=""DoEdit('Preliminary Assessment \""Mini\""'); return false;""&gt;edit&lt;/a&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>
","<p>You need to escape the string you are writing out into <code>DoEdit</code> to scrub out the double-quote characters. They are causing the <code>onclick</code> HTML attribute to close prematurely.</p>

<p>Using the JavaScript escape character, <code>\</code>, isn't sufficient in the HTML context. You need to replace the double-quote with the proper XML entity representation, <code>&amp;quot;</code>.</p>
","2004178"
"Is there any function like IsNumeric in JavaScript to validate numbers?","356796","","<p>Is there is any function like IsNumeric in pure JavaScript? I know jQuery has this function to check the integers.</p>
","<p>There's no isNumeric type of function but you could do:</p>

<p><strike></p>

<pre><code>if(parseInt(yourVal, 10) &gt; 0) {
  ...numeric value
}
</code></pre>

<p></strike></p>

<p>OR add your own:</p>

<pre><code>function isNumeric(n) {
  return !isNaN(parseFloat(n)) &amp;&amp; isFinite(n);
}
</code></pre>

<p><strong>Note: Since <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt"" rel=""noreferrer"">parseInt()</a> is not a proper way to check for numeric it ""SHOULD NOT BE USED"".</strong></p>
","9716488"
"JavaScript for detecting browser language preference","356383","","<p>I have been trying to detect the browser language preference using JavaScript.</p>

<p>If I set the browser language in IE in <code>Tools&gt;Internet Options&gt;General&gt;Languages</code>, how do I read this value using JavaScript?</p>

<p>Same problem for Firefox. I'm not able to detect the setting for <code>tools&gt;options&gt;content&gt;languages</code> using <code>navigator.language</code>.</p>

<p>Using  <code>navigator.userLanguage</code>  , it detects the setting done thru
<code>Start&gt;ControlPanel&gt;RegionalandLanguageOptions&gt;Regional Options</code> tab.</p>

<p>I have tested with <code>navigator.browserLanguage</code> and <code>navigator.systemLanguage</code> but neither  returns the value for the first setting(<code>Tools&gt;InternetOptions&gt;General&gt;Languages</code>)</p>

<p>I found a <a href=""http://www.velocityreviews.com/forums/t99655-save-way-to-detect-browser-language.html"" rel=""noreferrer"">link</a> which discusses this in detail, but the question remains unanswered :(</p>
","<p>I think the main problem here is that the browser settings don't actually affect the <code>navigator.language</code> property that is obtained via javascript. </p>

<p>What they do affect is the HTTP 'Accept-Language' header, but it appears this value is not available through javascript at all. (Probably why @anddoutoi states he can't find a reference for it that doesn't involve server side.)</p>

<p>I have coded a workaround: I've knocked up a google app engine script at <a href=""http://ajaxhttpheaders.appspot.com"" rel=""noreferrer"">http://ajaxhttpheaders.appspot.com</a> that will return you the HTTP request headers via JSONP.</p>

<p>(Note: this is a hack only to be used if you do not have a back end available that can do this for you. In general you should not be making calls to  third party hosted javascript files in your pages unless you have a very high level of trust in the host.)</p>

<p>I intend to leave it there in perpetuity so feel free to use it in your code.</p>

<p>Here's some example code (in jQuery) for how you might use it</p>

<pre><code>$.ajax({ 
    url: ""http://ajaxhttpheaders.appspot.com"", 
    dataType: 'jsonp', 
    success: function(headers) {
        language = headers['Accept-Language'];
        nowDoSomethingWithIt(language);
    }
});
</code></pre>

<p>Hope someone finds this useful.</p>

<p>Edit: I have written a small jQuery plugin on github that wraps this functionality: <a href=""https://github.com/dansingerman/jQuery-Browser-Language"" rel=""noreferrer"">https://github.com/dansingerman/jQuery-Browser-Language</a></p>

<p>Edit 2: As requested here is the code that is running on AppEngine (super trivial really):</p>

<pre><code>class MainPage(webapp.RequestHandler):
    def get(self):
        headers = self.request.headers
        callback = self.request.get('callback')

        if callback:
          self.response.headers['Content-Type'] = 'application/javascript'
          self.response.out.write(callback + ""("")
          self.response.out.write(headers)
          self.response.out.write("")"")
        else:
          self.response.headers['Content-Type'] = 'text/plain'
          self.response.out.write(""I need a callback="")

application = webapp.WSGIApplication(
                                     [('/', MainPage)],
                                     debug=False)

def main():
    run_wsgi_app(application)

if __name__ == ""__main__"":
    main()
</code></pre>

<p>Edit3: Have open sourced the app engine code here: <a href=""https://github.com/dansingerman/app-engine-headers"" rel=""noreferrer"">https://github.com/dansingerman/app-engine-headers</a></p>
","3335420"
"Check if a user has scrolled to the bottom","356092","","<p>I'm making a pagination system (sort of like Facebook) where the content loads when the user scrolls to the bottom. I imagine the best way to do that is to find when the user is at the bottom of the page and run an ajax query to load more posts.</p>

<p>The only problem is I don't know how to check if the user has scrolled to the bottom of the page with jQuery. Any ideas?</p>

<p><strong>I need to find a way to check when the user has scrolled to the bottom of the page with jQuery.</strong></p>
","<p>Use the <a href=""http://api.jquery.com/scroll/"" rel=""noreferrer""><code>.scroll()</code></a> event on <code>window</code>, like this:</p>

<pre><code>$(window).scroll(function() {
   if($(window).scrollTop() + $(window).height() == $(document).height()) {
       alert(""bottom!"");
   }
});
</code></pre>

<p><a href=""http://jsfiddle.net/nick_craver/gWD66/"" rel=""noreferrer"">You can test it here</a>, this takes the top scroll of the window, so how much it's scrolled down, adds the height of the visible window and checks if that equals the height of the overall content (<code>document</code>).  If you wanted to instead check if the user is <em>near</em> the bottom, it'd look something like this:</p>

<pre><code>$(window).scroll(function() {
   if($(window).scrollTop() + $(window).height() &gt; $(document).height() - 100) {
       alert(""near bottom!"");
   }
});
</code></pre>

<p><a href=""http://jsfiddle.net/nick_craver/gWD66/1/"" rel=""noreferrer"">You can test that version here</a>, just adjust that <code>100</code> to whatever pixel from the bottom you want to trigger on.</p>
","3898152"
"How to use OR condition in a JavaScript IF statement?","355880","","<p>I understand that in JavaScript you can write:</p>

<pre><code>if (A &amp;&amp; B) { do something }
</code></pre>

<p>But how do I implement an OR such as:</p>

<pre><code>if (A OR B) { do something }
</code></pre>
","<p>Simply use doublepipe operator that is <code>||</code>.</p>

<pre><code>if (A || B)
</code></pre>
","2363852"
"Get the real width and height of an image with JavaScript? (in Safari/Chrome)","355823","","<p>I am creating a jQuery plugin.</p>

<p>How do I get real image width and height with Javascript in Safari?</p>

<p>Following works with Firefox 3, IE7 and Opera 9:</p>

<pre><code>var pic = $(""img"")

// need to remove these in of case img-element has set width and height
pic.removeAttr(""width""); 
pic.removeAttr(""height"");

var pic_real_width = pic.width();
var pic_real_height = pic.height();
</code></pre>

<p>But in Webkit browsers like Safari and Google Chrome values are 0.</p>
","<p>Webkit browsers set the height and width property after the image is loaded.  Instead of using timeouts, I'd recommend using an image's onload event.  Here's a quick example:</p>

<pre><code>var img = $(""img"")[0]; // Get my img elem
var pic_real_width, pic_real_height;
$(""&lt;img/&gt;"") // Make in memory copy of image to avoid css issues
    .attr(""src"", $(img).attr(""src""))
    .load(function() {
        pic_real_width = this.width;   // Note: $(this).width() will not
        pic_real_height = this.height; // work for in memory images.
    });
</code></pre>

<p>To avoid any of the effects CSS might have on the image's dimensions, the code above makes an in memory copy of the image.  This is a very clever solution suggested by <a href=""https://stackoverflow.com/questions/318630#3192577"">FDisk</a>.</p>

<p>You can also use the <code>naturalHeight</code> and <code>naturalWidth</code> HTML5 attributes.</p>
","670433"
"On - window.location.hash - Change?","355719","","<p>I am using Ajax and hash for navigation. </p>

<p>Is there a way to check if the <code>window.location.hash</code> changed like this?</p>

<p><a href=""http://example.com/blah"" rel=""noreferrer"">http://example.com/blah</a><strong>#123</strong> to <a href=""http://example.com/blah"" rel=""noreferrer"">http://example.com/blah</a><strong>#456</strong></p>

<p>It works if I check it when the document loads.</p>

<p>But if I have #hash based navigation it doesn't work when I press the back button on the browser (so I jump from blah#456 to blah#123). </p>

<p>It shows inside the address box, but I can't catch it with JavaScript.</p>
","<p>The only way to really do this (and is how the 'reallysimplehistory' does this), is by setting an interval that keeps checking the current hash, and comparing it against what it was before, we do this and let subscribers subscribe to a changed event that we fire if the hash changes.. its not perfect but browsers really don't support this event natively.</p>

<hr>

<p>Update to keep this answer fresh:</p>

<p>If you are using jQuery (which today should be somewhat foundational for most) then a nice solution is to use the abstraction that jQuery gives you by using its events system to listen to hashchange events on the window object.</p>

<pre><code>$(window).on('hashchange', function() {
  //.. work ..
});
</code></pre>

<p>The nice thing here is you can write code that doesn't need to even worry about hashchange support, however you DO need to do some magic, in form of a somewhat lesser known jQuery feature <a href=""http://benalman.com/news/2010/03/jquery-special-events/"" rel=""noreferrer"">jQuery special events</a>.</p>

<p>With this feature you essentially get to run some setup code for any event, the first time somebody attempts to use the event in any way (such as binding to the event).</p>

<p>In this setup code you can check for native browser support and if the browser doesn't natively implement this, you can setup a single timer to poll for changes, and trigger the jQuery event.</p>

<p>This completely unbinds your code from needing to understand this support problem, the implementation of a special event of this kind is trivial (to get a simple 98% working version), but why do that <a href=""http://benalman.com/projects/jquery-hashchange-plugin/"" rel=""noreferrer"">when somebody else has already</a>.</p>
","680865"
"Count the number of occurrences of a character in a string in Javascript","354679","","<p>I need to count the number of occurrences of a character in a string.</p>

<p>For example, suppose my string contains:</p>

<pre><code>var mainStr = ""str1,str2,str3,str4"";
</code></pre>

<p>I want to find the count of comma <code>,</code> character, which is 3. And the count of individual strings after the split along comma, which is 4.</p>

<p>I also need to validate that each of the strings i.e str1 or str2 or str3 or str4 should not exceed, say, 15 characters.</p>
","<p>I have updated this answer. I like the idea of using a match better, but it is slower:</p>

<pre><code>console.log((""str1,str2,str3,str4"".match(/,/g) || []).length); //logs 3

console.log((""str1,str2,str3,str4"".match(new RegExp(""str"", ""g"")) || []).length); //logs 4
</code></pre>

<p><a href=""http://jsfiddle.net/btipling/ru6yvrce/3/"" rel=""noreferrer"">jsfiddle</a></p>

<p>Use a regular expression literal if you know what you are searching for beforehand, if not you can use the <code>RegExp</code> constructor, and pass in the <code>g</code> flag as an argument.</p>

<p><code>match</code> returns <code>null</code> with no results thus the <code>|| []</code></p>

<p>The original answer I made in 2009 is below. It creates an array unnecessarily, but <strong>using a split is faster</strong> (as of September 2014). I'm ambivalent, if I really needed the speed there would be no question that I would use a split, but I would prefer to use match.</p>

<p>Old answer (from 2009):</p>

<p>If you're looking for the commas:</p>

<pre><code>(mainStr.split("","").length - 1) //3
</code></pre>

<p>If you're looking for the str</p>

<pre><code>(mainStr.split(""str"").length - 1) //4
</code></pre>

<p>Both in @Lo's answer and in my own silly <a href=""http://jsperf.com/performance-of-match-vs-split"" rel=""noreferrer"">jsperf test</a> split comes ahead in speed, at least in Chrome, but again creating the extra array just doesn't seem sane.</p>
","881111"
"How do I select an element with its name attribute in jQuery?","354386","","<p>How to get an element with its <code>name</code> attribute with jQuery?</p>

<p>Is there anything (like <code>#</code> for id and <code>.</code> for class) for name in jQuery?</p>
","<pre><code>$('[name=""ElementNameHere""]').doStuff();
</code></pre>

<p>jQuery supports CSS3 style selectors, plus some more. </p>

<h2>See more</h2>

<ul>
<li><strong><a href=""http://api.jquery.com/category/selectors/"" rel=""noreferrer"">jQuery - Selectors</a></strong></li>
<li><strong><a href=""http://api.jquery.com/attribute-equals-selector/"" rel=""noreferrer"">jQuery - <code>[attribute=""""]</code> selector</a></strong></li>
</ul>
","9680042"
"How to getElementByClass instead of GetElementById with Javascript?","354370","","<p>I'm trying to toggle the visibility of certain DIV elements on a website depending on the class of each DIV. I'm using a basic Javascript snippet to toggle them. The problem is that the script only uses getElementById, as getElementByClass is not supported in Javascript. And unfortunately I do have to use class and not id to name the DIVs because the DIV names are dynamically generated by my XSLT stylesheet using certain category names.</p>

<p>I know that certain browsers now support getElementByClass, but since Internet Explorer doesn't I don't want to go that route.</p>

<p>I've found scripts using functions to get elements by class (such as #8 on this page: <a href=""http://www.dustindiaz.com/top-ten-javascript/"" rel=""noreferrer"">http://www.dustindiaz.com/top-ten-javascript/</a>), but I can't figure out how to integrate them with with my toggle script.</p>

<p>Here's the html code. The DIVs themselves are missing since they are generated on page load with XML/XSLT. Thanks so much in advance. </p>

<p>Main Question: How do I get the below Toggle script to get Element by Class instead of get Element by ID?</p>

<pre><code>&lt;html&gt;

&lt;head&gt;

&lt;!--This is the TOGGLE script--&gt;
&lt;script type=""text/javascript""&gt;
&lt;!--
    function toggle_visibility(id) {
       var e = document.getElementById(id);
       if(e.style.display == 'block')
          e.style.display = 'none';
       else
          e.style.display = 'block';
    }
//--&gt;
&lt;/script&gt;

&lt;/head&gt;

&lt;!--the XML/XSLT page contents will be loaded here, with DIVs named by Class separating dozens of li's--&gt;

&lt;a href=""#"" onclick=""toggle_visibility('class1');""&gt;Click here to toggle visibility of class 1 objects&lt;/a&gt;

&lt;a href=""#"" onclick=""toggle_visibility('class2');""&gt;Click here to toggle visibility of class 2 objects&lt;/a&gt;


&lt;/body&gt;
&lt;/html&gt;
</code></pre>
","<p>Modern browsers have support for <code>document.getElementsByClassName</code>. You can see the full breakdown of which vendors provide this functionality at <a href=""http://caniuse.com/#feat=getelementsbyclassname"" rel=""noreferrer"">caniuse</a>. If you're looking to extend support into older browsers, you may want to consider a selector engine like that found in jQuery or a polyfill.</p>

<h3>Older Answer</h3>

<p>You'll want to check into <a href=""http://www.jquery.com"" rel=""noreferrer"">jQuery</a>, which will allow the following:</p>

<pre><code>$("".classname"").hide(); // hides everything with class 'classname'
</code></pre>

<p>Google offers a hosted jQuery source-file, so you can reference it and be up-and-running in moments. Include the following in your page:</p>

<pre><code>&lt;script type=""text/javascript"" src=""http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js""&gt;&lt;/script&gt;
&lt;script type=""text/javascript""&gt;
  $(function(){
    $("".classname"").hide();
  });
&lt;/script&gt;
</code></pre>
","1933609"
"How to read data From *.CSV file using javascript?","354347","","<p>My csv data looks like this: </p>

<blockquote>
  <p>heading1,heading2,heading3,heading4,heading5,value1_1,value2_1,value3_1,value4_1,value5_1,value1_2,value2_2,value3_2,value4_2,value5_2....</p>
</blockquote>

<p>How do you read this data and convert to an array like this using Javascript?: </p>

<blockquote>
  <p>[heading1:value1_1 , heading2:value2_1, heading3 : value3_1, heading4
  : value4_1, heading5 : value5_1 ],[heading1:value1_2 ,
  heading2:value2_2, heading3 : value3_2, heading4 : value4_2, heading5
  : value5_2 ]....</p>
</blockquote>

<p>I've tried this code but no luck!:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
    var allText =[];
    var allTextLines = [];
    var Lines = [];

    var txtFile = new XMLHttpRequest();
    txtFile.open(""GET"", ""file://d:/data.txt"", true);
    txtFile.onreadystatechange = function()
    {
        allText = txtFile.responseText;
        allTextLines = allText.split(/\r\n|\n/);
    };

    document.write(allTextLines);&lt;br&gt;
    document.write(allText);&lt;br&gt;
    document.write(txtFile);&lt;br&gt;
&lt;/script&gt;
</code></pre>
","<p><strong>NOTE:</strong> I concocted this solution before I was reminded about all the ""special cases"" that can occur in a valid CSV file, like escaped quotes. I'm leaving my answer for those who want something quick and dirty, but I recommend <a href=""https://stackoverflow.com/a/12289296/901048"">Evan's answer</a> for accuracy.</p>

<hr>

<p>This code will work when your <code>data.txt</code> file is one long string of comma-separated entries, with no newlines:</p>

<p>data.txt:</p>

<pre><code> heading1,heading2,heading3,heading4,heading5,value1_1,...,value5_2
</code></pre>

<p>javascript:</p>

<pre><code>$(document).ready(function() {
    $.ajax({
        type: ""GET"",
        url: ""data.txt"",
        dataType: ""text"",
        success: function(data) {processData(data);}
     });
});

function processData(allText) {
    var record_num = 5;  // or however many elements there are in each row
    var allTextLines = allText.split(/\r\n|\n/);
    var entries = allTextLines[0].split(',');
    var lines = [];

    var headings = entries.splice(0,record_num);
    while (entries.length&gt;0) {
        var tarr = [];
        for (var j=0; j&lt;record_num; j++) {
            tarr.push(headings[j]+"":""+entries.shift());
        }
        lines.push(tarr);
    }
    // alert(lines);
}
</code></pre>

<p>The following code will work on a ""true"" CSV file with linebreaks between each set of records:</p>

<p>data.txt:</p>

<pre><code>heading1,heading2,heading3,heading4,heading5
value1_1,value2_1,value3_1,value4_1,value5_1
value1_2,value2_2,value3_2,value4_2,value5_2
</code></pre>

<p>javascript:</p>

<pre><code>$(document).ready(function() {
    $.ajax({
        type: ""GET"",
        url: ""data.txt"",
        dataType: ""text"",
        success: function(data) {processData(data);}
     });
});

function processData(allText) {
    var allTextLines = allText.split(/\r\n|\n/);
    var headers = allTextLines[0].split(',');
    var lines = [];

    for (var i=1; i&lt;allTextLines.length; i++) {
        var data = allTextLines[i].split(',');
        if (data.length == headers.length) {

            var tarr = [];
            for (var j=0; j&lt;headers.length; j++) {
                tarr.push(headers[j]+"":""+data[j]);
            }
            lines.push(tarr);
        }
    }
    // alert(lines);
}
</code></pre>

<p><a href=""http://jsfiddle.net/mblase75/dcqxr/"" rel=""noreferrer"">http://jsfiddle.net/mblase75/dcqxr/</a></p>
","7431565"
"The data-toggle attributes in Twitter Bootstrap","353983","","<p>What does <code>data-toggle</code> attributes do in Twitter Bootstrap? I couldn't find an answer in Bootstrap API.</p>

<p>I have seen a similar question before as well, <a href=""https://stackoverflow.com/questions/10481684/where-does-data-toggle-attribute-of-bootstrap-framework-come-from"">link</a>.
But it didn't help me much.</p>
","<p>It is a HTML5 data attribute that automatically hooks up the element to the type of widget it is. </p>

<p>Some Examples:</p>

<pre><code>data-toggle=""modal""
data-toggle=""collapse""
data-toggle=""dropdown""
data-toggle=""tab""
</code></pre>

<p>Go through the <a href=""http://getbootstrap.com/javascript"" rel=""noreferrer"">JavaScript docs</a> and search for data-toggle and you will see it used in the code examples. </p>

<p>One working example:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;
&lt;script src=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js""&gt;&lt;/script&gt;
&lt;link href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css"" rel=""stylesheet""/&gt;

&lt;div class=""dropdown""&gt;
  &lt;a class=""dropdown-toggle"" data-toggle=""dropdown"" href=""#""&gt;Dropdown trigger&lt;/a&gt;
  &lt;ul class=""dropdown-menu"" role=""menu"" aria-labelledby=""dLabel""&gt;
    &lt;li&gt;&lt;a href=""#""&gt;Item&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
</p>
","15113710"
"How to create a simple map using JavaScript/JQuery","353711","","<p>How can you create the JavaScript/JQuery equivalent of this Java code:</p>

<pre><code>Map map = new HashMap(); //Doesn't not have to be a hash map, any key/value map is fine
map.put(myKey1, myObj1);
map.put(myKey2, myObj2); //Repeat n times

function Object get(k) {
    return map.get(k);
}
</code></pre>
","<p>Edit: Out of date answer, ECMAScript 2015 (ES6) standard javascript has a Map implementation, read here for more info: <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"" rel=""noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map</a></p>

<pre><code>var map = new Object(); // or var map = {};
map[myKey1] = myObj1;
map[myKey2] = myObj2;

function get(k) {
    return map[k];
}

//map[myKey1] == get(myKey1);
</code></pre>
","4247008"
"What's the difference between JavaScript and Java?","352414","","<p>What's the difference between JavaScript and Java?</p>
","<p>Java and Javascript are similar like Car and Carpet are similar.</p>
","245068"
"Javascript fastest way to duplicate an Array - slice vs for loop","351977","","<p>In order to duplicate an Array in Javascript,</p>

<p>does anyone know (and maybe tested) if it's faster to use:</p>

<p><strong>Slice method:</strong></p>

<pre><code>var dup_array = original_array.slice();
</code></pre>

<p>or <strong>For loop:</strong></p>

<pre><code>for(var i = 0, len = original_array.length; i &lt; len; ++i)
   dup_array[i] = original_array[i];
</code></pre>

<hr>

<p>UPDATE: (just to clarify myself) I know both ways do only a <strong>shallow copy</strong>: if original_array contains references to objects, objects won't be cloned, but only the references will be copied therefore both arrays will have references to the same objects.
But this is not the point of this question.</p>

<p>I'm asking only about speed.</p>
","<p>There are at least <strong>5</strong> (!) ways to clone an array:</p>

<ul>
<li>loop</li>
<li>slice</li>
<li>Array.from()</li>
<li>concat</li>
<li>spread operator, etc. <em>(so slow, forget it for now)</em> </li>
</ul>

<p>There has been a huuuge <a href=""http://jsben.ch/#/wQ9RU"" rel=""noreferrer"">BENCHMARKS thread</a>, providing following information:</p>

<ul>
<li><p>for <strong>blink</strong> browsers <code>slice()</code> is the fastest method, <code>concat()</code> is a bit slower, and <code>while loop</code> is 2.4x slower. </p></li>
<li><p>for other browsers <code>while loop</code> is the fastest method, since those browsers don't have internal optimizations for <code>slice</code> and <code>concat</code>.</p></li>
</ul>

<p>This remains true in Jul 2016. </p>

<p>Below are simple scripts that you can copy-paste into your browser's console and run several times to see the picture. They output milliseconds, lower is better.</p>

<p><strong>while loop</strong></p>

<pre><code>n = 1000*1000;
start = + new Date();
a = Array(n); 
b = Array(n); 
i = a.length;
while(i--) b[i] = a[i];
console.log(new Date() - start);
</code></pre>

<p><strong>slice</strong>  </p>

<pre><code>n = 1000*1000;
start = + new Date();
a = Array(n); 
b = a.slice();
console.log(new Date() - start);
</code></pre>

<p>Please note that these methods will clone the Array object itself, array contents however are copied by reference and are not deep cloned.</p>

<pre><code>origAr == clonedArr //returns false
origAr[0] == clonedArr[0] //returns true
</code></pre>
","20547803"
"How to check if object property exists with a variable holding the property name?","351680","","<p>I am checking for the existence of an object property with a variable holding the property name in question. </p>

<pre><code>var myObj;
myObj.prop = ""exists"";
var myProp = ""p""+""r""+""o""+""p"";

if(myObj.myProp){
    alert(""yes, i have that property"");
};
</code></pre>

<p>This is <code>undefined</code> because it's looking for <code>myObj.myProp</code> but I want it to check for <code>myObj.prop</code></p>
","<pre><code>var myProp = 'prop';
if(myObj.hasOwnProperty(myProp)){
    alert(""yes, i have that property"");
}
</code></pre>

<p>Or</p>

<pre><code>var myProp = 'prop';
if(myProp in myObj){
    alert(""yes, i have that property"");
</code></pre>

<p>Or</p>

<pre><code>if('prop' in myObj){
    alert(""yes, i have that property"");
}
</code></pre>
","11040508"
"Chrome sendrequest error: TypeError: Converting circular structure to JSON","351259","","<p>I've got the following...</p>

<pre><code>chrome.extension.sendRequest({
  req: ""getDocument"",
  docu: pagedoc,
  name: 'name'
}, function(response){
  var efjs = response.reply;
});
</code></pre>

<p>which calls the following..</p>

<pre><code>case ""getBrowserForDocumentAttribute"":
  alert(""ZOMG HERE"");
  sendResponse({
    reply: getBrowserForDocumentAttribute(request.docu,request.name)
  });
  break;
</code></pre>

<p>However, my code never reaches ""ZOMG HERE"" but rather throws the following error while running <code>chrome.extension.sendRequest</code></p>

<pre><code> Uncaught TypeError: Converting circular structure to JSON
 chromeHidden.JSON.stringify
 chrome.Port.postMessage
 chrome.initExtension.chrome.extension.sendRequest
 suggestQuery
</code></pre>

<p>Does anyone have any idea what is causing this?</p>
","<p>It means that the object you pass in the request (I guess it is <code>pagedoc</code>) has a circular reference, something like:</p>

<pre><code>var a = {};
a.b = a;
</code></pre>

<p><code>JSON.stringify</code> cannot convert structures like this.</p>

<p><strong>N.B.</strong>: This would be the case with DOM nodes, which have circular references, even if they are not attached to the DOM tree. Each node has an <em><code>ownerDocument</code></em> which refers to <code>document</code> in most cases. <code>document</code> has a reference to the DOM tree at least through <code>document.body</code> and <code>document.body.ownerDocument</code> refers back to <code>document</code> again, which is only <em>one</em> of multiple circular references in the DOM tree.</p>
","4816258"
"How to display JavaScript variables in a HTML page without document.write","350773","","<p>I am trying to display some JavaScript variable on my HTML page. </p>

<p>I was first using <code>document.write()</code> but it use to overwrite the current page when the function was called. </p>

<p>After searching around, the general consensus was that <code>document.write()</code> isn't liked very much. What are the other options? </p>

<p>I found a page suggesting using <code>.innerHTML</code> but that was written in 2005. </p>

<p>A jsFiddle illustrating my problem <a href=""http://jsfiddle.net/xHk5g/"" rel=""noreferrer"">http://jsfiddle.net/xHk5g/</a></p>
","<p><code>Element.innerHTML</code> is pretty much the way to go. Here are a few ways to use it:</p>

<h3>HTML</h3>

<pre class=""lang-html prettyprint-override""><code>&lt;div class=""results""&gt;&lt;/div&gt;
</code></pre>

<h3>JavaScript</h3>

<pre class=""lang-js prettyprint-override""><code>// 'Modern' browsers (IE8+, use CSS-style selectors)
document.querySelector('.results').innerHTML = 'Hello World!';

// Using the jQuery library
$('.results').html('Hello World!');
</code></pre>

<p>If you just want to update a portion of a <code>&lt;div&gt;</code> I usually just add an empty element with a class like <code>value</code> or one I want to replace the contents of to the main <code>&lt;div&gt;</code>. e.g.</p>

<pre class=""lang-html prettyprint-override""><code>&lt;div class=""content""&gt;Hello &lt;span class='value'&gt;&lt;/span&gt;&lt;/div&gt;
</code></pre>

<p>Then I'd use some code like this:</p>

<pre class=""lang-js prettyprint-override""><code>// 'Modern' browsers (IE8+, use CSS-style selectors)
document.querySelector('.content .value').innerHTML = 'World!';

// Using the jQuery library
$("".content .value"").html(""World!"");
</code></pre>

<p>Then the HTML/DOM would now contain:</p>

<pre class=""lang-html prettyprint-override""><code>&lt;div class=""content""&gt;Hello &lt;span class='value'&gt;World!&lt;/span&gt;&lt;/div&gt;
</code></pre>

<h3>Full example. Click run snippet to try it out.</h3>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>// Plain Javascript Example
var $jsName = document.querySelector('.name');
var $jsValue = document.querySelector('.jsValue');

$jsName.addEventListener('input', function(event){
  $jsValue.innerHTML = $jsName.value;
}, false);


// JQuery example
var $jqName = $('.name');
var $jqValue = $('.jqValue');

$jqName.on('input', function(event){
  $jqValue.html($jqName.val());
});</code></pre>
<pre class=""snippet-code-css lang-css prettyprint-override""><code>html {
  font-family: sans-serif;
  font-size: 16px;
}

h1 {
  margin: 1em 0 0.25em 0;
}

input[type=text] {
  padding: 0.5em;
}

.jsValue, .jqValue {
  color: red;
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script src=""https://code.jquery.com/jquery-1.11.3.js""&gt;&lt;/script&gt;
  &lt;meta charset=""utf-8""&gt;
  &lt;meta name=""viewport"" content=""width=device-width""&gt;
  &lt;title&gt;Setting HTML content example&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;!-- This &lt;input&gt; field is where I'm getting the name from --&gt;
  &lt;label&gt;Enter your name: &lt;input class=""name"" type=""text"" value=""World""/&gt;&lt;/label&gt;
  
  &lt;!-- Plain Javascript Example --&gt;
  &lt;h1&gt;Plain Javascript Example&lt;/h1&gt;Hello &lt;span class=""jsValue""&gt;World&lt;/span&gt;
  
  &lt;!-- jQuery Example --&gt;
  &lt;h1&gt;jQuery Example&lt;/h1&gt;Hello &lt;span class=""jqValue""&gt;World&lt;/span&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
</div>
</div>
</p>
","9689182"
"How do I check if an HTML element is empty using jQuery?","350653","","<p>I'm trying to call a function only if an HTML element is empty, using jQuery.</p>

<p>Something like this:</p>

<pre><code>if (isEmpty($('#element'))) {
    // do something
}
</code></pre>
","<pre><code>if ($('#element').is(':empty')){
  //do something
}
</code></pre>

<p>for more info see <a href=""http://api.jquery.com/is/"" rel=""noreferrer"">http://api.jquery.com/is/</a> and <a href=""http://api.jquery.com/empty-selector/"" rel=""noreferrer"">http://api.jquery.com/empty-selector/</a></p>

<p><strong>EDIT:</strong></p>

<p>As some have pointed, the browser interpretation of an empty element can vary. If you would like to ignore invisible elements such as spaces and line breaks and make the implementation more consistent you can create a function (or just use the code inside of it).</p>

<pre><code>  function isEmpty( el ){
      return !$.trim(el.html())
  }
  if (isEmpty($('#element'))) {
      // do something
  }
</code></pre>

<p>You can also make it into a jQuery plugin, but you get the idea.</p>
","6813294"
"What is the best way to test for an empty string with jquery-out-of-the-box?","350499","","<p>What is the best way to test for an empty string with jquery-out-of-the-box, i.e. without plugins? I tried <a href=""http://zipalong.com/blog/?p=287"" rel=""noreferrer"">this</a>. </p>

<p>But it did't work at least out-of-the-box. It would be nice to use something that's builtin.</p>

<p>I wouldn't like to repeat </p>

<pre><code>if (a == null || a=='')
</code></pre>

<p>everywhere if some  <code>if (isempty(a))</code>   would be available.</p>
","<pre><code>if (!a) {
  // is emtpy
}
</code></pre>

<p>To ignore white space for strings:</p>

<pre><code>if (!a.trim()) {
    // is empty or whitespace
}
</code></pre>

<p>If you need legacy support (IE8-) for <code>trim()</code>, use <a href=""http://api.jquery.com/jquery.trim/"" rel=""noreferrer""><code>$.trim</code></a> or a <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Compatibility"" rel=""noreferrer"">polyfill</a>.</p>
","1812253"
"Adding a parameter to the URL with JavaScript","350362","","<p>In a web application that makes use of AJAX calls, I need to submit a request but add a parameter to the end of the URL, for example:</p>

<p>Original URL: </p>

<blockquote>
  <p><a href=""http://server/myapp.php?id=10"" rel=""noreferrer"">http://server/myapp.php?id=10</a></p>
</blockquote>

<p>Resulting URL:</p>

<blockquote>
  <p><a href=""http://server/myapp.php?id=10"" rel=""noreferrer"">http://server/myapp.php?id=10</a><strong>&amp;enabled=true</strong></p>
</blockquote>

<p>Looking for a JavaScript function which parses the URL looking at each parameter, then adds the new parameter or updates the value if one already exists.</p>
","<p>A basic implementation which you'll need to adapt would look something like this:</p>

<pre><code>function insertParam(key, value)
{
    key = encodeURI(key); value = encodeURI(value);

    var kvp = document.location.search.substr(1).split('&amp;');

    var i=kvp.length; var x; while(i--) 
    {
        x = kvp[i].split('=');

        if (x[0]==key)
        {
            x[1] = value;
            kvp[i] = x.join('=');
            break;
        }
    }

    if(i&lt;0) {kvp[kvp.length] = [key,value].join('=');}

    //this will reload the page, it's likely better to store this until finished
    document.location.search = kvp.join('&amp;'); 
}
</code></pre>

<p>This is approximately twice as fast as a regex or search based solution, but that depends completely on the length of the querystring and the index of any match</p>

<hr>

<p>the slow regex method I benchmarked against for completions sake (approx +150% slower)</p>

<pre><code>function insertParam2(key,value)
{
    key = encodeURIComponent(key); value = encodeURIComponent(value);

    var s = document.location.search;
    var kvp = key+""=""+value;

    var r = new RegExp(""(&amp;|\\?)""+key+""=[^\&amp;]*"");

    s = s.replace(r,""$1""+kvp);

    if(!RegExp.$1) {s += (s.length&gt;0 ? '&amp;' : '?') + kvp;};

    //again, do what you will here
    document.location.search = s;
}
</code></pre>
","487049"
"get size of json object","350179","","<p>i have a json object that gets returned by an AJAX request and I am having some trouble with the <code>.length</code> because it keeps returning <code>undefined</code>. Just wondering if I'm using it right:</p>

<pre><code>console.log(data.length);
console.log(data.phones.length);
</code></pre>

<p>They both return <code>undefined</code> even though they are valid objects.</p>

<p><strong>Update:</strong><br>
Sample of the JSON object returned:</p>

<pre><code>{""reqStatus"":true,""phones"":{""one"":{""number"":""XXXXXXXXXX"",""type"":""mobile""},""two"":{""number"":""XXXXXXXXXX"",""type"":""mobile""}}}
</code></pre>
","<p><strong>You can use something like this</strong></p>

<pre><code>&lt;script type=""text/javascript""&gt;

  var myObject = {'name':'Kasun', 'address':'columbo','age': '29'}

  var count = Object.keys(myObject).length;
  console.log(count);
&lt;/script&gt;
</code></pre>
","14379528"
"Detect IE version (prior to v9) in JavaScript","349639","","<p>I want to bounce users of our web site to an error page if they're using a version of <code>Internet Explorer</code> prior to v9. It's just not worth our time and money to support <code>IE pre-v9</code>. Users of all other non-IE browsers are fine and shouldn't be bounced. Here's the proposed code:</p>

<pre><code>if(navigator.appName.indexOf(""Internet Explorer"")!=-1){     //yeah, he's using IE
    var badBrowser=(
        navigator.appVersion.indexOf(""MSIE 9"")==-1 &amp;&amp;   //v9 is ok
        navigator.appVersion.indexOf(""MSIE 1"")==-1  //v10, 11, 12, etc. is fine too
    );

    if(badBrowser){
        // navigate to error page
    }
}
</code></pre>

<p>Will this code do the trick?</p>

<p>To head off a few comments that will probably be coming my way:</p>

<ol>
<li>Yes, I know that users can forge their <code>useragent</code> string. I'm not concerned.</li>
<li>Yes, I know that programming pros prefer sniffing out feature-support instead of browser-type but I don't feel this approach makes sense in this case. I already know that all (relevant) non-IE browsers support the features that I need and that all <code>pre-v9 IE</code> browsers don't. Checking feature by feature throughout the site would be a waste.</li>
<li>Yes, I know that someone trying to access the site using <code>IE v1</code> (or >= 20) wouldn't get 'badBrowser' set to true and the warning page wouldn't be displayed properly. That's a risk we're willing to take.</li>
<li>Yes, I know that Microsoft has ""conditional comments"" that can be used for precise browser version detection. IE no longer supports conditional comments as of <code>IE 10</code>, rendering this approach absolutely useless.</li>
</ol>

<p>Any other obvious issues to be aware of?</p>
","<p>This is my preferred way of doing it. It gives maximum control. (Note: Conditional statements are only supported in IE5 - 9.)</p>

<p>First set up your ie classes correctly</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;!--[if lt IE 7]&gt; &lt;html class=""lt-ie9 lt-ie8 lt-ie7""&gt; &lt;![endif]--&gt;
&lt;!--[if IE 7]&gt;    &lt;html class=""lt-ie9 lt-ie8""&gt; &lt;![endif]--&gt;
&lt;!--[if IE 8]&gt;    &lt;html class=""lt-ie9""&gt; &lt;![endif]--&gt;
&lt;!--[if gt IE 8]&gt;&lt;!--&gt; &lt;html&gt; &lt;!--&lt;![endif]--&gt;    
&lt;head&gt;
</code></pre>

<p>Then you can just use CSS to make style exceptions, or, if you require, you can add some simple JavaScript:</p>

<pre><code>(function ($) {
    ""use strict"";

    // Detecting IE
    var oldIE;
    if ($('html').is('.lt-ie7, .lt-ie8, .lt-ie9')) {
        oldIE = true;
    }

    if (oldIE) {
        // Here's your JS for IE..
    } else {
        // ..And here's the full-fat code for everyone else
    }

}(jQuery));
</code></pre>

<p>Thanks to <a href=""http://www.paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/"">Paul Irish</a>.</p>
","10965091"
"How to check 'undefined' value in jQuery","349584","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/27509/detecting-an-undefined-object-property-in-javascript"">Detecting an undefined object property in JavaScript</a><br>
  <a href=""https://stackoverflow.com/questions/2778901/javascript-undefined-compare"">javascript undefined compare</a>  </p>
</blockquote>



<p>How we can add a check for an undefined variable, like:</p>

<pre><code>function A(val) {
  if (val == undefined) 
    // do this
  else
    // do this
}
</code></pre>
","<p>JQuery library was developed specifically to simplify and to unify certain JavaScript functionality.</p>

<p>However if you need to check a variable against <code>undefined</code> value, there is no need to invent any special method, since JavaScript has a <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Operators/typeof""><code>typeof</code></a> operator, which is simple, fast and cross-platform:</p>

<pre><code>if (typeof value === ""undefined"") {
    // ...
}
</code></pre>

<p>It returns a string indicating the type of the variable or other unevaluated operand. The main advantage of this method, compared to <code>if (value === undefined) { ... }</code>, is that <code>typeof</code> will never raise an exception in case if variable <code>value</code> does not exist.</p>
","10653381"
"How to find if div with specific id exists in jQuery?","349082","","<p>I’ve got a function that appends a <code>&lt;div&gt;</code> to an element on click. The function gets the text of the clicked element and assigns it to a variable called <code>name</code>. That variable is then used as the <code>&lt;div&gt;</code> <code>id</code> of the appended element.</p>

<p>I need to see if a <code>&lt;div&gt;</code> <code>id</code> with <code>name</code> already exists before I append the element but I don’t know how to find this.</p>

<p>Here is my code:</p>

<pre><code>$(""li.friend"").live('click', function() {
  name = $(this).text();

  // if-statement checking for existence of &lt;div&gt; should go here
  // If &lt;div&gt; does not exist, then append element
    $(""div#chatbar"").append(""&lt;div class='labels'&gt;&lt;div id='"" + name + ""' style='display:none;'&gt;&lt;/div&gt;"" + name + ""&lt;/div&gt;"");

  // Else
    alert('this record already exists');
});
</code></pre>

<p>This seems pretty straightforward but I’m getting the error “<em>Unexpected end of file while searching for class name”</em>. I have no clue what that means.</p>

<pre><code>if (document.getElementById(name)) {
  $(""div#"" + name).css({bottom: '30px'});
} else {
  $(""div#page-content div#chatbar"").append(""&lt;div class='labels'&gt;"" + name + ""&lt;/div&gt;&lt;div id='"" + name + ""'&gt;&lt;/div&gt;"");
}
</code></pre>

<p>What’s more is that I want to be able to delete this element if I close it out which should then remove the <code>div id [name]</code> from the document but <code>.remove()</code> does not do this.</p>

<p>Here is the code for that:</p>

<pre><code>$("".mini-close"").live('click', function(){
  $(this).parent().remove();
});
</code></pre>

<p>I added <code>.mini-close</code> to the append function as a child of <code>.labels</code> so there was a way to close out of the appended <code>&lt;div&gt;</code> if needed. After clicking <code>.mini-close</code> and attempting to click the same name again from <code>li.friends</code> it still finds the <code>div id [name]</code> and returns the first part of my <code>if</code> statement.</p>
","<p>You can use <a href=""http://api.jquery.com/length/"" rel=""noreferrer""><code>.length</code></a> after the selector to see if it matched any elements, like this:</p>

<pre><code>if($(""#"" + name).length == 0) {
  //it doesn't exist
}
</code></pre>

<p>The full version:</p>

<pre><code>$(""li.friend"").live('click', function(){
  name = $(this).text();
  if($(""#"" + name).length == 0) {
    $(""div#chatbar"").append(""&lt;div class='labels'&gt;&lt;div id='"" + name + ""' style='display:none;'&gt;&lt;/div&gt;"" + name + ""&lt;/div&gt;"");
  } else {
    alert('this record already exists');
  }
});
</code></pre>

<p>Or, the non-jQuery version for this part (since it's an ID):</p>

<pre><code>$(""li.friend"").live('click', function(){
  name = $(this).text();
  if(document.getElementById(name) == null) {
    $(""div#chatbar"").append(""&lt;div class='labels'&gt;&lt;div id='"" + name + ""' style='display:none;'&gt;&lt;/div&gt;"" + name + ""&lt;/div&gt;"");
  } else {
    alert('this record already exists');
  }
});
</code></pre>
","3373767"
"How to edit a JavaScript alert box title?","349072","","<p>I'm generating a JavaScript alert with following code in C# .NET page:</p>

<pre><code>Response.Write(""&lt;script language=JavaScript&gt; alert('Hi select a valid date'); &lt;/script&gt;"");
</code></pre>

<p>It displays an alert box with the heading title as ""Message from webpage"".</p>

<p>Is it possible to modify the title?</p>
","<p>Sigh...no you can't.</p>

<p>Its a security/anti-phishing feature.</p>
","1905340"
"Can one controller call another?","348103","","<p>Is it possible to have one controller use another?</p>

<p>For example:</p>

<p>This HTML document simply prints a message delivered by the <code>MessageCtrl</code> controller in the <code>messageCtrl.js</code> file.</p>

<pre><code>&lt;html xmlns:ng=""http://angularjs.org/""&gt;
&lt;head&gt;
    &lt;meta charset=""utf-8"" /&gt;
    &lt;title&gt;Inter Controller Communication&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div ng:controller=""MessageCtrl""&gt;
        &lt;p&gt;{{message}}&lt;/p&gt;
    &lt;/div&gt;

    &lt;!-- Angular Scripts --&gt;
    &lt;script src=""http://code.angularjs.org/angular-0.9.19.js"" ng:autobind&gt;&lt;/script&gt;
    &lt;script src=""js/messageCtrl.js"" type=""text/javascript""&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>The controller file contains the following code:</p>

<pre><code>function MessageCtrl()
{
    this.message = function() { 
        return ""The current date is: "" + new Date().toString(); 
    };
}
</code></pre>

<p>Which simply prints the current date;</p>

<p>If I were to add another controller, <code>DateCtrl</code> which handed the date in a specific format back to <code>MessageCtrl</code>, how would one go about doing this?  The DI framework seems to be concerned with <code>XmlHttpRequests</code> and accessing services.</p>
","<p>There are multiple ways how to communicate between controllers.</p>

<p>The best one is probably sharing a service:</p>

<pre><code>function FirstController(someDataService) 
{
  // use the data service, bind to template...
  // or call methods on someDataService to send a request to server
}

function SecondController(someDataService) 
{
  // has a reference to the same instance of the service
  // so if the service updates state for example, this controller knows about it
}
</code></pre>

<p>Another way is emitting an event on scope:</p>

<pre><code>function FirstController($scope) 
{
  $scope.$on('someEvent', function(event, args) {});
  // another controller or even directive
}

function SecondController($scope) 
{
  $scope.$emit('someEvent', args);
}
</code></pre>

<p>In both cases, you can communicate with any directive as well.</p>
","9407953"
"New line in JavaScript alert box","347930","","<p>How do you put in a new line into a JavaScript alert box? </p>
","<p><code>\n</code> will put a new line in - <code>\n</code> being a control code for new line.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>alert(""Line 1\nLine 2"");</code></pre>
</div>
</div>
</p>
","1841458"
"Which keycode for escape key with jQuery","347335","","<p>I have two functions.  When enter is pressed the functions runs correctly but when escape is pressed it doesn't. What's the correct number for the escape key?  </p>

<pre><code>$(document).keypress(function(e) { 
    if (e.which == 13) $('.save').click();   // enter (works as expected)
    if (e.which == 27) $('.cancel').click(); // esc   (does not work)
});
</code></pre>
","<p>Try with the <a href=""http://docs.jquery.com/Events/keyup"" rel=""noreferrer"">keyup event</a>:</p>

<pre><code>$(document).keyup(function(e) {
  if (e.keyCode === 13) $('.save').click();     // enter
  if (e.keyCode === 27) $('.cancel').click();   // esc
});
</code></pre>
","1160109"
"Scroll Automatically to the Bottom of the Page","347124","","<p>Consider I have a list of questions. When I click on the first question, it should automatically take me to the bottom of the page. </p>

<p>For a matter of fact, I do know that this can be done using jQuery. </p>

<p>So, could you provide me with some documentation or some links where I can find answer to this question?</p>

<p>EDIT: Need to scroll to a particular HTML <em>element</em> at the bottom of the page</p>
","<p>jQuery isn't necessary. Most of the top results I got from a Google search gave me this answer:</p>

<pre><code>window.scrollTo(0,document.body.scrollHeight);
</code></pre>

<p>Where you have nested elements, the document might not scroll. In this case, you need to target the element that scrolls and use it's scroll height instead. </p>

<p><code>window.scrollTo(0,document.querySelector("".scrollingContainer"").scrollHeight);</code></p>

<p>You can tie that to the <code>onclick</code> event of your question (i.e. <code>&lt;div onclick=""ScrollToBottom()"" ...</code>). </p>

<p>Some additional sources you can take a look at:</p>

<ul>
<li><a href=""http://www.sourcetricks.com/2010/07/javascript-scroll-to-bottom-of-page.html"" rel=""noreferrer"">http://www.sourcetricks.com/2010/07/javascript-scroll-to-bottom-of-page.html</a></li>
<li><a href=""http://www.alecjacobson.com/weblog/?p=753"" rel=""noreferrer"">http://www.alecjacobson.com/weblog/?p=753</a></li>
<li><a href=""http://www.mediacollege.com/internet/javascript/page/scroll.html"" rel=""noreferrer"">http://www.mediacollege.com/internet/javascript/page/scroll.html</a></li>
<li><a href=""http://www.electrictoolbox.com/jquery-scroll-bottom/"" rel=""noreferrer"">http://www.electrictoolbox.com/jquery-scroll-bottom/</a></li>
</ul>
","11715670"
"HTML/Javascript change div content","347032","","<p>I have simple HTML code with some javascript, it looks like:</p>

<pre><code>&lt;html&gt;

&lt;head&gt;&lt;script type=""text/javascript""&gt;...&lt;/script&gt;&lt;/head&gt;

&lt;body&gt;

    &lt;input type=""radio"" name=""radiobutton"" value=""A"" onClick=""changeDivContent()""&gt;
    &lt;input type=""radio"" name=""radiobutton"" value=""B"" onClick=""changeDivContent()""&gt;

    &lt;div id=""content""&gt;&lt;/div&gt;

&lt;/body&gt;

&lt;/html&gt;
</code></pre>

<p>I just wanted to be able change div's content (it's inner html) with selecting one of ""A"" or ""B"" radio buttons, but div#content does not have javascript attribute ""value"", so I am asking how it can be done.</p>
","<p>Assuming you're not using jQuery or some other library that makes this sort of thing easier for you, you can just use the element's innerHTML property.</p>

<pre><code>document.getElementById(""content"").innerHTML = ""whatever"";
</code></pre>
","2554171"
"Format Date time in AngularJS","346737","","<p>How do I properly display the date and time in AngularJS?</p>

<p>The output below shows both the input and the output, with and without the AngularJS date filter:</p>

<pre><code>In: {{v.Dt}}  
AngularJS: {{v.Dt | date:'yyyy-MM-dd HH:mm:ss Z'}}
</code></pre>

<p>This prints:</p>

<pre><code>In: 2012-10-16T17:57:28.556094Z 
AngularJS: 2012-10-16T17:57:28.556094Z
</code></pre>

<p>The desired display format is
<code>2010-10-28 23:40:23 0400</code> or <code>2010-10-28 23:40:23 EST</code></p>
","<p>v.Dt is likely not a Date() object. </p>

<p>See <a href=""http://jsfiddle.net/southerd/xG2t8/"" rel=""noreferrer"">http://jsfiddle.net/southerd/xG2t8/</a></p>

<p>but in your controller:</p>

<pre><code>scope.v.Dt = Date.parse(scope.v.Dt);
</code></pre>
","12921096"
"How to stop event propagation with inline onclick attribute?","346737","","<p>Consider the following:</p>

<pre><code>&lt;div onclick=""alert('you clicked the header')"" class=""header""&gt;
  &lt;span onclick=""alert('you clicked inside the header');""&gt;something inside the header&lt;/span&gt;
&lt;/div&gt;
</code></pre>

<p>How can I make it so that when the user clicks the span, it does not fire the <code>div</code>'s click event?</p>
","<p><a href=""https://developer.mozilla.org/en/DOM/event.stopPropagation"" rel=""noreferrer"">event.stopPropagation()</a></p>

<p><strong>EDIT:</strong>
For IE: <code>window.event.cancelBubble = true</code></p>

<p>So to apply that in this case, you would do this to the child element:</p>

<pre><code>&lt;span onclick=""event.stopPropagation(); alert('you clicked inside the header');"" window.event.cancelBubble = ""true""&gt;something inside the header&lt;/span&gt;
</code></pre>
","387750"
"How to embed a Facebook page's feed into my website","346673","","<p>I am working with a group to help promote a charity event. The page I would like to embed is NOT my Facebook profile, but a Facebook page someone has created.</p>

<p>I would like to show that news feed in my webpage. If I need to get info/access from this page, please let me know. If someone else has a working example, please let me know. I have been using jsfiddle.net to draw it up.</p>

<p>Here's the page: <a href=""http://www.facebook.com/pages/Chefs-Classic-Knock-OUT-Bout/225835004169328"" rel=""noreferrer"">http://www.facebook.com/pages/Chefs-Classic-Knock-OUT-Bout/225835004169328</a></p>
","<p>Ahhh, that's super simple, no programming required.  </p>

<p>See: <a href=""https://developers.facebook.com/docs/plugins/page-plugin"" rel=""noreferrer"">https://developers.facebook.com/docs/plugins/page-plugin</a></p>

<p>You'll want to keep the <code>show stream</code> option turned on.  You can adjust width and heigth and a few other things.  </p>
","9198988"
"How do you get the rendered height of an element?","346634","","<p>How do you get the rendered height of an element?</p>

<p>Let's say you have a <code>&lt;div&gt;</code> element with some content inside. This content inside is going to stretch the height of the <code>&lt;div&gt;</code>. How do you get the ""rendered"" height when you haven't explicitly set the height. Obviously, I tried:  </p>

<pre><code>var h = document.getElementById('someDiv').style.height;
</code></pre>

<p>Is there a trick for doing this? I am using jQuery if that helps.</p>
","<p>It should just be</p>

<pre><code>$('#someDiv').height();
</code></pre>

<p>with jQuery. This retrieves the height of the first item in the wrapped set as a number. </p>

<p>Trying to use</p>

<pre><code>.style.height
</code></pre>

<p>only works if you have set the property in the first place. Not very useful!</p>
","526354"
"What's the effect of adding 'return false' to a click event listener?","344933","","<p>Many times I've seen links like these in HTML pages:</p>

<pre><code>&lt;a href='#' onclick='someFunc(3.1415926); return false;'&gt;Click here !&lt;/a&gt;
</code></pre>

<p>What's the effect of the <code>return false</code> in there?</p>

<p>Also, I don't usually see that in buttons.</p>

<p>Is this specified anywhere? In some spec in w3.org?</p>
","<p>The return value of an event handler determines whether or not the default browser behaviour should take place as well.  In the case of clicking on links, this would be following the link, but the difference is most noticeable in form submit handlers, where you can cancel a form submission if the user has made a mistake entering the information.</p>

<p>I don't believe there is a W3C specification for this.  All the ancient JavaScript interfaces like this have been given the nickname ""DOM 0"", and are mostly unspecified.  You may have some luck reading old Netscape 2 documentation.</p>

<p>The modern way of achieving this effect is to call <code>event.preventDefault()</code>, and this is specified in <a href=""http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-flow-cancelation"" rel=""noreferrer"">the DOM 2 Events specification</a>.</p>
","128966"
"Can I hide the HTML5 number input’s spin box?","344586","","<p>Is there a consistent way across browsers to hide the new spin boxes that some browsers (such as Chrome) render for HTML input of type number?  I am looking for a CSS or JavaScript method to prevent the up/down arrows from appearing.</p>

<pre><code>&lt;input id=""test"" type=""number""&gt;
</code></pre>
","<p>This CSS effectively hides the spin-button for webkit browsers (have tested it in Chrome 7.0.517.44 and Safari Version 5.0.2 (6533.18.5)):</p>

<pre><code>input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    /* display: none; &lt;- Crashes Chrome on hover */
    -webkit-appearance: none;
    margin: 0; /* &lt;-- Apparently some margin are still there even though it's hidden */
}
</code></pre>

<p>You can always use the inspector (webkit, possibly Firebug for Firefox) to look for matched CSS properties for the elements you are interested in, look for Pseudo elemnts. This image shows results for an input element type=""number"":</p>

<p><img src=""https://i.stack.imgur.com/QATjk.png"" alt=""Inspector for input type=number (Chrome)""></p>
","4298216"
"Format numbers in JavaScript similar to C#","344259","","<p>Is there a simple way to format numbers in JavaScript, similar to the formatting methods available in C# (or VB.NET) via <code>ToString(""format_provider"")</code> or <code>String.Format()</code>?</p>
","<p>You should probably have a look at the JQuery NUMBERFORMATTER plugin:</p>

<p><a href=""https://code.google.com/p/jquery-numberformatter/"" rel=""nofollow noreferrer"">Jquery Number Formatter</a></p>

<p>And this question:</p>

<p><a href=""https://stackoverflow.com/questions/726144/javascript-easier-way-to-format-numbers/"">Javascript easier way to format numbers</a></p>
","1068306"
"Parsing JSON giving ""unexpected token o"" error","342892","","<p>I am having a problem parsing simple JSON strings. I have checked them on <a href=""http://www.JSONLint.com"">JSONLint</a> and it shows that they are valid. But when I try to parse them using either <code>JSON.parse</code> or the jQuery alternative it gives me the error <code>unexpected token o</code>:</p>

<pre><code>&lt;!doctype HTML&gt;
&lt;html&gt;
  &lt;head&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;script type=""text/javascript""&gt;
      var cur_ques_details ={""ques_id"":15,""ques_title"":""jlkjlkjlkjljl""};
      var ques_list = JSON.parse(cur_ques_details);

      document.write(ques_list['ques_title']);
    &lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>Note: I'm encoding my strings using <code>json_encode()</code> in PHP.</p>
","<p>Your data is already an object. No need to parse it. The javascript interpreter has already parsed it for you.</p>

<pre><code>var cur_ques_details ={""ques_id"":15,""ques_title"":""jlkjlkjlkjljl""};
document.write(cur_ques_details['ques_title']);
</code></pre>
","15617202"
"How to make an HTML back link?","341269","","<p>What is the simplest way to create an <code>&lt;a&gt;</code> tag that links to the previous web page? Basically a simulated back button, but an actual hyperlink. Client-side technologies only, please.</p>

<p><strong>Edit</strong><br />
Looking for solutions that have the benefit of showing the URL of the page you're about to click on when hovering, like a normal, static hyperlink. I'd rather not have the user looking at <code>history.go(-1)</code> when hovering on a hyperlink. Best I've found so far is:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script&gt;
  document.write('&lt;a href=""' + document.referrer + '""&gt;Go Back&lt;/a&gt;');
&lt;/script&gt;</code></pre>
</div>
</div>
</p>

<p>Is <code>document.referrer</code> reliable? Cross-browser safe? I'll be happy to accept a better answer.</p>
","<p>This solution has the benefit of showing the URL of the linked-to page on hover, as most browsers do by default, instead of <code>history.go(-1)</code> or similar:</p>

<pre><code>&lt;script&gt;
    document.write('&lt;a href=""' + document.referrer + '""&gt;Go Back&lt;/a&gt;');
&lt;/script&gt;
</code></pre>
","8815068"
"addEventListener vs onclick","341035","","<p>What's the difference between <code>addEventListener</code> and <code>onclick</code>?</p>

<pre><code>var h = document.getElementById(""a"");
h.onclick = dothing1;
h.addEventListener(""click"", dothing2);
</code></pre>

<p>The code above resides together in a separate .js file, and they both work perfectly.</p>
","<p>Both are correct, but none of them are ""best"" per se, and there may be a reason the developer chose to use both approaches.</p>

<p><strong>Event Listeners (addEventListener and IE's attachEvent)</strong></p>

<p>Earlier versions of Internet Explorer implement javascript differently from pretty much every other browser.  With versions less than 9, you use the <code>attachEvent</code>[<a href=""http://msdn.microsoft.com/en-us/library/ie/ms536343%28v=vs.85%29.aspx"" rel=""noreferrer"">doc</a>]  method, like this:</p>

<pre><code>element.attachEvent('onclick', function() { /* do stuff here*/ });
</code></pre>

<p>In most other browsers (including IE 9 and above), you use <code>addEventListener</code>[<a href=""https://developer.mozilla.org/en-US/docs/DOM/element.addEventListener"" rel=""noreferrer"">doc</a>], like this:</p>

<pre><code>element.addEventListener('click', function() { /* do stuff here*/ }, false);
</code></pre>

<p>Using this approach (<a href=""http://www.w3.org/wiki/Handling_events_with_JavaScript#The_evolution_of_events"" rel=""noreferrer"">DOM Level 2 events</a>), you can attach a theoretically unlimited number of events to any single element. The only practical limitation is client-side memory and other performance concerns, which are different for each browser.</p>

<p>The examples above represent using an anonymous function[<a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Functions_and_function_scope"" rel=""noreferrer"">doc</a>]. You can also add an event listener using a function reference[<a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function"" rel=""noreferrer"">doc</a>] or a closure[<a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Closures"" rel=""noreferrer"">doc</a>]:</p>

<pre><code>var myFunctionReference = function() { /* do stuff here*/ }

element.attachEvent('onclick', myFunctionReference);
element.addEventListener('click', myFunctionReference , false);
</code></pre>

<p>Another important feature of <code>addEventListener</code> is the final parameter, which controls how the listener reacts to bubbling events[<a href=""http://www.w3.org/TR/DOM-Level-3-Events/#event-flow"" rel=""noreferrer"">doc</a>]. I've been passing false in the examples, which is standard for probably 95% of use cases. There is no equivalent argument for <code>attachEvent</code>, or when using inline events.</p>

<p><strong>Inline events (HTML onclick="""" property and element.onclick)</strong></p>

<p>In all browsers that support javascript, you can put an event listener inline, meaning right in the HTML code.  You've probably seen this:</p>

<pre><code>&lt;a id=""testing"" href=""#"" onclick=""alert('did stuff inline');""&gt;Click me&lt;/a&gt;
</code></pre>

<p>Most experienced developers shun this method, but it does get the job done; it is simple and direct. You may not use closures or anonymous functions here (though the handler itself is an anonymous function of sorts), and your control of scope is limited.</p>

<p>The other method you mention:</p>

<pre><code>element.onclick = function () { /*do stuff here */ };
</code></pre>

<p>... is the equivalent of inline javascript except that you have more control of the scope (since you're writing a script rather than HTML) and can use anonymous functions, function references, and/or closures.</p>

<p>The significant drawback with inline events is that unlike event listeners described above, you may only have one inline event assigned. Inline events are stored as an attribute/property of the element[<a href=""http://www.w3.org/wiki/HTML/Attributes/_Global#Event-handler_Attributes"" rel=""noreferrer"">doc</a>], meaning that it can be overwritten.</p>

<p>Using the example <code>&lt;a&gt;</code> from the HTML above:</p>

<pre><code>var element = document.getElementById('testing');
element.onclick = function () { alert('did stuff #1'); };
element.onclick = function () { alert('did stuff #2'); };
</code></pre>

<p>... when you clicked the element, you'd <strong>only</strong> see ""Did stuff #2"" - you overwrote the first assigned of the <code>onclick</code> property with the second value, and you overwrote the original inline HTML <code>onclick</code> property too. Check it out here: <a href=""http://jsfiddle.net/jpgah/"" rel=""noreferrer"">http://jsfiddle.net/jpgah/</a>.</p>

<p><strong>Which is Best?</strong></p>

<p>The question is a matter of browser compatibility and necessity. Do you currently need to attach more than one event to an element? Will you in the future? Odds are, you will. attachEvent and addEventListener are necessary. If not, an inline event will do the trick.</p>

<p>jQuery and other javascript frameworks encapsulate the different browser implementations of DOM level 2 events in generic models so you can write cross-browser compliant code without having to worry about IE's history as a rebel.  Same code with jQuery, all cross-browser and ready to rock:</p>

<pre><code>$(element).on('click', function () { /* do stuff */ });
</code></pre>

<p>Don't run out and get a framework just for this one thing, though. You can easily roll your own little utility to take care of the older browsers:</p>

<pre><code>function addEvent(element, evnt, funct){
  if (element.attachEvent)
   return element.attachEvent('on'+evnt, funct);
  else
   return element.addEventListener(evnt, funct, false);
}

// example
addEvent(
    document.getElementById('myElement'),
    'click',
    function () { alert('hi!'); }
);
</code></pre>

<p>Try it: <a href=""http://jsfiddle.net/bmArj/"" rel=""noreferrer"">http://jsfiddle.net/bmArj/</a></p>

<p>Taking all of that into consideration, unless the script you're looking at took the browser differences into account some other way (in code not shown in your question), the part using <code>addEventListener</code> would not work in IE versions less than 9.</p>

<p><strong>Documentation and Related Reading</strong></p>

<ul>
<li><a href=""http://www.w3.org/wiki/HTML/Attributes/_Global#Event-handler_Attributes"" rel=""noreferrer"">W3 HTML specification, element Event Handler Attributes</a></li>
<li><a href=""https://developer.mozilla.org/en-US/docs/DOM/element.addEventListener"" rel=""noreferrer"">element.addEventListener on MDN</a></li>
<li><a href=""http://msdn.microsoft.com/en-us/library/ie/ms536343%28v=vs.85%29.aspx"" rel=""noreferrer"">element.attachEvent on MSDN</a></li>
<li><a href=""http://api.jquery.com/on/"" rel=""noreferrer"">Jquery.on</a></li>
<li><a href=""http://www.quirksmode.org/js/introevents.html"" rel=""noreferrer"">quirksmode blog ""Introduction to Events""</a></li>
<li><a href=""https://developers.google.com/speed/libraries/"" rel=""noreferrer"">CDN-hosted javascript libraries at Google</a></li>
</ul>
","6348597"
"No 'Access-Control-Allow-Origin' header is present on the requested resource error","341011","","<p>I'm trying to fetch the feed of a news website. Thought I'd use google's feed API to convert the feedburner feed into json. The following url will return 10 posts from the feed, in json format. <a href=""http://ajax.googleapis.com/ajax/services/feed/load?v=1.0&amp;num=10&amp;q=http://feeds.feedburner.com/mathrubhumi"">http://ajax.googleapis.com/ajax/services/feed/load?v=1.0&amp;num=10&amp;q=http://feeds.feedburner.com/mathrubhumi</a></p>

<p>I used the following code to get the contents of above url</p>

<pre><code>$.ajax({
            type:""GET"",
            dataType:""jsonp"",
            url:""http://ajax.googleapis.com/ajax/services/feed/load"",
            data:{""v"":""1.0"", ""num"":""10"", ""q"":""http://feeds.feedburner.com/mathrubhumi""},

            success: function(result){
                //.....
            }
        });
</code></pre>

<p>but it's not working and I'm getting the following error</p>

<blockquote>
  <p>XMLHttpRequest cannot load
  <a href=""http://ajax.googleapis.com/ajax/services/feed/load?v=1.0&amp;num=10&amp;q=http%3A%2F%2Ffeeds.feedburner.com%2Fmathrubhumi"">http://ajax.googleapis.com/ajax/services/feed/load?v=1.0&amp;num=10&amp;q=http%3A%2F%2Ffeeds.feedburner.com%2Fmathrubhumi</a>.
  No 'Access-Control-Allow-Origin' header is present on the requested
  resource. Origin '<a href=""http://localhost"">http://localhost</a>' is therefore not allowed access.</p>
</blockquote>

<p>How do I fix this?</p>
","<p>I believe this might likely be that Chrome does not support <code>localhost</code> to go through the <code>Access-Control-Allow-Origin</code> -- <a href=""https://code.google.com/p/chromium/issues/detail?id=67743"" rel=""noreferrer"">see Chrome issue</a></p>

<p>To have Chrome send <code>Access-Control-Allow-Origin</code> in the header, just alias your localhost in your /etc/hosts file to some other domain, like:</p>

<pre><code>127.0.0.1   localhost yourdomain.com
</code></pre>

<p>Then if you'd access your script using <code>yourdomain.com</code> instead of <code>localhost</code>, the call should succeed. </p>
","28548756"
"Difference between JSON.stringify and JSON.parse","340213","","<p>I have been confused over when to use these two parsing methods.</p>

<p>After I echo my json_encoded data and retrieve it back via ajax, I often run into confusion about when I should use <strong>JSON.stringify</strong> and <strong>JSON.parse</strong>.</p>

<p>I get <code>[object,object]</code> in my <em>console.log</em> when parsed and a JavaScript object when stringified.</p>

<pre><code>$.ajax({
url: ""demo_test.txt"",
success: function(data) {
         console.log(JSON.stringify(data))
                     /* OR */
         console.log(JSON.parse(data))
        //this is what I am unsure about?
    }
});
</code></pre>
","<p><code>JSON.stringify</code> turns a Javascript object into JSON text and stores that JSON text in a string.</p>

<p><code>JSON.parse</code> turns a string of JSON text into a Javascript object.</p>
","17785623"
"Adding two numbers concatenates them instead of calculating the sum","339895","","<p>I am adding two numbers, but I don't get a correct value.</p>

<p>For example, doing <code>1 + 2</code> returns 12 and not 3</p>

<p>What am I doing wrong in this code?</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function myFunction() {
  var y = document.getElementById(""txt1"").value;
  var z = document.getElementById(""txt2"").value;
  var x = y + z;
  document.getElementById(""demo"").innerHTML = x;
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;p&gt;
  Click the button to calculate x.
  &lt;button onclick=""myFunction()""&gt;Try it&lt;/button&gt;
&lt;/p&gt;
&lt;p&gt;
  Enter first number:
  &lt;input type=""text"" id=""txt1"" name=""text1"" value=""1""&gt;
  Enter second number:
  &lt;input type=""text"" id=""txt2"" name=""text2"" value=""2""&gt;
&lt;/p&gt;
&lt;p id=""demo""&gt;&lt;/p&gt;</code></pre>
</div>
</div>
</p>
","<p>They are actually strings not numbers. The easiest way to produce a number from a string is to prepend it with<code>+</code>:</p>

<pre><code>var x = +y + +z;
</code></pre>
","14496556"
"jQuery selector regular expressions","339713","","<p>I am after documentation on using wildcard or regular expressions (not sure on the exact terminology) with a jQuery selector.</p>

<p>I have looked for this myself but have been unable to find information on the syntax and how to use it. Does anyone know where the documentation for the syntax is?</p>

<p>EDIT: The attribute filters allow you to select based on patterns of an attribute value.</p>
","<p>James Padolsey created a <a href=""http://james.padolsey.com/javascript/regex-selector-for-jquery/"" rel=""noreferrer"">wonderful filter</a> that allows regex to be used for selection.</p>

<p>Say you have the following <code>div</code>:</p>

<pre><code>&lt;div class=""asdf""&gt;
</code></pre>

<p>Padolsey's <code>:regex</code> filter can select it like so:</p>

<pre><code>$(""div:regex(class, .*sd.*)"")
</code></pre>

<p>Also, check the <a href=""http://docs.jquery.com/Selectors"" rel=""noreferrer"">official documentation on selectors</a>.</p>
","190255"
"Using HTML5/Canvas/JavaScript to take in-browser screenshots","339654","","<p>Google's ""Report a Bug"" or ""Feedback Tool"" lets you select an area of your browser window to create a screenshot that is submitted with your feedback about a bug.</p>

<p><img src=""https://i.stack.imgur.com/CDhEi.png"" alt=""Google Feedback Tool Screenshot"">
<sub><em>Screenshot by Jason Small, posted in a <a href=""https://stackoverflow.com/questions/6608327/google-style-send-feedback"">duplicate question</a>.</em> </sub></p>

<p>How are they doing this?  Google's JavaScript feedback API is loaded from <a href=""https://ssl.gstatic.com/feedback/api.js"" rel=""noreferrer"">here</a> and <a href=""http://www.google.com/tools/feedback/intl/en/learnmore.html"" rel=""noreferrer"">their overview of the feedback module</a> will demonstrate the screenshot capability.</p>
","<p>JavaScript can read the DOM and render a fairly accurate representation of that using <code>canvas</code>. I have been working on a script which converts html into an canvas image. Decided today to make an implementation of it into sending feedbacks like you described.</p>

<p>The script allows you to create feedback forms which include a screenshot, created on the clients browser, along with the form. The screenshot is based on the DOM and as such may not be 100% accurate to the real representation as it does not make an actual screenshot, but builds the screenshot based on the information available on the page.</p>

<p>It <strong>does not require any rendering from the server</strong>, as the whole image is created on the clients browser. The HTML2Canvas script itself is still in a very experimental state, as it does not parse nearly as much of the CSS3 attributes I would want it to, nor does it have any support to load CORS images even if a proxy was available.</p>

<p>Still quite limited browser compatibility (not because more couldn't be supported, just haven't had time to make it more cross browser supported).</p>

<p>For more information, have a look at the examples here:</p>

<p><a href=""http://hertzen.com/experiments/jsfeedback/"" rel=""noreferrer"">http://hertzen.com/experiments/jsfeedback/</a></p>

<p><strong>edit</strong>
The html2canvas script is now available separately <a href=""https://github.com/niklasvh/html2canvas"" rel=""noreferrer"">here</a> and some <a href=""http://html2canvas.hertzen.com/"" rel=""noreferrer"">examples here</a>.</p>

<p><strong>edit 2</strong>
Another confirmation that Google uses a very similar method, (in fact based on the documentation the only major difference is their async method of traversing/drawing) can be found in this presentation by Elliott Sprehn from the Google Feedback team:
<a href=""http://www.elliottsprehn.com/preso/fluentconf/"" rel=""noreferrer"">http://www.elliottsprehn.com/preso/fluentconf/</a></p>
","6678156"
"Adding an onclick function to go to url in JavaScript?","338004","","<p>I am using this fancy little JavaScript to highlight a field as the user hovers over it. Could you please tell me if there is a way of adding an onclick function which will act as a link and go to a URL?</p>

<pre><code>&lt;script&gt;
         $(function() {
            $('tr').hover(function() {
                $(this).css('background-color', '#eee');
                $(this).contents('td').css({'border': '0px solid red', 'border-left': 'none', 'border-right': 'none'});
                $(this).contents('td:first').css('border-left', '0px solid red');
                $(this).contents('td:last').css('border-right', '0px solid red');
            },
            function() {
                $(this).css('background-color', '#FFFFFF');
                $(this).contents('td').css('border', 'none');
                $('a#read_message.php').click(function(){ URL(); });
            });
        });
        &lt;/script&gt;
</code></pre>
","<p>Try </p>

<pre><code> window.location = url;
</code></pre>

<p>Also use</p>

<pre><code> window.open(url);
</code></pre>

<p>if you want to open in a new window.</p>
","13072020"
"First element in array - jQuery","337555","","<p>How do you get the first element from an array:</p>

<pre><code>var ary = ['first', 'second', 'third', 'fourth', 'fifth'];
</code></pre>

<p>I tried this:</p>

<pre><code>alert($(ary).first());
</code></pre>

<p>But it would return <code>[object Object]</code>. </p>

<p>So I need to get the first element from the array which should be the element <code>first</code>.</p>
","<p>like this</p>

<pre><code>alert(ary[0])
</code></pre>
","4090513"
"Logical operator in a handlebars.js {{#if}} conditional","336460","","<p>Is there a way in handlebars JS to incorporate logical operators into the standard handlebars.js conditional operator? Something like this:</p>

<pre><code>{{#if section1 || section2}}
.. content
{{/if}}
</code></pre>

<p>I know I could write my own helper, but first I'd like to make sure I'm not reinventing the wheel.</p>
","<p>This is possible by 'cheating' with a block helper. This probably goes against the Ideology of the people who developed Handlebars.</p>

<pre><code>Handlebars.registerHelper('ifCond', function(v1, v2, options) {
  if(v1 === v2) {
    return options.fn(this);
  }
  return options.inverse(this);
});
</code></pre>

<p>You can then call the helper in the template like this</p>

<pre><code>{{#ifCond v1 v2}}
    {{v1}} is equal to {{v2}}
{{else}}
    {{v1}} is not equal to {{v2}}
{{/ifCond}}
</code></pre>
","9405113"
"Positioning <div> element at center of screen","336420","","<p>I want to position a <code>&lt;div&gt;</code> (or a <code>&lt;table&gt;</code>) element at the center of the screen irrespective of screen size. In other words, the space left on 'top' and 'bottom' should be equal and space left on 'right' and 'left' sides should be equal. I would like to accomplish this with only CSS.</p>

<p>I have tried the following but it is not working:</p>

<pre><code> &lt;body&gt;
  &lt;div style=""top:0px; border:1px solid red;""&gt;
    &lt;table border=""1"" align=""center""&gt;
     &lt;tr height=""100%""&gt;
      &lt;td height=""100%"" width=""100%"" valign=""middle"" align=""center""&gt;
        We are launching soon!
      &lt;/td&gt;
     &lt;/tr&gt;
    &lt;/table&gt;
  &lt;/div&gt;
 &lt;/body&gt;
</code></pre>

<p><strong>Note:</strong><br>
It is either way fine if the <code>&lt;div&gt;</code> element (or <code>&lt;table&gt;</code>) scrolls with the website or not. Just want it to be centered when the page loads. </p>
","<p>The easy way, if you have a fixed width and height:</p>

<pre><code>#divElement{
    position: absolute;
    top: 50%;
    left: 50%;
    margin-top: -50px;
    margin-left: -50px;
    width: 100px;
    height: 100px;
}​
</code></pre>

<p>Please don't use inline styles! Here is a working example <a href=""http://jsfiddle.net/S5bKq/"">http://jsfiddle.net/S5bKq/</a>.</p>
","9862275"
"AngularJS - Value attribute on an input text box is ignored when there is a ng-model used?","336373","","<p>Using AngularJS if I set a simple input text box value to something like ""bob"" below.  The value does not display if the <code>ng-model</code> attribute is added.</p>

<pre><code>    &lt;input type=""text""
           id=""rootFolder""
           ng-model=""rootFolders""
           disabled=""disabled""
           value=""Bob""
           size=""40""/&gt;
</code></pre>

<p>Anyone know of a simple work around to default this input to something and keep the <code>ng-model</code>? I tried to use a <code>ng-bind</code> with the default value but that seems not to work either.</p>
","<p>That's desired behavior, you should define the model in the controller, not in the view.</p>

<pre><code>&lt;div ng-controller=""Main""&gt;
  &lt;input type=""text"" ng-model=""rootFolders""&gt;
&lt;/div&gt;


function Main($scope) {
  $scope.rootFolders = 'bob';
}
</code></pre>
","10612424"
"How to convert string into float in JavaScript?","336238","","<p>I am trying to parse two values from a datagrid.<br>
The fields are numeric, and when they have a comma (ex. 554,20), I can't get the numbers after the comma.<br>
I've tried <code>parseInt</code> and <code>parseFloat</code>. How can I do this?</p>
","<p>If they're meant to be separate values, try this:</p>

<pre><code>var values = ""554,20"".split("","")
var v1 = parseFloat(values[0])
var v2 = parseFloat(values[1])
</code></pre>

<p>If they're meant to be a single value (like in French, where one-half is written 0,5)</p>

<pre><code>var value = parseFloat(""554,20"".replace("","", "".""));
</code></pre>
","642674"
"Redirect parent window from an iframe action","336104","","<p>What JavaScript do I need to use to redirect a parent window from an iframe?</p>

<p>I want them to click a hyperlink which, using JavaScript or any other method, would redirect the parent window to a new URL.</p>
","<pre><code>window.top.location.href = ""http://www.example.com""; 
</code></pre>

<p>As stated previously, will redirect the parent iframe.</p>
","3193193"
"Passing parameters to a JQuery function","335751","","<p>I'm creating HTML with a loop that has a column for Action. That column
is a Hyperlink that when the user clicks calls a JavaScript
function and passes the parameters...</p>

<p>example:</p>

<pre><code>&lt;a href=""#"" OnClick=""DoAction(1,'Jose');"" &gt; Click &lt;/a&gt;
&lt;a href=""#"" OnClick=""DoAction(2,'Juan');"" &gt; Click &lt;/a&gt;
&lt;a href=""#"" OnClick=""DoAction(3,'Pedro');"" &gt; Click &lt;/a&gt;
...
&lt;a href=""#"" OnClick=""DoAction(n,'xxx');"" &gt; Click &lt;/a&gt;
</code></pre>

<p>I want that function to call an Ajax jQuery function with the correct
parameters.</p>

<p>Any help?</p>
","<p>Using POST</p>

<pre><code>function DoAction( id, name )
{
    $.ajax({
         type: ""POST"",
         url: ""someurl.php"",
         data: ""id="" + id + ""&amp;name="" + name,
         success: function(msg){
                     alert( ""Data Saved: "" + msg );
                  }
    });
}
</code></pre>

<p>Using GET</p>

<pre><code>function DoAction( id, name )
{
     $.ajax({
          type: ""GET"",
          url: ""someurl.php"",
          data: ""id="" + id + ""&amp;name="" + name,
          success: function(msg){
                     alert( ""Data Saved: "" + msg );
                   }
     });
}
</code></pre>

<p>EDIT:</p>

<p>A, perhaps, better way to do this that would work (using GET) if javascript were not enabled would be to generate the URL for the href, then use a click handler to call that URL via ajax instead.</p>

<pre><code>&lt;a href=""/someurl.php?id=1&amp;name=Jose"" class=""ajax-link""&gt; Click &lt;/a&gt;
&lt;a href=""/someurl.php?id=2&amp;name=Juan"" class=""ajax-link""&gt; Click &lt;/a&gt;
&lt;a href=""/someurl.php?id=3&amp;name=Pedro"" class=""ajax-link""&gt; Click &lt;/a&gt;
...
&lt;a href=""/someurl.php?id=n&amp;name=xxx"" class=""ajax-link""&gt; Click &lt;/a&gt;

&lt;script type=""text/javascript""&gt;
$(function() {
   $('.ajax-link').click( function() {
         $.get( $(this).attr('href'), function(msg) {
              alert( ""Data Saved: "" + msg );
         });
         return false; // don't follow the link!
   });
});
&lt;/script&gt;
</code></pre>
","370391"
"Uploading both data and files in one form using Ajax?","335746","","<p>I'm using jQuery and Ajax for my forms to submit data and files but I'm not sure how to send both data and files in one form?</p>

<p>I currently do almost the same with both methods but the way in which the data is gathered into an array is different, the data uses <code>.serialize();</code> but the files use <code>= new FormData($(this)[0]);</code></p>

<p>Is it possible to combine both methods to be able to upload files and data in one form through Ajax?</p>

<p><strong>Data jQuery, Ajax and html</strong></p>

<pre><code>$(""form#data"").submit(function(){

    var formData = $(this).serialize();

    $.ajax({
        url: window.location.pathname,
        type: 'POST',
        data: formData,
        async: false,
        success: function (data) {
            alert(data)
        },
        cache: false,
        contentType: false,
        processData: false
    });

    return false;
});

&lt;form id=""data"" method=""post""&gt;
    &lt;input type=""text"" name=""first"" value=""Bob"" /&gt;
    &lt;input type=""text"" name=""middle"" value=""James"" /&gt;
    &lt;input type=""text"" name=""last"" value=""Smith"" /&gt;
    &lt;button&gt;Submit&lt;/button&gt;
&lt;/form&gt;
</code></pre>

<p><strong>Files jQuery, Ajax and html</strong></p>

<pre><code>$(""form#files"").submit(function(){

    var formData = new FormData($(this)[0]);

    $.ajax({
        url: window.location.pathname,
        type: 'POST',
        data: formData,
        async: false,
        success: function (data) {
            alert(data)
        },
        cache: false,
        contentType: false,
        processData: false
    });

    return false;
});

&lt;form id=""files"" method=""post"" enctype=""multipart/form-data""&gt;
    &lt;input name=""image"" type=""file"" /&gt;
    &lt;button&gt;Submit&lt;/button&gt;
&lt;/form&gt;
</code></pre>

<p>How can I combine the above so that I can send data and files in one form via Ajax?</p>

<p>My aim is to be able to send all of this form in one post with Ajax, is it possible?</p>

<pre><code>&lt;form id=""datafiles"" method=""post"" enctype=""multipart/form-data""&gt;
    &lt;input type=""text"" name=""first"" value=""Bob"" /&gt;
    &lt;input type=""text"" name=""middle"" value=""James"" /&gt;
    &lt;input type=""text"" name=""last"" value=""Smith"" /&gt;
    &lt;input name=""image"" type=""file"" /&gt;
    &lt;button&gt;Submit&lt;/button&gt;
&lt;/form&gt;
</code></pre>
","<p>The problem I had was using the wrong jQuery identifier.</p>

<p>You <strong>can upload data and files</strong> with one form <strong>using ajax</strong>.</p>

<p><strong>PHP + HTML</strong></p>

<pre><code>&lt;?php

print_r($_POST);
print_r($_FILES);
?&gt;

&lt;form id=""data"" method=""post"" enctype=""multipart/form-data""&gt;
    &lt;input type=""text"" name=""first"" value=""Bob"" /&gt;
    &lt;input type=""text"" name=""middle"" value=""James"" /&gt;
    &lt;input type=""text"" name=""last"" value=""Smith"" /&gt;
    &lt;input name=""image"" type=""file"" /&gt;
    &lt;button&gt;Submit&lt;/button&gt;
&lt;/form&gt;
</code></pre>

<p><strong>jQuery + Ajax</strong></p>

<pre><code>$(""form#data"").submit(function(e) {
    e.preventDefault();    
    var formData = new FormData(this);

    $.ajax({
        url: window.location.pathname,
        type: 'POST',
        data: formData,
        success: function (data) {
            alert(data)
        },
        cache: false,
        contentType: false,
        processData: false
    });
});
</code></pre>

<p><strong>Short Version</strong></p>

<pre><code>$(""form#data"").submit(function(e) {
    e.preventDefault();
    var formData = new FormData(this);    

    $.post($(this).attr(""action""), formData, function(data) {
        alert(data);
    });
});
</code></pre>
","10899796"
"Get image data in JavaScript?","335537","","<p>I have a regular HTML page with some images (just regular <code>&lt;img /&gt;</code> HTML tags). I'd like to get their content, base64 encoded preferably, without the need to redownload the image (ie. it's already loaded by the browser, so now I want the content).</p>

<p>I'd love to achieve that with Greasemonkey and Firefox.</p>
","<p><strong>Note:</strong> This only works if the image is from the same domain as the page, or has the <code>crossOrigin=""anonymous""</code> attribute and the server supports CORS. It's also not going to give you the original file, but a re-encoded version. If you need the result to be identical to the original, see <a href=""https://stackoverflow.com/a/42916772/2214"">Kaiido's answer</a>.</p>

<hr>

<p>You will need to create a canvas element with the correct dimensions and copy the image data with the <code>drawImage</code> function. Then you can use the <code>toDataURL</code> function to get a data: url that has the base-64 encoded image. Note that the image must be fully loaded, or you'll just get back an empty (black, transparent) image.</p>

<p>It would be something like this. I've never written a Greasemonkey script, so you might need to adjust the code to run in that environment.</p>

<pre><code>function getBase64Image(img) {
    // Create an empty canvas element
    var canvas = document.createElement(""canvas"");
    canvas.width = img.width;
    canvas.height = img.height;

    // Copy the image contents to the canvas
    var ctx = canvas.getContext(""2d"");
    ctx.drawImage(img, 0, 0);

    // Get the data-URL formatted image
    // Firefox supports PNG and JPEG. You could check img.src to
    // guess the original format, but be aware the using ""image/jpg""
    // will re-encode the image.
    var dataURL = canvas.toDataURL(""image/png"");

    return dataURL.replace(/^data:image\/(png|jpg);base64,/, """");
}
</code></pre>

<p>Getting a JPEG-formatted image doesn't work on older versions (around 3.5) of Firefox, so if you want to support that, you'll need to check the compatibility. If the encoding is not supported, it will default to ""image/png"".</p>
","934925"
"Convert Array to Object","335223","","<p>What is the best way to convert:</p>

<pre><code>['a','b','c']
</code></pre>

<p>to:</p>

<pre><code>{
  0: 'a',
  1: 'b',
  2: 'c'
}
</code></pre>
","<p>With a function like this:</p>

<pre><code>function toObject(arr) {
  var rv = {};
  for (var i = 0; i &lt; arr.length; ++i)
    rv[i] = arr[i];
  return rv;
}
</code></pre>

<p>Your array already is more-or-less just an object, but arrays do have some ""interesting"" and special behavior with respect to integer-named properties. The above will give you a plain object.</p>

<p><em>edit</em> oh also you might want to account for ""holes"" in the array:</p>

<pre><code>function toObject(arr) {
  var rv = {};
  for (var i = 0; i &lt; arr.length; ++i)
    if (arr[i] !== undefined) rv[i] = arr[i];
  return rv;
}
</code></pre>

<p>In modern JavaScript runtimes, you can use the <code>.reduce()</code> method:</p>

<pre><code>var obj = arr.reduce(function(acc, cur, i) {
  acc[i] = cur;
  return acc;
}, {});
</code></pre>

<p>That one also avoids ""holes"" in the array, because that's how <code>.reduce()</code> works.</p>
","4215753"
"Onclick javascript to make browser go back to previous page?","334680","","<p>Is there a function I can attach as a click event of a button to make the browser go back to previous page?</p>

<pre><code>&lt;input name=""action"" type=""submit"" value=""Cancel""/&gt;
</code></pre>
","<p>Add this in your input element:</p>

<pre><code>&lt;input action=""action"" onclick=""window.history.go(-1); return false;"" type=""button"" value=""Back"" /&gt;
</code></pre>
","8067539"
"How to detect escape key press with pure JS or jQuery?","334604","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/1160008/which-keycode-for-escape-key-with-jquery"">Which keycode for escape key with jQuery</a>  </p>
</blockquote>



<p>How to detect escape key press in IE, Firefox and Chrome?
Below code works in IE and alerts <code>27</code>, but in firefox it alerts <code>0</code></p>

<pre><code>$('body').keypress(function(e){
    alert(e.which);
    if(e.which == 27){
        // Close my modal window
    }
});
</code></pre>
","<blockquote>
  <p>It seems <code>keydown</code> and <code>keyup</code> work, even though <code>keypress</code> may not</p>
</blockquote>

<hr>

<pre><code>$(document).keyup(function(e) {
     if (e.keyCode == 27) { // escape key maps to keycode `27`
        // &lt;DO YOUR WORK HERE&gt;
    }
});
</code></pre>

<p><a href=""https://stackoverflow.com/questions/1160008/which-keycode-for-escape-key-with-jquery"">Which keycode for escape key with jQuery</a></p>
","3369624"
"What's the easiest way to call a function every 5 seconds in jQuery?","333464","","<p>JQuery, how to call a function every 5 seconds.</p>

<p>I'm looking for a way to automate the changing of images in a slideshow.  </p>

<p>I'd rather not install any other 3rd party plugins if possible.</p>
","<pre><code>window.setInterval(function(){
  /// call your function here
}, 5000);
</code></pre>
","2170924"
"How do I get the number of days between two dates in JavaScript?","333455","","<p>How do I get the number of days between two dates in JavaScript? For example, given two dates in input boxes:</p>

<pre><code>&lt;input id=""first"" value=""1/1/2000""/&gt;
&lt;input id=""second"" value=""1/1/2001""/&gt;

&lt;script&gt;
  alert(datediff(""day"", first, second)); // what goes here?
&lt;/script&gt;
</code></pre>
","<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function parseDate(str) {
    var mdy = str.split('/');
    return new Date(mdy[2], mdy[0]-1, mdy[1]);
}

function daydiff(first, second) {
    return Math.round((second-first)/(1000*60*60*24));
}

console.log(daydiff(parseDate($('#first').val()), parseDate($('#second').val())));</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;

&lt;input id=""first"" value=""1/1/2000""/&gt;
&lt;input id=""second"" value=""1/1/2001""/&gt;</code></pre>
</div>
</div>
</p>
","543152"
"How to reload page every 5 second?","331728","","<p>I am converting one layout to html; once I make the changes in code/html/css, every time I have to hit F5. Is there any simple javascript/jQuery solution for this? I.e. after I add the script, reload the whole page every 5 seconds (or some other specific time).</p>
","<pre><code> &lt;meta http-equiv=""refresh"" content=""5; URL=http://www.yourdomain.com/yoursite.html""&gt;
</code></pre>

<p>If it has to be in the script use setTimeout like:</p>

<pre><code>setTimeout(function(){
   window.location.reload(1);
}, 5000);
</code></pre>
","2787691"
"Test if an element contains a class?","331253","","<p>Using plain JavaScript (not jQuery), is there a way I can test to see if an element <em>contains</em> a class?</p>

<p>Currently, I'm doing this:</p>

<p>HTML:</p>

<pre><code>&lt;div id=""test"" class=""class1""&gt;&lt;/div&gt;;
</code></pre>

<p>JS:</p>

<pre><code>var test = document.getElementById(""test"");
var testClass = test.className;
switch(testClass){
    case ""class1"": test.innerHTML = ""I have class1""; break;
    case ""class2"": test.innerHTML = ""I have class2""; break;
    case ""class3"": test.innerHTML = ""I have class3""; break;
    case ""class4"": test.innerHTML = ""I have class4""; break;
    default: test.innerHTML = """";
}
</code></pre>

<p>This results in this output, which is correct:</p>

<pre><code>I have class1
</code></pre>

<p>The issue is that if I change the HTML to this...</p>

<pre><code>&lt;div id=""test"" class=""class1 class5""&gt;&lt;/div&gt;
</code></pre>

<p>...there's no longer an exact match, so I get the default output of nothing (<code>""""</code>). But I still want the output to be <code>I have class1</code> because the <code>&lt;div&gt;</code> still <em>contains</em> the <code>.class1</code> class.</p>
","<p>Use <a href=""https://developer.mozilla.org/en-US/docs/DOM/element.classList"" rel=""noreferrer""><code>element.classList</code></a> <code>.contains</code> method:</p>

<pre><code>element.classList.contains(class);
</code></pre>

<p>This works on all current browsers and there are polyfills to support older browsers too. </p>

<hr>

<p><strong>Alternatively</strong>, if you work with older browsers and don't want to use polyfills to fix them, using <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/indexOf"" rel=""noreferrer""><code>indexOf</code></a> is correct, but you have to tweak it a little:</p>

<pre><code>function hasClass(element, class) {
    return (' ' + element.className + ' ').indexOf(' ' + class+ ' ') &gt; -1;
}
</code></pre>

<p>Otherwise you will also get <code>true</code> if the class you are looking for is part of another class name.</p>

<p><a href=""http://jsfiddle.net/fkling/zBKCC/"" rel=""noreferrer""><strong>DEMO</strong></a></p>

<p>jQuery uses a similar (if not the same) method.</p>

<hr>

<p><strong>Applied to the example:</strong></p>

<p>As this does not work together with the switch statement, you could achieve the same effect with this code:</p>

<pre><code>var test = document.getElementById(""test""),
    classes = ['class1', 'class2', 'class3', 'class4'];

test.innerHTML = """";

for(var i = 0, j = classes.length; i &lt; j; i++) {
    if(hasClass(test, classes[i])) {
        test.innerHTML = ""I have "" + classes[i];
        break;
    }
}
</code></pre>

<p>It's also less redundant ;)</p>
","5898748"
"How can I obfuscate (protect) JavaScript?","330321","","<p>I want to make a JavaScript application that's not open source, and thus I wish to learn how to can obfuscate my JS code? Is this possible?</p>
","<p><strong>Obfuscation:</strong></p>

<p>Try <a href=""http://yuilibrary.com/"" rel=""noreferrer""><strong>YUI Compressor</strong></a>.  It's a very popular tool, built, enhanced and maintained by the Yahoo UI team.</p>

<p>You may also use:</p>

<ul>
<li><a href=""http://closure-compiler.appspot.com/home"" rel=""noreferrer"">Google Closure Compiler</a></li>
<li><a href=""http://marijnhaverbeke.nl/uglifyjs"" rel=""noreferrer"">UglifyJS</a></li>
</ul>

<p><strong>Private String Data:</strong></p>

<p>Keeping string values private is a different concern, and obfuscation won't really be of much benefit.  Of course, by packaging up your source into a garbled, minified mess, you have a light version of <strong>security</strong> through <strong>obscurity</strong>.  Most of the time, it's your user who is viewing the source, and the string values on the client are intended for their use, so that sort of private string value isn't often necessary.</p>

<p>If you really had a value that you never wanted a user to see, you would have a couple of options.  First, you could do some kind of encryption, which is decrypted at page load.  That would probably be one of the most secure options, but also a lot of work which may be unnecessary.  You could probably base64 encode some string values, and that would be easier.. but someone who really wanted those string values could <strong>easily decode them</strong>.  Encryption is the only way to truly prevent anyone from accessing your data, and most people find that to be more security than they need.</p>

<p><strong>Sidenote:</strong></p>

<p>Obfuscation in Javascript has been known to cause some bugs. The obfuscators are getting a little better about it, but many outfits decide that they see enough benefit from <strong>minifying</strong> and <strong>gzipping</strong>, and the added savings of obfuscation <strong>isn't always worth the trouble</strong>.  If you're trying to protect your source, maybe you'll decide that it's worth your while, just to make your code harder to read. <a href=""http://www.crockford.com/javascript/jsmin.html"" rel=""noreferrer""><strong>JSMin</strong></a> is a good alternative.</p>
","194399"
"Random color generator","330318","","<p>Given this function, I want to replace the <strong>color</strong> with a random color generator.</p>

<pre><code>document.overlay = GPolyline.fromEncoded({color: ""#0000FF"",
                                          weight: 10,
                                          points: encoded_points,
                                          zoomFactor: 32,
                                          levels: encoded_levels,
                                          numLevels: 4
                                         });
</code></pre>

<p>How can I do it?</p>
","<p>Use <code>getRandomColor()</code> in place of <code>""#0000FF""</code>:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function getRandomColor() {
  var letters = '0123456789ABCDEF';
  var color = '#';
  for (var i = 0; i &lt; 6; i++) {
    color += letters[Math.floor(Math.random() * 16)];
  }
  return color;
}



function setRandomColor() {
  $(""#colorpad"").css(""background-color"", getRandomColor());
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;
&lt;div id=""colorpad"" style=""width:300px;height:300px;background-color:#000""&gt;

&lt;/div&gt;
&lt;button onclick=""setRandomColor()""&gt;Random Color&lt;/button&gt;</code></pre>
</div>
</div>
</p>
","1484514"
"How to initialize an array's length in javascript?","329966","","<p>Most of the tutorials that I've read on arrays in JavaScript (including <a href=""http://www.w3schools.com/js/js_obj_array.asp"" rel=""noreferrer"">w3schools</a> and <a href=""http://www.devguru.com/technologies/ecmascript/quickref/array.html"" rel=""noreferrer"">devguru</a>) suggest that you can initialize an array with a certain length by passing an integer to the Array constructor using the <code>var test = new Array(4);</code> syntax.</p>

<p>After using this syntax liberally in my js files, I ran one of the files through <a href=""http://www.jslint.com/"" rel=""noreferrer"">jsLint</a>, and it freaked out:</p>

<blockquote>
  <p>Error: Problem at line 1 character 22: Expected ')' and instead saw '4'.<br>
  var test = new Array(4);<br>
  Problem at line 1 character 23: Expected ';' and instead saw ')'.<br>
  var test = new Array(4);<br>
  Problem at line 1 character 23: Expected an identifier and instead saw ')'.</p>
</blockquote>

<p>After reading through <a href=""http://www.jslint.com/lint.html"" rel=""noreferrer"">jsLint's explanation of its behavior</a>, it looks like jsLint doesn't really like the <code>new Array()</code> syntax, and instead prefers <code>[]</code> when declaring arrays.</p>

<p>So I have a couple questions.  First, why?  Am I running any risk by using the <code>new Array()</code> syntax instead?  Are there browser incompatibilities that I should be aware of?  And second, if I switch to the square bracket syntax, is there any way to declare an array and set its length all on one line, or do I have to do something like this:</p>

<pre><code>var test = [];
test.length = 4;
</code></pre>
","<ol>
<li><p>Why do you want to initialize the length? Theoretically there is no need for this. It can even result in confusing behavior, because all tests that use the <code>length</code> to find out whether an array is empty or not will report that the array is not empty.<br>
<a href=""http://jsperf.com/big-array-initialize/2"" rel=""noreferrer"">Some</a> <a href=""http://jsperf.com/best-init-array/3"" rel=""noreferrer"">tests</a> show that setting the initial length of large arrays <em>can</em> be more efficient if the array is filled afterwards, but the performance gain (if any) seem to differ from browser to browser.</p></li>
<li><p>jsLint does not like <code>new Array()</code> because the constructer is ambiguous.</p>

<pre><code>new Array(4);
</code></pre>

<p>creates an empty array <strong>of length</strong> 4. But</p>

<pre><code>new Array('4');
</code></pre>

<p>creates an array <strong>containing the value</strong> <code>'4'</code>.</p></li>
</ol>

<p>Regarding your comment: In JS you don't need to initialize the length of the array. It grows dynamically. You can just store the length in some variable, e.g.</p>

<pre><code>var data = [];
var length = 5; // user defined length

for(var i = 0; i &lt; length; i++) {
    data.push(createSomeObject());
}
</code></pre>
","4852052"
"JavaScript null check","329741","","<p>I've come across the following code:</p>

<pre><code>function (data) {
    if (data != null &amp;&amp; data !== undefined) {
        // some code here
    }
}
</code></pre>

<p>I'm somewhat new to JavaScript, but, from other questions I've been reading here, I'm under the impression that this code does not make much sense.</p>

<hr>

<del>
In particular, <a href=""https://stackoverflow.com/a/2559513/2088822"">this answer</a> states that
</del>

<blockquote>
  <p><del>You'll get an error if you access an undefined variable in any context other than <code>typeof</code>. </del></p>
</blockquote>

<p><strong>Update:</strong> The (quote of the) answer above may be misleading. It should say <em>«an undeclared variable»</em>, instead of <em>«an undefined variable»</em>.</p>

<p>As I found out, in the answers by <a href=""https://stackoverflow.com/a/16672768/2088822""><em>Ryan ♦</em></a>, <a href=""https://stackoverflow.com/a/16673024/2088822""><em>maerics</em></a>, and <a href=""https://stackoverflow.com/a/16674810/2088822""><em>nwellnhof</em></a>, even when no arguments are provided to a function, its variables for the arguments are always declared. This fact also proves wrong the first item in the list below.</p>

<hr>

<p>From my understanding, the following scenarios may be experienced:</p>

<ul>
<li><p><del>The function was called with no arguments, thus making <code>data</code> an undefined variable, and raising an error on <code>data != null</code>.</del></p></li>
<li><p>The function was called specifically with <code>null</code> (or <code>undefined</code>), as its argument, in which case <code>data != null</code> already protects the inner code, rendering <code>&amp;&amp; data !== undefined</code> useless.</p></li>
<li><p>The function was called with a non-null argument, in which case it will trivially pass both <code>data != null</code> <strong>and</strong> <code>data !== undefined</code>.</p></li>
</ul>

<p><strong>Q: Is my understanding correct?</strong></p>

<hr>

<p>I've tried the following, in Firefox's console:</p>

<pre><code>--
[15:31:31.057] false != null
[15:31:31.061] true
--
[15:31:37.985] false !== undefined
[15:31:37.989] true
--
[15:32:59.934] null != null
[15:32:59.937] false
--
[15:33:05.221] undefined != null
[15:33:05.225] false
--
[15:35:12.231] """" != null
[15:35:12.235] true
--
[15:35:19.214] """" !== undefined
[15:35:19.218] true
</code></pre>

<p>I can't figure out a case where the <code>data !== undefined</code> <strong>after</strong> <code>data != null</code> might be of any use.</p>
","<p>An “undefined variable” is different from the value <code>undefined</code>.</p>

<p>An undefined variable:</p>

<pre><code>var a;
alert(b); // ReferenceError: b is not defined
</code></pre>

<p>A variable with the value <code>undefined</code>:</p>

<pre><code>var a;
alert(a); // Alerts “undefined”
</code></pre>

<p>When a function takes an argument, that argument is always declared even if its value is <code>undefined</code>, and so there won’t be any error. You are right about <code>!= null</code> followed by <code>!== undefined</code> being useless, though.</p>
","16672768"
"How to delete a localStorage item when the browser window/tab is closed?","328930","","<p>My Case: localStorage with key + value that should be deleted when browser is closed and not single tab.</p>

<p>Please see my code if its proper and what can be improved:</p>

<pre><code>//create localStorage key + value if not exist
if(localStorage){
   localStorage.myPageDataArr={""name""=&gt;""Dan"",""lastname""=&gt;""Bonny""}; 
}

//when browser closed - psedocode
$(window).unload(function(){
  localStorage.myPageDataArr=undefined;
});
</code></pre>
","<p>should be done like that and not with delete operator:</p>

<pre><code>localStorage.removeItem(key);
</code></pre>
","10710029"
"Clearing localStorage in javascript?","328909","","<p>Is there any way to reset/clear browser's localStorage in javascript?</p>
","<p>Use this to clear localStorage:</p>

<pre><code>localStorage.clear();
</code></pre>
","7667973"
"How to load up CSS files using Javascript?","328786","","<p>Is it possible to import css stylesheets into a html page using Javascript? If so, how can it be done?</p>

<p>P.S the javascript will be hosted on my site, but I want users to be able to put in the <code>&lt;head&gt;</code> tag of their website, and it should be able to import a css file hosted on my server into the current web page. (both the css file and the javascript file will be hosted on my server).</p>
","<p>Here's the ""old school"" way of doing it, which hopefully works across all browsers. In theory, you would use <code>setAttribute</code> unfortunately IE6 doesn't support it consistently.</p>

<pre><code>var cssId = 'myCss';  // you could encode the css path itself to generate id..
if (!document.getElementById(cssId))
{
    var head  = document.getElementsByTagName('head')[0];
    var link  = document.createElement('link');
    link.id   = cssId;
    link.rel  = 'stylesheet';
    link.type = 'text/css';
    link.href = 'http://website.com/css/stylesheet.css';
    link.media = 'all';
    head.appendChild(link);
}
</code></pre>

<p>This example checks if the CSS was already added so it adds it only once.</p>

<p>Put that code into a javascript file, have the end-user simply include the javascript, and make sure the CSS path is absolute so it is loaded from your servers.</p>

<h1>VanillaJS</h1>

<p>Here is an example that uses plain JavaScript to inject a CSS link into the <code>head</code> element based on the filename portion of the URL:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
var file = location.pathname.split( ""/"" ).pop();

var link = document.createElement( ""link"" );
link.href = file.substr( 0, file.lastIndexOf( ""."" ) ) + "".css"";
link.type = ""text/css"";
link.rel = ""stylesheet"";
link.media = ""screen,print"";

document.getElementsByTagName( ""head"" )[0].appendChild( link );
&lt;/script&gt;
</code></pre>

<p>Insert the code just before the closing <code>head</code> tag and the CSS will be loaded before the page is rendered. Using an external JavaScript (<code>.js</code>) file will cause a Flash of unstyled content (<a href=""http://en.wikipedia.org/wiki/Flash_of_unstyled_content"" rel=""noreferrer"">FOUC</a>) to appear.</p>
","577002"
"How to format a float in javascript?","328628","","<p>In JavaScript, when converting from a float to a string, how can I get just 2 digits after the decimal point? For example, 0.34 instead of 0.3445434.</p>
","<pre><code>var result = Math.round(original*100)/100;
</code></pre>

<p><a href=""http://www.javascriptkit.com/javatutors/round.shtml"" rel=""noreferrer"">The specifics</a>, in case the code isn't self-explanatory.</p>

<p>edit: ...or just use <code><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed"" rel=""noreferrer"">toFixed</a></code>, as proposed by <a href=""https://stackoverflow.com/questions/661562/comma-format-in-javascript/661579#661579"">Tim Büthe</a>. Forgot that one, thanks (and an upvote) for reminder :)</p>
","661569"
"What is this Javascript ""require""?","328496","","<p>I'm trying to get Javascript to read/write to a PostgreSQL database. I found this <a href=""https://github.com/brianc/node-postgres"">project</a> on github. I was able to get the following sample code to run in node.</p>

<pre><code>var pg = require('pg'); //native libpq bindings = `var pg = require('pg').native`
var conString = ""tcp://postgres:1234@localhost/postgres"";

var client = new pg.Client(conString);
client.connect();

//queries are queued and executed one after another once the connection becomes available
client.query(""CREATE TEMP TABLE beatles(name varchar(10), height integer, birthday timestamptz)"");
client.query(""INSERT INTO beatles(name, height, birthday) values($1, $2, $3)"", ['Ringo', 67, new Date(1945, 11, 2)]);
client.query(""INSERT INTO beatles(name, height, birthday) values($1, $2, $3)"", ['John', 68, new Date(1944, 10, 13)]);

//queries can be executed either via text/parameter values passed as individual arguments
//or by passing an options object containing text, (optional) parameter values, and (optional) query name
client.query({
  name: 'insert beatle',
  text: ""INSERT INTO beatles(name, height, birthday) values($1, $2, $3)"",
  values: ['George', 70, new Date(1946, 02, 14)]
});

//subsequent queries with the same name will be executed without re-parsing the query plan by postgres
client.query({
  name: 'insert beatle',
  values: ['Paul', 63, new Date(1945, 04, 03)]
});
var query = client.query(""SELECT * FROM beatles WHERE name = $1"", ['John']);

//can stream row results back 1 at a time
query.on('row', function(row) {
  console.log(row);
  console.log(""Beatle name: %s"", row.name); //Beatle name: John
  console.log(""Beatle birth year: %d"", row.birthday.getYear()); //dates are returned as javascript dates
  console.log(""Beatle height: %d' %d\"""", Math.floor(row.height/12), row.height%12); //integers are returned as javascript ints
});

//fired after last row is emitted
query.on('end', function() { 
  client.end();
});
</code></pre>

<p>Next I tried to make it run on a webpage, but nothing seemed to happen. I checked on the Javascript console and it just says ""require not defined.""</p>

<p>So what is this ""require?"" Why does it work in node but not in a webpage?</p>

<p>Also, before I got it to work in node, I had to do <code>npm install pg</code>. What's that about? I looked in the directory and didn't find a file pg. Where did it put it, and how does Javascript find it?</p>
","<p><code>require()</code> is not part of your standard JavaScript. In context to your question and tags, <code>require()</code> is built into Node.js to load <em>modules</em>. The concept is similar to C/Java/Python/[insert more languages here] imports or includes.</p>

<p>The concept of modules is similar to just adding small bits of JavaScript code via <code>&lt;script&gt;</code> tags. Unlike adding a <code>&lt;script&gt;</code> tag, it doesn't leak the file into the global scope. The file has its own scope, essentially trapping everything you define in that file, unless you decide to expose functionality.  <code>require</code> returns a value, depending on what the module exposes using <code>exports</code> or <code>module.exports</code>. <a href=""https://stackoverflow.com/a/5311377/575527"">Another post</a> explains how <code>require()</code> works in conjunction with <code>exports</code>.&nbsp;</p>

<p>In your code, it loads the <code>pg</code> module, which I guess is a PostgreSQL driver for NodeJS. The part where you do <code>npm install pg</code> downloads the <code>pg</code> module from npm (a package repository for NodeJS modules) and makes it available to your project via <code>require('pg');</code>.</p>

<hr>

<p>Just in case you were wondering why I mentioned ""in context to your question"", there are 3rd-party libraries that also use a function named <code>require</code> to do something. It's handy to identify which is which.</p>

<ul>
<li><p><a href=""http://requirejs.org/docs/start.html"" rel=""noreferrer"">RequireJS</a> exposes a function called <code>require</code>, along with <code>define</code> to load dependencies before running the code provided. The syntax is in AMD format.</p></li>
<li><p><a href=""https://www.npmjs.org/package/grunt-neuter"" rel=""noreferrer"">Neuter</a>, which concatenates js files, also exposes a function named <code>require</code>. This one acts much closer to PHP's <code>import</code>.</p></li>
<li><p><a href=""http://browserify.org/"" rel=""noreferrer"">Browserify</a> uses <code>require</code> on the browser, allowing scripts on the browser to be written NodeJS style (CommonJS module syntax).</p></li>
</ul>
","9901097"
"How do I replace a character at a particular index in JavaScript?","327461","","<p>I have a string, let's say <code>Hello world</code> and I need to replace the char at index 3. How can I replace a char by specifying a index?</p>

<pre><code>var str = ""hello world"";
</code></pre>

<p>I need something like</p>

<pre><code>str.replaceAt(0,""h"");
</code></pre>
","<p>In JavaScript, strings are <strong>immutable</strong>, which means the best you can do is create a new string with the changed content, and assign the variable to point to it.</p>

<p>You'll need to define the <code>replaceAt()</code> function yourself:</p>

<pre><code>String.prototype.replaceAt=function(index, replacement) {
    return this.substr(0, index) + replacement+ this.substr(index + replacement.length);
}
</code></pre>

<p>And use it like this:</p>

<pre><code>var hello=""Hello World"";
alert(hello.replaceAt(2, ""!!"")); //should display He!!o World
</code></pre>
","1431113"
"How do you find out the caller function in JavaScript?","327336","","<pre><code>function main()
{
   Hello();
}

function Hello()
{
  // How do you find out the caller function is 'main'?
}
</code></pre>

<p>Is there a way to find out the call stack at all?</p>
","<pre><code>function Hello()
{
    alert(""caller is "" + Hello.caller);
}
</code></pre>

<p>Note that this feature is <strong>non standard</strong>, from <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller"" rel=""noreferrer""><code>Function.caller</code></a>:</p>

<blockquote>
  <p><strong>Non-standard</strong><br>
  This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>
</blockquote>

<hr>

<p>The following is the old answer from 2008, which is no longer supported in modern Javascript:</p>

<pre><code>function Hello()
{
    alert(""caller is "" + arguments.callee.caller.toString());
}
</code></pre>
","280396"
"Fatal error: Unable to find local grunt","327276","","<p>I removed the old grunt first,and I install the new grunt.But I got an error:</p>

<blockquote>
  <p>D:\www\grunt-test\grunt grunt-cli: The grunt command line interface.
  (v0.1.4)</p>
  
  <p>Fatal error: Unable to find local grunt.</p>
  
  <p>If you're seeing this message, either a Gruntfile wasn't found or
  grunt hasn't been installed locally to your project. For more
  information about installing and configuring grunt, please see the
  Getting Started guide: <a href=""http://gruntjs.com/getting-started"" rel=""noreferrer"">http://gruntjs.com/getting-started</a></p>
</blockquote>

<p>Is there haven't a grunt in my system path, or something else? I tried to re-install it for few times.</p>
","<p>I think you don't have a <code>grunt.js</code> file in your project directory.  Use <code>grunt:init</code>, which gives you options such as <code>jQuery, node,commonjs</code>.  Select what you want, then proceed.  This really works. For more information you can visit <a href=""http://net.tutsplus.com/tutorials/javascript-ajax/meeting-grunt-the-build-tool-for-javascript/"" rel=""noreferrer"">this</a>.</p>

<p>Do this: </p>

<pre><code> 1. npm install -g grunt
 2. grunt:init  ( you will get following options ):
      jquery: A jQuery plugin
      node: A Node module
      commonjs: A CommonJS module
      gruntplugin: A Grunt plugin
      gruntfile: A Gruntfile (grunt.js)
 3 .grunt init:jquery (if you want to create a jQuery related project.).
</code></pre>

<p>It should work.</p>

<p>Solution for v1.4:</p>

<pre><code>1. npm install -g grunt-cli
2. npm init
   fill all details and it will create a package.json file.
3. npm install grunt (for grunt dependencies.)
</code></pre>

<p><strong>Edit : Updated solution for new versions:</strong> </p>

<pre><code> npm install grunt --save-dev
</code></pre>
","13927654"
"How to access Session variables and set them in javascript?","327240","","<p>In code-behind I set <code>Session</code> with some data.</p>

<pre><code>Session[""usedData""] = ""sample data"";
</code></pre>

<p>And the question is how can I get the Session value(in my example; ""sample data"") in javascript and set <code>Session[""usedData""]</code> with a new value?</p>
","<p><strong>Accessing &amp; Assigning the Session Variable using Javascript:</strong></p>

<p><strong>Assigning the ASP.NET Session Variable using Javascript:</strong></p>

<pre><code> &lt;script type=""text/javascript""&gt;
function SetUserName()
{
    var userName = ""Shekhar Shete"";
    '&lt;%Session[""UserName""] = ""' + userName + '""; %&gt;';
     alert('&lt;%=Session[""UserName""] %&gt;');
}
&lt;/script&gt;
</code></pre>

<p><strong>Accessing ASP.NET Session variable using Javascript:</strong></p>

<pre><code>&lt;script type=""text/javascript""&gt;
    function GetUserName()
    {

        var username = '&lt;%= Session[""UserName""] %&gt;';
        alert(username );
    }
&lt;/script&gt;
</code></pre>
","20236481"
"Get current date/time in seconds","327161","","<p>How do I get the current date/time in seconds in Javascript?</p>
","<pre><code>var seconds = new Date().getTime() / 1000;
</code></pre>

<p>....will give you the seconds since midnight, 1 Jan 1970</p>

<p><a href=""http://www.w3schools.com/jsref/jsref_obj_date.asp"" rel=""noreferrer"">Reference</a></p>
","3830279"
"Selecting all text in HTML text input when clicked","327024","","<p>I have the following code to display a textbox in a HTML webpage.</p>

<pre><code>&lt;input type=""text"" id=""userid"" name=""userid"" value=""Please enter the user ID"" /&gt;
</code></pre>

<p>When the page displays, the text contains the <em>Please enter the user ID</em> message. However, I found that the user needs to click 3 times in order to select all the text (in this case it is <em>Please enter the user ID</em>). </p>

<p>Is it possible to select the entire text with only one click?</p>

<p><strong>Edit:</strong></p>

<p>Sorry, I forgot to say: I must use the input <code>type=""text""</code></p>
","<p>You can use this javascript snippet:</p>

<pre><code>&lt;input onClick=""this.select();"" value=""Sample Text"" /&gt;
</code></pre>

<p>But apparently it doesn't work on mobile Safari. In those cases you can use:</p>

<pre><code>&lt;input onClick=""this.setSelectionRange(0, this.value.length)"" value=""Sample Text"" /&gt;
</code></pre>
","4067488"
"How do I store an array in localStorage?","326917","","<p>If I didn't need localStorage, my code would look like this:</p>

<pre><code>var names=new Array(); 
names[0]=prompt(""New member name?"");
</code></pre>

<p>This works. However, I need to store this variable in localStorage and it's proving quite stubborn. I've tried:</p>

<pre><code>var localStorage[names] = new Array();
localStorage.names[0] = prompt(""New member name?"");
</code></pre>

<p>Where am I going wrong?</p>
","<p><code>localStorage</code> only supports strings. Use <code>JSON.stringify()</code> and <code>JSON.parse()</code>.</p>

<pre><code>var names = [];
names[0] = prompt(""New member name?"");
localStorage.setItem(""names"", JSON.stringify(names));

//...
var storedNames = JSON.parse(localStorage.getItem(""names""));
</code></pre>
","3357615"
"Generate a Hash from string in Javascript/jQuery","326663","","<p>I need to convert strings to some form of hash.  Is this possible in Javascript/jQuery?</p>

<p>I'm not utilizing a server-side language so I can't do it that way.</p>
","<pre><code>String.prototype.hashCode = function() {
  var hash = 0, i, chr;
  if (this.length === 0) return hash;
  for (i = 0; i &lt; this.length; i++) {
    chr   = this.charCodeAt(i);
    hash  = ((hash &lt;&lt; 5) - hash) + chr;
    hash |= 0; // Convert to 32bit integer
  }
  return hash;
};
</code></pre>

<p>Source:
<a href=""http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/"" rel=""noreferrer"">http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/</a></p>
","7616484"
"Render basic HTML view?","326614","","<p>I have a basic node.js app that I am trying to get off the ground using Express framework.  I have a <code>views</code> folder where I have an <code>index.html</code> file.  But I receive the following error when loading the web browser.</p>

<blockquote>
  <p>Error: Cannot find module 'html'</p>
</blockquote>

<p>Below is my code.  </p>

<pre><code>var express = require('express');
var app = express.createServer();

app.use(express.staticProvider(__dirname + '/public'));

app.get('/', function(req, res) {
    res.render('index.html');
});

app.listen(8080, '127.0.0.1')
</code></pre>

<p>What am I missing here?</p>
","<p>You can have jade include a plain HTML page:</p>

<p>in views/index.jade</p>

<pre><code>include plain.html
</code></pre>

<p>in views/plain.html</p>

<pre><code>&lt;!DOCTYPE html&gt;
...
</code></pre>

<p>and app.js can still just render jade:</p>

<pre><code>res.render(index)
</code></pre>
","8922097"
"Calling a parent window function from an iframe","326613","","<p>I want to call a parent window JavaScript function from an iframe.  </p>

<pre><code>&lt;script&gt;
    function abc()
    {
        alert(""sss"");
    }
&lt;/script&gt;

&lt;iframe id=""myFrame""&gt;
    &lt;a onclick=""abc();"" href=""#""&gt;Call Me&lt;/a&gt;
&lt;/iframe&gt;
</code></pre>
","<pre><code>&lt;a onclick=""parent.abc();"" href=""#"" &gt;Call Me &lt;/a&gt;
</code></pre>

<p>See <a href=""https://developer.mozilla.org/en/DOM/window.parent"" rel=""noreferrer"">window.parent</a></p>

<p>Returns a reference to the parent of the current window or subframe.</p>

<p>If a window does not have a parent, its parent property is a reference to itself.</p>

<p>When a window is loaded in an <code>&lt;iframe&gt;</code>, <code>&lt;object&gt;</code>, or <code>&lt;frame&gt;</code>, its parent is the window with the element embedding the window.</p>
","2161402"
"How do I pre-populate a jQuery Datepicker textbox with today's date?","326513","","<p>I have a very simple jQuery Datepicker calendar:</p>

<pre><code>$(document).ready(function(){
    $(""#date_pretty"").datepicker({ 
    });
});
</code></pre>

<p>and of course in the HTML...</p>

<pre><code>&lt;input type=""text"" size=""10"" value="""" id=""date_pretty""/&gt;
</code></pre>

<p>Today's date is nicely highlighted for the user when they bring up the calendar, but how do I get jQuery to pre-populate the textbox itself with today's date on page load, without the user doing anything?  99% of the time, the today's date default will be what they want.</p>
","<p><strong>Update: There are reports this no longer works in Chrome.</strong></p>

<p>This is concise and does the job:</p>

<pre><code>$("".date-pick"").datepicker('setDate', new Date());
</code></pre>
","2325607"
"How to pass parameters in GET requests with jQuery","326403","","<p>How should I be passing query string values in a jQuery Ajax request? I currently do them as follows but I'm sure there is a cleaner way that does not require me to encode manually.</p>

<pre><code>$.ajax({
    url: ""ajax.aspx?ajaxid=4&amp;UserID="" + UserID + ""&amp;EmailAddress="" + encodeURIComponent(EmailAddress),
    success: function(response) {
        //Do Something
    },
    error: function(xhr) {
        //Do Something to handle error
    }
});
</code></pre>

<p>I’ve seen examples where query string parameters are passed as an array but these examples I've seen don't use the <code>$.ajax()</code> model, instead they go straight to <code>$.get()</code>. For example:</p>

<pre><code>$.get(""ajax.aspx"", { UserID: UserID , EmailAddress: EmailAddress } );
</code></pre>

<p>I prefer to use the $.ajax() format as it's what I’m used to (no particularly good reason - just a personal preference).</p>

<p><strong>Edit 09/04/2013:</strong></p>

<p>After my question was closed (as ""Too Localised"") i found a related (identical) question - with 3 upvotes no-less (My bad for not finding it in the first place):</p>

<p><a href=""https://stackoverflow.com/questions/3066070/using-jquery-to-make-a-post-how-to-properly-supply-data-parameter"">Using jquery to make a POST, how to properly supply &#39;data&#39; parameter?</a></p>

<p>This answered my question perfectly, I found that doing it this way is much easier to read &amp; I don't need to manually use <code>encodeURIComponent()</code> in the URL or the DATA values (which is what i found unclear in bipen's answer). This is because the <code>data</code> value is encoded automatically via <a href=""http://api.jquery.com/jQuery.param/"" rel=""noreferrer""><code>$.param()</code></a>). Just in case this can be of use to anyone else, this is the example I went with:</p>

<pre><code>$.ajax({
    url: ""ajax.aspx?ajaxid=4"",
    data: { 
        ""VarA"": VarA, 
        ""VarB"": VarB, 
        ""VarC"": VarC
    },
    cache: false,
    type: ""POST"",
    success: function(response) {

    },
    error: function(xhr) {

    }
});
</code></pre>
","<p>Use data option of ajax. You can send data object to server by <code>data</code> option in ajax and the <code>type</code> which defines how you are sending it (either <code>POST</code> or <code>GET</code>). The default type is <code>GET</code> method</p>

<p>Try this</p>

<pre><code>$.ajax({
  url: ""ajax.aspx"",
  type: ""get"", //send it through get method
  data: { 
    ajaxid: 4, 
    UserID: UserID, 
    EmailAddress: EmailAddress
  },
  success: function(response) {
    //Do Something
  },
  error: function(xhr) {
    //Do Something to handle error
  }
});
</code></pre>

<p>And you can get the data by</p>

<pre><code> $_GET['ajaxid'] //gives 4
 $_GET['UserID'] //gives you the sent userid
</code></pre>
","15576581"
"Refresh Part of Page (div)","326331","","<p>I have a basic html file which is attached to a java program. This java program updates the contents of part of the HTML file whenever the page is refreshed. I want to refresh only that part of the page after each interval of time. I can place the part I would like to refresh in a div, but I am not sure how to refresh only the contents of the div. Any help would be appreciated. Thank you. </p>
","<p>Use Ajax for this.</p>

<p>Build a function that will fetch the current page via ajax, but not the whole page, just the div in question from the server. The data will then (again via jQuery) be put inside the same div in question and replace old content with new one.</p>

<p>Relevant function:</p>

<p><a href=""http://api.jquery.com/load/"" rel=""nofollow noreferrer"">http://api.jquery.com/load/</a></p>

<p>e.g.</p>

<pre><code>$('#thisdiv').load(document.URL +  ' #thisdiv');
</code></pre>

<p>Note, load automatically replaces content. Be sure to include a space before the id selector.</p>
","17886633"
"toggle show/hide div with button?","326007","","<p>Hopefully this is an easy question.  I have a div that I want to toggle hidden/shown with a button.</p>

<pre><code>&lt;div id=""newpost""&gt;
</code></pre>
","<p>Look at <a href=""http://api.jquery.com/toggle/"" rel=""noreferrer"">jQuery Toggle</a></p>

<p><strong>HTML:</strong></p>

<pre><code>&lt;div id='content'&gt;Hello World&lt;/div&gt;
&lt;input type='button' id='hideshow' value='hide/show'&gt;
</code></pre>

<p><strong>jQuery:</strong></p>

<pre><code>jQuery(document).ready(function(){
    jQuery('#hideshow').live('click', function(event) {        
         jQuery('#content').toggle('show');
    });
});
</code></pre>

<p>For versions of jQuery 1.7 and newer use</p>

<pre><code>jQuery(document).ready(function(){
        jQuery('#hideshow').on('click', function(event) {        
             jQuery('#content').toggle('show');
        });
    });
</code></pre>

<p><a href=""http://jsfiddle.net/vVsAn/1/"" rel=""noreferrer""><strong>Demo</strong></a></p>
","4528107"
"Call a function after previous function is complete","325928","","<p>I have the following JavaScript code:</p>

<pre><code>$('a.button').click(function(){
    if (condition == 'true'){
        function1(someVariable);
        function2(someOtherVariable);
    }
    else {
        doThis(someVariable);
    }
});
</code></pre>

<p>How can I ensure that <code>function2</code> is called only after <code>function1</code> has completed?</p>
","<p>Specify an anonymous callback, and make function1 accept it:</p>

<pre><code>$('a.button').click(function(){
    if (condition == 'true'){
        function1(someVariable, function() {
          function2(someOtherVariable);
        });
    }
    else {
        doThis(someVariable);
    }
});


function function1(param, callback) {
  ...do stuff
  callback();
} 
</code></pre>
","5000447"
"How to check null objects in jQuery","325263","","<p>I'm using jQuery and I want to check the existence of an element in my page. I have written following code, but it's not working:</p>

<pre><code>if($(""#btext"" + i) != null) {
    //alert($(""#btext"" + i).text());
    $(""#btext"" + i).text(""Branch "" + i);
}
</code></pre>

<p>How do I check the existence of the element?</p>
","<p>Check the <a href=""http://learn.jquery.com/using-jquery-core/faq/how-do-i-test-whether-an-element-exists/"" rel=""noreferrer"">jQuery FAQ</a>...</p>

<p>You can use the length property of the jQuery collection returned by your selector:</p>

<pre><code>if ( $('#myDiv').length ){}
</code></pre>
","477673"
"Create a JavaScript array containing 1...N","325084","","<p>I'm looking for any alternatives to the below for creating a JavaScript array containing 1 through to N where N is only known at runtime.</p>

<pre><code>var foo = [];

for (var i = 1; i &lt;= N; i++) {
   foo.push(i);
}
</code></pre>

<p>To me it feels like there should be a way of doing this without the loop.</p>
","<p>If I get what you are after, you want an array of numbers <code>1..n</code> that you can later loop through.</p>

<p>If this is all you need, can you do this instead?</p>

<pre><code>var foo = new Array(45);//create an empty array with length 45
</code></pre>

<p>then when you want to use it... (un-optimized, just for example)</p>

<pre><code>for(var i=0;i&lt;foo.length;i++){
  document.write('Item: ' + (i+1) + ' of ' + foo.length + '&lt;br/&gt;'); 
}
</code></pre>

<p>e.g. if you don't need to <strong>store</strong> anything in the array, you just need a container of the right length that you can iterate over... this might be easier.</p>

<p>See it in action here: <a href=""http://jsfiddle.net/3kcvm/"" rel=""noreferrer"">http://jsfiddle.net/3kcvm/</a></p>
","3746797"
"Is there a better way to do optional function parameters in Javascript?","324979","","<p>I've always handled optional parameters in Javascript like this:</p>

<pre><code>function myFunc(requiredArg, optionalArg){
  optionalArg = optionalArg || 'defaultValue';

  //do stuff

}
</code></pre>

<p>Is there a better way to do it?</p>

<p>Are there any cases where using <code>||</code> like that is going to fail?</p>
","<p>Your logic fails if optionalArg is passed, but evaluates as false - try this as an alternative</p>

<pre><code>if (typeof optionalArg === 'undefined') { optionalArg = 'default'; }
</code></pre>

<p>Or an alternative idiom:</p>

<pre><code>optionalArg = (typeof optionalArg === 'undefined') ? 'default' : optionalArg;
</code></pre>

<p>Use whichever idiom communicates the intent best to you!</p>
","148918"
"How to determine equality for two JavaScript objects?","323686","","<p>A strict equality operator will tell you if two object <strong>types</strong> are equal. However, is there a way to tell if two objects are equal, <strong>much like the hash code</strong> value in Java?</p>

<p>Stack Overflow question <em><a href=""https://stackoverflow.com/questions/194846"">Is there any kind of hashCode function in JavaScript?</a></em> is similar to this question, but requires a more academic answer. The scenario above demonstrates why it would be necessary to have one, and I'm wondering if there is any <strong>equivalent solution</strong>.</p>
","<p><strong>The short answer</strong></p>

<p>The simple answer is: No, there is no generic means to determine that an object is equal to another in the sense you mean. The exception is when you are strictly thinking of an object being typeless.</p>

<p><strong>The long answer</strong></p>

<p>The concept is that of an Equals method that compares two different instances of an object to indicate whether they are equal at a value level. However, it is up to the specific type to define how an <code>Equals</code> method should be implemented. An iterative comparison of attributes that have primitive values may not be enough, there may well be attributes which are not to be considered part of the object value. For example,</p>

<pre><code> function MyClass(a, b)
 {
     var c;
     this.getCLazy = function() {
         if (c === undefined) c = a * b // imagine * is really expensive
         return c;
     }
  }
</code></pre>

<p>In this above case, <code>c</code> is not really important to determine whether any two instances of MyClass are equal, only <code>a</code> and <code>b</code> are important. In some cases <code>c</code> might vary between instances and yet not be significant during comparison. </p>

<p>Note this issue applies when members may themselves also be instances of a type and these each would all be required to have a means of determining equality.</p>

<p>Further complicating things is that in JavaScript the distinction between data and method is blurred.</p>

<p>An object may reference a method that is to be called as an event handler, and this would likely not be considered part of its 'value state'. Whereas another object may well be assigned a function that performs an important calculation and thereby makes this instance different from others simply because it references a different function.</p>

<p>What about an object that has one of its existing prototype methods overridden by another function? Could it still be considered equal to another instance that it otherwise identical? That question can only be answered in each specific case for each type.</p>

<p>As stated earlier, the exception would be a strictly typeless object. In which case the only sensible choice is an iterative and recursive comparison of each member. Even then one has to ask what is the 'value' of a function?</p>
","201471"
"Redirecting to a relative URL in JavaScript","323328","","<p>I have a problem:
I want to redirect via JavaScript to a directory above.
My code:</p>

<pre><code>location.href = (location.href).substr(0, (location.href).lastIndexOf('folder'));
</code></pre>

<p>The url looks like this:</p>

<blockquote>
  <p>domain.com/path/folder/index.php?file=abc&amp;test=123&amp;lol=cool</p>
</blockquote>

<p>The redirect affect just this:</p>

<blockquote>
  <p>domain.com/path/&amp;test=123&amp;lol=cool</p>
</blockquote>

<p>But want to have this:</p>

<blockquote>
  <p>domain.com/path/</p>
</blockquote>

<p>How could I do that?</p>
","<p>You can do a relative redirect:</p>

<pre><code>window.location.href = '../'; //one level up
</code></pre>

<p>or</p>

<pre><code>window.location.href = '/path'; //relative to domain
</code></pre>
","1655081"
"How to retrieve GET parameters from javascript?","323134","","<pre><code>http://domain.com/page.html?returnurl=%2Fadmin
</code></pre>

<p>For <code>js</code> within <code>page.html</code>,how can it retrieve <code>GET</code> parameters?</p>

<p>For the above simple example,<code>func('returnurl')</code> should be <code>/admin</code></p>

<p>But it should also work for complex querystrngs...</p>
","<p>With the <a href=""https://developer.mozilla.org/en/DOM/window.location"" rel=""noreferrer"">window.location</a> object. This code gives you GET without the question mark.</p>

<pre><code>window.location.search.substr(1)
</code></pre>

<p>From your example it will return <code>returnurl=%2Fadmin</code></p>

<p><strong>EDIT</strong>: I took the liberty of changing <a href=""https://stackoverflow.com/a/21210643/179669"">Qwerty's answer</a>, which is <strong>really good</strong>, and as he pointed I followed exactly what the OP asked:</p>

<pre><code>function findGetParameter(parameterName) {
    var result = null,
        tmp = [];
    location.search
        .substr(1)
        .split(""&amp;"")
        .forEach(function (item) {
          tmp = item.split(""="");
          if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);
        });
    return result;
}
</code></pre>

<p>I removed the duplicated function execution from his code, replacing it a variable ( tmp ) and also I've added <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent"" rel=""noreferrer""><code>decodeURIComponent</code></a>, exactly as OP asked. I'm not sure if this may or may not be a security issue.</p>

<p>Or otherwise with plain for cycle, which will work even in IE8:</p>

<pre><code>function findGetParameter(parameterName) {
    var result = null,
        tmp = [];
    var items = location.search.substr(1).split(""&amp;"");
    for (var index = 0; index &lt; items.length; index++) {
        tmp = items[index].split(""="");
        if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);
    }
    return result;
}
</code></pre>
","5448595"
"HTML tag <a> want to add both href and onclick working","323085","","<p>I'd like to ask about HTML tag </p>

<pre><code>&lt;a href=""www.mysite.com"" onClick=""javascript.function();""&gt;Item&lt;/a&gt;
</code></pre>

<p>How to make this <strong>a</strong> tag working with <strong>href</strong> and <strong>onClick</strong>? (prefer onClick running first then href)</p>
","<p>You already have what you need, with a minor syntax change:</p>

<pre><code>&lt;a href=""www.mysite.com"" onclick=""return theFunction();""&gt;Item&lt;/a&gt;

&lt;script type=""text/javascript""&gt;
    function theFunction () {
        // return true or false, depending on whether you want to allow the `href` property to follow through or not
    }
&lt;/script&gt;
</code></pre>

<p>The default behavior of the <code>&lt;a&gt;</code> tag's <code>onclick</code> and <code>href</code> properties is to execute the <code>onclick</code>, then follow the <code>href</code> as long as the <code>onclick</code> doesn't return <code>false</code>, canceling the event (or the event hasn't been prevented)</p>
","14867603"
"jQuery: checking if the value of a field is null (empty)","322892","","<p>Is this a good way to check if the value of a field is null?</p>

<pre><code>if($('#person_data[document_type]').value() != 'NULL'){}
</code></pre>

<p>Or is there a better way?</p>
","<p>The value of a field can not be null, it's always a string value.</p>

<p>The code will check if the string value is the string ""NULL"". You want to check if it's an empty string instead:</p>

<pre><code>if ($('#person_data[document_type]').val() != ''){}
</code></pre>

<p>or:</p>

<pre><code>if ($('#person_data[document_type]').val().length != 0){}
</code></pre>

<p>If you want to check if the element exist at all, you should do that before calling <code>val</code>:</p>

<pre><code>var $d = $('#person_data[document_type]');
if ($d.length != 0) {
  if ($d.val().length != 0 ) {...}
}
</code></pre>
","4244598"
"Constructors in JavaScript objects","321745","","<p>Can JavaScript classes/objects have constructors? How are they created?</p>
","<p>Using prototypes:</p>

<pre><code>function Box(color) // Constructor
{
    this.color = color;
}

Box.prototype.getColor = function()
{
    return this.color;
};
</code></pre>

<p>Hiding ""color"" (somewhat resembles a private member variable):</p>

<pre><code>function Box(col)
{
   var color = col;

   this.getColor = function()
   {
       return color;
   };
}
</code></pre>

<p>Usage:</p>

<pre><code>var blueBox = new Box(""blue"");
alert(blueBox.getColor()); // will alert blue

var greenBox = new Box(""green"");
alert(greenBox.getColor()); // will alert green
</code></pre>
","1115565"
"Passing an array as a function parameter in JavaScript","321160","","<p>I'd like to call a function using an array as parameters:</p>

<pre><code>const x = ['p0', 'p1', 'p2'];
call_me(x[0], x[1], x[2]); // I don't like it

function call_me (param0, param1, param2 ) {
  // ...
}
</code></pre>

<p>Is there a better way of passing the contents of <code>x</code> into <code>call_me()</code>?</p>
","<pre><code>const args = ['p0', 'p1', 'p2'];
call_me.apply(this, args);
</code></pre>

<p>See MDN docs for <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply"" rel=""noreferrer""><code>Function.prototype.apply()</code></a>.</p>

<hr>

<p>If the environment supports ECMAScript 6, you can use a <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator#A_better_apply"" rel=""noreferrer"">spread argument</a> instead:</p>

<pre><code>call_me(...args);
</code></pre>
","2856069"
"Subtract days from a date in JavaScript","320662","","<p>Does anybody know of an easy way of taking a date (e.g. Today) and going back X days?</p>

<p>So, for example, if I want to calculate the date 5 days before today.</p>
","<p>Try something like this:</p>

<pre><code> var d = new Date();
 d.setDate(d.getDate()-5);
</code></pre>

<p>Note that this modifies the date object and returns the time value of the updated date.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var d = new Date();

document.write('Today is: ' + d.toLocaleString());

d.setDate(d.getDate() - 5);

document.write('&lt;br&gt;5 days ago was: ' + d.toLocaleString());</code></pre>
</div>
</div>
</p>
","1296374"
"Is it possible to stop JavaScript execution?","320607","","<p>Is it possible in some way to stop or terminate <a href=""http://en.wikipedia.org/wiki/JavaScript"" rel=""noreferrer"">JavaScript</a> in a way that it prevents any further JavaScript-based execution from occuring, without reloading the browser?</p>

<p>I am thinking of a JavaScript equivalent of <code>exit()</code> in PHP.</p>
","<p>Short answer:</p>

<pre><code>throw new Error(""Something went badly wrong!"");
</code></pre>

<p>If you want to know more, keep reading.</p>

<hr>

<h2>Do you want to stop JavaScript's execution for developing/debugging?</h2>

<p>The expression <code>debugger;</code> in your code, will halt the page execution, and then your browser's developer tools will allow you to review the state of your page at the moment it was frozen.</p>

<h2>Do you want to stop your application arbitrarily and by design?</h2>

<h3>On error?</h3>

<p>Instead of trying to stop everything, let your code handle the error. Read about <code>Exception</code>s by googling. They are a smart way to let your code ""jump"" to error handling procedures without using tedious if/else blocks.</p>

<p>After reading about them, if you believe that interrupting the whole code is absolutely the only option, throwing an exception that is not going to be ""caught"" anywhere except in your application's ""root"" scope is the solution:</p>

<pre><code>// creates a new exception type:
function FatalError(){ Error.apply(this, arguments); this.name = ""FatalError""; }
FatalError.prototype = Object.create(Error.prototype);

// and then, use this to trigger the error:
throw new FatalError(""Something went badly wrong!"");
</code></pre>

<p><em>be sure you don't have <code>catch()</code> blocks that catch <strong>any</strong> exception; in this case modify them to rethrow your <code>""FatalError""</code> exception</em>:</p>

<pre><code>catch(exc){ if(exc instanceof FatalError) throw exc; else /* current code here */ }
</code></pre>

<h3>When a task completes or an arbitrary event happens?</h3>

<p><code>return;</code> will terminate the current function's execution flow.</p>

<pre><code>if(someEventHappened) return; // Will prevent subsequent code from being executed
alert(""This alert will never be shown."");
</code></pre>

<p>Note: <code>return;</code> works only within a function.</p>

<h3>In both cases...</h3>

<p>...you may want to know how to stop asynchronous code as well. It's done with <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Window.clearTimeout""><code>clearTimeout</code></a> and <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Window.clearInterval""><code>clearInterval</code></a>. Finally, to stop <a href=""http://en.wikipedia.org/wiki/XMLHttpRequest"">XHR</a> (<em><a href=""http://en.wikipedia.org/wiki/Ajax_%28programming%29"">Ajax</a></em>) requests, you can use the <code>xhrObj.abort()</code> method (<em>which is available in <a href=""http://en.wikipedia.org/wiki/JQuery"">jQuery</a> as well</em>).</p>
","9298915"
"Javascript Get Element Value","320051","","<p>Is there any difference between these to solutions?</p>

<pre><code>// HTML
&lt;input id=""theId"" value=""test"" onclick=""doSomething(this.id, this.value)"" /&gt;

// Javascript
function doSomething(id, value){
    // ...
}
</code></pre>

<p>or </p>

<pre><code>// HTML
&lt;input id=""theId"" value=""test"" onclick=""doSomething(this.id)"" /&gt;

// Javascript
function doSomething(id){
    var value = document.getElementById(id).value;
    // ...
}
</code></pre>
","<p>Yes, most notably I don't think the second one will work (and if it does, not very portably). The first one should be ok.</p>

<pre><code>// HTML
&lt;input id=""theId"" value=""test"" onclick=""doSomething(this)"" /&gt;

// Javascript
function(elem){
    var value = elem.value;
    var id    = elem.id;
    ...
}
</code></pre>

<p>Should also work</p>
","4173414"
"How to pass parameters using ui-sref in ui-router to controller","319779","","<p>I need to pass and recieve two parameters to the state I want to transit to using <code>ui-sref</code> of ui-router.</p>

<p>Something like using the link below for transitioning the state to <code>home</code> with <code>foo</code> and <code>bar</code> parameters:</p>

<pre><code>&lt;a ui-sref=""home({foo: 'fooVal', bar: 'barVal'})""&gt;Go to home state with foo and bar parameters &lt;/a&gt;
</code></pre>

<p>Receiving <code>foo</code> and <code>bar</code> values in a controller:</p>

<pre><code>app.controller('SomeController', function($scope, $stateParam) {
  //..
  var foo = $stateParam.foo; //getting fooVal
  var bar = $stateParam.bar; //getting barVal
  //..
});     
</code></pre>

<p>I get <code>undefined</code> for <code>$stateParam</code> in the controller.</p>

<p>Could somebody help me understand how to get it done?</p>

<p><strong>Edit:</strong></p>

<pre><code>.state('home', {
  url: '/',
  views: {
    '': {
      templateUrl: 'home.html',
      controller: 'MainRootCtrl'

    },

    'A@home': {
      templateUrl: 'a.html',
      controller: 'MainCtrl'
    },

    'B@home': {
      templateUrl: 'b.html',
      controller: 'SomeController'
    }
  }

});
</code></pre>
","<p>I've created an <a href=""http://plnkr.co/edit/r2JhV4PcYpKJdBCwHIWS?p=preview"" rel=""noreferrer"">example</a> to show how to. Updated <code>state</code> definition would be:</p>

<pre><code>  $stateProvider
    .state('home', {
      url: '/:foo?bar',
      views: {
        '': {
          templateUrl: 'tpl.home.html',
          controller: 'MainRootCtrl'

        },
        ...
      }
</code></pre>

<p>And this would be the controller:</p>

<pre><code>.controller('MainRootCtrl', function($scope, $state, $stateParams) {
    //..
    var foo = $stateParams.foo; //getting fooVal
    var bar = $stateParams.bar; //getting barVal
    //..
    $scope.state = $state.current
    $scope.params = $stateParams; 
})
</code></pre>

<p>What we can see is that the state home now has url defined as:</p>

<pre><code>url: '/:foo?bar',
</code></pre>

<p>which means, that the params in url are expected as </p>

<pre><code>/fooVal?bar=barValue
</code></pre>

<p>These two links will correctly pass arguments into the controller:</p>

<pre><code>&lt;a ui-sref=""home({foo: 'fooVal1', bar: 'barVal1'})""&gt;
&lt;a ui-sref=""home({foo: 'fooVal2', bar: 'barVal2'})""&gt;
</code></pre>

<p>Also, the controller does consume <code>$stateParams</code> instead of <code>$stateParam</code>.</p>

<p>Link to doc:</p>

<ul>
<li><a href=""https://github.com/angular-ui/ui-router/wiki/URL-Routing#url-parameters"" rel=""noreferrer"">URL Parameters</a></li>
</ul>

<p>You can check it <a href=""http://plnkr.co/edit/r2JhV4PcYpKJdBCwHIWS?p=preview"" rel=""noreferrer"">here</a></p>

<h3><code>params : {}</code></h3>

<p>There is also <em>new</em>, more granular setting <em><code>params : {}</code></em>. As we've already seen, we can declare parameters as part of <strong><code>url</code></strong>. But with <code>params : {}</code> configuration - we can extend this definition or even introduce paramters which are not part of the url:</p>

<pre><code>.state('other', {
    url: '/other/:foo?bar',
    params: { 
        // here we define default value for foo
        // we also set squash to false, to force injecting
        // even the default value into url
        foo: {
          value: 'defaultValue',
          squash: false,
        },
        // this parameter is now array
        // we can pass more items, and expect them as []
        bar : { 
          array : true,
        },
        // this param is not part of url
        // it could be passed with $state.go or ui-sref 
        hiddenParam: 'YES',
      },
    ...
</code></pre>

<p>Settings available for params are described in the documentation of the <a href=""http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider"" rel=""noreferrer"">$stateProvider</a></p>

<p>Below is just an extract</p>

<ul>
<li><strong>value - {object|function=}</strong>: specifies the default value for this parameter. This implicitly sets this parameter as optional...</li>
<li><strong>array - {boolean=}:</strong> (default: false) If true, the param value will be treated as an array of values. </li>
<li><strong>squash - {bool|string=}:</strong> squash configures how a default parameter value is represented in the URL when the current parameter value is the same as the default value.</li>
</ul>

<p>We can call these params this way:</p>

<pre><code>// hidden param cannot be passed via url
&lt;a href=""#/other/fooVal?bar=1&amp;amp;bar=2""&gt;
// default foo is skipped
&lt;a ui-sref=""other({bar: [4,5]})""&gt;
</code></pre>

<p>Check it in action <a href=""http://plnkr.co/edit/r2JhV4PcYpKJdBCwHIWS?p=preview"" rel=""noreferrer"">here</a></p>
","25647714"
"JavaScript math, round to two decimal places","319712","","<p>I have the below JavaScript syntax:</p>

<pre><code>var discount = Math.round(100 - (price / listprice) * 100);
</code></pre>

<p>This rounds up to the whole number, how can I return the result with two decimal places?</p>
","<p><strong>NOTE - See Edit 4 if 3 digit precision is important</strong></p>

<pre><code>var discount = (price / listprice).toFixed(2);
</code></pre>

<p>toFixed will round up or down for you depending on the values beyond 2 decimals.</p>

<p>Example: <a href=""http://jsfiddle.net/calder12/tv9HY/"" rel=""noreferrer"">http://jsfiddle.net/calder12/tv9HY/</a></p>

<p>Documentation: <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed"" rel=""noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed</a></p>

<p><strong>Edit</strong> - As mentioned by others this converts the result to a string. To avoid this:</p>

<pre><code>var discount = +((price / listprice).toFixed(2));
</code></pre>

<p><strong>Edit 2</strong>- As also mentioned in the comments this function fails in some precision, in the case of 1.005 for example it will return 1.00 instead of 1.01. If accuracy to this degree is important I've found this answer: <a href=""https://stackoverflow.com/a/32605063/1726511"">https://stackoverflow.com/a/32605063/1726511</a> Which seems to work well with all the tests I've tried.</p>

<p>There is one minor modification required though, the function in the answer linked above returns whole numbers when it rounds to one, so for example 99.004 will return 99 instead of 99.00 which isn't ideal for displaying prices.</p>

<p><strong>Edit 3</strong> - Seems having the toFixed on the actual return was STILL screwing up some numbers, this final edit appears to work. Geez so many reworks!</p>

<pre><code>   var discount = roundTo((price / listprice), 2);

   function roundTo(n, digits) {
     if (digits === undefined) {
       digits = 0;
     }

     var multiplicator = Math.pow(10, digits);
     n = parseFloat((n * multiplicator).toFixed(11));
     var test =(Math.round(n) / multiplicator);
     return +(test.toFixed(digits));
   }
</code></pre>

<p>See Fiddle example here: <a href=""https://jsfiddle.net/calder12/3Lbhfy5s/"" rel=""noreferrer"">https://jsfiddle.net/calder12/3Lbhfy5s/</a></p>

<p><strong>Edit 4</strong> - You guys are killing me. Edit 3 fails on negative numbers, without digging into why it's just easier to deal with turning a negative number positive before doing the rounding, then turning it back before returning the result.</p>

<pre><code>function roundTo(n, digits) {
    var negative = false;
    if (digits === undefined) {
        digits = 0;
    }
        if( n &lt; 0) {
        negative = true;
      n = n * -1;
    }
    var multiplicator = Math.pow(10, digits);
    n = parseFloat((n * multiplicator).toFixed(11));
    n = (Math.round(n) / multiplicator).toFixed(2);
    if( negative ) {    
        n = (n * -1).toFixed(2);
    }
    return n;
}
</code></pre>

<p>Fiddle: <a href=""https://jsfiddle.net/3Lbhfy5s/79/"" rel=""noreferrer"">https://jsfiddle.net/3Lbhfy5s/79/</a></p>
","15762794"
"URL Encode a string in jQuery for an AJAX request","319405","","<p>I'm implementing Google's Instant Search in my application. I'd like to fire off HTTP requests as the user types in the text input. The only problem I'm having is that when the user gets to a space in between first and last names, the space is not encoded as a <code>+</code>, thus breaking the search. How can I either replace the space with a <code>+</code>, or just safely URL Encode the string?</p>

<pre><code>$(""#search"").keypress(function(){       
    var query = ""{% url accounts.views.instasearch  %}?q="" + $('#tags').val();
    var options = {};
    $(""#results"").html(ajax_load).load(query);
});
</code></pre>
","<p>Try <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/encodeURIComponent"">encodeURIComponent</a>.</p>

<blockquote>
  <p>Encodes a Uniform Resource Identifier (URI) component by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character (will only be four escape sequences for characters composed of two ""surrogate"" characters).</p>
</blockquote>

<p>Example:</p>

<pre><code>var encoded = encodeURIComponent(str);
</code></pre>
","6544603"
"How to run function in angular controller on document ready?","319379","","<p>I have a function within my angular controller, I'd like this function to be run on document ready but I noticed that angular runs it as the dom is created.</p>

<pre><code> function myController($scope)
 {
     $scope.init = function()
     {
        // I'd like to run this on document ready
     }

     $scope.init(); // doesn't work, loads my init before the page has completely loaded
 }
</code></pre>

<p>Anyone know how I can go about this?</p>
","<p>We can use the <code>angular.element(document).ready()</code> method to attach callbacks for when the document is ready.  We can simply attach the callback in the controller like so:</p>

<pre><code>angular.module('MyApp', [])

.controller('MyCtrl', [function() {
    angular.element(document).ready(function () {
        document.getElementById('msg').innerHTML = 'Hello';
    });
}]);
</code></pre>

<p><a href=""http://jsfiddle.net/jgentes/stwyvq38/1/"">http://jsfiddle.net/jgentes/stwyvq38/1/</a></p>
","18646795"
"How can I get file extensions with JavaScript?","319263","","<p>See code: </p>

<pre><code>var file1 = ""50.xsl"";
var file2 = ""30.doc"";
getFileExtension(file1); //returs xsl
getFileExtension(file2); //returs doc

function getFileExtension(filename) {
    /*TODO*/
}
</code></pre>
","<p><strong>Newer Edit:</strong> Lots of things have changed since this question was initially posted - there's a lot of really good information in <a href=""https://stackoverflow.com/a/1203361/23746"">wallacer's revised answer</a> as well as <a href=""https://stackoverflow.com/a/12900504/23746"">VisioN's excellent breakdown</a></p>

<hr>

<p><strong>Edit:</strong> Just because this is the accepted answer; <a href=""https://stackoverflow.com/a/1203361/23746"">wallacer's answer</a> is indeed much better:</p>

<pre><code>return filename.split('.').pop();
</code></pre>

<hr>

<p>My old answer:</p>

<pre><code>return /[^.]+$/.exec(filename);
</code></pre>

<p>Should do it.</p>

<p><strong>Edit:</strong> In response to PhiLho's comment, use something like:</p>

<pre><code>return (/[.]/.exec(filename)) ? /[^.]+$/.exec(filename) : undefined;
</code></pre>
","190878"
"Javascript Confirm popup Yes, No button instead of OK and Cancel","318986","","<p>Javascript Confirm popup, I want to show Yes, No button instead of OK and Cancel.</p>

<p>I have used this vbscript code:</p>

<pre><code>&lt;script language=""javascript""&gt;
    function window.confirm(str) {
        execScript('n = msgbox(""' + str + '"",""4132"")', ""vbscript"");
        return (n == 6);
    }
&lt;/script&gt;
</code></pre>

<p>this only works in IE, In FF and Chrome, it doesn't work.</p>

<p>Is there any workround to achieve this in Javascript?</p>

<p>I also want to change the title of popup like in IE 'Windows Internet Explorer' is shown, I want to show here my own application name.</p>
","<p>Unfortunately, there is no cross-browser support for opening a confirmation dialog that is not the default OK/Cancel pair.  The solution you provided uses VBScript, which is only available in IE.</p>

<p>I would suggest using a Javascript library that can build a DOM-based dialog instead.  Try Jquery UI: <a href=""http://jqueryui.com/"" rel=""noreferrer"">http://jqueryui.com/</a></p>
","823799"
"How to extend an existing JavaScript array with another array, without creating a new array?","318544","","<p><em><strong>Note:</strong> This is <strong>not a duplicate of <a href=""https://stackoverflow.com/questions/351409/appending-to-array"">How to append something to an array?</a></strong> -- the goal here is to add the whole contents of one array to the other, and to do it ""in place"", i.e. without copying all elements of the extended array.</em></p>

<p>There doesn't seem to be a way to extend an existing JavaScript array with another array, i.e. to emulate Python's <code>extend</code> method.</p>

<p>What I want to achieve is the following:</p>

<pre><code>&gt;&gt;&gt; a = [1, 2]
[1, 2]
&gt;&gt;&gt; b = [3, 4, 5]
[3, 4, 5]
&gt;&gt;&gt; SOMETHING HERE
&gt;&gt;&gt; a
[1, 2, 3, 4, 5]
</code></pre>

<p>I know there's a <code>a.concat(b)</code> method, but it creates a new array instead of simply extending the first one. I'd like an algorithm that works efficiently when <code>a</code> is significantly larger than <code>b</code> (i.e. one that does not copy <code>a</code>).</p>
","<p>The <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push"" rel=""noreferrer""><code>.push</code></a> method can take multiple arguments, so by using <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply"" rel=""noreferrer""><code>.apply</code></a> to pass all the elements of the second array as arguments to <code>.push</code>, you can get the result you want:</p>

<pre><code>&gt;&gt;&gt; a.push.apply(a, b)
</code></pre>

<p>or perhaps, if you think it's clearer:</p>

<pre><code>&gt;&gt;&gt; Array.prototype.push.apply(a,b)
</code></pre>
","1374131"
"How to disable all div content","318430","","<p>I was under the assumption that if I disabled a div, all content got disabled too.</p>

<p>However, the content is grayed but I can still interact with it.</p>

<p>Is there a way to do that? (disable a div and get all content disabled also)</p>
","<p>Many of the above answers only work on form elements. A simple way to disable any DIV including its contents is to just disable mouse interaction. For example:</p>

<pre><code>$(""#mydiv"").addClass(""disabledbutton"");
</code></pre>

<p>css</p>

<pre><code>.disabledbutton {
    pointer-events: none;
    opacity: 0.4;
}
</code></pre>
","25328170"
"What is the !! (not not) operator in JavaScript?","318241","","<p>I saw some code that seems to use an operator I don't recognize, in the form of two exclamation points, like so: <code>!!</code>. Can someone please tell me what this operator does?</p>

<p>The context in which I saw this was,</p>

<pre><code>this.vertical = vertical !== undefined ? !!vertical : this.vertical;
</code></pre>
","<p>Coerces <code>oObject</code> to boolean. If it was falsey (e.g. 0, <code>null</code>, <code>undefined</code>, etc.), it will be <code>false</code>, otherwise, <code>true</code>.</p>

<pre><code>!oObject  //Inverted boolean
!!oObject //Non inverted boolean so true boolean representation
</code></pre>

<p>So <code>!!</code> is not an operator, it's just the <code>!</code> operator twice.</p>

<p>Real World Example ""Test IE version"":  </p>

<pre><code>let isIE8 = false;  
isIE8 = !! navigator.userAgent.match(/MSIE 8.0/);  
console.log(isIE8); // returns true or false 
</code></pre>

<p>If you =></p>

<pre><code>console.log(navigator.userAgent.match(/MSIE 8.0/));  
// returns null  
</code></pre>

<p>but if you =>  </p>

<pre><code>console.log(!!navigator.userAgent.match(/MSIE 8.0/));  
// returns true or false
</code></pre>
","784946"
"How can I add a custom HTTP header to ajax request with js or jQuery?","318056","","<p>Does anyone know how to add or create a custom HTTP header using JavaScript or jQuery?</p>
","<p>There are several solutions depending on what you need...</p>

<p>If you want to <strong>add a custom header (or set of headers) to an individual request</strong> then just add the <code>headers</code> property:</p>

<pre><code>// Request with custom header
$.ajax({
    url: 'foo/bar',
    headers: { 'x-my-custom-header': 'some value' }
});
</code></pre>

<p>If you want to <strong>add a default header (or set of headers) to every request</strong> then use <code>$.ajaxSetup()</code>:</p>

<pre><code>$.ajaxSetup({
    headers: { 'x-my-custom-header': 'some value' }
});

// Sends your custom header
$.ajax({ url: 'foo/bar' });

// Overwrites the default header with a new header
$.ajax({ url: 'foo/bar', headers: { 'x-some-other-header': 'some value' } });
</code></pre>

<p>If you want to <strong>add a header (or set of headers) to every request</strong>  then use the <code>beforeSend</code> hook with <code>$.ajaxSetup()</code>:</p>

<pre><code>$.ajaxSetup({
    beforeSend: function(xhr) {
        xhr.setRequestHeader('x-my-custom-header', 'some value');
    }
});

// Sends your custom header
$.ajax({ url: 'foo/bar' });

// Sends both custom headers
$.ajax({ url: 'foo/bar', headers: { 'x-some-other-header': 'some value' } });
</code></pre>

<p><strong>Edit (more info):</strong> One thing to be aware of is that with <code>ajaxSetup</code> you can only define one set of default headers and you can only define one <code>beforeSend</code>.  If you call <code>ajaxSetup</code> multiple times, only the last set of headers will be sent and only the last before-send callback will execute.</p>
","14655768"
"How do I determine height and scrolling position of window in jQuery?","317639","","<p>I need to grab the height of the window and the scrolling offset in jQuery, but I haven't had any luck finding this in the jQuery docs or Google.</p>

<p>I'm 90% certain there's a way to access height and scrollTop for an element (presumably including the window), but I just can't find the specific reference.</p>
","<p>From jQuery Docs:</p>

<pre><code>const height = $(window).height();
const scrollTop = $(window).scrollTop();
</code></pre>

<p><a href=""http://api.jquery.com/scrollTop/"" rel=""noreferrer"">http://api.jquery.com/scrollTop/</a><br>
<a href=""http://api.jquery.com/height/"" rel=""noreferrer"">http://api.jquery.com/height/</a></p>
","303791"
"Access / process (nested) objects, arrays or JSON","317506","","<p>I have a (nested) data structure containing objects and arrays. How can I extract the information, i.e. access a specific or multiple values (or keys)?</p>

<p>For example:</p>

<pre><code>var data = {
    code: 42,
    items: [{
        id: 1,
        name: 'foo'
    }, {
        id: 2,
        name: 'bar'
    }]
};
</code></pre>

<p>How could I access the <code>name</code> of the second item in <code>items</code>?</p>
","<h2>Preliminaries</h2>

<p>JavaScript has only one data type which can contain multiple values: <strong>Object</strong>. An <strong>Array</strong> is a special form of object.</p>

<p>(Plain) Objects have the form</p>

<pre><code>{key: value, key: value, ...}
</code></pre>

<p>Arrays have the form</p>

<pre><code>[value, value, ...]
</code></pre>

<p>Both arrays and objects expose a <code>key -&gt; value</code> structure. Keys in an array must be numeric, whereas any string can be used as key in objects. The key-value pairs are also called the <strong>""properties""</strong>.</p>

<p>Properties can be accessed either using <strong>dot notation</strong></p>

<pre><code>const value = obj.someProperty;
</code></pre>

<p>or <strong>bracket notation</strong>, if the property name would not be a valid JavaScript <a href=""http://es5.github.com/#x7.6"" rel=""noreferrer"">identifier name <em><sup>[spec]</sup></em></a>, or the name is the value of a variable:</p>

<pre><code>// the space is not a valid character in identifier names
const value = obj[""some Property""];

// property name as variable
const name = ""some Property"";
const value = obj[name];
</code></pre>

<p>For that reason, array elements can only be accessed using bracket notation:</p>

<pre><code>const value = arr[5]; // arr.5 would be a syntax error

// property name / index as variable
const x = 5;
const value = arr[x];
</code></pre>

<h3>Wait... what about JSON?</h3>

<p>JSON is a textual representation of data, just like XML, YAML, CSV, and others. To work with such data, it first has to be converted to JavaScript data types, i.e. arrays and objects (and how to work with those was just explained). How to parse JSON is explained in the question <a href=""https://stackoverflow.com/questions/4935632/how-to-parse-json-in-javascript"">Parse JSON in JavaScript?</a> .</p>

<h3>Further reading material</h3>

<p>How to access arrays and objects is fundamental JavaScript knowledge and therefore it is advisable to read the <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Guide"" rel=""noreferrer"">MDN JavaScript Guide</a>, especially the sections</p>

<ul>
<li><a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Working_with_Objects"" rel=""noreferrer"">Working with Objects</a></li>
<li><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Indexed_collections#Array_object"" rel=""noreferrer"">Arrays</a></li>
<li><a href=""http://eloquentjavascript.net/04_data.html"" rel=""noreferrer"">Eloquent JavaScript - Data Structures</a></li>
</ul>

<hr>

<hr>

<h2>Accessing nested data structures</h2>

<p>A nested data structure is an array or object which refers to other arrays or objects, i.e. its values are arrays or objects. Such structures can be accessed by consecutively applying dot or bracket notation. </p>

<p>Here is an example:</p>

<pre><code>const data = {
    code: 42,
    items: [{
        id: 1,
        name: 'foo'
    }, {
        id: 2,
        name: 'bar'
    }]
};
</code></pre>

<p>Let's assume we want to access the <code>name</code> of the second item. </p>

<p>Here is how we can do it step-by-step:</p>

<p>As we can see <code>data</code> is an object, hence we can access its properties using dot notation. The <code>items</code> property is accessed as follows:</p>

<pre><code>data.items
</code></pre>

<p>The value is an array, to access its second element, we have to use bracket notation:</p>

<pre><code>data.items[1]
</code></pre>

<p>This value is an object and we use dot notation again to access the <code>name</code> property. So we eventually get:</p>

<pre><code>const item_name = data.items[1].name;
</code></pre>

<p>Alternatively, we could have used bracket notation for any of the properties, especially if the name contained characters that would have made it invalid for dot notation usage:</p>

<pre><code>const item_name = data['items'][1]['name'];
</code></pre>

<hr>

<h3>I'm trying to access a property but I get only <code>undefined</code> back?</h3>

<p>Most of the time when you are getting <code>undefined</code>, the object/array simply doesn't have a property with that name.</p>

<pre><code>const foo = {bar: {baz: 42}};
console.log(foo.baz); // undefined
</code></pre>

<p>Use <a href=""https://developer.mozilla.org/en-US/docs/DOM/console.log"" rel=""noreferrer""><code>console.log</code></a> or <a href=""https://developer.mozilla.org/en-US/docs/DOM/console.dir"" rel=""noreferrer""><code>console.dir</code></a> and inspect the structure of object / array. The property you are trying to access might be actually defined on a nested object / array.</p>

<pre><code>console.log(foo.bar.baz); // 42
</code></pre>

<hr>

<h3>What if the property names are dynamic and I don't know them beforehand?</h3>

<p>If the property names are unknown or we want to access all properties of an object / elements of an array, we can use the <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/for...in"" rel=""noreferrer""><code>for...in</code> <em><sup>[MDN]</sup></em></a> loop for objects and the <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/for"" rel=""noreferrer""><code>for</code> <em><sup>[MDN]</sup></em></a> loop for arrays to iterate over all properties / elements.</p>

<p><strong>Objects</strong></p>

<p>To iterate over all properties of <code>data</code>, we can iterate over the <strong>object</strong> like so:</p>

<pre><code>for (const prop in data) {
    // `prop` contains the name of each property, i.e. `'code'` or `'items'`
    // consequently, `data[prop]` refers to the value of each property, i.e.
    // either `42` or the array
}
</code></pre>

<p>Depending on where the object comes from (and what you want to do), you might have to test in each iteration whether the property is really a property of the object, or it is an inherited property. You can do this with <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/hasOwnProperty"" rel=""noreferrer""><code>Object#hasOwnProperty</code> <em><sup>[MDN]</sup></em></a>.</p>

<p>As alternative to <code>for...in</code> with <code>hasOwnProperty</code>, you can use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys"" rel=""noreferrer""><code>Object.keys</code> <em><sup>[MDN]</sup></em></a> to get an <em>array of property names</em>:</p>

<pre><code>Object.keys(data).forEach(function(prop) {
  // `prop` is the property name
  // `data[prop]` is the property value
});
</code></pre>

<p><strong>Arrays</strong></p>

<p>To iterate over all elements of the <code>data.items</code> <strong>array</strong>, we use a <code>for</code> loop:</p>

<pre><code>for(let i = 0, l = data.items.length; i &lt; l; i++) {
    // `i` will take on the values `0`, `1`, `2`,..., i.e. in each iteration
    // we can access the next element in the array with `data.items[i]`, example:
    // 
    // var obj = data.items[i];
    // 
    // Since each element is an object (in our example),
    // we can now access the objects properties with `obj.id` and `obj.name`. 
    // We could also use `data.items[i].id`.
}
</code></pre>

<p>One could also use <code>for...in</code> to iterate over arrays, but there are reasons why this should be avoided: <a href=""https://stackoverflow.com/questions/2265167/why-is-forvar-item-in-list-with-arrays-considered-bad-practice-in-javascript"">Why is &#39;for(var item in list)&#39; with arrays considered bad practice in JavaScript?</a>.</p>

<p>With the increasing browser support of ECMAScript 5, the array method <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach"" rel=""noreferrer""><code>forEach</code> <em><sup>[MDN]</sup></em></a> becomes an interesting alternative as well:</p>

<pre><code>data.items.forEach(function(value, index, array) {
    // The callback is executed for each element in the array.
    // `value` is the element itself (equivalent to `array[index]`)
    // `index` will be the index of the element in the array
    // `array` is a reference to the array itself (i.e. `data.items` in this case)
}); 
</code></pre>

<p>In environments supporting ES2015 (ES6), you can also use the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of"" rel=""noreferrer""><em><code>for...of</code></em> <em><sup>[MDN]</sup></em></a> loop, which not only works for arrays, but for any <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable"" rel=""noreferrer""><em>iterable</em></a>:</p>

<pre><code>for (const item of data.items) {
   // `item` is the array element, **not** the index
}
</code></pre>

<p>In each iteration, <code>for...of</code> directly gives us the next element of the iterable, there is no ""index"" to access or use.</p>

<hr>

<h3>What if the ""depth"" of the data structure is unknown to me?</h3>

<p>In addition to unknown keys, the ""depth"" of the data structure (i.e. how many nested objects) it has, might be unknown as well. How to access deeply nested properties usually depends on the exact data structure.</p>

<p>But if the data structure contains repeating patterns, e.g. the representation of a binary tree, the solution typically includes to <a href=""https://en.wikipedia.org/wiki/Recursion_%28computer_science%29"" rel=""noreferrer""><strong>recursively</strong> <em><sup>[Wikipedia]</sup></em></a> access each level of the data structure.</p>

<p>Here is an example to get the first leaf node of a binary tree:</p>

<pre><code>function getLeaf(node) {
    if (node.leftChild) {
        return getLeaf(node.leftChild); // &lt;- recursive call
    }
    else if (node.rightChild) {
        return getLeaf(node.rightChild); // &lt;- recursive call
    }
    else { // node must be a leaf node
        return node;
    }
}

const first_leaf = getLeaf(root);
</code></pre>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const root = {
    leftChild: {
        leftChild: {
            leftChild: null,
            rightChild: null,
            data: 42
        },
        rightChild: {
            leftChild: null,
            rightChild: null,
            data: 5
        }
    },
    rightChild: {
        leftChild: {
            leftChild: null,
            rightChild: null,
            data: 6
        },
        rightChild: {
            leftChild: null,
            rightChild: null,
            data: 7
        }
    }
};
function getLeaf(node) {
    if (node.leftChild) {
        return getLeaf(node.leftChild);
    } else if (node.rightChild) {
        return getLeaf(node.rightChild);
    } else { // node must be a leaf node
        return node;
    }
}

console.log(getLeaf(root).data);</code></pre>
</div>
</div>
</p>

<p>A more generic way to access a nested data structure with unknown keys and depth is to test the type of the value and act accordingly.</p>

<p>Here is an example which adds all primitive values inside a nested data structure into an array (assuming it does not contain any functions). If we encounter an object (or array) we simply call <code>toArray</code> again on that value (recursive call).</p>

<pre><code>function toArray(obj) {
    const result = [];
    for (const prop in obj) {
        const value = obj[prop];
        if (typeof value === 'object') {
            result.push(toArray(value)); // &lt;- recursive call
        }
        else {
            result.push(value);
        }
    }
    return result;
}
</code></pre>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const data = {
  code: 42,
  items: [{
    id: 1,
    name: 'foo'
  }, {
    id: 2,
    name: 'bar'
  }]
};


function toArray(obj) {
  const result = [];
  for (const prop in obj) {
    const value = obj[prop];
    if (typeof value === 'object') {
      result.push(toArray(value));
    } else {
      result.push(value);
    }
  }
  return result;
}

console.log(toArray(data));</code></pre>
</div>
</div>
</p>

<hr>

<hr>

<h2>Helpers</h2>

<p>Since the structure of a complex object or array is not necessarily obvious, we can inspect the value at each step to decide how to move further. <a href=""https://developer.mozilla.org/en-US/docs/DOM/console.log"" rel=""noreferrer""><code>console.log</code> <em><sup>[MDN]</sup></em></a> and <a href=""https://developer.mozilla.org/en-US/docs/DOM/console.dir"" rel=""noreferrer""><code>console.dir</code> <em><sup>[MDN]</sup></em></a> help us doing this. For example (output of the Chrome console):</p>

<pre><code>&gt; console.log(data.items)
 [ Object, Object ]
</code></pre>

<p>Here we see that that <code>data.items</code> is an array with two elements which are both objects. In Chrome console the objects can even be expanded and inspected immediately.</p>

<pre><code>&gt; console.log(data.items[1])
  Object
     id: 2
     name: ""bar""
     __proto__: Object
</code></pre>

<p>This tells us that <code>data.items[1]</code> is an object, and after expanding it we see that it has three properties, <code>id</code>, <code>name</code> and <code>__proto__</code>. The latter is an internal property used for the prototype chain of the object. The prototype chain and inheritance is out of scope for this answer, though.</p>
","11922384"
"jQuery .ready in a dynamically inserted iframe","317427","","<p>We are using jQuery <a href=""http://jquery.com/demo/thickbox/"" rel=""noreferrer"">thickbox</a> to dynamically display an iframe when someone clicks on a picture.  In this iframe, we are using <a href=""http://devkick.com/lab/galleria/demo_01.htm"" rel=""noreferrer"">galleria</a> a javascript library to display multiple pictures.</p>

<p>The problem seems to be that <code>$(document).ready</code> in the iframe seems to be fired too soon and the iframe content isn't even loaded yet, so galleria code is not applied properly on the DOM elements.  <code>$(document).ready</code> seems to use the iframe parent ready state to decide if the iframe is ready.</p>

<p>If we extract the function called by document ready in a separate function and call it after a timeout of 100&nbsp;ms. It works, but we can't take the chance in production with a slow computer.</p>

<pre><code>$(document).ready(function() { setTimeout(ApplyGalleria, 100); });
</code></pre>

<p>My question: which jQuery event should we bind to to be able to execute our code when the dynamic iframe is ready and not just it's a parent?</p>
","<p>I answered a similar question (see <a href=""https://stackoverflow.com/questions/164085/javascript-callback-when-iframe-is-finished-loading"">Javascript callback when IFRAME is finished loading?</a>).
You can obtain control over the iframe load event with the following code:</p>

<pre><code>function callIframe(url, callback) {
    $(document.body).append('&lt;IFRAME id=""myId"" ...&gt;');
    $('iframe#myId').attr('src', url);

    $('iframe#myId').load(function() {
        callback(this);
    });
}
</code></pre>

<p>In dealing with iframes I found good enough to use load event instead of document ready event.</p>
","205221"
"Getting the client's timezone in JavaScript","317225","","<p>How can I gather the visitor's time zone information? I need the Timezone, as well as the GMT offset hours.</p>
","<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var offset = new Date().getTimezoneOffset();
console.log(offset);</code></pre>
</div>
</div>
</p>

<blockquote>
  <p>The time-zone offset is the difference, in minutes, between UTC and local time. Note that this means that the offset is positive if the local timezone is behind UTC and negative if it is ahead.  For example, if your time zone is UTC+10 (Australian Eastern Standard Time), -600 will be returned. Daylight savings time prevents this value from being a constant even for a given locale</p>
</blockquote>

<ul>
<li><a href=""https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Date/getTimezoneOffset"" rel=""noreferrer"">Mozilla Date Object reference</a></li>
</ul>

<p>Note that not all timezones are offset by whole hours: for example, Newfoundland is UTC minus 3h 30m (leaving Daylight Saving Time out of the equation).</p>
","1091399"
"jQuery $(""#radioButton"").change(...) not firing during de-selection","316987","","<p>About a month ago Mitt’s question went unanswered. Sadly, I’m running into the same situation now.</p>

<p><a href=""http://api.jquery.com/change/#comment-133939395"" rel=""nofollow noreferrer"">http://api.jquery.com/change/#comment-133939395</a></p>

<p>Here’s the situation: I’m using jQuery to capture the changes in a radio button. When the radio button is selected I enable an edit box. When the radio button is de-selected, I would like the edit box to be disabled.</p>

<p>The enabling works. When I choose a different radio button in the group, the <code>change</code> event is <em>not</em> fired. Does anyone know how to fix this?</p>

<pre><code>&lt;input type=""radio"" id=""r1"" name=""someRadioGroup""/&gt; 

&lt;script type=""text/javascript""&gt;
    $(""#r1"").change(function () {
        if ($(""#r1"").attr(""checked"")) {
            $('#r1edit:input').removeAttr('disabled');
        }
        else {
            $('#r1edit:input').attr('disabled', true);
        }
    });
&lt;/script&gt;
</code></pre>
","<p>Looks like the <code>change()</code> function is only called when you check a radio button, not when you uncheck it.  The solution I used is to bind the change event to every radio button:</p>

<pre><code>$(""#r1, #r2, #r3"").change(function () {
</code></pre>

<p>Or you could give all the radio buttons the same name:</p>

<pre><code>$(""input[name=someRadioGroup]:radio"").change(function () {
</code></pre>

<p>Here's a working <a href=""http://jsfiddle.net/N9tBx/"">jsfiddle example</a> (updated from Chris Porter's comment.)</p>

<p>Per @Ray's comment, you should avoid using names with <code>.</code> in them. Those names work in jQuery 1.7.2 but not in other versions (<a href=""http://jsfiddle.net/zn7q2/2/"">jsfiddle example.</a>).</p>
","5176900"
"Execute script after specific delay using JavaScript","316953","","<p>Is there any JavaScript method similar to the jQuery <code>delay()</code> or <code>wait()</code> (to delay the execution of a script for a specific amount of time)?</p>
","<p>There is the following:</p>

<pre><code>setTimeout(function, milliseconds);
</code></pre>

<p>function which can be passed the time after which the function will be executed.</p>

<p>See: <a href=""https://www.w3schools.com/jsref/met_win_settimeout.asp"" rel=""noreferrer"">Window <code>setTimeout()</code> Method</a>.</p>
","24852"
"How can I force clients to refresh JavaScript files?","316444","","<p>We are currently working in a private beta and so are still in the process of making fairly rapid changes, although obviously as usage is starting to ramp up, we will be slowing down this process.  That being said, one issue we are running into is that after we push out an update with new JavaScript files, the client browsers still use the cached version of the file and they do not see the update.  Obviously, on a support call, we can simply inform them to do a <kbd>ctrl</kbd><kbd>F5</kbd> refresh to ensure that they get the up-to-date files from the server, but it would be preferable to handle this before that time.</p>

<p>Our current thought is to simply attach a version number onto the name of the JavaScript files and then when changes are made, increment the version on the script and update all references.  This definitely gets the job done, but updating the references on each release could get cumbersome.</p>

<p>As I'm sure we're not the first ones to deal with this, I figured I would throw it out to the community.  How are you ensuring clients update their cache when you update your code?  If you're using the method described above, are you using a process that simplifies the change?</p>
","<p>As far as I know a common solution is to add a <code>?&lt;version&gt;</code> to the script's src link.</p>

<p>For instance:</p>

<pre><code>&lt;script type=""text/javascript"" src=""myfile.js?1500""&gt;&lt;/script&gt;
</code></pre>

<hr>

<blockquote>
  <p>I assume at this point that there isn't a better way than find-replace to increment these ""version numbers"" in all of the script tags?</p>
</blockquote>

<p>You might have a version control system do that for you? Most version control systems have a way to automatically inject the revision number on check-in for instance.</p>

<p>It would look something like this:</p>

<pre><code>&lt;script type=""text/javascript"" src=""myfile.js?$$REVISION$$""&gt;&lt;/script&gt;
</code></pre>

<hr>

<p>Of course, there are always better solutions like <a href=""http://blog.greenfelt.net/2009/09/01/caching-javascript-safely/"" rel=""noreferrer"">this one</a>.</p>
","32427"
"Convert UTC date time to local date time","316396","","<p>From the server I get a datetime variable in this format: <code>6/29/2011 4:52:48 PM</code> and it is in UTC time. I want to convert it to the current user’s browser time using JavaScript.</p>

<p>How this can be done using JavaScript or jQuery?</p>
","<p>Append 'UTC' to the string before converting it to a date in javascript:</p>

<pre><code>var date = new Date('6/29/2011 4:52:48 PM UTC');
date.toString() // ""Wed Jun 29 2011 09:52:48 GMT-0700 (PDT)""
</code></pre>
","6525602"
"How to execute a function when page has fully loaded?","316026","","<p>I need to execute some JavaScript code when the page has fully loaded. This includes things like images.</p>

<p>I know you can check if the DOM is ready, but I don’t know if this is the same as when the page is fully loaded.</p>
","<p>That's called onload. It came waaaaay before DOM ready was around, and DOM ready was actually created for the exact reason that onload waited on images.</p>

<pre><code>window.onload = function () { alert(""It's loaded!"") }
</code></pre>
","1033448"
"Allow only numbers to be typed in a textbox","315837","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/995183/how-to-allow-only-numeric-0-9-in-html-inputbox-using-jquery"">How to allow only numeric (0-9) in HTML  inputbox using jQuery?</a>  </p>
</blockquote>



<p>How to allow only numbers to be written in this textbox ?</p>

<pre><code>&lt;input type=""text"" class=""textfield"" value="""" id=""extra7"" name=""extra7""&gt;
</code></pre>
","<p>You could subscribe for the onkeypress event:</p>

<pre><code>&lt;input type=""text"" class=""textfield"" value="""" id=""extra7"" name=""extra7"" onkeypress=""return isNumber(event)"" /&gt;
</code></pre>

<p>and then define the <code>isNumber</code> function:</p>

<pre><code>function isNumber(evt) {
    evt = (evt) ? evt : window.event;
    var charCode = (evt.which) ? evt.which : evt.keyCode;
    if (charCode &gt; 31 &amp;&amp; (charCode &lt; 48 || charCode &gt; 57)) {
        return false;
    }
    return true;
}
</code></pre>

<p>You can see it in <a href=""http://jsfiddle.net/Lm2hS/"">action here</a>.</p>
","7295864"
"How does data binding work in AngularJS?","315579","","<p>How does data binding work in the <code>AngularJS</code> framework?</p>

<p>I haven't found technical details on <a href=""http://angularjs.org"" rel=""noreferrer"">their site</a>. It's more or less clear how it works when data is propagated from view to model. But how does AngularJS track changes of model properties without setters and getters?</p>

<p>I found that there are <a href=""https://stackoverflow.com/questions/1029241/javascript-object-watch-for-all-browsers"">JavaScript watchers</a> that may do this work. But they are not supported in <a href=""http://en.wikipedia.org/wiki/Internet_Explorer_6"" rel=""noreferrer"">Internet&nbsp;Explorer&nbsp;6</a> and <a href=""http://en.wikipedia.org/wiki/Internet_Explorer_7"" rel=""noreferrer"">Internet&nbsp;Explorer&nbsp;7</a>. So how does AngularJS know that I changed for example the following and reflected this change on a view?</p>

<pre><code>myobject.myproperty=""new value"";
</code></pre>
","<p>AngularJS remembers the value and compares it to a previous value. This is basic dirty-checking. If there is a change in value, then it fires the change event.</p>

<p>The <code>$apply()</code> method, which is what you call when you are transitioning from a non-AngularJS world into an AngularJS world, calls <code>$digest()</code>. A digest is just plain old dirty-checking. It works on all browsers and is totally predictable.</p>

<p>To contrast dirty-checking (AngularJS) vs change listeners (<a href=""http://en.wikipedia.org/wiki/KnockoutJS"">KnockoutJS</a> and <a href=""https://en.wikipedia.org/wiki/Backbone.js"">Backbone.js</a>): While dirty-checking may seem simple, and even inefficient (I will address that later), it turns out that it is semantically correct all the time, while change listeners have lots of weird corner cases and need things like dependency tracking to make it more semantically correct. KnockoutJS dependency tracking is a clever feature for a problem which AngularJS does not have.</p>

<h1>Issues with change listeners:</h1>

<ul>
<li>The syntax is atrocious, since browsers do not support it natively. Yes, there are proxies, but they are not semantically correct in all cases, and of course there are no proxies on old browsers. The bottom line is that dirty-checking allows you to do <a href=""http://en.wikipedia.org/wiki/Plain_Old_Java_Object"">POJO</a>, whereas KnockoutJS and Backbone.js force you to inherit from their classes, and access your data through accessors.</li>
<li>Change coalescence. Suppose you have an array of items. Say you want to add items into an array, as you are looping to add, each time you add you are firing events on change, which is rendering the UI. This is very bad for performance. What you want is to update the UI only once, at the end. The change events are too fine-grained.</li>
<li>Change listeners fire immediately on a setter, which is a problem, since the change listener can further change data, which fires more change events. This is bad since on your stack you may have several change events happening at once. Suppose you have two arrays which need to be kept in sync for whatever reason. You can only add to one or the other, but each time you add you fire a change event, which now has an inconsistent view of the world. This is a very similar problem to thread locking, which JavaScript avoids since each callback executes exclusively and to completion. Change events break this since setters can have far-reaching consequences which are not intended and non obvious, which creates the thread problem all over again. It turns out that what you want to do is to delay the listener execution, and guarantee, that only one listener runs at a time, hence any code is free to change data, and it knows that no other code runs while it is doing so.</li>
</ul>

<h1>What about performance?</h1>

<p>So it may seem that we are slow, since dirty-checking is inefficient. This is where we need to look at real numbers rather than just have theoretical arguments, but first let's define some constraints.</p>

<p>Humans are:</p>

<ul>
<li><p><em>Slow</em> — Anything faster than 50&nbsp;ms is imperceptible to humans and thus can be considered as ""instant"".</p></li>
<li><p><em>Limited</em> — You can't really show more than about 2000 pieces of information to a human on a single page. Anything more than that is really bad UI, and humans can't process this anyway.</p></li>
</ul>

<p>So the real question is this: How many comparisons can you do on a browser in 50&nbsp;ms? This is a hard question to answer as many factors come into play, but here is a test case: <a href=""http://jsperf.com/angularjs-digest/6"">http://jsperf.com/angularjs-digest/6</a> which creates 10,000 watchers. On a modern browser this takes just under 6&nbsp;ms. On <a href=""http://en.wikipedia.org/wiki/Internet_Explorer_8"">Internet&nbsp;Explorer&nbsp;8</a> it takes about 40&nbsp;ms. As you can see, this is not an issue even on slow browsers these days. There is a caveat: The comparisons need to be simple to fit into the time limit... Unfortunately it is way too easy to add a slow comparison into AngularJS, so it is easy to build slow applications when you don't know what you are doing. But we hope to have an answer by providing an instrumentation module, which would show you which are the slow comparisons.</p>

<p>It turns out that video games and GPUs use the dirty-checking approach, specifically because it is consistent. As long as they get over the monitor refresh rate (typically 50-60 Hz, or every 16.6-20 ms), any performance over that is a waste, so you're better off drawing more stuff, than getting FPS higher.</p>
","9693933"
"Use dynamic variable names in JavaScript","315134","","<p>In PHP you can do amazing/horrendous things like this:</p>

<pre><code>$a = 1;
$b = 2;
$c = 3;
$name = 'a';
echo $$name;
// prints 1
</code></pre>

<p>Is there any way of doing something like this with Javascript?</p>

<p>E.g. if I have a <code>var name = 'the name of the variable';</code> can I get a reference to the variable with name <code>name</code>?</p>
","<p>Since ECMA-/Javascript is all about <code>Objects</code> and <code>Contexts</code> (which, are also somekind of Object), every variable is stored in a such called <strong>Variable-</strong> (or in case of a Function, <strong>Activation Object</strong>).</p>

<p>So if you create variables like this:</p>

<pre><code>var a = 1,
    b = 2,
    c = 3;
</code></pre>

<p>In the <strong>Global scope</strong> (= NO function context), you implicitly write those variables into the <strong>Global object</strong> (= <code>window</code> in a browser).</p>

<p>Those can get accessed by using the ""dot"" or ""bracket"" notation:</p>

<pre><code>var name = window.a;
</code></pre>

<p>or</p>

<pre><code>var name = window['a'];
</code></pre>

<p>This only works for the global object in this particular instance, because the <strong>Variable Object</strong> of the <strong>Global Object</strong> is the <code>window</code> object itself. Within the Context of a function, you don't have direct access to the <strong>Activation Object</strong>. For instance:</p>

<pre><code>function foobar() {
   this.a = 1;
   this.b = 2;

   var name = window['a']; // === undefined
   alert(name);
   name = this['a']; // === 1
   alert(name);
}

new foobar();
</code></pre>

<p><code>new</code> creates a new instance of a self-defined object (context). Without <code>new</code> the scope of the function would be also <code>global</code> (=window). This example would alert <code>undefined</code> and <code>1</code> respectively. If we would replace <code>this.a = 1; this.b = 2</code> with:</p>

<pre><code>var a = 1,
    b = 2;
</code></pre>

<p>Both alert outputs would be undefined. In that scenario, the variables <code>a</code> and <code>b</code> would get stored in the Activation Object from <code>foobar</code>, which we cannot access (of course we could access those directly by calling <code>a</code> and <code>b</code>).</p>
","5117172"
"How to fix Error: listen EADDRINUSE while using nodejs?","315004","","<p>If I run a server with the port 80, and I try to use <a href=""https://github.com/driverdan/node-XMLHttpRequest"">xmlHTTPrequest</a> i get this error: <code>Error: listen EADDRINUSE</code></p>

<p>Why is it problem for nodejs, if I want to do a request, while I run a server on the port 80? For the webbrowsers it is not a problem: I can surf on the internet, while the server is running.</p>

<p>The server is:</p>

<pre><code>  net.createServer(function (socket) {
    socket.name = socket.remoteAddress + "":"" + socket.remotePort;
    console.log('connection request from: ' + socket.remoteAddress);
    socket.destroy();
  }).listen(options.port);
</code></pre>

<p>And the request:</p>

<pre><code>var xhr = new XMLHttpRequest();

xhr.onreadystatechange = function() {
    sys.puts(""State: "" + this.readyState);

    if (this.readyState == 4) {
        sys.puts(""Complete.\nBody length: "" + this.responseText.length);
        sys.puts(""Body:\n"" + this.responseText);
    }
};

xhr.open(""GET"", ""http://mywebsite.com"");
xhr.send();
</code></pre>
","<p><code>EADDRINUSE</code> means that the port number which <code>listen()</code> tries to bind the server to is already in use.</p>

<p>So, in your case, there must be running a server on port 80 already.</p>

<p>If you have another webserver running on this port you have to put node.js behind that server and proxy it through it.</p>

<p>You should check for the <code>listening</code> event like this, to see if the server is really listening:</p>

<pre><code>var http=require('http');

var server=http.createServer(function(req,res){
    res.end('test');
});

server.on('listening',function(){
    console.log('ok, server is running');
});

server.listen(80);
</code></pre>
","9898697"
"Changing iframe src with Javascript","314983","","<p>I am trying to change an iframe src when someone clicks a radio button. For some reason my code is not working correctly and I am having trouble figuring out why. Here is what I have:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd""&gt;
&lt;html xmlns=""http://www.w3.org/1999/xhtml""&gt;

&lt;head&gt;
  &lt;meta content=""text/html; charset=utf-8"" http-equiv=""Content-Type"" /&gt;
  &lt;title&gt;Untitled 1&lt;/title&gt;

  &lt;script&gt;
  function go(loc) {
    document.getElementById('calendar').src = loc;
  }
  &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
  &lt;iframe id=""calendar"" src=""about:blank"" width=""1000"" height=""450"" frameborder=""0"" scrolling=""no""&gt;&lt;/iframe&gt;

  &lt;form method=""post""&gt;
    &lt;input name=""calendarSelection"" type=""radio"" onselect=""go('http://calendar.zoho.com/embed/9a6054c98fd2ad4047021cff76fee38773c34a35234fa42d426b9510864356a68cabcad57cbbb1a0?title=Kevin_Calendar&amp;type=1&amp;l=en&amp;tz=America/Los_Angeles&amp;sh=[0,0]&amp;v=1')"" /&gt;Day
    &lt;input name=""calendarSelection"" type=""radio"" onselect=""go('http://calendar.zoho.com/embed/9a6054c98fd2ad4047021cff76fee38773c34a35234fa42d426b9510864356a68cabcad57cbbb1a0?title=Kevin_Calendar&amp;type=1&amp;l=en&amp;tz=America/Los_Angeles&amp;sh=[0,0]&amp;v=1')"" /&gt;Week
    &lt;input name=""calendarSelection"" type=""radio"" onselect=""go('http://calendar.zoho.com/embed/9a6054c98fd2ad4047021cff76fee38773c34a35234fa42d426b9510864356a68cabcad57cbbb1a0?title=Kevin_Calendar&amp;type=1&amp;l=en&amp;tz=America/Los_Angeles&amp;sh=[0,0]&amp;v=1')"" /&gt;Month
  &lt;/form&gt;

&lt;/body&gt;

&lt;/html&gt;</code></pre>
</div>
</div>
</p>
","<p>In this case, it's probably because you are using the wrong brackets here:</p>

<pre><code>document.getElementById['calendar'].src = loc;
</code></pre>

<p>should be</p>

<pre><code>document.getElementById('calendar').src = loc;
</code></pre>
","3730175"
"jQuery count child elements","313190","","<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div id=""selected""&gt;
  &lt;ul&gt;
    &lt;li&gt;29&lt;/li&gt;
    &lt;li&gt;16&lt;/li&gt;
    &lt;li&gt;5&lt;/li&gt;
    &lt;li&gt;8&lt;/li&gt;
    &lt;li&gt;10&lt;/li&gt;
    &lt;li&gt;7&lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
</p>

<p>I want to count the total number of <code>&lt;li&gt;</code> elements in <code>&lt;div id=""selected""&gt;&lt;/div&gt;</code>. How is that possible using jQuery's <code>.children([selector])</code>?</p>
","<p>You can use <a href=""http://api.jquery.com/length/""><code>.length</code></a> with just a <a href=""http://api.jquery.com/descendant-selector/"">descendant selector</a>, like this:</p>

<pre><code>var count = $(""#selected li"").length;
</code></pre>

<p>If you have to use <a href=""http://api.jquery.com/children/""><code>.children()</code></a>, then it's like this:</p>

<pre><code>var count = $(""#selected ul"").children().length;
</code></pre>

<p><a href=""http://www.jsfiddle.net/nick_craver/VXg2D/"">You can test both versions here</a>.</p>
","4291160"
"Loop through JSON object List","312887","","<p>I am returning a List&lt;> from a webservice as a List of JSON objects. I am trying to use a for loop to iterate through the list and grab the values out of the properties. This is a sample of the returning JSON:</p>

<pre><code>{""d"":[{""__type"":""FluentWeb.DTO.EmployeeOrder"",
 ""EmployeeName"":""Janet Leverling"",
 ""EmployeeTitle"":""Sales Representative"",
 ""RequiredDate"":""\/Date(839224800000)\/"",
 ""OrderedProducts"":null}]}
</code></pre>

<p>So I am trying to extract the contents using something like this:</p>

<pre><code>function PrintResults(result) {

for (var i = 0; i &lt; result.length; i++) { 
    alert(result.employeename);
}
</code></pre>

<p>How should this be done?</p>
","<p>had same problem today, Your topic helped me so here goes solution ;)</p>

<pre><code> alert(result.d[0].EmployeeTitle);
</code></pre>
","840987"
"How to set the focus for a particular field in a Bootstrap modal, once it appears","312294","","<p>I've seen a couple of questions in regards to bootstrap modals, but none exactly like this, so I'll go ahead. </p>

<p>I have a modal that I call onclick like so... </p>

<pre><code>$("".modal-link"").click(function(event){
  $(""#modal-content"").modal('show');
});
</code></pre>

<p>This works fine, but when I show the modal I want to focus on the first input element... In may case the first input element has an id of #photo_name. </p>

<p>So I tried</p>

<pre><code>   $("".modal-link"").click(function(event){
     $(""#modal-content"").modal('show');
     $(""input#photo_name"").focus();
   });
</code></pre>

<p>But this was to no avail. Lastly, I tried binding to the 'show' event but even so, the input won't focus. Lastly just for testing, as I had a suspiscion this is about the js loading order, I put in a setTimeout just to see if I delay a second, will the focus work, and yes, it works! But this method is obviously crap. Is there some way to have the same effect as below without using a setTimeout?</p>

<pre><code>  $(""#modal-content"").on('show', function(event){
    window.setTimeout(function(){
      $(event.currentTarget).find('input#photo_name').first().focus()
    }, 0500);
  });
</code></pre>
","<p>Try this</p>

<p>Here is the old <a href=""http://codebins.com/bin/4ldqp7x/1/bootstrap%20modal%20focus"" rel=""noreferrer""><strong>DEMO</strong></a>:</p>

<p><strong>EDIT:</strong>
(Here is a working <a href=""http://jsfiddle.net/jlaw/BeL2V/3/"" rel=""noreferrer""><strong>DEMO</strong></a> with Bootstrap 3 and jQuery 1.8.3)</p>

<pre><code>$(document).ready(function() {
    $('#modal-content').modal('show');
    $('#modal-content').on('shown', function() {
        $(""#txtname"").focus();
    })
});
</code></pre>

<p>Starting bootstrap 3 need to use shown.bs.modal event:</p>

<pre><code>$('#modal-content').on('shown.bs.modal', function() {
    $(""#txtname"").focus();
})
</code></pre>
","12190456"
"How to extract the hostname portion of a URL in JavaScript","311782","","<p>Is there a really easy way to start from a full URL:</p>

<pre><code>document.location.href = ""http://aaa.bbb.ccc.com/asdf/asdf/sadf.aspx?blah""
</code></pre>

<p>And extract just the host part:</p>

<pre><code>aaa.bbb.ccc.com
</code></pre>

<p>There's gotta be a JavaScript function that does this reliably, but I can't find it.</p>
","<p>suppose that you have a page with this address: <code>http://sub.domain.com/virtualPath/page.htm</code>. use the following in page code to achive those results:</p>

<ul>
<li><code>window.location.host</code> : you'll get <code>sub.domain.com:8080</code> or <code>sub.domain.com:80</code></li>
<li><code>window.location.hostname</code> : you'll get <code>sub.domain.com</code></li>
<li><code>window.location.protocol</code> : you'll get <code>http:</code></li>
<li><code>window.location.port</code> : you'll get <code>8080</code> or <code>80</code></li>
<li><code>window.location.pathname</code> : you'll get <code>/virtualPath</code></li>
<li><code>window.location.origin</code> : you'll get <code>http://sub.domain.com</code> *****</li>
</ul>

<p><strong>Update: about the .origin</strong></p>

<p>***** As the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/window.location"" rel=""noreferrer"">ref</a> states, browser compatibility for <code>window.location.origin</code> is not clear. I've checked it in chrome and it returned <code>http://sub.domain.com:port</code> if the port is anything but 80, and <code>http://sub.domain.com</code> if the port is 80.</p>

<p><strong>Special thanks to @torazaburo for mentioning that to me.</strong></p>
","17336519"
"Setting href attribute at runtime","311780","","<p>What is the best way to set the <code>href</code> attribute of the <code>&lt;a&gt;</code> tag at run time using jQuery?</p>

<p>Also, how do you get the value of the <code>href</code> attribute of the <code>&lt;a&gt;</code> tag using jQuery?</p>
","<p>To get or set an attribute of an HTML element, you can use the <a href=""http://api.jquery.com/attr/""><code>element.attr()</code></a> function in jQuery.</p>

<p>To get the <em>href</em> attribute, use the following code:</p>

<pre><code>var a_href = $('selector').attr('href');
</code></pre>

<p>To set the <em>href</em> attribute, use the following code:</p>

<pre><code>$('selector').attr('href','http://example.com');
</code></pre>

<p>In both cases, please use the appropriate selector. If you have set the class for the anchor element, use <code>'.class-name'</code> and if you have set the id for the anchor element, use <code>'#element-id'</code>.</p>
","4345455"
"Enable & Disable a Div and its elements in Javascript","311691","","<p>I am looking for a method to <em>Enable and Disable</em> the 
                                         <strong>div id=""dcalc""</strong> and Its children.</p>

<pre><code>&lt;div id=""dcalc"" class=""nerkheArz""
 style=""left: 50px; top: 150px; width: 380px; height: 370px;
 background: #CDF; text-align: center"" &gt;
 &lt;div class=""nerkh-Arz""&gt;&lt;/div&gt;
 &lt;div id=""calc""&gt; &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p>I want to Disable them at loading the page and then by a click i can enable them ?</p>

<p>This is what i have tried </p>

<pre><code>document.getElementById(""dcalc"").disabled = true;
</code></pre>
","<p>You should be able to set these via the <a href=""http://api.jquery.com/attr/""><code>attr()</code></a> or <a href=""http://api.jquery.com/prop/""><code>prop()</code></a> functions in jQuery as shown below:</p>

<p><strong>jQuery (&lt; 1.7):</strong></p>

<pre><code>// This will disable just the div
$(""#dcacl"").attr('disabled','disabled');
</code></pre>

<p><em>or</em></p>

<pre><code>// This will disable everything contained in the div
$(""#dcacl"").children().attr(""disabled"",""disabled"");
</code></pre>

<p><strong>jQuery (>= 1.7):</strong></p>

<pre><code>// This will disable just the div
$(""#dcacl"").prop('disabled',true);
</code></pre>

<p><em>or</em></p>

<pre><code>// This will disable everything contained in the div
$(""#dcacl"").children().prop('disabled',true);
</code></pre>

<p><em>or</em></p>

<pre><code>//  disable ALL descendants of the DIV
$(""#dcacl *"").prop('disabled',true);
</code></pre>

<p><strong>Javascript:</strong></p>

<pre><code>// This will disable just the div
document.getElementById(""dcalc"").disabled = true;
</code></pre>

<p><em>or</em></p>

<pre><code>// This will disable all the children of the div
var nodes = document.getElementById(""dcalc"").getElementsByTagName('*');
for(var i = 0; i &lt; nodes.length; i++){
     nodes[i].disabled = true;
}
</code></pre>
","8423836"
"How do I check if file exists in jQuery or pure JavaScript?","311609","","<p>How do I check if a file on my server exists in jQuery or pure JavaScript?</p>
","<p>With jQuery:</p>

<pre><code>$.ajax({
    url:'http://www.example.com/somefile.ext',
    type:'HEAD',
    error: function()
    {
        //file not exists
    },
    success: function()
    {
        //file exists
    }
});
</code></pre>

<p>EDIT:</p>

<p>Here is the code for checking 404 status, without using jQuery</p>

<pre><code>function UrlExists(url)
{
    var http = new XMLHttpRequest();
    http.open('HEAD', url, false);
    http.send();
    return http.status!=404;
}
</code></pre>

<p>Small changes and it could check for status HTTP status code 200 (success), instead.</p>
","3646923"
"format date with moment.js","311432","","<p>I have a string in this format: </p>

<p><code>var testDate = Fri Apr 12 2013 19:08:55 GMT-0500 (CDT)</code></p>

<p>I would like to using moment.js get it in this format <code>mm/dd/yyyy : 04/12/2013</code> for display. </p>

<p>I tried to do it using this method, </p>

<pre><code>moment(testDate,'mm/dd/yyyy');
</code></pre>

<p>Which errors and says <code>there is no such method called replace</code> ? am i approaching this in the wrong way?</p>

<p>Edit:</p>

<p>I should also mention that i am using a pre packaged version of moment.js, packaged for meteor.js</p>

<pre><code>Object [object Date] has no method 'replace' : The Exact error from the console
</code></pre>

<p>Stack Trace:</p>

<pre><code> at makeDateFromStringAndFormat (http://127.0.0.1:3000/packages/moment/lib/moment/moment.js?b4e3ac4a3d0794023a4410e7941c3e179398b5b0:539:29)
    at moment (http://127.0.0.1:3000/packages/moment/lib/moment/moment.js?b4e3ac4a3d0794023a4410e7941c3e179398b5b0:652:24)
    at populateProfileForEdit (http://127.0.0.1:3000/client/views/home/administration/directory/profiles/profiles.js?acfff908a6a099f37312f62892a22b40f82e5e0f:147:25)
    at Object.Template.profile_personal.rendered (http://127.0.0.1:3000/client/views/home/administration/directory/profiles/profiles.js?acfff908a6a099f37312f62892a22b40f82e5e0f:130:13)
    at Spark.createLandmark.rendered (http://127.0.0.1:3000/packages/templating/deftemplate.js?b622653d121262e50a80be772bf5b1e55ab33881:126:42)
    at http://127.0.0.1:3000/packages/spark/spark.js?45c746f38023ceb80745f4b4280457e15f058bbc:384:32
    at Array.forEach (native)
    at Function._.each._.forEach (http://127.0.0.1:3000/packages/underscore/underscore.js?867d3653d53e9c7a171483edbcad9670e12288c7:79:11)
    at http://127.0.0.1:3000/packages/spark/spark.js?45c746f38023ceb80745f4b4280457e15f058bbc:382:7
    at _.extend.flush (http://127.0.0.1:3000/packages/deps/deps.js?9642a93ae1f8ffa8eb1c2475b198c764f183d693:231:11) 
</code></pre>
","<p>The 2nd argument to <code>moment()</code> is a <a href=""http://momentjs.com/docs/#/parsing/string-format/""><em>parsing</em> format</a> rather than an <em>display</em> format.</p>

<p>For that, you want the <a href=""http://momentjs.com/docs/#/displaying/format/""><code>.format()</code> method</a>:</p>

<pre><code>moment(testDate).format('MM/DD/YYYY');
</code></pre>

<p>Also note that case does matter. For Month, Day of Month, and Year, the format should be uppercase.</p>
","15994039"
"Check if string begins with something?","310729","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/646628/javascript-startswith"">Javascript StartsWith</a>  </p>
</blockquote>



<p>I know that I can do like ^= to see if an id starts with something, and I tried using that for this, but it didn't work...  Basically, I'm retrieving the url and I want to set a class for an element for pathnames that start in a certain way... </p>

<p>So, </p>

<pre><code>var pathname = window.location.pathname;  //gives me /sub/1/train/yonks/459087
</code></pre>

<p>I want to make sure that for every path that starts with /sub/1, I can set a class for an element... </p>

<pre><code>if(pathname ^= '/sub/1') {  //this didn't work... 
        ... 
</code></pre>
","<p>Use <a href=""https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/substring"" rel=""noreferrer"">stringObject.substring</a></p>

<pre><code>if (pathname.substring(0, 6) == ""/sub/1"") {
    // ...
}
</code></pre>
","1767265"
"How to substring in jquery","310387","","<p>How can I use jquery on the client side to substring ""nameGorge"" and remove ""name"" so it outputs just ""Gorge""?</p>

<pre><code>var name = ""nameGorge""; //output Gorge
</code></pre>
","<p>No jQuery needed! Just use the substring method:</p>

<pre><code>var gorge = name.substring(4);
</code></pre>

<p>Or if the text you want to remove isn't static:</p>

<pre><code>var name = 'nameGorge';
var toRemove = 'name';
var gorge = name.replace(toRemove,'');
</code></pre>
","4126795"
"JavaScript checking for null vs. undefined and difference between == and ===","310125","","<p>I know, I know there must be some threads covering this topic. But I used the search and didn't get the answer which fits my needs. So here we go:</p>

<ol>
<li><p>How do I check a variable if it's <code>null</code> or <code>undefined</code> and what is the difference between the <code>null</code> and <code>undefined</code>?</p></li>
<li><p>What is the difference between ""=="" and ""==="" (it's hard to search Google for <code>===</code> )?</p></li>
</ol>
","<blockquote>
  <p>How do I check a variable if it's <code>null</code> or <code>undefined</code>...</p>
</blockquote>

<p>Is the variable <code>null</code>:</p>

<pre><code>if (a === null)
// or
if (a == null) // but see note below
</code></pre>

<p>...but note the latter will also be true if <code>a</code> is <code>undefined</code>.</p>

<p>Is it <code>undefined</code>:</p>

<pre><code>if (typeof a === ""undefined"")
// or
if (a === undefined)
// or
if (a == undefined) // but see note below
</code></pre>

<p>...but again, note that the last one is vague; it will also be true if <code>a</code> is <code>null</code>.</p>

<p>Now, despite the above, the <strong>usual</strong>  way to check for those is to use the fact that they're <em>falsey</em>:</p>

<pre><code>if (!a) {
    // `a` is falsey, which includes `undefined` and `null`
    // (and `""""`, and `0`, and `NaN`, and [of course] `false`)
}
</code></pre>

<p>This is defined by <a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-toboolean"">ToBoolean</a> in the spec.</p>

<blockquote>
  <p>...and what is the difference between the <code>null</code> and <code>undefined</code>?</p>
</blockquote>

<p>They're both values usually used to indicate the absence of something. <code>undefined</code> is the more generic one, used as the default value of variables until they're assigned some other value, as the value of function arguments that weren't provided when the function was called, and as the value you get when you ask an object for a property it doesn't have. But it can also be explicitly used in all of those situations. (There's a difference between an object not having a property, and having the property with the value <code>undefined</code>; there's a difference between calling a function with the value <code>undefined</code> for an argument, and leaving that argument off entirely.)</p>

<p><code>null</code> is slightly more specific than <code>undefined</code>: It's a blank object reference. JavaScript is loosely typed, of course, but not all of the things JavaScript interacts with are loosely typed. If an API like the DOM in browsers needs an object reference that's blank, we use <code>null</code>, not <code>undefined</code>. And similarly, the DOM's <code>getElementById</code> operation returns an object reference&nbsp;&mdash; either a valid one (if it found the DOM element), or <code>null</code> (if it didn't).</p>

<p>Interestingly (or not), they're their own types. Which is to say, <code>null</code> is the only value in the Null type, and <code>undefined</code> is the only value in the Undefined type.</p>

<blockquote>
  <p>What is the difference between ""=="" and ""===""</p>
</blockquote>

<p>The only difference between them is that <code>==</code> will do type coercion to try to get the values to match, and <code>===</code> won't. So for instance <code>""1"" == 1</code> is true, because <code>""1""</code> coerces to <code>1</code>. But <code>""1"" === 1</code> is <em>false</em>, because the types don't match. (<code>""1"" !== 1</code> is true.) The first (real) step of <code>===</code> is ""Are the types of the operands the same?"" and if the answer is ""no"", the result is <code>false</code>. If the types are the same, it does exactly what <code>==</code> does.</p>

<p>Type coercion uses quite complex rules and can have surprising results (for instance, <code>"""" == 0</code> is true).</p>

<p>More in the spec:</p>

<ul>
<li><a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-abstract-equality-comparison"">Abstract Equality Comparison</a> (<code>==</code>, also called ""loose"" equality)</li>
<li><a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-strict-equality-comparison"">Strict Equality Comparison</a> (<code>===</code>)</li>
</ul>
","5101991"
"How to check if a string is a valid JSON string in JavaScript without using Try/Catch","310076","","<p>Something like:</p>

<pre><code>var jsonString = '{ ""Id"": 1, ""Name"": ""Coke"" }';

//should be true
IsJsonString(jsonString);

//should be false
IsJsonString(""foo"");
IsJsonString(""&lt;div&gt;foo&lt;/div&gt;"")
</code></pre>

<p>The solution should not contain try/catch. Some of us turn on ""break on all errors"" and they don't like the debugger breaking on those invalid JSON strings.</p>
","<p><em>A comment first. The question was about not using <code>try/catch</code>.<br/>
If you do not mind to use it, read the answer below.
Here we just check a <code>JSON</code> string using a regexp, and it will work in most cases, not all cases.</em></p>

<p>Have a look around the line 450 in <a href=""https://github.com/douglascrockford/JSON-js/blob/master/json2.js"" rel=""noreferrer"">https://github.com/douglascrockford/JSON-js/blob/master/json2.js</a></p>

<p>There is a regexp that check for a valid JSON, something like:</p>

<pre><code>if (/^[\],:{}\s]*$/.test(text.replace(/\\[""\\\/bfnrtu]/g, '@').
replace(/""[^""\\\n\r]*""|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').
replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) {

  //the json is ok

}else{

  //the json is not ok

}
</code></pre>

<p><strong>EDIT</strong>: The new version of json2.js makes a more advanced parsing than above, but still based on a regexp replace ( from the comment of @Mrchief )</p>
","3710506"
"How to distinguish between left and right mouse click with jQuery","309261","","<p>How do you obtain the clicked mouse button using jQuery?</p>

<pre><code>$('div').bind('click', function(){
    alert('clicked');
});
</code></pre>

<p>this is triggered by both right and left click, what is the way of being able to catch right mouse click? I'd be happy if something like below exists:</p>

<pre><code>$('div').bind('rightclick', function(){ 
    alert('right mouse button is pressed');
});
</code></pre>
","<p>As of jQuery version 1.1.3, <code>event.which</code> normalizes <code>event.keyCode</code> and <code>event.charCode</code> so you don't have to worry about browser compatibility issues. <a href=""http://api.jquery.com/event.which/"" rel=""noreferrer"">Documentation on <code>event.which</code></a></p>

<p><code>event.which</code> will give 1, 2 or 3 for left, middle and right mouse buttons respectively so:</p>

<pre><code>$('#element').mousedown(function(event) {
    switch (event.which) {
        case 1:
            alert('Left Mouse button pressed.');
            break;
        case 2:
            alert('Middle Mouse button pressed.');
            break;
        case 3:
            alert('Right Mouse button pressed.');
            break;
        default:
            alert('You have a strange Mouse!');
    }
});
</code></pre>
","2725963"
"Deleting Objects in JavaScript","309056","","<p>I'm a bit confused with JavaScript's <code>delete</code> operator. Take the following piece of code:</p>

<pre><code>var obj = {
    helloText: ""Hello World!""
};

var foo = obj;

delete obj;
</code></pre>

<p>After this piece of code has been executed, <code>obj</code> is <code>null</code>, but <code>foo</code> still refers to an object exactly like <code>obj</code>. I'm guessing this object is the same object that <code>foo</code> pointed to.</p>

<p>This confuses me, because I expected that writing <code>delete obj</code> deleted the object that <code>obj</code> was pointing to in memory—not just the variable <code>obj</code>.</p>

<p>Is this because JavaScript's Garbage Collector is working on a retain/release basis, so that if I didn't have any other variables pointing to the object, it <em>would</em> be removed from memory?</p>

<p>(By the way, my testing was done in Safari 4.)</p>
","<p>The delete operator deletes only a reference, never an object itself. If it did delete the object itself, other remaining references would be dangling, like a C++ delete. (And accessing one of them would cause a crash. To make them all turn null would mean having extra work when deleting or extra memory for each object.)</p>

<p>Since Javascript is garbage collected, you don't need to delete objects themselves - they will be removed when there is no way to refer to them anymore. </p>

<p>It can be useful to delete references to an object if you are finished with them, because this gives the garbage collector more information about what is able to be reclaimed. If references remain to a large object, this can cause it to be unreclaimed - even if the rest of your program doesn't actually use that object.</p>
","742666"
"Merge/flatten an array of arrays in JavaScript?","308907","","<p>I have a JavaScript array like:</p>

<pre><code>[[""$6""], [""$12""], [""$25""], [""$25""], [""$18""], [""$22""], [""$10""]]
</code></pre>

<p>How would I go about making this just:</p>

<pre><code>[""$6"", ""$12"", ""$25"", ...]
</code></pre>
","<p>You can use <code>concat</code> to merge arrays:</p>

<pre><code>var arrays = [[""$6""], [""$12""], [""$25""], [""$25""], [""$18""], [""$22""], [""$10""]];
var merged = [].concat.apply([], arrays);
</code></pre>

<p>Using the <code>apply</code> method of <code>concat</code> will just take the second parameter as an array, so the last line is identical to this:</p>

<pre><code>var merged2 = [].concat([""$6""], [""$12""], [""$25""], [""$25""], [""$18""], [""$22""], [""$10""]);
</code></pre>
","10865042"
"JavaScript: Alert.Show(message) From ASP.NET Code-behind","308633","","<p>I am reading this <a href=""http://archive.devnewz.com/devnewz-3-20061129JavaScriptAlertShowmessagefromASPNETCodebehind.html"" rel=""noreferrer"">JavaScript: Alert.Show(message) From ASP.NET Code-behind</a></p>

<p>I am trying to implement the same. So I created a static class like this:</p>

<pre><code>using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Data;
using System.Data.SqlClient;
using System.Web;
using System.Text;
using System.Web.UI;

namespace Registration.DataAccess
{
    public static class Repository
    {
        /// &lt;summary&gt; 
        /// Shows a client-side JavaScript alert in the browser. 
        /// &lt;/summary&gt; 
        /// &lt;param name=""message""&gt;The message to appear in the alert.&lt;/param&gt; 
        public static void Show(string message) 
            { 
               // Cleans the message to allow single quotation marks 
               string cleanMessage = message.Replace(""'"", ""\'""); 
               string script = ""&lt;script type=""text/javascript""&gt;alert('"" + cleanMessage + ""');&lt;/script&gt;""; 

               // Gets the executing web page 
               Page page = HttpContext.Current.CurrentHandler as Page; 

               // Checks if the handler is a Page and that the script isn't allready on the Page 
               if (page != null &amp;&amp; !page.ClientScript.IsClientScriptBlockRegistered(""alert"")) 
               { 
                 page.ClientScript.RegisterClientScriptBlock(typeof(Alert), ""alert"", script); 
               } 
            } 
    }
}
</code></pre>

<p>On this line: </p>

<pre><code>string script = ""&lt;script type=""text/javascript""&gt;alert('"" + cleanMessage + ""');&lt;/script&gt;""; 
</code></pre>

<p>It is showing me err: <strong>; Expected</strong></p>

<p>And also on </p>

<pre><code>page.ClientScript.RegisterClientScriptBlock(typeof(Alert), ""alert"", script); 
</code></pre>

<p>Err: <strong>The type or namespace name 'Alert' could not be found (are you missing a using directive or an assembly reference?)</strong></p>

<p>What I am doing wrong here? </p>
","<p>Here is an easy way:</p>

<pre><code>Response.Write(""&lt;script&gt;alert('Hello');&lt;/script&gt;"");
</code></pre>
","5827956"
"Passing data between controllers in Angular JS?","308334","","<p>I have a basic controller that displays my products,</p>

<pre><code>App.controller('ProductCtrl',function($scope,$productFactory){
     $productFactory.get().success(function(data){
           $scope.products = data;
     });
});
</code></pre>

<p>In my view I'm displaying this products in a list</p>

<pre><code>&lt;ul&gt;
    &lt;li ng-repeat=""product as products""&gt;
        {{product.name}}
    &lt;/li&gt;
&lt;/ul
</code></pre>

<p>What I'm trying to do is when someone click on the product name, i have another view named cart where this product is added.</p>

<pre><code> &lt;ul class=""cart""&gt;
      &lt;li&gt;
          //click one added here
      &lt;/li&gt;
      &lt;li&gt;
          //click two added here
      &lt;/li&gt;
 &lt;/ul&gt;
</code></pre>

<p>So my doubt here is, how do pass this clicked products from first controller to second? i assumed that cart should be a controller too.</p>

<p>I handle click event using directive. Also i feel i should be using service to achieve above functionality just can't figure how? because cart will be predefined number of products added could be 5/10 depending on which page user is. So i would like to keep this generic.</p>

<p>Update: </p>

<p>I created a service to broadcast and in the second controller i receive it. Now the query is how do i update dom? Since my list to drop product is pretty hardcoded.</p>
","<p>From the description, seems as though you should be using a service. Check out <a href=""http://egghead.io/lessons/angularjs-sharing-data-between-controllers"" rel=""noreferrer"">http://egghead.io/lessons/angularjs-sharing-data-between-controllers</a> and <a href=""https://stackoverflow.com/questions/17952620/angularjs-service-passing-data-between-controllers"">AngularJS Service Passing Data Between Controllers</a> to see some examples.</p>

<p>You could define your product service as such:</p>

<pre><code>app.service('productService', function() {
  var productList = [];

  var addProduct = function(newObj) {
      productList.push(newObj);
  };

  var getProducts = function(){
      return productList;
  };

  return {
    addProduct: addProduct,
    getProducts: getProducts
  };

});
</code></pre>

<p>Dependency inject the service into both controllers. </p>

<p>In your <code>ProductController</code>, define some action that adds the selected object to the array:</p>

<pre><code>app.controller('ProductController', function($scope, productService) {
    $scope.callToAddToProductList = function(currObj){
        productService.addProduct(currObj);
    };
});
</code></pre>

<p>In your <code>CartController</code>, get the products from the service:</p>

<pre><code>app.controller('CartController', function($scope, productService) {
    $scope.products = productService.getProducts();
});
</code></pre>
","20181543"
"Google Map API v3 — set bounds and center","308284","","<p>I've recently switched to Google Maps API V3. I'm working of a simple example which plots markers from an array, however I do not know how to center and zoom automatically with respect to the markers. </p>

<p>I've searched the net high and low, including Google's own documentation, but have not found a clear answer. I know I could simply take an average of the co-ordinates, but how would I set the zoom accordingly?</p>

<pre class=""lang-js prettyprint-override""><code>function initialize() {
  var myOptions = {
    zoom: 10,
    center: new google.maps.LatLng(-33.9, 151.2),


    mapTypeId: google.maps.MapTypeId.ROADMAP
  }
  var map = new google.maps.Map(document.getElementById(""map_canvas""),myOptions);

  setMarkers(map, beaches);
}


var beaches = [
  ['Bondi Beach', -33.890542, 151.274856, 4],
  ['Coogee Beach', -33.423036, 151.259052, 5],
  ['Cronulla Beach', -34.028249, 121.157507, 3],
  ['Manly Beach', -33.80010128657071, 151.28747820854187, 2],
  ['Maroubra Beach', -33.450198, 151.259302, 1]
];

function setMarkers(map, locations) {

  var image = new google.maps.MarkerImage('images/beachflag.png',
      new google.maps.Size(20, 32),
      new google.maps.Point(0,0),
      new google.maps.Point(0, 32));
    var shadow = new google.maps.MarkerImage('images/beachflag_shadow.png',

      new google.maps.Size(37, 32),
      new google.maps.Point(0,0),
      new google.maps.Point(0, 32));


      var lat = map.getCenter().lat(); 
      var lng = map.getCenter().lng();      


  var shape = {
      coord: [1, 1, 1, 20, 18, 20, 18 , 1],
      type: 'poly'
  };
  for (var i = 0; i &lt; locations.length; i++) {
    var beach = locations[i];
    var myLatLng = new google.maps.LatLng(beach[1], beach[2]);
    var marker = new google.maps.Marker({
        position: myLatLng,
        map: map,
        shadow: shadow,
        icon: image,
        shape: shape,
        title: beach[0],
        zIndex: beach[3]
    });
  }
}
</code></pre>
","<p>Got everything sorted - see the last few lines for code - (<code>bounds.extend(myLatLng); map.fitBounds(bounds);</code>)</p>

<pre class=""lang-js prettyprint-override""><code>function initialize() {
  var myOptions = {
    zoom: 10,
    center: new google.maps.LatLng(0, 0),
    mapTypeId: google.maps.MapTypeId.ROADMAP
  }
  var map = new google.maps.Map(
    document.getElementById(""map_canvas""),
    myOptions);
  setMarkers(map, beaches);
}

var beaches = [
  ['Bondi Beach', -33.890542, 151.274856, 4],
  ['Coogee Beach', -33.923036, 161.259052, 5],
  ['Cronulla Beach', -36.028249, 153.157507, 3],
  ['Manly Beach', -31.80010128657071, 151.38747820854187, 2],
  ['Maroubra Beach', -33.950198, 151.159302, 1]
];

function setMarkers(map, locations) {
  var image = new google.maps.MarkerImage('images/beachflag.png',
    new google.maps.Size(20, 32),
    new google.maps.Point(0,0),
    new google.maps.Point(0, 32));
  var shadow = new google.maps.MarkerImage('images/beachflag_shadow.png',
    new google.maps.Size(37, 32),
    new google.maps.Point(0,0),
    new google.maps.Point(0, 32));
  var shape = {
    coord: [1, 1, 1, 20, 18, 20, 18 , 1],
    type: 'poly'
  };
  var bounds = new google.maps.LatLngBounds();
  for (var i = 0; i &lt; locations.length; i++) {
    var beach = locations[i];
    var myLatLng = new google.maps.LatLng(beach[1], beach[2]);
    var marker = new google.maps.Marker({
      position: myLatLng,
      map: map,
      shadow: shadow,
      icon: image,
      shape: shape,
      title: beach[0],
      zIndex: beach[3]
    });
    bounds.extend(myLatLng);
  }
  map.fitBounds(bounds);
}
</code></pre>
","1562418"
"Updating address bar with new URL without hash or reloading the page","308162","","<p>I either dreamt about chrome (dev channel) implementing a way to update the address bar via javascript (the path, not domain) without reloading the page or they really have done this.</p>

<p>However, I can't find the article I <em>think</em> I read.</p>

<p>Am I crazy or is there a way to do this (in Chrome)?</p>

<p>p.s. I'm not talking about window.location.hash, et al. If the above exists <a href=""https://stackoverflow.com/a/824356/160173"">the answer to this question</a> will be untrue.</p>
","<p><strong>You can now do this in most ""modern"" browsers!</strong></p>

<p>Here is the original article I read (posted July 10, 2010): <a href=""http://spoiledmilk.com/blog/html5-changing-the-browser-url-without-refreshing-page/"" rel=""noreferrer"">HTML5: Changing the browser-URL without refreshing page</a>.</p>

<p>For a more in-depth look into pushState/replaceState/popstate (aka the HTML5 History API) <a href=""https://developer.mozilla.org/en-US/docs/DOM/Manipulating_the_browser_history"" rel=""noreferrer"">see the MDN docs</a>.</p>

<p>TL;DR, you can do this:</p>

<pre><code>window.history.pushState(""object or string"", ""Title"", ""/new-url"");
</code></pre>

<p>See my answer to <a href=""https://stackoverflow.com/questions/824349/modify-the-url-without-reloading-the-page/3354511#3354511"">Modify the URL without reloading the page</a> for a basic how-to.</p>
","3340186"
"How to use split?","307294","","<p>I need to break apart a string that always looks like this:</p>

<blockquote>
  <p>something -- something_else. </p>
</blockquote>

<p>I need to put ""something_else"" in another input field. Currently, this string example is being added to an HTML table row on the fly like this:</p>

<pre><code>tRow.append($('&lt;td&gt;').text($('[id$=txtEntry2]').val()));
</code></pre>

<p>I figure ""split"" is the way to go, but there is very little documentation that I can find.</p>
","<p>Documentation can be found e.g. at <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/split"" rel=""noreferrer"">MDN</a>. Note that <code>.split()</code> is <strong>not</strong> a jQuery method, but a native string method. </p>

<p>If you use <code>.split()</code> on a string, then you get an array back with the substrings:</p>

<pre><code>var str = 'something -- something_else';
var substr = str.split(' -- ');
// substr[0] contains ""something""
// substr[1] contains ""something_else""
</code></pre>

<p>If this value is in some field you could also do:</p>

<pre><code>tRow.append($('&lt;td&gt;').text($('[id$=txtEntry2]').val().split(' -- ')[0])));
</code></pre>

<hr>
","2555837"
"Best way to track onchange as-you-type in input type=""text""?","306926","","<p>In my experience, <code>input type=""text""</code> <code>onchange</code> event usually occurs only after you leave (<code>blur</code>) the control.</p>

<p>Is there a way to force browser to trigger <code>onchange</code> every time <code>textfield</code> content changes? If not, what is the most elegant way to track this “manually”?</p>

<p>Using <code>onkey*</code> events is not reliable, since you can right-click the field and choose Paste, and this will change the field without any keyboard input.</p>

<p>Is <code>setTimeout</code> the only way?.. Ugly :-)</p>
","<p><strong><em>Update:</em></strong></p>

<p>See <a href=""https://stackoverflow.com/questions/574941/best-way-to-track-onchange-as-you-type-in-input-type-text/26202266#26202266"">Another answer</a> (2015).</p>

<hr>

<p><em>Original 2009 Answer:</em></p>

<p>So, you want the <code>onchange</code> event to fire on keydown, blur, <em>and</em> paste? That's magic.</p>

<p>If you want to track changes as they type, use <code>""onkeydown""</code>. If you need to trap paste operations with the mouse, use <code>""onpaste""</code> (<a href=""http://msdn.microsoft.com/en-us/library/ms536955(VS.85,loband).aspx"" rel=""noreferrer"">IE</a>, <a href=""https://developer.mozilla.org/En/DOM/Element.onpaste"" rel=""noreferrer"">FF3</a>) and <code>""oninput""</code> (<a href=""http://help.dottoro.com/ljhxklln.php"" rel=""noreferrer"">FF, Opera, Chrome, Safari</a><sup>1</sup>).</p>

<p><sup>1</sup><sub>Broken for <code>&lt;textarea&gt;</code> on Safari. Use <a href=""http://help.dottoro.com/ljhiwalm.php"" rel=""noreferrer""><code>textInput</code></a> instead</sub></p>
","574971"
"How to replace an item in an array with Javascript?","306685","","<p>Each item of this array is some number.</p>

<pre><code>var items = Array(523,3452,334,31, ...5346);
</code></pre>

<p>How do I replace some number in with array with a new one?</p>

<p>For example, we want to replace 3452 with 1010, how would we do this?</p>
","<pre><code>var index = items.indexOf(3452);

if (index !== -1) {
    items[index] = 1010;
}
</code></pre>

<p>Also it is recommend you not use the constructor method to initialize your arrays. Instead, use the literal syntax:</p>

<pre><code>var items = [523, 3452, 334, 31, 5346];
</code></pre>

<p>You can also use the <code>~</code> operator if you are into terse JavaScript and want to shorten the <code>-1</code> comparison:</p>

<pre><code>var index = items.indexOf(3452);

if (~index) {
    items[index] = 1010;
}
</code></pre>

<p>Sometimes I even like to write a <code>contains</code> function to abstract this check and make it easier to understand what's going on. What's awesome is this works on arrays and strings both:</p>

<pre><code>var contains = function (haystack, needle) {
    return !!~haystack.indexOf(needle);
};

// can be used like so now:
if (contains(items, 3452)) {
    // do something else...
}
</code></pre>

<p>Starting with ES6/ES2015 for strings, and proposed for ES2016 for arrays, you can more easily determine if a source contains another value:</p>

<pre><code>if (haystack.includes(needle)) {
    // do your thing
}
</code></pre>
","5915833"
"get an element's id","306371","","<p>is there another way to get an element's ID?</p>

<pre><code>obj.getAttribute('id')
</code></pre>
","<p>Yes you can just use the <a href=""https://developer.mozilla.org/en/DOM/element.id"" rel=""noreferrer""><code>.id</code> property</a> of the <a href=""https://developer.mozilla.org/en/DOM/element"" rel=""noreferrer"">dom element</a>, for example:</p>

<pre><code>myDOMElement.id
</code></pre>

<p>Or, something like this:</p>

<pre><code>var inputs = document.getElementsByTagName(""input"");
for (var i = 0; i &lt; inputs.length; i++) {
  alert(inputs[i].id);
}
</code></pre>
","3623125"
"indexOf method in an object array?","306328","","<p>What's the best method to get the index of an array which contains objects?</p>

<p>Imagine this scenario:</p>

<pre><code>var hello = {
    hello: 'world',
    foo: 'bar'
};
var qaz = {
    hello: 'stevie',
    foo: 'baz'
}

var myArray = [];
myArray.push(hello,qaz);
</code></pre>

<p>Now I would like to have the <code>indexOf</code> the object which <code>hello</code> property is <code>'stevie'</code> which, in this example, would be <code>1</code>.</p>

<p>I'm pretty newbie with JavaScript and I don't know if there is a simple method or if I should build my own function to do that.</p>
","<p>I think you can solve it in one line using 'map' function:</p>

<pre><code>pos = myArray.map(function(e) { return e.hello; }).indexOf('stevie');
</code></pre>
","16008853"
"How can I trigger a JavaScript event click","306142","","<p>I have a hyperlink in my page. I am trying to automate a number of clicks on the hyperlink for testing purposes. Is there any way you can simulate 50 clicks on the hyperlink using JavaScript?</p>

<pre><code>&lt;a href=""#"" target=""_blank"" onclick=""javascript:Test(""Test"");""&gt;MSDN&lt;/a&gt;
</code></pre>

<p>I'm looking for onClick event trigger from the JavaScript.</p>
","<p>Add an ID to your link</p>

<pre><code>&lt;a href=""#"" target=""_blank"" id=""my-link"" onclick=""javascript:Test('Test');""&gt;Google Chrome&lt;/a&gt;
</code></pre>

<p>and call it in your javascript code:</p>

<pre><code>var l = document.getElementById('my-link');
for(var i=0; i&lt;50; i++)
   l.click();
</code></pre>
","2381612"
"What’s the best way to reload / refresh an iframe?","305751","","<p>I would like to reload an <code>&lt;iframe&gt;</code> using JavaScript. The best way I found until now was set the iframe’s <code>src</code> attribute to itself, but this isn’t very clean. Any ideas?</p>
","<pre><code>document.getElementById('some_frame_id').contentWindow.location.reload();
</code></pre>

<p>be careful, in Firefox, <code>window.frames[]</code> cannot be indexed by id, but by name or index</p>
","86771"
"How to scroll HTML page to given anchor?","304949","","<p>I’d like to make the browser to scroll the page to a given anchor, just by using JavaScript.</p>

<p>I have specified a <code>name</code> or <code>id</code> attribute in my HTML code:</p>

<pre><code> &lt;a name=""anchorName""&gt;..&lt;/a&gt;
</code></pre>

<p>or</p>

<pre><code> &lt;h1 id=""anchorName2""&gt;..&lt;/h1&gt;
</code></pre>

<p>I’d like to get the same effect as you’d get by navigating to <code>http://server.com/path#anchorName</code>. The page should be scrolled so that the anchor is near the top of the visible part of the page.</p>
","<pre><code>function scrollTo(hash) {
    location.hash = ""#"" + hash;
}
</code></pre>

<p>No jQuery required at all!</p>
","3163635"
"jQuery first child of ""this""","304611","","<p>I'm trying to pass ""this"" from a clicked span to a jQuery function that can then execute jQuery on that clicked element's first child. Can't seem to get it right...</p>

<pre><code>&lt;p onclick=""toggleSection($(this));""&gt;&lt;span class=""redClass""&gt;&lt;/span&gt;&lt;/p&gt;
</code></pre>

<p>Javascript:</p>

<pre><code>function toggleSection(element) {
  element.toggleClass(""redClass"");
}
</code></pre>

<p>How do I reference the :first-child of element?</p>
","<p>If you want to apply a selector to the context provided by an existing jQuery set, try the <a href=""http://api.jquery.com/find/"" rel=""noreferrer"">find() function</a>:</p>

<pre><code>element.find(""&gt;:first-child"").toggleClass(""redClass"");
</code></pre>

<p>Jørn Schou-Rode noted that you probably only want to find the first <em>direct descendant</em> of the context element, hence <a href=""http://api.jquery.com/child-selector/"" rel=""noreferrer"">the child selector</a> (>). <a href=""https://stackoverflow.com/questions/2275702/jquery-first-child-of-this/2275728#2275728"">He also points out</a> that you could just as well use the <a href=""http://api.jquery.com/children"" rel=""noreferrer"">children() function</a>, which is very similar to find() but only searches one level deep in the hierarchy (which is all you need...): </p>

<pre><code>element.children("":first"").toggleClass(""redClass"");
</code></pre>
","2275718"
"JavaScript validation for empty input field","304453","","<p>Greeting,
I have this input field 
<code>&lt;input name=""question""/&gt;</code> I want to call IsEmpty function when submit clicking submit button.</p>

<p>I tried the code below but did not work.
any advice?!</p>

<pre><code>&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;&lt;/title&gt;
        &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=unicode""/&gt;
        &lt;meta content=""CoffeeCup HTML Editor (www.coffeecup.com)"" name=""generator""/&gt;
    &lt;/head&gt;
    &lt;body&gt;


        &lt;script language=""Javascript""&gt;

            function IsEmpty(){ 

                if(document.form.question.value == """")
                {
                    alert(""empty"");
                }
                return;
            }


        &lt;/script&gt;
        Question: &lt;input name=""question""/&gt; &lt;br/&gt;

        &lt;input id=""insert"" onclick=""IsEmpty();"" type=""submit"" value=""Add Question""/&gt; 

    &lt;/body&gt;
&lt;/html&gt;
</code></pre>
","<pre><code>&lt;script type=""text/javascript""&gt;
    function validateForm()
    {
        var a=document.forms[""Form""][""answer_a""].value;
        var b=document.forms[""Form""][""answer_b""].value;
        var c=document.forms[""Form""][""answer_c""].value;
        var d=document.forms[""Form""][""answer_d""].value;
        if (a==null || a=="""",b==null || b=="""",c==null || c=="""",d==null || d=="""")
        {
            alert(""Please Fill All Required Field"");
            return false;
        }
    }
&lt;/script&gt;

&lt;form method=""post"" name=""Form"" onsubmit=""return validateForm()"" action=""""&gt;
     &lt;textarea cols=""30"" rows=""2"" name=""answer_a"" id=""a""&gt;&lt;/textarea&gt;
     &lt;textarea cols=""30"" rows=""2"" name=""answer_b"" id=""b""&gt;&lt;/textarea&gt;
     &lt;textarea cols=""30"" rows=""2"" name=""answer_c"" id=""c""&gt;&lt;/textarea&gt;
     &lt;textarea cols=""30"" rows=""2"" name=""answer_d"" id=""d""&gt;&lt;/textarea&gt;
&lt;/form&gt;
</code></pre>
","21017888"
"Detecting arrow key presses in JavaScript","304350","","<p>How do I detect when one of the arrow keys are pressed? I used this to find out:</p>

<pre><code>function checkKey(e) {
    var event = window.event ? window.event : e;
    console.log(event.keyCode)
}
</code></pre>

<p>Though it worked for every other key, it didn't for arrow keys (maybe because the browser is supposed to scroll on these keys by default).</p>
","<p>arrow keys are only triggered by <code>onkeydown</code>, not <code>onkeypress</code></p>

<p>keycodes are:</p>

<ul>
<li>left = 37</li>
<li>up  = 38</li>
<li>right = 39</li>
<li>down = 40</li>
</ul>
","5597114"
"set option ""selected"" attribute from dynamic created option","303938","","<p>I have a dynamically created select option using a javascript function. the select object is</p>

<pre><code>&lt;select name=""country"" id=""country""&gt;
&lt;/select&gt;
</code></pre>

<p>when the js function is executed, the ""country"" object is</p>

<pre><code>&lt;select name=""country"" id=""country""&gt;
    &lt;option value=""AF""&gt;Afghanistan&lt;/option&gt;
    &lt;option value=""AL""&gt;Albania&lt;/option&gt;
    ...
    &lt;option value=""ID""&gt;Indonesia&lt;/option&gt;
    ...
    &lt;option value=""ZW""&gt;Zimbabwe&lt;/option&gt;
&lt;/select&gt;
</code></pre>

<p>and displaying ""Indonesia"" as default selected option. note : there is no <code>selected=""selected""</code> attribute in that option.</p>

<p>then I need to set <code>selected=""selected""</code> attribute to ""Indonesia"", and I use this </p>

<pre><code>var country = document.getElementById(""country"");
country.options[country.options.selectedIndex].setAttribute(""selected"", ""selected"");
</code></pre>

<p>using firebug, I can see the ""Indonesia"" option is like this</p>

<pre><code>&lt;option value=""ID"" selected=""selected""&gt;Indonesia&lt;/option&gt;
</code></pre>

<p>but it fails in IE (tested in IE 8).</p>

<p>and then I have tried using jQuery </p>

<pre><code>$( function() {
    $(""#country option:selected"").attr(""selected"", ""selected"");
});
</code></pre>

<p>it fails both in FFX and IE.</p>

<p>I need the ""Indonesia"" option to have <code>selected=""selected""</code> attribute so when I click reset button, it will select ""Indonesia"" again.</p>

<p>changing the js function to dynamically create ""country"" options is not an option. the solution must work both in FFX and IE.</p>

<p>thank you</p>
","<p>Good question. You will need to modify the HTML itself rather than rely on DOM properties.</p>

<pre><code>var opt = $(""option[val=ID]""),
    html = $(""&lt;div&gt;"").append(opt.clone()).html();
html = html.replace(/\&gt;/, ' selected=""selected""&gt;');
opt.replaceWith(html);
</code></pre>

<p>The code grabs the option element for Indonesia, clones it and puts it into a new div (not in the document) to retrieve the full HTML string: <code>&lt;option value=""ID""&gt;Indonesia&lt;/option&gt;</code>.</p>

<p>It then does a string replace to add the attribute <code>selected=""selected""</code> <em>as a string</em>, before replacing the original option with this new one.</p>

<p>I tested it on IE7. See it with the reset button working properly here: <a href=""http://jsfiddle.net/XmW49/"" rel=""noreferrer"">http://jsfiddle.net/XmW49/</a></p>
","4590539"
"Append to string variable","302998","","<p>How can I append a word to an already populated string variable with spaces?</p>
","<p>Like this:</p>

<pre><code>var str = 'blah blah blah';
str += ' blah';

str += ' ' + 'and some more blah';
</code></pre>
","1288111"
"What is the most efficient way to create HTML elements using jQuery?","302955","","<p>Recently I've been doing a lot of modal window pop-ups and what not, for which I used jQuery. The method that I used to create the new elements on the page has overwhelmingly been along the lines of: </p>

<pre><code>$(""&lt;div&gt;&lt;/div&gt;"");
</code></pre>

<p>However, I'm getting the feeling that this isn't the best or the most efficient method of doing this. What is the best way to create elements in jQuery from a performance perspective?</p>

<p><a href=""https://stackoverflow.com/a/268520/32943"">This answer</a> has the benchmarks to the suggestions below.</p>
","<p>I use <code>$(document.createElement('div'));</code>  <a href=""http://jsperf.com/jquery-vs-createelement"" rel=""noreferrer"">Benchmarking shows</a> this technique is the fastest.  I speculate this is because jQuery doesn't have to identify it as an element and create the element itself.</p>

<p>You should really run benchmarks with different Javascript engines and weigh your audience with the results.  Make a decision from there.</p>
","327068"
"How to capture the browser window close event?","302887","","<p>I want to capture the browser window/tab close event.
I have tried the following with jQuery: </p>

<pre><code>jQuery(window).bind(
    ""beforeunload"", 
    function() { 
        return confirm(""Do you really want to close?"") 
    }
)
</code></pre>

<p>But it works on form submission as well, which is not what I want. I want an event that triggers only when the user closes the window.</p>
","<p>The <code>beforeunload</code> event fires whenever the user leaves your page for any reason.</p>

<p>For example, it will be fired if the user submits a form, clicks a link, closes the window (or tab), or goes to a new page using the address bar, search box, or a bookmark.</p>

<p>You could exclude form submissions and hyperlinks (except from other frames) with the following code:</p>

<pre><code>var inFormOrLink;
$('a').on('click', function() { inFormOrLink = true; });
$('form').on('submit', function() { inFormOrLink = true; });

$(window).on(""beforeunload"", function() { 
    return inFormOrLink ? ""Do you really want to close?"" : null; 
})
</code></pre>

<p>For jQuery versions older than 1.7, try this:</p>

<pre><code>var inFormOrLink;
$('a').live('click', function() { inFormOrLink = true; });
$('form').bind('submit', function() { inFormOrLink = true; });

$(window).bind(""beforeunload"", function() { 
    return inFormOrLink ? ""Do you really want to close?"" : null; 
})
</code></pre>

<p>The <code>live</code> method doesn't work with the <code>submit</code> event, so if you add a new form, you'll need to bind the handler to it as well.</p>

<p>Note that if a different event handler cancels the submit or navigation, you will lose the confirmation prompt if the window is actually closed later.  You could fix that by recording the time in the <code>submit</code> and <code>click</code> events, and checking if the <code>beforeunload</code> happens more than a couple of seconds later.</p>
","1632004"
"How to get year/month/day from a date object?","301840","","<p><code>alert(dateObj)</code> gives <code>Wed Dec 30 2009 00:00:00 GMT+0800</code></p>

<p>How to get date in format <code>2009/12/30</code>?</p>
","<pre><code>var dateObj = new Date();
var month = dateObj.getUTCMonth() + 1; //months from 1-12
var day = dateObj.getUTCDate();
var year = dateObj.getUTCFullYear();

newdate = year + ""/"" + month + ""/"" + day;
</code></pre>

<p>or you can set new date and give the above values</p>
","2013332"
"Can we call the function written in one JavaScript in another JS file?","301632","","<p>Can we call the function written in one JS file in another JS file? Can anyone help me how to call the function from another JS file? </p>
","<p>The function could be called as if it was in the same JS File as long as the file containing the definition of the function has being loaded before the first use of the function.</p>

<p>I.e.</p>

<p>File1.js</p>

<pre><code>function alertNumber(number) {
    alert(number);
}
</code></pre>

<p>File2.js</p>

<pre><code>function alertOne() {
     alertNumber(""one"");
}
</code></pre>

<p>HTML</p>

<pre><code>&lt;head&gt;
....
    &lt;script src=""File1.js"" type=""text/javascript""&gt;&lt;/script&gt; 
    &lt;script src=""File2.js"" type=""text/javascript""&gt;&lt;/script&gt; 
....
&lt;/head&gt;
&lt;body&gt;
....
    &lt;script type=""text/javascript""&gt;
       alertOne();
    &lt;/script&gt;
....
&lt;/body&gt;
</code></pre>

<p><s>The other way won't work.</s>
As correctly pointed out by <a href=""https://stackoverflow.com/a/3811763/149885"">Stuart Wakefield</a>. The other way will also work.</p>

<p>HTML</p>

<pre><code>&lt;head&gt;
....
    &lt;script src=""File2.js"" type=""text/javascript""&gt;&lt;/script&gt; 
    &lt;script src=""File1.js"" type=""text/javascript""&gt;&lt;/script&gt; 
....
&lt;/head&gt;
&lt;body&gt;
....
    &lt;script type=""text/javascript""&gt;
       alertOne();
    &lt;/script&gt;
....
&lt;/body&gt;
</code></pre>

<p>What will not work would be:</p>

<p>HTML</p>

<pre><code>&lt;head&gt;
....
    &lt;script src=""File2.js"" type=""text/javascript""&gt;&lt;/script&gt; 
    &lt;script type=""text/javascript""&gt;
       alertOne();
    &lt;/script&gt;
    &lt;script src=""File1.js"" type=""text/javascript""&gt;&lt;/script&gt; 
....
&lt;/head&gt;
&lt;body&gt;
....
&lt;/body&gt;
</code></pre>

<p>As although <code>alertOne</code> is defined when calling it, internally it uses a function that is still not defined (<code>alertNumber</code>).</p>
","3809896"
"When is a CDATA section necessary within a script tag?","301476","","<p>Are CDATA tags ever necessary in script tags and if so when?</p>

<p>In other words, when and where is this:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
//&lt;![CDATA[
...code...
//]]&gt;
&lt;/script&gt;
</code></pre>

<p>preferable to this:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
...code...
&lt;/script&gt;
</code></pre>
","<p>A CDATA section is required if you need your document to parse as XML (e.g. when an XHTML page is interpreted as XML) <em>and you want to be able to write literal <code>i&lt;10</code> and <code>a &amp;&amp; b</code> instead of <code>i&amp;lt;10</code> and <code>a &amp;amp;&amp;amp; b</code></em>, as XHTML will parse the JavaScript code as parsed character data as opposed to character data by default.  This is not an issue with scripts that are stored in external source files, but for any inline JavaScript in XHTML you will <em>probably</em> want to use a CDATA section.</p>

<p>Note that many XHTML pages were never intended to be parsed as XML in which case this will not be an issue.</p>

<p>For a good writeup on the subject, see <a href=""http://javascript.about.com/library/blxhtml.htm"" rel=""noreferrer"">http://javascript.about.com/library/blxhtml.htm</a></p>
","66865"
"How do I iterate through table rows and cells in JavaScript?","301437","","<p>If I have an HTML table...say</p>

<pre><code>&lt;div id=""myTabDiv""&gt;
&lt;table name=""mytab"" id=""mytab1""&gt;
  &lt;tr&gt; 
    &lt;td&gt;col1 Val1&lt;/td&gt;
    &lt;td&gt;col2 Val2&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;col1 Val3&lt;/td&gt;
    &lt;td&gt;col2 Val4&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
</code></pre>

<p>How would I iterate through all table rows (assuming the number of rows could change each time I check) and retrieve values from each cell in each row from within JavaScript?</p>
","<p>If you want to go through each row(<code>&lt;tr&gt;</code>), knowing/identifying the row(<code>&lt;tr&gt;</code>), and iterate through each column(<code>&lt;td&gt;</code>) of each row(<code>&lt;tr&gt;</code>), then this is the way to go.</p>

<pre><code>var table = document.getElementById(""mytab1"");
for (var i = 0, row; row = table.rows[i]; i++) {
   //iterate through rows
   //rows would be accessed using the ""row"" variable assigned in the for loop
   for (var j = 0, col; col = row.cells[j]; j++) {
     //iterate through columns
     //columns would be accessed using the ""col"" variable assigned in the for loop
   }  
}
</code></pre>

<p>If you just want to go through the cells(<code>&lt;td&gt;</code>), ignoring which row you're on, then this is the way to go.</p>

<pre><code>var table = document.getElementById(""mytab1"");
for (var i = 0, cell; cell = table.cells[i]; i++) {
     //iterate through cells
     //cells would be accessed using the ""cell"" variable assigned in the for loop
}
</code></pre>
","3065389"
"HTML anchor tag with Javascript onclick event","301208","","<p>On using Google I found that they are using onclick events in anchor tags.</p>

<p>In <strong>more</strong> option in google header part, it looks like normal a tag, but onclicking it doesn't get redirected but opened a menu. Normally when using</p>

<pre><code>&lt;a href='more.php' onclick='show_more_menu()'&gt;More &gt;&gt;&gt;&lt;/a&gt;
</code></pre>

<p>It usually goes to 'more.php' without firing <code>show_more_menu()</code>, but I have show a menu in that page itself. How to do like <strong>google</strong>?</p>
","<p>If your onclick function returns false the default browser behaviour is cancelled. As such:</p>

<pre><code>&lt;a href='http://www.google.com' onclick='return check()'&gt;check&lt;/a&gt;

&lt;script type='text/javascript'&gt;

function check()
{
    return false;
}

&lt;/script&gt;
</code></pre>

<p>Either way, whether google does it or not isn't of much importance. It's cleaner to bind your onclick functions within javascript - this way you separate your HTML from other code.</p>
","7347817"
"How do I get a value of a <span> using jQuery?","301191","","<p>This is basic.</p>

<p>How do I get the value 'This is my name' of the above span?</p>

<pre><code>&lt;div id='item1'&gt;
&lt;span&gt;This is my name&lt;/span&gt;
&lt;/div&gt;
</code></pre>
","<p>I think this should be a simple example:</p>

<pre><code>$('#item1 span').text();
</code></pre>

<p>or </p>

<pre><code>$('#item1 span').html();
</code></pre>
","1921351"
"jQuery Set Cursor Position in Text Area","300167","","<p>How do you set the cursor position in a text field using jQuery?  I've got a text field with content, and I want the users cursor to be positioned at a certain offset when they focus on the field.  The code should look kind of like this:</p>

<pre><code>$('#input').focus(function() {
  $(this).setCursorPosition(4);
});
</code></pre>

<p>What would the implementation of that setCursorPosition function look like?  If you had a text field with the content abcdefg, this call would result in the cursor being positioned as follows: abcd**|**efg.</p>

<p>Java has a similar function, setCaretPosition.  Does a similar method exist for javascript?</p>

<p><strong>Update: I modified CMS's code to work with jQuery as follows:</strong></p>

<pre><code>new function($) {
  $.fn.setCursorPosition = function(pos) {
    if (this.setSelectionRange) {
      this.setSelectionRange(pos, pos);
    } else if (this.createTextRange) {
      var range = this.createTextRange();
      range.collapse(true);
      if(pos &lt; 0) {
        pos = $(this).val().length + pos;
      }
      range.moveEnd('character', pos);
      range.moveStart('character', pos);
      range.select();
    }
  }
}(jQuery);
</code></pre>
","<p>I have two functions:</p>

<pre><code>function setSelectionRange(input, selectionStart, selectionEnd) {
  if (input.setSelectionRange) {
    input.focus();
    input.setSelectionRange(selectionStart, selectionEnd);
  }
  else if (input.createTextRange) {
    var range = input.createTextRange();
    range.collapse(true);
    range.moveEnd('character', selectionEnd);
    range.moveStart('character', selectionStart);
    range.select();
  }
}

function setCaretToPos (input, pos) {
  setSelectionRange(input, pos, pos);
}
</code></pre>

<p>Then you can use setCaretToPos like this:</p>

<pre><code>setCaretToPos(document.getElementById(""YOURINPUT""), 4);
</code></pre>

<p>Live example with both a <code>textarea</code> and an <code>input</code>, showing use from jQuery:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function setSelectionRange(input, selectionStart, selectionEnd) {
  if (input.setSelectionRange) {
    input.focus();
    input.setSelectionRange(selectionStart, selectionEnd);
  } else if (input.createTextRange) {
    var range = input.createTextRange();
    range.collapse(true);
    range.moveEnd('character', selectionEnd);
    range.moveStart('character', selectionStart);
    range.select();
  }
}

function setCaretToPos(input, pos) {
  setSelectionRange(input, pos, pos);
}

$(""#set-textarea"").click(function() {
  setCaretToPos($(""#the-textarea"")[0], 10)
});
$(""#set-input"").click(function() {
  setCaretToPos($(""#the-input"")[0], 10);
});</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;textarea id=""the-textarea"" cols=""40"" rows=""4""&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/textarea&gt;
&lt;br&gt;&lt;input type=""button"" id=""set-textarea"" value=""Set in textarea""&gt;
&lt;br&gt;&lt;input id=""the-input"" type=""text"" size=""40"" value=""Lorem ipsum dolor sit amet, consectetur adipiscing elit""&gt;
&lt;br&gt;&lt;input type=""button"" id=""set-input"" value=""Set in input""&gt;
&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js""&gt;&lt;/script&gt;</code></pre>
</div>
</div>
</p>

<p>As of 2016, tested and working on Chrome, Firefox, IE11, even IE8 (see that last <a href=""http://jsbin.com/sujoxosepo"" rel=""noreferrer"">here</a>; Stack Snippets don't support IE8).</p>
","499158"
"Function overloading in Javascript - Best practices","299811","","<p>What is the best way(s) to fake function overloading in Javascript? </p>

<p>I know it is not possible to overload functions in Javascript as in other languages. 
If I needed a function with two uses <code>foo(x)</code> and <code>foo(x,y,z)</code> which is the best / preferred way:</p>

<ol>
<li>Using different names in the first place</li>
<li>Using optional arguments like <code>y = y || 'default'</code></li>
<li>Using number of arguments</li>
<li>Checking types of arguments</li>
<li>Or how?</li>
</ol>
","<p>The best way to do function overloading with parameters is not to check the argument length or  the types; checking the types will just make your code slow and you have the fun of Arrays, nulls, Objects, etc.</p>

<p>What most developers do is tack on an object as the last argument to their methods.  This object can hold anything. </p>

<pre><code>function foo(a, b, opts) {

}


foo(1, 2, {""method"":""add""});
foo(3, 4, {""test"":""equals"", ""bar"":""tree""});
</code></pre>

<p>Then you can handle it anyway you want in your method. [Switch, if-else, etc.]</p>
","457589"
"What is the JavaScript equivalent of var_dump or print_r in PHP?","299497","","<p>I would like to see the structure of object in JavaScript (for debugging). Is there anything similar to var_dump in PHP?</p>
","<p>Most modern browsers have a console in their developer tools, useful for this sort of debugging.</p>

<pre><code>console.log(myvar);
</code></pre>

<p>Then you will get a nicely mapped out interface of the object/whatever in the console.</p>

<p>Check out the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Console"" rel=""noreferrer""><code>console</code></a> documentation for more details.</p>
","603998"
"Height equal to dynamic width (CSS fluid layout)","299428","","<p>Is it possible to set same height as width (ratio 1:1)?</p>

<p><strong>Example</strong></p>

<pre><code>+----------+
| body     |
| 1:3      |
|          |
| +------+ |
| | div  | |
| | 1:1  | |
| +------+ |
|          |
|          |
|          |
|          |
|          |
+----------+
</code></pre>

<p><strong>CSS</strong></p>

<pre><code>div {
  width: 80%;
  height: same-as-width
}
</code></pre>
","<p>Using jQuery you can achieve this by doing</p>

<pre><code>var cw = $('.child').width();
$('.child').css({'height':cw+'px'});
</code></pre>

<h2>Check working example at <a href=""http://jsfiddle.net/n6DAu/1/"">http://jsfiddle.net/n6DAu/1/</a></h2>
","5445536"
"What techniques can be used to define a class in JavaScript, and what are their trade-offs?","298953","","<p>I prefer to use OOP in large scale projects like the one I'm working on right now. I need to create several classes in JavaScript but, if I'm not mistaken, there are at least a couple of ways to go about doing that. What would be the syntax and why would it be done in that way?</p>

<p>I would like to avoid using third-party libraries - at least at first.<br>
Looking for other answers, I found the article <em><a href=""http://www.webreference.com/js/column79/"" rel=""noreferrer"">Object-Oriented Programming with JavaScript, Part I: Inheritance - Doc JavaScript</a></em> that discusses object-oriented programming in JavaScript. Is there a better way to do inheritance? </p>
","<p>Here's the way to do it without using any external libraries:</p>

<pre><code>// Define a class like this
function Person(name, gender){

   // Add object properties like this
   this.name = name;
   this.gender = gender;
}

// Add methods like this.  All Person objects will be able to invoke this
Person.prototype.speak = function(){
    alert(""Howdy, my name is"" + this.name);
};

// Instantiate new objects with 'new'
var person = new Person(""Bob"", ""M"");

// Invoke methods like this
person.speak(); // alerts ""Howdy, my name is Bob""
</code></pre>

<p>Now the real answer is a whole lot more complex than that. For instance, there is no such thing as classes in JavaScript. JavaScript uses a <code>prototype</code>-based inheritance scheme.  </p>

<p>In addition, there are numerous popular JavaScript libraries that have their own style of approximating class-like functionality in JavaScript. You'll want to check out at least <a href=""http://en.wikipedia.org/wiki/Prototype_JavaScript_Framework"" rel=""noreferrer"">Prototype</a> and <a href=""http://en.wikipedia.org/wiki/JQuery"" rel=""noreferrer"">jQuery</a>.  </p>

<p>Deciding which of these is the ""best"" is a great way to start a holy war on Stack&nbsp;Overflow. If you're embarking on a larger JavaScript-heavy project, it's definitely worth learning a popular library and doing it their way. I'm a Prototype guy, but Stack&nbsp;Overflow seems to lean towards jQuery.</p>

<p>As far as there being only ""one way to do it"", without any dependencies on external libraries, the way I wrote is pretty much it.   </p>
","387733"
"Javascript Object push() function","298326","","<p>I have a javascript object (I actually get the data through an ajax request):</p>

<pre><code>var data = {};
</code></pre>

<p>I have added some stuff into it:</p>

<pre><code>data[0] = { ""ID"": ""1""; ""Status"": ""Valid"" }
data[1] = { ""ID"": ""2""; ""Status"": ""Invalid"" }
</code></pre>

<p>Now I want to remove all objects with an invalid status (but keep everything the ordering same):</p>

<pre><code>var tempData = {};
for ( var index in data ) {
    if ( data[index].Status == ""Valid"" ) {
        tempData.push( data );
    }
}
data = tempData;
</code></pre>

<p>In my mind, all of this should work, but I am getting an error that tempData.push is not a function.  I understand why it isn't the same as an array, but what could I do otherwise?</p>
","<p><a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/push""><code>push()</code> is for arrays</a>, not <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object#Methods"">objects</a>, so use the right data structure.</p>

<pre><code>var data = [];
// ...
data[0] = { ""ID"": ""1"", ""Status"": ""Valid"" };
data[1] = { ""ID"": ""2"", ""Status"": ""Invalid"" };
// ...
var tempData = [];
for ( var index=0; index&lt;data.length; index++ ) {
    if ( data[index].Status == ""Valid"" ) {
        tempData.push( data );
    }
}
data = tempData;
</code></pre>
","8925849"
"Prevent BODY from scrolling when a modal is opened","298209","","<p>I want my body to stop scrolling when using the mousewheel while the Modal (from <a href=""http://twitter.github.com/bootstrap"" rel=""noreferrer"">http://twitter.github.com/bootstrap</a>) on my website is opened.</p>

<p>I've tried to call the piece of javascript below when the modal is opened but without success</p>

<pre><code>$(window).scroll(function() { return false; });

AND

$(window).live('scroll', function() { return false; });
</code></pre>

<p>Please note our website dropped support for IE6, IE7+ needs to be compatible though.</p>
","<p>Bootstrap's <code>modal</code> automatically adds the class <code>modal-open</code> to the body when a modal dialog is shown and removes it when the dialog is hidden. You can therefore add the following to your CSS:</p>

<pre><code>body.modal-open {
    overflow: hidden;
}
</code></pre>

<p>You could argue that the above code belongs to the Bootstrap CSS code base, but this is an easy fix to add it to your site.</p>

<p><strong>Update 8th feb, 2013</strong><br>
This has now stopped working in Twitter Boostrap v. 2.3.0 -- they no longer add the <code>modal-open</code> class to the body.</p>

<p>A workaround would be to add the class to the body when the modal is about to be shown, and remove it when the modal is closed:</p>

<pre><code>$(""#myModal"").on(""show"", function () {
  $(""body"").addClass(""modal-open"");
}).on(""hidden"", function () {
  $(""body"").removeClass(""modal-open"")
});
</code></pre>

<p><strong>Update 11th march, 2013</strong>
Looks like the <code>modal-open</code> class will return in Bootstrap 3.0, explicitly for the purpose of preventing the scroll: </p>

<blockquote>
  <p>Reintroduces .modal-open on the body (so we can nuke the scroll there)</p>
</blockquote>

<p>See this: <a href=""https://github.com/twitter/bootstrap/pull/6342"" rel=""noreferrer"">https://github.com/twitter/bootstrap/pull/6342</a> - look at the <strong>Modal</strong> section.</p>
","11013994"
"What is TypeScript and why would I use it in place of JavaScript?","297946","","<p>Can you please describe what the TypeScript language is?</p>

<p>What can it do that JavaScript or available libraries cannot do, that would give me reason to consider it?</p>
","<h2>1000ft view...</h2>

<p><a href=""http://www.typescriptlang.org"" rel=""noreferrer"">TypeScript</a> is a superset of JavaScript which primarily provides optional static typing, classes and interfaces. One of the big benefits is to enable IDEs to provide a richer environment for spotting common errors <em>as you type the code</em>.</p>

<p>To get an idea of what I mean, watch <a href=""http://channel9.msdn.com/posts/Anders-Hejlsberg-Introducing-TypeScript"" rel=""noreferrer"">Microsoft's introductory video</a> on the language.</p>

<p>For a large JavaScript project, adopting TypeScript might result in more robust software, while still being deployable where a regular JavaScript application would run.</p>

<p>It is open source, but you only get the clever Intellisense as you type if you use a supported IDE. Initially, this was only Microsoft's Visual Studio (also noted in blog post from <a href=""http://tirania.org/blog/archive/2012/Oct-01.html"" rel=""noreferrer"">Miguel de Icaza</a>). These days, <a href=""https://github.com/Microsoft/TypeScript/wiki/TypeScript-Editor-Support"" rel=""noreferrer"">other IDEs offer TypeScript support too</a>.</p>

<h2>Are there other technologies like it?</h2>

<p>There's <a href=""http://coffeescript.org/"" rel=""noreferrer"">CoffeeScript</a>, but that really serves a different purpose. IMHO, CoffeeScript provides readability for humans, but TypeScript also provides deep readability for <em>tools</em> through its optional static typing (see this <a href=""http://www.hanselman.com/blog/WhyDoesTypeScriptHaveToBeTheAnswerToAnything.aspx"" rel=""noreferrer"">recent blog post</a> for a little more critique). There's also <a href=""http://en.wikipedia.org/wiki/Dart_%28programming_language%29"" rel=""noreferrer"">Dart</a> but that's a full on replacement for JavaScript (though it <a href=""http://www.dartlang.org/docs/dart-up-and-running/contents/ch04-tools-dart2js.html"" rel=""noreferrer"">can produce JavaScript code</a>)</p>

<h2>Example</h2>

<p>As an example, here's some TypeScript (you can play with this in the <a href=""http://www.typescriptlang.org/Playground/"" rel=""noreferrer"">TypeScript Playground</a>)</p>

<pre><code>class Greeter {
    greeting: string;
    constructor (message: string) {
        this.greeting = message;
    }
    greet() {
        return ""Hello, "" + this.greeting;
    }
}  
</code></pre>

<p>And here's the JavaScript it would produce</p>

<pre><code>var Greeter = (function () {
    function Greeter(message) {
        this.greeting = message;
    }
    Greeter.prototype.greet = function () {
        return ""Hello, "" + this.greeting;
    };
    return Greeter;
})();
</code></pre>

<p>Notice how the TypeScript defines the type of member variables and class method parameters. This is removed when translating to JavaScript, but used by the IDE and compiler to spot errors, like passing a numeric type to the constructor.</p>

<p>It's also capable of inferring types which aren't explicitly declared, for example, it would determine the <code>greet()</code> method returns a string.</p>

<h2>Debugging Typescript</h2>

<p>Many browsers and IDEs offer direct debugging support through sourcemaps. See this Stack Overflow question for more details: <a href=""https://stackoverflow.com/questions/12711826/debugging-typescript-code-with-visual-studio"">Debugging TypeScript code with Visual Studio</a></p>

<h2>Want to know more?</h2>

<p>I originally wrote this answer when Typescript was still hot-off-the-presses. Check out <a href=""https://stackoverflow.com/a/35048303/6521"">Lodewijk's answer</a> to this question for some more current detail.</p>
","12694578"
"HTML5 form required attribute. Set custom validation message?","297825","","<p>I've got the following HTML5 form: <a href=""http://jsfiddle.net/nfgfP/"" rel=""noreferrer"">http://jsfiddle.net/nfgfP/</a></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;form id=""form"" onsubmit=""return(login())""&gt;
&lt;input name=""username"" placeholder=""Username"" required /&gt;
&lt;input name=""pass""  type=""password"" placeholder=""Password"" required/&gt;
&lt;br/&gt;Remember me: &lt;input type=""checkbox"" name=""remember"" value=""true"" /&gt;&lt;br/&gt;
&lt;input type=""submit"" name=""submit"" value=""Log In""/&gt;</code></pre>
</div>
</div>
</p>

<p>Currently when I hit enter when they're both blank, a popup box appears saying ""Please fill out this field"". How would I change that default message to ""This field cannot be left blank""?</p>

<p><strong>EDIT:</strong> Also note that the type password field's error message is simply <code>*****</code>. To recreate this give the username a value and hit submit.</p>

<p><strong>EDIT</strong>: I'm using Chrome 10 for testing. Please do the same</p>
","<p>Use <a href=""https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation#Constraint_API%27s_element.setCustomValidity()"" rel=""noreferrer""><code>setCustomValidity</code></a>:</p>

<pre><code>document.addEventListener(""DOMContentLoaded"", function() {
    var elements = document.getElementsByTagName(""INPUT"");
    for (var i = 0; i &lt; elements.length; i++) {
        elements[i].oninvalid = function(e) {
            e.target.setCustomValidity("""");
            if (!e.target.validity.valid) {
                e.target.setCustomValidity(""This field cannot be left blank"");
            }
        };
        elements[i].oninput = function(e) {
            e.target.setCustomValidity("""");
        };
    }
})
</code></pre>

<p>I <a href=""http://jsfiddle.net/robertc/X8UXQ/190/"" rel=""noreferrer"">changed to vanilla JavaScript</a> from Mootools as suggested by <a href=""https://stackoverflow.com/questions/5272433/html5-form-required-attribute-set-custom-validation-message#comment19641023_5276722"">@itpastorn</a> in the comments, but you should be able to work out the Mootools equivalent if necessary.</p>

<h3>Edit</h3>

<p>I've updated the code here as <code>setCustomValidity</code> works slightly differently to what I understood when I originally answered.  If <code>setCustomValidity</code> is set to anything other than the empty string it will cause the field to be considered invalid; therefore you must clear it before testing validity, you can't just set it and forget.</p>

<h3>Further edit</h3>

<p>As pointed out in @thomasvdb's comment below, you need to clear the custom validity in some event outside of <code>invalid</code> otherwise there may be an extra pass through the <code>oninvalid</code> handler to clear it.</p>
","5276722"
"jQuery.inArray(), how to use it right?","297689","","<p>First time I work with <code>jQuery.inArray()</code> and it acts kinda strange.</p>

<p>If the object is in the array, it will return 0, but 0 is false in Javascript. So the following will output: <em>""is NOT in array""</em></p>

<pre><code>var myarray = [];
myarray.push(""test"");

if(jQuery.inArray(""test"", myarray)) {
    console.log(""is in array"");
} else {
    console.log(""is NOT in array"");
}
</code></pre>

<p>I will have to change the if statement to:</p>

<pre><code>if(jQuery.inArray(""test"", myarray)==0)
</code></pre>

<p>But this makes the code unreadable. Especially for someone who dont know this function. He will expect that jQuery.inArray(""test"", myarray) gives true when ""test"" is in the array.</p>

<p>So my question is, why is it done this way? I realy dislike this. But there must be a good reason to do it like that.</p>
","<p><code>inArray</code> returns the index of the element in the array, not a boolean indicating if the item exists in the array. If the element was not found, <code>-1</code> will be returned.</p>

<p>So, to check if an item is in the array, use:</p>

<pre><code>if(jQuery.inArray(""test"", myarray) !== -1)
</code></pre>
","18867667"
"AngularJS: How can I pass variables between controllers?","297576","","<p>I have two Angular controllers:</p>

<pre><code>function Ctrl1($scope) {
    $scope.prop1 = ""First"";
}

function Ctrl2($scope) {
    $scope.prop2 = ""Second"";
    $scope.both = Ctrl1.prop1 + $scope.prop2; //This is what I would like to do ideally
}
</code></pre>

<p>I can't use <code>Ctrl1</code> inside <code>Ctrl2</code> because it is undefined. However if I try to pass it in like so…</p>

<pre><code>function Ctrl2($scope, Ctrl1) {
    $scope.prop2 = ""Second"";
    $scope.both = Ctrl1.prop1 + $scope.prop2; //This is what I would like to do ideally
}
</code></pre>

<p>I get an error. Does anyone know how to do this?</p>

<p>Doing </p>

<pre><code>Ctrl2.prototype = new Ctrl1();
</code></pre>

<p>Also fails.</p>

<p><strong>NOTE:</strong> These controllers are not nested inside each other.</p>
","<p>One way to share variables across multiple controllers is to <a href=""https://code.angularjs.org/1.2.21/docs/guide/services"" rel=""noreferrer"">create a service</a> and inject it in any controller where you want to use it.</p>

<p><strong>Simple service example:</strong></p>

<pre><code>angular.module('myApp', [])
    .service('sharedProperties', function () {
        var property = 'First';

        return {
            getProperty: function () {
                return property;
            },
            setProperty: function(value) {
                property = value;
            }
        };
    });
</code></pre>

<p><strong>Using the service in a controller:</strong></p>

<pre><code>function Ctrl2($scope, sharedProperties) {
    $scope.prop2 = ""Second"";
    $scope.both = sharedProperties.getProperty() + $scope.prop2;
}
</code></pre>

<p>This is described very nicely in <a href=""http://onehungrymind.com/angularjs-sticky-notes-pt-1-architecture/"" rel=""noreferrer"">this blog</a> (Lesson 2 and on in particular).</p>

<p>I've found that if you want to bind to these properties across multiple controllers it works better if you bind to an object's property instead of a primitive type (boolean, string, number) to retain the bound reference. </p>

<p>Example: <code>var property = { Property1: 'First' };</code> instead of <code>var property = 'First';</code>.</p>

<hr>

<p><strong>UPDATE:</strong> To (hopefully) make things more clear <a href=""http://jsfiddle.net/b2fCE/1/"" rel=""noreferrer"">here is a fiddle</a> that shows an example of:</p>

<ul>
<li><strong>Binding to static copies of the shared value (in myController1)</strong>

<ul>
<li>Binding to a primitive (string)</li>
<li>Binding to an object's property (saved to a scope variable)</li>
</ul></li>
<li><strong>Binding to shared values that update the UI as the values are updated (in myController2)</strong>

<ul>
<li>Binding to a function that returns a primitive (string)</li>
<li>Binding to the object's property</li>
<li>Two way binding to an object's property</li>
</ul></li>
</ul>
","12009408"
"How does the ""this"" keyword work?","297559","","<p>I have noticed that there doesn't appear to be a clear explanation of what the <code>this</code> keyword is and how it is correctly (and incorrectly) used in JavaScript on the Stack Overflow site.</p>

<p>I have witnessed some very strange behaviour with it and have failed to understand why it has occurred.</p>

<p>How does <code>this</code> work and when should it be used?</p>
","<p>I recommend reading <a href=""https://mikewest.org"" rel=""noreferrer"">Mike West</a>'s article <a href=""http://www.digital-web.com/articles/scope_in_javascript/"" rel=""noreferrer"">Scope in JavaScript</a> (<a href=""http://web.archive.org/web/20110725013125/http://www.digital-web.com/articles/scope_in_javascript/"" rel=""noreferrer"">mirror</a>) first. It is an excellent, friendly introduction to the concepts of <code>this</code> and scope chains in JavaScript.</p>

<p>Once you start getting used to <code>this</code>, the rules are actually pretty simple. The <a href=""http://www.ecma-international.org/publications/standards/Ecma-262.htm"" rel=""noreferrer"">ECMAScript Standard</a> defines <code>this</code> as a keyword that: </p>

<blockquote>
  <p>evaluates to the value of the ThisBinding of the current execution
  context;</p>
</blockquote>

<p>(§11.1.1). ThisBinding is something that the JavaScript interpreter maintains as it evaluates JavaScript code, like a special CPU register which holds a reference to an object. The interpreter updates the ThisBinding whenever establishing an execution context in one of only three different cases:</p>

<ol>
<li><p>Initial global execution context</p>

<p>This is the case for JavaScript code that is evaluated when a <code>&lt;script&gt;</code> element is encountered:</p>

<pre><code>&lt;script type=""text/javascript""&gt;//&lt;![CDATA[
alert(""I'm evaluated in the initial global execution context!"");

setTimeout(function () {
    alert(""I'm NOT evaluated in the initial global execution context."");
}, 1);
//]]&gt;&lt;/script&gt;
</code></pre>

<p>When evaluating code in the initial global execution context, ThisBinding is set to the global object, <code>window</code> (§10.4.1.1).</p></li>
<li><p>Entering eval code</p>

<ul>
<li><p>... by a direct call to <code>eval()</code></p>

<p>ThisBinding is left unchanged; it is the same value as the ThisBinding of the calling execution context (§10.4.2(2)(a)).</p></li>
<li><p>... if not by a direct call to <code>eval()</code></p>

<p>ThisBinding is set to the global object <em>as if</em> executing in the initial global execution context (§10.4.2(1)).</p></li>
</ul>

<p>§15.1.2.1.1 defines what a direct call to <code>eval()</code> is. Basically, <code>eval(...)</code> is a direct call whereas something like <code>(0, eval)(...)</code> or <code>var indirectEval = eval; indirectEval(...);</code> is an indirect call to <code>eval()</code>. See <a href=""https://stackoverflow.com/a/9107491/196844"">chuckj's answer</a> to <a href=""https://stackoverflow.com/q/9107240/196844"">(1,eval)('this') vs eval('this') in JavaScript?</a> and <a href=""http://dmitrysoshnikov.com/ecmascript/es5-chapter-2-strict-mode/#indirect-eval-call"" rel=""noreferrer"">this blog post by Dmitry Soshnikov</a> for when you might use an indirect <code>eval()</code> call.</p></li>
<li><p>Entering function code</p>

<p>This occurs when calling a function. If a function is called on an object, such as in <code>obj.myMethod()</code> or the equivalent <code>obj[""myMethod""]()</code>, then ThisBinding is set to the object (<code>obj</code> in the example; §13.2.1). In most other cases, ThisBinding is set to the global object (§10.4.3).</p>

<p>The reason for writing ""in most other cases"" is because there are eight ECMAScript 5 built-in functions that allow ThisBinding to be specified in the arguments list. These special functions take a so-called <code>thisArg</code> which becomes the ThisBinding when calling the function (§10.4.3).</p>

<p>These special built-in functions are:</p>

<ul>
<li><code>Function.prototype.apply( thisArg, argArray )</code></li>
<li><code>Function.prototype.call( thisArg [ , arg1 [ , arg2, ... ] ] )</code></li>
<li><code>Function.prototype.bind( thisArg [ , arg1 [ , arg2, ... ] ] )</code></li>
<li><code>Array.prototype.every( callbackfn [ , thisArg ] )</code></li>
<li><code>Array.prototype.some( callbackfn [ , thisArg ] )</code></li>
<li><code>Array.prototype.forEach( callbackfn [ , thisArg ] )</code></li>
<li><code>Array.prototype.map( callbackfn [ , thisArg ] )</code></li>
<li><code>Array.prototype.filter( callbackfn [ , thisArg ] )</code></li>
</ul>

<p><br>In the case of the <code>Function.prototype</code> functions, they are called on a function object, but rather than setting ThisBinding to the function object, ThisBinding is set to the <code>thisArg</code>.</p>

<p>In the case of the <code>Array.prototype</code> functions, the given <em>callbackfn</em> is called in an execution context where ThisBinding is set to <code>thisArg</code> if supplied; otherwise, to the global object.</p></li>
</ol>

<p>Those are the rules for plain JavaScript. When you begin using JavaScript libraries (e.g. jQuery), you may find that certain library functions manipulate the value of <code>this</code>. The developers of those JavaScript libraries do this because it tends to support the most common use cases, and users of the library typically find this behavior to be more convenient. When passing callback functions referencing <code>this</code> to library functions, you should refer to the documentation for any guarantees about what the value of <code>this</code> is when the function is called.</p>

<p>If you are wondering how a JavaScript library manipulates the value of <code>this</code>, the library is simply using one of the built-in JavaScript functions accepting a <code>thisArg</code>. You, too, can write your own function taking a callback function and <code>thisArg</code>:</p>

<pre><code>function doWork(callbackfn, thisArg) {
    //...
    if (callbackfn != null) callbackfn.call(thisArg);
}
</code></pre>

<p><strong>EDIT:</strong></p>

<p>I forgot a special case. When constructing a new object via the <code>new</code> operator, the JavaScript interpreter creates a new, empty object, sets some internal properties, and then calls the constructor function on the new object. Thus, when a function is called in a constructor context, the value of <code>this</code> is the new object that the interpreter created:</p>

<pre><code>function MyType() {
    this.someData = ""a string"";
}

var instance = new MyType();
// Kind of like the following, but there are more steps involved:
// var instance = {};
// MyType.call(instance);
</code></pre>

<p><strong>QUIZ:</strong> Just for fun, test your understanding with the following examples.</p>

<p><em>To reveal the answers, mouse over the light yellow boxes.</em></p>

<ol>
<li><p>What is the value of <code>this</code> at line A? Why?</p>

<pre><code>&lt;script type=""text/javascript""&gt;
if (true) {
    // Line A
}
&lt;/script&gt;
</code></pre>

<blockquote class=""spoiler"">
  <p> <code>window</code>

 <p>Line A is evaluated in the initial global execution context.</p>
</blockquote></li>
<li><p>What is the value of <code>this</code> at line B when <code>obj.staticFunction()</code> is executed? Why?</p>

<pre><code>&lt;script type=""text/javascript""&gt;
var obj = {
    someData: ""a string""
};

function myFun() {
    // Line B
}

obj.staticFunction = myFun;

obj.staticFunction();
&lt;/script&gt;
</code></pre>

<blockquote class=""spoiler"">
  <p> <code>obj</code>

 <p>When calling a function on an object, ThisBinding is set to the object.</p>
</blockquote></li>
<li><p>What is the value of <code>this</code> at line C? Why?</p>

<pre><code>&lt;script type=""text/javascript""&gt;
var obj = {
    myMethod : function () {
        // Line C
    }
};
var myFun = obj.myMethod;
myFun();
&lt;/script&gt;
</code></pre>

<blockquote class=""spoiler"">
  <p> <code>window</code>

 <p>In this example, the JavaScript interpreter enters function code, but because <code>myFun</code>/<code>obj.myMethod</code> is not called on an object, ThisBinding is set to <code>window</code>.

 <p>This is different from Python, in which accessing a method (<code>obj.myMethod</code>) creates a <a href=""http://docs.python.org/3/library/stdtypes.html#methods"" rel=""noreferrer"">bound method object</a>.</p>
</blockquote></li>
<li><p>What is the value of <code>this</code> at line D? Why?</p>

<pre><code>&lt;script type=""text/javascript""&gt;
function myFun() {
    // Line D
}
var obj = {
    myMethod : function () {
        eval(""myFun()"");
    }
};
obj.myMethod();
&lt;/script&gt;
</code></pre>

<blockquote class=""spoiler"">
  <p> <code>window</code>

 <p>This one was tricky. When evaluating the eval code, <code>this</code> is <code>obj</code>. However, in the eval code, <code>myFun</code> is not called on an object, so ThisBinding is set to <code>window</code> for the call.</p>
</blockquote></li>
<li><p>What is the value of <code>this</code> at line E?</p>

<pre><code>&lt;script type=""text/javascript""&gt;
function myFun() {
    // Line E
}
var obj = {
    someData: ""a string""
};
myFun.call(obj);
&lt;/script&gt;
</code></pre>

<blockquote class=""spoiler"">
  <p> <code>obj</code>

 <p>The line <code>myFun.call(obj);</code> is invoking the special built-in function <code>Function.prototype.call()</code>, which accepts <code>thisArg</code> as the first argument.</p>
</blockquote></li>
</ol>
","3127440"
"JavaScript file upload size validation","297212","","<p>Is there any way to check <strong>file size</strong> before uploading it using JavaScript?</p>
","<p><strong>Yes</strong>, there's a new feature from the W3C that's supported by some modern browsers, the <a href=""http://www.w3.org/TR/FileAPI/"" rel=""noreferrer"">File API</a>. It can be used for this purpose, and it's easy to test whether it's supported and fall back (if necessary) to another mechanism if it isn't.</p>

<p>Here's a complete example:</p>

<pre><code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv=""Content-type"" content=""text/html;charset=UTF-8""&gt;
&lt;title&gt;Show File Data&lt;/title&gt;
&lt;style type='text/css'&gt;
body {
    font-family: sans-serif;
}
&lt;/style&gt;
&lt;script type='text/javascript'&gt;
function showFileSize() {
    var input, file;

    // (Can't use `typeof FileReader === ""function""` because apparently
    // it comes back as ""object"" on some browsers. So just see if it's there
    // at all.)
    if (!window.FileReader) {
        bodyAppend(""p"", ""The file API isn't supported on this browser yet."");
        return;
    }

    input = document.getElementById('fileinput');
    if (!input) {
        bodyAppend(""p"", ""Um, couldn't find the fileinput element."");
    }
    else if (!input.files) {
        bodyAppend(""p"", ""This browser doesn't seem to support the `files` property of file inputs."");
    }
    else if (!input.files[0]) {
        bodyAppend(""p"", ""Please select a file before clicking 'Load'"");
    }
    else {
        file = input.files[0];
        bodyAppend(""p"", ""File "" + file.name + "" is "" + file.size + "" bytes in size"");
    }
}

function bodyAppend(tagName, innerHTML) {
    var elm;

    elm = document.createElement(tagName);
    elm.innerHTML = innerHTML;
    document.body.appendChild(elm);
}
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;form action='#' onsubmit=""return false;""&gt;
&lt;input type='file' id='fileinput'&gt;
&lt;input type='button' id='btnLoad' value='Load' onclick='showFileSize();'&gt;
&lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>And <a href=""http://jsbin.com/ulamor"" rel=""noreferrer"">here</a> it is in action. Try that with a recent version of Chrome or Firefox.</p>

<hr>

<p>Slightly off-topic, but: Note that client-side validation is <strong>no substitute</strong> for server-side validation. Client-side validation is purely to make it possible to provide a nicer user experience. For instance, if you don't allow uploading a file more than 5MB, you could use client-side validation to check that the file the user has chosen isn't more than 5MB in size and give them a nice friendly message if it is (so they don't spend all that time uploading only to get the result thrown away at the server), but you must <strong>also</strong> enforce that limit at the server, as all client-side limits (and other validations) can be circumvented.</p>
","3717847"
"Jquery : Refresh/Reload the page on clicking a button","297132","","<p>I have a button which loads after a ajax call , on clicking  i want to reload the page (like i press f5)</p>

<p>I tried </p>

<pre><code>$( "".delegate_update_success"" ).click(function() {
    location.reload();
});
</code></pre>

<p>but it does a simple refresh, but my page does not makes a new request to get the contents. 
It should happen just like I am entering URL to get that page.</p>
","<p>You should use the <code>location.reload(true)</code>, which will release the cache for that specific page and force the page to load as a <strong>NEW</strong> page.</p>

<p>The <code>true</code> parameter forces the page to release it's cache.</p>
","19207805"
"Convert date to another timezone in JavaScript","297060","","<p>I am looking for a function to convert date in one timezone to another. </p>

<p>It need two parameters, </p>

<ul>
<li>date (in format ""2012/04/10 10:10:30 +0000"") </li>
<li>timezone string (""Asia/Jakarta"")</li>
</ul>

<p>The timezone string is described in <a href=""http://en.wikipedia.org/wiki/Zone.tab"" rel=""noreferrer"">http://en.wikipedia.org/wiki/Zone.tab</a></p>

<p>Is there an easy way to do this?</p>
","<p>For <a href=""http://momentjs.com/"">moment.js</a> users, you can now use <a href=""http://momentjs.com/timezone/docs/"">moment-timezone</a>.  Using it, your function would look something like this:</p>

<pre><code>function toTimeZone(time, zone) {
    var format = 'YYYY/MM/DD HH:mm:ss ZZ';
    return moment(time, format).tz(zone).format(format);
}
</code></pre>
","18612568"
"How to redirect to another page using Angular JS?","296990","","<p>I am using ajax call to perform functionality in a service file and if the response is successful, I want to redirect the page to another url. Currently, I am doing this by using simple js ""window.location = response['message'];"". But I need to replace it with angularjs code. I have looked various solutions on stackoverflow, they used $location. But I am new to angular and having trouble to implement it.</p>

<pre><code>$http({
            url: RootURL+'app-code/common.service.php',
            method: ""POST"",
            headers: {'Content-Type': 'application/x-www-form-urlencoded'},
            dataType: 'json',
            data:data + '&amp;method=signin'

        }).success(function (response) {

            console.log(response);

            if (response['code'] == '420') {

                $scope.message = response['message'];
                $scope.loginPassword = '';
            }
            else if (response['code'] != '200'){

                $scope.message = response['message'];
                $scope.loginPassword = '';
            }
            else {
                window.location = response['message'];
            }
            //  $scope.users = data.users;    // assign  $scope.persons here as promise is resolved here
        })
</code></pre>
","<p>You can use Angular <code>$window</code>:</p>

<pre><code>$window.location.href = '/index.html';
</code></pre>

<p>Example usage in a contoller:</p>

<pre><code>(function () {
    'use strict';

    angular
        .module('app')
        .controller('LoginCtrl', LoginCtrl);

    LoginCtrl.$inject = ['$window', 'loginSrv', 'notify'];

    function LoginCtrl($window, loginSrv, notify) {
        /* jshint validthis:true */
        var vm = this;
        vm.validateUser = function () {
             loginSrv.validateLogin(vm.username, vm.password).then(function (data) {          
                if (data.isValidUser) {    
                    $window.location.href = '/index.html';
                }
                else
                    alert('Login incorrect');
            });
        }
    }
})();
</code></pre>
","27941966"
"Create <div> and append <div> dynamically","296815","","<p>I am trying to create a <code>&lt;div&gt;</code> dynamically, with an appended <code>&lt;div&gt;</code> inside. I have this so far which works:</p>

<pre><code>var iDiv = document.createElement('div');
iDiv.id = 'block';
iDiv.className = 'block';
document.getElementsByTagName('body')[0].appendChild(iDiv);
</code></pre>

<p>I am just having trouble creating and appending the second div to the first div.</p>

<p>I essentially want to do this as the final markup:</p>

<pre><code>&lt;div id=""block"" class=""block""&gt;
   &lt;div class=""block-2""&gt;&lt;/div&gt;
&lt;/div&gt;
</code></pre>
","<p>Use the same process. You already have the variable <code>iDiv</code> which still refers to the original element <code>&lt;div id='block'&gt;</code> you've created. You just need to create another <code>&lt;div&gt;</code> and call <code>appendChild()</code>.</p>

<pre><code>// Your existing code unmodified...
var iDiv = document.createElement('div');
iDiv.id = 'block';
iDiv.className = 'block';
document.getElementsByTagName('body')[0].appendChild(iDiv);

// Now create and append to iDiv
var innerDiv = document.createElement('div');
innerDiv.className = 'block-2';

// The variable iDiv is still good... Just append to it.
iDiv.appendChild(innerDiv);
</code></pre>

<p><a href=""http://jsfiddle.net/W4Sup/1/"" rel=""noreferrer"">http://jsfiddle.net/W4Sup/1/</a></p>

<p>The order of event creation doesn't have to be as I have it above. You can alternately append the new <code>innerDiv</code> to the outer div before you add both to the <code>&lt;body&gt;</code>.</p>

<pre><code>var iDiv = document.createElement('div');
iDiv.id = 'block';
iDiv.className = 'block';

// Create the inner div before appending to the body
var innerDiv = document.createElement('div');
innerDiv.className = 'block-2';

// The variable iDiv is still good... Just append to it.
iDiv.appendChild(innerDiv);

// Then append the whole thing onto the body
document.getElementsByTagName('body')[0].appendChild(iDiv);
</code></pre>
","14004145"
"How do you automatically set the focus to a textbox when a web page loads?","296763","","<p>How do you automatically set the focus to a textbox when a web page loads?</p>

<p>Is there an HTML tag to do it or does it have to be done via Javascript?</p>
","<p>Any javascript book will tell you not to put handlers on the body element like that.</p>

<p>I'f you're using jquery:</p>

<pre><code>$(function() {
  $(""#Box1"").focus();
});
</code></pre>

<p>or prototype:</p>

<pre><code>Event.observe(window, 'load', function() {
  $(""Box1"").focus();
});
</code></pre>

<p>or plain javascript:</p>

<pre><code>window.onload = function() {
  document.getElementById(""Box1"").focus();
};
</code></pre>

<p>though keep in mind that this will replace other on load handlers, so look up addLoadEvent() in google for a safe way to append onload handlers rather than replacing.</p>
","45863"
"How to scroll to specific item using jQuery?","296566","","<p>I have a big table with vertical scroll bar.
I would like to scroll to a specific line in this table using jQuery/Javascript.</p>

<p>Are there built-in methods to do this?</p>

<p><a href=""http://jsfiddle.net/xY7tx/"" rel=""noreferrer"">Here is a little example to play with.</a><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-css lang-css prettyprint-override""><code>div {
    width: 100px;
    height: 70px;
    border: 1px solid blue;
    overflow: auto;
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div&gt;
    &lt;table id=""my_table""&gt;
        &lt;tr id='row_1'&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;
        &lt;tr id='row_2'&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;
        &lt;tr id='row_3'&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;
        &lt;tr id='row_4'&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;
        &lt;tr id='row_5'&gt;&lt;td&gt;5&lt;/td&gt;&lt;/tr&gt;
        &lt;tr id='row_6'&gt;&lt;td&gt;6&lt;/td&gt;&lt;/tr&gt;
        &lt;tr id='row_7'&gt;&lt;td&gt;7&lt;/td&gt;&lt;/tr&gt;
        &lt;tr id='row_8'&gt;&lt;td&gt;8&lt;/td&gt;&lt;/tr&gt;
        &lt;tr id='row_9'&gt;&lt;td&gt;9&lt;/td&gt;&lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
</p>
","<p>Dead simple. <strong>No plugins needed</strong>.</p>

<pre><code>var $container = $('div'),
    $scrollTo = $('#row_8');

$container.scrollTop(
    $scrollTo.offset().top - $container.offset().top + $container.scrollTop()
);

// Or you can animate the scrolling:
$container.animate({
    scrollTop: $scrollTo.offset().top - $container.offset().top + $container.scrollTop()
});​
</code></pre>

<p>Here is a <a href=""http://jsfiddle.net/xY7tx/406/"" rel=""noreferrer"">working example</a>.</p>

<p><a href=""http://api.jquery.com/scrollTop/"" rel=""noreferrer"">Documentation for <code>scrollTop</code></a>.</p>
","2906009"
"JavaScript seconds to time string with format hh:mm:ss","296299","","<p>I want to convert a duration of time, i.e., number of seconds to colon-separated time string (hh:mm:ss)</p>

<p>I found some useful answers here but they all talk about converting to x hours and x minutes format.</p>

<p>So is there a tiny snippet that does this in jQuery or just raw JavaScript?</p>
","<pre><code>String.prototype.toHHMMSS = function () {
    var sec_num = parseInt(this, 10); // don't forget the second param
    var hours   = Math.floor(sec_num / 3600);
    var minutes = Math.floor((sec_num - (hours * 3600)) / 60);
    var seconds = sec_num - (hours * 3600) - (minutes * 60);

    if (hours   &lt; 10) {hours   = ""0""+hours;}
    if (minutes &lt; 10) {minutes = ""0""+minutes;}
    if (seconds &lt; 10) {seconds = ""0""+seconds;}
    return hours+':'+minutes+':'+seconds;
}
</code></pre>

<p>You can use it now like:</p>

<pre><code>alert(""5678"".toHHMMSS());
</code></pre>
","6313008"
"Getting the first index of an object","296288","","<p>Consider:</p>

<pre><code>var object = {
  foo: {},
  bar: {},
  baz: {}
}
</code></pre>

<p>How would I do this:</p>

<pre><code>var first = object[0];
console.log(first);
</code></pre>

<p>Obviously, that doesn’t work because the first index is named <code>foo</code>, 
not <code>0</code>.</p>

<pre><code>console.log(object['foo']);
</code></pre>

<p>works, but I don’t know it’s named foo. It could be named anything. I just want the first.</p>
","<p>If the order of the objects is significant, you should revise your JSON schema to store the objects in an array:</p>

<pre><code>[
    {""name"":""foo"", ...},
    {""name"":""bar"", ...},
    {""name"":""baz"", ...}
]
</code></pre>

<p>or maybe:</p>

<pre><code>[
    [""foo"", {}],
    [""bar"", {}],
    [""baz"", {}]
]
</code></pre>

<p>As Ben Alpert points out, properties of Javascript objects are unordered, and your code is broken if you expect them to enumerate in the same order that they are specified in the object literal—there is no ""first"" property.</p>
","909044"
"How to get height of entire document with JavaScript?","296242","","<p>Some documents I can't get the height of the document (to position something absolutely at the very bottom). Additionally, a padding-bottom on  seems to do nothing on these pages, but do on the pages where height will return. Case(s) in point:</p>

<p><a href=""http://fandango.com"" rel=""noreferrer"">http://fandango.com</a><br>
<a href=""http://paperbackswap.com"" rel=""noreferrer"">http://paperbackswap.com</a></p>

<p>On Fandango<br>
jQuery's <code>$(document).height();</code> returns correct value<br>
<code>document.height</code> returns 0<br>
<code>document.body.scrollHeight</code> returns 0</p>

<p>On Paperback Swap:<br>
jQuery's <code>$(document).height();</code> TypeError: <code>$(document)</code> is null<br>
<code>document.height</code> returns an incorrect value<br>
<code>document.body.scrollHeight</code> returns an incorrect value</p>

<p>Note: I have browser level permissions, if there is some trick there.</p>
","<p>Document sizes are a browser compatibility nightmare because, although all browsers expose clientHeight and scrollHeight properties, they don't all agree how the values are calculated.</p>

<p>There used to be a complex best-practice formula around for how you tested for correct height/width. This involved using document.documentElement properties if available or falling back on document properties and so on. </p>

<p>The simplest way to get correct height is to get all height values found on document, or documentElement, and use the highest one. This is basically what jQuery does:</p>

<pre><code>var body = document.body,
    html = document.documentElement;

var height = Math.max( body.scrollHeight, body.offsetHeight, 
                       html.clientHeight, html.scrollHeight, html.offsetHeight );
</code></pre>

<p>A quick test with Firebug + <a href=""http://www.learningjquery.com/2006/12/jquerify-bookmarklet"" rel=""noreferrer"">jQuery bookmarklet</a> returns the correct height for both cited pages, and so does the code example.</p>

<p>Note that testing the height of the document before the document is ready will always result in a 0. Also, if you load more stuff in, or the user resizes the window, you may need to re-test. Use <code>onload</code> or a <a href=""https://stackoverflow.com/search?q=document+ready"">document ready</a> event if you need this at load time, otherwise just test whenever you need the number.</p>
","1147768"
"How do I replace all line breaks in a string with <br /> tags?","295874","","<p>How can I read the line break from a value with Javascript and replace all the line breaks with <code>br</code> tags?</p>

<p>Example:</p>

<p>A variable passed from PHP as below:</p>

<pre><code>  ""This is man.

     Man like dog.
     Man like to drink.

     Man is the king.""
</code></pre>

<p>I would like my result to look something like this after the Javascript converts it:</p>

<pre><code>  ""This is man&lt;br /&gt;&lt;br /&gt;Man like dog.&lt;br /&gt;Man like to drink.&lt;br /&gt;&lt;br /&gt;Man is the king.""
</code></pre>
","<pre><code>str = str.replace(/(?:\r\n|\r|\n)/g, '&lt;br /&gt;');
</code></pre>
","784547"
"How do I split a string with multiple separators in javascript?","295435","","<p>How do I split a string with multiple separators in JavaScript?  I'm trying to split on both commas and spaces but, AFAIK, JS's split function only supports one separator.</p>
","<p>Pass in a regexp as the parameter:</p>

<pre><code>js&gt; ""Hello awesome, world!"".split(/[\s,]+/)
Hello,awesome,world!
</code></pre>

<p><strong>Edited to add:</strong></p>

<p>You can get the last element by selecting the length of the array minus 1:</p>

<pre><code>&gt;&gt;&gt; bits = ""Hello awesome, world!"".split(/[\s,]+/)
[""Hello"", ""awesome"", ""world!""]
&gt;&gt;&gt; bit = bits[bits.length - 1]
""world!""
</code></pre>

<p>... and if the pattern doesn't match:</p>

<pre><code>&gt;&gt;&gt; bits = ""Hello awesome, world!"".split(/foo/)
[""Hello awesome, world!""]
&gt;&gt;&gt; bits[bits.length - 1]
""Hello awesome, world!""
</code></pre>
","650037"
"How to count string occurrence in string?","295203","","<p>How can I count the number of times a particular string occurs in another string. For example, this is what I am trying to do in Javascript:</p>

<pre><code>var temp = ""This is a string."";
alert(temp.count(""is"")); //should output '2'
</code></pre>
","<p>The <code>g</code> in the regular expression (short for <em>global</em>) says to search the whole string rather than just find the first occurrence:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var temp = ""This is a string."";
var count = (temp.match(/is/g) || []).length;
console.log(count);</code></pre>
</div>
</div>
</p>

<p>This matches <code>is</code> twice. And, if there are no matches, it returns <code>0</code>.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var temp1 = ""Hello World!"";
var count1 = (temp1.match(/is/g) || []).length;
console.log(count1);</code></pre>
</div>
</div>
</p>
","4009768"
"Disable click outside of bootstrap modal area to close modal","294705","","<p>I am making a bootstrap website, with a couple of Bootstrap 'Modals'.
I'm trying to customize some of the default features.</p>

<p>Problem is this;
You can close the modal by clicking on the background.
Is there anyway to disable this feature?
On specifc modals only?</p>

<p><a href=""http://getbootstrap.com/javascript/#modals"" rel=""noreferrer"">Bootstrap modal page</a></p>
","<p>On Options chapter, in the page you linked, you can see the <code>backdrop</code> option. Passing this option with value <code>'static'</code> will prevent closing the modal.<br>
As @PedroVagner pointed on comments, you also can pass <code>{keyboard: false}</code> to prevent closing the modal by pressing <kbd>Esc</kbd>.  </p>

<p>If you opening the modal by js use:  </p>

<pre><code>$('#myModal').modal({backdrop: 'static', keyboard: false})  
</code></pre>

<p>If you are using data attributes, use:    </p>

<pre><code> &lt;button data-target=""#myModal"" data-toggle=""modal"" data-backdrop=""static"" data-keyboard=""false""&gt;
    Launch demo modal
 &lt;/button&gt;`
</code></pre>
","22208662"
"Easy way to turn Javascript array into comma-separated list?","294634","","<p>I have a one-dimensional array of strings in Javascript that I'd like to turn into a comma-separated list. Is there a simple way in garden-variety Javascript (or jQuery) to turn that into a comma-separated list? (I know how to iterate through the array and build the string myself by concatenation if that's the only way.)</p>
","<p>The <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/join"" rel=""noreferrer"">Array.prototype.join()</a> method:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var arr = [""Zero"", ""One"", ""Two""];

document.write(arr.join("", ""));</code></pre>
</div>
</div>
</p>
","201733"
"setTimeout or setInterval?","294405","","<p>As far as I can tell, these two pieces of javascript behave the same way:</p>

<p><strong>Option A:</strong></p>

<pre><code>function myTimeoutFunction()
{
    doStuff();
    setTimeout(myTimeoutFunction, 1000);
}

myTimeoutFunction();
</code></pre>

<p><strong>Option B:</strong></p>

<pre><code>function myTimeoutFunction()
{
    doStuff();
}

myTimeoutFunction();
setInterval(myTimeoutFunction, 1000);
</code></pre>

<p>Is there any difference between using <a href=""https://developer.mozilla.org/en/window.setTimeout"" rel=""noreferrer"">setTimeout</a> and <a href=""https://developer.mozilla.org/En/window.setInterval"" rel=""noreferrer"">setInterval</a>?</p>
","<p>They essentially try to do the same thing, but the <code>setInterval</code> approach will be more accurate than the <code>setTimeout</code> approach, since <code>setTimeout</code> waits 1000ms, runs the function and then sets another timeout. So the wait period is actually a bit more than 1000ms (or a lot more if your function takes a long time to execute).</p>

<p>Altough one might think that <code>setInterval</code> will execute <strong>exactly</strong> every 1000ms, it is important to note that <code>setInterval</code> will also delay, since JavaScript isn't a multi-threaded language, which means that - if there are other parts of the script running - the interval will have to wait for that to finish.</p>

<p>In <a href=""http://jsfiddle.net/GustvandeWal/295jqqqb/"" rel=""noreferrer"">this Fiddle</a>, you can clearly see that the timeout will fall behind, while the interval is almost all the time at almost 1 call/second (which the script is trying to do). If you change the speed variable at the top to something small like 20 (meaning it will try to run 50 times per second), the interval will never quite reach an average of 50 iterations per second.</p>

<p>The delay is almost always negligible, but if you're programming something really precise, you should go for a <em>self-adjusting timer</em> (which essentially is a timeout-based timer that constantly adjusts itself for the delay it's created) </p>
","729943"
"JSON.stringify, avoid TypeError: Converting circular structure to JSON","294352","","<p>I have a big object I want to convert to JSON and send. However it has circular structure. I want to toss whatever circular references exist and send whatever can be stringified. How do I do that?</p>

<p>Thanks.</p>

<pre><code>var obj = {
  a: ""foo"",
  b: obj
}
</code></pre>

<p>I want to stringify obj into:</p>

<pre><code>{""a"":""foo""}
</code></pre>
","<p>Use <code>JSON.stringify</code> with a custom replacer. For example:</p>

<pre><code>// Demo: Circular reference
var o = {};
o.o = o;

// Note: cache should not be re-used by repeated calls to JSON.stringify.
var cache = [];
JSON.stringify(o, function(key, value) {
    if (typeof value === 'object' &amp;&amp; value !== null) {
        if (cache.indexOf(value) !== -1) {
            // Circular reference found, discard key
            return;
        }
        // Store value in our collection
        cache.push(value);
    }
    return value;
});
cache = null; // Enable garbage collection
</code></pre>

<p>The replacer in this example is not 100% correct (depending on your definition of ""duplicate""). In the following case, a value is discarded:</p>

<pre><code>var a = {b:1}
var o = {};
o.one = a;
o.two = a;
// one and two point to the same object, but two is discarded:
JSON.stringify(o, ...);
</code></pre>

<p>But the concept stands: Use a custom replacer, and keep track of the parsed object values.</p>
","11616993"
"Calculate distance between two points in google maps V3","294250","","<p>How do you calculate the distance between two markers in Google maps V3? (Similar to the <code>distanceFrom</code> function inV2.)</p>

<p>Thanks..</p>
","<p>If you want to calculate it yourself, then you can use the Haversine formula:</p>

<pre><code>var rad = function(x) {
  return x * Math.PI / 180;
};

var getDistance = function(p1, p2) {
  var R = 6378137; // Earth’s mean radius in meter
  var dLat = rad(p2.lat() - p1.lat());
  var dLong = rad(p2.lng() - p1.lng());
  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
    Math.cos(rad(p1.lat())) * Math.cos(rad(p2.lat())) *
    Math.sin(dLong / 2) * Math.sin(dLong / 2);
  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
  var d = R * c;
  return d; // returns the distance in meter
};
</code></pre>
","1502821"
"In JavaScript can I make a ""click"" event fire programmatically for a file input element?","294240","","<p>I'd like to make a click event fire on an <code>&lt;input type=""file""&gt;</code> tag programmatically.</p>

<p>Just calling click() doesn't seem to do anything or at least it doesn't pop up a file selection dialog.</p>

<p>I've been experimenting with capturing events using listeners and redirecting the event, but I haven't been able to get that to actually perform the event like someone clicked on it.</p>
","<p>You cannot do that in all browsers, supposedly IE <em>does</em> allow it, but Mozilla and Opera do not. </p>

<p>When you compose a message in GMail, the 'attach files' feature is implemented one way for IE and any browser that supports this, and then implemented another way for Firefox and those browsers that do not.</p>

<p>I don't know why you cannot do it, but one thing that <em>is</em> a security risk, and which you are not allowed to do in any browser, is programmatically set the file name on the HTML File element.</p>
","210652"
"Detect all changes to a <input type=""text""> (immediately) using JQuery","294010","","<p>There are many ways the value of a <code>&lt;input type=""text""&gt;</code> can change, including:</p>

<ul>
<li>keypresses</li>
<li>copy/paste</li>
<li>modified with JavaScript</li>
<li>auto-completed by browser or a toolbar</li>
</ul>

<p>I want my JavaScript function to be called (with the current input value) any time it changes.  And I want it to be called right away, not just when the input loses focus.</p>

<p>I'm looking for the cleanest and most robust way to do this across all browsers (using jQuery preferably).</p>

<p>Example use case: On the <a href=""http://twitter.com/signup"" rel=""noreferrer"">Twitter Signup</a> page, the <em>username</em> field's value gets shown in the url ""<a href=""http://twitter/"" rel=""noreferrer"">http://twitter/</a><em>username</em>"" below it.</p>
","<p>Unfortunately, I think <code>setInterval</code> wins the prize:</p>

<pre><code>&lt;input type=text id=input_id /&gt;
&lt;script&gt;
setInterval(function() { ObserveInputValue($('#input_id').val()); }, 100);
&lt;/script&gt;
</code></pre>

<p>It's the cleanest solution, at only 1 line of code.  It's also the most robust, since you don't have to worry about all the different events/ways an <code>input</code> can get a value.</p>

<p>The downsides of using 'setInterval' don't seem to apply in this case:</p>

<ul>
<li><strong>The 100ms latency?</strong>  For many applications, 100ms is fast enough.</li>
<li><strong>Added load on the browser?</strong>  In general, adding lots of heavy-weight setIntervals on your page is bad.  But in this particular case, the added page load is undetectable.</li>
<li><strong>It doesn't scale to many inputs?</strong>  Most pages don't have more than a handful of inputs, which you can sniff all in the same setInterval.</li>
</ul>
","1949416"
"JavaScript code to stop form submission","293798","","<p>One way to stop form submission is to return false from your JavaScript function.</p>

<p>When the submit button is clicked, a validation function is called. I have a case in form validation. If that condition is met I call a function named <strong>returnToPreviousPage();</strong></p>

<pre><code>function returnToPreviousPage() {
    window.history.back();
}
</code></pre>

<p>I am using JavaScript and <a href=""http://en.wikipedia.org/wiki/Dojo_Toolkit"">Dojo Toolkit</a>.</p>

<p>Rather going back to the previous page, it submits the form. How can I abort this submission and return to the previous page?</p>
","<p>You can use the return value of the function to prevent the form submission</p>

<pre><code>&lt;form name=""myForm"" onsubmit=""return validateMyForm();""&gt; 
</code></pre>

<p>and function like</p>

<pre><code>&lt;script type=""text/javascript""&gt;
function validateMyForm()
{
  if(check if your conditions are not satisfying)
  { 
    alert(""validation failed false"");
    returnToPreviousPage();
    return false;
  }

  alert(""validations passed"");
  return true;
}
&lt;/script&gt;
</code></pre>

<p>In case of Chrome 27.0.1453.116 m if above code does not work, please <a href=""http://www.htmlgoodies.com/beyond/javascript/advanced-javascript-event-handling.html"">set the event handler's parameter's returnValue</a> field to false to get it to work.</p>

<p>Thanks Sam for sharing information.</p>

<p>EDIT : </p>

<p>Thanks to Vikram for his workaround for if validateMyForm() returns false:</p>

<pre><code> &lt;form onsubmit=""event.preventDefault(); validateMyForm();""&gt;
</code></pre>

<p>where validateMyForm() is a function that returns false if validation fails. The key point is to use the name event. We cannot use for e.g. e.preventDefault()</p>
","8664680"
"make iframe height dynamic based on content inside- JQUERY/Javascript","293709","","<p>I am loading an aspx web page in an iframe. The content in the Iframe can be of more height than the iframe's height. The iframe should not have scroll bars.</p>

<p>I have a wrapper <code>div</code> tag inside the iframe which basically is all the content.  I wrote some jQuery to make the resize happen :</p>

<pre><code>$(""#TB_window"", window.parent.document).height($(""body"").height() + 50);
</code></pre>

<p>where
<code>TB_window</code> is the div in which the <code>Iframe</code> is contained.</p>

<p><code>body</code> - the body tag of the aspx in the iframe.</p>

<p>This script is attached to the iframe content. I am getting the <code>TB_window</code> element from the parent page. While this works fine on Chrome, but the TB_window collapses in Firefox. I am really confused/lost on why that happens.</p>
","<p>You can retrieve the height of the <code>IFRAME</code>'s content by using:
<code>contentWindow.document.body.scrollHeight</code></p>

<p>After the <code>IFRAME</code> is loaded, you can then change the height by doing the following:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
  function iframeLoaded() {
      var iFrameID = document.getElementById('idIframe');
      if(iFrameID) {
            // here you can make the height, I delete it first, then I make it again
            iFrameID.height = """";
            iFrameID.height = iFrameID.contentWindow.document.body.scrollHeight + ""px"";
      }   
  }
&lt;/script&gt;   
</code></pre>

<p>Then, on the <code>IFRAME</code> tag, you hook up the handler like this:</p>

<pre><code>&lt;iframe id=""idIframe"" onload=""iframeLoaded()"" ...
</code></pre>

<p>I had a situation a while ago where I additionally needed to call <code>iframeLoaded</code> from the <code>IFRAME</code> itself after a form-submission occurred within. You can accomplish that by doing the following within the <code>IFRAME</code>'s content scripts:</p>

<pre><code>parent.iframeLoaded();
</code></pre>
","9163087"
"How to add target=""_blank"" to JavaScript window.location?","293654","","<p>The following sets the target to ""_blank"":</p>

<pre><code>if (key==""smk"") { window.location=""http://www.smkproduction.eu5.org""; target=""_blank""; done=1; }
</code></pre>

<p>But this doesn't seem to work. How do I launch the link in a new tab?</p>

<p>Here is my code:</p>

<pre><code>&lt;HEAD&gt;
&lt;script LANGUAGE=""JavaScript""&gt;
&lt;!-- Begin
function ToKey(){
var done=0;
var key=document.tokey.key.value;
key=key.toLowerCase();
if (key==""smk"") { window.location=""http://www.smkproduction.eu5.org""; target=""_blank"" done=1; }
if (done==0) { alert(""Kodi nuk është valid!""); }
}
// End --&gt;
&lt;/SCRIPT&gt;

&lt;!-- STEP TWO: Paste this code into the BODY of your HTML document  --&gt;

&lt;BODY&gt;

&lt;center&gt;
&lt;form name=""tokey""&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
Type the key
&lt;/td&gt;
&lt;td&gt;
&lt;input type=""text"" name=""key""&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;input type=""button"" value=""Go"" onClick=""ToKey()""&gt;
&lt;/td&gt;
&lt;/table&gt;
&lt;/form&gt;
</code></pre>
","<p><code>window.location</code> sets the url of your current window.  To open a new window, you need to use <code>window.open</code>.  This should work:</p>

<pre><code>function ToKey(){
    var key = document.tokey.key.value.toLowerCase();
    if (key == ""smk"") {
        window.open('http://www.smkproduction.eu5.org','_blank');
    } else {
        alert(""Kodi nuk është valid!"");
    }
}
</code></pre>
","18476431"
"How can I trigger an onchange event manually?","293538","","<p>I'm setting a date-time textfield value via a calendar widget. Obviously, the calendar widget does something like this :</p>

<pre><code>document.getElementById('datetimetext').value = date_value;
</code></pre>

<p>What I want is :
On changing value in the date-time textfield I need to reset some other fields in the page. I've added a onchange event listener to the datetimetext field which is not getting triggered, because I guess <code>onchange</code> gets triggered only when the element gets focus &amp; its value is changed on losing focus.</p>

<p>Hence I'm looking for a way to manually trigger this <code>onchange</code> event (which I guess should take care of checking the value difference in the text field).</p>

<p>Any ideas ?</p>
","<p>There's a couple of ways you can do this.  If the <code>onchange</code> listener is a function set via the <code>element.onchange</code> property and you're not bothered about the event object or bubbling/propagation, the easiest method is to just call that function:</p>

<pre><code>element.onchange();
</code></pre>

<p>If you need it to simulate the real event in full, or if you set the event via the html attribute or <code>addEventListener</code>/<code>attachEvent</code>, you need to do a bit of feature detection to correctly fire the event:</p>

<pre><code>if (""createEvent"" in document) {
    var evt = document.createEvent(""HTMLEvents"");
    evt.initEvent(""change"", false, true);
    element.dispatchEvent(evt);
}
else
    element.fireEvent(""onchange"");
</code></pre>
","2856602"
"$on and $broadcast in angular","293447","","<p>I have a footerController and codeScannerController with different views.</p>

<pre><code>angular.module('myApp').controller('footerController', [""$scope"", function($scope) {}]);

angular.module('myApp').controller('codeScannerController', [""$scope"", function($scope) {
console.log(""start"");
$scope.startScanner = function(){...
</code></pre>

<p>When I click on a <code>&lt;li&gt;</code> in footer.html I should get this event in codeScannerController.</p>

<pre><code>&lt;li class=""button"" ng-click=""startScanner()""&gt;3&lt;/li&gt;
</code></pre>

<p>I think it can be realised with <code>$on</code> and <code>$broadcast</code>, but I don't know how and can't find examples anywhere.</p>
","<p>If you want to <code>$broadcast</code> use the <code>$rootScope</code>:</p>

<pre><code>$scope.startScanner = function() {

    $rootScope.$broadcast('scanner-started');
}
</code></pre>

<p>And then to receive, use the <code>$scope</code> of your controller:</p>

<pre><code>$scope.$on('scanner-started', function(event, args) {

    // do what you want to do
});
</code></pre>

<p>If you want you can pass arguments when you <code>$broadcast</code>:</p>

<pre><code>$rootScope.$broadcast('scanner-started', { any: {} });
</code></pre>

<p>And then receive them:</p>

<pre><code>$scope.$on('scanner-started', function(event, args) {

    var anyThing = args.any;
    // do what you want to do
});
</code></pre>

<p>Documentation for this inside the <a href=""https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$on"">Scope docs</a>.</p>
","19446975"
"How to export JavaScript array info to csv (on client side)?","293324","","<p>I know there are lot of questions of this nature but I need to do this using JavaScript. I am using <code>Dojo 1.8</code> and have all the attribute info in array, which looks like this:</p>

<pre><code>[[""name1"", ""city_name1"", ...][""name2"", ""city_name2"", ...]]
</code></pre>

<p>Any idea how I can export this to <code>CSV</code> on the client side?</p>
","<p>You can do this in native JavaScript. You'll have to parse your data into correct CSV format as so (assuming you are using an array of arrays for your data as you have described in the question):</p>

<pre><code>const rows = [[""name1"", ""city1"", ""some other info""], [""name2"", ""city2"", ""more info""]];
let csvContent = ""data:text/csv;charset=utf-8,"";
rows.forEach(function(rowArray){
   let row = rowArray.join("","");
   csvContent += row + ""\r\n""; // add carriage return
}); 
</code></pre>

<p>Then you can use JavaScript's <code>window.open</code> and <code>encodeURI</code> functions to download the CSV file like so:</p>

<pre><code>var encodedUri = encodeURI(csvContent);
window.open(encodedUri);
</code></pre>

<p><h3>Edit:</h3> If you want to give your file a specific name, you have to do things a little differently since this is not supported accessing a data URI using the <code>window.open</code> method. In order to achieve this, you can create a hidden <code>&lt;a&gt;</code> DOM node and set its <code>download</code> attribute as follows:</p>

<pre><code>var encodedUri = encodeURI(csvContent);
var link = document.createElement(""a"");
link.setAttribute(""href"", encodedUri);
link.setAttribute(""download"", ""my_data.csv"");
document.body.appendChild(link); // Required for FF

link.click(); // This will download the data file named ""my_data.csv"".
</code></pre>
","14966131"
"How to write an inline IF statement in JavaScript?","293041","","<p>How can I use an inline <code>if</code> statement in JavaScript? Is there an inline <code>else</code> statement too?</p>

<p>Something like this:</p>

<pre><code>var a = 2;
var b = 3;

if(a &lt; b) {
    // do something
}
</code></pre>
","<p>You don't necessarily need jQuery.  JavaScript alone will do this.</p>

<pre><code>var a = 2;
var b = 3;    
var c = ((a &lt; b) ? 'minor' : 'major');
</code></pre>

<p>The <code>c</code> variable will be <code>minor</code> if the value is <code>true</code>, and <code>major</code> if the value is <code>false</code>.</p>

<hr>

<p>This is known as a  Conditional (ternary) Operator.</p>

<p><a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Conditional_Operator"" rel=""noreferrer"">https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Conditional_Operator</a></p>
","10270383"
"Get div height with plain JavaScript","292939","","<p>Any ideas on how to get a div's height without using jQuery?</p>

<p>I was searching Stack Overflow for this question and it seems like every answer is pointing to jQuery's <code>.height()</code>.</p>

<p>I tried something like <code>myDiv.style.height</code>, but it returned nothing, even when my div had its <code>width</code> and <code>height</code> set in CSS.</p>
","<pre><code>var clientHeight = document.getElementById('myDiv').clientHeight;
</code></pre>

<p>or</p>

<pre><code>var offsetHeight = document.getElementById('myDiv').offsetHeight;
</code></pre>

<p><code>clientHeight</code> includes padding.</p>

<p><code>offsetHeight</code> includes padding, scrollBar and borders.</p>
","15615701"
"What's the best way to detect a 'touch screen' device using JavaScript?","292926","","<p>I've written a jQuery plug-in that's for use on both desktop and mobile devices. I wondered if there is a way with JavaScript to detect if the device has touch screen capability. I'm using jquery-mobile.js to detect the touch screen events and it works on iOS, Android etc., but I'd also like to write conditional statements based on whether the user's device has a touch screen.</p>

<p>Is that possible?</p>
","<p><strong>Update: Please read <a href=""https://stackoverflow.com/a/4819886/359287"">blmstr's answer</a> below before pulling a whole feature detection library into your project. Detecting actual touch support is more complex, and Modernizr only covers a basic use case.</strong></p>

<p><a href=""http://www.modernizr.com/"" rel=""noreferrer"">Modernizr</a> is a great, lightweight way to do all kinds of feature detection on any site.</p>

<p>It simply adds classes to the html element for each feature.</p>

<p>You can then target those features easily in CSS and JS. For example:</p>

<pre><code>html.touch div {
    width: 480px;
}

html.no-touch div {
    width: auto;
}
</code></pre>

<p>And Javascript (jQuery example):</p>

<pre><code>$('html.touch #popup').hide();
</code></pre>
","4820056"
"How to check if a variable is not null?","292604","","<p>I know that below are the two ways in JavaScript to check whether a variable is not <code>null</code>, but I’m confused which is the best practice to use.</p>

<p>Should I do:</p>

<pre><code>if (myVar) {...}
</code></pre>

<p>or</p>

<pre><code>if (myVar !== null) {...}
</code></pre>
","<p>They are not equivalent. The first will execute the block following the <code>if</code> statement if <code>myVar</code> is <em>truthy</em> (i.e. evaluates to <code>true</code> in a conditional), while the second will execute the block if <code>myVar</code> is any value other than <code>null</code>.</p>

<p>The only values that are not truthy in JavaScript are the following (a.k.a. <em>falsy</em> values):</p>

<ul>
<li><code>null</code></li>
<li><code>undefined</code></li>
<li><code>0</code></li>
<li><code>""""</code> (the empty string)</li>
<li><code>false</code></li>
<li><code>NaN</code></li>
</ul>
","4361614"
"Handle file download from ajax post","292344","","<p>I have a javascript app that sends ajax POST requests to a certain URL. Response might be a JSON string or it might be a file (as an attachment). I can easily detect Content-Type and Content-Disposition in my ajax call, but once I detect that the response contains a file, how do I offer the client to download it? I've read a number of similar threads here but none of them provide the answer I'm looking for. </p>

<p>Please, please, please do not post answers suggesting that I shouldn't use ajax for this or that I should redirect the browser, because none of this is an option. Using a plain HTML form is also not an option. What I do need is to show a download dialog to the client. Can this be done and how?</p>

<p>EDIT:</p>

<p>Apparently, this cannot be done, but there is a simple workaround, as suggested by the accepted answer. For anyone who comes across this issue in the future, here's how I solved it:</p>

<pre><code>$.ajax({
    type: ""POST"",
    url: url,
    data: params,
    success: function(response, status, request) {
        var disp = request.getResponseHeader('Content-Disposition');
        if (disp &amp;&amp; disp.search('attachment') != -1) {
            var form = $('&lt;form method=""POST"" action=""' + url + '""&gt;');
            $.each(params, function(k, v) {
                form.append($('&lt;input type=""hidden"" name=""' + k +
                        '"" value=""' + v + '""&gt;'));
            });
            $('body').append(form);
            form.submit();
        }
    }
});
</code></pre>

<p>So basically, just generate a HTML form with the same params that were used in AJAX request and submit it. </p>
","<p>Create a form, use the POST method, submit the form - there's no need for an iframe.  When the server page responds to the request, write a response header for the mime type of the file, and it will present a download dialog - I've done this a number of times.</p>

<p>You want content-type of application/download - just search for how to provide a download for whatever language you're using.</p>
","16086435"
"Calling a function every 60 seconds","292072","","<p>Using <code>setTimeout()</code> it is possible to launch a function at a specified time:</p>

<pre><code>setTimeout(function, 60000);
</code></pre>

<p>But what if I would like to launch the function multiple times? Every time a time interval passes, I would like to execute the function (every 60 seconds, let's say).</p>
","<p>If you don't care if the code within the <code>timer</code> may take longer than your interval, use <code>setInterval()</code>:</p>

<pre><code>setInterval(function, delay)
</code></pre>

<p>That fires the function passed in as first parameter over and over.</p>

<p>A better approach is, to use <code>setTimeout</code> along with a <code>self-executing anonymous</code> function:</p>

<pre><code>(function(){
    // do some stuff
    setTimeout(arguments.callee, 60000);
})();
</code></pre>

<p>that guarantees, that the next call is not made before your code was executed. I used <code>arguments.callee</code> in this example as function reference. It's a better way to give the function a name and call that within <code>setTimeout</code> because <code>arguments.callee</code> is deprecated in ecmascript 5.</p>
","3138784"
"How to declare a global variable in JavaScript?","291858","","<p>How can I declare a global variable in JavaScript?</p>
","<p>If you have to generate global variables in production code (which should be avoided) <strong>always</strong> declare them <strong>explicitly</strong>:</p>

<pre><code>window.globalVar = ""This is global!"";
</code></pre>

<p>While it is possible to define a global variable by just omitting <code>var</code> (assuming there is no local variable of the same name), doing so generates an <em>implicit</em> global, which is a bad thing to do and would generate an error in <em>strict mode</em>.</p>
","3352033"
"Creating a textarea with auto-resize","291805","","<p>There was <a href=""https://stackoverflow.com/questions/7477/autosizing-textarea"">another thread about this</a>, which I've tried. But there is one problem: the textarea doesn't shrink if you delete the content. I can't find any way to shrink it to the correct size - the clientHeight value comes back as the full size of the textarea, not its contents.</p>

<p>The code from that page is below. I'd appreciate any help or pointers.</p>

<pre><code>function FitToContent(id, maxHeight)
{
   var text = id &amp;&amp; id.style ? id : document.getElementById(id);
   if ( !text )
      return;

   var adjustedHeight = text.clientHeight;
   if ( !maxHeight || maxHeight &gt; adjustedHeight )
   {
      adjustedHeight = Math.max(text.scrollHeight, adjustedHeight);
      if ( maxHeight )
         adjustedHeight = Math.min(maxHeight, adjustedHeight);
      if ( adjustedHeight &gt; text.clientHeight )
         text.style.height = adjustedHeight + ""px"";
   }
}

window.onload = function() {
    document.getElementById(""ta"").onkeyup = function() {
      FitToContent( this, 500 )
    };
}
</code></pre>
","<p>This works for me (Firefox 3.6/4.0 and Chrome 10/11):</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var observe;
if (window.attachEvent) {
    observe = function (element, event, handler) {
        element.attachEvent('on'+event, handler);
    };
}
else {
    observe = function (element, event, handler) {
        element.addEventListener(event, handler, false);
    };
}
function init () {
    var text = document.getElementById('text');
    function resize () {
        text.style.height = 'auto';
        text.style.height = text.scrollHeight+'px';
    }
    /* 0-timeout to get the already changed text */
    function delayedResize () {
        window.setTimeout(resize, 0);
    }
    observe(text, 'change',  resize);
    observe(text, 'cut',     delayedResize);
    observe(text, 'paste',   delayedResize);
    observe(text, 'drop',    delayedResize);
    observe(text, 'keydown', delayedResize);

    text.focus();
    text.select();
    resize();
}</code></pre>
<pre class=""snippet-code-css lang-css prettyprint-override""><code>textarea {
    border: 0 none white;
    overflow: hidden;
    padding: 0;
    outline: none;
    background-color: #D0D0D0;
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;body onload=""init();""&gt;
&lt;textarea rows=""1"" style=""height:1em;"" id=""text""&gt;&lt;/textarea&gt;
&lt;/body&gt;</code></pre>
</div>
</div>
</p>

<p><em>If you want try it on <a href=""http://jsfiddle.net/hmelenok/WM6Gq/"">jsfiddle</a></em>
It starts with a single line and grows only the exact amount necessary. It is ok for a single <code>textarea</code>, but I wanted to write something where I would have many many many such <code>textarea</code>s (about as much as one would normally have lines in a large text document). In that case it is really slow. (In Firefox it's insanely slow.) So I really would like an approach that uses pure CSS. This would be possible with <code>contenteditable</code>, but I want it to be plaintext-only.</p>
","5346855"
"Check if div with certain class name exists","291281","","<p>Using jQuery I'm programmatically generating a bunch of <code>div</code>'s like this:</p>

<pre><code>&lt;div class=""mydivclass"" id=""myid1""&gt;Some Text1&lt;/div&gt;
&lt;div class=""mydivclass"" id=""myid2""&gt;Some Text2&lt;/div&gt;
</code></pre>

<p>Somewhere else in my code I need to detect if these DIVs exist. The class name for the divs is the same but the ID changes for each div. Any idea how to detect them using jQuery?</p>
","<p>You can simplify this by checking the first object that is returned from JQuery like so:</p>

<pre><code>if ($("".mydivclass"")[0]){
    // Do something if class exists
} else {
    // Do something if class does not exist
}
</code></pre>

<p>In this case if there is a truthy value at the first (<code>[0]</code>) index, then assume class exists.</p>

<p><strong>Edit 04/10/2013:</strong> I've created a jsperf test case <a href=""http://jsperf.com/check-if-div-exists"">here</a>.</p>
","5783355"
"How to remove all line breaks from a string?","291067","","<p>I have a text in a textarea and I read it out using the .value attribute.
Now I would like to remove all linebreaks(the character that is produced when you press enter) from my text now using .replace with a regular expression, but how do I indicate a linebreak in a regex?
If that is not possible, is there any other way?</p>
","<p>This is probably a FAQ.  Anyhow, line breaks (better: newlines) can be one of Carriage Return (CR, <code>\r</code>, on older Macs), Line Feed (LF, <code>\n</code>, on Unices incl. Linux) or CR followed by LF (<code>\r\n</code>, on WinDOS). (Contrary to another answer, this has <em>nothing</em> to do with character encoding.)</p>

<p>Therefore, the most efficient <code>RegExp</code> literal to match all variants is</p>

<pre><code>/\r?\n|\r/
</code></pre>

<p>If you want to match all newlines in a string, use a global match,</p>

<pre><code>/\r?\n|\r/g
</code></pre>

<p>respectively.  Then proceed with the <code>replace</code> method as suggested in several other answers. (Probably you do <em>not</em> want to remove the newlines, but replace them with other whitespace, for example the space character, so that words remain intact.)</p>
","10805292"
"HTTP GET Request in Node.js Express","290589","","<p>How can I make an HTTP request from within node/express? I need to connect to another service. I am hoping the call is async and that the callback contains the remote servers response.</p>
","<p>Here's code from a sample of mine.  It's async and returns a JSON object.  It could do any get request.  Note there's more optimal ways (just a sample) - for example, instead of concatenating the chunks you put into an array and join it etc...  Hopefully, it gets you started in the right direction:</p>

<pre><code>var http = require(""http"");
var https = require(""https"");

/**
 * getJSON:  REST get request returning JSON object(s)
 * @param options: http options object
 * @param callback: callback to pass the results JSON object(s) back
 */
exports.getJSON = function(options, onResult)
{
    console.log(""rest::getJSON"");

    var port = options.port == 443 ? https : http;
    var req = port.request(options, function(res)
    {
        var output = '';
        console.log(options.host + ':' + res.statusCode);
        res.setEncoding('utf8');

        res.on('data', function (chunk) {
            output += chunk;
        });

        res.on('end', function() {
            var obj = JSON.parse(output);
            onResult(res.statusCode, obj);
        });
    });

    req.on('error', function(err) {
        //res.send('error: ' + err.message);
    });

    req.end();
};
</code></pre>

<p>It's called by creating an options objects like:</p>

<pre><code>var options = {
    host: 'somesite.com',
    port: 443,
    path: '/some/path',
    method: 'GET',
    headers: {
        'Content-Type': 'application/json'
    }
};
</code></pre>

<p>and providing a callback function.</p>

<p>For example, in a service, I require the rest module above and then do this.</p>

<pre><code>rest.getJSON(options, function(statusCode, result) {
    // I could work with the result html/json here.  I could also just return it
    console.log(""onResult: ("" + statusCode + "")"" + JSON.stringify(result));
    res.statusCode = statusCode;
    res.send(result);
});
</code></pre>

<p>UPDATE:</p>

<p>If you're looking for async await (linear no callback), promises, compile time support and intellisense, we create a lightweight http and rest client that fits that bill:</p>

<p><a href=""https://github.com/Microsoft/typed-rest-client"" rel=""noreferrer"">Microsoft typed-rest-client</a></p>
","9577651"
"Replacing spaces with underscores in JavaScript?","290173","","<p>I'm trying to use this code to replace spaces with _, it works for the first space in the string but all the other instances of spaces remain unchanged. Anybody know why?</p>

<pre><code>function updateKey()
{
    var key=$(""#title"").val();
    key=key.replace("" "",""_"");
    $(""#url_key"").val(key);
}
</code></pre>
","<p>Try <code>.replace(/ /g,""_"");</code> </p>

<p><em>Edit</em>: or <code>.split(' ').join('_')</code> if you have an aversion to REs</p>

<p><em>Edit</em>: <a href=""http://ejohn.org/blog/javascript-micro-templating/"" rel=""noreferrer"">John Resig said</a>:</p>

<blockquote>
  <p>If you're searching and replacing
  through a string with a static search
  and a static replace it's faster to
  perform the action with
  .split(""match"").join(""replace"") -
  which seems counter-intuitive but it
  manages to work that way in most
  modern browsers. (There are changes
  going in place to grossly improve the
  performance of .replace(/match/g,
  ""replace"") in the next version of
  Firefox - so the previous statement
  won't be the case for long.)</p>
</blockquote>
","441035"
"jQuery counting elements by class; what is the best way to implement this?","290079","","<p>What I'm trying to do is to count all of the elements in the current page with the same class and then I'm going to use it to be added onto a name for an input form. Basically I'm allowing users to click on a <code>&lt;span&gt;</code> and then by doing so add another one for more of the same type of items. But I can't think of a way to count all of these simply with jQuery/JavaScript.</p>

<p>I was going to then name the item as something like <code>name=""whatever(total+1)""</code>, if anyone has a simple way to do this I'd be extremely grateful as JavaScript isn't exactly my native tongue.</p>
","<p>Should just be something like:</p>

<pre><code>// Gets the number of elements with class yourClass
var numItems = $('.yourclass').length
</code></pre>

<p><br /></p>

<hr>

<p><br />
As a side-note, it is often beneficial to check the length property before chaining a lot of functions calls on a jQuery object, to ensure that we actually have some work to perform. See below:</p>

<pre><code>var $items = $('.myclass');
// Ensure we have at least one element in $items before setting up animations
// and other resource intensive tasks.
if($items.length)
{
  $items.animate(/* */)
    // It might also be appropriate to check that we have 2 or more
    // elements returned by the filter-call before animating this subset of 
    // items.
    .filter(':odd')
      .animate(/* */)
      .end()
    .promise()
    .then(function () { 
       $items.addClass('all-done');
    });
}
</code></pre>
","2727318"
"The simplest possible JavaScript countdown timer?","289853","","<p>Just wanted to ask how to create the simplest possible countdown timer.</p>

<p>There'll be a sentence on the site saying: </p>

<blockquote>
  <p>""Registration closes in 05:00 minutes!""</p>
</blockquote>

<p>So, what I want to do is to create a simple js countdown timer that goes from ""05:00"" to ""00:00"" and then resets to ""05:00"" once it ends.</p>

<p>I was going through some answers before, but they all seem too intense (Date objects, etc.) for what I want to do.</p>
","<p>I have two demos, one with <code>jQuery</code> and one without. Neither use date functions and are about as simple as it gets.</p>

<p><a href=""http://jsfiddle.net/wr1ua0db/17/"" rel=""noreferrer""><strong>Demo with vanilla JavaScript</strong></a></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function startTimer(duration, display) {
    var timer = duration, minutes, seconds;
    setInterval(function () {
        minutes = parseInt(timer / 60, 10)
        seconds = parseInt(timer % 60, 10);

        minutes = minutes &lt; 10 ? ""0"" + minutes : minutes;
        seconds = seconds &lt; 10 ? ""0"" + seconds : seconds;

        display.textContent = minutes + "":"" + seconds;

        if (--timer &lt; 0) {
            timer = duration;
        }
    }, 1000);
}

window.onload = function () {
    var fiveMinutes = 60 * 5,
        display = document.querySelector('#time');
    startTimer(fiveMinutes, display);
};</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;body&gt;
    &lt;div&gt;Registration closes in &lt;span id=""time""&gt;05:00&lt;/span&gt; minutes!&lt;/div&gt;
&lt;/body&gt;</code></pre>
</div>
</div>
</p>

<p><a href=""http://jsfiddle.net/df773p9m/4/"" rel=""noreferrer""><strong>Demo with jQuery</strong></a>   </p>

<pre><code>function startTimer(duration, display) {
    var timer = duration, minutes, seconds;
    setInterval(function () {
        minutes = parseInt(timer / 60, 10);
        seconds = parseInt(timer % 60, 10);

        minutes = minutes &lt; 10 ? ""0"" + minutes : minutes;
        seconds = seconds &lt; 10 ? ""0"" + seconds : seconds;

        display.text(minutes + "":"" + seconds);

        if (--timer &lt; 0) {
            timer = duration;
        }
    }, 1000);
}

jQuery(function ($) {
    var fiveMinutes = 60 * 5,
        display = $('#time');
    startTimer(fiveMinutes, display);
});
</code></pre>

<p><strong>However if you want a more accurate timer that is only slightly more complicated:</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function startTimer(duration, display) {
    var start = Date.now(),
        diff,
        minutes,
        seconds;
    function timer() {
        // get the number of seconds that have elapsed since 
        // startTimer() was called
        diff = duration - (((Date.now() - start) / 1000) | 0);

        // does the same job as parseInt truncates the float
        minutes = (diff / 60) | 0;
        seconds = (diff % 60) | 0;

        minutes = minutes &lt; 10 ? ""0"" + minutes : minutes;
        seconds = seconds &lt; 10 ? ""0"" + seconds : seconds;

        display.textContent = minutes + "":"" + seconds; 

        if (diff &lt;= 0) {
            // add one second so that the count down starts at the full duration
            // example 05:00 not 04:59
            start = Date.now() + 1000;
        }
    };
    // we don't want to wait a full second before the timer starts
    timer();
    setInterval(timer, 1000);
}

window.onload = function () {
    var fiveMinutes = 60 * 5,
        display = document.querySelector('#time');
    startTimer(fiveMinutes, display);
};</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;body&gt;
    &lt;div&gt;Registration closes in &lt;span id=""time""&gt;&lt;/span&gt; minutes!&lt;/div&gt;
&lt;/body&gt;</code></pre>
</div>
</div>
</p>

<p>Now that we have made a few pretty simple timers we can start to think about re-usability and separating concerns. We can do this by asking ""what should a count down timer do?""</p>

<ul>
<li>Should a count down timer count down? <strong>Yes</strong> </li>
<li>Should a count down timer know how to display itself on the DOM? <strong>No</strong>  </li>
<li>Should a count down timer know to restart itself when it reaches 0? <strong>No</strong> </li>
<li>Should a count down timer provide a way for a client to access how much time is left? <strong>Yes</strong></li>
</ul>

<p>So with these things in mind lets write a better (but still very simple) <code>CountDownTimer</code></p>

<pre><code>function CountDownTimer(duration, granularity) {
  this.duration = duration;
  this.granularity = granularity || 1000;
  this.tickFtns = [];
  this.running = false;
}

CountDownTimer.prototype.start = function() {
  if (this.running) {
    return;
  }
  this.running = true;
  var start = Date.now(),
      that = this,
      diff, obj;

  (function timer() {
    diff = that.duration - (((Date.now() - start) / 1000) | 0);

    if (diff &gt; 0) {
      setTimeout(timer, that.granularity);
    } else {
      diff = 0;
      that.running = false;
    }

    obj = CountDownTimer.parse(diff);
    that.tickFtns.forEach(function(ftn) {
      ftn.call(this, obj.minutes, obj.seconds);
    }, that);
  }());
};

CountDownTimer.prototype.onTick = function(ftn) {
  if (typeof ftn === 'function') {
    this.tickFtns.push(ftn);
  }
  return this;
};

CountDownTimer.prototype.expired = function() {
  return !this.running;
};

CountDownTimer.parse = function(seconds) {
  return {
    'minutes': (seconds / 60) | 0,
    'seconds': (seconds % 60) | 0
  };
};
</code></pre>

<p>So why is this implementation better than the others? Here are some examples of what you can do with it. Note that all but the first example can't be achieved by the <code>startTimer</code> functions.</p>

<p><a href=""http://jsfiddle.net/robbmj/czu6scth/2/"" rel=""noreferrer"">An example that displays the time in XX:XX format and restarts after reaching 00:00</a></p>

<p><a href=""http://jsfiddle.net/robbmj/vpq5toeq/2/"" rel=""noreferrer"">An example that displays the time in two different formats</a></p>

<p><a href=""http://jsfiddle.net/robbmj/vpq5toeq/4/"" rel=""noreferrer"">An example that has two different timers and only one restarts</a></p>

<p><a href=""http://jsfiddle.net/robbmj/Lzyxnaoq/2/"" rel=""noreferrer"">An example that starts the count down timer when a button is pressed</a></p>
","20618517"
"How can I override the OnBeforeUnload dialog and replace it with my own?","289733","","<p>I need to warn users about unsaved changes before they leave a page (a pretty common problem). </p>

<pre><code>window.onbeforeunload=handler
</code></pre>

<p>This works but it raises a default dialog with an irritating standard message that wraps my own text. I need to either completely replace the standard message, so my text is clear, or (even better) replace the entire dialog with a modal dialog using jQuery.</p>

<p>So far I have failed and I haven't found anyone else who seems to have an answer. Is it even possible?</p>

<p>Javascript in my page:</p>

<pre><code>&lt;script type=""text/javascript""&gt;   
   window.onbeforeunload=closeIt;
&lt;/script&gt;
</code></pre>

<p>The closeIt() function:</p>

<pre><code>function closeIt()
{
  if (changes == ""true"" || files == ""true"")
  {
      return ""Here you can append a custom message to the default dialog."";
  }
}
</code></pre>

<p>Using jQuery and jqModal I have tried this kind of thing (using a custom confirm dialog):</p>

<pre><code>$(window).beforeunload(function() {
        confirm('new message: ' + this.href + ' !', this.href);
        return false;
    });
</code></pre>

<p>which also doesn't work - I cannot seem to bind to the beforeunload event. </p>
","<p>You can't modify the default dialogue for <code>onbeforeunload</code>, so your best bet may be to work with it.</p>

<pre><code>window.onbeforeunload = function() {
    return 'You have unsaved changes!';
}
</code></pre>

<p><a href=""http://msdn.microsoft.com/en-us/library/ms536907(VS.85).aspx"" rel=""noreferrer"">Here's a reference</a> to this from Microsoft:</p>

<blockquote>
  <p>When a string is assigned to the returnValue property of window.event, a dialog box appears that gives users the option to stay on the current page and retain the string that was assigned to it. The default statement that appears in the dialog box, ""Are you sure you want to navigate away from this page? ... Press OK to continue, or Cancel to stay on the current page."", cannot be removed or altered.</p>
</blockquote>

<p>The problem seems to be:</p>

<ol>
<li>When <code>onbeforeunload</code> is called, it will take the return value of the handler as <code>window.event.returnValue</code>.</li>
<li>It will then parse the return value as a string (unless it is null).</li>
<li>Since <code>false</code> is parsed as a string, the dialogue box will fire, which will then pass an appropriate <code>true</code>/<code>false</code>.</li>
</ol>

<p>The result is, there doesn't seem to be a way of assigning <code>false</code> to <code>onbeforeunload</code> to prevent it from the default dialogue.</p>

<p>Additional notes on jQuery:</p>

<ul>
<li>Setting the event in jQuery <strong>may</strong> be problematic, as that allows other <code>onbeforeunload</code> events to occur as well. If you wish only for your unload event to occur I'd stick to plain ol' JavaScript for it.</li>
<li><p>jQuery doesn't have a shortcut for <code>onbeforeunload</code> so you'd have to use the generic <code>bind</code> syntax.</p>

<pre><code>$(window).bind('beforeunload', function() {} );
</code></pre></li>
</ul>
","276739"
"How to get the file name from a full path using JavaScript?","289713","","<p>Is there a way that I can get the last value (based on the '\' symbol) from a full path?</p>

<p>Example:</p>

<p><code>C:\Documents and Settings\img\recycled log.jpg</code></p>

<p>With this case, I just want to get <code>recycled log.jpg</code> from the full path in JavaScript.</p>
","<pre><code>var filename = fullPath.replace(/^.*[\\\/]/, '')
</code></pre>

<p>This will handle both \ OR / in paths</p>
","423385"
"How do I find the absolute position of an element using jQuery?","289398","","<p>Is there a way of finding the absolute position of an element, i.e. relative to the start of the window, using jQuery?</p>
","<p><a href=""http://docs.jquery.com/CSS/offset"" rel=""noreferrer""><code>.offset()</code></a> will return the offset position of an element as a simple object, eg:</p>

<pre><code>var position = $(element).offset(); // position = { left: 42, top: 567 }
</code></pre>

<p>You can use this return value to position other elements at the same spot:</p>

<pre><code>$(anotherElement).css(position)
</code></pre>
","683564"
"Pass a javascript variable value into input type hidden value","288773","","<p>I would like to assign value of product of two integer numbers into a hidden field already in the html document.
I was thinking about getting the value of a javascript variable and then passing it on a input type hidden.
I'm having a hard time to explain but this is how it should work:</p>

<h1>Script Example</h1>

<pre><code> &lt;script type=""text/javascript""&gt;
 function product(a,b){
      return a*b;
 }
 &lt;/script&gt;
</code></pre>

<p>above computes the product and i want the product to be in hidden field.</p>

<pre><code>&lt;input type=""hidden"" value=""[return value from product function]""&gt;
</code></pre>

<p>How is this possible?</p>
","<p>You could give your hidden field an id:</p>

<pre><code>&lt;input type=""hidden"" id=""myField"" value="""" /&gt;
</code></pre>

<p>and then when you want to assign its value:</p>

<pre><code>document.getElementById('myField').value = product(2, 3);
</code></pre>

<p>Make sure that you are performing this assignment after the DOM has been fully loaded, for example in the <code>window.load</code> event.</p>
","7764168"
"Detect browser or tab closing","288151","","<p>Is there any cross-browser JavaScript/jQuery code to detect if the browser or a browser tab is being closed, but not due to a link being clicked?</p>
","<p>If I get you correctly, you want to know when a tab/window is effectively closed. Well, AFAIK the only way in <code>Javascript</code> to detect that kind of stuffs are <code>onunload</code> &amp; <code>onbeforeunload</code> events.</p>

<p>Unfortunately (or fortunately?), those events are also fired when you leave a site over a <code>link</code> or your browsers back button. So this is the best answer I can give, I don't think you can natively detect a pure <code>close</code> in Javascript. Correct me if I'm wrong here.</p>
","3888938"
"Getting JavaScript object key list","288062","","<p>I have a JavaScript object like</p>

<pre><code>var obj = {
   key1: 'value1',
   key2: 'value2',
   key3: 'value3',
   key4: 'value4'
}
</code></pre>

<p>How can I get the length and list of keys in this object?</p>
","<pre><code>var keys = [];
for(var k in obj) keys.push(k);

alert(""total "" + keys.length + "" keys: "" + keys);
</code></pre>
","3068542"
"Using Node.JS, how do I read a JSON object into (server) memory?","287935","","<h2>Background</h2>

<p>I am doing some experimentation with Node.js and would like to read a JSON object, either from a text file or a .js file (which is better??) into memory so that I can access that object quickly from code.  I realize that there are things like Mongo, Alfred, etc out there, but that is not what I need right now.</p>

<h2>Question</h2>

<p>How do I read a JSON object out of a text or js file and into server memory using JavaScript/Node?</p>
","<p>Sync:</p>

<pre><code>var fs = require('fs');
var obj = JSON.parse(fs.readFileSync('file', 'utf8'));
</code></pre>

<p>Async:</p>

<pre><code>var fs = require('fs');
var obj;
fs.readFile('file', 'utf8', function (err, data) {
  if (err) throw err;
  obj = JSON.parse(data);
});
</code></pre>
","10011078"
"HTML SELECT - Trigger JavaScript ONCHANGE event even when the option is not changed","287776","","<p>I have the following markup:</p>

<pre><code>&lt;select onchange=""jsFunction()""&gt;
    &lt;option value=""1""&gt;1&lt;/option&gt;
    &lt;option value=""2""&gt;2&lt;/option&gt;
    &lt;option value=""3""&gt;3&lt;/option&gt;
&lt;/select&gt;
</code></pre>

<p>When a user pulls down the combobox and selects the same option that was previously selected (or doesn't change the selection at all), JavaScript doesn't regard it as an <code>onchange</code> event. So, the <code>jsFunction()</code> is not called. But I want the <code>jsFunction()</code> called even in this case. How can I achieve this?</p>
","<p>I'd do it like this:</p>

<pre><code>&lt;select onchange=""jsFunction()""&gt;
  &lt;option value="""" disabled selected style=""display:none;""&gt;Label&lt;/option&gt;
  &lt;option value=""1""&gt;1&lt;/option&gt;
  &lt;option value=""2""&gt;2&lt;/option&gt;
  &lt;option value=""3""&gt;3&lt;/option&gt;
&lt;/select&gt;
</code></pre>

<p>If you want you could have the same label as the first option, which in this case is 1.
Even better: put a label in there for the choices in the box.</p>
","11877590"
"how to disable DIV element and everything inside","287594","","<p>I need to disable a DIV and all it's content using Javascript.  I can swear that doing a simple </p>

<pre><code>&lt;div disabled=""true""&gt; 
</code></pre>

<p>was working for me before, but for some reason it no longer works.  I don't understand why.</p>

<p>In IE10: the text ""Click Me"" is not greyed out and click handler still works.</p>

<p>I actually need this working for IE10.  Below is my code. Thanks in advance.</p>

<pre><code>&lt;html&gt;
    &lt;script&gt;
         function disableTest(){

            document.getElementById(""test"").disabled = true;
            var nodes = document.getElementById(""test"").getElementsByTagName('*');
            for(var i = 0; i &lt; nodes.length; i++){
                nodes[i].disabled = true;
            }

         }


     &lt;/script&gt;

&lt;body onload=""disableTest();""&gt;
   &lt;div id=""test""&gt;
       &lt;div onclick=""alert('hello');""&gt;
           Click Me
       &lt;/div&gt;
   &lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre>
","<p>Try this!  </p>

<pre><code>$(""#test *"").attr(""disabled"", ""disabled"").off('click');
</code></pre>

<p>I don't see you using jquery above, but you have it listed as a tag.</p>
","15555422"
"How do I load the contents of a text file into a javascript variable?","287296","","<p>I have a text file in the root of my web app <em><a href=""http://localhost/foo.txt"" rel=""noreferrer"">http://localhost/foo.txt</a></em> and I'd like to load it into a variable in javascript.. in groovy I would do this:</p>

<pre><code>def fileContents = 'http://localhost/foo.txt'.toURL().text;
println fileContents;
</code></pre>

<p>How can I get a similar result in javascript?</p>
","<p>XMLHttpRequest, i.e. AJAX, without the XML.</p>

<p>The precise manner you do this is dependent on what JavaScript framework you're using, but if we disregard interoperability issues, your code will look something like:</p>

<pre>var client = new XMLHttpRequest();
client.open('GET', '/foo.txt');
client.onreadystatechange = function() {
  alert(client.responseText);
}
client.send();</pre>

<p>Normally speaking, though, XMLHttpRequest isn't available on all platforms, so some fudgery is done. Once again, your best bet is to use an AJAX framework like jQuery.</p>

<p>One extra consideration: this will only work as long as foo.txt is on the same domain. If it's on a different domain, same-origin security policies will prevent you from reading the result.</p>
","196510"
"How to use onClick() or onSelect() on option tag in a JSP page?","287190","","<p>How to use <code>onClick()</code> or <code>onSelect()</code> with <code>option</code> tag? Below is my code in which I tried to implement that, but it is not working as expected.</p>

<p>Note: where <code>listCustomer</code> domain object list getting in JSP page.</p>

<pre><code>&lt;td align=""right""&gt; 
  &lt;select name=""singleSelect"" ""&gt; 
     &lt;c:forEach var=""Customer"" items=""${listCustomer}"" &gt;
     &lt;option value="""" onClick=""javascript:onSelect(this);&gt; &lt;c:out value=""${Customer}"" /&gt;&lt;/option&gt;
                &lt;/c:forEach&gt;
          &lt;/select&gt;         
        &lt;/td&gt;   
</code></pre>

<p>How do I modify it to detect that an option is selected?</p>
","<p>Neither the <a href=""http://www.w3schools.com/jsref/event_onselect.asp"" rel=""noreferrer""><code>onSelect()</code></a> nor <a href=""http://www.w3schools.com/jsref/event_onclick.asp"" rel=""noreferrer""><code>onClick()</code></a> events are supported by the <code>&lt;option&gt;</code> tag. The former refers to selecting text (i.e. by clicking + dragging across a text field) so can only be used with the <code>&lt;text&gt;</code> and <code>&lt;textarea&gt;</code> tags. The <code>onClick()</code> event can be used with <code>&lt;select&gt;</code> tags - however, you probably are looking for functionality where it would be best to use the <a href=""http://www.w3schools.com/jsref/event_onchange.asp"" rel=""noreferrer""><code>onChange()</code></a> event, not <code>onClick()</code>.</p>

<p>Furthermore, by the look of your <code>&lt;c:...&gt;</code> tags, you are also trying to use <a href=""http://java.sun.com/products/jsp/"" rel=""noreferrer"">JSP</a> syntax in a plain HTML document. That's just... incorrect.</p>

<p>In response to your comment to this answer - I can barely understand it. However, it sounds like what you want to do is get the value of the <code>&lt;option&gt;</code> tag that the user has just selected whenever they select one. In that case, you want to have something like:</p>

<pre><code>&lt;html&gt;
 &lt;head&gt;
  &lt;script type=""text/javascript""&gt;

   function changeFunc() {
    var selectBox = document.getElementById(""selectBox"");
    var selectedValue = selectBox.options[selectBox.selectedIndex].value;
    alert(selectedValue);
   }

  &lt;/script&gt;
 &lt;/head&gt;
 &lt;body&gt;
  &lt;select id=""selectBox"" onchange=""changeFunc();""&gt;
   &lt;option value=""1""&gt;Option #1&lt;/option&gt;
   &lt;option value=""2""&gt;Option #2&lt;/option&gt;
  &lt;/select&gt;
 &lt;/body&gt;
&lt;/html&gt;
</code></pre>
","3487274"
"What is the correct syntax of ng-include?","287130","","<p>I’m trying to include an HTML snippet inside of an <code>ng-repeat</code>, but I can’t get the include to work. It seems the current syntax of <code>ng-include</code> is different than what it was previously: I see many examples using</p>

<pre><code>&lt;div ng-include src=""path/file.html""&gt;&lt;/div&gt;
</code></pre>

<p>But in the <a href=""http://docs.angularjs.org/api/ng.directive:ngInclude#Usage"" rel=""noreferrer"">official docs</a>, it says to use</p>

<pre><code>&lt;div ng-include=""path/file.html""&gt;&lt;/div&gt;
</code></pre>

<p>But then <a href=""http://docs.angularjs.org/api/ng.directive:ngInclude#Example"" rel=""noreferrer"">down the page</a> it is shown as</p>

<pre><code>&lt;div ng-include src=""path/file.html""&gt;&lt;/div&gt;
</code></pre>

<p>Regardless, I tried</p>

<pre class=""lang-html prettyprint-override""><code>&lt;div ng-include=""views/sidepanel.html""&gt;&lt;/div&gt;
</code></pre>

<pre class=""lang-html prettyprint-override""><code>&lt;div ng-include src=""views/sidepanel.html""&gt;&lt;/div&gt;
</code></pre>

<pre class=""lang-html prettyprint-override""><code>&lt;ng-include src=""views/sidepanel.html""&gt;&lt;/ng-include&gt;
</code></pre>

<pre class=""lang-html prettyprint-override""><code>&lt;ng-include=""views/sidepanel.html""&gt;&lt;/ng-include&gt;
</code></pre>

<pre class=""lang-html prettyprint-override""><code>&lt;ng:include src=""views/sidepanel.html""&gt;&lt;/ng:include&gt;
</code></pre>

<p>My snippet is not very much code, but it’s got a lot going on; I read in <a href=""https://stackoverflow.com/questions/12361680/"">Dynamically load template inside <code>ng-repeat</code></a> that that could cause a problem, so I replaced the content of <code>sidepanel.html</code> with just the word <code>foo</code>, and still nothing.</p>

<p>I also tried declaring the template directly in the page like this:</p>

<pre><code>&lt;script type=""text/ng-template"" id=""tmpl""&gt;
    foo
&lt;/script&gt;
</code></pre>

<p>And running through all the variations of <code>ng-include</code> referencing the script’s <code>id</code>, and still nothing.</p>

<p>My page had a lot more in it, but now I’ve stripped it down to just this:</p>

<pre><code>&lt;!-- index.html --&gt;
&lt;html&gt;
&lt;head&gt;
&lt;!-- angular includes --&gt;
&lt;/head&gt;
&lt;body ng-view=""views/main.html""&gt; &lt;!-- view is actually set in the router --&gt;
    &lt;!-- views/main.html --&gt;
    &lt;header&gt;
        &lt;h2&gt;Blah&lt;/h2&gt;
    &lt;/header&gt;
    &lt;article id=""sidepanel""&gt;
        &lt;section class=""panel""&gt; &lt;!-- will have ng-repeat=""panel in panels"" --&gt;
            &lt;div ng-include src=""views/sidepanel.html""&gt;&lt;/div&gt;
        &lt;/section&gt;
    &lt;/article&gt;
&lt;!-- index.html --&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>The header renders, but then my template doesn’t. I get no errors in the console or from Node, and if I click the link in <code>src=""views/sidepanel.html""</code> in dev tools, it takes me to my template (and displays <code>foo</code>).</p>
","<p>You have to single quote your <code>src</code> string inside of the double quotes:</p>

<pre><code>&lt;div ng-include src=""'views/sidepanel.html'""&gt;&lt;/div&gt;
</code></pre>

<p><a href=""https://groups.google.com/d/msg/angular/PNK5_uvm1v8/3nXLipPzWvMJ"" rel=""noreferrer"">Source</a></p>
","13943587"
"JavaScript get element by name","287098","","<p>Consider this function:</p>

<pre><code>function validate()
{
  var acc = document.getElementsByName('acc').value;
  var pass = document.getElementsByName('pass').value;

  alert (acc);
}
</code></pre>

<p>And this HTML part:</p>

<pre><code>&lt;table border=""0"" cellpadding=""2"" cellspacing=""0"" valign=""top""&gt;
    &lt;tr&gt;
        &lt;td class=""td1""&gt;Account&lt;/td&gt;
        &lt;td class=""td2""&gt;&lt;input type=""text"" name=""acc"" /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr class=""td1""&gt;
        &lt;td&gt;Password&lt;/td&gt;
        &lt;td class=""td2""&gt;&lt;input type=""password"" name=""pass"" /&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;
&lt;div&gt;&lt;button onClick=""validate()"" class=""cupid-greenx""&gt;Login now&lt;/button&gt;&lt;/div&gt;
</code></pre>

<p>The alert box is showing, but it shows ""undefined"".</p>
","<p><code>document.getElementsByName</code> returns a NodeList of elements so it doesn't have property <code>.value</code>. hence the undefined error you're seeing.</p>

<p>What you want is <code>document.getElementsByName(""acc"")[0].value</code></p>
","10306157"
"How do I do a Date comparison in Javascript?","287094","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/492994/compare-2-dates-with-javascript"">Compare 2 dates with JavaScript</a>  </p>
</blockquote>



<p>I would like to compare two dates in javascript.  I have been doing some research, but all I can find is how to return the current date.  I want to compare 2 separate dates, not related to today.  How do I do that. </p>

<pre><code>var startDate = Date(document.form1.Textbox2);
</code></pre>
","<pre><code>if (date1.getTime() &gt; date2.getTime()) {
    alert(""The first date is after the second date!"");
}
</code></pre>

<p><a href=""https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Date"" rel=""noreferrer"">Reference to Date object</a></p>
","338474"
"Getting a list of associative array keys","286462","","<p>I have an associative array in Javascript:</p>

<pre><code>var dictionary = {
    ""cats"": [1,2,3,4,5], 
    ""dogs"": [6,7,8,9,10]
};
</code></pre>

<p>How do I get this dictionary's keys? i.e. I want</p>

<pre><code>var keys = [""cats"", ""dogs""];
</code></pre>

<hr>

<p>Edit 7 years later: Just to get the terminology correct - there is no such thing as an 'associative array' in Javascript - this is technically just an <code>object</code> and it is the object keys we want. </p>
","<p>You can use: <code>Object.keys(obj)</code></p>

<p>Example:</p>

<pre><code>var dictionary = {""cats"":[1,2,37,38,40,32,33,35,39,36], ""dogs"": [4,5,6,3,2]};

// Get the keys
var keys = Object.keys(dictionary);
</code></pre>

<p>See reference below for browser support. It is supported in Firefox 4.20, Chrome 5, IE9. The link below contains a code snippet that you can add if <code>Object.keys()</code> is not supported in your browser.</p>

<p><a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys"">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys</a></p>
","9539168"
"Getting all selected checkboxes in an array","286384","","<p>So I have these checkboxes:</p>

<pre><code>&lt;input type=""checkbox"" name=""type"" value=""4"" /&gt;
&lt;input type=""checkbox"" name=""type"" value=""3"" /&gt;
&lt;input type=""checkbox"" name=""type"" value=""1"" /&gt;
&lt;input type=""checkbox"" name=""type"" value=""5"" /&gt;
</code></pre>

<p>And so on. There are about 6 of them and are hand-coded (i.e not fetched from a db) so they are likely to remain the same for a while.</p>

<p>My question is how I can get them all in an array (in javascript), so I can use them while making an AJAX <code>$.post</code> request using Jquery.</p>

<p>Any thoughts?</p>

<p>Edit: I would only want the selected checkboxes to be added to the array</p>
","<p>Formatted :</p>

<pre><code>$(""input:checkbox[name=type]:checked"").each(function(){
    yourArray.push($(this).val());
});
</code></pre>

<p>Hopefully, it will work.</p>
","590040"
"Can you pass parameters to an AngularJS controller on creation?","286358","","<p>I have a controller responsible for communicating with an API to update properties of a user, name, email, etc. Each user has an <code>'id'</code> which is passed from the server when the profile page is viewed. </p>

<p>I would like to pass this value to the AngularJS controller so it knows what the API entry point is for the current user. I've tried passing the value in <code>ng-controller</code>. For example:</p>

<pre><code>function UserCtrl(id, $scope, $filter) {

$scope.connection = $resource('api.com/user/' + id)
</code></pre>

<p>and in the HTML</p>

<pre><code>&lt;body ng-controller=""UserCtrl({% id %})""&gt;
</code></pre>

<p>where <code>{% id %}</code> print the id sent from the server. but I get errors. </p>

<p>What is the correct way to pass a value into a controller on its creation?</p>
","<p><strong>Notes:</strong></p>

<p>This answer is old. This is just a proof of concept on how the desired outcome can be achieved. However, it may not be the best solution as per some comments below. I don't have any documentation to support or reject the following approach. Please refer to some of the comments below for further discussion on this topic.</p>

<p><strong>Original Answer:</strong></p>

<p>I answered this to 
Yes you absolutely can do so using <code>ng-init</code> and a simple init function.</p>

<p>Here is the example of it on <a href=""http://plnkr.co/edit/jDOgjENkqEaucBX9Tvc9"">plunker</a></p>

<p><strong>HTML</strong> </p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html ng-app=""angularjs-starter""&gt;
  &lt;head lang=""en""&gt;
    &lt;script src=""//ajax.googleapis.com/ajax/libs/angularjs/1.0.3/angular.min.js""&gt;&lt;/script&gt;
    &lt;script src=""app.js""&gt;&lt;/script&gt;
  &lt;/head&gt;  
  &lt;body ng-controller=""MainCtrl"" ng-init=""init('James Bond','007')""&gt;
    &lt;h1&gt;I am  {{name}} {{id}}&lt;/h1&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p><strong>JavaScript</strong></p>

<pre><code>var app = angular.module('angularjs-starter', []);

app.controller('MainCtrl', function($scope) {

  $scope.init = function(name, id)
  {
    //This function is sort of private constructor for controller
    $scope.id = id;
    $scope.name = name; 
    //Based on passed argument you can make a call to resource
    //and initialize more objects
    //$resource.getMeBond(007)
  };


});
</code></pre>
","14531643"
"""elseif"" syntax in JavaScript","286317","","<p>Is this correct?</p>

<pre><code>if(condition)
{

} 
elseif(condition)
{

}
else
{

}
</code></pre>
","<p>JavaScript's elseif is in the format ""else if"", e.g.:</p>

<pre><code>if (condition) {

} else if (other_condition) {

} else {

}
</code></pre>
","4005623"
"Where does npm install packages?","285879","","<p>Can someone tell me where can I find the Node.js modules, which I installed using <strong><code>npm</code></strong>?</p>
","<h1>Global libraries</h1>

<p>You can run <code>npm list -g</code> to see where global libraries are installed.</p>

<p>On Unix systems they are normally placed in <code>/usr/local/lib/node</code> or <code>/usr/local/lib/node_modules</code> when installed globally. If you set the <code>NODE_PATH</code> environment variable to this path, the modules can be found by node.</p>

<p>Windows XP - <code>%USERPROFILE%\Application Data\npm\node_modules</code><br>
Windows 7, 8 and 10 - <code>%AppData%\npm\node_modules</code></p>

<h1>Non-global libraries</h1>

<p>Non-global libraries are installed the <code>node_modules</code> sub folder in the folder you are currently in. </p>

<p>You can run <code>npm list</code> to see the installed non-global libraries for your current location.      </p>
","5926706"
"Use jquery click to handle anchor onClick()","285837","","<p>I have a set of dynamically generated anchor tags in a for loop as follows:</p>

<pre><code>&lt;div id = ""solTitle""&gt; &lt;a href = ""#""  id = ""' + tagId + '"" onClick = ""openSolution();""&gt; ' + solTitle + '&lt;/a&gt;&lt;/div&gt; &lt;br&gt;';
</code></pre>

<p>Once this code is executed the html output for one of the case would look like:</p>

<pre><code>&lt;div id = ""solTitle""&gt; &lt;a href = ""#""  id = ""solution0"" onClick = ""openSolution();""&gt;Solution0 &lt;/a&gt;&lt;/div&gt; &lt;br&gt;

&lt;div id = ""solTitle""&gt; &lt;a href = ""#""  id = ""solution1"" onClick = ""openSolution();""&gt;Solution1 &lt;/a&gt;&lt;/div&gt; &lt;br&gt;
</code></pre>

<p>Now I want different texts to be displayed on clicking the above links.
openSolution() looks like this:</p>

<pre><code>function openSolution() {
    alert('here');
    $('#solTitle a').click(function(evt) {
        evt.preventDefault();
        alert('here in');
        var divId = 'summary' + $(this).attr('id');

        document.getElementById(divId).className = '';

    });
}
</code></pre>

<p>When I execute it and click on either of the  links, the flow doesnot come inside the jquery click handler.  I checked it by the above alerts used. It only displays the alert - 'here' and not the alert - 'here in'. 
On clicking the link second time, everything works perfectly with correct value of divId.</p>
","<p>The first time you click the link, the <code>openSolution</code> function is executed. That function binds the <code>click</code> event handler to the link, but it won't execute it. The second time you click the link, the <code>click</code> event handler will be executed.</p>

<p>What you are doing seems to kind of defeat the point of using jQuery in the first place. Why not just bind the click event to the elements in the first place:</p>

<pre><code>$(document).ready(function() {
    $(""#solTitle a"").click(function() {
        //Do stuff when clicked
    });
});
</code></pre>

<p>This way you don't need <code>onClick</code> attributes on your elements.</p>

<p>It also looks like you have multiple elements with the same <code>id</code> value (""solTitle""), which is invalid. You would need to find some other common characteristic (<code>class</code> is usually a good option). If you change all occurrences of <code>id=""solTitle""</code> to <code>class=""solTitle""</code>, you can then use a class selector:</p>

<pre><code>$("".solTitle a"")
</code></pre>

<p>Since duplicate <code>id</code> values is invalid, the code will not work as expected when facing multiple copies of the same <code>id</code>. What tends to happen is that the first occurrence of the element with that <code>id</code> is used, and all others are ignored.</p>
","8908247"
"Moment.js transform to date object","285766","","<p>Using Moment.js I can't transform a correct moment object to a date object with timezones. I can't get the correct date.</p>

<p><strong>Example:</strong></p>

<pre><code>var oldDate = new Date(),
    momentObj = moment(oldDate).tz(""MST7MDT""),
    newDate = momentObj.toDate();
console.log(""start date "" + oldDate)
console.log(""Format from moment with offset "" + momentObj.format())
console.log(""Format from moment without offset "" + momentObj.utc().format())
console.log(""(Date object) Time with offset "" + newDate)
console.log(""(Date object) Time without offset ""+ moment.utc(newDate).toDate())
</code></pre>
","<p>Use this to transform a moment object into a date object:</p>

<p>From <a href=""http://momentjs.com/docs/#/displaying/as-javascript-date/"">http://momentjs.com/docs/#/displaying/as-javascript-date/</a></p>

<pre><code>moment().toDate();
</code></pre>

<p>Yields:</p>

<pre><code>Tue Nov 04 2014 14:04:01 GMT-0600 (CST)
</code></pre>
","26744045"
"How can I determine the direction of a jQuery scroll event?","285583","","<p>I'm looking for something to this effect:</p>

<pre><code>$(window).scroll(function(event){
   if (/* magic code*/ ){
       // upscroll code
   } else {
      // downscroll code
   }
});
</code></pre>

<p>Any ideas?</p>
","<p>Check current <code>scrollTop</code> vs previous <code>scrollTop</code> </p>

<pre><code>var lastScrollTop = 0;
$(window).scroll(function(event){
   var st = $(this).scrollTop();
   if (st &gt; lastScrollTop){
       // downscroll code
   } else {
      // upscroll code
   }
   lastScrollTop = st;
});
</code></pre>
","4326907"
"Javascript checkbox onChange","285369","","<p>I have a checkbox in a form and I'd like it to work according to following scenario: </p>

<p>if someone checks it, the value of a textfield (<code>totalCost</code>) should be set to <code>10</code>. Then, if I go back and uncheck it, a function <code>calculate()</code> sets the value of <code>totalCost</code> according to other parameters in the form. </p>

<p>So basically, I need the part where, when I check the checkbox I do one thing and when I uncheck it, i do another.</p>
","<pre><code>function calc()
{
  if (document.getElementById('xxx').checked) 
  {
      document.getElementById('totalCost').value = 10;
  } else {
      calculate();
  }
}
</code></pre>

<p>HTML</p>

<pre><code>&lt;input type=""checkbox"" id=""xxx"" name=""xxx"" onclick=""calc();""/&gt;
</code></pre>
","6358754"
"Binding arrow keys in JS/jQuery","284922","","<p>How do I go about binding a function to left and right arrow keys in Javascript and/or jQuery? I looked at the js-hotkey plugin for jQuery (wraps the built-in bind function to add an argument to recognize specific keys), but it doesn't seem to support arrow keys.</p>
","<pre><code>$(document).keydown(function(e) {
    switch(e.which) {
        case 37: // left
        break;

        case 38: // up
        break;

        case 39: // right
        break;

        case 40: // down
        break;

        default: return; // exit this handler for other keys
    }
    e.preventDefault(); // prevent the default action (scroll / move caret)
});
</code></pre>

<p>Put your custom code for the arrow keys between the corresponding <code>case</code> and <code>break</code> lines. </p>

<p><a href=""https://api.jquery.com/event.which/"" rel=""noreferrer""><code>e.which</code></a> is normalized by jQuery, so it works in all browsers. For a pure javascript approach, replace the first two lines with:</p>

<pre><code>document.onkeydown = function(e) {
    e = e || window.event;
    switch(e.which || e.keyCode) {
</code></pre>

<p><br>(edit 2017)<br>
If you feel fancy, you can use <a href=""https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key"" rel=""noreferrer""><code>e.key</code></a> instead of <code>e.which</code> or <code>e.keyCode</code> now. <code>e.key</code> is becoming a recommended standard, allowing you to check against strings: <code>'ArrowLeft'</code>, <code>'ArrowUp'</code>, <code>'ArrowRight'</code>, <code>'ArrowDown'</code>. New browsers support it natively, <a href=""https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key"" rel=""noreferrer"">check here</a>.</p>
","6011119"
"Using Razor within JavaScript","284904","","<p>Is it possible or is there a workaround to use Razor syntax within JavaScript that is in a view (<code>cshtml</code>)?</p>

<p>I am trying to add markers to a Google map... For example, I tried this, but I'm getting a ton of compilation errors:</p>

<pre><code>&lt;script type=""text/javascript""&gt;

    // Some JavaScript code here to display map, etc.

    // Now add markers
    @foreach (var item in Model) {

        var markerlatLng = new google.maps.LatLng(@(Model.Latitude), @(Model.Longitude));
        var title = '@(Model.Title)';
        var description = '@(Model.Description)';
        var contentString = '&lt;h3&gt;' + title + '&lt;/h3&gt;' + '&lt;p&gt;' + description + '&lt;/p&gt;'

        var infowindow = new google.maps.InfoWindow({
            content: contentString
        });

        var marker = new google.maps.Marker({
            position: latLng,
            title: title,
            map: map,
            draggable: false
        });

        google.maps.event.addListener(marker, 'click', function () {
            infowindow.open(map, marker);
        });
    }
&lt;/script&gt;
</code></pre>
","<p>Use the <code>&lt;text&gt;</code> pseudo-element, as described <a href=""https://stackoverflow.com/questions/4045308/razor-syntax-and-javascript/4047382#4047382"">here</a>, to force the Razor compiler back into content mode:</p>

<pre><code>&lt;script type=""text/javascript""&gt;

    // Some JavaScript code here to display map, etc.


    // Now add markers
    @foreach (var item in Model) {
        &lt;text&gt;
            var markerlatLng = new google.maps.LatLng(@(Model.Latitude), @(Model.Longitude));
            var title = '@(Model.Title)';
            var description = '@(Model.Description)';
            var contentString = '&lt;h3&gt;' + title + '&lt;/h3&gt;' + '&lt;p&gt;' + description + '&lt;/p&gt;'

            var infowindow = new google.maps.InfoWindow({
                content: contentString
            });

            var marker = new google.maps.Marker({
                position: latLng,
                title: title,
                map: map,
                draggable: false
            });

            google.maps.event.addListener(marker, 'click', function () {
                infowindow.open(map, marker);
            });
        &lt;/text&gt;
    }
&lt;/script&gt;
</code></pre>

<p><strong>Update:</strong></p>

<p><a href=""http://weblogs.asp.net/scottgu/archive/2010/12/15/asp-net-mvc-3-razor-s-and-lt-text-gt-syntax.aspx"" rel=""noreferrer"">Scott Guthrie recently posted</a> about <code>@:</code> syntax in Razor, which is slightly less clunky than the <code>&lt;text&gt;</code> tag if you just have one or two lines of JavaScript code to add. The following approach would probably be preferable, because it reduces the size of the generated HTML. (You could even move the addMarker function to a static, cached JavaScript file to further reduce the size):</p>

<pre><code>&lt;script type=""text/javascript""&gt;

    // Some JavaScript code here to display map, etc.
    ...
    // Declare addMarker function
    function addMarker(latitude, longitude, title, description, map)
    {
        var latLng = new google.maps.LatLng(latitude, longitude);
        var contentString = '&lt;h3&gt;' + title + '&lt;/h3&gt;' + '&lt;p&gt;' + description + '&lt;/p&gt;';

        var infowindow = new google.maps.InfoWindow({
            content: contentString
        });

        var marker = new google.maps.Marker({
            position: latLng,
            title: title,
            map: map,
            draggable: false
        });

        google.maps.event.addListener(marker, 'click', function () {
            infowindow.open(map, marker);
        });
    }

    // Now add markers
    @foreach (var item in Model) {
        @:addMarker(@item.Latitude, @item.Longitude, '@item.Title', '@item.Description', map);
    }
&lt;/script&gt;
</code></pre>

<p><em>Updated the above code to make the call to <code>addMarker</code> more correct.</em></p>

<p>To clarify, the <code>@:</code> forces Razor back into text mode, even though <code>addMarker</code> call looks a lot like C# code. Razor then picks up the <code>@item.Property</code> syntax to say that it should directly output the contents of those properties.</p>

<h2>Update 2</h2>

<p>It's worth noting that View code really isn't a good place to put JavaScript code. JavaScript code should be placed in a static <code>.js</code> file, and then it should get the data that it needs either from an Ajax call or by scanning <code>data-</code> attributes from the HTML. Besides making it possible to cache your JavaScript code, this also avoids issues with encoding, since Razor is designed to encode for HTML, but not JavaScript.</p>

<h3>View Code</h3>

<pre><code>@foreach(var item in Model)
{
    &lt;div data-marker=""@Json.Encode(item)""&gt;&lt;/div&gt;
}
</code></pre>

<h3>JavaScript code</h3>

<pre><code>$('[data-marker]').each(function() {
    var markerData = $(this).data('marker');
    addMarker(markerData.Latitude, markerData.Longitude,
              markerData.Description, markerData.Title);
});
</code></pre>
","4599403"
"RGB to Hex and Hex to RGB","284389","","<p>How to convert colors in RGB format to Hex format and vice versa?</p>

<p>For example, convert <code>'#0080C0'</code> to <code>(0, 128, 192)</code>.</p>
","<p>The following will do to the RGB to hex conversion and add any required zero padding: </p>

<pre><code>function componentToHex(c) {
    var hex = c.toString(16);
    return hex.length == 1 ? ""0"" + hex : hex;
}

function rgbToHex(r, g, b) {
    return ""#"" + componentToHex(r) + componentToHex(g) + componentToHex(b);
}

alert( rgbToHex(0, 51, 255) ); // #0033ff
</code></pre>

<p>Converting the other way:</p>

<pre><code>function hexToRgb(hex) {
    var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
    return result ? {
        r: parseInt(result[1], 16),
        g: parseInt(result[2], 16),
        b: parseInt(result[3], 16)
    } : null;
}

alert( hexToRgb(""#0033ff"").g ); // ""51"";
</code></pre>

<p>Finally, an alternative version of <code>rgbToHex()</code>, as discussed in @casablanca's answer and suggested in the comments by @cwolves:</p>

<pre><code>function rgbToHex(r, g, b) {
    return ""#"" + ((1 &lt;&lt; 24) + (r &lt;&lt; 16) + (g &lt;&lt; 8) + b).toString(16).slice(1);
}
</code></pre>

<h2>Update 3 December 2012</h2>

<p>Here's a version of <code>hexToRgb()</code> that also parses a shorthand hex triplet such as ""#03F"":</p>

<pre><code>function hexToRgb(hex) {
    // Expand shorthand form (e.g. ""03F"") to full form (e.g. ""0033FF"")
    var shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
    hex = hex.replace(shorthandRegex, function(m, r, g, b) {
        return r + r + g + g + b + b;
    });

    var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
    return result ? {
        r: parseInt(result[1], 16),
        g: parseInt(result[2], 16),
        b: parseInt(result[3], 16)
    } : null;
}

alert( hexToRgb(""#0033ff"").g ); // ""51"";
alert( hexToRgb(""#03f"").g ); // ""51"";
</code></pre>
","5624139"
"how to stop browser back button using javascript","284355","","<p>I am doing online quiz app in php. I want to restrict user while going back in exam.
I have tried following script but it stops my timer.
What should I do please suggest me.
I have included source code.
The timer is stored in cdtimer.js</p>

<pre><code>&lt;script type=""text/javascript""&gt;
        window.history.forward();
        function noBack()
        {
            window.history.forward();
        }
&lt;/script&gt;
&lt;body onLoad=""noBack();"" onpageshow=""if (event.persisted) noBack();"" onUnload=""""&gt;
</code></pre>

<p>I have exam timer which takes duration of exam from <em>mysql db</em> and starts timer accordingly it stops when I put code for disabling back button. what will be the problem. </p>
","<p>There are numerous reasons why disabling the back button will not really work. Your best bet is to warn the user:</p>

<pre><code>window.onbeforeunload = function() { return ""Your work will be lost.""; };
</code></pre>

<p>This page does list a number of ways you <em>could</em> try to disable the back button, but none are guaranteed:</p>

<p><a href=""http://www.irt.org/script/311.htm"" rel=""noreferrer"">http://www.irt.org/script/311.htm</a></p>
","12381610"
"Resizing an iframe based on content","284059","","<p>I am working on an iGoogle-like application. Content from other applications (on other domains) is shown using iframes. </p>

<p>How do I resize the iframes to fit the height of the iframes' content?</p>

<p>I've tried to decipher the javascript Google uses but it's obfuscated, and searching the web has been fruitless so far.</p>

<p><strong>Update:</strong> Please note that content is loaded from other domains, so the <a href=""https://en.wikipedia.org/wiki/Same-origin_policy"" rel=""noreferrer"">same-origin policy</a> applies.</p>
","<p>We had this type of problem, but slightly in reverse to your situation - we were providing the iframed content to sites on other domains, so the <a href=""http://en.wikipedia.org/wiki/Same_origin_policy"" rel=""noreferrer"">same origin policy</a> was also an issue. After many hours spent trawling google, we eventually found a (somewhat..) workable solution, which you may be able to adapt to your needs.</p>

<p>There is a way around the same origin policy, but it requires changes on both the iframed content and the framing page, so if you haven't the ability to request changes on both sides, this method won't be very useful to you, i'm afraid.</p>

<p>There's a browser quirk which allows us to skirt the same origin policy - javascript can communicate either with pages on its own domain, or with pages it has iframed, but never pages in which it is framed, e.g. if you have:</p>

<pre class=""lang-none prettyprint-override""><code> www.foo.com/home.html, which iframes
 |-&gt; www.bar.net/framed.html, which iframes
     |-&gt; www.foo.com/helper.html
</code></pre>

<p>then <code>home.html</code> can communicate with <code>framed.html</code> (iframed) and <code>helper.html</code> (same domain). </p>

<pre class=""lang-none prettyprint-override""><code> Communication options for each page:
 +-------------------------+-----------+-------------+-------------+
 |                         | home.html | framed.html | helper.html |
 +-------------------------+-----------+-------------+-------------+
 | www.foo.com/home.html   |    N/A    |     YES     |     YES     |
 | www.bar.net/framed.html |    NO     |     N/A     |     YES     |
 | www.foo.com/helper.html |    YES    |     YES     |     N/A     |
 +-------------------------+-----------+-------------+-------------+
</code></pre>

<p><code>framed.html</code> can send messages to <code>helper.html</code> (iframed) but <em>not</em> <code>home.html</code> (child can't communicate cross-domain with parent).</p>

<p>The key here is that <code>helper.html</code> can receive messages from <code>framed.html</code>, and <strong>can also communicate</strong> with <code>home.html</code>. </p>

<p>So essentially, when <code>framed.html</code> loads, it works out its own height, tells <code>helper.html</code>, which passes the message on to <code>home.html</code>, which can then resize the iframe in which <code>framed.html</code> sits. </p>

<p>The simplest way we found to pass messages from <code>framed.html</code> to <code>helper.html</code> was through a URL argument. To do this, <code>framed.html</code> has an iframe with <code>src=''</code> specified. When its <code>onload</code> fires, it evaluates its own height, and sets the src of the iframe at this point to <code>helper.html?height=N</code></p>

<p><a href=""http://www.quora.com/How-does-Facebook-Connect-do-cross-domain-communication"" rel=""noreferrer"">There's an explanation here</a> of how facebook handle it, which may be slightly clearer than mine above!</p>

<p><hr />
<strong>Code</strong></p>

<p>In <code>www.foo.com/home.html</code>, the following javascript code is required (this can be loaded from a .js file on any domain, incidentally..):</p>

<pre><code>&lt;script&gt;
  // Resize iframe to full height
  function resizeIframe(height)
  {
    // ""+60"" is a general rule of thumb to allow for differences in
    // IE &amp; and FF height reporting, can be adjusted as required..
    document.getElementById('frame_name_here').height = parseInt(height)+60;
  }
&lt;/script&gt;
&lt;iframe id='frame_name_here' src='http://www.bar.net/framed.html'&gt;&lt;/iframe&gt;
</code></pre>

<p>In <code>www.bar.net/framed.html</code>:</p>

<pre><code>&lt;body onload=""iframeResizePipe()""&gt;
&lt;iframe id=""helpframe"" src='' height='0' width='0' frameborder='0'&gt;&lt;/iframe&gt;

&lt;script type=""text/javascript""&gt;
  function iframeResizePipe()
  {
     // What's the page height?
     var height = document.body.scrollHeight;

     // Going to 'pipe' the data to the parent through the helpframe..
     var pipe = document.getElementById('helpframe');

     // Cachebuster a precaution here to stop browser caching interfering
     pipe.src = 'http://www.foo.com/helper.html?height='+height+'&amp;cacheb='+Math.random();

  }
&lt;/script&gt;
</code></pre>

<p>Contents of <code>www.foo.com/helper.html</code>:</p>

<pre><code>&lt;html&gt; 
&lt;!-- 
This page is on the same domain as the parent, so can
communicate with it to order the iframe window resizing
to fit the content 
--&gt; 
  &lt;body onload=""parentIframeResize()""&gt; 
    &lt;script&gt; 
      // Tell the parent iframe what height the iframe needs to be
      function parentIframeResize()
      {
         var height = getParam('height');
         // This works as our parent's parent is on our domain..
         parent.parent.resizeIframe(height);
      }

      // Helper function, parse param from request string
      function getParam( name )
      {
        name = name.replace(/[\[]/,""\\\["").replace(/[\]]/,""\\\]"");
        var regexS = ""[\\?&amp;]""+name+""=([^&amp;#]*)"";
        var regex = new RegExp( regexS );
        var results = regex.exec( window.location.href );
        if( results == null )
          return """";
        else
          return results[1];
      }
    &lt;/script&gt; 
  &lt;/body&gt; 
&lt;/html&gt;
</code></pre>
","362564"
"Sending emails with Javascript","283918","","<p>This is a little confusing to explain, so bear with me here...</p>

<p>I want to set up a system where a user can send templated emails via my website, except it's not actually sent using my server - it instead just opens up their own local mail client with an email ready to go. The application would fill out the body of the email with predefined variables, to save the user having to type it themselves. They can then edit the message as desired, should it not exactly suit their purposes.</p>

<p>There's a number of reasons I want it to go via the user's local mail client, so getting the server to send the email is not an option: it has to be 100% client-side.</p>

<p>I already have a mostly-working solution running, and I'll post the details of that as an answer, I'm wondering if there's any better way?</p>
","<p>The way I'm doing it now is basically like this:</p>

<p>The HTML:</p>

<pre><code>&lt;textarea id=""myText""&gt;
    Lorem ipsum...
&lt;/textarea&gt;
&lt;button onclick=""sendMail(); return false""&gt;Send&lt;/button&gt;
</code></pre>

<p>The Javascript:</p>

<pre><code>function sendMail() {
    var link = ""mailto:me@example.com""
             + ""?cc=myCCaddress@example.com""
             + ""&amp;subject="" + escape(""This is my subject"")
             + ""&amp;body="" + escape(document.getElementById('myText').value)
    ;

    window.location.href = link;
}
</code></pre>

<p>This, surprisingly, works rather well. The only problem is that if the body is particularly long (somewhere over 2000 characters), then it just opens a new email but there's no information in it. I suspect that it'd be to do with the maximum length of the URL being exceeded.</p>
","271172"
"""SyntaxError: Unexpected token < in JSON at position 0"" in React App","283838","","<p>In a React app component which handles Facebook-like content feeds, I am running into an error:</p>

<blockquote>
  <p>Feed.js:94 undefined ""parsererror"" ""SyntaxError: Unexpected token &lt; in JSON at position 0 </p>
</blockquote>

<p>I ran into a similar error which turned out to be a typo in the HTML within the render function, but that doesn't seem to be the case here. </p>

<p>More confusingly, I rolled the code back to an earlier, known-working version and I'm still getting the error. </p>

<p>Feed.js:</p>

<pre><code>import React from 'react';

var ThreadForm = React.createClass({
  getInitialState: function () {
    return {author: '', 
            text: '', 
            included: '',
            victim: ''
            }
  },
  handleAuthorChange: function (e) {
    this.setState({author: e.target.value})
  },
  handleTextChange: function (e) {
    this.setState({text: e.target.value})
  },
  handleIncludedChange: function (e) {
    this.setState({included: e.target.value})
  },
  handleVictimChange: function (e) {
    this.setState({victim: e.target.value})
  },
  handleSubmit: function (e) {
    e.preventDefault()
    var author = this.state.author.trim()
    var text = this.state.text.trim()
    var included = this.state.included.trim()
    var victim = this.state.victim.trim()
    if (!text || !author || !included || !victim) {
      return
    }
    this.props.onThreadSubmit({author: author, 
                                text: text, 
                                included: included,
                                victim: victim
                              })
    this.setState({author: '', 
                  text: '', 
                  included: '',
                  victim: ''
                  })
  },
  render: function () {
    return (
    &lt;form className=""threadForm"" onSubmit={this.handleSubmit}&gt;
      &lt;input
        type=""text""
        placeholder=""Your name""
        value={this.state.author}
        onChange={this.handleAuthorChange} /&gt;
      &lt;input
        type=""text""
        placeholder=""Say something...""
        value={this.state.text}
        onChange={this.handleTextChange} /&gt;
      &lt;input
        type=""text""
        placeholder=""Name your victim""
        value={this.state.victim}
        onChange={this.handleVictimChange} /&gt;
      &lt;input
        type=""text""
        placeholder=""Who can see?""
        value={this.state.included}
        onChange={this.handleIncludedChange} /&gt;
      &lt;input type=""submit"" value=""Post"" /&gt;
    &lt;/form&gt;
    )
  }
})

var ThreadsBox = React.createClass({
  loadThreadsFromServer: function () {
    $.ajax({
      url: this.props.url,
      dataType: 'json',
      cache: false,
      success: function (data) {
        this.setState({data: data})
      }.bind(this),
      error: function (xhr, status, err) {
        console.error(this.props.url, status, err.toString())
      }.bind(this)
    })
  },
  handleThreadSubmit: function (thread) {
    var threads = this.state.data
    var newThreads = threads.concat([thread])
    this.setState({data: newThreads})
    $.ajax({
      url: this.props.url,
      dataType: 'json',
      type: 'POST',
      data: thread,
      success: function (data) {
        this.setState({data: data})
      }.bind(this),
      error: function (xhr, status, err) {
        this.setState({data: threads})
        console.error(this.props.url, status, err.toString())
      }.bind(this)
    })
  },
  getInitialState: function () {
    return {data: []}
  },
  componentDidMount: function () {
    this.loadThreadsFromServer()
    setInterval(this.loadThreadsFromServer, this.props.pollInterval)
  },
  render: function () {
    return (
    &lt;div className=""threadsBox""&gt;
      &lt;h1&gt;Feed&lt;/h1&gt;
      &lt;div&gt;
        &lt;ThreadForm onThreadSubmit={this.handleThreadSubmit} /&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    )
  }
})

module.exports = ThreadsBox
</code></pre>

<p>In Chrome developer tools, the error seems to be coming from this function:</p>

<pre><code> loadThreadsFromServer: function loadThreadsFromServer() {
    $.ajax({
      url: this.props.url,
      dataType: 'json',
      cache: false,
      success: function (data) {
        this.setState({ data: data });
      }.bind(this),
      error: function (xhr, status, err) {
        console.error(this.props.url, status, err.toString());
      }.bind(this)
    });
  },
</code></pre>

<p>with the line <code>console.error(this.props.url, status, err.toString()</code> underlined.</p>

<p>Since it looks like the error seems to have something to do with pulling JSON data from the server, I tried starting from a blank db, but the error persists. The error seems to be called in an infinite loop presumably as React continuously tries to connect to the server and eventually crashes the browser.</p>

<p>EDIT: </p>

<p>I've checked the server response with Chrome dev tools and Chrome REST client, and the data appears to be proper JSON.</p>

<p>EDIT 2:</p>

<p>It appears that though the intended API endpoint is indeed returning the correct JSON data and format, React is polling <code>http://localhost:3000/?_=1463499798727</code> instead of the expected <code>http://localhost:3001/api/threads</code>.</p>

<p>I am running a webpack hot-reload server on port 3000 with the express app running on port 3001 to return the backend data. What's frustrating here is that this was working correctly the last time I worked on it and can't find what I could have possibly changed to break it. </p>
","<p>The wording of the error message corresponds to what you get from Google Chrome when you run <code>JSON.parse('&lt;...')</code>. I know you said the server is setting <code>Content-Type:application/json</code>, but I am led to believe the response <em>body</em> is actually HTML.</p>

<blockquote>
  <p><code>Feed.js:94 undefined ""parsererror"" ""SyntaxError: Unexpected token &lt; in JSON at position 0""</code> </p>
  
  <p>with the line <code>console.error(this.props.url, status, err.toString())</code> underlined.</p>
</blockquote>

<p>The <code>err</code> was actually thrown within <code>jQuery</code>, and passed to you as a variable <code>err</code>. The reason that line is underlined is simply because that is where you are logging it.</p>

<p>I would suggest that you add to your logging. Looking at the actual <code>xhr</code> (XMLHttpRequest) properties to learn more about the response. Try adding <code>console.warn(xhr.responseText)</code> and you will most likely see the HTML that is being received.</p>
","37280912"
"Include jQuery in the JavaScript Console","283617","","<p>Is there an easy way to include jQuery in the Chrome JavaScript console for sites that do not use it? For example, on a website I would like to get the number of rows in a table. I know this is really easy with jQuery.</p>

<pre><code>$('element').length;
</code></pre>

<p>The site does not use jQuery. Can I add it in from the command line?</p>
","<p>
Run this in your browser's JavaScript console, then jQuery should be available...</p>

<pre class=""lang-js prettyprint-override""><code>var jq = document.createElement('script');
jq.src = ""https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"";
document.getElementsByTagName('head')[0].appendChild(jq);
// ... give time for script to load, then type (or see below for non wait option)
jQuery.noConflict();
</code></pre>

<p><strong>NOTE:</strong> if the site has scripts that conflict with jQuery (other libs, etc.) you could still run into problems.</p>

<h3>Update:</h3>

<p>Making the best better, creating a Bookmark makes it really convenient, let's do it, and a little feedback is great too:</p>

<ol>
<li>Right click the Bookmarks Bar, and click <strong>Add Page</strong></li>
<li>Name it as you like, e.g. Inject jQuery, and use the following line for URL:</li>
</ol>

<blockquote>
  <p>javascript:(function(e,s){e.src=s;e.onload=function(){jQuery.noConflict();console.log('jQuery injected')};document.head.appendChild(e);})(document.createElement('script'),'//code.jquery.com/jquery-latest.min.js')</p>
</blockquote>

<p>Below is the formatted code:</p>

<pre class=""lang-js prettyprint-override""><code>javascript: (function(e, s) {
    e.src = s;
    e.onload = function() {
        jQuery.noConflict();
        console.log('jQuery injected');
    };
    document.head.appendChild(e);
})(document.createElement('script'), '//code.jquery.com/jquery-latest.min.js')
</code></pre>

<p>Here the official jQuery CDN URL is used, feel free to use your own CDN/version.</p>
","7474386"
"How to change href of <a> tag on button click through javascript","283379","","<p>How to change the <code>href</code> attribute value of an <code>&lt;a/&gt;</code> tag through Javascript on button click ?</p>

<pre><code>&lt;script type=""text/javascript""&gt;
  function f1()
  {
    document.getElementById(""abc"").href=""xyz.php""; 
  }
&lt;/script&gt;

&lt;a href="""" id=""abc""&gt;jhg&lt;/a&gt;
&lt;a href="""" id="""" onclick=""f1()""&gt;jhhghj&lt;/a&gt;
</code></pre>
","<p>Without having a <code>href</code>, the click will reload the current page, so you need something like this:</p>

<pre><code>&lt;a href=""#"" onclick=""f1()""&gt;jhhghj&lt;/a&gt;
</code></pre>

<p>Or prevent the scroll like this:</p>

<pre><code>&lt;a href=""#"" onclick=""f1(); return false;""&gt;jhhghj&lt;/a&gt;
</code></pre>

<p>Or <code>return false</code> in your <code>f1</code> function and:</p>

<pre><code>&lt;a href=""#"" onclick=""return f1();""&gt;jhhghj&lt;/a&gt;
</code></pre>

<p>....or, the unobtrusive way:</p>

<pre><code>&lt;a href=""#"" id=""abc""&gt;jhg&lt;/a&gt;
&lt;a href=""#"" id=""myLink""&gt;jhhghj&lt;/a&gt;

&lt;script type=""text/javascript""&gt;
  document.getElementById(""myLink"").onclick = function() {
    document.getElementById(""abc"").href=""xyz.php""; 
    return false;
  };
&lt;/script&gt;
</code></pre>
","4365272"
"Each for object?","282980","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/9354834/iterate-over-object-literal-values"">Iterate over Object Literal Values</a>  </p>
</blockquote>



<p>I have object in JavaScript:</p>

<pre><code>var object = someobject;

Object { aaa=true, bbb=true, ccc=true }
</code></pre>

<p>How can I use each for this?</p>

<pre><code> object.each(function(index, value)) {
      console.log(value);
 }
</code></pre>

<p>Not working.</p>
","<p>A javascript Object does not have a standard .each function. jQuery provides a function. See <a href=""http://api.jquery.com/jQuery.each/"" rel=""noreferrer"">http://api.jquery.com/jQuery.each/</a> The below should work</p>

<pre><code>$.each(object, function(index, value) {
    console.log(value);
}); 
</code></pre>

<p>Another option would be to use vanilla Javascript using the <code>Object.keys()</code> and the Array <code>.map()</code> functions like this</p>

<pre><code>Object.keys(object).map(function(objectKey, index) {
    var value = object[objectKey];
    console.log(value);
});
</code></pre>

<p>See <a href=""https://developer.mozilla.org/nl/docs/Web/JavaScript/Reference/Global_Objects/Object/keys"" rel=""noreferrer"">https://developer.mozilla.org/nl/docs/Web/JavaScript/Reference/Global_Objects/Object/keys</a> and <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map"" rel=""noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map</a></p>

<p>These are usually better than using a vanilla Javascript for-loop, unless you really understand the implications of using a normal for-loop and see use for it's specific characteristics like looping over the property chain. </p>

<p>But usually, a for-loop doesn't work better than <code>jQuery</code> or <code>Object.keys().map()</code>. I'll go into two potential issues with using a plain for-loop below.</p>

<hr>

<p>Right, so also pointed out in other answers, a plain Javascript alternative would be</p>

<pre><code>for(var index in object) { 
    var attr = object[index]; 
}
</code></pre>

<p>There are two potential issues with this:</p>

<p>1 . You want to check whether the attribute that you are finding is from the object itself and not from up the prototype chain. This can be checked with the <code>hasOwnProperty</code> function like so</p>

<pre><code>for(var index in object) { 
   if (object.hasOwnProperty(index)) {
       var attr = object[index];
   }
}
</code></pre>

<p>See <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty"" rel=""noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty</a> for more information. </p>

<p>The <code>jQuery.each</code> and <code>Object.keys</code> functions take care of this automatically.</p>

<p>2 . Another potential issue with a plain for-loop is that of scope and non-closures. This is a bit complicated, but take for example the following code. We have a bunch of buttons with ids button0, button1, button2 etc, and we want to set an onclick on them and do a <code>console.log</code> like this:</p>

<pre><code>&lt;button id='button0'&gt;click&lt;/button&gt;
&lt;button id='button1'&gt;click&lt;/button&gt;
&lt;button id='button2'&gt;click&lt;/button&gt;

var messagesByButtonId = {""button0"" : ""clicked first!"", ""button1"" : ""clicked middle!"", ""button2"" : ""clicked last!""];
for(var buttonId in messagesByButtonId ) { 
   if (messagesByButtonId.hasOwnProperty(buttonId)) {
       $('#'+buttonId).click(function() {
           var message = messagesByButtonId[buttonId];
           console.log(message);
       });
   }
}
</code></pre>

<p>If, after some time, we click any of the buttons we will always get ""clicked last!"" in the console, and never ""clicked first!"" or ""clicked middle!"". Why? Because at the time that the onclick function is executed, it will display <code>messagesByButtonId[buttonId]</code> using the <code>buttonId</code> variable <em>at that moment</em>. And since the loop has finished at that moment, the <code>buttonId</code> variable will still be ""button2"" (the value it had during the last loop iteration), and so <code>messagesByButtonId[buttonId]</code> will be <code>messagesByButtonId[""button2""]</code>, i.e. ""clicked last!"".</p>

<p>See <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures"" rel=""noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures</a> for more information on closures. Especially the last part of that page that covers our example.</p>

<p>Again, <code>jQuery.each</code> and <code>Object.keys().map()</code> solve this problem automatically for us, because it provides us with a <code>function(index, value)</code> (that has closure) so we are safe to use both index and value and rest assured that they have the value that we expect.</p>
","11846539"
"How to clear all <div>s’ contents inside a parent <div>?","282872","","<p>I have a div <code>&lt;div id=""masterdiv""&gt;</code> in which I will have several child <code>&lt;div&gt;</code>s.</p>

<p>For example:</p>

<pre><code>&lt;div id=""masterdiv""&gt;
  &lt;div id=""childdiv1"" /&gt;
  &lt;div id=""childdiv2"" /&gt;
  &lt;div id=""childdiv3"" /&gt;
&lt;/div&gt;
</code></pre>

<p>I need to clear the contents of all child <code>&lt;div&gt;</code>s inside the master <code>&lt;div&gt;</code> using jQuery.</p>

<p>How to achieve it?</p>
","<pre><code>jQuery('#masterdiv div').html('');
</code></pre>
","1701985"
"Print JSON parsed object?","282755","","<p>I've got a javascript object which has been JSON parsed using <code>JSON.parse</code> I now want to print the object so I can debug it (something is going wrong with the function). When I do the following...</p>

<pre><code>for (property in obj) {
    output += property + ': ' + obj[property]+'; ';
}
console.log(output);
</code></pre>

<p>I get multiple [object Object]'s listed. I'm wondering how would I print this in order to view the contents?</p>
","<p>Most debugger consoles support displaying objects directly. Just use</p>

<pre><code>console.log(obj);
</code></pre>

<p>Depending on your debugger this most likely will display the object in the console as a collapsed tree. You can open the tree and inspect the object.</p>
","4933229"
"Javascript Get Element by Id and set the value","282616","","<p>I have a javascript function to which I pass a parameter. The parameter represents the id of an element (a hidden field) in my web page. I want to change the value of this element.</p>

<pre><code>function myFunc(variable){
  var s= document.getElementById(variable);
  s.value = 'New value'
}
</code></pre>

<p>When I do this, I get an error that the value cannot be set because the object is null. But I know the object is not null because I see it in the html code generated by the browser.
Anyways, I tried the following code to debug</p>

<pre><code>function myFunc(variable){
  var x = variable;
  var y  = 'This-is-the-real-id'
  alert(x + ', ' + y)
  var s= document.getElementById(x);
  s.value = 'New value'
}
</code></pre>

<p>When the alert message shows up, both parameters are the same, but I still get the error. But everything works fine when I do</p>

<pre><code>  var s= document.getElementById('This-is-the-real-id');
  s.value = 'New value'
</code></pre>

<p>How can I fix this please</p>

<p>EDIT</p>

<p>The element for which I am setting the value is  hidden field and the id is det dynamically, as the page loads. I have tried added this in the $(document).ready function but did not work</p>
","<p>If myFunc(variable) is executed before textarea is rendered to page, you will get the null exception error.</p>

<pre><code>&lt;html&gt;
    &lt;head&gt;
    &lt;title&gt;index&lt;/title&gt;
    &lt;script type=""text/javascript""&gt;
        function myFunc(variable){
            var s = document.getElementById(variable);
            s.value = ""new value"";
        }   
        myFunc(""id1"");
    &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;textarea id=""id1""&gt;&lt;/textarea&gt;
    &lt;/body&gt;
&lt;/html&gt;
//Error message: Cannot set property 'value' of null 
</code></pre>

<p>So, make sure your textarea does exist in the page, and then call myFunc, you can use window.onload or $(document).ready function.
Hope it's helpful.</p>
","14649587"
"How to get the difference between two arrays in Javascript?","282543","","<p>Is there a way to return the difference between two arrays in JavaScript?</p>

<p>For example:</p>

<pre class=""lang-js prettyprint-override""><code>var a1 = ['a', 'b'];
var a2 = ['a', 'b', 'c', 'd'];

// need [""c"", ""d""]
</code></pre>

<p>Any advice greatly appreciated.</p>
","<p>I assume you are comparing a normal array. If not, you need to change the <em>for</em> loop to a <em>for .. in</em> loop.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function arr_diff (a1, a2) {

    var a = [], diff = [];

    for (var i = 0; i &lt; a1.length; i++) {
        a[a1[i]] = true;
    }

    for (var i = 0; i &lt; a2.length; i++) {
        if (a[a2[i]]) {
            delete a[a2[i]];
        } else {
            a[a2[i]] = true;
        }
    }

    for (var k in a) {
        diff.push(k);
    }

    return diff;
}

console.log(arr_diff(['a', 'b'], ['a', 'b', 'c', 'd']));
console.log(arr_diff(""abcd"", ""abcde""));
console.log(arr_diff(""zxc"", ""zxc""));</code></pre>
</div>
</div>
</p>

<p>A better solution, if you don't care about backward compatibility, is using filter. But still, this solution works.</p>
","1187628"
"Using HTML5/Javascript to generate and save a file","282305","","<p>I've been fiddling with WebGL lately, and have gotten a Collada reader working. Problem is it's pretty slow (Collada is a very verbose format), so I'm going to start converting files to a easier to use format (probably JSON). Thing is, I already have the code to parse the file in Javascript, so I may as well use it as my exporter too! The problem is saving.</p>

<p>Now, I know that I can parse the file, send the result to the server, and have the browser request the file back from the server as a download. But in reality the server has nothing to do with this particular process, so why get it involved? I already have the contents of the desired file in memory. Is there any way that I could present the user with a download using pure javascript? (I doubt it, but might as well ask...)</p>

<p>And to be clear: I am not trying to access the filesystem without the users knowledge! The user will provide a file (probably via drag and drop), the script will transform the file in memory, and the user will be prompted to download the result. All of which should be ""safe"" activities as far as the browser is concerned.</p>

<p><b>[EDIT]:</b> I didn't mention it upfront, so the posters who answered ""Flash"" are valid enough, but part of what I'm doing is an attempt to highlight what can be done with pure HTML5... so Flash is right out in my case. (Though it's a perfectly valid answer for anyone doing a ""real"" web app.) That being the case it looks like I'm out of luck unless I want to involve the server. Thanks anyway!</p>
","<p>OK, creating a data:URI definitely does the trick for me, thanks to Matthew and Dennkster pointing that option out! Here is basically how I do it:</p>

<p>1) get all the content into a string called ""content"" (e.g. by creating it there initially or by reading innerHTML of the  tag of an already built page).</p>

<p>2) Build the data URI:</p>

<pre><code>uriContent = ""data:application/octet-stream,"" + encodeURIComponent(content);
</code></pre>

<p>There will be length limitations depending on browser type etc., but e.g. Firefox 3.6.12 works until at least 256k. Encoding in Base64 instead using encodeURIComponent might make things more efficient, but for me that was ok.</p>

<p>3) open a new window and ""redirect"" it to this URI prompts for a download location of my JavaScript generated page:</p>

<pre><code>newWindow = window.open(uriContent, 'neuesDokument');
</code></pre>

<p>That's it.</p>
","4551467"
"jQuery : Convert javascript array to string","282064","","<p>I'm trying to iterate over a ""value"" list and convert it into a string. Here is the code: </p>

<pre><code>var blkstr = $.each(value, function(idx2,val2) {                    
     var str = idx2 + "":"" + val2;
     alert(str);
     return str;
}).get().join("", "");    
</code></pre>

<p>alert() function works just fine and displays the proper value. But somehow, jquery's .get() function doesn't get the right sort of object and fails. What am I doing wrong?</p>
","<p>If <code>value</code> is associative array, such code will work fine:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var value = { ""aaa"": ""111"", ""bbb"": ""222"", ""ccc"": ""333"" };
var blkstr = [];
$.each(value, function(idx2,val2) {                    
  var str = idx2 + "":"" + val2;
  blkstr.push(str);
});
console.log(blkstr.join("", ""));</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js""&gt;&lt;/script&gt;</code></pre>
</div>
</div>
</p>

<p>(output will appear in the dev console)    </p>

<p>As Felix mentioned, <code>each()</code> is just iterating the array, nothing more.</p>
","5289505"
"jQuery equivalent of JavaScript's addEventListener method","281932","","<p>I'm trying to find the jQuery equivalent of this JavaScript method call:</p>

<pre><code>document.addEventListener('click', select_element, true);
</code></pre>

<p>I've gotten as far as:</p>

<pre><code>$(document).click(select_element);
</code></pre>

<p>but that doesn't achieve the same result, as the last parameter of the JavaScript method - a boolean that indicates whether the event handler should be executed in the capturing or bubbling phase (per my understanding from <a href=""http://www.quirksmode.org/js/events_advanced.html"" rel=""noreferrer"">http://www.quirksmode.org/js/events_advanced.html</a>) - is left out.</p>

<p>How do I specify that parameter, or otherwise achieve the same functionality, using jQuery?</p>
","<p>Not all browsers support event capturing (for example, Internet Explorer versions less than 9 don't) but all do support event bubbling, which is why it is the phase used to bind handlers to events in all cross-browser abstractions, jQuery's included.</p>

<p>The nearest to what you are looking for in jQuery is using <a href=""http://api.jquery.com/bind/"" rel=""noreferrer""><code>bind()</code></a> (superseded by <a href=""http://api.jquery.com/on/"" rel=""noreferrer""><code>on()</code></a> in jQuery 1.7+)  or the event-specific jQuery methods (in this case, <a href=""http://api.jquery.com/click/"" rel=""noreferrer""><code>click()</code></a>, which calls <code>bind()</code> internally anyway). All use the bubbling phase of a raised event.</p>
","2398244"
"how to access iFrame parent page using jquery?","281576","","<p>I have an iframe and in order to access parent element I implemented following code:</p>

<pre><code>window.parent.document.getElementById('parentPrice').innerHTML
</code></pre>

<p>How to get the same result using jquery?<br>
<strong>UPDATE</strong>: Or how to access iFrame parent page using jquery?</p>
","<p>To find in the parent of the iFrame use:</p>

<pre><code>$('#parentPrice', window.parent.document).html();
</code></pre>

<p>The second parameter for the $() wrapper is the context in which to search. This defaults to document.</p>
","726866"
"Can't append <script> element","281527","","<p>Any idea why the piece of code below does not add the script element to the DOM?</p>

<pre><code>var code = ""&lt;script&gt;&lt;/script&gt;"";
$(""#someElement"").append(code);
</code></pre>
","<p>I've seen issues where some browsers don't respect some changes when you do them directly (by which I mean creating the HTML from text like you're trying with the script tag), but when you do them with built-in commands things go better.  Try this:</p>

<pre><code>var script = document.createElement( 'script' );
script.type = 'text/javascript';
script.src = url;
$(""#someElement"").append( script );
</code></pre>

<p>From: <a href=""http://mg.to/2006/01/25/json-for-jquery"" rel=""noreferrer"">JSON for jQuery</a></p>
","611016"
"Create JSON object dynamically via JavaScript (Without concate strings)","281514","","<p>I have this JSON data:</p>

<pre><code>{
    ""employees"": [
        {
            ""firstName"": ""John"",
            ""lastName"": ""Doe""
        },
        {
            ""firstName"": ""Anna"",
            ""lastName"": ""Smith""
        },
        {
            ""firstName"": ""Peter"",
            ""lastName"": ""Jones""
        }
    ]
}
</code></pre>

<p>Suppose I don't know how many columns and rows of employees I have, how do I create this object in JavaScript (Without concate strings)? Assume that I get each row in ""onGeneratedRow"" method, and I need to push each column (firstName, lastName) to the '{}' brackets.</p>

<pre><code>var viewData = { 
    employees : [] 
};

var rowNum = -1; 

function onGeneratedRow(columnsResult)
{
    rowNum = rowNum + 1;
    viewData.employees.push({});    
    columnsResult.forEach(function(column) {                  
    var columnName = column.metadata.colName;
    viewData.employees[rowNum][columnName] = column.value;  });
}
</code></pre>
","<p>This is what you need!</p>

<pre><code>function onGeneratedRow(columnsResult)
{
    var jsonData = {};
    columnsResult.forEach(function(column) 
    {
        var columnName = column.metadata.colName;
        jsonData[columnName] = column.value;
    });
    viewData.employees.push(jsonData);
 }
</code></pre>
","16507252"
"Why do you need to invoke an anonymous function on the same line?","281087","","<p>I was reading some posts about closures and saw this everywhere, but there is no clear explanation how it works - everytime I was just told to use it...:</p>

<pre><code>// Create a new anonymous function, to use as a wrapper
(function(){
    // The variable that would, normally, be global
    var msg = ""Thanks for visiting!"";

    // Binding a new function to a global object
    window.onunload = function(){
        // Which uses the 'hidden' variable
        alert( msg );
    };
// Close off the anonymous function and execute it
})();
</code></pre>

<p>Ok I see that we will create new anonymous function and then execute it. So after that this simple code should work (and it does):</p>

<pre><code>(function (msg){alert(msg)})('SO');
</code></pre>

<p>My question is what kind of magic happens here? I thought that when I wrote:</p>

<pre><code>(function (msg){alert(msg)})
</code></pre>

<p>then a new unnamed function would be created like function """"(msg) ...</p>

<p>but then why doesn't this work?</p>

<pre><code>(function (msg){alert(msg)});
('SO');
</code></pre>

<p>Why does it need to be in the same line?</p>

<p>Could you please point me some posts or give me an explanation?</p>
","<p>Drop the semicolon after the function definition.</p>

<pre><code>(function (msg){alert(msg)})
('SO');
</code></pre>

<p>Above should work.</p>

<p>DEMO Page: <a href=""https://jsfiddle.net/e7ooeq6m/"" rel=""nofollow noreferrer"">https://jsfiddle.net/e7ooeq6m/</a></p>

<p>I have discussed this kind of pattern in this post:</p>

<p><a href=""https://stackoverflow.com/questions/1122690/jquery-and-questions/1122740#1122740"">jQuery and $ questions</a></p>

<p><strong>EDIT:</strong></p>

<p>If you look at <a href=""http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf"" rel=""nofollow noreferrer"">ECMA script specification</a>, there are 3 ways you can define a function. (Page 98, Section 13 Function Definition)</p>

<h2>1. Using Function constructor</h2>

<pre><code>var sum = new Function('a','b', 'return a + b;');
alert(sum(10, 20)); //alerts 30
</code></pre>

<h2>2. Using Function declaration.</h2>

<pre><code>function sum(a, b)
{
    return a + b;
}

alert(sum(10, 10)); //Alerts 20;
</code></pre>

<h2>3. Function Expression</h2>

<pre><code>var sum = function(a, b) { return a + b; }

alert(sum(5, 5)); // alerts 10
</code></pre>

<p>So you may ask, what's the difference between declaration and expression? </p>

<p>From ECMA Script specification:</p>

<blockquote>
  <p>FunctionDeclaration :
      function Identifier ( FormalParameterListopt ){ FunctionBody
  }</p>
  
  <p>FunctionExpression :
      function Identifieropt ( FormalParameterListopt ){ FunctionBody
  }</p>
</blockquote>

<p>If you notice, 'identifier' is <strong>optional</strong> for function expression. And when you don't give an identifier, you create an anonymous function. It doesn't mean that you can't specify an identifier.</p>

<p>This means following is valid.</p>

<pre><code>var sum = function mySum(a, b) { return a + b; }
</code></pre>

<p>Important point to note is that you can use 'mySum' only inside the mySum function body, not outside. See following example:</p>

<pre><code>var test1 = function test2() { alert(typeof test2); }

alert(typeof(test2)); //alerts 'undefined', surprise! 

test1(); //alerts 'function' because test2 is a function.
</code></pre>

<p><a href=""http://jsbin.com/esupa"" rel=""nofollow noreferrer"">Live Demo</a></p>

<p>Compare this to</p>

<pre><code> function test1() { alert(typeof test1) };

 alert(typeof test1); //alerts 'function'

 test1(); //alerts 'function'
</code></pre>

<hr>

<p>Armed with this knowledge, let's try to analyze your code.</p>

<p>When you have code like, </p>

<pre><code>    function(msg) { alert(msg); }
</code></pre>

<p>You created a function expression. And you can execute this function expression by wrapping it inside parenthesis.</p>

<pre><code>    (function(msg) { alert(msg); })('SO'); //alerts SO.
</code></pre>
","1140107"
"No visible cause for ""Unexpected token ILLEGAL""","280803","","<p>I'm getting this JavaScript error on my console:</p>

<blockquote>
  <p>Uncaught SyntaxError: Unexpected token ILLEGAL</p>
</blockquote>

<p>This is my code:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var foo = 'bar';​</code></pre>
</div>
</div>
</p>

<p>It's super simple, as you can see. How could it be causing a syntax error?</p>
","<h3>The error</h3>

<p>When code is parsed by the JavaScript interpreter, it gets broken into pieces called ""tokens"".  When a token cannot be classified into one of the <a href=""http://es5.github.com/#x7.5"" rel=""noreferrer"">four basic token types</a>, it gets labelled ""ILLEGAL"" on most implementations, and this error is thrown. </p>

<p>The same error is raised if, for example, you try to run a js file with a rogue <code>@</code> character, a misplaced curly brace, bracket, ""smart quotes"", single quotes not enclosed properly (e.g. <code>this.run('dev1)</code>) and so on.</p>

<blockquote>
  <p><strong>A lot of different situations can cause this error. But if you don't have any obvious syntax error or illegal character, it may be caused by an <em>invisible</em> illegal character. That's what this answer is about.</strong></p>
</blockquote>

<h3>But I can't see anything illegal!</h3>

<p>There is an invisible character in the code, right after the semicolon. It's the <a href=""http://www.fileformat.info/info/unicode/char/200b/index.htm"" rel=""noreferrer"">Unicode <code>U+200B</code> Zero-width space</a> character (a.k.a. <code>ZWSP</code>, HTML entity <code>&amp;#8203;</code>). That character is known to cause the <code>Unexpected token ILLEGAL</code> JavaScript syntax error.</p>

<h3>And where did it come from?</h3>

<p>I can't tell for sure, but my bet is on <a href=""http://jsfiddle.net"" rel=""noreferrer"">jsfiddle</a>. If you paste code from there, it's very likely to include one or more <code>U+200B</code> characters. It seems the tool uses that character to control word-wrapping on long strings.</p>

<blockquote>
  <p><strong>UPDATE 2013-01-07</strong></p>
  
  <p>After the latest <a href=""http://blog.jsfiddle.net/post/39954467099/jsfiddle-updated"" rel=""noreferrer"">jsfiddle update</a>, <a href=""http://jsfiddle.net/FFEsE/"" rel=""noreferrer"">it's now showing the character as a red dot</a> like codepen does. <em>Apparently</em>, it's also not inserting <code>U+200B</code> characters on its own anymore, so this problem should be less frequent from now on.</p>
  
  <p><strong>UPDATE 2015-03-17</strong></p>
  
  <p><strong>Vagrant</strong> appears to sometimes cause this issue as well, due to a bug in <a href=""https://github.com/mitchellh/vagrant/issues/351"" rel=""noreferrer"">VirtualBox</a>. The solution, as per <a href=""http://quyennt.com/web-development/chrome-js-syntaxerror-unexpected-token-illegal-caused-by-vagrant-synced-folder/"" rel=""noreferrer"">this blog post</a> is to set <code>sendfile off;</code> in your nginx config, or <code>EnableSendfile Off</code> if you use Apache.</p>
</blockquote>

<p>It's also been <a href=""https://stackoverflow.com/a/7077279/825789"">reported</a> that code pasted from the Chrome developer tools may include that character, but I was unable to reproduce that with the current version (22.0.1229.79 on OSX).</p>

<h3>How can I spot it?</h3>

<p>The character is invisible, do how do we know it's there? You can ask your editor to show invisible characters. Most text editors have this feature. Vim, for example, displays them by default, and the <code>ZWSP</code> shows as <code>&lt;u200b&gt;</code>. You can also debug it online: <a href=""http://jsbin.com/"" rel=""noreferrer"">jsbin</a> displays the character as a red dot on its code panes (but seems to remove it after saving and reloading the page). <a href=""http://codepen.io/anon/pen/htlkd"" rel=""noreferrer"">CodePen.io also displays it as a dot</a>, and keeps it even after saving. </p>

<h3>Related problems</h3>

<p>That character is not something bad, it can actually be quite useful. <a href=""http://en.wikipedia.org/wiki/Zero-width_space"" rel=""noreferrer"">This example on Wikipedia</a> demonstrates how it can be used to control where a long string should be wrapped to the next line. However, if you are unaware of the character's presence on your markup, it may become a problem. If you have it inside of a string (e.g., the <code>nodeValue</code> of a DOM element that has no visible content), you might expect such string to be empty, when in fact it's not (even after applying <code>String.trim</code>). </p>

<p><code>ZWSP</code> can also cause extra whitespace to be displayed on an HTML page, for example when it's found between two <code>&lt;div&gt;</code> elements (as seen on <a href=""https://stackoverflow.com/q/12731253/825789"">this question</a>). This case is not even reproducible on jsfiddle, since the character is ignored there.</p>

<p>Another potential problem: if the web page's encoding is not recognized as UTF-8, the character may actually be displayed (as <code>â€‹</code> in latin1, for example).</p>

<p>If <code>ZWSP</code> is present on CSS code (inline code, or an external stylesheet), styles can also not be parsed properly, so some styles don't get applied (as seen on <a href=""https://stackoverflow.com/q/12203376/825789"">this question</a>).</p>

<h3>The ECMAScript Specification</h3>

<p>I couldn't find any mention to that specific character on the ECMAScript Specification (versions <a href=""http://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf"" rel=""noreferrer"">3</a> and <a href=""http://ecma-international.org/ecma-262/5.1"" rel=""noreferrer"">5.1</a>). The current version mentions similar characters (<code>U+200C</code> and <code>U+200D</code>) on <a href=""http://ecma-international.org/ecma-262/5.1/#sec-7.1"" rel=""noreferrer"">Section 7.1</a>, which says they should be treated as <code>IdentifierPart</code>s when ""outside of comments, string literals, and regular expression literals"". Those characters may, for example, be part of a variable name (and <code>var x\u200c;</code> indeed works). </p>

<p><a href=""http://ecma-international.org/ecma-262/5.1/#sec-7.2"" rel=""noreferrer"">Section 7.2</a> lists the valid White space characters (such as tab, space, no-break space, etc.), and vaguely mentions that any other Unicode “space separator” (category “Zs”) should be treated as white space. I'm probably not the best person to discuss the specs in this regard, but it seems to me that <code>U+200B</code> should be considered white space according to that, when in fact the implementations (at least Chrome and Firefox) appear to treat them as an unexpected token (or part of one), causing the syntax error.</p>
","12719860"
"How do I make an HTML text box show a hint when empty?","280582","","<p>I want the search box on my web page to display the word ""Search"" in gray italics. When the box receives focus, it should look just like an empty text box. If there is already text in it, it should display the text normally (black, non-italics). This will help me avoid clutter by removing the label.</p>

<p>BTW, this is an on-page <a href=""http://en.wikipedia.org/wiki/Ajax_%28programming%29"" rel=""noreferrer"">Ajax</a> search, so it has no button.</p>
","<p>Another option, if you're happy to have this feature only for newer browsers, is to use the support offered by HTML 5's <strong>placeholder</strong> attribute:</p>

<pre><code>&lt;input name=""email"" placeholder=""Email Address""&gt;
</code></pre>

<p>In the absence of any styles, in Chrome this looks like:</p>

<p><a href=""https://i.stack.imgur.com/tZcmY.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/tZcmY.png"" alt=""enter image description here""></a></p>

<p>You can try demos out <a href=""http://diveintohtml5.info/examples/input-placeholder.html"" rel=""noreferrer"">here</a> and in <em><a href=""http://davidwalsh.name/html5-placeholder-css"" rel=""noreferrer"">HTML5 Placeholder Styling with CSS</a></em>.</p>

<p>Be sure to check the <a href=""http://caniuse.com/#feat=input-placeholder"" rel=""noreferrer"">browser compatibility of this feature</a>. Support in Firefox was added in 3.7. Chrome is fine. Internet&nbsp;Explorer only added support in 10. If you target a browser that does not support input placeholders, you can use a jQuery plugin called <a href=""https://github.com/mathiasbynens/jquery-placeholder"" rel=""noreferrer"">jQuery HTML5 Placeholder</a>, and then just add the following JavaScript code to enable it.</p>

<pre><code>$('input[placeholder], textarea[placeholder]').placeholder();
</code></pre>
","3612949"
"How do I disable a href link in JavaScript?","280580","","<p>I have a tag <code>&lt;a href=""#""&gt; Previous &lt;/a&gt; 1 2 3 4 &lt;a href=""#""&gt; Next &lt;/a&gt;</code> and in some conditions I want this tag to be completely disabled.</p>

<p><em>Code from comments (this is how the link is generated)</em></p>

<pre><code>if (n_index != n_pages) 
    a = a+'&lt;li&gt;&lt;a href=""#"" onclick=""javascript:paginateAjaxPage('+(n_index+1) +','+stype+');""&gt;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=""#"" onclick=""javascript:paginateAjaxPage('+n_pages+','+stype+');"" &gt;&gt;&gt;&lt;/a&gt;&lt;/li&gt;'; 
else 
    a = a+'&lt;li&gt;&lt;a style=""cursor: pointer;"" onclick=""return false;""&gt;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a style=""cursor: pointer;"" onclick=""return false"" &gt;&gt;&gt;&lt;/a&gt;&lt;/li&gt;'; 
a = a+'&lt;/ul&gt;&lt;/div&gt;';
</code></pre>
","<p>Try this when you dont want user to redirect on click </p>

<pre><code>&lt;a href=""javascript: void(0)""&gt;I am a useless link&lt;/a&gt;
</code></pre>
","5376510"
"adding and removing classes in angularJs using ng-click","280468","","<p>I am trying to work how to add a class with ngClick. I have uploaded up my code onto plunker <a href=""http://plnkr.co/edit/YRzOYU3gIBa1OfGOBSA0?p=preview"">Click here</a>. Looking at the angular documentation i can't figure out the exact way it should be done. Below is a snippet of my code. Can someone guide me in the right direction</p>

<pre><code> &lt;div ng-show=""isVisible"" ng-class=""{'selected': $index==selectedIndex}"" class=""block""&gt;&lt;/div&gt;
</code></pre>

<p>Controller</p>

<pre><code>var app = angular.module(""MyApp"", []);
app.controller(""subNavController"", function ($scope){

        $scope.toggle = function (){
            $scope.isVisible = ! $scope.isVisible;
        };

        $scope.isVisible = false;
    });
</code></pre>
","<p>You just need to bind a variable into the directive ""ng-class"" and change it from the controller. Here is an example of how to do this:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var app = angular.module(""ap"",[]);

app.controller(""con"",function($scope){
  $scope.class = ""red"";
  $scope.changeClass = function(){
    if ($scope.class === ""red"")
      $scope.class = ""blue"";
    else
      $scope.class = ""red"";
  };
});</code></pre>
<pre class=""snippet-code-css lang-css prettyprint-override""><code>.red{
  color:red;
}

.blue{
  color:blue;
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/angularjs/1.2.23/angular.min.js""&gt;&lt;/script&gt;
&lt;body ng-app=""ap"" ng-controller=""con""&gt;
  &lt;div ng-class=""class""&gt;{{class}}&lt;/div&gt;
  &lt;button ng-click=""changeClass()""&gt;Change Class&lt;/button&gt;    
&lt;/body&gt;</code></pre>
</div>
</div>
</p>

<p>Here is the example working on <a href=""http://jsfiddle.net/geonunez/pWG2S/"">jsFiddle</a></p>
","20460718"
"What does `void 0` mean?","279652","","<blockquote>
  <p><strong>Possible Duplicate:</strong> <br/>
  <a href=""https://stackoverflow.com/questions/1291942/what-does-javascriptvoid0-mean"">What does &ldquo;javascript:void(0)&rdquo; mean?</a></p>
</blockquote>



<p>Reading through the Backbone.js source code, I saw this:</p>

<pre><code>validObj[attr] = void 0;
</code></pre>

<p>What is <code>void 0</code>? What is the purpose of using it here?</p>
","<h2>What does <code>void 0</code> mean?</h2>

<p><a href=""https://developer.mozilla.org/en/JavaScript/Reference/Operators/Special_Operators/void_Operator"" rel=""noreferrer""><code>void</code><sup>[MDN]</sup></a> is a prefix keyword that takes one argument and always returns <code>undefined</code>.</p>

<p><strong>Examples</strong></p>

<pre><code>void 0
void (0)
void ""hello""
void (new Date())
//all will return undefined
</code></pre>

<h2>What's the point of that?</h2>

<p>It seems pretty useless, doesn't it? If it always returns <code>undefined</code>, what's wrong with just using <code>undefined</code> itself?</p>

<p>In a perfect world we would be able to safely just use <code>undefined</code>: it's much simpler and easier to understand than <code>void 0</code>. But in case you've never noticed before, <em>this isn't a perfect world</em>, especially when it comes to Javascript. </p>

<p>The problem with using <code>undefined</code> was that <code>undefined</code> is not a reserved word (<a href=""https://web.archive.org/web/20160311231335/http://wtfjs.com/2010/02/15/undefined-is-mutable"" rel=""noreferrer"">it is actually a property of the global object <sup>[wtfjs]</sup></a>). That is, <code>undefined</code> is a permissible variable name, so you could assign a new value to it at your own caprice.</p>

<pre><code>alert(undefined); //alerts ""undefined""
var undefined = ""new value"";
alert(undefined) // alerts ""new value""
</code></pre>

<p>Note: This is no longer a problem in any environment that supports ECMAScript 5 or newer (i.e. in practice everywhere but IE 8), which defines the <code>undefined</code> property of the global object as read-only (so it is only possible to shadow the variable in your own local scope). However, this information is still useful for backwards-compatibility purposes.</p>

<pre><code>alert(window.hasOwnProperty('undefined')); // alerts ""true""
alert(window.undefined); // alerts ""undefined""
alert(undefined === window.undefined); // alerts ""true""
var undefined = ""new value"";
alert(undefined); // alerts ""new value""
alert(undefined === window.undefined); // alerts ""false""
</code></pre>

<p><code>void</code>, on the other hand, cannot be overidden. <code>void 0</code> will <em>always</em> return <code>undefined</code>. <code>undefined</code>, on the other hand, can be whatever Mr. Javascript decides he wants it to be.</p>

<h2>Why <code>void 0</code>, specifically?</h2>

<p>Why should we use <code>void 0</code>? What's so special about <code>0</code>? Couldn't we just as easily use <code>1</code>, or <code>42</code>, or <code>1000000</code> or <code>""Hello, world!""</code>?</p>

<p>And the answer is, yes, we could, and it would work just as well. The only benefit of passing in <code>0</code> instead of some other argument is that <code>0</code> is short and idiomatic.</p>

<h2>Why is this still relevant?</h2>

<p>Although <code>undefined</code> can generally be trusted in modern JavaScript environments, there is one trivial advantage of <code>void 0</code>: it's shorter. The difference is not enough to worry about when writing code but it can add up enough over large code bases that most code minifiers replace <code>undefined</code> with <code>void 0</code> to reduce the number of bytes sent to the browser.</p>
","7452352"
"how to change the style of alert box","279605","","<p>I need to change the style of the ""OK"" Button in an alert box.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;head&gt;
    &lt;script type=""text/javascript""&gt;
        function show_alert() {
            alert(""Hello! I am an alert box!"");
        }
    &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;input type=""button"" onclick=""show_alert()"" value=""Show alert box"" /&gt;
&lt;/body&gt;</code></pre>
</div>
</div>
</p>
","<p>The alert box is a system object, and not subject to CSS. To do this style of thing you would need to create an HTML element and mimic the <code>alert()</code> functionality. The jQuery UI Modal box does a lot of the work for you, working basically as I have described: <a href=""http://jqueryui.com/demos/dialog/"" rel=""noreferrer"">Link</a>.</p>
","7853150"
"Browser detection in JavaScript?","279570","","<p>How do I determine the exact browser and version using JavaScript?</p>
","<pre><code>navigator.sayswho= (function(){
    var ua= navigator.userAgent, tem,
    M= ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
    if(/trident/i.test(M[1])){
        tem=  /\brv[ :]+(\d+)/g.exec(ua) || [];
        return 'IE '+(tem[1] || '');
    }
    if(M[1]=== 'Chrome'){
        tem= ua.match(/\b(OPR|Edge)\/(\d+)/);
        if(tem!= null) return tem.slice(1).join(' ').replace('OPR', 'Opera');
    }
    M= M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?'];
    if((tem= ua.match(/version\/(\d+)/i))!= null) M.splice(1, 1, tem[1]);
    return M.join(' ');
})();
</code></pre>

<p>As the name implies, this will tell you the  name and version number supplied by the browser.</p>

<p>It is handy for sorting test and error results, when you are testing new code on multiple browsers.</p>
","2401861"
"Javascript ""Uncaught TypeError: object is not a function"" associativity question","279317","","<p>Code is as follows:</p>

<pre><code>&lt;body&gt;
    &lt;a href=""javascript:;"" id=""test""&gt;hello&lt;/a&gt;
&lt;/body&gt;

&lt;script type=""text/javascript""&gt;
    document.getElementById(""test"").addEventListener(""click"", function () {
      test()
    }, false)
    function test() {
      var postTypes = new Array('hello', 'there')   
      (function() { alert('hello there') })()
    }
&lt;/script&gt;
</code></pre>

<p>This will throw an ""Uncaught TypeError: object is not a function"".  If I wrap the anonymous function call/invocation in another set of parentheses it will execute the alert, but still give me an error.  If I put a semi-colon after the ""var postTypes"" definition then it will completely fine.</p>

<p>I was led to believe that javascript does not require semi-colons, so I'm making a guess that there is some weird associativity rules of function application that I am not fully understanding.  I hope someone can give me the answer to why I am getting this error.</p>

<p>Thanks.</p>
","<p>Javascript does require semi-colons, it's just that the interpret will insert it for you on line-breaks when the code becomes syntax-error without it*.</p>

<p>Unfortunately, the code</p>

<pre><code>var a = new B(args)(stuff)()
</code></pre>

<p>is <em>not</em> a syntax error, so no <code>;</code> will be inserted. (An example which can run is</p>

<pre><code>var answer = new Function(""x"", ""return x"")(function(){return 42;})();
</code></pre>

<p>)</p>

<p>To avoid surprises like this, train yourself to always end a statement with <code>;</code>. </p>

<p>(*: Just a thumb-rule. Not always true. The insertion rule is much more complicated. This <a href=""http://inimino.org/~inimino/blog/javascript_semicolons"">blog page</a> about semicolon insertion has more detail.)</p>
","4026909"
"JavaScript for...in vs for","279103","","<p>Do you think there is a big difference in for...in and for loops? What kind of ""for"" do you prefer to use and why?</p>

<p>Let's say we have an array of associative arrays:</p>

<pre><code>var myArray = [{'key': 'value'}, {'key': 'value1'}];
</code></pre>

<p>So we can iterate:</p>

<pre><code>for (var i = 0; i &lt; myArray.length; i++)
</code></pre>

<p>And:</p>

<pre><code>for (var i in myArray)
</code></pre>

<p>I don't see a big difference. Are there any performance issues?</p>
","<p>The choice should be based on the which idiom is best understood.</p>

<p>An array is iterated using:</p>

<pre><code>for (var i = 0; i &lt; a.length; i++)
   //do stuff with a[i]
</code></pre>

<p>An object being used as an associative array is iterated using:</p>

<pre><code>for (var key in o)
  //do stuff with o[key]
</code></pre>

<p>Unless you have earth shattering reasons, stick to the established pattern of usage.</p>
","242888"
"how to get json key and value in javascript?","278999","","<p>I am returning a json as shown below</p>

<pre><code>{""name"": """", ""skills"": """", ""jobtitel"": ""Entwickler"", ""res_linkedin"": ""GwebSearch""}
</code></pre>

<p>I am trying to get each element key and value: </p>

<pre><code>..
}).done(function(data){
    alert(data['jobtitel']);
});
</code></pre>

<p>I am getting <code>undefined</code> in alert. WHY? I tried <code>data.jobtitel</code>, i tried loop but no success.. </p>
","<pre><code>//By using jquery json parser

var obj = $.parseJSON('{""name"": """", ""skills"": """", ""jobtitel"": ""Entwickler"", ""res_linkedin"": ""GwebSearch""}');
alert(obj['jobtitel']);

//By using javasript json parser
var t = JSON.parse('{""name"": """", ""skills"": """", ""jobtitel"": ""Entwickler"", ""res_linkedin"": ""GwebSearch""}');
alert(t['jobtitel'])
</code></pre>

<p><a href=""http://jsfiddle.net/ydd2H/1/"">Check this jsfiddle</a></p>
","18910983"
"How do I determine if a checkbox is checked?","278447","","<p>For some reason, my form does not want to get the value of a checkbox... I am not sure if it is my coding or not, but when I try and <code>alert()</code> the value, I get <code>undefined</code> as a result. What do I have wrong?</p>

<pre><code>&lt;head&gt;
  &lt;script&gt;
    var lfckv = document.getElementById(""lifecheck"").checked
    function exefunction(){
      alert(lfckv);
    }
  &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;label&gt;&lt;input id=""lifecheck"" type=""checkbox"" &gt;Lives&lt;/label&gt;
&lt;/body&gt;
</code></pre>

<p><strong>EDIT</strong></p>

<p>I tried changing it to this</p>

<pre><code>function exefunction() {
    alert(document.getElementById(""lifecheck"").checked);
}
</code></pre>

<p>But now it doesn't even want to <code>execute</code>. What's going wrong?</p>
","<p>Place the <code>var lfckv</code> inside the function. When that line is executed, the body isn't parsed yet and the element <code>""lifecheck""</code> doesn't exist. This works perfectly fine:</p>

<pre><code>&lt;html&gt;
    &lt;head&gt;
        &lt;script language=""javascript"" type=""text/javascript""&gt;
            function exefunction(){
                var lfckv = document.getElementById(""lifecheck"").checked;
                alert(lfckv);
            }
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;label&gt;&lt;input id=""lifecheck"" type=""checkbox"" &gt;Lives&lt;/label&gt;
        &lt;button onclick=""exefunction()""&gt;Check value&lt;/button&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>
","4754729"
"Turning off eslint rule for a specific line","278347","","<p>In order to turn off linting rule for a particular line in JSHint we use the following rule:</p>

<pre><code>/* jshint ignore:start*/
$scope.someVar = ConstructorFunction();
/* jshint ignore:end */
</code></pre>

<p>I have been trying to locate the equivalent of the above for eslint. </p>
","<p>You can use the single line syntax now:</p>

<pre><code>var thing = new Thing(); // eslint-disable-line no-use-before-define
thing.sayHello();

function Thing() {

     this.sayHello = function() { console.log(""hello""); };

}
</code></pre>

<p>Or if you don't want to have a comment on the same line with the actual code, it is possible to disable next line:</p>

<pre><code>// eslint-disable-next-line no-use-before-define
var thing = new Thing();
</code></pre>

<p>Requested docs link: <a href=""http://eslint.org/docs/user-guide/configuring.html#configuring-rules"" rel=""noreferrer"">http://eslint.org/docs/user-guide/configuring.html#configuring-rules</a></p>
","29592334"
"$(window).scrollTop() vs. $(document).scrollTop()","277991","","<p>What's the difference between:</p>

<pre><code>$(window).scrollTop()
</code></pre>

<p>and </p>

<pre><code>$(document).scrollTop()
</code></pre>

<p>Thanks.</p>
","<p>They are both going to have <strong>the same effect</strong>.</p>

<p>However, as pointed out in the comments: <strong><code>$(window).scrollTop()</code> is supported by more web browsers</strong> than <code>$('html').scrollTop()</code>. </p>

<p><strong>Edit:2017</strong>
Just use <code>window.scrollTo(0,0)</code></p>
","5371386"
"javascript check for not null","277541","","<p>Below is a code snippet, where we retrieve a form value.
Before further processing check if the value is not null..</p>

<pre><code>var val = document.FileList.hiddenInfo.value;
alert(""val is "" + val);  // this prints null which is as expected
if (val != null)
{
   alert(""value is ""+val.length); // this returns 4
}
else
{
   alert(""value* is null"");
}
</code></pre>

<p>Any ideas why it happens so.. ??</p>
","<p>It's because val is not <code>null</code>, but contains <code>'null'</code> as a string.</p>

<p>Try to check with 'null'</p>

<pre><code>if ('null' != val)
</code></pre>
","2422956"
"javascript regexp remove all special characters","277376","","<p>I would like one RegExp that will remove all special characters from a string. I am trying something like this but it doesn't work in IE7 (which is what the works intranet uses). Works in Firefox.</p>

<pre><code>var specialChars = ""!@#$^&amp;%*()+=-[]\/{}|:&lt;&gt;?,."";
for (var i = 0; i &lt; specialChars.length; i++) {
    stringToReplace = stringToReplace .replace(new RegExp(""\\"" + specialChars[i], 'gi'), '');
}
</code></pre>

<p>I suck with RegExp so a detailed description of it would be helpful as well.</p>
","<pre><code>var desired = stringToReplace.replace(/[^\w\s]/gi, '')
</code></pre>

<p>As was mentioned in the comments it's easier to do this as a whitelist - replace the characters which <em>aren't</em> in your safelist. </p>

<p>The caret (<code>^</code>) character is the negation of the set <code>[...]</code>, <code>gi</code> say global and case-insensitive (the latter is a bit redundant but I wanted to mention it) and the safelist in this example is digits, word characters, underscores (<code>\w</code>) and whitespace (<code>\s</code>).</p>
","4374890"
"Change the URL in the browser without loading the new page using JavaScript","277328","","<p>How would I have a <a href=""http://en.wikipedia.org/wiki/JavaScript"" rel=""noreferrer"">JavaScript</a> action that may have some effects on the current page but would also change the URL in the browser so if the user hits reload or bookmark the new URL is used?  </p>

<p>It would also be nice if the back button would reload the original URL.</p>

<p>I am trying to record JavaScript state in the URL.</p>
","<p>If you want it to work in browsers that don't support <code>history.pushState</code> and <code>history.popState</code> yet, the ""old"" way is to set the fragment identifier, which won't cause a page reload.</p>

<p>The basic idea is to set the <code>window.location.hash</code> property to a value that contains whatever state information you need, then either use the <a href=""https://developer.mozilla.org/en/DOM/window.onhashchange"" rel=""noreferrer"">window.onhashchange event</a>, or for older browsers that don't support <code>onhashchange</code> (IE &lt; 8, Firefox &lt; 3.6), periodically check to see if the hash has changed (using <code>setInterval</code> for example) and update the page. You will also need to check the hash value on page load to set up the initial content.</p>

<p>If you're using jQuery there's a <a href=""http://benalman.com/projects/jquery-hashchange-plugin/"" rel=""noreferrer"">hashchange plugin</a> that will use whichever method the browser supports. I'm sure there are plugins for other libraries as well.</p>

<p>One thing to be careful of is colliding with ids on the page, because the browser will scroll to any element with a matching id.</p>
","136506"
"How to use FormData for ajax file upload","276494","","<p>This is my html which I'm generating dynamically using drag and drop functionality.</p>

<pre><code>&lt;form method=""POST"" id=""contact"" name=""13"" class=""form-horizontal wpc_contact"" novalidate=""novalidate"" enctype=""multipart/form-data""&gt;
&lt;fieldset&gt;
    &lt;div id=""legend"" class=""""&gt;
        &lt;legend class=""""&gt;file demoe 1&lt;/legend&gt;
        &lt;div id=""alert-message"" class=""alert hidden""&gt;&lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=""control-group""&gt;
        &lt;!-- Text input--&gt;
        &lt;label class=""control-label"" for=""input01""&gt;Text input&lt;/label&gt;
        &lt;div class=""controls""&gt;
            &lt;input type=""text"" placeholder=""placeholder"" class=""input-xlarge"" name=""name""&gt;
            &lt;p class=""help-block"" style=""display:none;""&gt;text_input&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=""control-group""&gt;  &lt;/div&gt;
        &lt;label class=""control-label""&gt;File Button&lt;/label&gt;

        &lt;!-- File Upload --&gt; 
        &lt;div class=""controls""&gt;
            &lt;input class=""input-file"" id=""fileInput"" type=""file"" name=""file""&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=""control-group""&gt;    

        &lt;!-- Button --&gt; 
        &lt;div class=""controls""&gt;
            &lt;button class=""btn btn-success""&gt;Button&lt;/button&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/fieldset&gt;
&lt;/form&gt; 
</code></pre>

<p>this is my js code...</p>

<pre><code>&lt;script&gt;
    $('.wpc_contact').submit(function(event){
        var formname = $('.wpc_contact').attr('name');
        var form = $('.wpc_contact').serialize();               
        var FormData = new FormData($(form)[1]);

        $.ajax({
            url : '&lt;?php echo plugins_url(); ?&gt;'+'/wpc-contact-form/resources/js/tinymce.php',
            data : {form:form,formname:formname,ipadd:ipadd,FormData:FormData},
            type : 'POST',
            processData: false,
            contentType: false,
            success : function(data){
            alert(data); 
            }
        });
   }
</code></pre>
","<p>For correct form data usage you need to do 2 steps. </p>

<p><strong>Preparations</strong></p>

<p>You can give your whole form to FormData() for processing</p>

<pre><code>var form = $('form')[0]; // You need to use standard javascript object here
var formData = new FormData(form);
</code></pre>

<p>or specify exact data for FormData()</p>

<pre><code>var formData = new FormData();
formData.append('section', 'general');
formData.append('action', 'previewImg');
// Attach file
formData.append('image', $('input[type=file]')[0].files[0]); 
</code></pre>

<p><strong>Sending form</strong></p>

<p>Ajax request with jquery will looks like this:</p>

<pre><code>$.ajax({
    url: 'Your url here',
    data: formData,
    type: 'POST',
    contentType: false, // NEEDED, DON'T OMIT THIS (requires jQuery 1.6+)
    processData: false, // NEEDED, DON'T OMIT THIS
    // ... Other options like success and etc
});
</code></pre>

<p>After this it will send ajax request like you submit regular form with <code>enctype=""multipart/form-data""</code></p>

<p>Update: This request cannot work without <code>type:""POST""</code> in options, cause all files must be sent via POST request.  </p>

<p><strong>Note:</strong>  <code>contentType: false</code> only available <a href=""http://api.jquery.com/jQuery.ajax/"" rel=""noreferrer"">from jQuery 1.6 onwards</a></p>
","21045034"
"Setting DIV width and height in JavaScript","275916","","<p>I have a <code>div</code> with <code>id=""div_register""</code>. I want to set its <code>width</code> dynamically in JavaScript.</p>

<p>I am using this following code:</p>

<pre><code>getElementById('div_register').style.width=500;
</code></pre>

<p>but this line of code isn't working.</p>

<p>I also tried using the units <code>px</code> like the following, still no luck:</p>

<pre><code>getElementById('div_register').style.width='500px';
</code></pre>

<p>and</p>

<pre><code>getElementById('div_register').style.width='500';
</code></pre>

<p>and</p>

<pre><code>getElementById('div_register').style.width=500px;
</code></pre>

<p>but none of this code is working for me.</p>

<p>I don't know what's going wrong.</p>

<p>I am using Mozilla Firefox.</p>

<p><strong>EDIT</strong></p>

<pre><code>&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Untitled&lt;/title&gt;
        &lt;script&gt;
            function show_update_profile() {
                document.getElementById('black_fade').style.display='block';
                //document.getElementById.('div_register').style.left=((window.innerWidth)-500)/20;
                document.getElementById('div_register').style.height= ""500px"";
                document.getElementById('div_register').style.width= '500px';
                //alert('kutta');
                  document.getElementById('div_register').style.display='block';
                document.getElementById('register_flag').value= 1;
                document.getElementById('physical_flag').value= 0;
                document.getElementById('cultural_flag').value= 0;
                document.getElementById('professional_flag').value= 0;
                document.getElementById('lifestyle_flag').value= 0;
                document.getElementById('hobby_flag').value= 0;
                //alert(window.innerWidth);
            }
        &lt;/script&gt;
        &lt;style&gt;
            .white_content {
                display:none;
            }
        &lt;/style&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;div id=""main""&gt;
            &lt;input type=""button"" onclick=""javascript:show_update_profile();"" id=""show"" name=""show"" value=""show""/&gt;
        &lt;/div&gt;
        &lt;div id=""div_register""&gt;
            &lt;table cellpadding=""0"" cellspacing=""0"" border=""0""&gt;
                &lt;tr&gt;
                    &lt;td&gt;
                      welcome 
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/table&gt;
        &lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>
","<p>The properties you're using may not work in Firefox, Chrome, and other non-IE browsers. To make this work in all browsers, I also suggest adding the following:</p>

<pre><code>document.getElementById('div_register').setAttribute(""style"",""width:500px"");
</code></pre>

<p>For cross-compatibility, you will still need to use the property. Order may also matter. For instance, in my code, when setting style properties with JavaScript, I set the style attribute first, then I set the properties:</p>

<pre><code>document.getElementById(""mydiv"").setAttribute(""style"",""display:block;cursor:pointer;cursor:hand;"");
document.getElementById(""mydiv"").style.display = ""block"";
document.getElementById(""mydiv"").style.cursor = ""hand"";
</code></pre>

<p>Thus, the most cross-browser compatible example for you would be:</p>

<pre><code>document.getElementById('div_register').setAttribute(""style"",""display:block;width:500px"");
document.getElementById('div_register').style.width='500px';
</code></pre>

<p>I also want to point out that a much easier method of managing styles is to use a CSS class selector and put your styles in external CSS files. Not only will your code be much more maintainable, but you'll actually make friends with your Web designers!</p>

<pre><code>document.getElementById(""div_register"").setAttribute(""class"",""wide"");

.wide {
    display:block;
    width:500px;
}

.hide {
    display:none;
}

.narrow {
    display:block;
    width:100px;
}
</code></pre>

<p>Now, I can easily just add and remove a class attribute, one single property, instead of calling multiple properties. In addition, when your Web designer wants to change the definition of what it means to be wide, he or she does not need to go poking around in your beautifully maintained JavaScript code. Your JavaScript code remains untouched, yet the theme of your application can be easily customized.</p>

<p>This technique follows the rule of separating your content (HTML) from your behavior (JavaScript), and your presentation (CSS).</p>
","10118190"
"Form Validation With Bootstrap (jQuery)","275880","","<p>Can someone please help me with this code? I am using bootstrap for the form and trying to validate it with jQuery. Unfortunately, the form validation isn't telling me what I'm doing wrong. I got the script from <a href=""http://jqueryvalidation.org/documentation/"" rel=""nofollow"">http://jqueryvalidation.org/documentation/</a> and followed a tutorial for client-sided validation.</p>

<pre><code>&lt;!DOCTYPE html&gt;

&lt;html&gt;
&lt;head&gt;
        &lt;meta charset=""utf=8""&gt;
        &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1.0""&gt;
&lt;script src=""js/jquery.validate.min.js""&gt;&lt;/script&gt; //Script found online

        &lt;script&gt;
            $(document).ready(function(){

             $('#contact-form').validate(
             {
              rules: {
                name: {
                  minlength: 2,
                  required: true
                },
                email: {
                  required: true,
                  email: true
                },
                message: {
                  minlength: 2,
                  required: true
                }
              },
              highlight: function(element) {
                $(element).closest('.control-group').removeClass('success').addClass('error');
              },
              success: function(element) {
                element
                .text('OK!').addClass('valid')
                .closest('.control-group').removeClass('error').addClass('success');
              }
             });
            }); // end document.ready
        &lt;/script&gt;

    &lt;/head&gt;

    &lt;div class=""hero-unit""&gt;  
        &lt;h1&gt;Contact Form&lt;/h1&gt; &lt;/br&gt;

    &lt;form method=""POST"" action=""contact-form-submission.php"" class=""form-horizontal"" id=""contact-form""&gt;  
        &lt;div class=""control-group""&gt;  
            &lt;label class=""control-label"" for=""name""&gt;Name&lt;/label&gt;  
            &lt;div class=""controls""&gt;  
                &lt;input type=""text"" name=""name"" id=""name"" placeholder=""Your name""&gt;  
            &lt;/div&gt;  
        &lt;/div&gt;  
        &lt;div class=""control-group""&gt;  
            &lt;label class=""control-label"" for=""email""&gt;Email Address&lt;/label&gt;  
            &lt;div class=""controls""&gt;  
                &lt;input type=""text"" name=""email"" id=""email"" placeholder=""Your email address""&gt;  
            &lt;/div&gt;  
        &lt;/div&gt;
        &lt;div class=""control-group""&gt;  
            &lt;label class=""control-label"" for=""subject""&gt;Subject&lt;/label&gt;
            &lt;div class=""controls""&gt; 
                    &lt;select id=""subject"" name=""subject""&gt;
                        &lt;option value=""na"" selected=""""&gt;Choose One:&lt;/option&gt;
                        &lt;option value=""service""&gt;Feedback&lt;/option&gt;
                        &lt;option value=""suggestions""&gt;Suggestion&lt;/option&gt;
                        &lt;option value=""support""&gt;Question&lt;/option&gt;
                        &lt;option value=""other""&gt;Other&lt;/option&gt;
                    &lt;/select&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=""control-group""&gt;  
            &lt;label class=""control-label"" for=""message""&gt;Message&lt;/label&gt;  
            &lt;div class=""controls""&gt;  
                &lt;textarea name=""message"" id=""message"" rows=""8"" class=""span5"" placeholder=""The message you want to send to us.""&gt;&lt;/textarea&gt;  
            &lt;/div&gt;  
        &lt;/div&gt;  
        &lt;div class=""form-actions""&gt;  
            &lt;input type=""hidden"" name=""save"" value=""contact""&gt;  
            &lt;button type=""submit"" class=""btn btn-success""&gt;Submit Message&lt;/button&gt; 
            &lt;button type=""reset"" class=""btn""&gt;Cancel&lt;/button&gt;  
        &lt;/div&gt;  
    &lt;/form&gt;  

&lt;/div&gt;  

        &lt;script src=""http://code.jquery.com/jquery-1.10.2.min.js""&gt;&lt;/script&gt;
        &lt;script src=""js/bootstrap.js""&gt;&lt;/script&gt;


    &lt;/body&gt;
</code></pre>

<p></p>
","<p>I had your code setup on jsFiddle to try diagnose the problem.</p>

<p><a href=""http://jsfiddle.net/5WMff/"" rel=""noreferrer"">http://jsfiddle.net/5WMff/</a></p>

<p>However, I don't seem to encounter your issue.
Could you take a look and let us know?</p>

<p><strong>HTML</strong></p>

<pre><code>&lt;div class=""hero-unit""&gt;
 &lt;h1&gt;Contact Form&lt;/h1&gt; 
&lt;/br&gt;
&lt;form method=""POST"" action=""contact-form-submission.php"" class=""form-horizontal"" id=""contact-form""&gt;
    &lt;div class=""control-group""&gt;
        &lt;label class=""control-label"" for=""name""&gt;Name&lt;/label&gt;
        &lt;div class=""controls""&gt;
            &lt;input type=""text"" name=""name"" id=""name"" placeholder=""Your name""&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=""control-group""&gt;
        &lt;label class=""control-label"" for=""email""&gt;Email Address&lt;/label&gt;
        &lt;div class=""controls""&gt;
            &lt;input type=""text"" name=""email"" id=""email"" placeholder=""Your email address""&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=""control-group""&gt;
        &lt;label class=""control-label"" for=""subject""&gt;Subject&lt;/label&gt;
        &lt;div class=""controls""&gt;
            &lt;select id=""subject"" name=""subject""&gt;
                &lt;option value=""na"" selected=""""&gt;Choose One:&lt;/option&gt;
                &lt;option value=""service""&gt;Feedback&lt;/option&gt;
                &lt;option value=""suggestions""&gt;Suggestion&lt;/option&gt;
                &lt;option value=""support""&gt;Question&lt;/option&gt;
                &lt;option value=""other""&gt;Other&lt;/option&gt;
            &lt;/select&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=""control-group""&gt;
        &lt;label class=""control-label"" for=""message""&gt;Message&lt;/label&gt;
        &lt;div class=""controls""&gt;
            &lt;textarea name=""message"" id=""message"" rows=""8"" class=""span5"" placeholder=""The message you want to send to us.""&gt;&lt;/textarea&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=""form-actions""&gt;
        &lt;input type=""hidden"" name=""save"" value=""contact""&gt;
        &lt;button type=""submit"" class=""btn btn-success""&gt;Submit Message&lt;/button&gt;
        &lt;button type=""reset"" class=""btn""&gt;Cancel&lt;/button&gt;
    &lt;/div&gt;
&lt;/form&gt;
</code></pre>

<p></p>

<p><strong>Javascript</strong></p>

<pre><code>$(document).ready(function () {

$('#contact-form').validate({
    rules: {
        name: {
            minlength: 2,
            required: true
        },
        email: {
            required: true,
            email: true
        },
        message: {
            minlength: 2,
            required: true
        }
    },
    highlight: function (element) {
        $(element).closest('.control-group').removeClass('success').addClass('error');
    },
    success: function (element) {
        element.text('OK!').addClass('valid')
            .closest('.control-group').removeClass('error').addClass('success');
    }
});
});
</code></pre>
","18296426"
"How to enable CORS in AngularJs","275726","","<p>I have created a demo using JavaScript for Flickr photo search API. 
Now I am converting it to the AngularJs.
I have searched on internet and found below configuration. </p>

<p>Configuration:</p>

<pre><code>myApp.config(function($httpProvider) {
  $httpProvider.defaults.useXDomain = true;
  delete $httpProvider.defaults.headers.common['X-Requested-With'];
});
</code></pre>

<p>Service:</p>

<pre><code>myApp.service('dataService', function($http) {
    delete $http.defaults.headers.common['X-Requested-With'];
    this.flickrPhotoSearch = function() {
        return $http({
            method: 'GET',
            url: 'http://api.flickr.com/services/rest/?method=flickr.photos.search&amp;api_key=3f807259749363aaa29c76012fa93945&amp;tags=india&amp;format=json&amp;callback=?',
            dataType: 'jsonp',
            headers: {'Authorization': 'Token token=xxxxYYYYZzzz'}
         });
     }
});
</code></pre>

<p>Controller:</p>

<pre><code>myApp.controller('flickrController', function($scope, dataService) {
        $scope.data = null;
        dataService.flickrPhotoSearch().then(function(dataResponse) {
            $scope.data = dataResponse;
            console.log($scope.data);
        });
    });
</code></pre>

<p>But still I got the same error.
Here are some links I tried:</p>

<p><a href=""https://stackoverflow.com/q/18733104/3115091"">XMLHttpRequest cannot load URL. Origin not allowed by Access-Control-Allow-Origin</a></p>

<p><a href=""http://samurails.com/tutorial/cors-with-angular-js-and-sinatra/"" rel=""noreferrer"">http://samurails.com/tutorial/cors-with-angular-js-and-sinatra/</a></p>

<p><strong>EDIT:</strong></p>

<p>I created a proxy server in node.js on suggestion of @Quentin:</p>

<pre><code>var http = require('http');
var url = require('url');
var fs = require('fs');
var server;

server = http.createServer(function (req, res) {
    // your normal server code
    var path = url.parse(req.url).pathname;
    fs.readFile(__dirname + path, function (err, data) {
        if (err) {
            return send404(res);
        }
        res.writeHead(200, {'Content-Type':path == 'json.js' ? 'text/javascript' : 'text/html'});
        res.write(data, 'utf8');
        res.end();
    });
}),
server.listen(8001);
//using express to load customizes static files
var express = require(""express""),
    app = express();

app.all(""/api/*"", function (req, res, next) {
    res.header(""Access-Control-Allow-Origin"", ""*"");
    res.header(""Access-Control-Allow-Headers"", ""Cache-Control, Pragma, Origin, Authorization, Content-Type, X-Requested-With"");
    res.header(""Access-Control-Allow-Methods"", ""GET, PUT, POST"");
    return next();
});
app.use(""/js"", express.static(__dirname + '/js'));
app.listen(3001);
</code></pre>

<p><strong>Final Edit</strong></p>

<p>I removed the Authorization header</p>

<p><code>headers: {'Authorization': 'Token token=xxxxYYYYZzzz'}</code> </p>

<p>and it is running alright. I have got what I wanted.
Thanks everyone for participation in this question</p>
","<p>You don't. The server you are making the request to has to implement CORS to grant JavaScript from your website access. Your JavaScript can't grant itself permission to access another website.</p>
","23824093"
"What's the difference between event.stopPropagation and event.preventDefault?","275641","","<p>They seem to be doing the same thing... Is one modern and one old? Or are they supported by different browsers?</p>

<p>When I handle events myself (without framework) I just always check for both and execute both if present. (I also <code>return false</code>, but I have the feeling that doesn't work with events attached with <code>node.addEventListener</code>).</p>

<p>So why both? Should I keep checking for both? Or is there actually a difference?</p>

<p>(I know, a lot of questions, but they're all sort of the same =))</p>
","<p><code>stopPropagation</code> stops the event from bubbling up the event chain.</p>

<p><code>preventDefault</code> prevents the default action the browser makes on that event.</p>

<p>Let's say you have</p>

<pre><code>&lt;div id=""foo""&gt;
 &lt;button id=""but"" /&gt;
&lt;/div&gt;

$(""#foo"").click(function() {
   // mouse click on div
});

$(""#but"").click(function(ev) {
   // mouse click on button
   ev.stopPropagation();
});
</code></pre>

<p><strong>Example</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>$(""#but"").click(function(event){
  event.preventDefault();
 });


$(""#foo"").click(function(){
 alert(""parent click event fired !"");
});</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;
&lt;div id=""foo""&gt;
  &lt;button id=""but""&gt;button&lt;/button&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>$(""#but"").click(function(event){
  event.stopPropagation();
 });


$(""#foo"").click(function(){
 alert(""parent click event fired !"");
});</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;
&lt;div id=""foo""&gt;
  &lt;button id=""but""&gt;button&lt;/button&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
</p>

<p>With <code>stopPropagation</code> only the <strong>buttons click handler</strong> is called and the <strong>divs click handler</strong> never fires.</p>

<p>Where as if you just <code>preventDefault</code> only the browsers default action is stopped but the div's click handler still fires.</p>

<p>Below are some docs on the DOM event objects from <code>MDN</code> and <code>MSDN</code></p>

<p><strong>MDN:</strong></p>

<ul>
<li><a href=""https://developer.mozilla.org/en-US/docs/Web/API/Event/cancelBubble"" rel=""noreferrer""><code>event.cancelBubble</code></a></li>
<li><a href=""https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault"" rel=""noreferrer""><code>event.preventDefault</code></a></li>
<li><a href=""https://developer.mozilla.org/en-US/docs/Web/API/Event/returnValue"" rel=""noreferrer""><code>event.returnValue</code></a></li>
<li><a href=""https://developer.mozilla.org/en-US/docs/Web/API/Event/stopPropagation"" rel=""noreferrer""><code>event.stopPropagation</code></a></li>
</ul>

<p>For IE9 and FF you can just use preventDefault &amp; stopPropagation.</p>

<p>To support IE8 and lower replace <code>stopPropagation</code> with <code>cancelBubble</code> and replace <code>preventDefault</code> with <code>returnValue</code></p>
","5963688"
"Strip all non-numeric characters from string in JavaScript","275621","","<p>Consider a non-DOM scenario where you'd want to remove all non-numeric characters from a string using JavaScript/ECMAScript. Any characters that are in range 0 - 9 should be kept.</p>

<pre><code>var myString = 'abc123.8&lt;blah&gt;';

//desired output is 1238
</code></pre>

<p>How would you achieve this in plain JavaScript? Please remember this is a non-DOM scenario, so jQuery and other solutions involving browser and keypress events aren't suitable.</p>
","<p>Use the string's <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace"" rel=""noreferrer""><code>.replace</code></a> method with a regex of <code>\D</code>, which is a shorthand character class that matches all non-digits:</p>

<pre><code>myString = myString.replace(/\D/g,'');
</code></pre>
","1862219"
"Javascript - Track mouse position","275397","","<p>I am hoping to track the position of the mouse cursor, periodically every t mseconds. So essentially, when a page loads - this tracker should start and for (say) every 100 ms, I should get the new value of posX and posY and print it out in the form. </p>

<p>I tried the following code - but the values do not get refreshed - only the initial values of posX and posY show up in the form boxes. Any ideas on how I can get this up and running ? </p>

<pre><code>&lt;html&gt;
&lt;head&gt;
&lt;title&gt; Track Mouse &lt;/title&gt;
&lt;script type=""text/javascript""&gt;
function mouse_position()
{
    var e = window.event;

    var posX = e.clientX;
    var posY = e.clientY;

    document.Form1.posx.value = posX;
    document.Form1.posy.value = posY;

    var t = setTimeout(mouse_position,100);

}
&lt;/script&gt;

&lt;/head&gt;

&lt;body onload=""mouse_position()""&gt;
&lt;form name=""Form1""&gt;
POSX: &lt;input type=""text"" name=""posx""&gt;&lt;br&gt;
POSY: &lt;input type=""text"" name=""posy""&gt;&lt;br&gt;
&lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
","<p>The mouse's position is reported on the <code>event</code> object received by a handler for the <code>mousemove</code> event, which you can attach to the window (the event bubbles):</p>

<pre><code>(function() {
    document.onmousemove = handleMouseMove;
    function handleMouseMove(event) {
        var dot, eventDoc, doc, body, pageX, pageY;

        event = event || window.event; // IE-ism

        // If pageX/Y aren't available and clientX/Y are,
        // calculate pageX/Y - logic taken from jQuery.
        // (This is to support old IE)
        if (event.pageX == null &amp;&amp; event.clientX != null) {
            eventDoc = (event.target &amp;&amp; event.target.ownerDocument) || document;
            doc = eventDoc.documentElement;
            body = eventDoc.body;

            event.pageX = event.clientX +
              (doc &amp;&amp; doc.scrollLeft || body &amp;&amp; body.scrollLeft || 0) -
              (doc &amp;&amp; doc.clientLeft || body &amp;&amp; body.clientLeft || 0);
            event.pageY = event.clientY +
              (doc &amp;&amp; doc.scrollTop  || body &amp;&amp; body.scrollTop  || 0) -
              (doc &amp;&amp; doc.clientTop  || body &amp;&amp; body.clientTop  || 0 );
        }

        // Use event.pageX / event.pageY here
    }
})();
</code></pre>

<p>(Note that the body of that <code>if</code> will only run on old IE.)</p>

<p><a href=""http://jsbin.com/gejuz/1"" rel=""noreferrer"">Example of the above in action</a> - it draws dots as you drag your mouse over the page. (Tested on IE8, IE11, Firefox 30, Chrome 38.)</p>

<p>If you really need a timer-based solution, you combine this with some state variables:</p>

<pre><code>(function() {
    var mousePos;

    document.onmousemove = handleMouseMove;
    setInterval(getMousePosition, 100); // setInterval repeats every X ms

    function handleMouseMove(event) {
        var dot, eventDoc, doc, body, pageX, pageY;

        event = event || window.event; // IE-ism

        // If pageX/Y aren't available and clientX/Y are,
        // calculate pageX/Y - logic taken from jQuery.
        // (This is to support old IE)
        if (event.pageX == null &amp;&amp; event.clientX != null) {
            eventDoc = (event.target &amp;&amp; event.target.ownerDocument) || document;
            doc = eventDoc.documentElement;
            body = eventDoc.body;

            event.pageX = event.clientX +
              (doc &amp;&amp; doc.scrollLeft || body &amp;&amp; body.scrollLeft || 0) -
              (doc &amp;&amp; doc.clientLeft || body &amp;&amp; body.clientLeft || 0);
            event.pageY = event.clientY +
              (doc &amp;&amp; doc.scrollTop  || body &amp;&amp; body.scrollTop  || 0) -
              (doc &amp;&amp; doc.clientTop  || body &amp;&amp; body.clientTop  || 0 );
        }

        mousePos = {
            x: event.pageX,
            y: event.pageY
        };
    }
    function getMousePosition() {
        var pos = mousePos;
        if (!pos) {
            // We haven't seen any movement yet
        }
        else {
            // Use pos.x and pos.y
        }
    }
})();
</code></pre>

<p>As far as I'm aware, you can't get the mouse position without having seen an event, something which <a href=""https://stackoverflow.com/questions/1133807/mouse-position-using-jquery-outside-of-events"">this answer to another Stack Overflow question</a> seems to confirm.</p>

<p><strong>Side note</strong>: If you're going to do something every 100ms (10 times/second), try to keep the actual processing you do in that function <em>very, very limited</em>. That's a lot of work for the browser, particularly older Microsoft ones. Yes, on modern computers it doesn't seem like much, but there is a lot going on in browsers... So for example, you might keep track of the last position you processed and bail from the handler immediately if the position hasn't changed.</p>
","7790764"
"What is the difference between Bower and npm?","275001","","<p>What is the fundamental difference between <code>bower</code> and <code>npm</code>? Just want something plain and simple. I've seen some of my colleagues use <code>bower</code> and <code>npm</code> interchangeably in their projects.</p>
","<p><a href=""https://www.npmjs.org"" rel=""noreferrer"">npm</a> is most commonly used for managing Node.js modules, but it works for the front-end too when combined with <a href=""http://browserify.org/"" rel=""noreferrer"">Browserify</a> and/or <code>$ npm dedupe</code>.</p>

<p><a href=""http://bower.io"" rel=""noreferrer"">Bower</a> is created solely for the front-end and is optimized with that in mind. The biggest difference is that npm does nested dependency tree <em>(size heavy)</em> while Bower requires a flat dependency tree <em>(puts the burden of dependency resolution on the user)</em>.</p>

<p>A nested dependency tree means that your dependencies can have their own dependencies which can have their own, and so on. This is really great on the server where you don't have to care much about space and latency. It lets you not have to care about dependency conflicts as all your dependencies use e.g. their own version of Underscore. This obviously doesn't work that well on the front-end. Imagine a site having to download three copies of jQuery.</p>

<p>The reason many projects use both is that they use Bower for front-end packages and npm for developer tools like Yeoman, Grunt, Gulp, JSHint, CoffeeScript, etc.</p>

<p>All package managers have many downsides. You just have to pick which you can live with.</p>

<hr>

<h2>Resources</h2>

<ul>
<li><a href=""http://maxogden.com/nested-dependencies.html"" rel=""noreferrer"">Nested Dependencies</a> - Insight into why node_modules works the way it does</li>
</ul>
","18652918"
"How do I handle newlines in JSON?","274486","","<p>I've generated some JSON and I'm trying to pull it into an object in JavaScript. I keep getting errors. Here's what I have:</p>

<pre><code>var data = '{""count"" : 1, ""stack"" : ""sometext\n\n""}';
var dataObj = eval('('+data+')');
</code></pre>

<p>This gives me an error: </p>

<pre><code>unterminated string literal
</code></pre>

<p>With <code>JSON.parse(data)</code>, I see similar error messages: ""<code>Unexpected token ↵</code>"" in Chrome, and ""<code>unterminated string literal</code>"" in Firefox and IE.</p>

<p>When I take out the <code>\n</code> after <code>sometext</code> the error goes away in both cases. I can't seem to figure out why the <code>\n</code> makes <code>eval</code> and <code>JSON.parse</code> fail.  </p>
","<p>I guess this is what you want:</p>

<pre><code>var data = '{""count"" : 1, ""stack"" : ""sometext\\n\\n""}';
</code></pre>

<p>(You need to escape the ""\"" in your string (turning it into a double-""\""), otherwise it will become a newline in the JSON source, not the JSON data.)</p>
","42073"
"Changing button text onclick","274339","","<p>When I click on this button, I want the value to change. HTML:</p>

<pre><code>&lt;input onclick=""change()"" type=""button"" value=""Open Curtain"" id=myButton1""&gt;&lt;/input&gt;
</code></pre>

<p>Javascript:</p>

<pre><code>function change();
{
document.getElementById(""myButton1"").value=""Close Curtain"";
}
</code></pre>

<p>The button is displaying open curtain right now and I want it to change to close curtain, is this correct? </p>
","<p>If I've understood your question correctly, you want to toggle between 'Open Curtain' and 'Close Curtain' -- changing to the 'open curtain' if it's closed or vice versa. If that's what you need this will work.</p>

<pre><code>function change() // no ';' here
{
    if (this.value==""Close Curtain"") this.value = ""Open Curtain"";
    else this.value = ""Close Curtain"";
}
</code></pre>

<p>Note that you don't need to use <code>document.getElementById(""myButton1"")</code> inside change as it is called in the <strong>context</strong> of <code>myButton1</code> -- what I mean by context you'll come to know later, on reading books about JS.</p>

<p><strong>UPDATE</strong>:</p>

<p>I was wrong. Not as I said earlier, <code>this</code> won't refer to the element itself. You can use this:</p>

<pre><code>function change() // no ';' here
{
    var elem = document.getElementById(""myButton1"");
    if (elem.value==""Close Curtain"") elem.value = ""Open Curtain"";
    else elem.value = ""Close Curtain"";
}
</code></pre>
","10671201"
"How can you detect the version of a browser?","273745","","<p>I've been searching around for code that would let me detect if the user visiting the website has Firefox 3 or 4. All I have found is code to detect the type of browser but not the version.</p>

<p>How can I detect the version of a browser like this?</p>
","<p>You can see what the browser <strong>says</strong>, and use that information for logging or testing multiple browsers.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>navigator.sayswho= (function(){
    var ua= navigator.userAgent, tem, 
    M= ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
    if(/trident/i.test(M[1])){
        tem=  /\brv[ :]+(\d+)/g.exec(ua) || [];
        return 'IE '+(tem[1] || '');
    }
    if(M[1]=== 'Chrome'){
        tem= ua.match(/\b(OPR|Edge)\/(\d+)/);
        if(tem!= null) return tem.slice(1).join(' ').replace('OPR', 'Opera');
    }
    M= M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?'];
    if((tem= ua.match(/version\/(\d+)/i))!= null) M.splice(1, 1, tem[1]);
    return M.join(' ');
})();

console.log(navigator.sayswho);</code></pre>
</div>
</div>
</p>
","5918791"
"Call two functions from same onclick","273713","","<p><strong>HTML &amp; JS</strong></p>

<p>How do I call 2 functions from one onclick event? 
Here's my code</p>

<pre><code> &lt;input id =""btn"" type=""button"" value=""click"" onclick=""pay() cls()""/&gt;
</code></pre>

<p>the two functions being pay() and cls(). 
Thanks!     </p>
","<p>Add semi-colons <code>;</code> to the end of the function calls in order for them both to work.</p>

<pre><code> &lt;input id=""btn"" type=""button"" value=""click"" onclick=""pay(); cls();""/&gt;
</code></pre>

<p>I don't believe the last one is <em>required</em> but hey, might as well add it in for good measure.</p>

<p>Here is a good reference from SitePoint <a href=""http://reference.sitepoint.com/html/event-attributes/onclick"">http://reference.sitepoint.com/html/event-attributes/onclick</a></p>
","16025176"
"jQuery remove options from select","273693","","<p>I have a page with 5 selects that all have a class name 'ct'. I need to remove the option with a value of 'X' from each select while running an onclick event. My code is:</p>

<pre><code>$("".ct"").each(function() {
    $(this).find('X').remove();
   });
</code></pre>

<p>Where am I going wrong?</p>
","<p>Try this:</p>

<pre><code>$("".ct option[value='X']"").each(function() {
    $(this).remove();
});
</code></pre>

<p>Or to be more terse, this will work just as well:</p>

<pre><code>$("".ct option[value='X']"").remove();
</code></pre>
","1518218"
"How Can I Wait In Node.js (Javascript), l need to pause for a period of time","273571","","<p>I'm developing a console like script for personal needs...
I need to be able to pause for a extended amount of time, but as node.js from my research has no way to stop as required.... Its getting hard to read users information off after a period of time... iv seen some code out there, but i believe they have to have other codes inside of them for them to work such as:</p>

<pre><code>setTimeout(function() {
}, 3000);
</code></pre>

<p>But this issue is, i need everything after this line of code to execute after the period of time...</p>

<p>For example, </p>

<pre><code>//start-of-code
console.log('Welcome to My Console,');
some-wait-code-here-for-ten-seconds..........
console.log('Blah blah blah blah extra-blah');
//endcode. 
</code></pre>

<p>I've also seen things like</p>

<pre><code>yield sleep(2000);
</code></pre>

<p>But node.js doesnt recognize this....</p>

<p>If anybody is willing to help, it is so much appreciated.</p>
","<p>Best way to do this is to break your code into multiple functions, like this:</p>

<pre><code>function function1() {
    // stuff you want to happen right away
    console.log('Welcome to My Console,');
}

function function2() {
    // all the stuff you want to happen after that pause
    console.log('Blah blah blah blah extra-blah');
}

// call the first chunk of code right away
function1();

// call the rest of the code and have it execute after 3 seconds
setTimeout(function2, 3000);
</code></pre>

<p>It's similar to <strong>JohnnyHK</strong>'s solution, but much neater and easier to extend.</p>
","14249587"
"Convert php array to Javascript","273403","","<p>How can I convert a PHP array in a format like this</p>

<pre><code>Array
(
    [0] =&gt; 001-1234567
    [1] =&gt; 1234567
    [2] =&gt; 12345678
    [3] =&gt; 12345678
    [4] =&gt; 12345678
    [5] =&gt; AP1W3242
    [6] =&gt; AP7X1234
    [7] =&gt; AS1234
    [8] =&gt; MH9Z2324
    [9] =&gt; MX1234
    [10] =&gt; TN1A3242
    [11] =&gt; ZZ1234
)
</code></pre>

<p>to a Javascript array in the format below?</p>

<pre><code>var cities = [
    ""Aberdeen"",
    ""Ada"",
    ""Adamsville"",
    ""Addyston"",
    ""Adelphi"",
    ""Adena"",
    ""Adrian"",
    ""Akron"",
    ""Albany""
];
</code></pre>
","<p><strong><a href=""https://stackoverflow.com/a/5619038/367456"">Spudley's answer is fine</a>.</strong></p>

<blockquote>
  <p><strong>Security Notice:</strong> <em>The following should not be necessary any longer for you</em></p>
</blockquote>

<p>If you don't have PHP 5.2 you can use something like this:</p>

<pre><code>function js_str($s)
{
    return '""' . addcslashes($s, ""\0..\37\""\\"") . '""';
}

function js_array($array)
{
    $temp = array_map('js_str', $array);
    return '[' . implode(',', $temp) . ']';
}

echo 'var cities = ', js_array($php_cities_array), ';';
</code></pre>
","5619163"
"Client on node: Uncaught ReferenceError: require is not defined","273380","","<p>So, I am writing an application with the node/express + jade combo.</p>

<p>I have <code>client.js</code>, which is loaded on the client. In that file I have code that calls functions from other JavaScript files. My attempt was to use</p>

<pre><code>var m = require('./messages');
</code></pre>

<p>in order to load the contents of <code>messages.js</code> (just like I do on the server side) and later on call functions from that file. However, <code>require</code> is not defined on the client side, and it throws an error of the form <code>Uncaught ReferenceError: require is not defined</code>.</p>

<p>These other JS files are also loaded on runtime at the client because I place the links at the header of the webpage. So the client knows all the functions that are exported from these other files.</p>

<p>How do I call these functions from these other JS files (such as <code>messages.js</code>) in the main <code>client.js</code> file that opens the socket to the server?</p>
","<p>This is because <code>require()</code> does not exist in the browser/client-side JavaScript.</p>

<p>Now you're going to have to make some choices about your client-side JavaScript script management.</p>

<p>You have three options:</p>

<ol>
<li>Use <code>&lt;script&gt;</code> tag.</li>
<li>Use a <a href=""http://wiki.commonjs.org/wiki/CommonJS"" rel=""noreferrer"">CommonJS</a> implementation. Synchronous dependencies like Node.js </li>
<li>Use an <a href=""http://requirejs.org/docs/whyamd.html"" rel=""noreferrer"">AMD</a> implementation. </li>
</ol>

<p><strong>CommonJS</strong> client side-implementations include:</p>

<p>(most of them require a build step before you deploy)</p>

<ol>
<li><a href=""https://github.com/substack/node-browserify"" rel=""noreferrer"">Browserify</a> - You can use most Node.js modules in the browser. This is my personal favorite.</li>
<li><a href=""https://github.com/component/component"" rel=""noreferrer"">Component</a> - Focuses on simplicity. Browser only. Made by the same guy who made Express.js, the (most) popular Node.js web framework.</li>
<li><a href=""https://webpack.github.io/"" rel=""noreferrer"">Webpack</a> - Does everything (bundles JS, CSS, etc). Made popular by the surge of React.js. Notorious for its difficult learning curve.</li>
<li><a href=""http://rollupjs.org/"" rel=""noreferrer"">Rollup</a> - New contender. Leverages ES6 modules. Includes tree-shaking abilities (removes unused code).</li>
</ol>

<p>You can read more about my comparison of <a href=""http://procbits.com/2013/06/17/client-side-javascript-management-browserify-vs-component"" rel=""noreferrer"">Browserify vs Component</a>. </p>

<p><strong>AMD</strong> implementations include:</p>

<ol>
<li><a href=""http://requirejs.org/"" rel=""noreferrer"">RequireJS</a> - Very popular amongst client-side JavaScript developers. Not my taste because of its asynchronous nature.</li>
</ol>

<p>Note, in your search for choosing which one to go with, you'll read about <a href=""https://github.com/bower/bower"" rel=""noreferrer"">Bower</a>. Bower is only for package dependencies and is unopinionated on module definitions like CommonJS and AMD. </p>

<p>Hope this helps some. </p>

<p><strong>Edit (2016-01-16)</strong>:</p>

<p>Added <code>webpack</code> and <code>rollup</code>. I think it's safe to say that in 2016, it's best to avoid <code>component</code>. I'll eventually remove it from the list.</p>
","19059825"
"JavaScript set object key by variable","273043","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/2462800/how-to-create-a-dynamic-key-to-be-added-to-a-javascript-object-variable"">How to create a dynamic key to be added to a javascript object variable</a>  </p>
</blockquote>



<p>I am building some objects in JavaScript and pushing those objects into an array, I am storing the key I want to use in a variable then creating my objects like so:</p>

<pre><code>var key = ""happyCount"";
myArray.push( { key : someValueArray } );
</code></pre>

<p>but when I try to examine my array of objects for every object the key is <code>""key""</code> instead of the value of the variable key. Is there any way to set the value of the key from a variable? </p>

<p>Fiddle for better explanation:
<a href=""http://jsfiddle.net/Fr6eY/3/"" rel=""noreferrer"">http://jsfiddle.net/Fr6eY/3/</a></p>
","<p>You need to make the object first, then use <code>[]</code> to set it.</p>

<pre><code>var key = ""happyCount"";
var obj = {};
obj[key] = someValueArray;
myArray.push(obj);
</code></pre>
","11508490"
"Best way to disable button in Twitter's Bootstrap","272518","","<p>I am confused when it comes to disabling a <code>&lt;button&gt;</code>, <code>&lt;input&gt;</code> or an <code>&lt;a&gt;</code> element with classes: <code>.btn</code> or <code>.btn-primary</code>, with JavaScript/jQuery.</p>

<p>I have used a following snippet to do that:</p>

<pre><code>$('button').addClass('btn-disabled');
$('button').attr('disabled', 'disabled');
$('button').prop('disabled', true);
</code></pre>

<p>So, if I just provide the <code>$('button').addClass('btn-disabled');</code> to my element, it will appear as disabled, visually, but the functionality will remain the same and it will be clickable nontheless, so that it the reason why I added the <code>attr</code> and <code>prop</code> settings to the element.</p>

<p>Has anyone expirenced this same issue out there? Is this the right way of doing this - while using Twitter's Bootstrap?</p>
","<p>You just need the <code>$('button').prop('disabled', true);</code> part, the button will automatically take the disabled class.</p>
","17327775"
"How to disable HTML links","272468","","<p>I have a link button inside a <code>&lt;td&gt;</code> which I have to disable. This works on IE but not working in Firefox and Chrome.
Structure is - Link inside a <code>&lt;td&gt;</code>. I cannot add any container in the <code>&lt;td&gt;</code> (like div/span)</p>

<p>I tried all the following but not working on Firefox (using 1.4.2 js):</p>

<pre><code>$(td).children().each(function () {
        $(this).attr('disabled', 'disabled');
  });


  $(td).children().attr('disabled', 'disabled');

  $(td).children().attr('disabled', true);

  $(td).children().attr('disabled', 'true');
</code></pre>

<p>Note - I cannot de-register the click function for the anchor tag as it is registered dynamically. AND I HAVE TO SHOW THE LINK IN DISABLED MODE.</p>
","<p>You can't disable a link (in a portable way). You can use one of these techniques (each one with its own benefits and disadvantages).</p>

<h1>CSS way</h1>

<p>This should be <strong>the right way</strong> (but see later) to do it when most of browsers will support it:</p>

<pre><code>a.disabled {
    pointer-events: none;
}
</code></pre>

<p>It's what, for example, Bootstrap 3.x does. Currently (2016) it's well supported only by Chrome, FireFox and Opera (19+). Internet Explorer started to support this from version 11 but <a href=""https://stackoverflow.com/questions/10276133/how-to-disable-html-links/10276157#comment41699112_10276157"">not for links</a> however it's available in an outer element like:</p>

<pre><code>span.disable-links {
    pointer-events: none;
}
</code></pre>

<p>With:</p>

<pre><code>&lt;span class=""disable-links""&gt;&lt;a href=""#""&gt;...&lt;/a&gt;&lt;/span&gt;
</code></pre>

<h2>Workaround</h2>

<p>We, probably, need to define a CSS class for <code>pointer-events: none</code> but what if we <em>reuse</em>  the <code>disabled</code> attribute instead of a CSS class? Strictly speaking <code>disabled</code> is not supported for <code>&lt;a&gt;</code> but browsers won't complain for <em>unknown</em> attributes. Using the <code>disabled</code> attribute IE will ignore <code>pointer-events</code> but it will honor IE specific <code>disabled</code> attribute; other CSS compliant browsers will ignore <em>unknown</em> <code>disabled</code> attribute and honor <code>pointer-events</code>. Easier to write than to explain:</p>

<pre><code>a[disabled] {
    pointer-events: none;
}
</code></pre>

<p>Another option for IE 11 is to set <code>display</code> of link elements to <code>block</code> or <code>inline-block</code>:</p>

<pre><code>&lt;a style=""pointer-events: none; display: inline-block;"" href=""#""&gt;...&lt;/a&gt;
</code></pre>

<p>Note that this may be a <em>portable</em> solution if you need to support IE (and you can change your HTML) but...</p>

<p>All this said please note that <code>pointer-events</code> disables only...pointer events. <strong>Links will still be navigable through keyboard</strong> then you also need to apply one of the other techniques described here.</p>

<h1>Focus</h1>

<p>In conjunction with above described CSS technique you may use <code>tabindex</code> in a non-standard way to prevent an element to be focused:</p>

<pre><code>&lt;a href=""#"" disabled tabindex=""-1""&gt;...&lt;/a&gt;
</code></pre>

<p>I never checked its compatibility with many browsers then you may want to test it by yourself before using this. It has the advantage to work without JavaScript. Unfortunately (but obviously) <code>tabindex</code> cannot be changed from CSS.</p>

<h1>Intercept clicks</h1>

<p>Use a <code>href</code> to a JavaScript function, check for the condition (or the disabled attribute itself) and do nothing in case.</p>

<pre><code>$(""td &gt; a"").on(""click"", function(event){
    if ($(this).is(""[disabled]"")) {
        event.preventDefault();
    }
});
</code></pre>

<p>To disable links do this:</p>

<pre><code>$(""td &gt; a"").attr(""disabled"", ""disabled"");
</code></pre>

<p>To re-enable them:</p>

<pre><code>$(""td &gt; a"").removeAttr(""disabled"");
</code></pre>

<p>If you want instead of <code>.is(""[disabled]"")</code> you may use <code>.attr(""disabled"") != undefined</code> (jQuery 1.6+ will always return <code>undefined</code> when the attribute is not set) but <code>is()</code> is much more clear (thanks to Dave  Stewart for this tip). Please note here I'm using the <code>disabled</code> attribute in a non-standard way, if you care about this then replace attribute with a class and replace <code>.is(""[disabled]"")</code> with <code>.hasClass(""disabled"")</code> (adding and removing with <code>addClass()</code> and <code>removeClass()</code>).</p>

<p>Zoltán Tamási <a href=""https://stackoverflow.com/questions/10276133/how-to-disable-html-links/10276157?noredirect=1#comment69158950_10276157"">noted in a comment</a> that <em>""in some cases the click event is already bound to some ""real"" function (for example using knockoutjs) In that case the event handler ordering can cause some troubles. Hence I implemented disabled links by binding a return false handler to the link's <code>touchstart</code>, <code>mousedown</code> and <code>keydown</code> events. It has some drawbacks (it will prevent touch scrolling started on the link)""</em> but handling keyboard events also has the benefit to prevent keyboard navigation.</p>

<p>Note that if <code>href</code> isn't cleared it's possible for the user to manually visit that page.</p>

<h1>Clear the link</h1>

<p>Clear the <code>href</code> attribute. With this code you do not add an event handler but you change the link itself. Use this code to disable links:</p>

<pre><code>$(""td &gt; a"").each(function() {
    this.data(""href"", this.attr(""href""))
        .attr(""href"", ""javascript:void(0)"")
        .attr(""disabled"", ""disabled"");
});
</code></pre>

<p>And this one to re-enable them:</p>

<pre><code>$(""td &gt; a"").each(function() {
    this.attr(""href"", this.data(""href"")).removeAttr(""disabled"");
});
</code></pre>

<p>Personally I do not like this solution very much (if you do not have to do more with disabled links) but it <em>may</em> be more compatible because of various way to follow a link.</p>

<h1>Fake click handler</h1>

<p>Add/remove an <code>onclick</code> function where you <code>return false</code>, link won't be followed. To disable links:</p>

<pre><code>$(""td &gt; a"").attr(""disabled"", ""disabled"").on(""click"", function() {
    return false; 
});
</code></pre>

<p>To re-enable them:</p>

<pre><code>$(""td &gt; a"").removeAttr(""disabled"").off(""click"");
</code></pre>

<p>I do not think there is a reason to prefer this solution instead of the first one.</p>

<h1>Styling</h1>

<p>Styling is even more simple, whatever solution you're using to disable the link we did add a <code>disabled</code> attribute so you can use following CSS rule:</p>

<pre><code>a[disabled] {
    color: gray;
}
</code></pre>

<p>If you're using a class instead of attribute:</p>

<pre><code>a.disabled {
    color: gray;
}
</code></pre>

<p>If you're using an UI framework you may see that <em>disabled</em> links aren't styled properly. Bootstrap 3.x, for example, handles this scenario and button is correctly styled both with <code>disabled</code> attribute and with <code>.disabled</code> class. If, instead, you're clearing the link (or using one of the others JavaScript techniques) you must also handle styling because an <code>&lt;a&gt;</code> without <code>href</code> is still painted as enabled. </p>

<h1>Accessible Rich Internet Applications (ARIA)</h1>

<p>Do not forget to also include an attribute <code>aria-disabled=""true""</code> together with <code>disabled</code> attribute/class.</p>
","10276157"
"How to decode HTML entities using jQuery?","272402","","<p>How do I use jQuery to decode HTML entities in a string?</p>
","<blockquote>
  <p><strong>Security note:</strong> using this answer (preserved in its original form below) may introduce an <a href=""https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)"" rel=""noreferrer"">XSS vulnerability</a> into your application. <strong>You should not use this answer.</strong> Read <a href=""https://stackoverflow.com/a/1395954/1709587"">lucascaro's answer</a> for an explanation of the vulnerabilities in this answer, and use the approach from either that answer or <a href=""https://stackoverflow.com/a/23596964/1709587"">Mark Amery's answer</a> instead.</p>
</blockquote>

<p>Actually, try </p>

<pre><code>var decoded = $(""&lt;div/&gt;"").html(encodedStr).text();
</code></pre>
","2419664"
"use jquery to select a dropdown option","272307","","<p>I was wondering if it's possible to get jQuery to select an option, say the 4th item, in a dropdown box?</p>

<pre><code>&lt;select&gt;
    &lt;option&gt;&lt;/option&gt;
    &lt;option&gt;&lt;/option&gt;
    &lt;option&gt;&lt;/option&gt;
    &lt;option&gt;&lt;/option&gt;
    &lt;option&gt;&lt;/option&gt;
&lt;/select&gt;
</code></pre>

<p>I want the user to click a link, then have the select box change it's value, as if the user has selected it by clicking on the option.</p>
","<p>How about </p>

<pre><code>$('select&gt;option:eq(3)').attr('selected', true);
</code></pre>

<p>example at <a href=""http://www.jsfiddle.net/gaby/CWvwn/"" rel=""noreferrer"">http://www.jsfiddle.net/gaby/CWvwn/</a></p>

<hr>

<p>for modern versions of jquery you should use the <a href=""http://api.jquery.com/prop"" rel=""noreferrer""><code>.prop()</code></a> instead of <code>.attr()</code></p>

<pre><code>$('select&gt;option:eq(3)').prop('selected', true);
</code></pre>

<p>example at <a href=""http://jsfiddle.net/gaby/CWvwn/1763/"" rel=""noreferrer"">http://jsfiddle.net/gaby/CWvwn/1763/</a></p>
","4864640"
"jQuery access input hidden value","272161","","<p>How can I access <code>&lt;input type=""hidden""&gt;</code> tag's <code>value</code> attribute using jQuery?</p>
","<p>You can access hidden fields' values with <code>val()</code>, just like you can do on any other input element:</p>

<pre><code>&lt;input type=""hidden"" id=""foo"" name=""zyx"" value=""bar"" /&gt;

alert($('input#foo').val());
alert($('input[name=zyx]').val());
alert($('input[type=hidden]').val());
alert($(':hidden#foo').val());
alert($('input:hidden[name=zyx]').val());
</code></pre>

<p>Those all mean the same thing in this example.</p>
","4376682"
"How to implement a loading indicator for a bootstrap modal waiting for AJAX to fetch data from the server?","272107","","<p>I have a bootstrap modal which is launched from a link. For about 3 seconds it just sits there blank, while the AJAX query fetches the data from the database. How can I implement some sort of a loading indicator ? Does twitter bootstrap provide this functionality by default ?</p>

<p>EDIT: JS code for modal</p>

<pre><code>&lt;script type=""text/javascript""&gt;
  $('#myModal').modal('hide');
  $('div.divBox a').click(function(){
    var vendor = $(this).text();
    $('#myModal').off('show');
    $('#myModal').on('show', function(){             
      $.ajax({
        type: ""GET"",
        url: ""ip.php"",
        data: ""id="" + vendor,
        success: function(html){
          $(""#modal-body"").html(html);
          $("".modal-header h3"").html(vendor);
          $('.countstable1').dataTable({
            ""sDom"": ""T&lt;'row-fluid'&lt;'span6'l&gt;&lt;'span6'f&gt;r&gt;t&lt;'row-fluid'&lt;'span6'i&gt;&lt;'span6'p&gt;&gt;"",
            ""sPaginationType"": ""bootstrap"",
            ""oLanguage"": {
              ""sLengthMenu"": ""_MENU_ records per page""
            },
            ""aaSorting"":[[0, ""desc""]],
            ""iDisplayLength"": 10,
            ""oTableTools"": {
              ""sSwfPath"": ""swf/copy_csv_xls_pdf.swf"",
              ""aButtons"": [""csv"", ""pdf""]
            }
          });
        }
      });
    });
  });
  $('#myModal').on('hide', function () {
    $(""#modal-body"").empty();
  });
&lt;/script&gt;
</code></pre>
","<p>I'm guessing you're using jQuery.get or some other jQuery ajax function to load the modal. You can show the indicator before the ajax call, and hide it when the ajax completes. Something like</p>

<pre><code>$('#indicator').show();
$('#someModal').get(anUrl, someData, function() { $('#indicator').hide(); });
</code></pre>
","11961508"
"Javascript how to parse JSON array","272066","","<p>I'm using Sencha Touch (ExtJS) to get a JSON message from the server. The message I receive is this one :</p>

<pre><code>{
""success"": true,
""counters"": [
    {
        ""counter_name"": ""dsd"",
        ""counter_type"": ""sds"",
        ""counter_unit"": ""sds""
    },
    {
        ""counter_name"": ""gdg"",
        ""counter_type"": ""dfd"",
        ""counter_unit"": ""ds""
    },
    {
        ""counter_name"": ""sdsData"",
        ""counter_type"": ""sds"",
        ""counter_unit"": ""   dd       ""
    },
    {
        ""counter_name"": ""Stoc final"",
        ""counter_type"": ""number    "",
        ""counter_unit"": ""litri     ""
    },
    {
        ""counter_name"": ""Consum GPL"",
        ""counter_type"": ""number    "",
        ""counter_unit"": ""litri     ""
    },
    {
        ""counter_name"": ""sdg"",
        ""counter_type"": ""dfg"",
        ""counter_unit"": ""gfgd""
    },
    {
        ""counter_name"": ""dfgd"",
        ""counter_type"": ""fgf"",
        ""counter_unit"": ""liggtggggri     ""
    },
    {
        ""counter_name"": ""fgd"",
        ""counter_type"": ""dfg"",
        ""counter_unit"": ""kwfgf       ""
    },
    {
        ""counter_name"": ""dfg"",
        ""counter_type"": ""dfg"",
        ""counter_unit"": ""dg""
    },
    {
        ""counter_name"": ""gd"",
        ""counter_type"": ""dfg"",
        ""counter_unit"": ""dfg""
    }

    ]
}
</code></pre>

<p>My problem is that I can't parse this JSON object so that i can use each of the counter objects.</p>

<p>I'm trying to acomplish that like this :</p>

<pre><code>var jsonData = Ext.util.JSON.decode(myMessage);
for (var counter in jsonData.counters) {
     console.log(counter.counter_name);
 }
</code></pre>

<p>What am i doing wrong ?
Thank you!</p>
","<p>Javascript has a built in JSON parse for strings, which I think is what you have:</p>

<pre><code>var myObject = JSON.parse(""my json string"");
</code></pre>

<p>to use this with your example would be:</p>

<pre><code>var jsonData = JSON.parse(myMessage);
for (var i = 0; i &lt; jsonData.counters.length; i++) {
    var counter = jsonData.counters[i];
    console.log(counter.counter_name);
}
</code></pre>

<p><a href=""http://jsfiddle.net/X6y5B/"">Here is a working example</a></p>

<p><strong>EDIT</strong>: There is a mistake in your use of for loop (I missed this on my first read, credit to @Evert for the spot). using a for-in loop will set the var to be the property name of the current loop, not the actual data. See my updated loop above for correct usage</p>

<p><strong>IMPORTANT</strong>: the <code>JSON.parse</code> method wont work in old old browsers - so if you plan to make your website available through some sort of time bending internet connection, this could be a problem! If you really are interested though, <a href=""http://caniuse.com/#search=JSON.parse"">here is a support chart</a> (which ticks all my boxes).</p>
","9991872"
"How to add/update an attribute to an HTML element using JavaScript?","271950","","<p>I'm trying to find a way that will add / update attribute using JavaScript.  I know I can do it with <code>setAttribute()</code> function but that doesn't work in IE.</p>
","<p>You can read <a href=""http://www.quirksmode.org/dom/w3c_core.html#attributes"" rel=""noreferrer"">here</a> about the behaviour of attributes in many different browsers, including IE.</p>

<p><code>element.setAttribute()</code> should do the trick, even in IE. Did you try it? If it doesn't work, then maybe
<code>element.attributeName = 'value'</code> might work.</p>
","710347"
"How do I clear all options in a dropdown box?","271771","","<p>My code works in IE but breaks in Safari, Firefox, and Opera. (big surprise)</p>

<pre><code>document.getElementById(""DropList"").options.length=0;
</code></pre>

<p>After searching, I've learned that it's the <code>length=0</code> that it doesn't like.<br>
I've tried <code>...options=null</code> and <code>var clear=0; ...length=clear</code> with the same result.</p>

<p>I am doing this to multiple objects at a time, so I am looking for some lightweight JS code.</p>
","<p>You can use the following to clear all the elements. Note that </p>

<pre><code>var select = document.getElementById(""DropList"");
var length = select.options.length;
for (i = 0; i &lt; length; i++) {
  select.options[i] = null;
}
</code></pre>
","3364526"
"Adding items to an object through the .push() method","271722","","<p>I'm doing a loop through few input elements of 'checkbox' type. After that, I'm adding values and checked attributes to an array. This is my code:</p>

<pre><code>var stuff = {};
$('form input[type=checkbox]').each(function() {
    stuff[$(this).attr('value')] = $(this).attr('checked');
});
</code></pre>

<p>This works fine, but I'm just wondering if I can do the exact same thing with .push() method in Jquery?</p>

<p>I've tried something like this but it doesn't work:</p>

<pre><code>stuff.push( {$(this).attr('value'):$(this).attr('checked')} );
</code></pre>

<p><strong>Edit:</strong></p>

<p>I was trying to use .push() method on Object, but .push() is actually just a method of Array Object.</p>
","<p><strong><a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/push"" rel=""noreferrer""><code>.push()</code></a></strong> is a method of the <strong><a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array"" rel=""noreferrer"">Built-in Array Object</a></strong></p>

<p>It is not related to jQuery in any way.</p>

<p>You are defining a literal <strong>Object</strong> with</p>

<pre><code>// Object
var stuff = {};
</code></pre>

<p>You can define a literal <strong>Array</strong> like this</p>

<pre><code>// Array
var stuff = [];
</code></pre>

<p>then </p>

<pre><code>stuff.push(element);
</code></pre>

<hr>

<p>Arrays actually get their bracket syntax <code>stuff[index]</code> inherited from their parent, the Object.  This is why you are able to use it the way you are in your first example.</p>

<p>This is often used for effortless reflection for dynamically accessing properties</p>

<pre><code>stuff = {}; // Object

stuff['prop'] = 'value'; // assign property of an 
                         // Object via bracket syntax

stuff.prop === stuff['prop']; // true
</code></pre>
","7261466"
"How to make a function wait until a callback has been called using node.js","271575","","<p>I have a simplified function that looks like this:</p>

<pre><code>function(query) {
  myApi.exec('SomeCommand', function(response) {
    return response;
  });
}
</code></pre>

<p>Basically i want it to call <code>myApi.exec</code>, and return the response that is given in the callback lambda. However, the above code doesn't work and simply returns immediately.</p>

<p>Just for a very hackish attempt, i tried the below which didn't work, but at least you get the idea what i'm trying to achieve:</p>

<pre><code>function(query) {
  var r;
  myApi.exec('SomeCommand', function(response) {
    r = response;
  });
  while (!r) {}
  return r;
}
</code></pre>

<p>Basically, what's a good 'node.js/event driven' way of going about this? I want my function to wait until the callback gets called, then return the value that was passed to it.</p>
","<p>The ""good node.js /event driven"" way of doing this is to <strong>not wait</strong>.</p>

<p>Like almost everything else when working with event driven systems like node, your function should accept a callback parameter that will be invoked when then computation is complete. The caller should not wait for the value to be ""returned"" in the normal sense, but rather send the routine that will handle the resulting value:</p>

<pre><code>function(query, callback) {
  myApi.exec('SomeCommand', function(response) {
    // other stuff here...
    // bla bla..
    callback(response); // this will ""return"" your value to the original caller
  });
}
</code></pre>

<p>So you dont use it like this:</p>

<pre><code>var returnValue = myFunction(query);
</code></pre>

<p>But like this:</p>

<pre><code>myFunction(query, function(returnValue) {
  // use the return value here instead of like a regular (non-evented) return value
});
</code></pre>
","5010339"
"Where do you include the jQuery library from? Google JSAPI? CDN?","271519","","<p>There are a few ways to include jQuery and jQuery UI and I'm wondering what people are using?</p>

<ul>
<li>Google JSAPI</li>
<li>jQuery's site</li>
<li>your own site/server</li>
<li>another CDN</li>
</ul>

<p>I have recently been using Google JSAPI, but have found that it takes a long time to setup an SSL connection or even only to resolve google.com. I have been using the following for Google:</p>

<pre><code>&lt;script src=""https://www.google.com/jsapi""&gt;&lt;/script&gt;
&lt;script&gt;
google.load('jquery', '1.3.1');
&lt;/script&gt;
</code></pre>

<p>I like the idea of using Google so it's cached when visiting other sites and to save bandwidth from our server, but if it keeps being the slow portion of the site, I may change the include.</p>

<p>What do you use? Have you had any issues?</p>

<p><strong>Edit:</strong> Just visited jQuery's site and they use the following method:</p>

<pre><code>&lt;script type=""text/javascript"" src=""http://ajax.googleapis.com/ajax/libs/jquery/1.3/jquery.min.js""&gt;&lt;/script&gt;
</code></pre>

<p><strong>Edit2:</strong> Here's how I've been including jQuery without any problems for the last year:</p>

<pre><code>&lt;script src=""//ajax.googleapis.com/ajax/libs/jquery/1.4.3/jquery.min.js""&gt;&lt;/script&gt;
</code></pre>

<p>The difference is the removal of <code>http:</code>. By removing this, you don't need to worry about switching between http and https.</p>
","<p>Without a doubt I choose to have JQuery served by Google API servers.  I didn't go with the jsapi method since I don't leverage any other Google API's, however if that ever changed then I would consider it...</p>

<p><strong>First:</strong> The Google api servers are distributed across the world instead of my single server location:  Closer servers usually means faster response times for the visitor.</p>

<p><strong>Second:</strong> Many people choose to have JQuery hosted on Google, so when a visitor comes to my site they may already have the JQuery script in their local cache.  Pre-cached content usually means faster load times for the visitor.</p>

<p><strong>Third:</strong> My web hosting company charges me for the bandwidth used.  No sense consuming 18k per user session if the visitor can get the same file elsewhere.</p>

<p>I understand that I place a portion of trust on Google to serve the correct script file, and to be online and available.  Up to this point I haven't been disappointed with using Google and will continue this configuration until it makes sense not to.</p>

<p><strong>One thing worth pointing out...</strong> If you have a mixture of secure and insecure pages on your site you might want to dynamically change the Google source to avoid the usual warning you see when loading insecure content in a secure page:</p>

<p>Here's what I came up with:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
    document.write([
        ""\&lt;script src='"",
        (""https:"" == document.location.protocol) ? ""https://"" : ""http://"",
        ""ajax.googleapis.com/ajax/libs/jquery/1.2.6/jquery.min.js' type='text/javascript'&gt;\&lt;\/script&gt;"" 
    ].join(''));
&lt;/script&gt;
</code></pre>

<p><strong>UPDATE 9/8/2010</strong> -
Some suggestions have been made to reduce the complexity of the code by removing the HTTP and HTTPS and simply use the following syntax:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
    document.write(""\&lt;script src='//ajax.googleapis.com/ajax/libs/jquery/1.2.6/jquery.min.js' type='text/javascript'&gt;\&lt;\/script&gt;"");
&lt;/script&gt;
</code></pre>

<p>In addition you could also change the url to reflect the jQuery major number if you wanted to make sure that the latest Major version of the jQuery libraries were loaded:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
    document.write(""\&lt;script src='//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js' type='text/javascript'&gt;\&lt;\/script&gt;"");
&lt;/script&gt;
</code></pre>

<p>Finally, if you don't want to use Google and would prefer jQuery you could use the following source path (keep in mind that jQuery doesn't support SSL connections):</p>

<pre><code>&lt;script type=""text/javascript""&gt;
    document.write(""\&lt;script src='http://code.jquery.com/jquery-latest.min.js' type='text/javascript'&gt;\&lt;\/script&gt;"");
&lt;/script&gt;
</code></pre>
","547482"
"Calculate text width with JavaScript","271496","","<p>I'd like to use JavaScript to calculate the width of a string. Is this possible without having to use a monospace typeface?</p>

<p>If it's not built-in, my only idea is to create a table of widths for each character, but this is pretty unreasonable especially supporting <a href=""http://en.wikipedia.org/wiki/Unicode"" rel=""noreferrer"">Unicode</a> and different type sizes (and all browsers for that matter).</p>
","<p>Create a DIV styled with the following styles. In your JavaScript, set the font size and attributes that you are trying to measure, put your string in the DIV, then read the current width and height of the DIV. It will stretch to fit the contents and the size will be within a few pixels of the string rendered size.</p>

<p>HTML:</p>

<pre><code>&lt;div id=""Test""&gt;
    abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
&lt;/div&gt;
</code></pre>

<p>CSS:</p>

<pre><code>#Test
{
    position: absolute;
    visibility: hidden;
    height: auto;
    width: auto;
    white-space: nowrap; /* Thanks to Herb Caudill comment */
}
</code></pre>

<p>JavaScript (fragment):</p>

<pre><code>var test = document.getElementById(""Test"");
test.style.fontSize = fontSize;
var height = (test.clientHeight + 1) + ""px"";
var width = (test.clientWidth + 1) + ""px"";
</code></pre>
","118251"
"Check if a key exists inside a json object","271381","","<pre><code>amt: ""10.00""
email: ""sam@gmail.com""
merchant_id: ""sam""
mobileNo: ""9874563210""
orderID: ""123456""
passkey: ""1234""
</code></pre>

<p>The above is the JSON object I'm dealing with. I want to check if the 'merchant_id' key exists. I tried the below code, but it's not working. Any way to achieve it?</p>

<pre><code>&lt;script&gt;
window.onload = function getApp()
{
  var thisSession = JSON.parse('&lt;?php echo json_encode($_POST); ?&gt;');
  //console.log(thisSession);
  if (!(""merchant_id"" in thisSession)==0)
  {
    // do nothing.
  }
  else 
  {
    alert(""yeah"");
  }
}
&lt;/script&gt;
</code></pre>
","<p>Try this,</p>

<pre><code>if(thisSession.hasOwnProperty('merchant_id')){

}
</code></pre>

<p>the JS Object <code>thisSession</code> should be like </p>

<pre><code>{
amt: ""10.00"",
email: ""sam@gmail.com"",
merchant_id: ""sam"",
mobileNo: ""9874563210"",
orderID: ""123456"",
passkey: ""1234""
}
</code></pre>

<p>you can  find the details <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty"">here</a></p>
","20804292"
"How to get evaluated attributes inside a custom directive","271361","","<p>I'm trying to get an <strong>evaluated</strong> attribute from my custom directive, but I can't find the right way of doing it.</p>

<p>I've created <a href=""http://jsfiddle.net/neuTA/1/"">this jsFiddle</a> to elaborate.</p>

<pre><code>&lt;div ng-controller=""MyCtrl""&gt;
    &lt;input my-directive value=""123""&gt;
    &lt;input my-directive value=""{{1+1}}""&gt;
&lt;/div&gt;

myApp.directive('myDirective', function () {
    return function (scope, element, attr) {
        element.val(""value = ""+attr.value);
    }
});
</code></pre>

<p>What am I missing?</p>
","<p><em>Notice: I do update this answer as I find better solutions. I also keep the old answers for future reference as long as they remain related. Latest and best answer comes first.</em> </p>

<h2>Better answer:</h2>

<p>Directives in angularjs are very powerful, but it takes time to comprehend which processes lie behind them.</p>

<p>While creating directives, angularjs allows you to create an <em>isolated scope</em> with some bindings to the parent scope. These bindings are specified by the <strong>attribute</strong> you attach the element in DOM and how you define <strong>scope</strong> property in the <em>directive definition object</em>.</p>

<p>There are 3 types of binding options which you can define in scope and you write those as prefixes related attribute.</p>

<pre><code>angular.module(""myApp"", []).directive(""myDirective"", function () {
    return {
        restrict: ""A"",
        scope: {
            text: ""@myText"",
            twoWayBind: ""=myTwoWayBind"",
            oneWayBind: ""&amp;myOneWayBind""
        }
    };
}).controller(""myController"", function ($scope) {
    $scope.foo = {name: ""Umur""};
    $scope.bar = ""qwe"";
});
</code></pre>

<p><em>HTML</em></p>

<pre><code>&lt;div ng-controller=""myController""&gt;
    &lt;div my-directive my-text=""hello {{ bar }}"" my-two-way-bind=""foo"" my-one-way-bind=""bar""&gt;
    &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p>In that case, in the scope of directive (whether it's in linking function or controller), we can access these properties like this:</p>

<pre><code>/* Directive scope */

in: $scope.text
out: ""hello qwe""
// this would automatically update the changes of value in digest
// this is always string as dom attributes values are always strings

in: $scope.twoWayBind
out: {name:""Umur""}
// this would automatically update the changes of value in digest
// changes in this will be reflected in parent scope

// in directive's scope
in: $scope.twoWayBind.name = ""John""

//in parent scope
in: $scope.foo.name
out: ""John""


in: $scope.oneWayBind() // notice the function call, this binding is read only
out: ""qwe""
// any changes here will not reflect in parent, as this only a getter .
</code></pre>

<h2>""Still OK"" Answer:</h2>

<p>Since this answer got accepted, but has some issues, I'm going to update it to a better one. Apparently, <code>$parse</code> is a service which does not lie in properties of the current scope, which means it only takes angular expressions and cannot reach scope. 
<code>{{</code>,<code>}}</code> expressions are compiled while angularjs initiating which means when we try to access them in our directives <code>postlink</code> method, they are already compiled. (<code>{{1+1}}</code> is <code>2</code> in directive already).</p>

<p>This is how you would want to use:</p>

<pre><code>var myApp = angular.module('myApp',[]);

myApp.directive('myDirective', function ($parse) {
    return function (scope, element, attr) {
        element.val(""value="" + $parse(attr.myDirective)(scope));
    };
});

function MyCtrl($scope) {
    $scope.aaa = 3432;
}​
</code></pre>

<p>.</p>

<pre><code>&lt;div ng-controller=""MyCtrl""&gt;
    &lt;input my-directive=""123""&gt;
    &lt;input my-directive=""1+1""&gt;
    &lt;input my-directive=""'1+1'""&gt;
    &lt;input my-directive=""aaa""&gt;
&lt;/div&gt;​​​​​​​​
</code></pre>

<p>One thing you should notice here is that, if you want set the value string, you should wrap it in quotes. (See 3rd input)</p>

<p>Here is the fiddle to play with: <a href=""http://jsfiddle.net/neuTA/6/"">http://jsfiddle.net/neuTA/6/</a></p>

<h2>Old Answer:</h2>

<p><em>I'm not removing this for folks who can be misled like me, note that using <code>$eval</code> is perfectly fine the correct way to do it, but <code>$parse</code> has a different behavior, you probably won't need this to use in most of the cases.</em></p>

<p>The way to do it is, once again, using <code>scope.$eval</code>. Not only it compiles the angular expression, it has also access to the current scope's properties.</p>

<pre><code>var myApp = angular.module('myApp',[]);

myApp.directive('myDirective', function () {
    return function (scope, element, attr) {
        element.val(""value = ""+ scope.$eval(attr.value));
    }
});

function MyCtrl($scope) {

}​
</code></pre>

<p>What you are missing was <code>$eval</code>.</p>

<blockquote>
  <p><a href=""http://docs.angularjs.org/api/ng.$rootScope.Scope#$eval"">http://docs.angularjs.org/api/ng.$rootScope.Scope#$eval</a></p>
  
  <p>Executes the expression on the current scope returning the result. Any exceptions in the expression are propagated (uncaught). This is useful when evaluating angular expressions.</p>
</blockquote>
","12372494"
"how to bypass Access-Control-Allow-Origin?","271251","","<p>I'm doing a ajax call to my own server on a platform which they set prevent these ajax calls (but I need it to fetch the data from my server to display retrieved data from my server's database).
My ajax script is working , it can send the data over to my server's php script to allow it to process.
However it cannot get the processed data back as it is blocked by <code>""Access-Control-Allow-Origin""</code></p>

<p>I have no access to that platform's source/core. so I can't remove the script that it disallowing me to do so.
(P/S I used Google Chrome's Console and found out this error)</p>

<p>The Ajax code as shown below:</p>

<pre><code> $.ajax({
     type: ""GET"",
     url: ""http://example.com/retrieve.php"",
     data: ""id="" + id + ""&amp;url="" + url,
     dataType: 'json',   
     cache: false,
     success: function(data)
      {
        var friend = data[1];              
        var blog = data[2];           
        $('#user').html(""&lt;b&gt;Friends: &lt;/b&gt;""+friend+""&lt;b&gt;&lt;br&gt; Blogs: &lt;/b&gt;""+blog);

      } 
  });
</code></pre>

<p>or is there a <code>JSON</code> equivalent code to the ajax script above ?  I think <code>JSON</code> is allowed.</p>

<p>I hope someone could help me out.</p>
","<p>put it on top of retrieve.php</p>

<pre><code> header('Access-Control-Allow-Origin: *');  
</code></pre>

<p>It is important to note that the <code>header()</code> must be called before any actual output is sent. </p>

<p><strong>Wrong</strong> </p>

<pre><code>&lt;html&gt;
&lt;?php
header('Access-Control-Allow-Origin: *'); 
?&gt;
</code></pre>

<p><strong>Correct</strong></p>

<pre><code>&lt;?php
header('Access-Control-Allow-Origin: *'); 
?&gt;
&lt;html&gt;
</code></pre>
","7564919"
"HTML Entity Decode","271238","","<p>How do I encode and decode HTML entities using JavaScript or JQuery?</p>

<pre><code>var varTitle = ""Chris&amp;apos; corner"";
</code></pre>

<p>I want it to be:</p>

<pre><code>var varTitle = ""Chris' corner"";
</code></pre>
","<p>You could try something like:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var Title = $('&lt;textarea /&gt;').html(""Chris&amp;apos; corner"").text();
console.log(Title);</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;</code></pre>
</div>
</div>
</p>

<p><a href=""http://jsfiddle.net/cC8Ty/204/"" rel=""noreferrer"">JS Fiddle</a>.</p>

<p>A more interactive version:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>$('form').submit(function() {
  var theString = $('#string').val();
  var varTitle = $('&lt;textarea /&gt;').html(theString).text();
  $('#output').text(varTitle);
  return false;
});</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;
&lt;form action=""#"" method=""post""&gt;
  &lt;fieldset&gt;
    &lt;label for=""string""&gt;Enter a html-encoded string to decode&lt;/label&gt;
    &lt;input type=""text"" name=""string"" id=""string"" /&gt;
  &lt;/fieldset&gt;
  &lt;fieldset&gt;
    &lt;input type=""submit"" value=""decode"" /&gt;
  &lt;/fieldset&gt;
&lt;/form&gt;

&lt;div id=""output""&gt;&lt;/div&gt;</code></pre>
</div>
</div>
</p>

<p><a href=""http://jsfiddle.net/cC8Ty/205/"" rel=""noreferrer"">JS Fiddle</a>.</p>
","5796744"
"Adding hours to Javascript Date object?","271216","","<p>It amazes me that Javascript's Date object does not implement an add function of any kind.</p>

<p>I simply want a function that can do this:</p>

<pre><code>var now = Date.now();
var fourHoursLater = now.addHours(4);

function Date.prototype.addHours(h) {

   // how do I implement this?  

}
</code></pre>

<p>I would simply like some pointers in a direction.</p>

<ul>
<li><p>Do I need to do string parsing?  </p></li>
<li><p>Can I use setTime?</p></li>
<li><p>How about milliseconds?</p></li>
</ul>

<p>Like this:</p>

<pre><code>new Date(milliseconds + 4*3600*1000 /*4 hrs in ms*/)?  
</code></pre>

<p>This seems really hackish though - and does it even work?</p>
","<p>JavaScript itself has terrible Date/Time API's. This is the only way to do it in pure JavaScript. I'd recommend using <a href=""http://www.datejs.com/"" rel=""noreferrer"">Datejs</a> - as suggested by Nosredna - if you're doing a lot of date manipulation, though.</p>

<pre><code>Date.prototype.addHours = function(h) {    
   this.setTime(this.getTime() + (h*60*60*1000)); 
   return this;   
}
</code></pre>
","1050782"
"Pass a PHP string to a JavaScript variable (and escape newlines)","271215","","<p>What is the easiest way to encode a PHP string for output to a JavaScript variable?</p>

<p>I have a PHP string which includes quotes and newlines.  I need the contents of this string to be put into a JavaScript variable.</p>

<p>Normally, I would just construct my JavaScript in a PHP file, à la:</p>

<pre><code>&lt;script&gt;
  var myvar = ""&lt;?php echo $myVarValue;?&gt;"";
&lt;/script&gt;
</code></pre>

<p>However, this doesn't work when <code>$myVarValue</code> contains quotes or newlines.</p>
","<p>Expanding on someone else's answer:</p>

<pre><code>&lt;script&gt;
  var myvar = &lt;?php echo json_encode($myVarValue); ?&gt;;
&lt;/script&gt;
</code></pre>

<p>Using <a href=""http://php.net/json_encode"" rel=""noreferrer"">json_encode()</a> requires:</p>

<ul>
<li>PHP 5.2.0 or greater</li>
<li><code>$myVarValue</code> encoded as UTF-8 (or US-ASCII, of course)</li>
</ul>

<p>Since UTF-8 supports full Unicode, it should be safe to convert on the fly.</p>

<p>Note that because <code>json_encode</code> escapes forward slashes, even a string that contains <code>&lt;/script&gt;</code> will be escaped safely for printing with a script block.</p>
","169035"
"Better way to get type of a Javascript variable?","271208","","<p>Is there a better way to get the type of a variable in JS than <code>typeof</code>? It works fine when you do:</p>

<pre><code>&gt; typeof 1
""number""
&gt; typeof ""hello""
""string""
</code></pre>

<p>But it's useless when you try:</p>

<pre><code>&gt; typeof [1,2]
""object""
&gt;r = new RegExp(/./)
/./
&gt; typeof r
""function""
</code></pre>

<p>I know of <code>instanceof</code>, but this requires you to know the type beforehand.    </p>

<pre><code>&gt; [1,2] instanceof Array
true
&gt; r instanceof RegExp
true
</code></pre>

<p>Is there a better way?</p>
","<p>Angus Croll recently wrote an interesting blog post about this -</p>

<p><a href=""http://javascriptweblog.wordpress.com/2011/08/08/fixing-the-javascript-typeof-operator/"">http://javascriptweblog.wordpress.com/2011/08/08/fixing-the-javascript-typeof-operator/</a></p>

<p>He goes through the pros and cons of the various methods then defines a new method 'toType' -</p>

<pre><code>var toType = function(obj) {
  return ({}).toString.call(obj).match(/\s([a-zA-Z]+)/)[1].toLowerCase()
}
</code></pre>
","7390612"
"How to automatically reload a page after a given period of inactivity","270760","","<p>How can I automatically reload a webpage, if there have been no activity on the page for a given period of time?</p>
","<p>If you want to refresh the page if there is no activity then you need to figure out how to define activity. Let's say we refresh the page every minute unless someone presses a key or moves the mouse. This uses jQuery for event binding:</p>

<pre><code>&lt;script&gt;
     var time = new Date().getTime();
     $(document.body).bind(""mousemove keypress"", function(e) {
         time = new Date().getTime();
     });

     function refresh() {
         if(new Date().getTime() - time &gt;= 60000) 
             window.location.reload(true);
         else 
             setTimeout(refresh, 10000);
     }

     setTimeout(refresh, 10000);
&lt;/script&gt;
</code></pre>
","4644315"
"Create table using Javascript","270369","","<p>I have a JavaScript function which creates a table with 3 rows 2 cells.<br/>
Could anybody tell me how I can create the table below using my function (i need to do this for my situation)?</p>

<p>My HTML:</p>

<pre><code>&lt;table width=""100%"" border=""1""&gt;
  &lt;tr&gt;
    &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;td&gt;&amp;nbsp;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;td rowspan=""2""&gt;&amp;nbsp;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&amp;nbsp;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
</code></pre>

<p>JavaScript:</p>

<pre><code>  function tableCreate() {
        //body reference 
        var body = document.getElementsByTagName(""body"")[0];

        // create elements &lt;table&gt; and a &lt;tbody&gt;
        var tbl     = document.createElement(""table"");
        var tblBody = document.createElement(""tbody"");

        // cells creation
        for (var j = 0; j &lt;= 2; j++) {
            // table row creation
            var row = document.createElement(""tr"");

            for (var i = 0; i &lt; 2; i++) {
                // create element &lt;td&gt; and text node 
                //Make text node the contents of &lt;td&gt; element
                // put &lt;td&gt; at end of the table row
             var cell = document.createElement(""td"");    
                  var cellText = document.createTextNode(""cell is row ""+j+"", column ""+i); 

                cell.appendChild(cellText);
                row.appendChild(cell);
            }

            //row added to end of table body
            tblBody.appendChild(row);
        }

        // append the &lt;tbody&gt; inside the &lt;table&gt;
        tbl.appendChild(tblBody);
        // put &lt;table&gt; in the &lt;body&gt;
        body.appendChild(tbl);
        // tbl border attribute to 
        tbl.setAttribute(""border"", ""2"");
    }
</code></pre>
","<p>This should work (from a few alterations to your code above).</p>

<pre><code>function tableCreate() {
    var body = document.getElementsByTagName('body')[0];
    var tbl = document.createElement('table');
    tbl.style.width = '100%';
    tbl.setAttribute('border', '1');
    var tbdy = document.createElement('tbody');
    for (var i = 0; i &lt; 3; i++) {
        var tr = document.createElement('tr');
        for (var j = 0; j &lt; 2; j++) {
            if (i == 2 &amp;&amp; j == 1) {
                break
            } else {
                var td = document.createElement('td');
                td.appendChild(document.createTextNode('\u0020'))
                i == 1 &amp;&amp; j == 1 ? td.setAttribute('rowSpan', '2') : null;
                tr.appendChild(td)
            }
        }
        tbdy.appendChild(tr);
    }
    tbl.appendChild(tbdy);
    body.appendChild(tbl)
}
</code></pre>
","14643642"
"Is it possible to write data to file using only JavaScript?","269472","","<p>I want to Write Data to existing file using JavaScript.
I don't want to print it on console.
I want to Actually Write data to <code>abc.txt</code>.
I Read many answered question but every where they are printing on console.
at some place they have given code but its not working.
So please can any one help me How to actually write data to File.</p>

<p>I referred the code but its not working:
its giving error:</p>

<pre><code> Uncaught TypeError: Illegal constructor 
</code></pre>

<p>on chrome and</p>

<pre><code> SecurityError: The operation is insecure.
</code></pre>

<p>on Mozilla</p>

<pre><code>var f = ""sometextfile.txt"";

writeTextFile(f, ""Spoon"")
writeTextFile(f, ""Cheese monkey"")
writeTextFile(f, ""Onion"")

function writeTextFile(afilename, output)
{
  var txtFile =new File(afilename);
  txtFile.writeln(output);
  txtFile.close();
}
</code></pre>

<p>So can we actually write data to file using only Javascript or NOT?
Please Help Me 
Thanks in advance</p>
","<p>Some suggestions for this - </p>

<ol>
<li>If you are trying to write a file on client machine, You can't do this in any cross-browser way. IE does have methods to enable ""trusted"" applications to use ActiveX objects to read/write file.</li>
<li>If you are trying to save it on your server then simply pass on the text data to your server and execute the file writing code using some server side language.</li>
<li>To store some information on the  client side that is considerably small, you can go for cookies.</li>
<li>Using the HTML5 API for Local Storage.</li>
</ol>
","21012689"
"Regular Expression to find a string included between two characters while EXCLUDING the delimiters","269165","","<p>I need to extract from a string a set of characters which are included between two delimiters, without returning the delimiters themselves.</p>

<p>A simple example should be helpful:</p>

<p><strong>Target</strong>: extract the substring between square brackets, without returning the brackets themselves.</p>

<p><strong>Base string</strong>: <em>This is a test string [more or less]</em></p>

<p>If I use the following reg. ex.</p>

<pre>\[.*?\]</pre>

<p>The match is <strong>[more or less]</strong>. I need to get only <strong>more or less</strong> (without the brackets).  </p>

<p>Is it possible to do it?</p>
","<p>Easy done:</p>

<pre><code>(?&lt;=\[)(.*?)(?=\])
</code></pre>

<p>Technically that's using lookaheads and lookbehinds. See <a href=""http://www.regular-expressions.info/lookaround.html"" rel=""noreferrer"">Lookahead and Lookbehind Zero-Width Assertions</a>. The pattern consists of:</p>

<ul>
<li>is preceded by a [ that is not captured (lookbehind);</li>
<li>a non-greedy captured group. It's non-greedy to stop at the first ]; and</li>
<li>is followed by a ] that is not captured (lookahead).</li>
</ul>

<p>Alternatively you can just capture what's between the square brackets:</p>

<pre><code>\[(.*?)\]
</code></pre>

<p>and return the first captured group instead of the entire match.</p>
","1454936"
"How do I add a delay in a JavaScript loop?","269092","","<p>I would like to add a delay/sleep inside a <code>while</code> loop:</p>

<p>I tried it like this:</p>

<pre><code>alert('hi');

for(var start = 1; start &lt; 10; start++) {
  setTimeout(function () {
    alert('hello');
  }, 3000);
}
</code></pre>

<p>Only the first scenario is true: after showing <code>alert('hi')</code>, it will be waiting for 3 seconds then <code>alert('hello')</code> will be displayed but then <code>alert('hello')</code> will be repeatedly constantly. </p>

<p>What I would like is that after <code>alert('hello')</code> is shown 3 seconds after <code>alert('hi')</code> then it needs to wait for 3 seconds for the second time <code>alert('hello')</code> and so on.</p>

<p>Could anyone please give advice?</p>
","<p>The <a href=""https://developer.mozilla.org/en/window.setTimeout"" rel=""noreferrer""><code>setTimeout()</code></a> function is non-blocking and will return immediately. Therefore your loop will iterate very quickly and it will initiate 3-second timeout triggers one after the other in quick succession. That is why your first alerts pops up after 3 seconds, and all the rest follow in succession without any delay.</p>

<p>You may want to use something like this instead:</p>

<pre><code>var i = 1;                     //  set your counter to 1

function myLoop () {           //  create a loop function
   setTimeout(function () {    //  call a 3s setTimeout when the loop is called
      alert('hello');          //  your code here
      i++;                     //  increment the counter
      if (i &lt; 10) {            //  if the counter &lt; 10, call the loop function
         myLoop();             //  ..  again which will trigger another 
      }                        //  ..  setTimeout()
   }, 3000)
}

myLoop();                      //  start the loop
</code></pre>

<p>You could also neaten it up, by using a self invoking function, passing the number of iterations as an argument:</p>

<pre><code>(function myLoop (i) {          
   setTimeout(function () {   
      alert('hello');          //  your code here                
      if (--i) myLoop(i);      //  decrement i and call myLoop again if i &gt; 0
   }, 3000)
})(10);                        //  pass the number of iterations as an argument
</code></pre>
","3583740"
"Clear text field value in JQuery","268914","","<p>I understand this is an easy question but for some reason this just isn't working for me.  I have a function that is triggered everytime a drop down menu is changed.  Here is the relevant code that is suppose to grab the current value of the text field, if a value exists, clear it that is contained within the .change function:</p>

<pre><code>var doc_val_check = $('#doc_title').attr(""value"");
    if (doc_val_check.length &gt; 0) {
        doc_val_check == """";
    }
</code></pre>

<p>I feel like I am missing something very simple.</p>
","<pre><code>doc_val_check == """";   // == is equality check operator
</code></pre>

<p>should be</p>

<pre><code>doc_val_check = """";    // = is assign operator. you need to set empty value

                       // so you need =
</code></pre>

<p>You can write you full code like this:</p>

<pre><code>var doc_val_check = $.trim( $('#doc_title').val() ); // take value of text 
                                                     // field using .val()
    if (doc_val_check.length) {
        doc_val_check = """"; // this will not update your text field
    }
</code></pre>

<p>To update you text field with a <code>""""</code> you need to try</p>

<pre><code>$('#doc_title').attr('value', doc_val_check); 
// or 
$('doc_title').val(doc_val_check);
</code></pre>

<p>But I think you don't need above process.</p>

<hr>

<h3>In short, just one line</h3>

<pre><code>$('#doc_title').val("""");
</code></pre>

<h3>Note</h3>

<p><code>.val()</code> use to set/ get value in text field. With parameter it acts as setter and without parameter acts as getter.</p>

<p>Read more about <strong><a href=""http://api.jquery.com/val"" rel=""noreferrer""><code>.val()</code></a></strong></p>
","10951832"
"Angularjs - display current date","268516","","<p>I got a view in angularjs and I'm just trying to display the current date(formatted). I thought something like <code>&lt;span&gt;{{Date.now() | date:'yyyy-MM-dd'}}&lt;/span&gt;</code> should display the current date.</p>
","<p>You have to create a date object in your controller first:</p>

<p>controller:</p>

<pre><code>function Ctrl($scope)
{
    $scope.date = new Date();
}
</code></pre>

<p>view:</p>

<pre><code>&lt;div ng-app ng-controller=""Ctrl""&gt;
    {{date | date:'yyyy-MM-dd'}}
&lt;/div&gt;
</code></pre>

<p><a href=""http://jsfiddle.net/RyW9m/"">JSFiddle example</a></p>

<p><a href=""https://docs.angularjs.org/api/ng/filter/date"">Angular Date Filter Ref</a></p>
","22962745"
"How can I get stock quotes using Google Finance API?","268421","","<p>I'm looking for access to financial data from Google services. </p>

<p>I found <a href=""http://finance.google.com/finance/info?client=ig&amp;q=NASDAQ:MSFT"" rel=""noreferrer"">this URL</a> that gets the stock data for Microsoft.</p>

<p>What are all the possible parameters that Google allows for this kind of HTTP request? I'd like to see all the different information that I could get.</p>
","<p>There's a whole API for managing portfolios. *Link removed. Google no longer provides a developer API for this.</p>

<p>Getting stock quotes is a little harder.  I found one article where someone got stock quotes using Google Spreadsheets.</p>

<p>You can also use the <a href=""http://googlefinanceblog.blogspot.com/2007/10/api-gadgets-and-tabs-oh-my.html"" rel=""nofollow noreferrer"">gadgets</a> but I guess that's not what you're after.</p>

<p>The API you mention is interesting but doesn't seem to be documented (as far as I've been able to find anyway).</p>

<p>Here is some information on <a href=""http://computerprogramming.suite101.com/article.cfm/an_introduction_to_google_finance"" rel=""nofollow noreferrer"">historical prices</a>, just for reference sake.</p>
","527780"
"JavaScript: Passing parameters to a callback function","268296","","<p>I'm trying to pass some parameter to a function used as callback, how can I do that?</p>

<pre><code>function tryMe (param1, param2) {
    alert (param1 + "" and "" + param2);
}

function callbackTester (callback, param1, param2) {
    callback (param1, param2);
}

callbackTester (tryMe, ""hello"", ""goodbye"");
</code></pre>
","<p>If you want something slightly more general, you can use the arguments variable like so:</p>

<pre><code>function tryMe (param1, param2) {
    alert(param1 + "" and "" + param2);
}

function callbackTester (callback) {
    callback (arguments[1], arguments[2]);
}

callbackTester (tryMe, ""hello"", ""goodbye"");
</code></pre>

<p>But otherwise, your example works fine (arguments[0] can be used in place of callback in the tester)</p>
","3458612"
"Get data from fs.readFile","268222","","<pre><code>var content;
fs.readFile('./Index.html', function read(err, data) {
    if (err) {
        throw err;
    }
    content = data;
});
console.log(content);
</code></pre>

<p>Logs <code>undefined</code>, why?</p>
","<p>To elaborate on what @Raynos said, the function you have defined is an asynchronous callback. It doesn't execute right away, rather it executes when the file loading has completed. When you call readFile, control is returned immediately and the next line of code is executed. So when you call console.log, your callback has not yet been invoked, and this content has not yet been set. Welcome to asynchronous programming.</p>

<p>Example approaches </p>

<pre><code>var content;
// First I want to read the file
fs.readFile('./Index.html', function read(err, data) {
    if (err) {
        throw err;
    }
    content = data;

    // Invoke the next step here however you like
    console.log(content);   // Put all of the code here (not the best solution)
    processFile();          // Or put the next step in a function and invoke it
});

function processFile() {
    console.log(content);
}
</code></pre>

<p>Or better yet, as Raynos example shows, wrap your call in a function and pass in your own callbacks. (Apparently this is better practice) I think getting into the habit of wrapping your async calls in function that takes a callback will save you a lot of trouble and messy code.</p>

<pre><code>function doSomething (callback) {
    // any async callback invokes callback with response
}

doSomething (function doSomethingAfter(err, result) {
    // process the async result
});
</code></pre>
","10058879"
"jQuery xml error ' No 'Access-Control-Allow-Origin' header is present on the requested resource.'","267433","","<p>I am working on this personal project of mine just for fun where I want to read an xml file which is located at <a href=""http://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml"" rel=""noreferrer"">http://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml</a>  and parse the xml and use it to convert values between the currencies. </p>

<p>So far I have come up with the code below which is pretty basic in order to read the xml but I get the following error.</p>

<blockquote>
  <p>XMLHttpRequest cannot load ****. No 'Access-Control-Allow-Origin'
  header is present on the requested resource. Origin
  '<a href=""http://run.jsbin.com"" rel=""noreferrer"">http://run.jsbin.com</a>' is therefore not allowed access.</p>
</blockquote>

<pre><code>$(document).ready( 
    function() {     
        $.ajax({          
            type:  'GET',
            url:   'http://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml',
            dataType: 'xml',              
            success: function(xml){
                alert('aaa');
            }
         });
    }
);
</code></pre>

<p>I don't see anything wrong with my code so I am hoping someone could point out what I am doing wrong with my code and how I could fix it. </p>
","<p>You won't be able to make an ajax call to <code>http://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml</code> from a file deployed at <code>http://run.jsbin.com</code> due to the <a href=""http://en.wikipedia.org/wiki/Same-origin_policy"" rel=""noreferrer"">same-origin policy</a>.</p>

<p><br></p>

<p>As the source (aka <strong>origin</strong>) page and the <strong>target</strong> URL are at different domains (<code>run.jsbin.com</code> and <code>www.ecb.europa.eu</code>), your code is actually attempting to make a <strong><a href=""http://en.wikipedia.org/wiki/Cross-origin_resource_sharing"" rel=""noreferrer"">Cross-domain (CORS)</a></strong> request, not an ordinary <code>GET</code>.</p>

<p>In a few words, the <em>same-origin policy</em> says that browsers should only allow ajax calls to services at the <strong>same domain</strong> of the HTML page.</p>

<p><br></p>

<h3>Example:</h3>

<p>A page at <code>http://www.example.com/myPage.html</code> can only directly request services that are at <code>http://www.example.com</code>, like <code>http://www.example.com/api/myService</code>. If the service is hosted at another domain (say <code>http://www.ok.com/api/myService</code>), the browser won't make the call directly (as you'd expect). Instead, it will try to make a CORS request.</p>

<p>To put it shortly, to perform a (CORS) request* across different domains, your browser:</p>

<ul>
<li>Will include an <code>Origin</code> header in the original request (with the page's domain as value) and perform it as usual; and then</li>
<li><strong>Only if</strong> the server <em>response</em> to that request contains the <a href=""http://enable-cors.org/server.html"" rel=""noreferrer"">adequate headers (<strong><code>Access-Control-Allow-Origin</code> is <em>one</em> of them</strong>)</a> allowing the CORS request, the browse will complete the call (almost** exactly the way it would if the HTML page was at the same domain).

<ul>
<li>If the expected headers don't come, the browser simply gives up (like it did to you).</li>
</ul></li>
</ul>

<p><br>
<sub>* The above depicts the steps in a <em>simple</em> request, such as a regular <code>GET</code> with no fancy headers. If the request is not simple (like a <code>POST</code> with <code>application/json</code> as content type), the browser will hold it a moment, and, before fulfilling it, will first send an <code>OPTIONS</code> request to the target URL. Like above, it only will continue if the response to this <code>OPTIONS</code> request contains the CORS headers. This <code>OPTIONS</code> call is known as <strong>preflight</strong> request.</sub>
<br><sub>** I'm saying <em>almost</em> because there are other differences between regular calls and CORS calls. An important one is that some headers, even if present in the response, will <a href=""https://stackoverflow.com/questions/1557602/jquery-and-ajax-response-header/15444439#15444439"">not be picked up by the browser if they aren't included in the <strong><code>Access-Control-Expose-Headers</code></strong></a> header.</sub></p>

<p><br></p>

<h3>How to fix it?</h3>

<p><strong>Was it just a typo?</strong> Sometimes the JavaScript code has just a typo in the target domain. Have you checked? If the page is at <code>www.example.com</code> it will only make regular calls to <code>www.example.com</code>! Other URLs, such as <code>api.example.com</code> or even <code>example.com</code> or <code>www.example.com:8080</code> are considered <strong>different</strong> domains by the browser! Yes, if the port is different, then it is a different domain!</p>

<p><strong>Add the headers.</strong> The simplest way to <em>enable</em> CORS is by adding the necessary headers (as <code>Access-Control-Allow-Origin</code>) to the server's responses. (Each server/language has a way to do that - <a href=""http://enable-cors.org"" rel=""noreferrer"">check some solutions here</a>.)</p>

<p><strong>Last resort:</strong> If you don't have server-side access to the service, you can also mirror it (through tools such as <em>reverse proxies</em>), and include all the necessary headers there.</p>
","19821851"
"How do I clear the content of a div using JavaScript?","267036","","<p>When the user clicks a button, the content of the div with id <code>cart_item</code> should be cleared.  How would I go about accomplishing this?</p>
","<p><strong>Just Javascript (as requested)</strong></p>

<p>Add this function somewhere on your page (preferably in the <code>&lt;head&gt;</code>)</p>

<pre><code>function clearBox(elementID)
{
    document.getElementById(elementID).innerHTML = """";
}
</code></pre>

<p>Then add the button on click event:</p>

<pre><code>&lt;button onclick=""clearBox('cart_item')"" /&gt;
</code></pre>

<p><strong>In JQuery (for reference)</strong></p>

<p>If you prefer JQuery you could do:</p>

<pre><code>$(""#cart_item"").html("""");
</code></pre>
","3450609"
"Apply CSS style attribute dynamically in Angular JS","266844","","<p>This should be a simple problem, but I can't seem to find a solution.</p>

<p>I have the following markup:</p>

<pre><code>&lt;div style=""width:20px; height:20px; margin-top:10px; border:solid 1px black; background-color:#ff0000;""&gt;&lt;/div&gt;
</code></pre>

<p>I need the background color to be bound to the scope, so I tried this:</p>

<pre><code>&lt;div style=""{width:20px; height:20px; margin-top:10px; border:solid 1px black; background-color:{{data.backgroundCol}};}""&gt;&lt;/div&gt;
</code></pre>

<p>That didn't work, so I did some research and found <code>ng-style</code>, but that didn't work, so I tried taking the dynamic part out and just hard-coding the style in <code>ng-style</code>, like this...</p>

<pre><code>&lt;div ng-style=""{width:20px; height:20px; margin-top:10px; border:solid 1px black; background-color:#ff0000;}""&gt;&lt;/div&gt;
</code></pre>

<p>and that doesn't even work. Am I misunderstanding how <code>ng-style</code> works? Is there a way of putting <code>{{data.backgroundCol}}</code> into a plain style attribute and getting it to insert the value?</p>
","<p><a href=""https://docs.angularjs.org/api/ng/directive/ngStyle"" rel=""noreferrer""><strong>ngStyle</strong></a>  directive allows you to set <strong>CSS</strong> style on an HTML element dynamically.</p>

<blockquote>
  <p><a href=""https://docs.angularjs.org/guide/expression"" rel=""noreferrer"">Expression</a> which evals to an object whose keys are CSS style names and values are corresponding values for those CSS keys. Since some CSS style names are not valid keys for an object, they must be quoted. </p>
</blockquote>

<p><code>ng-style=""{color: myColor}""</code></p>

<p>Your code will be:</p>

<pre><code>&lt;div ng-style=""{'width':'20px', 'height':'20px', 'margin-top':'10px', 'border':'solid 1px black', 'background-color':'#ff0000'}""&gt;&lt;/div&gt;
</code></pre>

<p>If you want to use scope variables:</p>

<pre><code>&lt;div ng-style=""{'background-color': data.backgroundCol}""&gt;&lt;/div&gt;
</code></pre>

<p><a href=""http://jsfiddle.net/mrajcok/eTTZj/"" rel=""noreferrer"">Here</a> an example on fiddle that use <code>ngStyle</code>, and below the code with the running snippet:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>angular.module('myApp', [])
.controller('MyCtrl', function($scope) {
  $scope.items = [{
      name: 'Misko',
      title: 'Angular creator'
    }, {
      name: 'Igor',
      title: 'Meetup master'
    }, {
      name: 'Vojta',
      title: 'All-around superhero'
    }

  ];
});</code></pre>
<pre class=""snippet-code-css lang-css prettyprint-override""><code>.pending-delete {
  background-color: pink
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/angularjs/1.2.23/angular.min.js""&gt;&lt;/script&gt;
&lt;div ng-app=""myApp"" ng-controller='MyCtrl' ng-style=""{color: myColor}""&gt;

  &lt;input type=""text"" ng-model=""myColor"" placeholder=""enter a color name""&gt;

  &lt;div ng-repeat=""item in items"" ng-class=""{'pending-delete': item.checked}""&gt;
    name: {{item.name}}, {{item.title}}
    &lt;input type=""checkbox"" ng-model=""item.checked"" /&gt;
    &lt;span ng-show=""item.checked""/&gt;&lt;span&gt;(will be deleted)&lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
    &lt;div ng-hide=""myColor== 'red'""&gt;I will hide if the color is set to 'red'.&lt;/div&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
</p>
","21364563"
"How to set 'X-Frame-Options' on iframe?","266027","","<p>If I create an <code>iframe</code> like this: </p>

<pre><code>var dialog = $('&lt;div id=""' + dialogId + '"" align=""center""&gt;&lt;iframe id=""' + frameId + '"" src=""' + url + '"" width=""100%"" frameborder=""0"" height=""'+frameHeightForIe8+'"" data-ssotoken=""' + token + '""&gt;&lt;/iframe&gt;&lt;/div&gt;').dialog({
</code></pre>

<p>How can I fix the error:</p>

<blockquote>
  <p>Refused to display <code>'https://www.google.com.ua/?gws_rd=ssl'</code> in a frame because it set 'X-Frame-Options' to 'SAMEORIGIN'.</p>
</blockquote>

<p>with JavaScript?</p>
","<p>You can't set <code>X-Frame-Options</code> on the <code>iframe</code>. That is a response header set by the domain from which you are requesting the resource (<code>google.com.ua</code> in your example). They have set the header to <code>SAMEORIGIN</code> in this case, which means that they have disallowed loading of the resource in an <code>iframe</code> outside of their domain. For more information see <a href=""https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options"">The X-Frame-Options response header</a> on MDN.</p>

<p>A quick inspection of the headers (shown here in Chrome developer tools) reveals the <code>X-Frame-Options</code> value returned from the host.</p>

<p><img src=""https://i.stack.imgur.com/bjM2C.png"" alt=""enter image description here""></p>
","27359031"
"How to create a toggle button in Bootstrap","265801","","<p>I originally created a web app in HTML, CSS and JavaScript, then was asked to create it again in Bootstrap too. I've done it all fine, but I had toggle buttons in the web app that have changed back to radio (originally checkbox) buttons instead of the toggle buttons I had originally.</p>

<p>The code for the buttons is:</p>

<pre><code>&lt;label&gt;
  Notifications
  &lt;span class='toggle'&gt;
    &lt;input type='radio'
      class='notifications'
      name='notifications'
      id='notifications' /&gt;
  &lt;/span&gt;
&lt;/li&gt;
&lt;label&gt;
  Preview
  &lt;span class='toggle'&gt;
    &lt;input type='radio'
      class='preview'
      name='preview'
      id='preview' /&gt;
  &lt;/span&gt;
&lt;/li&gt;
</code></pre>

<p>and the JavaScript and CSS files that the HTML page is linked to are:</p>

<pre><code>&lt;script src = 'jqtouch.js'&gt;&lt;/script&gt;
&lt;script src=""jquery.js""&gt;&lt;/script&gt;
&lt;script src=""js/bootstrap.js""&gt;&lt;/script&gt;
&lt;link href=""css/bootstrap.css"" rel=""stylesheet""&gt;
&lt;link href=""css/bootstrap-responsive.css"" rel=""stylesheet""&gt;
</code></pre>

<p>Is there a way to change the code so I can get the toggle button back?</p>
","<p>Not sure if it helps, but an excellent (unofficial) <a href=""http://bootstrapswitch.com/"" rel=""nofollow noreferrer"">Bootstrap Switch is available</a>. It uses radio types though.</p>

<p>Update: You can now also use radio buttons <em>or</em> checkboxes as switches. A <code>type</code> attribute has been added since V.1.8.</p>

<p>Source code is <a href=""https://github.com/nostalgiaz/bootstrap-switch"" rel=""nofollow noreferrer"">available on Github</a>.</p>
","15160990"
"How to hide element using twitter bootstrap 3 and show it using jQuery?","265617","","<p><strong>With</strong> Twitter Bootstrap 3 and jQuery 2.0.3</p>

<p><strong>HTML:</strong></p>

<pre><code>&lt;div id=""my-div"" class=""hide""&gt;Hello, TB3&lt;/div&gt;
</code></pre>

<p><strong>Javascript:</strong></p>

<pre><code>$(function(){
  $(""#my-div"").show();
});
</code></pre>

<p><strong>Result:</strong></p>

<p>Invisible my-div</p>

<pre><code>&lt;div id=""my-div"" class=""hide"" style=""display: block;""&gt;Hello, TB3&lt;/div&gt;
</code></pre>

<p><strong>The reason:</strong></p>

<pre><code>.hide {
    display: none !important;
}
</code></pre>

<blockquote>
  <p>bootstrap.min.js, line 9</p>
</blockquote>

<p><strong>Question:</strong></p>

<p>What is the simplest way to hide element using Bootstrap3 and show it using jQuery?</p>
","<h1>The right answer</h1>

<p>First, don't use <code>.hide</code>! <strong>Use <code>.hidden</code>.</strong> As others have said, <code>.hide</code> is deprecated,</p>

<blockquote>
  <p>.hide is available, but it does not always affect screen readers and is deprecated as of v3.0.1</p>
</blockquote>

<p>Second, use jQuery's <a href=""http://api.jquery.com/toggleClass/"" rel=""noreferrer"">.toggleClass()</a>, <a href=""http://api.jquery.com/addClass/"" rel=""noreferrer"">.addClass()</a> and <a href=""http://api.jquery.com/removeClass/"" rel=""noreferrer"">.removeClass()</a></p>

<pre><code>&lt;div id=""myId"" class=""hidden""&gt;Foobar&lt;/div&gt;
</code></pre>

<ul>
<li>To show it: <code>$(""#myId"").removeClass('hidden');</code></li>
<li>To hide it: <code>$(""#myId"").addClass('hidden');</code></li>
<li>To toggle it: <code>$(""#myId"").toggleClass('hidden');</code></li>
</ul>

<p>Don't use the css class <code>.show</code>, it has a very small use case. The definitions of <code>show</code>, <code>hidden</code> and <code>invisible</code> are in the <a href=""http://getbootstrap.com/css/#helper-classes-show-hide"" rel=""noreferrer"">docs</a>.</p>

<pre><code>// Classes
.show {
  display: block !important;
}
.hidden {
  display: none !important;
  visibility: hidden !important;
}
.invisible {
  visibility: hidden;
}
</code></pre>
","28294225"
"Best way to store a key=>value array in JavaScript?","265612","","<p>What's the best way to store a <code>key=&gt;value</code> array in javascript, and how can that be looped through?</p>

<p>The key of each element should be a tag, such as <code>{id}</code> or just <code>id</code> and the value should be the numerical value of the id.</p>

<p>It should either be the element of an existing javascript class, or be a global variable which could easily be referenced through the class.</p>

<p>jQuery can be used.</p>
","<p>That's just what a JavaScript object is:</p>

<pre><code>var myArray = {id1: 100, id2: 200, ""tag with spaces"": 300};
myArray.id3 = 400;
myArray[""id4""] = 500;
</code></pre>

<p>You can loop through it using <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in"" rel=""noreferrer""><code>for..in</code> loop</a>:</p>

<pre><code>for (var key in myArray) {
  console.log(""key "" + key + "" has value "" + myArray[key]);
}
</code></pre>

<p>See also: <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects"" rel=""noreferrer"">Working with objects</a> (MDN).</p>

<p>In ECMAScript6 there is also <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Map"" rel=""noreferrer""><code>Map</code></a> (see the browser compatibility table there):</p>

<blockquote>
  <ul>
  <li><p>An Object has a prototype, so there are default keys in the map. This could be bypassed by using map = Object.create(null) since ES5, but was seldomly done.</p></li>
  <li><p>The keys of an Object are Strings and Symbols, where they can be any value for a Map.</p></li>
  <li><p>You can get the size of a Map easily while you have to manually keep track of size for an Object.</p></li>
  </ul>
</blockquote>
","1144737"
"Convert special characters to HTML in Javascript","265558","","<p>Does any one know how to convert special characters to <code>HTML</code> in <code>Javascript</code>?</p>

<p>Example:</p>

<ul>
<li><code>&amp;</code> (ampersand) becomes <code>&amp;amp</code>.</li>
<li><code>""</code> (double quote) becomes <code>&amp;quot</code> when <code>ENT_NOQUOTES</code> is not set.</li>
<li><code>'</code> (single quote) becomes <code>&amp;#039</code> only when <code>ENT_QUOTES</code> is set.</li>
<li><code>&lt;</code> (less than) becomes <code>&amp;lt</code>.</li>
<li><code>&gt;</code> (greater than) becomes <code>&amp;gt</code>.</li>
</ul>
","<p>You need a function that does something like</p>

<pre><code>return mystring.replace(/&amp;/g, ""&amp;amp;"").replace(/&gt;/g, ""&amp;gt;"").replace(/&lt;/g, ""&amp;lt;"").replace(/""/g, ""&amp;quot;"");
</code></pre>

<p>But taking into account your desire for different handling of single/double quotes.</p>
","784611"
"send javaScript variable to php variable","265231","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/1917576/how-to-pass-javascript-variables-to-php"">How to pass JavaScript variables to PHP?</a>  </p>
</blockquote>



<p>First I thought that I had to convert javascript to php, but then I found out that I cannot because of server and client side executions. So now I simply want to send ONE variable</p>

<pre><code>&lt;script type=""text/javascript""&gt;
function scriptvariable()
{        
    var theContents = ""the variable"";
}
&lt;/script&gt;
</code></pre>

<p>to a php variable </p>

<pre><code>&lt;?php
$phpvariable
?&gt;
</code></pre>

<p>That function in the javascript executes when let's say I click on a button.</p>

<p>Now I have no idea on how to assign that phpvariable to the javascript one to use the phpvariable to look up stuff in my Database. 
I know I can add it to my url or some thing and refresh the page.. But I would like to do it with AJAX as I might have to use this Ajax method further in my webpage... </p>

<p>So is there an easy way to do this without having to dump pages of code on my page to do one simple thing?</p>
","<p>As Jordan already said you have to post back the javascript variable to your server before the server can handle the value. To do this you can either program a javascript function that submits a form - or you can use ajax / jquery. <a href=""http://api.jquery.com/jQuery.post/"" rel=""noreferrer"">jQuery.post</a></p>

<p>Maybe the most easiest approach for you is something like this</p>

<pre><code>function myJavascriptFunction() { 
  var javascriptVariable = ""John"";
  window.location.href = ""myphpfile.php?name="" + javascriptVariable; 
}
</code></pre>

<p>On your myphpfile.php you can use <code>$_GET['name']</code> after your javascript was executed.</p>

<p>Regards</p>
","8191166"
"How to trigger the window resize event in JavaScript?","264514","","<p>I have registered a trigger on window resize. I want to know how I can trigger the event to be called. For example, when hide a div, I want my trigger function to be called.</p>

<p>I found <code>window.resizeTo()</code> can trigger the function, but is there any other solution?</p>
","<p>Where possible, I prefer to call the function rather than dispatch an event. This works well if you have control over the code you want to run, but see below for cases where you don't own the code.</p>

<pre><code>window.onresize = doALoadOfStuff;

function doALoadOfStuff() {
    //do a load of stuff
}
</code></pre>

<p>In this example, you can call the <code>doALoadOfStuff</code> function without dispatching an event.</p>

<p>In your modern browsers, you can <a href=""https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events"" rel=""noreferrer"">trigger the event</a> using:</p>

<pre><code>window.dispatchEvent(new Event('resize'));
</code></pre>

<p>This doesn't work in Internet Explorer, where you'll have to do the longhand:</p>

<pre><code>var resizeEvent = window.document.createEvent('UIEvents'); 
resizeEvent .initUIEvent('resize', true, false, window, 0); 
window.dispatchEvent(resizeEvent);
</code></pre>

<p><a href=""http://api.jquery.com/trigger/"" rel=""noreferrer"">jQuery has the <code>trigger</code> method</a>, which works like this:</p>

<pre><code>$(window).trigger('resize');
</code></pre>

<p>And has the caveat:</p>

<blockquote>
  <p>Although .trigger() simulates an event activation, complete with a synthesized event object, it does not perfectly replicate a naturally-occurring event.</p>
</blockquote>

<p>You can also simulate events on a specific element...</p>

<pre><code>function simulateClick(id) {
  var event = new MouseEvent('click', {
    'view': window,
    'bubbles': true,
    'cancelable': true
  });

  var elem = document.getElementById(id); 

  return elem.dispatchEvent(event);
}
</code></pre>
","1818513"
"Reload an iframe with jQuery","264010","","<p>I have two iframes on a page and one makes changes to the other but the other iframe doesn't show the change until I refresh. Is there an easy way to refresh this iframe with jQuery?</p>

<pre><code>&lt;div class=""project""&gt;
  &lt;iframe id=""currentElement"" class=""myframe"" name=""myframe"" src=""http://somesite.com/something/new""&gt;&lt;/iframe&gt;
&lt;/div&gt;
</code></pre>
","<p>If the iframe was not on a different domain, you could do something like this:</p>

<pre><code>document.getElementById(FrameID).contentDocument.location.reload(true);
</code></pre>

<p>But since the iframe is on a different domain, you will be denied access to the iframe's <code>contentDocument</code> property by the <a href=""http://en.wikipedia.org/wiki/Same_origin_policy"" rel=""noreferrer"">same-origin policy</a>.</p>

<p>But you can hackishly force the cross-domain iframe to reload if your code is running on the iframe's parent page, by setting it's src attribute to itself. Like this:</p>

<pre><code>// hackishly force iframe to reload
var iframe = document.getElementById(FrameId);
iframe.src = iframe.src;
</code></pre>

<p>If you are trying to reload the iframe from another iframe, you are out of luck, <em>that</em> is <em>not</em> possible.</p>
","4249889"
"Sort Javascript Object Array By Date","263995","","<p>Say I have an array of a few objects:</p>

<pre><code>var array = [{id: 1, date: Mar 12 2012 10:00:00 AM}, {id: 2, date: Mar 8 2012 08:00:00 AM}];
</code></pre>

<p>How can I sort this array by the date element in order from the date closest to the current date and time down? Keep in mind that the array may have many objects, but for the sake of simplicity I used 2.</p>

<p>Would I use the sort function and a custom comparator?</p>

<p><strong>UPDATE</strong></p>

<p>In my specific case, I wanted the dates arranged from the most recent to the oldest. It ended up that I had to reverse the simple function's logic as so:</p>

<pre><code>array.sort(function(a, b) {
    a = new Date(a.dateModified);
    b = new Date(b.dateModified);
    return a&gt;b ? -1 : a&lt;b ? 1 : 0;
});
</code></pre>

<p>This sorts the dates from the most recent.</p>
","<h2>Simplest Answer</h2>

<pre><code>array.sort(function(a,b){
  // Turn your strings into dates, and then subtract them
  // to get a value that is either negative, positive, or zero.
  return new Date(b.date) - new Date(a.date);
});
</code></pre>

<h2>More Generic Answer</h2>

<pre><code>array.sort(function(o1,o2){
  if (sort_o1_before_o2)    return -1;
  else if(sort_o1_after_o2) return  1;
  else                      return  0;
});
</code></pre>

<p>Or more tersely:</p>

<pre><code>array.sort(function(o1,o2){
  return sort_o1_before_o2 ? -1 : sort_o1_after_o2 ? 1 : 0;
});
</code></pre>

<h2>Generic, Powerful Answer</h2>

<p>Define a custom non-enumerable <code>sortBy</code> function using a <a href=""http://en.wikipedia.org/wiki/Schwartzian_transform"">Schwartzian transform</a> on all arrays :</p>

<pre><code>(function(){
  if (typeof Object.defineProperty === 'function'){
    try{Object.defineProperty(Array.prototype,'sortBy',{value:sb}); }catch(e){}
  }
  if (!Array.prototype.sortBy) Array.prototype.sortBy = sb;

  function sb(f){
    for (var i=this.length;i;){
      var o = this[--i];
      this[i] = [].concat(f.call(o,o,i),o);
    }
    this.sort(function(a,b){
      for (var i=0,len=a.length;i&lt;len;++i){
        if (a[i]!=b[i]) return a[i]&lt;b[i]?-1:1;
      }
      return 0;
    });
    for (var i=this.length;i;){
      this[--i]=this[i][this[i].length-1];
    }
    return this;
  }
})();
</code></pre>

<p>Use it like so:</p>

<pre><code>array.sortBy(function(o){ return o.date });
</code></pre>

<p>If your date is not directly comparable, make a comparable date out of it, e.g.</p>

<pre><code>array.sortBy(function(o){ return new Date( o.date ) });
</code></pre>

<p>You can also use this to sort by multiple criteria if you return an array of values:</p>

<pre><code>// Sort by date, then score (reversed), then name
array.sortBy(function(o){ return [ o.date, -o.score, o.name ] };
</code></pre>

<p><em>See <a href=""http://phrogz.net/JS/Array.prototype.sortBy.js"">http://phrogz.net/JS/Array.prototype.sortBy.js</a> for more details.</em></p>
","10124053"
"Chrome desktop notification example","263664","","<p>How does one use <a href=""http://techcrunch.com/2009/09/01/chrome-is-gaining-desktop-notifications/"" rel=""noreferrer"">Chrome desktop notifications</a>? I'd like that use that in my own code.</p>

<p><strong>Update</strong>: Here's <a href=""http://0xfe.blogspot.com/2010/04/desktop-notifications-with-webkit.html"" rel=""noreferrer"">a blog post</a> explaining webkit notifications with an example.</p>
","<p>Below is a working example of desktop notifications for Chrome, Firefox, Opera and Safari.<br>
Try it live <a href=""https://jsbin.com/ziwod/2/edit?html,js,output"">on JSBin</a>.</p>

<pre class=""lang-js prettyprint-override""><code>// request permission on page load
document.addEventListener('DOMContentLoaded', function () {
  if (!Notification) {
    alert('Desktop notifications not available in your browser. Try Chromium.'); 
    return;
  }

  if (Notification.permission !== ""granted"")
    Notification.requestPermission();
});

function notifyMe() {
  if (Notification.permission !== ""granted"")
    Notification.requestPermission();
  else {
    var notification = new Notification('Notification title', {
      icon: 'http://cdn.sstatic.net/stackexchange/img/logos/so/so-icon.png',
      body: ""Hey there! You've been notified!"",
    });

    notification.onclick = function () {
      window.open(""http://stackoverflow.com/a/13328397/1269037"");      
    };

  }

}
</code></pre>

<pre class=""lang-html prettyprint-override""><code>&lt;button onclick=""notifyMe()""&gt;Notify me!&lt;/button&gt;
</code></pre>

<hr>

<p>We're using the <a href=""http://www.w3.org/TR/notifications/"">W3C Notifications</a> API, documented at <a href=""https://developer.mozilla.org/en-US/docs/Web/API/notification"">MDN</a>. Do not confuse this with the <a href=""https://developer.chrome.com/extensions/desktop_notifications"">Chrome extensions notifications API</a>, which is different. Chrome extension notifications obviously only work in Chrome extensions, don't require any special permission from the user, support rich text notifications, but <a href=""https://code.google.com/p/chromium/issues/detail?id=493500#c3"">disappear automatically and the user may not notice they have been triggered</a>). W3C notifications work in many browsers (see support on <a href=""http://caniuse.com/#search=Notification"">caniuse</a>), require user permission, stack on top of the previous notification and don't automatically disappear in Chrome (<a href=""https://bugzilla.mozilla.org/show_bug.cgi?id=875114"">they do in Firefox</a>).</p>

<h3>Final words</h3>

<p>Notification support has been in continuous flux, with various APIs being deprecated over the last three years. If you're curious, check the previous edits of this answer to see what used to work in Chrome, and to learn the story of rich HTML notifications.</p>

<p>Now the latest standard is at <a href=""https://notifications.spec.whatwg.org/"">https://notifications.spec.whatwg.org/</a>.</p>

<p>There's also a <a href=""https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/showNotification"">different call</a> (though with the same parameters) to create notifications from service workers, which <a href=""https://bugs.chromium.org/p/chromium/issues/detail?id=590029"">for some reason</a>, don't have access to the <code>Notification()</code> constructor.</p>

<p>See also <a href=""https://github.com/alexgibson/notify.js/"">notify.js</a> for a helper library.</p>
","13328513"
"How to insert an element after another element in JavaScript without using a library?","263494","","<p>There's <code>insertBefore()</code> in JavaScript, but how to insert an element <em>after</em> without using jQuery or another library?</p>
","<pre><code>referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);
</code></pre>

<p>Where <code>referenceNode</code> is the node you want to put <code>newNode</code> after. If <code>referenceNode</code> is the last child within its parent element, that's fine, because <code>referenceNode.nextSibling</code> will be <code>null</code> and <a href=""http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-952280727"" rel=""noreferrer""><code>insertBefore</code></a> handles that case by adding to the end of the list.</p>

<p>So:</p>

<pre><code>function insertAfter(newNode, referenceNode) {
    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);
}
</code></pre>

<p><a href=""http://jsfiddle.net/UqDJk/"" rel=""noreferrer""><strong>Try it here.</strong></a></p>
","4793630"
"How can I make a div stick to the top of the screen once it's been scrolled to?","263410","","<p>I would like to create a div, that is situated beneath a block of content but that once the page has been scrolled enough to contact its top boundary, becomes fixed in place and scrolls with the page. I know I've seen at least one example of this online but I cannot remember it for the life of me.</p>

<p>Any thoughts?</p>
","<p>You could use simply css, positioning your element as <a href=""http://www.w3schools.com/Css/pr_class_position.asp"" rel=""noreferrer"">fixed</a>:</p>

<pre><code>.fixedElement {
    background-color: #c0c0c0;
    position:fixed;
    top:0;
    width:100%;
    z-index:100;
}
</code></pre>

<p><strong>Edit:</strong> You should have the element with position absolute, once the scroll offset has reached the element, it should be changed to fixed, and the top position should be set to zero.</p>

<p>You can detect the top scroll offset of the document with the <a href=""http://docs.jquery.com/CSS/scrollTop"" rel=""noreferrer"">scrollTop</a> function:</p>

<pre><code>$(window).scroll(function(e){ 
  var $el = $('.fixedElement'); 
  var isPositionFixed = ($el.css('position') == 'fixed');
  if ($(this).scrollTop() &gt; 200 &amp;&amp; !isPositionFixed){ 
    $('.fixedElement').css({'position': 'fixed', 'top': '0px'}); 
  }
  if ($(this).scrollTop() &lt; 200 &amp;&amp; isPositionFixed)
  {
    $('.fixedElement').css({'position': 'static', 'top': '0px'}); 
  } 
});
</code></pre>

<p>When the scroll offset reached 200, the element will <em>stick</em> to the top of the browser window, because is placed as fixed.</p>
","1216130"
"Delete first character of a string in Javascript","262953","","<p>I want to delete the first character of a string, if the first character is a 0.  The 0 can be there more than once.</p>

<p>Is there a simple function that checks the first character and deletes it if it is 0?</p>

<p>Right now, I'm trying it with the JS <code>slice()</code> function but it is very awkward.</p>
","<pre><code>var s = ""0000test"";
while(s.charAt(0) === '0')
{
 s = s.substr(1);
}
</code></pre>

<p>This will kill any 0's at the start of the string.</p>
","4564478"
"JSON.parse unexpected character error","262913","","<p>I get this error:</p>

<blockquote>
  <p>JSON.parse: unexpected character</p>
</blockquote>

<p>when I run this statement in firebug:</p>

<pre><code>JSON.parse({""balance"":0,""count"":0,""time"":1323973673061,""firstname"":""howard"",""userId"":5383,""localid"":1,""freeExpiration"":0,""status"":false});
</code></pre>

<p>Why is it so? The JSON string seems correct to me and I also tested it using JSHint. The passed object in the above case is a server response with content type set to <code>application/json</code></p>
","<p>You're not parsing a string, you're parsing an already-parsed object :)</p>

<pre><code>var obj1 = JSON.parse('{""creditBalance"":0,...,""starStatus"":false}');
//                    ^                                          ^
//                    if you want to parse, the input should be a string 

var obj2 = {""creditBalance"":0,...,""starStatus"":false};
// or just use it directly.
</code></pre>
","8524959"
"fastest MD5 Implementation in JavaScript","262911","","<p>There are many MD5 JavaScript implementations out there. 
Does anybody know which one is the most advanced, most bugfixed and fastest? </p>

<p>I need it for <a href=""http://www.bruechner.de/md5file/js/"" rel=""noreferrer"">this</a> tool.</p>
","<p>I've heard Joseph's Myers implementation is quite fast. Additionally, he has a <a href=""http://www.webreference.com/programming/javascript/jkm3/"" rel=""noreferrer"">lengthy article</a> on Javascript optimization describing what he learned while writing his implementation. It's a good read for anyone interested in performant javascript.</p>

<p><a href=""http://www.webreference.com/programming/javascript/jkm3/"" rel=""noreferrer"">http://www.webreference.com/programming/javascript/jkm3/</a></p>

<p>His MD5 implementation can be found <a href=""http://www.myersdaily.org/joseph/javascript/md5-text.html"" rel=""noreferrer"">here</a></p>
","1655795"
"How to check if function exists in JavaScript?","262823","","<p>I followed <a href=""http://www.actionscript.org/resources/articles/638/1/Basics-of-using-the-ExternalInterface/Page1.html"" rel=""noreferrer"">this guide</a> to create a new JS to flash communication. </p>

<p>My code is</p>

<pre><code>function getID( swfID ){
     if(navigator.appName.indexOf(""Microsoft"") != -1){
          me = window[swfID];
     }else{
          me = document[swfID];
     }
}

function js_to_as( str ){
     me.onChange(str);
}
</code></pre>

<p>However, sometimes my <code>onChange</code> does not load. Firebug errors with</p>

<blockquote>
  <p>me.onChange is not a function</p>
</blockquote>

<p>I want to degrade gracefully because this is not the most important feature in my program. <code>typeof</code> gives the same error.</p>

<p>Any suggestions on how to make sure that it exists and then only execute <code>onChange</code>?</p>

<p>(None of the methods below except try catch one work)</p>
","<p>Try something like this:</p>

<pre><code>if (typeof me.onChange !== ""undefined"") { 
    // safe to use the function
}
</code></pre>

<p>or better yet (as per UpTheCreek upvoted comment)</p>

<pre><code>if (typeof me.onChange === ""function"") { 
    // safe to use the function
}
</code></pre>
","1042154"
"Find a value in an array of objects in Javascript","262748","","<p>I know similar questions have been asked before, but this one is a little different. I have an array of unnamed objects, which contain an array of named objects, and I need to get the object where ""name"" is ""string 1"". Here is an example array.</p>

<pre><code>var array = [
    { name:""string 1"", value:""this"", other: ""that"" },
    { name:""string 2"", value:""this"", other: ""that"" }
];
</code></pre>

<p><strong>Update:</strong> I should have said this earlier, but once I find it, I want to replace it with an edited object.</p>
","<p>You can loop over the array and test for that property:</p>

<pre><code>function search(nameKey, myArray){
    for (var i=0; i &lt; myArray.length; i++) {
        if (myArray[i].name === nameKey) {
            return myArray[i];
        }
    }
}

var array = [
    { name:""string 1"", value:""this"", other: ""that"" },
    { name:""string 2"", value:""this"", other: ""that"" }
];

var resultObject = search(""string 1"", array);
</code></pre>
","12462387"
"How to use a link to call JavaScript?","262714","","<p>How to use a link to call JavaScript code?</p>
","<pre><code>&lt;a onclick=""jsfunction()"" href=""#""&gt;
</code></pre>

<p>or </p>

<pre><code>&lt;a onclick=""jsfunction()"" href=""javascript:void(0);""&gt;
</code></pre>

<p>Edit:</p>

<p>The above response is really not a good solution, having learned a lot about JS since I initially posted.  See <a href=""https://stackoverflow.com/a/688228/2227526"">EndangeredMassa's answer</a> below for the better approach to solving this problem.</p>
","688208"
"How to get href value using jQuery?","262454","","<p>I'm trying to get href value using jQuery:</p>

<pre><code>&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Jquery Test&lt;/title&gt;
         &lt;script type=""text/javascript"" src=""http://code.jquery.com/jquery-latest.js""&gt;&lt;/script&gt;
        &lt;script type=""text/javascript""&gt;
        $(document).ready(function() {
            $(""a"").click(function(event) {
                alert(""As you can see, the link no longer took you to jquery.com"");
                var href = $('a').attr('href');
                alert(href);
                event.preventDefault();
            });
        });
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;a href=""http://jquery.com/""&gt;jQuery&lt;/a&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>But it doesn't work. Why?</p>
","<p>You need</p>

<pre><code>var href = $(this).attr('href');
</code></pre>

<p>Inside a jQuery click handler, the <code>this</code> object refers to the element clicked, whereas in your case you're always getting the href for the first <code>&lt;a&gt;</code> on the page. This, incidentally, is why your example works but your real code doesn't</p>
","2098501"
"Does JavaScript have a method like ""range()"" to generate an array based on supplied bounds?","262264","","<p>In PHP, you can do...</p>

<pre><code>range(1, 3); // Array(1, 2, 3)
range(""A"", ""C""); // Array(""A"", ""B"", ""C"")
</code></pre>

<p>That is, there is a function that lets you get a range of numbers or characters by passing the upper and lower bounds.</p>

<p>Is there anything built-in to JavaScript natively for this? If not, how would I implement it?</p>
","<p>It works for characters and numbers, going forwards or backwards with an optional step.</p>

<pre><code>var range = function(start, end, step) {
    var range = [];
    var typeofStart = typeof start;
    var typeofEnd = typeof end;

    if (step === 0) {
        throw TypeError(""Step cannot be zero."");
    }

    if (typeofStart == ""undefined"" || typeofEnd == ""undefined"") {
        throw TypeError(""Must pass start and end arguments."");
    } else if (typeofStart != typeofEnd) {
        throw TypeError(""Start and end arguments must be of same type."");
    }

    typeof step == ""undefined"" &amp;&amp; (step = 1);

    if (end &lt; start) {
        step = -step;
    }

    if (typeofStart == ""number"") {

        while (step &gt; 0 ? end &gt;= start : end &lt;= start) {
            range.push(start);
            start += step;
        }

    } else if (typeofStart == ""string"") {

        if (start.length != 1 || end.length != 1) {
            throw TypeError(""Only strings with one character are supported."");
        }

        start = start.charCodeAt(0);
        end = end.charCodeAt(0);

        while (step &gt; 0 ? end &gt;= start : end &lt;= start) {
            range.push(String.fromCharCode(start));
            start += step;
        }

    } else {
        throw TypeError(""Only string and number types are supported"");
    }

    return range;

}
</code></pre>

<p><a href=""http://jsfiddle.net/ZaZAZ/"" rel=""nofollow noreferrer"">jsFiddle</a>.</p>

<p>If augmenting native types is your thing, then assign it to <code>Array.range</code>.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var range = function(start, end, step) {
    var range = [];
    var typeofStart = typeof start;
    var typeofEnd = typeof end;

    if (step === 0) {
        throw TypeError(""Step cannot be zero."");
    }

    if (typeofStart == ""undefined"" || typeofEnd == ""undefined"") {
        throw TypeError(""Must pass start and end arguments."");
    } else if (typeofStart != typeofEnd) {
        throw TypeError(""Start and end arguments must be of same type."");
    }

    typeof step == ""undefined"" &amp;&amp; (step = 1);

    if (end &lt; start) {
        step = -step;
    }

    if (typeofStart == ""number"") {

        while (step &gt; 0 ? end &gt;= start : end &lt;= start) {
            range.push(start);
            start += step;
        }

    } else if (typeofStart == ""string"") {

        if (start.length != 1 || end.length != 1) {
            throw TypeError(""Only strings with one character are supported."");
        }

        start = start.charCodeAt(0);
        end = end.charCodeAt(0);

        while (step &gt; 0 ? end &gt;= start : end &lt;= start) {
            range.push(String.fromCharCode(start));
            start += step;
        }

    } else {
        throw TypeError(""Only string and number types are supported"");
    }

    return range;

}

console.log(range(""A"", ""Z"", 1));
console.log(range(""Z"", ""A"", 1));
console.log(range(""A"", ""Z"", 3));


console.log(range(0, 25, 1));

console.log(range(0, 25, 5));
console.log(range(20, 5, 5));</code></pre>
</div>
</div>
</p>
","3895521"
"Retrieving the text of the selected <option> in <select> element","262152","","<p>In the following: </p>

<pre><code>&lt;select id=""test""&gt;
    &lt;option value=""1""&gt;Test One&lt;/option&gt;
    &lt;option value=""2""&gt;Test Two&lt;/option&gt;
&lt;/select&gt;
</code></pre>

<p>How can I get the text of the selected option (i.e. ""Test One"" or ""Test Two"") using JavaScript</p>

<p><code>document.getElementsById('test').selectedValue</code> returns 1 or 2, what property returns the text of the selected option?</p>
","<pre><code>function getSelectedText(elementId) {
    var elt = document.getElementById(elementId);

    if (elt.selectedIndex == -1)
        return null;

    return elt.options[elt.selectedIndex].text;
}

var text = getSelectedText('test');
</code></pre>
","610344"
"Remove leading comma from a string","262016","","<p>I have the following string:</p>

<pre><code>"",'first string','more','even more'""
</code></pre>

<p>I want to transform this into an Array but obviously this is not valid due to the first comma. How can I remove the first comma from my string and make it a valid Array?</p>

<p>I’d like to end up with something like this:</p>

<pre><code>myArray  = ['first string','more','even more']
</code></pre>
","<p>To remove the first character you would use:</p>

<pre><code>myOriginalString = "",'first string','more','even more'""; 
myString = myOriginalString.substring(1);
</code></pre>

<p>I'm not sure this will be the result you're looking for though because you will still need to split it to create an array with it. Maybe something like:</p>

<pre><code>myString = myOriginalString.substring(1);
myArray = myString.split(',');
</code></pre>

<p>Keep in mind, the ' character will be a part of each string in the split here.</p>
","3923031"
"Moment js date time comparison","261936","","<p>I'm using moment.js to format my date time, here I have two date value, and I want to achieve a particular function when one date is greater than the other. I read most of their docs, but didn't find the function to achieve this. I know it will be there, please help me to find it out, thanks. </p>

<p>This is my code </p>

<pre><code>var date_time = 2013-03-24 + 'T' + 10:15:20:12 + 'Z'
var d = moment(date_time).tz('UTC'); // first date 

var now = new Date(),
    dnow = moment(now).tz('UTC'),
    snow = dnow.minute() % 15,
    diffnow = 15 - snow,
    tonow = moment(dnow).add('minute', diffnow),
    ahead30now = moment(tonow).add('minute', 30);

if (d &gt; ahead30now) {
    // allow input time
    console.log('UTC TIME DB', d.format());
} else {

}
</code></pre>

<p><strong>Edit</strong> </p>

<pre><code>var date_time = req.body.date + 'T' + req.body.time + req.body.timezone; // 2014-03-24T01:15:000
var utc_input_time = moment(date_time).utc(); // 2014-03-24T01:15:000
console.log('utc converted date_time', moment(date_time).utc().format(""YYYY-MM-DDTHH:mm:SSS""));
var isafter = moment(utc_input_time).isAfter(moment('2014-03-24T01:14:000')); // true
if(isafter === true){
    console.log('is after true');
} else {
    console.log('is after is false');
}
</code></pre>

<p>Here, I am comparing two dates i.e. <code>2014-03-24T01:15:000 &gt; 2014-03-24T01:14:000</code>, expecting that the first one is greater than the second one, but it always goes to the else condition. I don't know why?</p>
","<p>I believe you are looking for the <a href=""http://momentjs.com/docs/#/query/"">query functions</a>, <code>isBefore</code>, <code>isSame</code>, and <code>isAfter</code>.</p>

<p>But it's a bit difficult to tell exactly what you're attempting.  Perhaps you are just looking to get the difference between the input time and the current time?  If so, consider the <a href=""http://momentjs.com/docs/#/displaying/difference/"">difference function</a>, <code>diff</code>.  For example:</p>

<pre><code>moment().diff(date_time, 'minutes')
</code></pre>

<p>A few other things:</p>

<ul>
<li><p>There's an error in the first line:</p>

<pre><code>var date_time = 2013-03-24 + 'T' + 10:15:20:12 + 'Z'
</code></pre>

<p>That's not going to work.  I think you meant:</p>

<pre><code>var date_time = '2013-03-24' + 'T' + '10:15:20:12' + 'Z';
</code></pre>

<p>Of course, you might as well:</p>

<pre><code>var date_time = '2013-03-24T10:15:20:12Z';
</code></pre></li>
<li><p>You're using: <code>.tz('UTC')</code> incorrectly.  <code>.tz</code> belongs to <a href=""http://momentjs.com/timezone/"">moment-timezone</a>. You don't need to use that unless you're working with other time zones, like <code>America/Los_Angeles</code>.</p>

<p>If you want to parse a value as UTC, then use:</p>

<pre><code>moment.utc(theStringToParse)
</code></pre>

<p>Or, if you want to parse a local value and <em>convert</em> it to UTC, then use:</p>

<pre><code>moment(theStringToParse).utc()
</code></pre>

<p>Or perhaps you don't need it at all.  Just because the input value is in UTC, doesn't mean you have to work in UTC throughout your function.</p></li>
<li><p>You seem to be getting the ""now"" instance by  <code>moment(new Date())</code>.  You can instead just use <code>moment()</code>.</p></li>
</ul>

<h3>Updated</h3>

<p>Based on your edit, I think you can just do this:</p>

<pre><code>var date_time = req.body.date + 'T' + req.body.time + 'Z';
var isafter = moment(date_time).isAfter('2014-03-24T01:14:00Z');
</code></pre>

<p>Or, if you would like to ensure that your fields are validated to be in the correct format:</p>

<pre><code>var m = moment.utc(req.body.date + ' ' + req.body.time, ""YYYY-MM-DD  HH:mm:ss"");
var isvalid = m.isValid();
var isafter = m.isAfter('2014-03-24T01:14:00Z');
</code></pre>
","22601120"
"Google MAP API Uncaught TypeError: Cannot read property 'offsetWidth' of null","261836","","<p>I'm trying to use Google MAP API v3 with the following code.</p>

<pre><code>&lt;h2&gt;Topology&lt;/h2&gt;

&lt;script src=""https://maps.google.com/maps/api/js?sensor=false"" type=""text/javascript""&gt;&lt;/script&gt;

&lt;link rel=""stylesheet"" type=""text/css"" href=""{% url css_media 'tooltip.topology.css' %}"" /&gt;
&lt;link rel=""stylesheet"" type=""text/css"" href=""{% url css_media 'tooltip.css' %}"" /&gt;

&lt;style type=""text/css"" &gt;
      #map_canvas {
              width:300px;
            height:300px;
     }
&lt;/style&gt;

&lt;script type=""text/javascript""&gt;

var latlng = new google.maps.LatLng(-34.397, 150.644);
var myOptions = {
zoom: 8,
      center: latlng,
      mapTypeId: google.maps.MapTypeId.ROADMAP
};
var map = new google.maps.Map(document.getElementById(""map_canvas""),
            myOptions);

&lt;/script&gt;

&lt;div id=""map_canvas""&gt; &lt;/div&gt;
</code></pre>

<p>When I run this code, the browser says this. </p>

<blockquote>
  <p>Uncaught TypeError: Cannot read property 'offsetWidth' of null</p>
</blockquote>

<p>I have no idea, since I follow the direction given in <a href=""https://developers.google.com/maps/documentation/javascript/tutorial"">this tutorial</a>.</p>

<p>Do you have any clue?</p>
","<p>This problem is usually due to the map div not being rendered before the javascript runs that needs to access it.</p>

<p>You should put your initialization code inside an onload function or at the bottom of your HTML file, just before the  tag, so the DOM is completely rendered before it executes (note that the second option is more sensitive to invalid HTML).</p>

<p>Note, as pointed out by <a href=""https://stackoverflow.com/users/1963978/matthewsheets"">matthewsheets</a> this also could be cause by the div with that id not existing at all in your HTML (the pathological case of the div not being rendered) </p>

<p>Adding code sample from <a href=""https://stackoverflow.com/users/697856/wf9a5m75"">wf9a5m75</a>'s post to put everything in one place:</p>

<pre><code>&lt;script type=""text/javascript""&gt;

function initialize() {
    var latlng = new google.maps.LatLng(-34.397, 150.644);
    var myOptions = {
        zoom: 8,
        center: latlng,
        mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    var map = new google.maps.Map(document.getElementById(""map_canvas""),
            myOptions);
}
google.maps.event.addDomListener(window, ""load"", initialize);

&lt;/script&gt;
</code></pre>
","11743096"
"Can someone explain the dollar sign in Javascript?","261822","","<p>The code in question is here: </p>

<pre><code>var $item = $(this).parent().parent().find('input');
</code></pre>

<p>What is the purpose of the dollar sign in the variable name, why not just exclude it?</p>
","<p>A '$' in a variable means nothing special to the interpreter, much like an underscore.</p>

<p>From what I've seen, many people using <a href=""http://jquery.com"" rel=""noreferrer"">jQuery</a> (which is what your example code looks like to me) tend to prefix variables that contain a jQuery object with a $ so that they are easily identified and not mixed up with, say, integers.</p>

<p>The dollar sign function <code>$()</code> in jQuery is a library function that is frequently used, so a short name is desirable.</p>
","846613"
"JavaScript: How can I insert a string at a specific index","261774","","<p>How can I insert a string at a specific index of another string? </p>

<pre><code> var txt1 = ""foo baz""
</code></pre>

<p>Suppose I want to insert ""bar "" after the ""foo"" how can I achieve that? I thought of substring, but there must be a simpler more straight forward way?</p>
","<p>You could prototype your own <code>splice()</code> into String.</p>

<h2>Polyfill</h2>

<pre><code>if (!String.prototype.splice) {
    /**
     * {JSDoc}
     *
     * The splice() method changes the content of a string by removing a range of
     * characters and/or adding new characters.
     *
     * @this {String}
     * @param {number} start Index at which to start changing the string.
     * @param {number} delCount An integer indicating the number of old chars to remove.
     * @param {string} newSubStr The String that is spliced in.
     * @return {string} A new string with the spliced substring.
     */
    String.prototype.splice = function(start, delCount, newSubStr) {
        return this.slice(0, start) + newSubStr + this.slice(start + Math.abs(delCount));
    };
}
</code></pre>

<h2>Example</h2>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>String.prototype.splice = function(idx, rem, str) {
    return this.slice(0, idx) + str + this.slice(idx + Math.abs(rem));
};

var result = ""foo baz"".splice(4, 0, ""bar "");

document.body.innerHTML = result; // ""foo bar baz""</code></pre>
</div>
</div>
</p>

<hr>

<p><strong>EDIT:</strong> Modified it to ensure that <code>rem</code> is an absolute value.</p>
","4314050"
"Change URL parameters","261657","","<p>I have this URL:</p>

<pre><code>site.fwx?position=1&amp;archiveid=5000&amp;columns=5&amp;rows=20&amp;sorting=ModifiedTimeAsc
</code></pre>

<p>what I need is to be able to change the 'rows' url param value to something i specify, lets say 10. And if the 'rows' doesn't exist, I need to add it to the end of the url and add the value i've already specified (10).</p>
","<p>To answer my own question 4 years later, after having learned a lot. Especially that you shouldn't use jQuery for everything. I've created a simple module that can parse/stringify a query string. This makes it easy to modify the query string.</p>

<p>You can use <a href=""https://github.com/sindresorhus/query-string"">query-string</a> as follows:</p>

<pre><code>// parse the query string into an object
var q = queryString.parse(location.search);
// set the `row` property
q.rows = 10;
// convert the object to a query string
// and overwrite the existing query string
location.search = queryString.stringify(q);
</code></pre>
","19965480"
"How do I view events fired on an element in Chrome DevTools?","261625","","<p>I have a customizable form element on a page from a library. I want to see what javascript events are fired when I interact with it because I am trying to find out which event handler to use.</p>

<p>How do I do that using Chrome Web Developer?</p>
","<ul>
<li>Hit <kbd>F12</kbd> to open Dev Tools</li>
<li>Click the Sources tab</li>
<li>On right-hand side, scroll down to ""Event Listener Breakpoints"", and expand tree</li>
<li>Click on the events you want to listen for.  </li>
<li>Interact with the target element, if they fire you will get a break point in the debugger</li>
</ul>

<p>Similarly, you can right click on the target element -> select ""inspect element""  Scroll down on the right side of the dev frame, at the bottom is 'event listeners'.  Expand the tree to see what events are attached to the element.  Not sure if this works for events that are handled through bubbling (I'm guessing not)</p>
","10213800"
"Open file dialog box in JavaScript","261545","","<p>I need a solution to display open file dialog in HTML while clicking a <code>div</code>. The open file dialog box must open when the <code>div</code> is clicked.</p>

<p>I don't want to display the input file box as part of HTML page. It must be displayed in separate dialog, which is not a part of the web page.</p>
","<p>Here is a nice one</p>

<p><a href=""http://fineuploader.com/demos"" rel=""noreferrer"">Fine Uploader demo</a></p>

<p>It is an <code>&lt;input type='file' /&gt;</code> control itself. But a div is placed over that and css styles are applied to get that feel. Opacity of the file control is set to 0 so that it appears that the dialog window is opened when clicking on the div.</p>
","2048060"
"What is event bubbling and capturing?","261194","","<p>What is the difference between event bubbling and capturing? Of the two, which is the faster and better model to use?</p>
","<p>Event bubbling and capturing are two ways of event propagation in the HTML DOM API, when an event occurs in an element inside another element, and both elements have registered a handle for that event. The event propagation mode determines in <a href=""http://www.quirksmode.org/js/events_order.html"" rel=""noreferrer"">which order the elements receive the event</a>.</p>

<p>With bubbling, the event is first captured and handled by the innermost element and then propagated to outer elements.</p>

<p>With capturing, the event is first captured by the outermost element and propagated to the inner elements.</p>

<p>Capturing is also called ""trickling"", which helps remember the propagation order:</p>

<blockquote>
  <p>trickle down, bubble up</p>
</blockquote>

<p>Back in the old days, Netscape advocated event capturing, while Microsoft promoted event bubbling. Both are part of the W3C <a href=""http://www.w3.org/TR/DOM-Level-2-Events/events.html"" rel=""noreferrer"">Document Object Model Events</a> standard (2000).</p>

<p>IE &lt; 9 uses <a href=""https://developer.mozilla.org/en-US/docs/Web/API/EventTarget.addEventListener"" rel=""noreferrer"">only event bubbling</a>, whereas IE9+ and all major browsers support both. On the other hand, the <a href=""https://stackoverflow.com/a/10335117/1269037"">performance of event bubbling may be slightly lower</a> for complex DOMs.</p>

<p>We can use the <code>addEventListener(type, listener, useCapture)</code> to register event handlers for in either bubbling (default) or capturing mode. To use the capturing model pass the third argument as <code>true</code>.</p>

<h2>Example</h2>

<pre><code>&lt;div&gt;
    &lt;ul&gt;
        &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/div&gt;
</code></pre>

<p>In the structure above, assume that a click event occurred in the <code>li</code> element.</p>

<p>In capturing model, the event will be handled by the <code>div</code> first (click event handlers in the <code>div</code> will fire first), then in the <code>ul</code>, then at the last in the target element, <code>li</code>.</p>

<p>In the bubbling model, the opposite will happen: the event will be first handled by the <code>li</code>, then by the <code>ul</code>, and at last by the <code>div</code> element.</p>

<p>For more information, see</p>

<ul>
<li><a href=""http://www.quirksmode.org/js/events_order.html"" rel=""noreferrer"">Event Order</a> on QuirksMode</li>
<li><a href=""https://developer.mozilla.org/en-US/docs/Web/API/EventTarget.addEventListener"" rel=""noreferrer"">addEventListener</a> on MDN</li>
<li><a href=""http://www.quirksmode.org/js/events_advanced.html"" rel=""noreferrer"">Events Advanced</a> on QuirksMode</li>
</ul>

<p>In the example below, if you click on any of the highlighted elements, you can see that the capturing phase of the event propagation flow occurs first, followed by the bubbling phase.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var logElement = document.getElementById('log');

function log(msg) {
    logElement.innerHTML += ('&lt;p&gt;' + msg + '&lt;/p&gt;');
}

function capture() {
    log('capture: ' + this.firstChild.nodeValue.trim());
}

function bubble() {
    log('bubble: ' + this.firstChild.nodeValue.trim());
}

var divs = document.getElementsByTagName('div');
for (var i = 0; i &lt; divs.length; i++) {
    divs[i].addEventListener('click', capture, true);
    divs[i].addEventListener('click', bubble, false);
}</code></pre>
<pre class=""snippet-code-css lang-css prettyprint-override""><code>p {
    line-height: 0;
}

div {
    display:inline-block;
    padding: 5px;

    background: #fff;
    border: 1px solid #aaa;
    cursor: pointer;
}

div:hover {
    border: 1px solid #faa;
    background: #fdd;
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div&gt;1
    &lt;div&gt;2
        &lt;div&gt;3
            &lt;div&gt;4
                &lt;div&gt;5&lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;section id=""log""&gt;&lt;/section&gt;</code></pre>
</div>
</div>
</p>

<p><a href=""http://jsfiddle.net/cwtuan/je1g3f29/16"" rel=""noreferrer"">Another example at JSFiddle</a>.</p>
","4616720"
"Refresh image with a new one at the same url","260898","","<p>I am accessing a link on my site that will provide a new image each time it is accessed.</p>

<p>The issue I am running into is that if I try to load the image in the background and then update the one on the page, the image doesn't change--though it is updated when I reload the page.</p>

<pre><code>var newImage = new Image();
newImage.src = ""http://localhost/image.jpg"";

function updateImage()
{
if(newImage.complete) {
    document.getElementById(""theText"").src = newImage.src;
    newImage = new Image();
    number++;
    newImage.src = ""http://localhost/image/id/image.jpg?time="" + new Date();
}

    setTimeout(updateImage, 1000);
}
</code></pre>

<p>Headers as FireFox sees them:</p>

<pre><code>HTTP/1.x 200 OK
Cache-Control: no-cache, must-revalidate
Pragma: no-cache
Transfer-Encoding: chunked
Content-Type: image/jpeg
Expires: Fri, 30 Oct 1998 14:19:41 GMT
Server: Microsoft-HTTPAPI/1.0
Date: Thu, 02 Jul 2009 23:06:04 GMT
</code></pre>

<p>I need to force a refresh of just that image on the page. Any ideas?</p>
","<p>What I ended up doing was having the server map any request for an image at that directory to the source that I was trying to update. I then had my timer append a number onto the end of the name so the DOM would see it as a new image and load it.</p>

<p>E.g.</p>

<pre><code>http://localhost/image.jpg
//and
http://localhost/image01.jpg
</code></pre>

<p>will request the same image generation code but it will look like different images to the browser.</p>

<pre><code>var newImage = new Image();
newImage.src = ""http://localhost/image.jpg"";
var count = 0;
function updateImage()
{
    if(newImage.complete) {
        document.getElementById(""theText"").src = newImage.src;
        newImage = new Image();
        newImage.src = ""http://localhost/image/id/image"" + count++ + "".jpg"";
    }
    setTimeout(updateImage, 1000);
}
</code></pre>
","1288555"
"JQuery show and hide div on mouse click (animate)","260880","","<p>This is my HTML code:</p>

<pre><code>&lt;div id=""showmenu""&gt;Click Here&lt;/div&gt;
&lt;div class=""menu"" style=""display: none;""&gt;
    &lt;ul&gt;
        &lt;li&gt;Button1&lt;/li&gt;
        &lt;li&gt;Button2&lt;/li&gt;
        &lt;li&gt;Button3&lt;/li&gt;
    &lt;/ul&gt;
&lt;/div&gt;
</code></pre>

<p>And I want to show <code>.menu</code> on click on <code>#showmenu</code> sliding from left to right (with animate). On click again on <code>#showmenu</code> or anywhere in site page, <code>.menu</code> will hide (slide back to left).</p>

<p>I use JQuery 2.0.3</p>

<p>I've tried this, but it doesn't do what I want.</p>

<pre><code>$(document).ready(function() {
    $('#showmenu').toggle(
        function() {
            $('.menu').slideDown(""fast"");
        },
        function() {
            $('.menu').slideUp(""fast"");
        }
    );
});
</code></pre>
","<p>That <a href=""http://api.jquery.com/toggle-event/""><code>.toggle()</code> method</a> was <em>removed</em> from jQuery in version 1.9. You can do this instead:</p>

<pre><code>$(document).ready(function() {
    $('#showmenu').click(function() {
            $('.menu').slideToggle(""fast"");
    });
});
</code></pre>

<p>Demo: <a href=""http://jsfiddle.net/APA2S/1/"">http://jsfiddle.net/APA2S/1/</a></p>

<p>...but as with the code in your question that would slide up or down. To slide left or right you can do the following:</p>

<pre><code>$(document).ready(function() {
    $('#showmenu').click(function() {
         $('.menu').toggle(""slide"");
    });
});
</code></pre>

<p>Demo: <a href=""http://jsfiddle.net/APA2S/2/"">http://jsfiddle.net/APA2S/2/</a></p>

<p>Noting that this requires <a href=""http://api.jqueryui.com/slide-effect/"">jQuery-UI's slide effect</a>, but you added that tag to your question so I assume that is OK.</p>
","17639091"
"Replace all spaces in a string with '+'","260861","","<p>I have a string that contains multiple spaces. I want to replace these with a plus symbol. I thought I could use </p>

<pre><code>var str = 'a b c';
var replaced = str.replace(' ', '+');
</code></pre>

<p>but it only replaces the first occurrence. How can I get it replace all occurrences?</p>
","<p>Here's an alternative that doesn't require regex:</p>

<pre><code>var str = 'a b c';
var replaced = str.split(' ').join('+');
</code></pre>
","3795147"
"jQuery: Wait/Delay 1 second without executing code","260696","","<p>I can't get the <code>.delay</code> method working in jQuery:</p>

<pre><code>$.delay(3000); // not working
$(queue).delay(3000); // not working
</code></pre>

<p>I'm using a while loop to wait until an uncontrolled changing value is greater than or equal to another and I can't find any way to hault execution for X seconds.</p>
","<p>$.delay is used to delay animations in a queue, not halt execution.</p>

<p>Instead of using a while loop, you need to recursively call a method that performs the check every second using <code>setTimeout</code>:</p>

<pre><code>var check = function(){
    if(condition){
        // run when condition is met
    }
    else {
        setTimeout(check, 1000); // check again in a second
    }
}

check();
</code></pre>
","8896368"
"jQuery .on('change', function() {} not triggering for dynamically created inputs","260650","","<p>The problem is that I have some dynamically created sets of input tags and I also have a function that is meant to trigger any time an input value is changed. </p>

<pre><code>$('input').on('change', function() {
  // Does some stuff and logs the event to the console
});
</code></pre>

<p>However the <code>.on('change')</code> is not triggering for any dynamically created inputs, only for items that were present when the page was loaded. Unfortunately this leaves me in a bit of a bind as <code>.on</code> is meant to be the replacement for <code>.live()</code> and <code>.delegate()</code> all of which are wrappers for <code>.bind()</code> :/</p>

<p>Has anyone else had this problem or know of a solution?</p>
","<p>You should provide a selector to the <code>on</code> function:</p>

<pre><code>$(document).on('change', 'input', function() {
  // Does some stuff and logs the event to the console
});
</code></pre>

<p>In that case, it will work as you expected. Also, it is better to specify some element instead of document.</p>

<p>Read this article for better understanding: <a href=""http://elijahmanor.com/differences-between-jquery-bind-vs-live-vs-delegate-vs-on/"" rel=""noreferrer"">http://elijahmanor.com/differences-between-jquery-bind-vs-live-vs-delegate-vs-on/</a></p>
","13418999"
"JavaScript get clipboard data on paste event (Cross browser)","259973","","<p>How can a web application detect a paste event and retrieve the data to be pasted?</p>

<p>I would like to remove HTML content before the text is pasted into a rich text editor.</p>

<p>Cleaning the text after being pasted afterwards works, but the problem is that all previous formatting is lost. For example, I can write a sentence in the editor and make it bold, but when I paste new text, all formatting is lost. I want to clean just the text that is pasted, and leave any previous formatting untouched.</p>

<p>Ideally, the solution should work across all modern browsers (e.g., MSIE, Gecko, Chrome, and Safari).</p>

<p>Note that MSIE has <code>clipboardData.getData()</code>, but I could not find similar functionality for other browsers.</p>
","<p><strong>The situation has changed since writing this answer: now that Firefox has added support in version 22, all major browsers now support accessing the clipboard data in a paste event. See <a href=""https://stackoverflow.com/a/6804718/96100"">Nico Burns's answer</a> for an example.</strong></p>

<p>In the past this was not generally possible in a cross-browser way. The ideal would be to be able to get the pasted content via the <code>paste</code> event, <a href=""http://codebits.glennjones.net/editing/getclipboarddata.htm"" rel=""noreferrer"">which is possible in recent browsers</a> but not in some older browsers (in particular, Firefox &lt; 22).</p>

<p>When you need to support older browsers, what you can do is quite involved and a bit of a hack that will work in Firefox 2+, IE 5.5+ and WebKit browsers such as Safari or Chrome. Recent versions of both TinyMCE and CKEditor use this technique:</p>

<ol>
<li>Detect a ctrl-v / shift-ins event using a keypress event handler</li>
<li>In that handler, save the current user selection, add a textarea element off-screen (say at left -1000px) to the document, turn <code>designMode</code> off and call <code>focus()</code> on the textarea, thus moving the caret and effectively redirecting the paste</li>
<li>Set a very brief timer (say 1 millisecond) in the event handler to call another function that stores the textarea value, removes the textarea from the document, turns <code>designMode</code> back on, restores the user selection and pastes the text in.</li>
</ol>

<p>Note that this will only work for keyboard paste events and not pastes from the context or edit menus. By the time the paste event fires, it's too late to redirect the caret into the textarea (in some browsers, at least).</p>

<p>In the unlikely event that you need to support Firefox 2, note that you'll need to place the textarea in the parent document rather than the WYSIWYG editor iframe's document in that browser.</p>
","2177059"
"How to get scrollbar position with Javascript?","259799","","<p>I'm trying to detect the position of the browser's scrollbar with JavaScript to decide where in the page the current view is. My guess is that I have to detect where the thumb on the track is, and then the height of the thumb as a percentage of the total height of the track. Am I over-complicating it, or does JavaScript offer an easier solution than that? Any ideas code-wise?</p>
","<p>You can use <code>element.scrollTop</code> and <code>element.scrollLeft</code> to get the vertical and horizontal offset, respectively, that has been scrolled. <code>element</code> can be <code>document.body</code> if you care about the whole page. You can compare it to <code>element.offsetHeight</code> and <code>element.offsetWidth</code> (again, <code>element</code> may be the body) if you need percentages.</p>
","2481370"
"Incrementing a date in JavaScript","259562","","<p>I need to increment a date value by one day in JavaScript.</p>

<p>For example, I have a date value 2010-09-11 and I need to store the date of the next day in a JavaScript variable.</p>

<p>How can I increment a date by a day?</p>
","<p>Three options for you:</p>

<h3>1. Using just JavaScript's <code>Date</code> object (no libraries):</h3>

<p>My previous answer for #1 was wrong (it added 24 hours, failing to account for transitions to and from daylight saving time; <a href=""https://stackoverflow.com/users/22399/clever-human"">Clever Human</a> pointed out that it would fail with November 7, 2010 in the Eastern timezone). Instead, <a href=""https://stackoverflow.com/questions/3674539/javascript-date-increment-question/3674559#3674559"">Jigar's answer</a> is the correct way to do this without a library:</p>

<pre><code>var tomorrow = new Date();
tomorrow.setDate(tomorrow.getDate() + 1);
</code></pre>

<p>This works even for the last day of a month (or year), because the JavaScript date object is smart about rollover:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var lastDayOf2015 = new Date(2015, 11, 31);
snippet.log(""Last day of 2015: "" + lastDayOf2015.toISOString());
var nextDay = new Date(lastDayOf2015);
var dateValue = nextDay.getDate() + 1;
snippet.log(""Setting the 'date' part to "" + dateValue);
nextDay.setDate(dateValue);
snippet.log(""Resulting date: "" + nextDay.toISOString());</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!-- Script provides the `snippet` object, see http://meta.stackexchange.com/a/242144/134069 --&gt;
&lt;script src=""//tjcrowder.github.io/simple-snippets-console/snippet.js""&gt;&lt;/script&gt;</code></pre>
</div>
</div>
</p>

<p><em>(This answer is currently accepted, so I can't delete it. Before it was accepted I suggested to the OP they accept Jigar's, but perhaps they accepted this one for items #2 or #3 on the list.)</em></p>

<h3>2. Using <a href=""http://momentjs.com/"" rel=""noreferrer"">MomentJS</a>:</h3>

<pre><code>var today = moment();
var tomorrow = moment(today).add(1, 'days');
</code></pre>

<p>(Beware that <code>add</code> modifies the instance you call it on, rather than returning a new instance, so <code>today.add(1, 'days')</code> would modify <code>today</code>. That's why we start with a cloning op on <code>var tomorrow = ...</code>.)</p>

<h3>3. Using <a href=""http://www.datejs.com/"" rel=""noreferrer"">DateJS</a>, but it hasn't been updated in a long time:</h3>

<pre><code>var today = new Date(); // Or Date.today()
var tomorrow = today.add(1).day();
</code></pre>
","3674550"
"Set timeout for ajax (jQuery)","259245","","<pre><code>$.ajax({
    url: ""test.html"",
    error: function(){
        //do something
    },
    success: function(){
        //do something
    }
});
</code></pre>

<p>Sometimes <code>success</code> function works good, sometimes not. </p>

<p>How do I set timeout for this ajax request? In example, 3 seconds, if time is out, then show an error. </p>

<p>The problem is, ajax request freezes the block until finishes. If server is down for a little time, it will never end.</p>
","<p>Please read the <code>$.ajax</code> <a href=""http://api.jquery.com/jQuery.ajax/"" rel=""noreferrer"">documentation</a>, this is a covered topic. </p>

<pre><code>$.ajax({
    url: ""test.html"",
    error: function(){
        // will fire when timeout is reached
    },
    success: function(){
        //do something
    },
    timeout: 3000 // sets timeout to 3 seconds
});
</code></pre>

<p>You can get see what type of error was thrown by accessing the textStatus parameter of the <code>error: function(jqXHR, textStatus, errorThrown)</code> option. The options are ""timeout"", ""error"", ""abort"", and ""parsererror"".</p>
","5225641"
"Open popup and refresh parent page on close popup","258921","","<p>I opened a popup window by window.open in JavaScript, i want to refresh parent page when I close this popup window.(onclose event?) how can I do that?</p>

<pre><code>window.open(""foo.html"",""windowName"", ""width=200,height=200,scrollbars=no"");
</code></pre>
","<p>You can access parent window using '<a href=""https://developer.mozilla.org/en/DOM/window.opener"">window.opener</a>', so, write something like the following in the child window:</p>

<pre><code>&lt;script&gt;
    window.onunload = refreshParent;
    function refreshParent() {
        window.opener.location.reload();
    }
&lt;/script&gt;
</code></pre>
","10792463"
"How to detect the screen resolution with JavaScript?","258831","","<p>Is there a way that works for all browsers?</p>
","<p><em>original answer</em></p>

<p>Yes.</p>

<pre><code>window.screen.availHeight
window.screen.availWidth
</code></pre>

<p><em>update</em> 2017-11-10</p>

<p>From <a href=""https://stackoverflow.com/users/1584876/tsunamis"">Tsunamis</a> in the comments:</p>

<blockquote>
  <p>To get the native resolution of i.e. a mobile device you have to multiply with the device pixel ratio: <code>window.screen.width * window.devicePixelRatio</code> and <code>window.screen.height * window.devicePixelRatio</code>. This will also work on desktops, which will have a ratio of 1. </p>
</blockquote>

<p>And from <a href=""https://stackoverflow.com/users/3513171/ben"">Ben</a> in another answer:</p>

<blockquote>
  <p>In vanilla JavaScript, this will give you the AVAILABLE width/height:</p>

<pre><code>window.screen.availHeight
window.screen.availWidth
</code></pre>
  
  <p>For the absolute width/height, use:</p>

<pre><code>window.screen.height
window.screen.width
</code></pre>
</blockquote>
","2242100"
"Split array into chunks","258666","","<p>Let's say that I have an Javascript array looking as following:  </p>

<pre><code>[""Element 1"",""Element 2"",""Element 3"",...]; // with close to a hundred elements.
</code></pre>

<p>What approach would be appropriate to chunk (split) the array into many smaller arrays with, lets say, 10 elements at its most?</p>
","<p>The <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/slice"" rel=""noreferrer"">array.slice</a> method can extract a slice from the beginning, middle, or end of an array for whatever purposes you require, without changing the original array.</p>

<pre><code>var i,j,temparray,chunk = 10;
for (i=0,j=array.length; i&lt;j; i+=chunk) {
    temparray = array.slice(i,i+chunk);
    // do whatever
}
</code></pre>
","8495740"
"Restricting input to textbox: allowing only numbers and decimal point","258417","","<p>How can I restrict input to a text-box so that it accepts only numbers and the decimal point?</p>
","<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;HTML&gt;
  &lt;HEAD&gt;
    &lt;SCRIPT language=Javascript&gt;
       &lt;!--
       function isNumberKey(evt)
       {
          var charCode = (evt.which) ? evt.which : evt.keyCode;
          if (charCode != 46 &amp;&amp; charCode &gt; 31 
            &amp;&amp; (charCode &lt; 48 || charCode &gt; 57))
             return false;

          return true;
       }
       //--&gt;
    &lt;/SCRIPT&gt;
  &lt;/HEAD&gt;
  &lt;BODY&gt;
    &lt;INPUT id=""txtChar"" onkeypress=""return isNumberKey(event)"" 
           type=""text"" name=""txtChar""&gt;
  &lt;/BODY&gt;
&lt;/HTML&gt;</code></pre>
</div>
</div>
</p>

<p>This really works!</p>
","2824914"
"JavaScript Regular Expression Email Validation","258362","","<p>For the love of God I am not getting this easy code to work! It is always alerting out ""null"" which means that the string does not match the expression. </p>

<pre><code>var pattern = ""^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$""; 

function isEmailAddress(str) {

    str = ""azamsharp@gmail.com"";      

    alert(str.match(pattern)); 
    return str.match(pattern);    

}
</code></pre>
","<p>If you define your regular expression as a string then all backslashes need to be escaped, so instead of '\w' you should have '\\w'.</p>

<p>Alternatively, define it as a regular expression:</p>

<pre><code>var pattern = /^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$/; 
</code></pre>

<hr>

<p>BTW, please don't validate email addresses on the client-side. Your regular expression is way too simple to pass for a solid implementation anyway.</p>

<p>See the real thing here: <strong><a href=""http://www.ex-parrot.com/~pdw/Mail-RFC822-Address.html"" rel=""noreferrer"">http://www.ex-parrot.com/~pdw/Mail-RFC822-Address.html</a></strong></p>
","940609"
"How to call JavaScript function instead of href in HTML","258272","","<p>I have some mockup in HTML</p>

<pre><code>&lt;a href=""javascript:ShowOld(2367,146986,2)""&gt;&lt;img title=""next page"" alt=""next page"" src=""/themes/me/img/arrn.png""&gt;&lt;/a&gt;
</code></pre>

<p>I got the response from server when I sent the request.</p>

<p>With this mockup I got as a response of AJAX request that sends my code to server.</p>

<p>Well, everything is fine but when I click on the link the browser wants to open the function as link; meaning after click I see the address bar as </p>

<pre><code>javascript:ShowOld(2367,146986,2)
</code></pre>

<p>means browser thing that's url if I want to do this in firebug that's work. Now I want to do that then when anyone clicks the link then the browser tries to call the function already loaded in the DOM instead of trying to open them in browser.</p>
","<p>That syntax should work OK, but you can try this alternative.</p>

<pre><code>&lt;a href=""javascript:void(0);"" onclick=""ShowOld(2367,146986,2);""&gt;
</code></pre>

<p>or</p>

<pre><code>&lt;a href=""javascript:ShowOld(2367,146986,2);""&gt;
</code></pre>
","5003904"
"Put a Delay in Javascript","258205","","<p>I need to add a delay of about 100 miliseconds to my Javascript code but I don't want to use the <code>setTimeout</code> function of the <code>window</code> object and I don't want to use a busy loop.  Does anyone have any suggestions?</p>
","<p>Unfortunately, <code>setTimeout()</code> is the only <strong>reliable</strong> way (not the only way, but the only <strong>reliable</strong> way) to pause the execution of the script without blocking the UI.</p>

<p>It's not that hard to use actually, instead of writing this:</p>

<pre><code>var x = 1;

// Place mysterious code that blocks the thread for 100 ms.

x = x * 3 + 2;
var y = x / 2;
</code></pre>

<p>you use <code>setTimeout()</code> to rewrite it this way:</p>

<pre><code>var x = 1;
var y = null; // To keep under proper scope

setTimeout(function() {
    x = x * 3 + 2;
    y = x / 2;
}, 100);
</code></pre>

<p>I understand that using <code>setTimeout()</code> involves more thought than a desirable <code>sleep()</code> function, but unfortunately the later doesn't exist. Many workarounds are there to try to implement such functions. Some using busy loops:</p>

<pre><code>function sleep(milliseconds) {
  var start = new Date().getTime();
  for (var i = 0; i &lt; 1e7; i++) {
    if ((new Date().getTime() - start) &gt; milliseconds){
      break;
    }
  }
}
</code></pre>

<p>others <a href=""http://narayanraman.blogspot.com/2005/12/javascript-sleep-or-wait.html"" rel=""noreferrer"">using an <code>XMLHttpRequest</code> tied with a server script that sleeps for a amount of time before returning a result</a>.</p>

<p>Unfortunately, those are workarounds and are likely to cause other problems (such as freezing browsers). It is recommended to simply stick with the recommended way, which is <code>setTimeout()</code>).</p>
","1183886"
"How do I concatenate a string with a variable?","257939","","<p>So I am trying to make a string out of a string and a passed variable(which is a number).
How do I do that?</p>

<p>I have something like this:</p>

<pre><code>function AddBorder(id){
    document.getElementById('horseThumb_'+id).className='hand positionLeft'
}
</code></pre>

<p>So how do I get that 'horseThumb' and an id into one string?</p>

<p>I tried all the various options, I also googled and besides learning that I can insert a variable in string like this <code>getElementById(""horseThumb_{$id}"")</code> &lt;-- (didn't work for me, I don't know why) I found nothing useful. So any help would be very appreciated.</p>
","<p>Your code is correct. Perhaps your problem is that you are not passing an ID to the <code>AddBorder</code> function, or that an element with that ID does not exist. Or you might be running your function before the element in question is accessible through the browser's DOM.</p>

<p>To identify the first case or determine the cause of the second case, add these as the first lines inside the function:</p>

<pre><code>alert('ID number: ' + id);
alert('Return value of gEBI: ' + document.getElementById('horseThumb_' + id));
</code></pre>

<p>That will open pop-up windows each time the function is called, with the value of <code>id</code> and the return value of <code>document.getElementById</code>. If you get <code>undefined</code> for the ID number pop-up, you are not passing an argument to the function. If the ID does not exist, you would get your (incorrect?) ID number in the first pop-up but get <code>null</code> in the second.</p>

<p>The third case would happen if your web page looks like this, trying to run <code>AddBorder</code> while the page is still loading:</p>

<pre><code>&lt;head&gt;
&lt;title&gt;My Web Page&lt;/title&gt;
&lt;script&gt;
    function AddBorder(id) {
        ...
    }
    AddBorder(42);    // Won't work; the page hasn't completely loaded yet!
&lt;/script&gt;
&lt;/head&gt;
</code></pre>

<p>To fix this, put all the code that uses AddBorder inside an <code>onload</code> event handler:</p>

<pre><code>// Can only have one of these per page
window.onload = function() {
    ...
    AddBorder(42);
    ...
} 

// Or can have any number of these on a page
function doWhatever() {
   ...
   AddBorder(42);
   ...
}

if(window.addEventListener) window.addEventListener('load', doWhatever, false);
else window.attachEvent('onload', doWhatever);
</code></pre>
","4234857"
"Getting a random value from a JavaScript array","257013","","<p>Consider:</p>

<pre><code>var myArray = ['January', 'February', 'March'];    
</code></pre>

<p>How can I select a random value from this array using JavaScript?</p>
","<pre><code>var rand = myArray[Math.floor(Math.random() * myArray.length)];
</code></pre>
","4550514"
"JavaScript get number from string","256805","","<p>I have a string in javascript like `#box2' and I just want the '2' from it.</p>

<p>Tried:</p>

<pre><code>var thestring = $(this).attr('href');
var thenum = thestring.replace( /(^.+)(\w\d+\w)(.+$)/i,'$2');
alert(thenum);
</code></pre>

<p>It still returns #box2 in the alert, how can I get it to work? </p>

<p>It needs to accommodate for any length number attached on the end.</p>
","<p>For this specific example,</p>

<pre><code> var thenum = thestring.replace( /^\D+/g, ''); // replace all leading non-digits with nothing
</code></pre>

<p>in the general case:</p>

<pre><code> thenum = ""foo3bar5"".match(/\d+/)[0] // ""3""
</code></pre>

<p>Since this answer gained popularity for some reason, here's a bonus: regex generator.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function getre(str, num) {
  if(str === num) return 'nice try';
  var res = [/^\D+/g,/\D+$/g,/^\D+|\D+$/g,/\D+/g,/\D.*/g, /.*\D/g,/^\D+|\D.*$/g,/.*\D(?=\d)|\D+$/g];
  for(var i = 0; i &lt; res.length; i++)
    if(str.replace(res[i], '') === num) 
      return 'num = str.replace(/' + res[i].source + '/g, """")';
  return 'no idea';
};
function update() {
  $ = function(x) { return document.getElementById(x) };
  var re = getre($('str').value, $('num').value);
  $('re').innerHTML = 'Numex speaks: &lt;code&gt;' + re + '&lt;/code&gt;';
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;p&gt;Hi, I'm Numex, the Number Extractor Oracle.
&lt;p&gt;What is your string? &lt;input id=""str"" value=""42abc""&gt;&lt;/p&gt;
&lt;p&gt;What number do you want to extract? &lt;input id=""num"" value=""42""&gt;&lt;/p&gt;
&lt;p&gt;&lt;button onclick=""update()""&gt;Insert Coin&lt;/button&gt;&lt;/p&gt;
&lt;p id=""re""&gt;&lt;/p&gt;</code></pre>
</div>
</div>
</p>
","10003709"
"What is the purpose of the var keyword and when to use it (or omit it)?","256302","","<blockquote>
  <p><strong><em>NOTE</strong>: This question was asked from the viewpoint of ECMAScript version 3 or 5. The answers might become outdated with the introduction of new features in the release of ECMAScript 6.</em></p>
</blockquote>

<p>What exactly is the function of the <code>var</code> keyword in Javascript, and what is the difference between:</p>

<pre><code>var someNumber = 2;
var someFunction = function() { doSomething; }
var someObject = { }
var someObject.someProperty = 5;
</code></pre>

<p>and:</p>

<pre><code>someNumber = 2;
someFunction = function() { doSomething; }
someObject = { }
someObject.someProperty = 5;
</code></pre>

<p>When would you use either one, and why/what does it do?</p>
","<p>If you're in the global scope then there's no difference.</p>

<p>If you're in a function then <strong><code>var</code></strong> will create a local variable, ""no var"" will look up the scope chain until it finds the variable or hits the global scope (at which point it will create it):</p>

<pre><code>// These are both globals
var foo = 1;
bar = 2;

function()
{
    var foo = 1; // Local
    bar = 2;     // Global

    // Execute an anonymous function
    (function()
    {
        var wibble = 1; // Local
        foo = 2; // Inherits from scope above (creating a closure)
        moo = 3; // Global
    }())
}
</code></pre>

<p>If you're not doing an assignment then you need to use <code>var</code>:</p>

<pre><code>var x; // Declare x
</code></pre>
","1470494"
"Get array of object's keys","256258","","<p>I would like to get the keys of a JavaScript object as an array, either in jQuery or pure JavaScript.</p>

<p>Is there a less verbose way than this?</p>

<pre><code>var foo = { 'alpha' : 'puffin', 'beta' : 'beagle' };
var keys = [];
for (var key in foo) {
    keys.push(key);
}
</code></pre>
","<pre><code>var foo = { 'alpha' : 'puffin', 'beta' : 'beagle' };
var keys = Object.keys(foo); // ['alpha', 'beta'] 
// (or maybe some other order, keys are unordered).
</code></pre>

<p>Use <a href=""http://es5.github.com/#x15.2.3.14""><code>Object.keys</code></a>.</p>

<p>This is an ES5 feature. This means it works in all modern browsers but <a href=""http://kangax.github.io/compat-table/es5/#test-Object.keys"">will not work in legacy browsers</a>. </p>

<p>The ES5-shim has a <a href=""https://github.com/kriskowal/es5-shim/blob/v2.0.5/es5-shim.js#L544"">implementation of <code>Object.keys</code> you can steal</a></p>
","8763227"
"how to create a login page when username and password is equal in html","256233","","<p>How do I create a login page that goes to the next screen if the password is correct?</p>

<pre class=""lang-html prettyprint-override""><code>&lt;html&gt;
&lt;p&gt; Enter Username and Password &lt;/p&gt;
&lt;FORM action=""file:///android_asset/www/Browse.html"" method=""post""&gt;
    &lt;P&gt;
    &lt;LABEL for=""firstname""&gt;Username &lt;/LABEL&gt;
              &lt;INPUT type=""text"" id=""Username""&gt;&lt;BR&gt;
    &lt;LABEL for=""lastname""&gt;Password &lt;/LABEL&gt;
              &lt;INPUT type=""text"" id=""Password""&gt;&lt;BR&gt;
        &lt;INPUT type=""submit"" value=""Send""&gt; &lt;INPUT type=""reset""&gt;
    &lt;/P&gt;
 &lt;/FORM&gt;
&lt;/html&gt;
</code></pre>
","<pre><code>&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Login page&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h1&gt;Simple Login Page&lt;/h1&gt;
        &lt;form name=""login""&gt;
            Username&lt;input type=""text"" name=""userid""/&gt;
            Password&lt;input type=""password"" name=""pswrd""/&gt;
            &lt;input type=""button"" onclick=""check(this.form)"" value=""Login""/&gt;
            &lt;input type=""reset"" value=""Cancel""/&gt;
        &lt;/form&gt;
        &lt;script language=""javascript""&gt;
            function check(form) { /*function to check userid &amp; password*/
                /*the following code checkes whether the entered userid and password are matching*/
                if(form.userid.value == ""myuserid"" &amp;&amp; form.pswrd.value == ""mypswrd"") {
                    window.open('target.html')/*opens the target page while Id &amp; password matches*/
                }
                else {
                    alert(""Error Password or Username"")/*displays error message*/
                }
            }
        &lt;/script&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>
","11930310"
"Send POST data on redirect with JavaScript/jQuery?","256094","","<p>Basically what I want to do is send <code>POST</code> data when I change the <code>window.location</code>, as if a user has submitted a form and it went to a new page. I need to do it this way because I need to pass along a hidden URL, and I can’t simply place it in the URL as a <code>GET</code> for cosmetic reasons.</p>

<p>This is what I have at the moment, but it doesn’t send any POST data.</p>

<pre><code>if(user has not voted) {

    window.location = 'http://example.com/vote/' + Username;

}
</code></pre>

<p>I know that you can send <code>POST</code> data with <code>jQuery.post()</code>, but I need it to be sent with the new <code>window.location</code>. </p>

<p>So to recap, I need to send <code>api_url</code> value via <code>POST</code> to <code>http://example.com/vote/</code>, while sending the user to the same page at the same time.</p>

<hr>

<p><strong>For future reference, I ended up doing the following</strong>:</p>

<pre><code>if(user has not voted) {

    $('#inset_form').html('&lt;form action=""http://example.com/vote/' + Username + '"" name=""vote"" method=""post"" style=""display:none;""&gt;&lt;input type=""text"" name=""api_url"" value=""' + Return_URL + '"" /&gt;&lt;/form&gt;');

    document.forms['vote'].submit();

}
</code></pre>
","<p>Construct and fill out a hidden <code>method=POST action=""http://example.com/vote""</code> form and submit it, rather than using <code>window.location</code> at all.</p>
","8390201"
"Uncaught TypeError: undefined is not a function while using jQuery UI","255823","","<p>I haven't used jQuery before, and I wanted to use <code>DateTimePicker</code> plugin on my web page.</p>

<p>I downloaded the plugin file and placed them in the same directory as the HTML files.</p>

<p>I directly applied the code at <code>How to use it?</code> in <a href=""http://xdsoft.net/jqplugins/datetimepicker/"">http://xdsoft.net/jqplugins/datetimepicker/</a>.</p>

<p>It threw the following error.</p>

<blockquote>
  <p>Uncaught TypeError: undefined is not a function pixelcrawler:61 (anonymous function)</p>
</blockquote>

<p>My code follows.</p>

<pre><code>&lt;script type='text/javascript' src=""//ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js""&gt;&lt;/script&gt;
&lt;link rel=""stylesheet"" type=""text/css"" href=""file:///jquery.datetimepicker.css""/ &gt;
&lt;script src=""file:///jquery.datetimepicker.js""&gt;&lt;/script&gt;
&lt;script&gt;
    jQuery('#datetimepicker').datetimepicker();
&lt;/script&gt;

&lt;div class=""container""&gt;
  &lt;div class=""text-center""&gt;
    &lt;div class=""page-header""&gt;
      &lt;h1&gt;${conf['title']} &lt;small&gt;${conf['description']}&lt;/small&gt;&lt;/h1&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=""text""&gt;
      &lt;input id=""datetimepicker"" type=""text"" &gt;
                                        .
                                        .
                                        .
                                        .
                                        .
</code></pre>

<p>I could not figure out what the problem was. I have tried many other seemingly likely options, but it just did not work either.</p>

<p>(The ${} tags are used for the <code>Mako</code> template language. I am using <code>Cherrypy</code>.)</p>

<hr>

<p>UPDATE:</p>

<p>I figured out the source of the problem.</p>

<p>It's from <code>jQuery('#datetimepicker').datetimepicker();</code>.</p>

<p>When tested, the <code>datetimepicker()</code> function was undefined. Maybe the way I imported the library was wrong?</p>
","<pre><code>jQuery(document).ready(function(){
    jQuery('#datetimepicker').datepicker();
})
</code></pre>

<p>I don't know your file-structure. I never include local files like this as I use relative URLs from the start rather than having to change everytime I'm ready to use the code, but it's likely one of the files isn't being loaded in. I've included the standard datepicker below using Google <a href=""http://en.wikipedia.org/wiki/Content_delivery_network"" rel=""noreferrer"">CDN</a>'s <a href=""http://en.wikipedia.org/wiki/JQuery_UI"" rel=""noreferrer"">jQuery UI</a>. Does your console log any resources not found?</p>

<p>I think your jQuery is loaded OK, because it's not telling you jQuery is not defined so it's one of your files.</p>

<p>BTW, PHP gets the home URL:</p>

<pre><code>$home=""http://"" . $_SERVER['HTTP_HOST'].'/';
</code></pre>

<p>Demo code datepicker, jQuery UI:</p>

<pre><code>&lt;script src=""//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js""&gt;&lt;/script&gt;
&lt;link rel=""stylesheet"" href=""//ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/themes/smoothness/jquery-ui.css"" /&gt;
&lt;script src=""//ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/jquery-ui.min.js""&gt;&lt;/script&gt;

&lt;script type=""text/javascript""&gt;
    jQuery(document).ready(function(){
        jQuery('#datetimepicker').datepicker();
    })
&lt;/script&gt;

&lt;input id=""datetimepicker"" type=""text""&gt;
</code></pre>
","23233117"
"Is it possible to animate scrollTop with jQuery?","255751","","<p>I want to smoothly scroll down. I do not want to have to write a function for that - especially if jQuery already has one.</p>
","<p>You can just use <a href=""http://api.jquery.com/animate/"" rel=""noreferrer""><code>.animate()</code></a> the <code>scrollTop</code> property, like this:</p>

<pre><code>$(""html, body"").animate({ scrollTop: ""300px"" });
</code></pre>
","4034674"
"Sort array by firstname (alphabetically) in Javascript","255678","","<p>I got an array (see below for one object in the array) that I need to sort by firstname using JavaScript.
How can I do it?</p>

<pre><code>var user = {
   bio: null,
   email:  ""user@domain.com"",
   firstname: ""Anna"",
   id: 318,
   lastAvatar: null,
   lastMessage: null,
   lastname: ""Nickson"",
   nickname: ""anny""
};
</code></pre>
","<p>Suppose you have an array <code>users</code>. You may use <code>users.sort</code> and pass a function that takes two arguments and compare them (comparator)</p>

<p>It should return </p>

<ul>
<li>something negative if first argument is less than second (should be placed before the second in resulting array)</li>
<li>something positive if first argument is greater (should be placed after second one) </li>
<li>0 if those two elements are equal.</li>
</ul>

<p>In our case if two elements are <code>a</code> and <code>b</code> we want to compare <code>a.firstname</code> and <code>b.firstname</code></p>

<p>Example:</p>

<pre><code>users.sort(function(a, b){
    if(a.firstname &lt; b.firstname) return -1;
    if(a.firstname &gt; b.firstname) return 1;
    return 0;
})
</code></pre>

<p>This code is going to work with any type.</p>

<p>Note that in ""real life""™ you often want to ignore case, correctly sort diacritics, weird symbols like ß, etc when you compare strings, so you may want to use <code>localeCompare</code>. See other answers for clarity.</p>
","6712080"
"Regex to replace multiple spaces with a single space","255559","","<p>Given a string like: </p>

<pre>""The dog      has a long   tail, and it     is RED!""</pre>

<p>What kind of jQuery or JavaScript magic can be used to keep spaces to only one space max?</p>

<p>Goal: </p>

<pre>""The dog has a long tail, and it is RED!""</pre>
","<p>Given that you also want to cover tabs, newlines, etc, just replace <code>\s\s+</code> with <code>' '</code>: </p>

<pre><code>string = string.replace(/\s\s+/g, ' ');
</code></pre>

<p>If you really want to cover only spaces (and thus not tabs, newlines, etc), do so:</p>

<pre><code>string = string.replace(/  +/g, ' ');
</code></pre>
","1981366"
"Why avoid increment (""++"") and decrement (""--"") operators in JavaScript?","255545","","<p>One of the <a href=""http://www.jslint.com/lint.html"" rel=""noreferrer"">tips for jslint tool</a> is:</p>

<blockquote>
  <p><strong>++ and --</strong><br>
  The ++ (increment) and -- (decrement) 
  operators have been known to contribute to bad code by
  encouraging excessive trickiness. They
  are second only to faulty architecture
  in enabling to viruses and other
  security menaces. There is a plusplus
  option that prohibits the use of these
  operators.</p>
</blockquote>

<p>I know that PHP constructs like <code>$foo[$bar++]</code> has may easily result with off-by-one errors, but I couldn't figure out a better way to control the loop than a <code>while( a &lt; 10 ) do { /* foo */ a++; }</code> or <code>for (var i=0; i&lt;10; i++) { /* foo */ }</code>.</p>

<p>Is the jslint highlighting them because there are some similar languages that lack the ""<code>++</code>"" and ""<code>--</code>"" syntax or handle it differently, or are there other rationales for avoiding ""<code>++</code>"" and ""<code>--</code>"" that I might be missing?</p>
","<p>My view is to always use ++ and -- by themselves on a single line, as in:</p>

<pre><code>i++;
array[i] = foo;
</code></pre>

<p>instead of </p>

<pre><code>array[++i] = foo;
</code></pre>

<p>Anything beyond that can be confusing to some programmers and is just not worth it in my view.  For loops are an exception, as the use of the increment operator is idiomatic and thus always clear.</p>
","971442"
"How can I open a link in a new window?","255541","","<p>I have a click handler for a specific link, inside that I want to do something similar to the following:</p>

<pre><code>window.location = url
</code></pre>

<p>I need this to actually open the url in a new window though, how do I do this?</p>
","<p>You can like:</p>

<pre><code>window.open('url', 'window name', 'window settings')
</code></pre>

<p><strong>jQuery:</strong></p>

<pre><code>$('a#link_id').click(function(){
  window.open('url', 'window name', 'window settings');
  return false;
});
</code></pre>

<p>You could also set the <code>target</code> to <code>_blank</code> actually.</p>
","2827648"
"How to find the array index with a value?","255362","","<p>Say I've got this</p>

<pre class=""lang-js prettyprint-override""><code>imageList = [100,200,300,400,500];
</code></pre>

<p>Which gives me</p>

<p><code>[0]100 [1]200</code> etc.</p>

<p>Is there any way in JavaScript to return the index with the value?</p>

<p>I.e. I want the index for <strong>200</strong>, I get returned <strong>1</strong>.</p>
","<p>you can use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf"" rel=""noreferrer""><code>indexOf</code></a>:</p>

<pre><code>var imageList = [100,200,300,400,500];
var index = imageList.indexOf(200); // 1
</code></pre>

<p>you will get -1 if it cant find a value in the array.</p>
","7346853"
"How to focus on a form input text field on page load using jQuery?","255252","","<p>This is probably very simple, but could somebody tell me how to get the cursor blinking on a text box on page load?</p>
","<p>Set focus on the first text field:</p>

<pre><code> $(""input:text:visible:first"").focus();
</code></pre>

<p>This also does the first text field, but you can change the [0] to another index:</p>

<pre><code>$('input[@type=""text""]')[0].focus(); 
</code></pre>

<p>Or, you can use the ID:</p>

<pre><code>$(""#someTextBox"").focus();
</code></pre>
","1591921"
"How to get element by class name?","254794","","<p>Using JavaScript, we can get element by id using following syntax:</p>

<pre><code>var x=document.getElementById(""by_id"");
</code></pre>

<p>I tried following to get element by class:</p>

<pre><code>var y=document.getElementByClass(""by_class"");
</code></pre>

<p>But it resulted into error: </p>

<pre><code>getElementByClass is not function
</code></pre>

<p>How can I get an element by its class?</p>
","<p>The name of the DOM function is actually <code>getElementsByClassName</code>, not <code>getElementByClassName</code>, simply because more than one element on the page can have the same class, hence: <code>Elements</code>.</p>

<p>The return value of this will be a NodeList instance, or a superset of the <code>NodeList</code> (FF, for instance returns an instance of <code>HTMLCollection</code>). At any rate: the return value is an array-like object:</p>

<pre><code>var y = document.getElementsByClassName('foo');
var aNode = y[0];
</code></pre>

<p>If, for some reason you <em>need</em> the return object as an array, you can do that easily, because of its magic length property:</p>

<pre><code>var arrFromList = Array.prototype.slice.call(y);
//or as per AntonB's comment:
var arrFromList = [].slice.call(y);
</code></pre>

<p>As yckart suggested <code>querySelector('.foo')</code> and <code>querySelectorAll('.foo')</code> would be preferable, though, as they are, indeed, better supported (93.99% vs 87.24%), according to caniuse.com:</p>

<ul>
<li><a href=""http://caniuse.com/queryselector"" rel=""noreferrer"">querySelector(all)</a></li>
<li><a href=""http://caniuse.com/getelementsbyclassname"" rel=""noreferrer"">getElementsByClassName</a></li>
<li><a href=""http://www.w3fools.com"" rel=""noreferrer"">Don't use w3schools to learn something</a></li>
<li><a href=""https://developer.mozilla.org/en-US/"" rel=""noreferrer"">Refer to MDN for accurate information</a></li>
</ul>
","17965968"
"Jquery selector input[type=text]')","254305","","<p>I wrote a code that basically selects all <code>input type=text</code> element like this:</p>

<pre><code>$('.sys input[type=text]').each(function () {}
</code></pre>

<p>How do I change it to select <code>input[type=text]</code> or <code>select</code>?</p>
","<p>Using a normal css selector:</p>

<pre><code>$('.sys input[type=text], .sys select').each(function() {...})
</code></pre>

<p>If you don't like the repetition:</p>

<pre><code>$('.sys').find('input[type=text],select').each(function() {...})
</code></pre>

<p>Or more concisely, pass in the <code>context</code> argument:</p>

<pre><code>$('input[type=text],select', '.sys').each(function() {...})
</code></pre>

<p>Note: Internally <code>jQuery</code> will convert the above to <code>find()</code> equivalent</p>

<p><a href=""http://api.jquery.com/jQuery/"" rel=""noreferrer"">http://api.jquery.com/jQuery/</a></p>

<blockquote>
  <p>Internally, selector context is implemented with the .find() method,
  so $('span', this) is equivalent to $(this).find('span').</p>
</blockquote>

<p>I personally find the first alternative to be the most readable :), your take though</p>
","10649883"
"Javascript Equivalent to PHP Explode()","253666","","<p>I have a string that looks like this:</p>

<blockquote>
  <p>0000000020C90037:TEMP:data</p>
</blockquote>

<p>And I need to grab everything after the first colon, so that I have TEMP:data.</p>

<p>I don't often work in Javascript, if it were PHP I would do this:</p>

<pre><code>$str = '0000000020C90037:TEMP:data';
$arr = explode("":"", $str);
$var = $arr[1]."":"".$arr[2];
</code></pre>
","<pre><code>//Loading the variable
var mystr = '0000000020C90037:TEMP:data';

//Splitting it with : as the separator
var myarr = mystr.split("":"");

//Then read the values from the array where 0 is the first
var myvar = myarr[0] + "":"" + myarr[1];
</code></pre>
","4514357"
"JavaScript closure inside loops – simple practical example","253441","","<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var funcs = [];
for (var i = 0; i &lt; 3; i++) {      // let's create 3 functions
  funcs[i] = function() {          // and store them in funcs
    console.log(""My value: "" + i); // each should log its value.
  };
}
for (var j = 0; j &lt; 3; j++) {
  funcs[j]();                      // and now let's run each one to see
}</code></pre>
</div>
</div>
</p>

<p>It outputs this:</p>

<blockquote>
  <p>My value: 3<br>
  My value: 3<br>
  My value: 3</p>
</blockquote>

<p>Whereas I'd like it to output:</p>

<blockquote>
  <p>My value: 0<br>
  My value: 1<br>
  My value: 2</p>
</blockquote>

<hr>

<p>The same problem occurs when the delay in running the function is caused by using event listeners:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var buttons = document.getElementsByTagName(""button"");
for (var i = 0; i &lt; buttons.length; i++) {          // let's create 3 functions
  buttons[i].addEventListener(""click"", function() { // as event listeners
    console.log(""My value: "" + i);                  // each should log its value.
  });
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;button&gt;0&lt;/button&gt;&lt;br&gt;
&lt;button&gt;1&lt;/button&gt;&lt;br&gt;
&lt;button&gt;2&lt;/button&gt;</code></pre>
</div>
</div>
</p>

<p>What's the solution to this basic problem?</p>
","<p>Well, the problem is that the variable <code>i</code>, within each of your anonymous functions, is bound to the same variable outside of the function.</p>

<p>What you want to do is bind the variable within each function to a separate, unchanging value outside of the function:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var funcs = [];

function createfunc(i) {
    return function() { console.log(""My value: "" + i); };
}

for (var i = 0; i &lt; 3; i++) {
    funcs[i] = createfunc(i);
}

for (var j = 0; j &lt; 3; j++) {
    funcs[j]();                        // and now let's run each one to see
}</code></pre>
</div>
</div>
</p>

<p>Since there is no block scope in JavaScript - only function scope - by wrapping the function creation in a new function, you ensure that the value of ""i"" remains as you intended.</p>

<hr>

<p><strong>Update:</strong> with the relatively widespread availability of the <code>Array.prototype.forEach</code> function (in 2015), it's worth noting that in those situations involving iteration primarily over an array of values, <code>.forEach()</code> provides a clean, natural way to get a distinct closure for every iteration. That is, assuming you've got some sort of array containing values (DOM references, objects, whatever), and the problem arises of setting up callbacks specific to each element, you can do this:</p>

<pre><code>var someArray = [ /* whatever */ ];
// ...
someArray.forEach(function(arrayElement) {
  // ... code code code for this one element
  someAsynchronousFunction(arrayElement, function() {
    arrayElement.doSomething();
  });
});
</code></pre>

<p>The idea is that each invocation of the callback function used with the <code>.forEach</code> loop will be its own closure. The parameter passed in to that handler is the array element specific to that particular step of the iteration. If it's used in an asynchronous callback, it won't collide with any of the other callbacks established at other steps of the iteration.</p>

<p>If you happen to be working in jQuery, the <code>$.each()</code> function gives you a similar capability.</p>

<p><strong>Update 2:</strong>
ECMAScript 6 (ES6), the newest version of JavaScript, is now starting to be implemented in many evergreen browsers and backend systems. There are also transpilers like <a href=""http://babeljs.io/"" rel=""noreferrer"">Babel</a> that will convert ES6 to ES5 to allow usage of new features on older systems.</p>

<p>ES6 introduces new <code>let</code> and <code>const</code> keywords that are scoped differently than <code>var</code>-based variables. For example, in a loop with a <code>let</code>-based index, each iteration through the loop will have a new value of <code>i</code> where each value is scoped inside the loop, so your code would work as you expect. There are many resources, but I'd recommend <a href=""http://www.2ality.com/2015/02/es6-scoping.html"" rel=""noreferrer"">2ality's block-scoping post</a> as a great source of information.</p>

<pre><code>for (let i = 0; i &lt; 3; i++) {
    funcs[i] = function() {
        console.log(""My value: "" + i);
    };
}
</code></pre>

<p>Beware, though, that IE9-IE11 and Edge prior to Edge 14 support <code>let</code> but get the above wrong (they don't create a new <code>i</code> each time, so all the functions above would log 3 like they would if we used <code>var</code>). Edge 14 finally gets it right.</p>
","750506"
"How to calculate the number of days between two dates?","253005","","<ol>
<li><p>I am calculating the number of days between the 'from' and 'to' date. For example, if the from date is 13/04/2010 and the to date is 15/04/2010 the result should be </p></li>
<li><p>How do I get the result using JavaScript? </p></li>
</ol>
","<p>Googling ""number of days between two dates javascript"" produces <a href=""http://www.vijayjoshi.org/2008/10/24/faq-calculate-number-of-days-between-two-dates-in-javascript/"" rel=""noreferrer"">this great snippet</a> (actually all the top results are relevant to your question):</p>

<pre><code>var oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds
var firstDate = new Date(2008,01,12);
var secondDate = new Date(2008,01,22);

var diffDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime())/(oneDay)));
</code></pre>
","2627493"
"Cross-browser window resize event - JavaScript / jQuery","252884","","<p>What is the correct (modern) method for tapping into the window resize event that works in Firefox, <a href=""http://en.wikipedia.org/wiki/WebKit"" rel=""noreferrer"">WebKit</a>, and Internet Explorer?</p>

<p>And can you turn both scrollbars on/off?</p>
","<p>jQuery has a <a href=""http://api.jquery.com/resize/"" rel=""noreferrer"">built-in method</a> for this:</p>

<pre><code>$(window).resize(function () { /* do something */ });
</code></pre>

<p>For the sake of UI responsiveness, you might consider using a setTimeout to call your code only after some number of milliseconds, as shown in the following example, inspired by <a href=""http://snipplr.com/view/6284/jquery--window-on-resize-event/"" rel=""noreferrer"">this</a>:</p>

<pre><code>function doSomething() {
    alert(""I'm done resizing for the moment"");
};

var resizeTimer;
$(window).resize(function() {
    clearTimeout(resizeTimer);
    resizeTimer = setTimeout(doSomething, 100);
});
</code></pre>
","2969091"
"AngularJS : How do I switch views from a controller function?","252835","","<p>I am trying to use the <em>ng-click</em> feature of AngularJS to switch views. How would I go about doing this with the code below?</p>

<p>index.html</p>

<pre><code> &lt;div ng-controller=""Cntrl""&gt;
        &lt;div ng-click=""someFunction()""&gt;
            click me
        &lt;div&gt;
    &lt;div&gt;
</code></pre>

<p>controller.js</p>

<pre><code>  function Cntrl ($scope) {
        $scope.someFunction = function(){
            //code to change view?
        }
    }
</code></pre>
","<p>In order to switch between different views, you could directly change the window.location (using the $location service!) in
index.html file</p>

<pre><code>&lt;div ng-controller=""Cntrl""&gt;
        &lt;div ng-click=""changeView('edit')""&gt;
            edit
        &lt;/div&gt;
        &lt;div ng-click=""changeView('preview')""&gt;
            preview
        &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p>Controller.js</p>

<pre><code>function Cntrl ($scope,$location) {
        $scope.changeView = function(view){
            $location.path(view); // path not hash
        }
    }
</code></pre>

<p>and configure the router to switch to different partials based on the location ( as shown here <a href=""https://github.com/angular/angular-seed/blob/master/app/app.js"">https://github.com/angular/angular-seed/blob/master/app/app.js</a> ). This would have the benefit of history as well as using ng-view. </p>

<p>Alternatively, you use ng-include with different partials and then use a ng-switch as shown in here ( <a href=""https://github.com/ganarajpr/Angular-UI-Components/blob/master/index.html"">https://github.com/ganarajpr/Angular-UI-Components/blob/master/index.html</a> )</p>
","11005495"
"Cross origin requests are only supported for HTTP but it's not cross-domain","252748","","<p>I'm using this code to make an AJAX request:</p>

<pre><code>$(""#userBarSignup"").click(function(){
    $.get(""C:/xampp/htdocs/webname/resources/templates/signup.php"",
        {/*params*/},
        function(response){
            $(""#signup"").html(""TEST"");
            $(""#signup"").html(response);
        },
        ""html"");
</code></pre>

<p>But from the Google Chrome JavaScript console I keep receiving this error:</p>

<blockquote>
  <p>XMLHttpRequest cannot load
  file:///C:/xampp/htdocs/webname/resources/templates/signup.php. Cross
  origin requests are only supported for HTTP.</p>
</blockquote>

<p>The problem is that the <em>signup.php</em> file is hosted on my local web server that's where all the website is run from so it's not cross-domain.</p>

<p>How can I solve this problem?</p>
","<p>You need to actually run a webserver, and make the get request to a URI on that server, rather than making the get request to a file; e.g. change the line:</p>

<pre><code>    $.get(""C:/xampp/htdocs/webname/resources/templates/signup.php"",
</code></pre>

<p>to read something like:</p>

<pre><code>    $.get(""http://localhost/resources/templates/signup.php"",
</code></pre>

<p>and the initial request page needs to be made over http as well.</p>
","8449770"
"Create a file in memory for user to download, not through server","252181","","<p>Is there any way I can create a text file on the client side and prompt the user to download it, without any interaction with the server?
I know I can't write directly to their machine (security and all), but can I create and prompt them to save it?</p>
","<p>You can use data URIs.  Browser support varies; see <a href=""http://en.wikipedia.org/wiki/Data_URI_scheme#Web_browser_support"" rel=""noreferrer"">Wikipedia</a>.  Example:</p>

<pre><code>&lt;a href=""data:application/octet-stream;charset=utf-16le;base64,//5mAG8AbwAgAGIAYQByAAoA""&gt;text file&lt;/a&gt;
</code></pre>

<p>The octet-stream is to force a download prompt.  Otherwise, it will probably open in the browser.</p>

<p>For CSV, you can use:</p>

<pre><code>&lt;a href=""data:application/octet-stream,field1%2Cfield2%0Afoo%2Cbar%0Agoo%2Cgai%0A""&gt;CSV Octet&lt;/a&gt;
</code></pre>

<p>Try the <a href=""http://jsfiddle.net/VBJ9h/319/"" rel=""noreferrer"">jsFiddle demo</a>.</p>
","3665147"
"Declaring a boolean in JavaScript using just var","252093","","<p>If I declare a JavaScript boolean variable like this:</p>

<pre><code>var IsLoggedIn;
</code></pre>

<p>And then initialize it with either <code>true</code> or <code>1</code>, is that safe?  Or will initializing it with <code>1</code> make the variable a number?</p>
","<p>Types are dependent to your initialization:</p>

<pre><code>var IsLoggedIn1 = ""true""; //string
var IsLoggedIn2 = 1; //integer
var IsLoggedIn3 = true; //bool
</code></pre>

<p>But take a look at this example: </p>

<pre><code>var IsLoggedIn1 = ""true""; //string
IsLoggedIn1 = true; //now your variable is a boolean
</code></pre>

<p>Your variables' type depends on the assigned value in JavaScript.</p>
","653934"
"How to prevent form from being submitted?","252010","","<p>I have a form that has a submit button in it somewhere.</p>

<p>However, I would like to somehow 'catch' the submit event and prevent it from occurring.</p>

<p>Is there some way I can do this?</p>

<p>I can't modify the submit button, because it's part of a custom control.</p>
","<p>Unlike the other answers, return <code>false</code> is only <em>part</em> of the answer. Consider the scenario in which a JS error occurs prior to the return statement...</p>

<p><strong>html</strong></p>

<pre><code>&lt;form onsubmit=""return mySubmitFunction()""&gt;
  ...
&lt;/form&gt;
</code></pre>

<p><strong>script</strong></p>

<pre><code>function mySubmitFunction()
{
  someBug()
  return false;
}
</code></pre>

<p>returning <code>false</code> here won't be executed and the form will be submitted either way. You should also call <code>preventDefault</code> to prevent the default form action for Ajax form submissions.</p>

<pre><code>function mySubmitFunction(evt) {
  evt.preventDefault();
  someBug();
  return false;
}
</code></pre>

<p>In this case, even with the bug the form won't submit!</p>

<p>Alternatively, a <code>try...catch</code> block could be used.</p>

<pre><code>function mySubmit(evt) { 
  evt.preventDefault(); 
  try {
   someBug();
  } catch (e) {
   throw new Error(e.message);
  }
  return false;
}
</code></pre>
","3350351"
"How may I sort a list alphabetically using jQuery?","251779","","<p>I'm a bit out of my depth here and I'm hoping this is actually possible.</p>

<p>I'd like to be able to call a function that would sort all the items in my list alphabetically.</p>

<p>I've been looking through the jQuery UI for sorting but that doesn't seem to be it. Any thoughts?</p>
","<p>You do <em>not</em> need jQuery to do this...</p>

<pre><code>function sortUnorderedList(ul, sortDescending) {
  if(typeof ul == ""string"")
    ul = document.getElementById(ul);

  // Idiot-proof, remove if you want
  if(!ul) {
    alert(""The UL object is null!"");
    return;
  }

  // Get the list items and setup an array for sorting
  var lis = ul.getElementsByTagName(""LI"");
  var vals = [];

  // Populate the array
  for(var i = 0, l = lis.length; i &lt; l; i++)
    vals.push(lis[i].innerHTML);

  // Sort it
  vals.sort();

  // Sometimes you gotta DESC
  if(sortDescending)
    vals.reverse();

  // Change the list on the page
  for(var i = 0, l = lis.length; i &lt; l; i++)
    lis[i].innerHTML = vals[i];
}
</code></pre>

<p>Easy to use...</p>

<pre><code>sortUnorderedList(""ID_OF_LIST"");
</code></pre>

<p><strong><a href=""http://jsfiddle.net/stodolaj/De8Ku/"" rel=""noreferrer"">Live Demo &rarr;</a></strong></p>
","1135099"
"jQuery Popup Bubble/Tooltip","251714","","<p>I'm trying to make a ""bubble"" that can popup when the <code>onmouseover</code> event is fired and will stay open as long as the mouse is over the item that threw the <code>onmouseover</code> event OR if the mouse is moved into the bubble. My bubble will need to have all manners of HTML and styling including hyperlinks, images, etc.</p>

<p>I've basically accomplished this by writing about 200 lines of ugly JavaScript but I would really like to find a jQuery plugin or some other way to clean this up a bit. </p>
","<p><a href=""http://craigsworks.com/projects/qtip2/"" rel=""noreferrer"">Qtip is the best one I've seen.</a> It's MIT licensed, beautiful, has all the configuration you need. </p>

<p>My favorite lightweight option is <a href=""https://github.com/jaz303/tipsy"" rel=""noreferrer"">tipsy</a>. Also MIT licensed. It inspired <a href=""http://getbootstrap.com/javascript/#tooltips"" rel=""noreferrer"">Bootstrap's tooltip plugin</a>.</p>
","2234227"
"Processing $http response in service","251708","","<p>I recently posted a detailed description of the issue I am facing <a href=""https://stackoverflow.com/questions/12504747/angularjs-processing-asynchronous-data-in-service"">here</a> at SO. As I couldn't send an actual <code>$http</code> request, I used timeout to simulate asynchronous behavior. Data binding from my model to view is working correct, with the help of @Gloopy</p>

<p>Now, when I use <code>$http</code> instead of <code>$timeout</code> (tested locally), I could see the asynchronous request was successful and <code>data</code> is filled with json response in my service. But, my view is not updating.</p>

<p>updated Plunkr <a href=""http://plnkr.co/edit/RbzODj?p=preview"" rel=""noreferrer"">here</a></p>
","<p>Here is a Plunk that does what you want: <a href=""http://plnkr.co/edit/TTlbSv?p=preview"">http://plnkr.co/edit/TTlbSv?p=preview</a></p>

<p>The idea is that you work with promises directly and their ""then"" functions to manipulate and access the asynchronously returned responses.</p>

<pre><code>app.factory('myService', function($http) {
  var myService = {
    async: function() {
      // $http returns a promise, which has a then function, which also returns a promise
      var promise = $http.get('test.json').then(function (response) {
        // The then function here is an opportunity to modify the response
        console.log(response);
        // The return value gets picked up by the then in the controller.
        return response.data;
      });
      // Return the promise to the controller
      return promise;
    }
  };
  return myService;
});

app.controller('MainCtrl', function( myService,$scope) {
  // Call the async method and then do stuff with what is returned inside our own then function
  myService.async().then(function(d) {
    $scope.data = d;
  });
});
</code></pre>

<p>Here is a slightly more complicated version that caches the request so you only make it first time (<a href=""http://plnkr.co/edit/2yH1F4IMZlMS8QsV9rHv?p=preview"">http://plnkr.co/edit/2yH1F4IMZlMS8QsV9rHv?p=preview</a>):</p>

<pre><code>app.factory('myService', function($http) {
  var promise;
  var myService = {
    async: function() {
      if ( !promise ) {
        // $http returns a promise, which has a then function, which also returns a promise
        promise = $http.get('test.json').then(function (response) {
          // The then function here is an opportunity to modify the response
          console.log(response);
          // The return value gets picked up by the then in the controller.
          return response.data;
        });
      }
      // Return the promise to the controller
      return promise;
    }
  };
  return myService;
});

app.controller('MainCtrl', function( myService,$scope) {
  $scope.clearData = function() {
    $scope.data = {};
  };
  $scope.getData = function() {
    // Call the async method and then do stuff with what is returned inside our own then function
    myService.async().then(function(d) {
      $scope.data = d;
    });
  };
});
</code></pre>
","12513509"
"View list of all JavaScript variables in Google Chrome Console","251388","","<p>In Firebug, the DOM tab shows a list of all your public variables and objects. In Chrome's console you have to type the name of the public variable or object you want to explore.</p>

<p>Is there a way - or at least a command - for Chrome's console to display a list all the public variables and objects? It will save a lot of typing.</p>
","<p>Is this the kind of output you're looking for?</p>

<pre><code>for(var b in window) { 
  if(window.hasOwnProperty(b)) console.log(b); 
}
</code></pre>

<p>This will list everything available on the <code>window</code> object (all the functions and variables, e.g. <code>$</code> and <code>jQuery</code> on this page, etc).  Though, this is quite a list, not sure how helpful it is...</p>

<p>Otherwise just do <code>window</code> and start going down it's tree:</p>

<pre><code>window
</code></pre>

<p>This will give you <code>DOMWindow</code>, an expandable/explorable object.</p>
","2934812"
"Pass Variables by Reference in Javascript","251334","","<p>How do I pass variables by reference in JS? I have 3 variables that I want to perform several operations to so I want to put them in a for loop and perform the operations to each one.</p>

<p>pseudo code:</p>

<pre><code>myArray = new Array(var1, var2, var3);
for (var x = 0; x &lt; myArray.length; x++){
    //do stuff to the array
    makePretty(myArray[x]);
}
//now do stuff to the updated vars
</code></pre>

<p>What is the best way to do this?</p>
","<p>There is no ""pass by reference"" available in JavaScript. You can pass an object (which is to say, you can pass-by-value a reference to an object) and then have a function modify the object contents:</p>

<pre><code>function alterObject(obj) {
  obj.foo = ""goodbye"";
}

var myObj = { foo: ""hello world"" };

alterObject(myObj);

alert(myObj.foo); // ""goodbye"" instead of ""hello world""
</code></pre>

<p>Now, in your case, you're not passing anything anyway, as far as I can tell. You can iterate over the properties of an array with a numeric index and modify each cell of the array, if you want.</p>

<p>It's important to note that ""pass-by-reference"" is a very specific term. It does not mean simply that it's possible to pass a reference to a modifiable object. Instead, it means that it's possible to pass a simple variable in such a way as to allow a function to modify that value in the <strong>calling</strong> context.  So:</p>

<pre><code> function swap(a, b) {
   var tmp = a;
   a = b;
   b = tmp; //assign tmp to b
 }

 var x = 1, y = 2;
 swap(x, y);

 alert(""x is "" + x + "" y is "" + y); // ""x is 1 y is 2""
</code></pre>

<p>In a language like C++, it's possible to do that because that language <strong>does</strong> (sort-of) have pass-by-reference.</p>

<p><em>edit</em> &mdash; this recently (March 2015) blew up on Reddit again over a blog post similar to mine mentioned below, though in this case about Java. It occurred to me while reading the back-and-forth in the Reddit comments that a big part of the confusion stems from the unfortunate collision involving the word ""reference"". The terminology ""pass by reference"" and ""pass by value"" predates the concept of having ""objects"" to work with in programming languages. It's really not about objects at all; it's about function parameters, and specifically how function parameters are ""connected"" (or not) to the calling environment. In particular, note that in a true pass-by-reference language &mdash; one that <em>does</em> involve objects &mdash; one would still have the ability to modify object <em>contents</em>, and it would look pretty much exactly like it does in JavaScript. However, one would <em>also</em> be able to modify the object reference in the calling environment, and that's the key thing that you <em>can't</em> do in JavaScript. A pass-by-reference language would pass not the reference itself, but a <em>reference to the reference</em>.</p>

<p><em>edit</em> &mdash; <a href=""http://whatsthepointy.blogspot.com/2013/11/javascript-does-not-have-pass-by.html"" rel=""noreferrer"">here is a blog post on the topic.</a> (Note the comment to that post that explains that C++ doesn't really have pass-by-reference.  That is true. What C++ does have, however, is the ability to create references to plain variables, either explicitly at the point of function invocation to create a pointer, or <em>implicitly</em> when calling functions whose argument type signature calls for that to be done. Those are the key things JavaScript doesn't support.)</p>
","7744623"
"Read a file one line at a time in node.js?","251103","","<p>I am trying to read a large file one line at a time. I found <a href=""http://www.quora.com/What-is-the-best-way-to-read-a-file-line-by-line-in-node-js"" rel=""noreferrer"">a question on Quora</a> that dealt with the subject but I'm missing some connections to make the whole thing fit together.</p>

<pre><code> var Lazy=require(""lazy"");
 new Lazy(process.stdin)
     .lines
     .forEach(
          function(line) { 
              console.log(line.toString()); 
          }
 );
 process.stdin.resume();
</code></pre>

<p>The bit that I'd like to figure out is how I might read one line at a time from a file instead of STDIN as in this sample.</p>

<p>I tried: </p>

<pre><code> fs.open('./VeryBigFile.csv', 'r', '0666', Process);

 function Process(err, fd) {
    if (err) throw err;
    // DO lazy read 
 }
</code></pre>

<p>but it's not working.  I know that in a pinch I could fall back to using something like PHP, but I would like to figure this out.  </p>

<p>I don't think the other answer would work as the file is much larger than the server I'm running it on has memory for. </p>
","<p>Since Node.js v0.12 and as of Node.js v4.0.0, there is a stable <a href=""https://nodejs.org/api/readline.html"">readline</a> core module. Here's the easiest way to read lines from a file, without any external modules:</p>

<pre><code>var lineReader = require('readline').createInterface({
  input: require('fs').createReadStream('file.in')
});

lineReader.on('line', function (line) {
  console.log('Line from file:', line);
});
</code></pre>

<p>The last line is read correctly (as of Node v0.12 or later), even if there is no final <code>\n</code>.</p>

<p><strong>UPDATE</strong>: this example has been <a href=""https://github.com/nodejs/node/pull/4609/files"">added to Node's API official documentation</a>.</p>
","32599033"
"jQuery ajax success callback function definition","251030","","<p>I want to use jQuery ajax to retrieve data from a server.</p>

<p>I want to put the success callback function definition outside the <code>.ajax()</code> block like the following. So do I need to declare the variable <code>dataFromServer</code> like the following so that I will be able to use the returned data from the success callback?</p>

<p>I've seen most people define the success callback inside the <code>.ajax()</code> block. So is the following code correct if I want to define the success callback outside?</p>

<pre><code>var dataFromServer;  //declare the variable first

function getData() {
    $.ajax({
        url : 'example.com',
        type: 'GET',
        success : handleData(dataFromServer)
    })
}

function handleData(data) {
    alert(data);
    //do some stuff
}
</code></pre>
","<p>Just use:</p>

<pre><code>function getData() {
    $.ajax({
        url : 'example.com',
        type: 'GET',
        success : handleData
    })
}
</code></pre>

<p>The <code>success</code> property requires only a reference to a function, and passes the data as parameter to this function. </p>

<p>You can access your <code>handleData</code> function like this because of the way <code>handleData</code> is declared. JavaScript will parse your code for function declarations before running it, so you'll be able to use the function in code that's before the actual declaration.  This is known as <a href=""http://www.adequatelygood.com/JavaScript-Scoping-and-Hoisting.html"" rel=""noreferrer"">hoisting</a>.</p>

<p>This doesn't count for functions declared like this, though:</p>

<pre><code>var myfunction = function(){}
</code></pre>

<p>Those are only available when the interpreter passed them.</p>

<p><strong><a href=""https://stackoverflow.com/questions/336859/javascript-var-functionname-function-vs-function-functionname"">See this question for more information about the 2 ways of declaring functions</a></strong></p>
","14754649"
"Request header field Access-Control-Allow-Headers is not allowed by Access-Control-Allow-Headers","250699","","<p>I'm trying to send files to my server with a post request, but when it sends it causes the error:</p>

<pre class=""lang-none prettyprint-override""><code>Request header field Content-Type is not allowed by Access-Control-Allow-Headers.
</code></pre>

<p>So I googled the error and added the headers:</p>

<pre><code>$http.post($rootScope.URL, {params: arguments}, {headers: {
    ""Access-Control-Allow-Origin"" : ""*"",
    ""Access-Control-Allow-Methods"" : ""GET,POST,PUT,DELETE,OPTIONS"",
    ""Access-Control-Allow-Headers"": ""Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With""
}
</code></pre>

<p>Then I get the error: </p>

<pre class=""lang-none prettyprint-override""><code>Request header field Access-Control-Allow-Origin is not allowed by Access-Control-Allow-Headers
</code></pre>

<p>So I googled that and the only similar question I could find was provided a half answer then closed as off topic. What headers am I supposed to add/remove?</p>
","<p>The <strong>server</strong> (that the POST request is sent to) needs to include the <code>Access-Control-Allow-Headers</code> header (etc) <strong>in its response</strong>. Putting them in your request from the client has no effect.</p>

<p>This is because it is up to the server to specify that it accepts cross-origin requests (and that it permits the <code>Content-Type</code> request header, and so on) – the client cannot decide for itself that a given server should allow CORS.</p>
","25727411"
"How do I change an HTML selected option using JavaScript?","250585","","<p>I have option menu like this:</p>

<pre><code>&lt;form name=""AddAndEdit""&gt;
   &lt;select name=""list"" id=""personlist""&gt;
      &lt;option value=""11""&gt;Person1&lt;/option&gt;
      &lt;option value=""27""&gt;Person2&lt;/option&gt;
      &lt;option value=""17""&gt;Person3&lt;/option&gt;
      &lt;option value=""10""&gt;Person4&lt;/option&gt;
      &lt;option value=""7""&gt;Person5&lt;/option&gt;
      &lt;option value=""32""&gt;Person6&lt;/option&gt;
      &lt;option value=""18""&gt;Person7&lt;/option&gt;
      &lt;option value=""29""&gt;Person8&lt;/option&gt;
      &lt;option value=""28""&gt;Person9&lt;/option&gt;
      &lt;option value=""34""&gt;Person10&lt;/option&gt;
      &lt;option value=""12""&gt;Person11&lt;/option&gt;
      &lt;option value=""19""&gt;Person12&lt;/option&gt;
   &lt;/select&gt;
&lt;/form&gt;
</code></pre>

<p>And now I want to change the selected option by using an href. For example:</p>

<pre><code>&lt;a href=""javascript:void(0);""
  onclick=""document.getElementById('personlist').getElementsByTagName('option')[11].selected = 'selected';""&gt;change&lt;/a&gt;
</code></pre>

<p>But I want to select the option with <code>value=11 (Person1)</code>, not <code>Person12</code>.</p>

<p>How do I change this code?</p>
","<p>Change</p>

<pre><code>document.getElementById('personlist').getElementsByTagName('option')[11].selected = 'selected'
</code></pre>

<p>to</p>

<pre><code>document.getElementById('personlist').value=Person_ID;
</code></pre>
","10911660"
"Create a custom callback in JavaScript","250519","","<p>All I need to do is to execute a callback function when my current function execution ends.</p>

<pre><code>function LoadData() 
{
    alert('The data has been loaded');
    //Call my callback with parameters. For example,
    //callback(loadedData , currentObject);
}
</code></pre>

<p>A consumer for this function should be like this:</p>

<pre><code>object.LoadData(success);

function success(loadedData , currentObject) 
{
  //Todo: some action here 
}
</code></pre>

<p>How do I implement this?</p>
","<p>Actually, your code will pretty much work as is, just declare your callback as an argument and you can call it directly using the argument name.</p>

<h3>The basics</h3>

<pre><code>function doSomething(callback) {
    // ...

    // Call the callback
    callback('stuff', 'goes', 'here');
}

function foo(a, b, c) {
    // I'm the callback
    alert(a + "" "" + b + "" "" + c);
}

doSomething(foo);
</code></pre>

<p>That will call <code>doSomething</code>, which will call <code>foo</code>, which will alert ""stuff goes here"".</p>

<p>Note that it's very important to pass the function <em>reference</em> (<code>foo</code>), rather than calling the function and passing its result (<code>foo()</code>). In your question, you do it properly, but it's just worth pointing out because it's a common error.</p>

<h3>More advanced stuff</h3>

<p>Sometimes you want to call the callback so it sees a specific value for <code>this</code>. You can easily do that with the JavaScript <code>call</code> function:</p>

<pre><code>function Thing(name) {
    this.name = name;
}
Thing.prototype.doSomething = function(callback) {
    // Call our callback, but using our own instance as the context
    callback.call(this);
}

function foo() {
    alert(this.name);
}

var t = new Thing('Joe');
t.doSomething(foo);  // Alerts ""Joe"" via `foo`
</code></pre>

<p>You can also pass arguments:</p>

<pre><code>function Thing(name) {
    this.name = name;
}
Thing.prototype.doSomething = function(callback, salutation) {
    // Call our callback, but using our own instance as the context
    callback.call(this, salutation);
}

function foo(salutation) {
    alert(salutation + "" "" + this.name);
}

var t = new Thing('Joe');
t.doSomething(foo, 'Hi');  // Alerts ""Hi Joe"" via `foo`
</code></pre>

<p>Sometimes it's useful to pass the arguments you want to give the callback as an array, rather than individually. You can use <code>apply</code> to do that:</p>

<pre><code>function Thing(name) {
    this.name = name;
}
Thing.prototype.doSomething = function(callback) {
    // Call our callback, but using our own instance as the context
    callback.apply(this, ['Hi', 3, 2, 1]);
}

function foo(salutation, three, two, one) {
    alert(salutation + "" "" + this.name + "" - "" + three + "" "" + two + "" "" + one);
}

var t = new Thing('Joe');
t.doSomething(foo);  // Alerts ""Hi Joe - 3 2 1"" via `foo`
</code></pre>
","2190872"
"window.location.reload with clear cache","250277","","<p>I want to reload a page using JavaScript but I want to clear cache too, so on page refresh the page has latest versions of everything from server.<br>
Other browsers except IE are not getting latest content.</p>

<p>Any solution for IE9?</p>
","<p><code>reload()</code> is supposed to accept an argument which tells it to do a hard reload, ie, ignoring the cache:</p>

<pre><code>location.reload(true);
</code></pre>

<p>I can't vouch for its reliability, you may want to investigate this further.</p>
","5722855"
"JavaScript object: access variable property by name as string","250270","","<p>If I have a javascript object that looks like below</p>

<pre><code>var columns = {
  left: true,
  center : false,
  right : false
}
</code></pre>

<p>and I have a function that is passed both the object, and a property name like so</p>

<pre><code>//should return false
var side = read_prop(columns, 'right');
</code></pre>

<p>what would the body of <code>read_prop(object, property)</code> look like?</p>
","<p>You don't need a function for it - simply use the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Member_Operators#Bracket_notation"" rel=""noreferrer""><em>bracket notation</em></a>:</p>

<pre><code>var side = columns['right'];
</code></pre>

<p>This is equal to <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Member_Operators#Dot_notation"" rel=""noreferrer""><em>dot notation</em></a>, <code>var side = columns.right;</code>, except the fact that <code>right</code> could also come from a variable, function return value, etc., when using bracket notation.</p>

<p>If you NEED a function for it, here it is:</p>

<pre><code>function read_prop(obj, prop) {
    return obj[prop];
}
</code></pre>
","4255480"
"How to use javascript variables in jquery selectors","250106","","<p>How do I use the javascript variables as a parameter in a jquery selector?</p>

<pre><code>&lt;script type=""text/javascript""&gt;

$(function(){    
    $(""input"").click(function(){
        var x = $(this).attr(""name"");
        $(""input[id=x]"").hide();    
    });    
});
&lt;/script&gt;

&lt;input type=""text"" id=""bx""/&gt;&lt;input type=""button"" name=""bx""/&gt;
&lt;input type=""text"" id=""by""/&gt;&lt;input type=""button"" name=""by""/&gt;
</code></pre>

<p>Basically what I want to do is to be able to hide the element which has id that is equal to the name of the element that is being clicked.</p>
","<pre><code>var name = this.name;
$(""input[name="" + name + ""]"").hide();
</code></pre>

<p>OR you can do something like this.</p>

<pre><code>var id = this.id;
$('#' + id).hide();
</code></pre>

<p>OR you can give some effect also.</p>

<pre><code>$(""#"" + this.id).slideUp();
</code></pre>

<p>If you want to remove the entire element permanently form the page.</p>

<pre><code>$(""#"" + this.id).remove();
</code></pre>

<p>You can also use it in this also.</p>

<pre><code>$(""#"" + this.id).slideUp('slow', function (){
    $(""#"" + this.id).remove();
});
</code></pre>
","5891929"
"Render Partial View Using jQuery in ASP.NET MVC","249804","","<p>How do I render the partial view using jquery?</p>

<p>We can render the partial View like this:</p>

<pre><code>&lt;% Html.RenderPartial(""UserDetails""); %&gt;
</code></pre>

<p>How can we do the same using jquery?</p>
","<p>I have used ajax load to do this:</p>

<pre><code>$('#user_content').load('@Url.Action(""UserDetails"",""User"")');
</code></pre>
","1721623"
"How do I create a link using javascript?","249780","","<p>I have a string for a title and a string for a link.  I'm not sure how to put the two together to create a link on a page using Javascript.  Any help is appreciated.</p>

<p>EDIT1: Adding more detail to the question.
The reason I'm trying to figure this out is because I have an RSS feed and have a list of titles ands URLs.  I would like to link the titles to the URL to make the page useful.</p>

<p>EDIT2: I am using jQuery but am completely new to it and wasn't aware it could help in this situation.</p>
","<pre><code>&lt;html&gt;
&lt;head&gt;&lt;/head&gt;
&lt;body&gt;
&lt;script&gt;

var a = document.createElement('a');
var linkText = document.createTextNode(""my title text"");
a.appendChild(linkText);
a.title = ""my title text"";
a.href = ""http://example.com"";
document.body.appendChild(a);

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
","4772817"
"Selecting text in an element (akin to highlighting with your mouse)","249501","","<p>I would like to have users click a link, then it selects the HTML text in another element (<em>not</em> an input).</p>

<p>By ""select"" I mean the same way you would select text by dragging your mouse over it. This has been a bear to research because everyone talks about ""select"" or ""highlight"" in other terms.</p>

<p>Is this possible? My code so far:</p>

<p>HTML:</p>

<pre><code>&lt;a href=""javascript:"" onclick=""SelectText('xhtml-code')""&gt;Select Code&lt;/a&gt;
&lt;code id=""xhtml-code""&gt;Some Code here &lt;/code&gt;
</code></pre>

<p>JS:</p>

<pre><code>function SelectText(element) {
    $(""#"" + element).select();
}
</code></pre>

<p>Am I missing something blatantly obvious?</p>
","<p>I have found a solution for this, thanks to <a href=""http://www.codingforums.com/archive/index.php/t-105808.html"" rel=""noreferrer"">this thread</a> found by TheVillageIdiot. I was able to modify the info given and mix it with a bit of jQuery to create a totally awesome function to select the text in any element, regardless of browser:</p>

<pre><code>function SelectText(element) {
    var text = document.getElementById(element);
    if ($.browser.msie) {
        var range = document.body.createTextRange();
        range.moveToElementText(text);
        range.select();
    } else if ($.browser.mozilla || $.browser.opera) {
        var selection = window.getSelection();
        var range = document.createRange();
        range.selectNodeContents(text);
        selection.removeAllRanges();
        selection.addRange(range);
    } else if ($.browser.safari) {
        var selection = window.getSelection();
        selection.setBaseAndExtent(text, 0, text, 1);
    }
}
</code></pre>

<p><strong>EDIT (9/28/11):</strong></p>

<p>It's been a while since this answer was updated, and I've learned a lot as a developer since I asked and answered this question. It has also gotten a lot more attention than I thought it would. I want to provide a better solution than the original one I posted, one that doesn't rely on deprecated jQuery methods, or jQuery at all, for that matter. Could you use jQuery to help you out? Sure, but if you can achieve the same result without jQuery and using feature detection instead of browser sniffing, why wouldn't you? So below is my updated answer:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function SelectText(element) {
    var doc = document
        , text = doc.getElementById(element)
        , range, selection
    ;    
    if (doc.body.createTextRange) {
        range = document.body.createTextRange();
        range.moveToElementText(text);
        range.select();
    } else if (window.getSelection) {
        selection = window.getSelection();        
        range = document.createRange();
        range.selectNodeContents(text);
        selection.removeAllRanges();
        selection.addRange(range);
    }
}

document.onclick = function(e) {    
    if (e.target.className === 'click') {
        SelectText('selectme');
    }
};</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div id=""selectme""&gt;&lt;p&gt;Some text goes here!&lt;/p&gt;&lt;p&gt;Moar text!&lt;/p&gt;&lt;/div&gt;
&lt;p class=""click""&gt;Click me!&lt;/p&gt;</code></pre>
</div>
</div>
</p>

<p>Here is an <em>updated</em> <a href=""http://jsfiddle.net/edelman/KcX6A/1507/"" rel=""noreferrer"">working demo</a>. For those of you looking for a jQuery plugin, I made <a href=""http://jsfiddle.net/edelman/KcX6A/1506/"" rel=""noreferrer"">one of those too</a> (updated again).</p>

<p><em>UPDATED (1/10/2012)</em> Per Tim Down's suggestion, <code>setBaseAndExtent()</code> is not needed for webkit.</p>

<p><em>UPDATED (9/19/2014)</em> Embedded code snippet</p>
","987376"
"jQuery get the location of an element relative to window","249247","","<p>Given an HTML DOM ID, how to get an element's position relative to the window in JavaScript/JQuery?  This is not the same as relative to the document nor offset parent since the element may be inside an iframe or some other elements.  I need to get the screen location of the element's rectangle (as in position and dimension) as it is currently being displayed.  Negative values are acceptable if the element is currently off-screen (have been scrolled off).</p>

<p>This is for an iPad (WebKit / WebView) application.  Whenever the user taps on a special link in an <code>UIWebView</code>, I am supposed to open a popover view that displays further information about the link.  The popover view needs to display an arrow that points back to the part of the screen that invokes it.</p>
","<p>Initially, Grab the <a href=""http://api.jquery.com/offset/"" rel=""noreferrer""><strong>.offset</strong></a> position of the element and calculate its relative position with respect to window</p>

<p><strong>Refer</strong> :<br />
1. <a href=""http://api.jquery.com/offset"" rel=""noreferrer"">offset</a><br />
2. <a href=""http://api.jquery.com/scroll/"" rel=""noreferrer"">scroll</a><br />
3. <a href=""http://api.jquery.com/scrolltop/"" rel=""noreferrer"">scrollTop</a><br /></p>

<p>You can give it a try at this <strong><a href=""http://jsfiddle.net/mk4q332q/"" rel=""noreferrer""><em>fiddle</em></a></strong></p>

<p>Following few lines of code explains how this can be solved</p>

<p>when <a href=""http://api.jquery.com/scroll"" rel=""noreferrer""><strong>.scroll</strong></a> event is performed, we calculate the relative position of the element with respect to window object</p>

<pre><code>$(window).scroll(function () {
    console.log(eTop - $(window).scrollTop());
});
</code></pre>

<p>when scroll is performed in browser, we call the above event handler function</p>

<h2>code snippet</h2>

<hr>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function log(txt) {
  $(""#log"").html(""location : &lt;b&gt;"" + txt + ""&lt;/b&gt; px"")
}

$(function() {
  var eTop = $('#element').offset().top; //get the offset top of the element
  log(eTop - $(window).scrollTop()); //position of the ele w.r.t window

  $(window).scroll(function() { //when window is scrolled
    log(eTop - $(window).scrollTop());
  });
});</code></pre>
<pre class=""snippet-code-css lang-css prettyprint-override""><code>#element {
  margin: 140px;
  text-align: center;
  padding: 5px;
  width: 200px;
  height: 200px;
  border: 1px solid #0099f9;
  border-radius: 3px;
  background: #444;
  color: #0099d9;
  opacity: 0.6;
}
#log {
  position: fixed;
  top: 40px;
  left: 40px;
  color: #333;
}
#scroll {
  position: fixed;
  bottom: 10px;
  right: 10px;
  border: 1px solid #000;
  border-radius: 2px;
  padding: 5px;
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;
&lt;div id=""log""&gt;&lt;/div&gt;

&lt;div id=""element""&gt;Hello
  &lt;hr&gt;World&lt;/div&gt;
&lt;div id=""scroll""&gt;Scroll Down&lt;/div&gt;</code></pre>
</div>
</div>
</p>
","3714893"
"How do I update/upsert a document in Mongoose?","249211","","<p>Perhaps it's the time, perhaps it's me drowning in sparse documentation and not being able to wrap my head around the concept of updating in Mongoose :)</p>

<p>Here's the deal: </p>

<p>I have a contact schema and model (shortened properties):</p>

<pre><code>var mongoose = require('mongoose'),
    Schema = mongoose.Schema;

var mongooseTypes = require(""mongoose-types""),
    useTimestamps = mongooseTypes.useTimestamps;


var ContactSchema = new Schema({
    phone: {
        type: String,
        index: {
            unique: true,
            dropDups: true
        }
    },
    status: {
        type: String,
        lowercase: true,
        trim: true,
        default: 'on'
    }
});
ContactSchema.plugin(useTimestamps);
mongoose.model('Contact', ContactSchema); //is this line superflous??
var Contact = mongoose.model('Contact', ContactSchema);
</code></pre>

<p>I receive a request from the client, containing the fields I need and use my model thusly:</p>

<pre><code>mongoose.connect(connectionString);
var contact = new Contact({
    phone: request.phone,
    status: request.status
});
</code></pre>

<p>And now we reach the problem:</p>

<ol>
<li>If I call <code>contact.save(function(err){...})</code> I'll receive an error if the contact with the same phone number already exists (as expected - unique)</li>
<li>I can't call <code>update()</code> on contact, since that method does not exist on a document</li>
<li>If I call update on the model:<br>
<code>Contact.update({phone:request.phone}, contact, {upsert: true}, function(err{...})</code><br>
I get into an infinite loop of some sorts, since the Mongoose update implementation clearly doesn't want an object as the second parameter.</li>
<li>If I do the same, but in the second parameter I pass an associative array of the request properties <code>{status: request.status, phone: request.phone ...}</code> it works - but then I have no reference to the specific contact and cannot find out its <code>createdAt</code> and <code>updatedAt</code> properties.</li>
</ol>

<p>So the bottom line, after all I tried: given a document <code>contact</code>, how do I update it if it exists, or add it if it doesn't?</p>

<p>Thanks for your time.</p>
","<p>Well, I waited long enough and no answer. Finally gave up the whole update/upsert approach and went with:</p>

<pre><code>ContactSchema.findOne({phone: request.phone}, function(err, contact) {
    if(!err) {
        if(!contact) {
            contact = new ContactSchema();
            contact.phone = request.phone;
        }
        contact.status = request.status;
        contact.save(function(err) {
            if(!err) {
                console.log(""contact "" + contact.phone + "" created at "" + contact.createdAt + "" updated at "" + contact.updatedAt);
            }
            else {
                console.log(""Error: could not save contact "" + contact.phone);
            }
        });
    }
});
</code></pre>

<p>Does it work? Yep. Am I happy with this? Probably not. 2 DB calls instead of one.<br>
Hopefully a future Mongoose implementation would come up with a <code>Model.upsert</code> function.</p>
","7303588"
"Bootstrap modal appearing under background","249093","","<p>I have used the code for my modal straight from the Bootstrap example, and have included only the bootstrap.js (and not bootstrap-modal.js). However, my modal is appearing underneath the grey fade (backdrop) and is non editable.</p>

<p>Here's what it looks like:</p>

<p><img src=""https://i.stack.imgur.com/qSypO.png"" alt=""modal hiding behind backdrop""></p>

<p>See <a href=""http://jsfiddle.net/hq4fzvh9/1/"">this fiddle</a> for <em>one</em> way  to reproduce this problem. The basic structure of that code is like this:</p>

<pre class=""lang-html prettyprint-override""><code>&lt;body&gt;
    &lt;p&gt;Lorem ipsum dolor sit amet.&lt;/p&gt;    

    &lt;div class=""my-module""&gt;
        This container contains the modal code.
        &lt;div class=""modal fade""&gt;
            &lt;div class=""modal-dialog""&gt;
                &lt;div class=""modal-content""&gt;
                    &lt;div class=""modal-body""&gt;Modal&lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
</code></pre>

<pre class=""lang-css prettyprint-override""><code>body {
    padding-top: 50px;
}

.my-module {
    position: fixed;
    top: 0;
    left: 0;
}
</code></pre>

<p>Any ideas why this is or what I can do to fix this?</p>
","<p>If the modal container has a fixed or relative position or is within an element with fixed or relative position this behavior will occur.</p>

<p><strong>Make sure the modal container and all of its parent elements are positioned the default way to fix the problem.</strong></p>

<p>Here are a couple ways to do this:</p>

<ol>
<li>Easiest way is to just move the modal div so it is outside any elements with special positioning.  One good place might be just before the closing body tag <code>&lt;/body&gt;</code>.</li>
<li>Alternatively, you can remove <code>position:</code> CSS properties from the modal and its ancestors until the problem goes away.  This might change how the page looks and functions, however.</li>
</ol>
","11788713"
"Local file access with javascript","249032","","<p>Is there any local file manipulation that's been done with JavaScript? I'm looking for a solution that can be accomplished with no install footprint like requiring AIR.</p>

<p>Specifically, I'd like to read the contents from a file and write those contents to another file. At this point I'm not worried about gaining permissions, just assuming I already have full permissions to these files.</p>
","<p>If the user selects a file via <code>&lt;input type=""file""&gt;</code>, you can <a href=""https://developer.mozilla.org/en-US/docs/Using_files_from_web_applications"" rel=""noreferrer"">read</a> and <a href=""http://www.html5rocks.com/en/tutorials/file/dndfiles/"" rel=""noreferrer"">process</a> that file using the <a href=""https://www.w3.org/TR/FileAPI/"" rel=""noreferrer"">File API</a>.</p>

<p>Reading or writing arbitrary files is not allowed by design. It's a violation of the sandbox. From <a href=""http://en.wikipedia.org/wiki/JavaScript#Security"" rel=""noreferrer"">Wikipedia -> Javascript -> Security</a>:</p>

<blockquote>
  <p>JavaScript and the DOM provide the
  potential for malicious authors to
  deliver scripts to run on a client
  computer via the web. Browser authors
  contain this risk using two
  restrictions. First, scripts run in a
  sandbox in which they can only perform
  web-related actions, not
  general-purpose programming tasks like
  <strong>creating files</strong>.</p>
</blockquote>

<p><strong>2016 UPDATE</strong>: Accessing the filesystem directly is possible via the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/File_System_API"" rel=""noreferrer"">Filesystem API</a>, which is <a href=""http://caniuse.com/#feat=filesystem"" rel=""noreferrer"">only supported by Chrome and Opera</a> and <a href=""http://www.html5rocks.com/en/tutorials/file/filesystem/"" rel=""noreferrer"">may end up not being implemented by other browsers</a> (with the <a href=""https://developer.microsoft.com/en-us/microsoft-edge/platform/status/filewriter/"" rel=""noreferrer"">exception of Edge</a>). For details see <a href=""https://stackoverflow.com/questions/371875/local-file-access-with-javascript/38254151#38254151"">Kevin's answer</a>.</p>
","372333"
"jQuery each loop in table row","248624","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/1891357/how-to-iterate-a-table-rows-with-jquery-and-access-some-cell-values"">How to iterate a table rows with JQuery and access some cell values?</a>  </p>
</blockquote>



<p>I am having something like:</p>

<pre><code>&lt;table id=""tblOne""&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td&gt;
                        &lt;table id=""tblTwo""&gt;
                            &lt;tbody&gt;
                                &lt;tr&gt;
                                    &lt;td&gt;
                                        Items
                                    &lt;/td&gt;
                                &lt;/tr&gt;
                                &lt;tr&gt;
                                    &lt;td&gt;
                                        Prod
                                    &lt;/td&gt;
                                &lt;/tr&gt;
                            &lt;/tbody&gt;
                        &lt;/table&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;
                        Item 1
                    &lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;
                        Item 2
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
</code></pre>

<p>I have written jQuery to loop through each tr like:</p>

<pre><code>$('#tblOne tr').each(function() {...code...});
</code></pre>

<p>But problem is that it loops through the ""tr"" of ""tblTwo"" also which I don't want.
Can anyone please suggest something to solve this?</p>
","<p>in jQuery just use</p>

<pre><code>$('#tblOne &gt; tbody  &gt; tr').each(function() {...code...});
</code></pre>

<p>using the direct children selector (<code>&gt;</code>) you will walk over immediate descendents (and not <em>all</em> descendents)</p>

<hr>

<p>in <em>VanillaJS</em> you can use <code>document.querySelectorAll()</code> and walk over the rows using <code>forEach()</code></p>

<pre><code>[].forEach.call(document.querySelectorAll('#tblOne &gt; tbody  &gt; tr'), function(tr) {
    /* console.log(tr); */
});
</code></pre>
","10432012"
"Node.js - How to format a date string in UTC","248592","","<p>Using Node.js, I want to format a <code>Date</code> into the following string format:</p>

<pre><code>var ts_hms = new Date(UTC);
ts_hms.format(""%Y-%m-%d %H:%M:%S"");
</code></pre>

<p>How do I do that?</p>
","<p>If you're using Node.js, you're sure to have EcmaScript 5, and so Date has a <code>toISOString</code> method. You're asking for a slight modification of ISO8601:</p>

<pre><code>new Date().toISOString()
&gt; '2012-11-04T14:51:06.157Z'
</code></pre>

<p>So just cut a few things out, and you're set:</p>

<pre><code>new Date().toISOString().
  replace(/T/, ' ').      // replace T with a space
  replace(/\..+/, '')     // delete the dot and everything after
&gt; '2012-11-04 14:55:45'
</code></pre>

<p>Or, in one line: <code>new Date().toISOString().replace(/T/, ' ').replace(/\..+/, '')</code></p>

<p>ISO8601 is necessarily UTC (also indicated by the trailing Z on the first result), so you get UTC by default (always a good thing).</p>
","13219636"
"best way to get the key of a key/value javascript object","248447","","<p>If I have a JS object like:</p>

<pre><code>var foo = { 'bar' : 'baz' }
</code></pre>

<p>If I know that <code>foo</code> has that basic key/value structure, but don't know the name of the key, what's the easiest way to get it? <code>for ... in</code>? <code>$.each()</code>? I hope there's something better....</p>
","<p>If you want to get all keys, <a href=""http://ecma262-5.com/ELS5_HTML.htm#Section_15.2.3.14"" rel=""noreferrer"">ECMAScript 5 introduced <code>Object.keys</code></a>. This is only supported by newer browsers but the <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys"" rel=""noreferrer"">MDC documentation</a> provides an alternative implementation (which also uses <code>for...in</code> btw):</p>

<pre><code>if(!Object.keys) Object.keys = function(o){
     if (o !== Object(o))
          throw new TypeError('Object.keys called on non-object');
     var ret=[],p;
     for(p in o) if(Object.prototype.hasOwnProperty.call(o,p)) ret.push(p);
     return ret;
}
</code></pre>

<p>Of course if you want both, key and value, then <code>for...in</code> is the only reasonable solution.</p>
","6268840"
"How to get the previous URL in JavaScript?","248385","","<p>Is there any way to get the previous URL in JavaScript?  Something like this:</p>

<pre><code>alert(""previous url is: "" + window.history.previous.href);
</code></pre>

<p>Is there something like that?  Or should I just store it in a cookie?  I only need to know so I can do transitions from the previous URL to the current URL without anchors and all that.</p>
","<pre><code>document.referrer
</code></pre>

<p>in many cases will get you the URL of the last page the user visited, if they got to the current page by clicking a link (versus typing directly into the address bar, or I believe in some cases, by submitting a form?). Specified by <a href=""http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-95229140"" rel=""noreferrer"">DOM Level 2</a>. <a href=""https://developer.mozilla.org/en/Document.referrer"" rel=""noreferrer"">More here.</a></p>

<p><code>window.history</code> allows navigation, but not access to URLs in the session for security and privacy reasons. If more detailed URL history was available, then every site you visit could see all the other sites you'd been to. </p>

<p>If you're dealing with state moving around your own site, then it's possibly less fragile and certainly more useful to use one of the normal session management techniques: cookie data, URL params, or server side session info.</p>
","3528331"
"Create table with jQuery - append","248168","","<p>I have on page div:</p>

<pre><code>&lt;div id=""here_table""&gt;&lt;/div&gt;
</code></pre>

<p>and in jquery:</p>

<pre><code>for(i=0;i&lt;3;i++){
    $('#here_table').append( 'result' +  i );
}
</code></pre>

<p>this generating for me:</p>

<pre><code>&lt;div id=""here_table""&gt;
    result1 result2 result3 etc
&lt;/div&gt;
</code></pre>

<p>I would like receive this in table:</p>

<pre><code>&lt;div id=""here_table""&gt;
    &lt;table&gt;
          &lt;tr&gt;&lt;td&gt;result1&lt;/td&gt;&lt;/tr&gt;
          &lt;tr&gt;&lt;td&gt;result2&lt;/td&gt;&lt;/tr&gt;
          &lt;tr&gt;&lt;td&gt;result3&lt;/td&gt;&lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
</code></pre>

<p>I doing:</p>

<pre><code>$('#here_table').append(  '&lt;table&gt;' );

 for(i=0;i&lt;3;i++){
    $('#here_table').append( '&lt;tr&gt;&lt;td&gt;' + 'result' +  i + '&lt;/td&gt;&lt;/tr&gt;' );
}

 $('#here_table').append(  '&lt;/table&gt;' );
</code></pre>

<p>but this generate for me:</p>

<pre><code>&lt;div id=""here_table""&gt;
    &lt;table&gt; &lt;/table&gt; !!!!!!!!!!
          &lt;tr&gt;&lt;td&gt;result1&lt;/td&gt;&lt;/tr&gt;
          &lt;tr&gt;&lt;td&gt;result2&lt;/td&gt;&lt;/tr&gt;
          &lt;tr&gt;&lt;td&gt;result3&lt;/td&gt;&lt;/tr&gt;
&lt;/div&gt;
</code></pre>

<p>Why? how can i make this correctly?</p>

<p>LIVE: <a href=""http://jsfiddle.net/n7cyE/"" rel=""noreferrer"">http://jsfiddle.net/n7cyE/</a></p>
","<p>This line:</p>

<pre><code>$('#here_table').append( '&lt;tr&gt;&lt;td&gt;' + 'result' +  i + '&lt;/td&gt;&lt;/tr&gt;' );
</code></pre>

<p>Appends to the <code>div#here_table</code> not the new <code>table</code>. </p>

<p>There are several approaches:</p>

<pre><code>/* Note that the whole content variable is just a string */
var content = ""&lt;table&gt;""
for(i=0; i&lt;3; i++){
    content += '&lt;tr&gt;&lt;td&gt;' + 'result ' +  i + '&lt;/td&gt;&lt;/tr&gt;';
}
content += ""&lt;/table&gt;""

$('#here_table').append(content);
</code></pre>

<p>But, with the above approach it is less manageable to add styles and do stuff dynamically with <code>&lt;table&gt;</code>.</p>

<p>But how about this one, it does what you expect nearly great:</p>

<pre><code>var table = $('&lt;table&gt;&lt;/table&gt;').addClass('foo');
for(i=0; i&lt;3; i++){
    var row = $('&lt;tr&gt;&lt;/tr&gt;').addClass('bar').text('result ' + i);
    table.append(row);
}

$('#here_table').append(table);
</code></pre>

<p>Hope this would help.</p>
","8749347"
"How to display a confirmation dialog when clicking an <a> link?","247972","","<p>I want this link to have a JavaScript dialog that asks the user “<em>Are you sure? Y/N</em>”.</p>

<pre><code>&lt;a href=""delete.php?id=22""&gt;Link&lt;/a&gt;
</code></pre>

<p>If the user clicks “Yes”, the link should load, if “No” nothing will happen.</p>

<p>I know how to do that in forms, using <code>onclick</code> running a function that returns <code>true</code> or <code>false</code>. But how do I do this with an <code>&lt;a&gt;</code> link?</p>
","<h2>Inline event handler</h2>

<p>In the most simple way, you can use the <a href=""https://developer.mozilla.org/en/DOM/window.confirm""><code>confirm()</code></a> function in an inline <code>onclick</code> handler.</p>

<pre><code>&lt;a href=""delete.php?id=22"" onclick=""return confirm('Are you sure?')""&gt;Link&lt;/a&gt;
</code></pre>

<h2>Advanced event handling</h2>

<p>But normally you would like to <a href=""http://en.wikipedia.org/wiki/Separation_of_concerns#HTML.2C_CSS.2C_and_JavaScript"">separate your HTML and Javascript</a>, so I suggest you don't use inline event handlers, but put a class on your link and add an event listener to it.</p>

<pre><code>&lt;a href=""delete.php?id=22"" class=""confirmation""&gt;Link&lt;/a&gt;
...
&lt;script type=""text/javascript""&gt;
    var elems = document.getElementsByClassName('confirmation');
    var confirmIt = function (e) {
        if (!confirm('Are you sure?')) e.preventDefault();
    };
    for (var i = 0, l = elems.length; i &lt; l; i++) {
        elems[i].addEventListener('click', confirmIt, false);
    }
&lt;/script&gt;
</code></pre>

<p><a href=""http://jsfiddle.net/TgjL7/"">This example</a> will only work in modern browsers (for older IEs you can use <code>attachEvent()</code>, <code>returnValue</code> and provide an implementation for <code>getElementsByClassName()</code> or use a library like jQuery that will help with cross-browser issues). You can read more about <a href=""https://developer.mozilla.org/en/DOM/element.addEventListener"">this advanced event handling method on MDN</a>.</p>

<h2>jQuery</h2>

<p>I'd like to stay far away from being considered a jQuery fanboy, but DOM manipulation and event handling are two areas where it helps the most with browser differences. Just for fun, here is how this would look with <a href=""http://jquery.com/"">jQuery</a>:</p>

<pre><code>&lt;a href=""delete.php?id=22"" class=""confirmation""&gt;Link&lt;/a&gt;
...
&lt;!-- Include jQuery - see http://jquery.com --&gt;
&lt;script type=""text/javascript""&gt;
    $('.confirmation').on('click', function () {
        return confirm('Are you sure?');
    });
&lt;/script&gt;
</code></pre>
","10462878"
"JavaScript Form Submit - Confirm or Cancel Submission Dialog Box","247786","","<p>For a simple form with an alert that asks if fields were filled out correctly, I need a function that does this:</p>

<ul>
<li><p>Shows an alert box when button is clicked with two options:</p>

<ul>
<li>If ""OK"" is clicked, the form is submitted</li>
<li>If cancel is clicked, the alert box closes and the form can be adjusted and resubmitted</li>
</ul></li>
</ul>

<p>I think a JavaScript confirm would work but I can't seem to figure out how.</p>

<p>The code I have now is:</p>

<pre><code>&lt;script&gt;
function show_alert() {
   alert(""xxxxxx"");
}
&lt;/script&gt;
&lt;form&gt;
   &lt;input type=""image"" src=""xxx"" border=""0"" name=""submit"" onclick=""show_alert();""
      alt=""PayPal - The safer, easier way to pay online!"" value=""Submit""&gt;
&lt;/form&gt;
</code></pre>
","<p>A simple <strong>inline JavaScript confirm</strong> would suffice:</p>

<pre><code>&lt;form onsubmit=""return confirm('Do you really want to submit the form?');""&gt;
</code></pre>

<p>No need for an <em>external function</em> unless you are doing <em>validation</em>, which you can do something like this:</p>

<pre><code>&lt;script&gt;
function validate(form) {

    // validation code here ...


    if(!valid) {
        alert('Please correct the errors in the form!');
        return false;
    }
    else {
        return confirm('Do you really want to submit the form?');
    }
}
&lt;/script&gt;
&lt;form onsubmit=""return validate(this);""&gt;
</code></pre>
","6515632"
"""Stack overflow in line 0"" on Internet Explorer","247709","","<p>I realise this is not the ideal place to ask about this in terms of searchability, but I've got a page whose JavaScript code throws ""Stack overflow in line 0"" errors when I look at it in Internet Explorer.</p>

<p>The problem is quite clearly not in line 0, but somewhere in the list of stuff that I'm writing to the document. Everything works fine in Firefox, so I don't have the delights of Firebug and friends to assist in troubleshooting.</p>

<p>Are there any standard causes for this? I'm guessing this is probably an Internet Explorer 7 bug or something quite obscure, and my <a href=""http://en.wiktionary.org/wiki/Google-fu"" rel=""nofollow noreferrer"">Google-fu</a> is bringing me little joy currently. I can find lots of people who have run into this before, but I can't seem to find how they solved it.</p>
","<p>You can turn <em>off</em> the <code>""Disable Script Debugging""</code> option inside of Internet Explorer and start debugging with <code>Visual Studio</code> if you happen to have that around.</p>

<p>I've found that it is one of few ways to diagnose some of those <code>IE</code> specific issues.</p>
","226113"
"Set HTTP header for one request","247460","","<p>I have one particular request in my app that requires Basic authentication, so I need to set the Authorization header for that request. I read about <a href=""http://docs.angularjs.org/api/ng.$http"" rel=""noreferrer"">setting HTTP request headers</a>, but from what I can tell, it will set that header for all requests of that method. I have something like this in my code:</p>

<pre><code>$http.defaults.headers.post.Authorization = ""Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=="";
</code></pre>

<p>But I don't want every one of my post requests sending this header. Is there any way to send the header just for the one request I want? Or do I have to remove it after my request?</p>
","<p>There's a headers parameter in the config object you pass to <code>$http</code> for per-call headers:</p>

<pre><code>$http({method: 'GET', url: 'www.google.com/someapi', headers: {
    'Authorization': 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='}
});
</code></pre>

<p>Or with the shortcut method:</p>

<pre><code>$http.get('www.google.com/someapi', {
    headers: {'Authorization': 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='}
});
</code></pre>

<p>The list of the valid parameters is available in the <a href=""http://docs.angularjs.org/api/ng.$http#usage"" rel=""noreferrer"">$http</a> service documentation.</p>
","11876907"
"How to call javascript function from code-behind","247377","","<p>I wrote a javascript with a asp.net page.</p>

<p>In Asp.net Page</p>

<pre><code>&lt;HTML&gt; &lt;HEAD&gt;
     &lt;script type=""text/javascript""&gt;
      function Myfunction(){
          document.getElementId('MyText').value=""hi"";
      }
      &lt;/script&gt;
&lt;/HEAD&gt; &lt;BODY&gt;
&lt;input type=""text"" id=""MyText"" runat=""server"" /&gt; &lt;/BODY&gt;
</code></pre>

<p>In Code-behind</p>

<pre><code> Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)
  Handles Me.Load
       If Session(""My"")= ""Hi"" Then
          I want to call ""Myfunction"" javascript function
       End If 
 End Sub
</code></pre>

<p>How can I do?</p>
","<p>This is a way to invoke one or more java script methods from the code behind.
By using Script Manager we can call the methods in sequence.  Consider the below loc foe example.</p>

<pre><code>ScriptManager.RegisterStartupScript(this, typeof(Page), ""UpdateMsg"", 
   ""$(document).ready(function(){EnableControls();
   alert('Overrides successfully Updated.');DisableControls();});"", true);
</code></pre>

<p>In this first method EnableControls() is invoked.
Next the alert will be displayed.
Next the DisableControls() method will be invoked.</p>
","22501081"
"Disabled href tag","247189","","<p>Although that link is disabled, it's still clickable.</p>

<pre><code>&lt;a href=""/"" disabled=""disabled""&gt;123n&lt;/a&gt;
</code></pre>

<p>Can I make it not-clickable if it's disabled? Should I use JavaScript necessarily?</p>
","<p>There is no disabled attribute for hyperlinks. If you don't want something to be linked then you'll need to remove the <code>&lt;a&gt;</code> tag altogether.</p>
","13955695"
"What is the difference between null and undefined in JavaScript?","246886","","<p>I want to know what the difference is between <code>null</code> and <code>undefined</code> in JavaScript.</p>
","<p>In JavaScript, <code>undefined</code> means a variable has been declared but has not yet been assigned a value, such as:</p>

<pre><code> var TestVar;
 alert(TestVar); //shows undefined
 alert(typeof TestVar); //shows undefined
</code></pre>

<p><code>null</code> is an assignment value. It can be assigned to a variable as a representation of no value:</p>

<pre><code> var TestVar = null;
 alert(TestVar); //shows null
 alert(typeof TestVar); //shows object
</code></pre>

<p>From the preceding examples, it is clear that <code>undefined</code> and <code>null</code> are two distinct types: <code>undefined</code> is a type itself (undefined) while <code>null</code> is an object.</p>

<pre><code> null === undefined // false
 null == undefined // true
 null === null // true
</code></pre>

<p>and</p>

<pre><code> null = 'value' // ReferenceError
 undefined = 'value' // 'value'
</code></pre>
","5076962"
"Differences between lodash and underscore","246767","","<p>Why would someone prefer either the <a href=""http://lodash.com/"">lodash.js</a> or <a href=""http://underscorejs.org/"">underscore.js</a> utility library over the other?</p>

<p>Lodash seems to be a drop-in replacement for underscore, the latter having been around longer.</p>

<p>I think both are brilliant, but I do not know enough about how they work to make an educated comparison, and I would like to know more about the differences.</p>
","<p>I created Lo-Dash to provide more consistent cross-environment iteration support for arrays, strings, objects, and <code>arguments</code> objects<sup>1</sup>. It has since become a superset of Underscore, providing more consistent API behavior, more <a href=""http://lodash.com"">features</a> (like AMD support, deep clone, and deep merge), more thorough <a href=""http://lodash.com/docs"">documentation</a> and unit tests (tests which run in Node, Ringo, Rhino, Narwhal, PhantomJS, and browsers), better overall performance and optimizations for large arrays/object iteration, and more flexibility with <a href=""http://lodash.com/"">custom builds</a> and template pre-compilation utilities.</p>

<p>Because Lo-Dash is updated more frequently than Underscore, a <code>lodash underscore</code> build <a href=""http://lodash.com/"">is provided</a> to ensure compatibility with the latest stable version of Underscore.</p>

<p>At one point I was even given <a href=""https://s3.amazonaws.com/f.cl.ly/items/2e0O0S010f2A3s1W283U/push_access.png?v=ba693725"">push access</a> to Underscore, in part because Lo-Dash is responsible for raising more than 30 issues; landing bug fixes, new features, &amp; perf gains in Underscore v1.4.x+.</p>

<p>In addition there are at least 3 Backbone boilerplates that include Lo-Dash by default and Lo-Dash is now mentioned in Backbone’s official <a href=""http://backbonejs.org/#downloads"">documentation</a>.</p>

<p>Check out Kit Cambridge's post, <a href=""http://kitcambridge.be/blog/say-hello-to-lo-dash/"">Say ""Hello"" to Lo-Dash</a>, for a deeper breakdown on the differences between Lo-Dash and Underscore.</p>

<p>Footnotes:</p>

<ol>
<li>Underscore has inconsistent support for arrays, strings, objects, and <code>arguments</code> objects. In newer browsers, Underscore methods ignore <a href=""http://www.2ality.com/2012/06/dense-arrays.html"">holes in arrays</a>, ""Objects"" methods iterate <code>arguments</code> objects, strings are treated as array-like, and methods correctly iterate functions (ignoring their ""prototype"" property) and objects (iterating shadowed properties like ""toString"" and ""valueOf""), while in older browsers they will not. Also, Underscore methods like <code>_.clone</code> preserve holes in arrays, while others like <code>_.flatten</code> don't.</li>
</ol>
","13898916"
"animating addClass/removeClass with jQuery","246716","","<p>I am using jQuery and jQuery-ui and want to animate various attributes on various objects. </p>

<p>For the sake of explaining the issue here I've simplified it to one div that changes from blue to red when the user mouses over it.</p>

<p>I am able to get the behavior I want when using <code>animate()</code>, however when doing so the styles I am animating have to be in the animation code and so are separate from my style sheet. (see <strong>example 1</strong>)</p>

<p>An alternative is using <code>addClass()</code> and <code>removeClass()</code> but I have not been able to re-create the exact behavior that I can get with <code>animate()</code>. (see <strong>example 2</strong>)</p>

<hr>

<h3>Example 1</h3>

<p>Let's take a look at the code I have with <code>animate()</code>:</p>

<pre><code>$('#someDiv')
  .mouseover(function(){
    $(this).stop().animate( {backgroundColor:'blue'}, {duration:500});
  })
  .mouseout(function(){
    $(this).stop().animate( {backgroundColor:'red'}, {duration:500});
  });
</code></pre>

<p>it displays all the behaviors I am looking for:</p>

<ol>
<li>Animates smoothly between red and blue.</li>
<li>No animation 'overqueue-ing' when the user moves their mouse quickly in and out of the div.</li>
<li>If the user moves their mouse out/in while the animation is still playing it eases correctly between the current 'halfway' state and the new 'goal' state.</li>
</ol>

<p>But since the style changes are defined in <code>animate()</code> I have to change the style values there, and can't just have it point to my stylesheet. This 'fragmenting' of where styles are defined is something that really bothers me.</p>

<hr>

<h3>Example 2</h3>

<p>Here is my current best attempt using <code>addClass()</code> and <code>removeClass</code> (note that for the animation to work you need jQuery-ui): </p>

<pre><code>//assume classes 'red' and 'blue' are defined

$('#someDiv')
  .addClass('blue')
  .mouseover(function(){
    $(this).stop(true,false).removeAttr('style').addClass('red', {duration:500});
  })
  .mouseout(function(){
    $(this).stop(true,false).removeAttr('style').removeClass('red', {duration:500});
  });
</code></pre>

<p>This exhibits both property 1. and 2. of my original requirements, however 3 does not work.</p>

<p>I understand the reason for this:</p>

<p>When animating <code>addClass()</code> and <code>removeClass()</code> jQuery adds a temporary style to the element, and then increments the appropriate values until they reach the values of the provided class, and only then does it actually add/remove the class.</p>

<p>Because of this I have to remove the style attribute, otherwise if the animation is stopped halfway the style attribute would remain and would permanently overwrite any class values, since style attributes in a tag have higher importance than class styles.</p>

<p>However when the animation is halfway done it hasn't yet added the new class, and so with this solution the color jumps to the previous color when the user moves their mouse before the animation is completed.</p>

<hr>

<p>What I want ideally is to be able to do something like this:</p>

<pre><code>$('#someDiv')
  .mouseover(function(){
    $(this).stop().animate( getClassContent('blue'), {duration:500});
  })
  .mouseout(function(){
    $(this).stop().animate( getClassContent('red'), {duration:500});
  });
</code></pre>

<p>Where <code>getClassContent</code> would just return the contents of the provided class. The key point is that this way I don't have to keep my style definitions all over the place, but can keep them in classes in my stylesheet.</p>
","<p>Since you are not worried about IE, why not just use css transitions to provide the animation and jQuery to change the classes. Live example: <a href=""http://jsfiddle.net/tw16/JfK6N/"" rel=""noreferrer"">http://jsfiddle.net/tw16/JfK6N/</a></p>

<pre><code>#someDiv{
    -webkit-transition: all 0.5s ease;
    -moz-transition: all 0.5s ease;
    -o-transition: all 0.5s ease;
    transition: all 0.5s ease;
}
</code></pre>
","7317489"
"RegEx for Javascript to allow only alphanumeric","246638","","<p>I need to find a reg ex that only allows alphanumeric. So far, everyone I try only works if the string is alphanumeric, meaning contains both a letter and a number. I just want one what would allow either and not require both.</p>
","<pre><code>/^[a-z0-9]+$/i

^         start of string
[a-z0-9]  a or b or c or ... z or 0 or 1 or ... 9
+         one or more times (change to * to allow empty string
$         end of string

/i        case-insensitive
</code></pre>
","389022"
"How to extract base URL from a string in JavaScript?","246482","","<p>I'm trying to find a relatively easy and reliable method to extract the base URL from a string variable using JavaScript (or jQuery).</p>

<p>For example, given something like:</p>

<pre>http://www.sitename.com/article/2009/09/14/this-is-an-article/</pre>

<p>I'd like to get:</p>

<pre>http://www.sitename.com/</pre>

<p>Is a regular expression the best bet? If so, what statement could I use to assign the base URL extracted from a given string to a new variable?</p>

<p>I've done some searching on this, but everything I find in the JavaScript world seems to revolve around gathering this information from the actual document URL using <em>location.host</em> or similar.</p>
","<p>Edit: Some complain that it doesn't take into account protocol. So I decided to upgrade the code, since it is marked as answer. For those who like one-line-code... well sorry this why we use code minimizers, code should be human readable and this way is better... in my opinion.</p>

<pre><code>var pathArray = location.href.split( '/' );
var protocol = pathArray[0];
var host = pathArray[2];
var url = protocol + '//' + host;
</code></pre>

<p>Or use <a href=""https://stackoverflow.com/a/6167979/213685"">Davids solution</a> from below.</p>
","1420902"
"What is the max size of localStorage values?","246477","","<p>Since <code>localStorage</code> (currently) only supports strings as values, and in order to do that the objects need to be stringified (stored as JSON-string) before they can be stored, is there a defined limitation regarding the length of the values.</p>

<p>Does anyone know if there is a definition which applies to all browsers?</p>
","<p>Quoting from the <a href=""http://en.wikipedia.org/wiki/Web_Storage"" rel=""noreferrer"">Wikipedia article on Web Storage</a>:</p>

<blockquote>
  <p>Web storage can be viewed simplistically as an improvement on cookies, providing much greater storage capacity (<strong>10 MB per origin in Google Chrome(<a href=""https://plus.google.com/u/0/+FrancoisBeaufort/posts/S5Q9HqDB8bh"" rel=""noreferrer"">https://plus.google.com/u/0/+FrancoisBeaufort/posts/S5Q9HqDB8bh</a>), Mozilla Firefox, and Opera; 10 MB per storage area in Internet Explorer</strong>) and better programmatic interfaces.</p>
</blockquote>

<p>And also quoting from a <a href=""http://ejohn.org/blog/dom-storage/"" rel=""noreferrer"">John Resig article</a> [posted January 2007]:</p>

<blockquote>
  <p><strong>Storage Space</strong></p>
  
  <p>It is implied that, with DOM Storage,
  you have considerably more storage
  space than the typical user agent
  limitations imposed upon Cookies.
  However, the amount that is provided
  is not defined in the specification,
  nor is it meaningfully broadcast by
  the user agent.</p>
  
  <p>If you look at the Mozilla source code
  we can see that 5120KB is the default
  storage size for an entire domain.
  This gives you considerably more space
  to work with than a typical 2KB
  cookie.</p>
  
  <p><strong>However, the size of this storage area
  can be customized by the user</strong> (so a
  5MB storage area is not guaranteed,
  nor is it implied) and the user agent
  (Opera, for example, may only provide
  3MB - but only time will tell.)</p>
</blockquote>
","2989317"
"Deserializing a JSON into a JavaScript object","246427","","<p>I have a string in a Java server application that is accessed using AJAX. It looks something like the following:</p>

<pre><code>var json = [{
    ""adjacencies"": [
        {
          ""nodeTo"": ""graphnode2"",
          ""nodeFrom"": ""graphnode1"",
          ""data"": {
            ""$color"": ""#557EAA""
          }
        }
    ],
    ""data"": {
      ""$color"": ""#EBB056"",
      ""$type"": ""triangle"",
      ""$dim"": 9
    },
    ""id"": ""graphnode1"",
    ""name"": ""graphnode1""
},{
    ""adjacencies"": [],
    ""data"": {
      ""$color"": ""#EBB056"",
      ""$type"": ""triangle"",
      ""$dim"": 9
    },
    ""id"": ""graphnode2"",
    ""name"": ""graphnode2""
}];
</code></pre>

<p>When the string gets pulled from the server, is there an easy way to turn this into a living JavaScript object (or array)? Or do I have to manually split the string and build my object manually?</p>
","<p>Modern browsers support <code>JSON.parse()</code>.</p>

<pre><code>var arr_from_json = JSON.parse( json_string );
</code></pre>

<p>In browsers that don't, you can include <a href=""https://github.com/douglascrockford/JSON-js/blob/master/json2.js"" rel=""noreferrer"">the <code>json2</code> library</a>.</p>
","6487185"
"In jQuery, how do I get the value of a radio button when they all have the same name?","246273","","<p>Here is my code:</p>

<pre><code>&lt;table&gt;
   &lt;tr&gt;
      &lt;td&gt;Sales Promotion&lt;/td&gt;
      &lt;td&gt;&lt;input type=""radio"" name=""q12_3"" value=""1""&gt;1&lt;/td&gt;
      &lt;td&gt;&lt;input type=""radio"" name=""q12_3"" value=""2""&gt;2&lt;/td&gt;
      &lt;td&gt;&lt;input type=""radio"" name=""q12_3"" value=""3""&gt;3&lt;/td&gt;
      &lt;td&gt;&lt;input type=""radio"" name=""q12_3"" value=""4""&gt;4&lt;/td&gt;
      &lt;td&gt;&lt;input type=""radio"" name=""q12_3"" value=""5""&gt;5&lt;/td&gt;
   &lt;/tr&gt;
&lt;/table&gt;
&lt;button id=""submit""&gt;submit&lt;/button&gt;
</code></pre>

<p>Here is JS:</p>

<pre><code>$(function(){
    $(""#submit"").click(function(){      
        alert($('input[name=q12_3]').val());
    });
 });
</code></pre>

<p>Here is <a href=""http://jsfiddle.net/ZkH8n/"">JSFIDDLE</a>! Every time I click button it returns 1. Why? Can anyone help me?</p>
","<p>In your code, jQuery just looks for the first instance of an input with name <code>q12_3</code>, which in this case has a value of <code>1</code>. You want an input with name <code>q12_3</code> that is <a href=""https://api.jquery.com/checked-selector/"" rel=""noreferrer""><code>:checked</code></a>.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>$(""#submit"").click(function() {
  var val = $('input[name=q12_3]:checked').val();
  alert(val);
});</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;

&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;Sales Promotion&lt;/td&gt;
    &lt;td&gt;&lt;input type=""radio"" name=""q12_3"" value=""1""&gt;1&lt;/td&gt;
    &lt;td&gt;&lt;input type=""radio"" name=""q12_3"" value=""2""&gt;2&lt;/td&gt;
    &lt;td&gt;&lt;input type=""radio"" name=""q12_3"" value=""3""&gt;3&lt;/td&gt;
    &lt;td&gt;&lt;input type=""radio"" name=""q12_3"" value=""4""&gt;4&lt;/td&gt;
    &lt;td&gt;&lt;input type=""radio"" name=""q12_3"" value=""5""&gt;5&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
&lt;button id=""submit""&gt;submit&lt;/button&gt;</code></pre>
</div>
</div>
</p>

<p>Note that the above code is <em>not</em> the same as using <code>.is("":checked"")</code>. jQuery's <a href=""http://api.jquery.com/is/"" rel=""noreferrer""><code>is()</code></a> function returns a boolean (true or false) and not (an) element(s).</p>
","18043478"
"how to get GET and POST variables with JQuery?","246155","","<p>How do I simply get <code>GET</code> and <code>POST</code> values with JQuery?</p>

<p>What I want to do is something like this:</p>

<pre><code>$('#container-1 &gt; ul').tabs().tabs('select', $_GET('selectedTabIndex'));
</code></pre>
","<p>For GET parameters, you can grab them from <code>document.location.search</code>:</p>

<pre><code>var $_GET = {};

document.location.search.replace(/\??(?:([^=]+)=([^&amp;]*)&amp;?)/g, function () {
    function decode(s) {
        return decodeURIComponent(s.split(""+"").join("" ""));
    }

    $_GET[decode(arguments[1])] = decode(arguments[2]);
});

document.write($_GET[""test""]);
</code></pre>

<p>For POST parameters, you can serialize the <code>$_POST</code> object in JSON format into a <code>&lt;script&gt;</code> tag:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
var $_POST = &lt;?php echo json_encode($_POST); ?&gt;;

document.write($_POST[""test""]);
&lt;/script&gt;
</code></pre>

<p>While you're at it (doing things on server side), you might collect the GET parameters on PHP as well:</p>

<pre><code>var $_GET = &lt;?php echo json_encode($_GET); ?&gt;;
</code></pre>

<p><strong>Note:</strong> You'll need PHP version 5 or higher to use the built-in <code>json_encode</code> function.</p>

<hr>

<p><strong>Update:</strong> Here's a more generic implementation:</p>

<pre><code>function getQueryParams(qs) {
    qs = qs.split(""+"").join("" "");
    var params = {},
        tokens,
        re = /[?&amp;]?([^=]+)=([^&amp;]*)/g;

    while (tokens = re.exec(qs)) {
        params[decodeURIComponent(tokens[1])]
            = decodeURIComponent(tokens[2]);
    }

    return params;
}

var $_GET = getQueryParams(document.location.search);
</code></pre>
","439578"
"Ajax request returns 200 OK, but an error event is fired instead of success","245705","","<p>I have implemented an Ajax request on my website, and I am calling the endpoint from a webpage. It always returns <strong>200 OK</strong>, but jQuery executes the error event. I tried a lot of things, but I could not figure out the problem. I am adding my code below:</p>

<h3>jQuery Code</h3>

<pre><code>var row = ""1"";
var json = ""{'TwitterId':'"" + row + ""'}"";
$.ajax({
    type: 'POST',
    url: 'Jqueryoperation.aspx?Operation=DeleteRow',
    contentType: 'application/json; charset=utf-8',
    data: json,
    dataType: 'json',
    cache: false,
    success: AjaxSucceeded,
    error: AjaxFailed
});
function AjaxSucceeded(result) {
    alert(""hello"");
    alert(result.d);
}
function AjaxFailed(result) {
    alert(""hello1"");
    alert(result.status + ' ' + result.statusText);
}
</code></pre>

<h3>C# code for <code>JqueryOpeartion.aspx</code></h3>

<pre><code>protected void Page_Load(object sender, EventArgs e) {
    test();
}
private void test() {
    Response.Write(""&lt;script language='javascript'&gt;alert('Record Deleted');&lt;/script&gt;"");
}
</code></pre>

<p>I need the <code>(""Record deleted"")</code> string after successful deletion. I am able to delete the content, but I am not getting this message. Is this correct or am I doing anything wrong? What is the correct way to solve this issue?</p>
","<p>Your Ajax request contains the following setting:</p>

<pre><code>dataType: ""json""
</code></pre>

<p><a href=""http://api.jquery.com/jQuery.ajax/"" rel=""noreferrer"">The documentation</a> states that jQuery:</p>

<blockquote>
  <p>Evaluates the response as JSON and returns a JavaScript object. (...)
  The JSON data is parsed in a strict manner; any malformed JSON is
  rejected and a parse error is thrown.</p>
</blockquote>

<p>This means that if the server returns invalid JSON with a <code>200 OK</code> status then jQuery fires the error function and set the <code>textStatus</code> parameter to <code>""parsererror""</code>.</p>

<p>Solution: Make sure that the server returns <strong>valid</strong> JSON. It is worth noting that an empty response is also considered invalid JSON; you could return <code>{}</code> or <code>null</code> for example which validate as JSON.</p>

<p>You can check whether a JSON is valid or not on <a href=""http://jsonlint.com"" rel=""noreferrer"">jsonlint.com</a>.</p>
","6186905"
"Can (a ==1 && a== 2 && a==3) ever evaluate to true?","245562","","<p>Is it ever possible that <code>(a ==1 &amp;&amp; a== 2 &amp;&amp; a==3)</code> could evaluate to <code>true</code>, in JavaScript?</p>

<p>This is interview question asked by a major tech company. My answer was that it's impossible. They said nothing is impossible. It happened 2 weeks back, but I'm still trying to find the answer. I know we never write such code in our day to day job, but I'm curious.</p>
","<p>If you take advantage of <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using"" rel=""noreferrer"">how <code>==</code> works</a>, you could simply create an object with a custom <code>toString</code> (or <code>valueOf</code>) function that changes what it returns each time it is used such that it satisfies all three conditions.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const a = {
  i: 1,
  toString: function () {
    return a.i++;
  }
}

if(a == 1 &amp;&amp; a == 2 &amp;&amp; a == 3) {
  console.log('Hello World!');
}</code></pre>
</div>
</div>
</p>

<hr>

<p>The reason this works is due to the use of the loose equality operator. When using loose equality, if one of the operands is of a different type than the other, the engine will attempt to convert one to the other. In the case of an object on the left and a number on the right, it will attempt to convert the object to a number by first calling <code>valueOf</code> if it is callable, and failing that, it will call <code>toString</code>. I used <code>toString</code> in this case simply because it's what came to mind, <code>valueOf</code> would make more sense. If I instead returned a string from <code>toString</code>, the engine would have then attempted to convert the string to a number giving us the same end result, though with a slightly longer path.</p>
","48270314"
"call javascript function on hyperlink click","245481","","<p>I am dynamically creating a hyperlink in the c# code behind file of ASP.NET. I need to call a JavaScript function on client click. how do i accomplish this?</p>
","<p>Neater still, instead of the <code>typical href=""#""</code> or <code>href=""javascript:void""</code> or <code>href=""whatever""</code>, I think this makes much more sense:</p>

<pre><code>var el = document.getElementById('foo');
el.onclick = showFoo;


function showFoo() {
  alert('I am foo!');
  return false;
}

&lt;a href=""no-javascript.html"" title=""Get some foo!"" id=""foo""&gt;Show me some foo&lt;/a&gt;
</code></pre>

<p>If Javascript fails, there is some feedback. Furthermore, erratic behavior (page jumping in the case of <code>href=""#""</code>, visiting the same page in the case of <code>href=""""</code>) is eliminated.</p>
","1265941"
"Jquery - Create hidden form element on the fly","245137","","<p>What is the simplest way to dynamically create a hidden input form field using jquery?</p>
","<pre><code>$('&lt;input&gt;').attr('type','hidden').appendTo('form');
</code></pre>

<p>To answer your second question:</p>

<pre><code>$('&lt;input&gt;').attr({
    type: 'hidden',
    id: 'foo',
    name: 'bar'
}).appendTo('form');
</code></pre>
","2408098"
"Difference between variable declaration syntaxes in Javascript (including global variables)?","244932","","<p>Is there any difference between declaring a variable:</p>

<pre><code>var a=0; //1
</code></pre>

<p>...this way:</p>

<pre><code>a=0; //2
</code></pre>

<p>...or:</p>

<pre><code>window.a=0; //3
</code></pre>

<p>in global scope?</p>
","<p>Yes, there are a couple of differences, though in practical terms they're not usually big ones.</p>

<p>There's a fourth way, and as of ES2015 (ES6) there's two more. I've added the fourth way at the end, but inserted the ES2015 ways after #1 (you'll see why), so we have:</p>

<pre><code>var a = 0;     // 1
let a = 0;     // 1.1 (new with ES2015)
const a = 0;   // 1.2 (new with ES2015)
a = 0;         // 2
window.a = 0;  // 3
this.a = 0;    // 4
</code></pre>

<h3>Those statements explained</h3>

<p><strong>#1 <code>var a = 0;</code></strong></p>

<p>This creates a global variable which is also a property of the <a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-global-object"" rel=""noreferrer""><em>global object</em></a>, which we access as <code>window</code> on browsers (or via <code>this</code> a global scope, in non-strict code). Unlike some other properties, the property cannot be removed via <code>delete</code>.</p>

<p>In specification terms, it creates an <em>identifier binding</em> on the <em>object <a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-environment-records"" rel=""noreferrer"">Environment Record</a></em> for the <a href=""http://www.ecma-international.org/ecma-262/6.0/index.html#sec-global-environment-records"" rel=""noreferrer""><em>global environment</em></a>. That makes it a property of the global object because the global object is where identifier bindings for the global environment's object Environment Record are held. This is why the property is non-deletable: It's not just a simple property, it's an identifier binding.</p>

<p>The binding (variable) is defined before the first line of code runs (see ""When <code>var</code> happens"" below).</p>

<p>Note that on IE8 and earlier, the property created on <code>window</code> is not <em>enumerable</em> (doesn't show up in <code>for..in</code> statements). In IE9, Chrome, Firefox, and Opera, it's enumerable.</p>

<hr>

<p><strong>#1.1 <code>let a = 0;</code></strong></p>

<p>This creates a global variable which is <em>not</em> a property of the global object. This is a new thing as of ES2015.</p>

<p>In specification terms, it creates an identifier binding on the <em>declarative</em> Environment Record for the global environment rather than the <em>object</em> Environment Record. The global environment is unique in having a split Environment Record, one for all the old stuff that goes on the global object (the <em>object</em> Environment Record) and another for all the new stuff (<code>let</code>, <code>const</code>, and the functions created by <code>class</code>) that don't go on the global object.</p>

<p>The binding is <em>created</em> before any step-by-step code in its enclosing block is executed (in this case, before any global code runs), but it's not <em>accessible</em> in any way until the step-by-step execution reaches the <code>let</code> statement. Once execution reaches the <code>let</code> statement, the variable is accessible. (See ""When <code>let</code> and <code>const</code> happen"" below.)</p>

<hr>

<p><strong>#1.2 <code>const a = 0;</code></strong></p>

<p>Creates a global constant, which is not a property of the global object.</p>

<p><code>const</code> is exactly like <code>let</code> except that you must provide an initializer (the <code>= value</code> part), and you cannot change the value of the constant once it's created. Under the covers, it's exactly like <code>let</code> but with a flag on the identifier binding saying its value cannot be changed. Using <code>const</code> does three things for you:</p>

<ol>
<li>Makes it a parse-time error if you try to assign to the constant.</li>
<li>Documents its unchanging nature for other programmers.</li>
<li>Lets the JavaScript engine optimize on the basis that it won't change.</li>
</ol>

<hr>

<p><strong>#2 <code>a = 0;</code></strong></p>

<p>This creates a property on the global object <em>implicitly</em>. As it's a normal property, you can delete it. I'd recommend <em>not</em> doing this, it can be unclear to anyone reading your code later.</p>

<p>And interestingly, again on IE8 and earlier, the property created not <em>enumerable</em> (doesn't show up in <code>for..in</code> statements). That's odd, particularly given #3 below.</p>

<hr>

<p><strong>#3 <code>window.a = 0;</code></strong></p>

<p>This creates a property on the global object explicitly, using the <code>window</code> global that refers to the global object (on browsers; some non-browser environments have an equivalent global variable, such as <code>global</code> on NodeJS). As it's a normal property, you can delete it.</p>

<p>This property <strong>is</strong> enumerable, on IE8 and earlier, and on every other browser I've tried.</p>

<hr>

<p><strong>#4 <code>this.a = 0;</code></strong></p>

<p>Exactly like #3, except we're referencing the global object through <code>this</code> instead of the global <code>window</code>. This won't work in strict mode, though, because in strict mode global code, <code>this</code> doesn't have a reference to the global object (it has the value <code>undefined</code> instead).</p>

<hr>

<h3>Deleting properties</h3>

<p>What do I mean by ""deleting"" or ""removing"" <code>a</code>? Exactly that: Removing the property (entirely) via the <code>delete</code> keyword:</p>

<pre><code>window.a = 0;
display(""'a' in window? "" + ('a' in window)); // displays ""true""
delete window.a;
display(""'a' in window? "" + ('a' in window)); // displays ""false""
</code></pre>

<p><code>delete</code> completely removes a property from an object. You can't do that with properties added to <code>window</code> indirectly via <code>var</code>, the <code>delete</code> is either silently ignored or throws an exception (depending on the JavaScript implementation and whether you're in strict mode).</p>

<p><strong>Warning</strong>: IE8 again (and presumably earlier, and IE9-IE11 in the broken ""compatibility"" mode): It won't let you delete properties of the <code>window</code> object, even when you should be allowed to. Worse, it throws an <em>exception</em> when you try (<a href=""http://jsbin.com/enayud"" rel=""noreferrer"">try this experiment</a> in IE8 and in other browsers). So when deleting from the <code>window</code> object, you have to be defensive:</p>

<pre><code>try {
    delete window.prop;
}
catch (e) {
    window.prop = undefined;
}
</code></pre>

<p>That tries to delete the property, and if an exception is thrown it does the next best thing and sets the property to <code>undefined</code>.</p>

<p>This <strong>only</strong> applies to the <code>window</code> object, and only (as far as I know) to IE8 and earlier (or IE9-IE11 in the broken ""compatibility"" mode). Other browsers are fine with deleting <code>window</code> properties, subject to the rules above.</p>

<hr>

<h3>When <code>var</code> happens</h3>

<p>The variables defined via the <code>var</code> statement are created before <em>any</em> step-by-step code in the execution context is run, and so the property exists well <em>before</em> the <code>var</code> statement.</p>

<p>This can be confusing, so let's take a look:</p>

<pre><code>display(""foo in window? "" + ('foo' in window)); // displays ""true""
display(""window.foo = "" + window.foo);          // displays ""undefined""
display(""bar in window? "" + ('bar' in window)); // displays ""false""
display(""window.bar = "" + window.bar);          // displays ""undefined""
var foo = ""f"";
bar = ""b"";
display(""foo in window? "" + ('foo' in window)); // displays ""true""
display(""window.foo = "" + window.foo);          // displays ""f""
display(""bar in window? "" + ('bar' in window)); // displays ""true""
display(""window.bar = "" + window.bar);          // displays ""b""
</code></pre>

<p><strong>Live example:</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>display(""foo in window? "" + ('foo' in window)); // displays ""true""
display(""window.foo = "" + window.foo);          // displays ""undefined""
display(""bar in window? "" + ('bar' in window)); // displays ""false""
display(""window.bar = "" + window.bar);          // displays ""undefined""
var foo = ""f"";
bar = ""b"";
display(""foo in window? "" + ('foo' in window)); // displays ""true""
display(""window.foo = "" + window.foo);          // displays ""f""
display(""bar in window? "" + ('bar' in window)); // displays ""true""
display(""window.bar = "" + window.bar);          // displays ""b""

function display(msg) {
  var p = document.createElement('p');
  p.innerHTML = msg;
  document.body.appendChild(p);
}</code></pre>
</div>
</div>
</p>

<p>As you can see, the symbol <code>foo</code> is defined before the first line, but the symbol <code>bar</code> isn't. Where the <code>var foo = ""f"";</code> statement is, there are really two things: defining the symbol, which happens before the first line of code is run; and doing an assignment to that symbol, which happens where the line is in the step-by-step flow. This is known as ""<code>var</code> hoisting"" because the <code>var foo</code> part is moved (""hoisted"") to the top of the scope, but the <code>foo = ""f""</code> part is left in its original location. (See <a href=""http://blog.niftysnippets.org/2008/03/poor-misunderstood-var.html"" rel=""noreferrer""><em>Poor misunderstood <code>var</code></em></a> on my anemic little blog.)</p>

<hr>

<h3>When <code>let</code> and <code>const</code> happen</h3>

<p><code>let</code> and <code>const</code> are different from <code>var</code> in a couple of ways. The way that's relevant to the question is that although the binding they define is created before any step-by-step code runs, it's not <em>accessible</em> until the <code>let</code> or <code>const</code> statement is reached.</p>

<p>So while this runs:</p>

<pre><code>display(a);    // undefined
var a = 0;
display(a);    // 0
</code></pre>

<p>This throws an error:</p>

<pre><code>display(a);    // ReferenceError: a is not defined
let a = 0;
display(a);
</code></pre>

<p>The other two ways that <code>let</code> and <code>const</code> differ from <code>var</code>, which aren't really relevant to the question, are:</p>

<ol>
<li><p><code>var</code> always applies to the entire execution context (throughout global code, or throughout function code in the function where it appears), but <code>let</code> and <code>const</code> apply only within the <em>block</em> where they appear. That is, <code>var</code> has function (or global) scope, but <code>let</code> and <code>const</code> have block scope.</p></li>
<li><p>Repeating <code>var a</code> in the same context is harmless, but if you have <code>let a</code> (or <code>const a</code>), having another <code>let a</code> or a <code>const a</code> or a <code>var a</code> is a syntax error.</p></li>
</ol>

<p>Here's an example demonstrating that <code>let</code> and <code>const</code> take effect immediately in their block before any code within that block runs, but aren't accessible until the <code>let</code> or <code>const</code> statement:</p>

<pre><code>var a = 0;
console.log(a);
if (true)
{
  console.log(a); // ReferenceError: a is not defined
  let a = 1;
  console.log(a);
}
</code></pre>

<p>Note that the second <code>console.log</code> fails, instead of accessing the <code>a</code> from outside the block.</p>

<hr>

<h3>Off-topic: Avoid cluttering the global object (<code>window</code>)</h3>

<p>The <code>window</code> object gets very, very cluttered with properties. Whenever possible, strongly recommend not adding to the mess. Instead, wrap up your symbols in a little package and export at <em>most</em> one symbol to the <code>window</code> object. (I frequently don't export <em>any</em> symbols to the <code>window</code> object.) You can use a function to contain all of your code in order to contain your symbols, and that function can be anonymous if you like:</p>

<pre><code>(function() {
    var a = 0; // `a` is NOT a property of `window` now

    function foo() {
        alert(a);   // Alerts ""0"", because `foo` can access `a`
    }
})();
</code></pre>

<p>In that example, we define a function and have it executed right away (the <code>()</code> at the end).</p>

<p>A function used in this way is frequently called a <em>scoping function</em>. Functions defined within the scoping function can access variables defined in the scoping function because they're <em>closures</em> over that data (see: <a href=""http://blog.niftysnippets.org/2008/02/closures-are-not-complicated.html"" rel=""noreferrer""><em>Closures are not complicated</em></a> on my anemic little blog).</p>
","4862268"
"Failed to load resource: the server responded with a status of 500 (Internal Server Error) in Bind function","244703","","<p>I'm trying to send a call using ajax but in Chrome it is rising error but in firefox there is no error. But still it can't calling the method. I tried to record my call in firebug but there is no call request in firebug. So that's the reason there is no error in firefox.</p>

<p><b>Index.chshtml</b> code is below</p>

<pre><code>function onLoad(e) {

    var grid = $(this).data(""tGrid"");
    //bind to the context menu of the Grid's header
    event.preventDefault();
    $(this).find("".t-grid-header"").bind('contextmenu', function (e) {
        //wait for the menu to be generated
        setTimeout(function () {
            // bind to the checkboxes change event. The context menu has ID in the format ""GridName"" + ""_contextmenu""
            $('#globalsearchgrid_contextMenu :checkbox').change(function () {
                debugger;
                var $checkbox = $(this);
                // the checked state will determine if the column has been shown or hidden
                var checked = $(this).is("":checked"");
                // get the index and the corresponding column from the Grid's column collection
                var columnIndex = $(this).data(""field"");

                var request = ""{'columnIndex':'"" + columnIndex + ""'value':'"" + checked + ""'}"";
                $.ajax({
                    type: ""POST"",
                    url: ""../../GlobalSearch/SaveColumnInfo"",
                    data: request,
                    contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    success: function (msg) { },
                    error: function (xhr, status, error) {
                        alert(error.responseTextss);
                    }

                });
            });
        });
    });
}
</code></pre>

<p><b>Controller method</b></p>

<pre><code> public JsonResult SaveColumnInfo(string columnIndex, string value)
    {
        CookieHelper helper=new CookieHelper();
        helper.UpdateCookie(int.Parse(columnIndex), value.ToString());

        return Json(""Success"");
    }
</code></pre>

<p><b>Error in chrome</b></p>

<pre><code>    POST http://localhost:3577/GlobalSearch/SaveColumnInfo 500 (Internal Server Error) 
    jQuery.ajaxTransport.send 
    jQuery.extend.ajax 
    (anonymous function) 
    jQuery.event.handle 
    jQuery.event.add.elemData.handle.eventHandle
</code></pre>
","<p>The 500 code would normally indicate an error on the server, not anything with your code. Some thoughts</p>

<ul>
<li>Talk to the server developer for more info. You can't get more info directly.</li>
<li>Verify your arguments into the call (values). Look for anything you might think could cause a problem for the server process. The process should not die and should return you a better code, but bugs happen there also.</li>
<li>Could be intermittent, like if the server database goes down. May be worth trying at another time.</li>
</ul>
","19180823"
"How to capitalize first letter of each word, like a 2-word city?","244549","","<p>My JS woks well when the city has one word:</p>

<ul>
<li>cHIcaGO ==> Chicago</li>
</ul>

<p>But when it's</p>

<ul>
<li>san diego ==> San diego</li>
</ul>

<p>How do I make it become San Diego?</p>

<pre><code>function convert_case() {
    document.profile_form.city.value =
        document.profile_form.city.value.substr(0,1).toUpperCase() + 
        document.profile_form.city.value.substr(1).toLowerCase();
}
</code></pre>
","<p>There's a good answer <a href=""https://stackoverflow.com/questions/196972/convert-string-to-proper-case-with-javascript/196991#196991"">here</a>:</p>

<pre><code>function toTitleCase(str)
{
    return str.replace(/\w\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});
}
</code></pre>
","4878800"
"Javascript change date into format of (dd/mm/yyyy)","243975","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/11591854/format-date-to-mm-dd-yyyy-in-javascript"">Format date to MM/dd/yyyy in javascript</a>  </p>
</blockquote>



<p>How can I convert the following date format below (Mon Nov 19 13:29:40 2012)</p>

<p>into:</p>

<p>dd/mm/yyyy</p>

<pre><code>&lt;html&gt;
    &lt;head&gt;
    &lt;script type=""text/javascript""&gt;
      function test(){
         var d = Date()
         alert(d)
      }
    &lt;/script&gt;
    &lt;/head&gt;

&lt;body&gt;
    &lt;input onclick=""test()"" type=""button"" value=""test"" name=""test""&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
","<p>Some JavaScript engines can parse that format directly, which makes the task pretty easy:</p>

<pre class=""lang-javascript prettyprint-override""><code>function convertDate(inputFormat) {
  function pad(s) { return (s &lt; 10) ? '0' + s : s; }
  var d = new Date(inputFormat);
  return [pad(d.getDate()), pad(d.getMonth()+1), d.getFullYear()].join('/');
}
</code></pre>
","13459946"
"change type of input field with jQuery","243538","","<pre class=""lang-js prettyprint-override""><code>$(document).ready(function() {
    // #login-box password field
    $('#password').attr('type', 'text');
    $('#password').val('Password');
});
</code></pre>

<p>This is supposed to change the <code>#password</code> input field (with <code>id=""password""</code>) that is of <code>type</code> <code>password</code> to a normal text field, and then fill in the text “Password”.</p>

<p>It doesn’t work, though. Why?</p>

<p>Here is the form:</p>

<pre class=""lang-html prettyprint-override""><code>&lt;form enctype=""application/x-www-form-urlencoded"" method=""post"" action=""/auth/sign-in""&gt;
  &lt;ol&gt;
    &lt;li&gt;
      &lt;div class=""element""&gt;
        &lt;input type=""text"" name=""username"" id=""username"" value=""Prihlasovacie meno"" class=""input-text"" /&gt;
      &lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div class=""element""&gt;
        &lt;input type=""password"" name=""password"" id=""password"" value="""" class=""input-text"" /&gt;
      &lt;/div&gt;
    &lt;/li&gt;
    &lt;li class=""button""&gt;
      &lt;div class=""button""&gt;
        &lt;input type=""submit"" name=""sign_in"" id=""sign_in"" value=""Prihlásiť"" class=""input-submit"" /&gt;
      &lt;/div&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/form&gt;
</code></pre>
","<p>It's very likely this action is prevented as part of the browser's security model.</p>

<p>Edit: indeed, testing right now in Safari, I get the error <code>type property cannot be changed</code>.</p>

<p>Edit 2: that seems to be an error straight out of jQuery. Using the following straight DOM code works just fine:</p>

<pre><code>var pass = document.createElement('input');
pass.type = 'password';
document.body.appendChild(pass);
pass.type = 'text';
pass.value = 'Password';
</code></pre>

<p>Edit 3: Straight from the jQuery source, this seems to be related to IE (and could either be a bug or part of their security model, but jQuery isn't specific):</p>

<pre><code>// We can't allow the type property to be changed (since it causes problems in IE)
if ( name == ""type"" &amp;&amp; jQuery.nodeName( elem, ""input"" ) &amp;&amp; elem.parentNode )
    throw ""type property can't be changed"";
</code></pre>
","1544338"
"How to load json into my angular.js ng-model?","243510","","<p>I have what I think is probably a very obvious question, but I couldn't find an answer anywhere.</p>

<p>I am just trying to load some JSON data from my server into the client. Right now, I am using JQuery to load it with an AJAX call (code below).</p>

<pre><code>&lt;script type=""text/javascript""&gt;
var global = new Array();
$.ajax({
    url: ""/json"",
    success: function(reports){
        global = reports;
        return global;
        }
    });
&lt;/script&gt;
</code></pre>

<p>This is located in the html file. It works so far, but the issue is that I want to use AngularJS. Now, while Angular CAN use the variables, i cannot load the whole thing into a variable so I can use a for each loop. This seems to be related to the ""$Scope"", which is usually located in the .js file.</p>

<p>The problem is that I cannot load code from other pages into a .js file. Every example of Angular only shows stuff like this:</p>

<pre><code>function TodoCtrl($scope) {
  $scope.todos = [
    {text:'learn angular', done:true},
    {text:'build an angular app', done:false}];
</code></pre>

<p>So, this is useful, if I 
A) Want to type all of this by hand, AND 
B) If I know in advance what all my data is...</p>

<p>I don't know in advance (the data is dynamic) and I don't want to type it. </p>

<p>So, when I tried to change the AJAX call to Angular using $Resource, it doesn't seem to work. Maybe I can't figure it out, but it is a relatively simple GET request for JSON data.</p>

<p><strong>tl:dr I can't get AJAX calls to work in order to load external data into an angular model.</strong></p>
","<p>As Kris mentions, you can use the <code>$resource</code> service to interact with the server, but I get the impression you are beginning your journey with Angular - I was there last week - so I recommend to start experimenting directly with the <code>$http</code> service. In this case you can call its <code>get</code> method.</p>

<p>If you have the following JSON</p>

<pre><code>[{ ""text"":""learn angular"", ""done"":true },
 { ""text"":""build an angular app"", ""done"":false},
 { ""text"":""something"", ""done"":false },
 { ""text"":""another todo"", ""done"":true }]
</code></pre>

<p>You can load it like this</p>

<pre><code>var App = angular.module('App', []);

App.controller('TodoCtrl', function($scope, $http) {
  $http.get('todos.json')
       .then(function(res){
          $scope.todos = res.data;                
        });
});
</code></pre>

<p>The <code>get</code> method returns a <em>promise</em> object which
first argument is a <em>success</em> callback and the second an <em>error</em>
callback.</p>

<p>When you add <code>$http</code> as a parameter of a function Angular does it magic
and injects the <code>$http</code> resource into your controller.</p>

<p>I've put some examples here</p>

<ul>
<li><a href=""http://plnkr.co/edit/Wuc6M7?p=preview"" rel=""noreferrer"">http://plnkr.co/edit/Wuc6M7?p=preview</a></li>
<li><a href=""https://gist.github.com/3938567"" rel=""noreferrer"">https://gist.github.com/3938567</a></li>
</ul>
","13031318"
"How to check whether an object is a date?","243289","","<p>I have an annoying bug in on a webpage: ""date.GetMonth() is not a function"". So I suppose that I am doing something wrong since somewhere and the object date is not an object of type Date. <strong>How can I check for a datatype in Javascript?</strong> I tried to add a <em>if(date)</em> but it doesn't work.</p>

<pre><code>function getFormatedDate(date) {
    if (date) {
       var month = date.GetMonth();
    }
}
</code></pre>

<p>So if I want to write defensive code and prevent the date (which is not one) to be formatted, how do I do that?</p>

<p>Thanks!</p>

<p><strong>UPDATE:</strong> I don't want to check the format of the date, but I want to be sure that the parameter passed to the method getFormatedDate is of type Date.</p>
","<p>As an alternative to duck typing via</p>

<pre><code>typeof date.getMonth === 'function'
</code></pre>

<p>you can use the <code>instanceof</code> operator, i.e. But it will return true for invalid dates too, e.g. <code>new Date('random_string')</code> is also instance of Date</p>

<pre><code>date instanceof Date
</code></pre>

<p>This will fail if objects are passed across frame boundaries.</p>

<p>A work-around for this is to check the object's class via</p>

<pre><code>Object.prototype.toString.call(date) === '[object Date]'
</code></pre>
","643827"
"Serializing an object to JSON","243253","","<p>How can I serialize an object to JSON in JavaScript?</p>
","<p>You're looking for <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify"" rel=""noreferrer""><code>JSON.stringify()</code></a>.</p>
","558534"
"jQuery load more data on scroll","243103","","<p>I am just wondering how can i implement more data on scroll only if the div.loading is visible.</p>

<p>Usually we look for page height and scroll height, to see if we need to load more data. but the following example is little complicated then that.</p>

<p>Following image is perfect example. there are two .loading div's on the drop down box. When user scroll the content, whichever is visible it should start loading more data for it.</p>

<p><img src=""https://i.stack.imgur.com/IKHNl.png"" alt=""enter image description here""></p>

<p>So how can i find out if .loading div is visible to user yet or not? So i can start loading data for that div only.</p>
","<p>In jQuery, check whether you have hit the bottom of page using scroll  function. Once you hit that, make an ajax call (you can show a loading  image here till ajax response) and get the next set of data, append it  to the div.  This function gets executed as you scroll down the page  again.</p>

<pre><code>$(window).scroll(function() {
    if($(window).scrollTop() == $(document).height() - $(window).height()) {
           // ajax call get data from server and append to the div
    }
});
</code></pre>
","17078097"
"Generating PDF files with JavaScript","243064","","<p>I’m trying to convert XML data into PDF files from a web page and I was hoping I could do this entirely within JavaScript. I need to be able to draw text, images and simple shapes. I would love to be able to do this entirely in the browser.</p>
","<p>I've just written a library called <a href=""https://github.com/MrRio/jsPDF"" rel=""noreferrer"">jsPDF</a> which generates PDFs using Javascript alone. It's still very young, and I'll be adding features and bug fixes soon. Also got a few ideas for workarounds in browsers that do not support Data URIs. It's licensed under a liberal MIT license. </p>

<p>I came across this question before I started writing it and thought I'd come back and let you know :)</p>

<p><a href=""https://github.com/MrRio/jsPDF"" rel=""noreferrer"">Generate PDFs in Javascript</a></p>
","778897"
"How to resize images proportionally / keeping the aspect ratio?","243064","","<p>I have images that will be quite big in dimension and I want to shrink them down with jQuery while keeping the proportions constrained, i.e. the same aspect ratio.</p>

<p>Can someone point me to some code, or explain the logic?</p>
","<p>Have a look at this piece of code from <a href=""http://ericjuden.com/2009/07/jquery-image-resize/"" rel=""noreferrer"">http://ericjuden.com/2009/07/jquery-image-resize/</a></p>

<pre><code>$(document).ready(function() {
    $('.story-small img').each(function() {
        var maxWidth = 100; // Max width for the image
        var maxHeight = 100;    // Max height for the image
        var ratio = 0;  // Used for aspect ratio
        var width = $(this).width();    // Current image width
        var height = $(this).height();  // Current image height

        // Check if the current width is larger than the max
        if(width &gt; maxWidth){
            ratio = maxWidth / width;   // get ratio for scaling image
            $(this).css(""width"", maxWidth); // Set new width
            $(this).css(""height"", height * ratio);  // Scale height based on ratio
            height = height * ratio;    // Reset height to match scaled image
            width = width * ratio;    // Reset width to match scaled image
        }

        // Check if current height is larger than max
        if(height &gt; maxHeight){
            ratio = maxHeight / height; // get ratio for scaling image
            $(this).css(""height"", maxHeight);   // Set new height
            $(this).css(""width"", width * ratio);    // Scale width based on ratio
            width = width * ratio;    // Reset width to match scaled image
            height = height * ratio;    // Reset height to match scaled image
        }
    });
});
</code></pre>
","3971875"
"Is there an equivalent for var_dump (PHP) in Javascript?","243011","","<p>We need to see what methods/fields an object has in Javascript.</p>
","<p>As the others said, you can use Firebug, and that will sort you out no worries on Firefox. Chrome &amp; Safari both have a built-in developer console which has an almost identical interface to Firebug's console, so your code should be portable across those browsers. For other browsers, there's <a href=""http://getfirebug.com/lite.html"" rel=""noreferrer"">Firebug Lite</a>.</p>

<p>If Firebug isn't an option for you, then try this simple script:</p>

<pre><code>function dump(obj) {
    var out = '';
    for (var i in obj) {
        out += i + "": "" + obj[i] + ""\n"";
    }

    alert(out);

    // or, if you wanted to avoid alerts...

    var pre = document.createElement('pre');
    pre.innerHTML = out;
    document.body.appendChild(pre)
}
</code></pre>

<p>I'd recommend against alerting each individual property: some objects have a LOT of properties and you'll be there all day clicking ""OK"", ""OK"", ""OK"", ""O... dammit that was the property I was looking for"".</p>
","323809"
"How to create a hash or dictionary object in JavaScript","242884","","<p>I want to create a map object in javascript. I came to the following idea:</p>

<pre><code> var a = new Array();
 a[""key1""] = ""value1"";
 a[""key2""] = ""value2"";
</code></pre>

<p>but then how I can find if a particular key exists or not?</p>
","<p>Don't use an array if you want named keys, use a plain object.</p>

<pre><code>var a = {};
a[""key1""] = ""value1"";
a[""key2""] = ""value2"";
</code></pre>

<p>Then:</p>

<pre><code>if (""key1"" in a) {
   // something
} else {
   // something else 
}
</code></pre>
","6298207"
"Get JSON data from external URL and display it in a div as plain text","242818","","<p>I have an external resource similar to <a href=""https://www.googleapis.com/freebase/v1/text/en/bob_dylan"">https://www.googleapis.com/freebase/v1/text/en/bob_dylan</a> which returns a JSON. I want to display the value of result key in a div in html (lets say the name of the div is ""summary""). Also the value of result key should be displayed in plain text.<br>
The URL returns the json:</p>

<blockquote>
  <p>{  ""result"": ""Bob Dylan, born Robert Allen Zimmerman, is an American
  singer-songwriter, author, poet, and painter, who has been a major
  figure in popular music for five decades. Much of Dylan's most
  celebrated work dates from the 1960s, when he became an ......."" }</p>
</blockquote>

<p>The JSON has just the result key, no other keys<br>
Basically I do not want to use anything other than plain HTML and JavaScript. I am a relative beginner to JavaScript and therefore I ask for commented code.</p>
","<p>You can do this with JSONP like this:</p>

<pre><code>function insertReply(content) {
    document.getElementById('output').innerHTML = content;
}

// create script element
var script = document.createElement('script');
// assing src with callback name
script.src = 'http://url.to.json?callback=insertReply';
// insert script to document and load content
document.body.appendChild(script);
</code></pre>

<p>But source must be aware that you want it to call function passed as callback parameter to it.</p>

<p>With google API it would look like this:</p>

<pre><code>function insertReply(content) {
    document.getElementById('output').innerHTML = content;
}

// create script element
var script = document.createElement('script');
// assing src with callback name
script.src = 'https://www.googleapis.com/freebase/v1/text/en/bob_dylan?callback=insertReply';
// insert script to document and load content
document.body.appendChild(script);
</code></pre>

<p>Check how data looks like when you pass callback to google api:
<a href=""https://www.googleapis.com/freebase/v1/text/en/bob_dylan?callback=insertReply"" rel=""noreferrer"">https://www.googleapis.com/freebase/v1/text/en/bob_dylan?callback=insertReply</a></p>

<p>Here is quite good explanation of JSONP: <a href=""http://en.wikipedia.org/wiki/JSONP"" rel=""noreferrer"">http://en.wikipedia.org/wiki/JSONP</a></p>
","9922373"
"JavaScript: Is there a way to get Chrome to break on all errors?","242810","","<p>I am looking for an equivalent in Chrome to the ""break on all errors"" functionality of Firebug. In the Scripts tab, Chrome has a ""pause on all exceptions"", but this is not quite the same as breaking on all errors.</p>

<p>For instance, when loading a page with the following code, I would like Chrome to break on the line <code>foo.bar = 42</code>. Instead, even when enabling the ""Pause on all exceptions"", I don't get the expected result.</p>

<pre><code>&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Strict//EN""
        ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd""&gt;
&lt;html xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""en"" lang=""en""&gt;
    &lt;head&gt;
        &lt;script type=""text/javascript""&gt;

            function doError() {
                foo.bar = 42;
            }

            window.onload = function() {
                try {
                    doError();
                } catch (e) {
                    console.log(""Error"", e);
                }
            }
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>You can try the code pasted above on <a href=""http://dl.dropbox.com/u/6900/try/ee-chrome-errors.html"" rel=""noreferrer"">this page</a> or using this <a href=""http://jsfiddle.net/avernet/KvjNB/"" rel=""noreferrer"">jsFiddle</a>.</p>
","<p>Edit: <strong>The original link I answered with is now invalid</strong>.The newer URL would be <a href=""https://developers.google.com/web/tools/chrome-devtools/javascript/add-breakpoints#exceptions"" rel=""noreferrer"">https://developers.google.com/web/tools/chrome-devtools/javascript/add-breakpoints#exceptions</a> as of 2016-11-11.</p>

<p>I realize this question has an answer, but it's no longer accurate. <strong>Use the link above ^</strong></p>

<hr>

<p>(link replaced by edited above) - you can now set it to break on all exceptions or just unhandled ones. (Note that you need to be in the <strong>Sources</strong> tab to see the button.)</p>

<p>Chrome's also added some other really useful breakpoint capabilities now, such as breaking on DOM changes or network events.</p>

<p>Normally I wouldn't re-answer a question, but I had the same question myself, and I found this now-wrong answer, so I figured I'd put this information in here for people who came along later in searching. :)</p>
","4587491"
"onclick open window and specific size","242763","","<p>I have a link like this:</p>

<pre><code>&lt;a href=""/index2.php?option=com_jumi&amp;amp;fileid=3&amp;amp;Itemid=11"" onclick=""window.open(this.href,'targetWindow','toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,')
</code></pre>

<p>I want the new opening window to open in a specific size. How do I specify the height and width?</p>
","<pre><code>&lt;a href=""/index2.php?option=com_jumi&amp;amp;fileid=3&amp;amp;Itemid=11""
   onclick=""window.open(this.href,'targetWindow',
                                   'toolbar=no,
                                    location=no,
                                    status=no,
                                    menubar=no,
                                    scrollbars=yes,
                                    resizable=yes,
                                    width=SomeSize,
                                    height=SomeSize');
 return false;""&gt;Popup link&lt;/a&gt;
</code></pre>

<p>Where width and height are pixels.</p>
","2157204"
"How to set form action through JavaScript?","242279","","<p>I have an HTML form whose action should be set dynamically through JavaScript. How do I do it? Here is what I am trying to achieve:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
function get_action() { // inside script tags
 return form_action;
 }
&lt;/script&gt;

&lt;form action=get_action()&gt;
...
&lt;/form&gt;
</code></pre>
","<p>You cannot invoke JavaScript functions in standard HTML attributes other than <code>onXXX</code>. Just assign it during window onload.</p>

<pre><code>&lt;script type=""text/javascript""&gt;
    window.onload = function() {
        document.myform.action = get_action();
    }

    function get_action() {
        return form_action;
    }
&lt;/script&gt;

&lt;form name=""myform""&gt;
    ...
&lt;/form&gt;
</code></pre>

<p>You see that I've given the form a <code>name</code>, so that it's easily accessible in <code>document</code>.</p>

<p>Alternatively, you can also do it during <code>submit</code> event:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
    function get_action(form) {
        form.action = form_action;
    }
&lt;/script&gt;

&lt;form onsubmit=""get_action(this);""&gt;
    ...
&lt;/form&gt;
</code></pre>
","2701086"
"Clearing all cookies with JavaScript","242182","","<p>How do you delete all the cookies for the current domain using JavaScript?</p>
","<pre><code>function deleteAllCookies() {
    var cookies = document.cookie.split("";"");

    for (var i = 0; i &lt; cookies.length; i++) {
        var cookie = cookies[i];
        var eqPos = cookie.indexOf(""="");
        var name = eqPos &gt; -1 ? cookie.substr(0, eqPos) : cookie;
        document.cookie = name + ""=;expires=Thu, 01 Jan 1970 00:00:00 GMT"";
    }
}
</code></pre>

<p>Note that this code has two limitations:</p>

<ul>
<li>It will not delete cookies with <code>HttpOnly</code> flag set, as the <code>HttpOnly</code> flag disables Javascript's access to the cookie.</li>
<li>It will not delete cookies that have been set with a <code>Path</code> value. (This is despite the fact that those cookies will appear in <code>document.cookie</code>, but you can't delete it without specifying the same <code>Path</code> value with which it was set.)</li>
</ul>
","179514"
"How can I shuffle an array?","242137","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/2450954/how-to-randomize-a-javascript-array"">How to randomize a javascript array?</a>  </p>
</blockquote>



<p>I want to shuffle an array of elements in JavaScript like these:</p>

<pre><code>[0, 3, 3] -&gt; [3, 0, 3]
[9, 3, 6, 0, 6] -&gt; [0, 3, 6, 9, 6]
[3, 3, 6, 0, 6] -&gt; [0, 3, 6, 3, 6]
</code></pre>
","<p>Use <a href=""https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm"" rel=""noreferrer"">the modern version of the Fisher–Yates shuffle algorithm</a>:</p>

<pre><code>/**
 * Shuffles array in place.
 * @param {Array} a items An array containing the items.
 */
function shuffle(a) {
    var j, x, i;
    for (i = a.length - 1; i &gt; 0; i--) {
        j = Math.floor(Math.random() * (i + 1));
        x = a[i];
        a[i] = a[j];
        a[j] = x;
    }
}
</code></pre>

<h2>ES2015 (ES6) version</h2>

<pre><code>/**
 * Shuffles array in place. ES6 version
 * @param {Array} a items An array containing the items.
 */
function shuffle(a) {
    for (let i = a.length - 1; i &gt; 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [a[i], a[j]] = [a[j], a[i]];
    }
    return a;
}
</code></pre>

<p>Note however, that swapping variables with <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Swapping_variables"" rel=""noreferrer"">destructuring assignment</a> causes significant performance loss, as of October 2017.</p>

<h2>Use</h2>

<pre><code>var myArray = ['1','2','3','4','5','6','7','8','9'];
shuffle(myArray);
</code></pre>
","6274381"
"How to escape a JSON string containing newline characters using JavaScript?","242133","","<p>I have to form a JSON string in which a value is having new line character. This has to be escaped and then posted using AJAX call. Can any one suggest a way to escape the string with JavaScript. I am not using jQuery.</p>
","<p>Take your JSON and <code>.stringify()</code> it. Then use the <code>.replace()</code> method and replace all occurrences of <code>\n</code> with <code>\\n</code>. </p>

<p>EDIT:</p>

<p>As far as I know of, there are no well-known JS libraries for escaping all special characters in a string. But, you could chain the <code>.replace()</code> method and replace all of the special characters like this:</p>

<pre><code>var myJSONString = JSON.stringify(myJSON);
var myEscapedJSONString = myJSONString.replace(/\\n/g, ""\\n"")
                                      .replace(/\\'/g, ""\\'"")
                                      .replace(/\\""/g, '\\""')
                                      .replace(/\\&amp;/g, ""\\&amp;"")
                                      .replace(/\\r/g, ""\\r"")
                                      .replace(/\\t/g, ""\\t"")
                                      .replace(/\\b/g, ""\\b"")
                                      .replace(/\\f/g, ""\\f"");
// myEscapedJSONString is now ready to be POST'ed to the server. 
</code></pre>

<p>But that's pretty nasty, isn't it? Enter the beauty of functions, in that they allow you to break code into pieces and keep the main flow of your script clean, and free of 8 chained <code>.replace()</code> calls. So let's put that functionality into a function called, <code>escapeSpecialChars()</code>. Let's go ahead and attach it to the <code>prototype chain</code> of the <code>String</code> object, so we can call <code>escapeSpecialChars()</code> directly on String objects.</p>

<p>Like so:</p>

<pre><code>String.prototype.escapeSpecialChars = function() {
    return this.replace(/\\n/g, ""\\n"")
               .replace(/\\'/g, ""\\'"")
               .replace(/\\""/g, '\\""')
               .replace(/\\&amp;/g, ""\\&amp;"")
               .replace(/\\r/g, ""\\r"")
               .replace(/\\t/g, ""\\t"")
               .replace(/\\b/g, ""\\b"")
               .replace(/\\f/g, ""\\f"");
};
</code></pre>

<p>Once we have defined that function, the main body of our code is as simple as this:</p>

<pre><code>var myJSONString = JSON.stringify(myJSON);
var myEscapedJSONString = myJSONString.escapeSpecialChars();
// myEscapedJSONString is now ready to be POST'ed to the server
</code></pre>
","4253415"
"Sound effects in JavaScript / HTML5","242101","","<p>I'm using HTML5 to program games; the obstacle I've run into now is how to play sound effects.</p>

<p>The specific requirements are few in number:</p>

<ul>
<li>Play and mix multiple sounds,</li>
<li>Play the same sample multiple times, possibly overlapping playbacks,</li>
<li>Interrupt playback of a sample at any point,</li>
<li>Preferably play WAV files containing (low quality) raw PCM, but I can convert these, of course.</li>
</ul>

<p>My first approach was to use the HTML5 <code>&lt;audio&gt;</code> element and define all sound effects in my page. Firefox plays the WAV files just peachy, but calling <code>#play</code> multiple times doesn't really play the sample multiple times. From my understanding of the HTML5 spec, the <code>&lt;audio&gt;</code> element also tracks playback state, so that explains why.</p>

<p>My immediate thought was to clone the audio elements, so I created the following tiny JavaScript library to do that for me (depends on jQuery):</p>

<pre><code>var Snd = {
  init: function() {
    $(""audio"").each(function() {
      var src = this.getAttribute('src');
      if (src.substring(0, 4) !== ""snd/"") { return; }
      // Cut out the basename (strip directory and extension)
      var name = src.substring(4, src.length - 4);
      // Create the helper function, which clones the audio object and plays it
      var Constructor = function() {};
      Constructor.prototype = this;
      Snd[name] = function() {
        var clone = new Constructor();
        clone.play();
        // Return the cloned element, so the caller can interrupt the sound effect
        return clone;
      };
    });
  }
};
</code></pre>

<p>So now I can do <code>Snd.boom();</code> from the Firebug console and play <code>snd/boom.wav</code>, but I still can't play the same sample multiple times. It seems that the <code>&lt;audio&gt;</code> element is really more of a streaming feature rather than something to play sound effects with.</p>

<p>Is there a clever way to make this happen that I'm missing, preferably using only HTML5 and JavaScript?</p>

<p>I should also mention that, my test environment is Firefox 3.5 on Ubuntu 9.10. The other browsers I've tried - Opera, Midori, Chromium, Epiphany - produced varying results. Some don't play anything, and some throw exceptions.</p>
","<h1>HTML5 <code>Audio</code> objects</h1>

<p>You don't need to bother with <code>&lt;audio&gt;</code> elements. HTML 5 lets you access <a href=""http://dev.w3.org/html5/spec/video.html#htmlmediaelement"" rel=""noreferrer""><code>Audio</code> objects</a> directly:</p>

<pre><code>var snd = new Audio(""file.wav""); // buffers automatically when created
snd.play();
</code></pre>

<p>There's no support for mixing in current version of the spec. </p>

<p>To play same sound multiple times, create multiple instances of the <code>Audio</code> object. You could also set <code>snd.currentTime=0</code> on the object after it finishes playing.</p>

<hr>

<p>Since the JS constructor doesn't support fallback <code>&lt;source&gt;</code> elements, you should use </p>

<pre><code>(new Audio()).canPlayType(""audio/ogg; codecs=vorbis"")
</code></pre>

<p>to test whether the browser supports Ogg Vorbis.</p>

<hr>

<p>If you're writing a game or a music app (more than just a player), you'll want to use <a href=""https://www.w3.org/TR/webaudio/"" rel=""noreferrer"">more advanced Web Audio API</a>, which is now <a href=""http://caniuse.com/audio-api"" rel=""noreferrer"">supported by most browsers</a>.</p>
","1934325"
"In Angular, I need to search objects in an array","241996","","<p>In Angular, I have in scope a object which returns lots of objects. Each has an ID (this is stored in a flat file so no DB, and I seem to not be able to user <code>ng-resource</code>)</p>

<p>In my controller: </p>

<pre><code>$scope.fish = [
    {category:'freshwater', id:'1', name: 'trout', more:'false'},
    {category:'freshwater', id:'2', name:'bass', more:'false'}
];
</code></pre>

<p>In my view I have additional information about the fish hidden by default with the <code>ng-show</code> more, but when I click the simple show more tab, I would like to call the function <code>showdetails(fish.fish_id)</code>. 
My function would look something like: </p>

<pre><code>$scope.showdetails = function(fish_id) {  
    var fish = $scope.fish.get({id: fish_id});
    fish.more = true;
}
</code></pre>

<p>Now in the the view the more details shows up. However after searching through the documentation I can't figure out how to search that <code>fish</code> array. </p>

<p>So how do I query the array? And in console how do I call debugger so that I have the <code>$scope</code> object to play with? </p>
","<p>I know if that can help you a bit.</p>

<p>Here is something I tried to simulate for you.</p>

<p>Checkout the jsFiddle ;) </p>

<p><a href=""http://jsfiddle.net/migontech/gbW8Z/5/"" rel=""noreferrer"">http://jsfiddle.net/migontech/gbW8Z/5/</a></p>

<p>Created a filter that you also can use in 'ng-repeat'</p>

<pre><code>app.filter('getById', function() {
  return function(input, id) {
    var i=0, len=input.length;
    for (; i&lt;len; i++) {
      if (+input[i].id == +id) {
        return input[i];
      }
    }
    return null;
  }
});
</code></pre>

<p>Usage in controller:</p>

<pre><code>app.controller('SomeController', ['$scope', '$filter', function($scope, $filter) {
     $scope.fish = [{category:'freshwater', id:'1', name: 'trout', more:'false'},  {category:'freshwater', id:'2', name:'bass', more:'false'}]

     $scope.showdetails = function(fish_id){
         var found = $filter('getById')($scope.fish, fish_id);
         console.log(found);
         $scope.selected = JSON.stringify(found);
     }
}]);
</code></pre>

<p>If there are any questions just let me know.</p>
","15610996"
"Javascript call() & apply() vs bind()?","241944","","<p>I already know that <code>apply</code> and <code>call</code> are similar functions which set<code>this</code> (context of a function).</p>

<p>The difference is with the way we send the arguments (manual vs array)</p>

<p><strong>Question:</strong></p>

<p>But when should I use the  <code>bind()</code> method ?</p>

<pre><code>var obj = {
  x: 81,
  getX: function() {
    return this.x;
  }
};

alert(obj.getX.bind(obj)());
alert(obj.getX.call(obj));
alert(obj.getX.apply(obj));
</code></pre>

<p><a href=""http://jsbin.com/awewof/1/edit"">jsbin</a></p>
","<p>Use <code>.bind()</code> when you want that function to later be called with a certain context, useful in events. Use <code>.call()</code> or <code>.apply()</code> when you want to invoke the function immediately, and modify the context.</p>

<p>Call/apply call the function immediately, whereas <code>bind</code> returns a function that, when later executed, will have the correct context set for calling the original function. This way you can maintain context in async callbacks and events.</p>

<p>I do this a lot:</p>

<pre><code>function MyObject(element) {
    this.elm = element;

    element.addEventListener('click', this.onClick.bind(this), false);
};

MyObject.prototype.onClick = function(e) {
     var t=this;  //do something with [t]...
    //without bind the context of this function wouldn't be a MyObject
    //instance as you would normally expect.
};
</code></pre>

<p>I use it extensively in Node.js for async callbacks that I want to pass a member method for, but still want the context to be the instance that started the async action.</p>

<p>A simple, naive implementation of bind would be like:</p>

<pre><code>Function.prototype.bind = function(ctx) {
    var fn = this;
    return function() {
        fn.apply(ctx, arguments);
    };
};
</code></pre>

<p>There is more to it (like passing other args), but you can read more about it and see the real implementation <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind"" rel=""noreferrer"">on the MDN</a>.</p>

<p>Hope this helps.</p>
","15455043"
"Pass a PHP array to a JavaScript function","241871","","<p>I am trying to get a PHP array variable into a JavaScript variable.</p>

<p>This is my code:</p>

<pre><code>&lt;html&gt;
    &lt;head&gt;
        &lt;script type=""text/javascript""&gt;
              function drawChart(row,day,week,month,date)
              {
                  // Some code...
              }
        &lt;/script&gt;
    &lt;/head&gt;

    &lt;body&gt;
        &lt;?php
            for($counter = 0; $counter&lt;count($au); $counter++)
            {
                switch($au[$counter]-&gt;id)
                {
                    case pageID.'/insights/page_active_users/day':
                        $day[] = $au[$counter]-&gt;value;
                    break;
                    case pageID.'/insights/page_active_users/week':
                        $week[] = $au[$counter]-&gt;value;
                    break;
                    case pageID.'/insights/page_active_users/month':
                        $month[] = $au[$counter]-&gt;value;
                    break;
                }
            }
        ?&gt;
        &lt;script&gt;
            drawChart(600/50, '&lt;?php echo $day; ?&gt;', '&lt;?php echo $week; ?&gt;', '&lt;?php echo $month; ?&gt;', '&lt;?php echo createDatesArray(cal_days_in_month(CAL_GREGORIAN, date('m',strtotime('-1 day')), date('Y',strtotime('-1 day')))); ?&gt;');
        &lt;/script&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>I can't get value of the PHP array.</p>

<p>How do I fix this problem?</p>
","<p>In the following example you have an PHP array, then firstly create a JavaScript array by a PHP array:</p>

<pre><code>&lt;script type=""javascript""&gt;
    day = new Array(&lt;?php echo implode(',', $day); ?&gt;);
    week = new Array(&lt;?php echo implode(',',$week); ?&gt;);
    month = new Array(&lt;?php echo implode(',',$month); ?&gt;);

    &lt;!--  Then pass it to the JavaScript function:   --&gt;

    drawChart(&lt;?php echo count($day); ?&gt;, day, week, month);
&lt;/script&gt;
</code></pre>
","5051006"
"How to reload/refresh jQuery dataTable?","241582","","<p>I am trying to implement functionality whereby clicking a button on the screen will cause my <a href=""http://datatables.net"" rel=""noreferrer"">jQuery dataTable</a> to refresh (as the server-side data source may have changed since the dataTable was created).</p>

<p>Here's what I have:</p>

<pre><code>$(document).ready(function() {
    $(""#my-button"").click(function() {
        $(""#my-datatable"").dataTable().fnReloadAjax();
    });
});
</code></pre>

<p>But when I run this, it does nothing. What's the proper way to refresh the dataTable when the button is clicked? Thanks in advance!</p>
","<p>You can try the following:</p>

<pre><code>function InitOverviewDataTable()
{
  oOverviewTable =$('#HelpdeskOverview').dataTable(
  {
    ""bPaginate"": true,
    ""bJQueryUI"": true,  // ThemeRoller-stöd
    ""bLengthChange"": false,
    ""bFilter"": false,
    ""bSort"": false,
    ""bInfo"": true,
    ""bAutoWidth"": true,
    ""bProcessing"": true,
    ""iDisplayLength"": 10,
    ""sAjaxSource"": '/Helpdesk/ActiveCases/noacceptancetest'
  });
}

function RefreshTable(tableId, urlData)
{
  $.getJSON(urlData, null, function( json )
  {
    table = $(tableId).dataTable();
    oSettings = table.fnSettings();

    table.fnClearTable(this);

    for (var i=0; i&lt;json.aaData.length; i++)
    {
      table.oApi._fnAddData(oSettings, json.aaData[i]);
    }

    oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
    table.fnDraw();
  });
}

function AutoReload()
{
  RefreshTable('#HelpdeskOverview', '/Helpdesk/ActiveCases/noacceptancetest');

  setTimeout(function(){AutoReload();}, 30000);
}

$(document).ready(function () {
  InitOverviewDataTable();
  setTimeout(function(){AutoReload();}, 30000);
});
</code></pre>

<p><a href=""http://www.meadow.se/wordpress/?p=536"" rel=""noreferrer"">http://www.meadow.se/wordpress/?p=536</a></p>
","12934444"
"Call ASP.NET function from JavaScript?","241365","","<p>I'm writing a web page in ASP.NET. I have some JavaScript code, and I have a submit button with a click event.</p>

<p>Is it possible to call a method I created in ASP with JavaScript's click event?</p>
","<p>Well, if you don't want to do it using Ajax or any other way and just want a normal ASP.NET postback to happen, here is how you do it (without using any other libraries):</p>

<p><em>It is a little tricky though... :)</em></p>

<p>i. In your code file (assuming you are using C# and .NET 2.0 or later) add the following Interface to your Page class to make it look like</p>

<pre><code>public partial class Default : System.Web.UI.Page, IPostBackEventHandler{}
</code></pre>

<p>ii. This should add (using <kbd>Tab</kbd>-<kbd>Tab</kbd>) this function to your code file:</p>

<pre><code>public void RaisePostBackEvent(string eventArgument) { }
</code></pre>

<p>iii. In your onclick event in JavaScript, write the following code:</p>

<pre><code>var pageId = '&lt;%=  Page.ClientID %&gt;';
__doPostBack(pageId, argumentString);
</code></pre>

<p>This will call the 'RaisePostBackEvent' method in your code file with the 'eventArgument' as the 'argumentString' you passed from the JavaScript. Now, you can call any other event you like.</p>

<p>P.S: That is 'underscore-underscore-doPostBack' ... And, there should be no space in that sequence... Somehow the WMD does not allow me to write to underscores followed by a character!</p>
","3777"
"Count immediate child div elements using jQuery","241279","","<p>I have the following HTML node structure:</p>

<pre><code>&lt;div id=""foo""&gt;
  &lt;div id=""bar""&gt;&lt;/div&gt;
  &lt;div id=""baz""&gt;
    &lt;div id=""biz""&gt;&lt;/div&gt;
  &lt;/div&gt;
  &lt;span&gt;&lt;/span&gt;
&lt;/div&gt;
</code></pre>

<p>How do I count the number of immediate children of <code>foo</code>, that are of type <code>div</code>? In the example above, the result should be two (<code>bar</code> and <code>baz</code>).</p>
","<pre><code>$(""#foo &gt; div"").length
</code></pre>

<p>Direct children of the element with the id 'foo' which are divs. Then retrieving the size of the wrapped set produced.</p>
","250694"
"Get content of a DIV using JavaScript","241228","","<p>I have two DIV's called DIV1 and DIV2 and DIV1 consists of dynamic content and DIV2 is empty. I need content of DIV1 to be displayed in DIV2. How can I do it.</p>

<p>I coded in below manner which is not working. Anybody please correct it.</p>

<pre><code>&lt;script type=""text/javascript""&gt;

   var MyDiv1 = Document.getElementById('DIV1');
   var MyDiv2 = Document.getElementById('Div2');
   MyDiv2.innerHTML = MyDiv2; 

&lt;/script&gt;
&lt;body&gt;
&lt;div id=""DIV1""&gt;
 // Some content goes here.
&lt;/div&gt;

&lt;div id=""DIV2""&gt;
&lt;/div&gt;
&lt;/body&gt;
</code></pre>
","<p>(1) Your <code>&lt;script&gt;</code> tag should be placed before the closing <code>&lt;/body&gt;</code> tag. Your JavaScript is trying to manipulate HTML elements that haven't been loaded into the DOM yet.<br />
(2) Your assignment of HTML content looks jumbled.<br />
(3) Be consistent with the case in your element ID, i.e. 'DIV2' vs 'Div2'<br />
(4) User lower case for 'document' object (credit: ThatOtherPerson)</p>

<pre><code>&lt;body&gt;
&lt;div id=""DIV1""&gt;
 // Some content goes here.
&lt;/div&gt;

&lt;div id=""DIV2""&gt;
&lt;/div&gt;
&lt;script type=""text/javascript""&gt;

   var MyDiv1 = document.getElementById('DIV1');
   var MyDiv2 = document.getElementById('DIV2');
   MyDiv2.innerHTML = MyDiv1.innerHTML;

&lt;/script&gt;
&lt;/body&gt;
</code></pre>
","8647266"